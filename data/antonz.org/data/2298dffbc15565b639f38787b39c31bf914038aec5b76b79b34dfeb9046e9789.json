{
  "Source": "antonz.org",
  "Title": "How to make an awesome Python package",
  "Link": "https://antonz.org/python-packaging/",
  "Content": "\u003carticle class=\"post\"\u003e\u003cdiv class=\"row\"\u003e\u003cdiv class=\"col-xs-12 col-md-10 article\"\u003e\u003cheader\u003e\u003ch1\u003eHow to make an awesome Python package\u003c/h1\u003e\u003c/header\u003e\u003cp\u003eIf you are like me, every once in a while you write a useful python utility and want to share it with your colleagues. The best way to do this is to make a package: it easy to install and saves from copy-pasting.\u003c/p\u003e\u003cp\u003eIf you are like me, you might be thinking that creating packages is a real headache. Well, that\u0026#39;s not the case anymore. And I am going to prove it with this step-by-step guide. Just three main steps (and a bunch of optional ones) accompanied by few GitHub links. See for yourself:\u003c/p\u003e\u003ch2 id=\"1-stub\"\u003e1. Stub\u003c/h2\u003e\u003cp\u003eWe will create \u003ccode\u003epodsearch\u003c/code\u003e - a utility that searches for podcasts in iTunes. Let\u0026#39;s create a directory and a virtual environment:\u003c/p\u003e\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e$ mkdir podsearch\n$ cd podsearch\n$ python3 -m venv env\n$ . env/bin/activate\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eDefine a minimal package structure:\u003c/p\u003e\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e.\n├── .gitignore\n└── podsearch\n    └── __init__.py\n\u003c/code\u003e\u003c/pre\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"\u003e\u003ccode class=\"language-python\" data-lang=\"python\"\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#c41a16\"\u003e\u0026#34;\u0026#34;\u0026#34;Let\u0026#39;s find some podcasts!\u0026#34;\u0026#34;\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e \u003cspan style=\"color:#000\"\u003e__version__\u003c/span\u003e \u003cspan style=\"color:#000\"\u003e=\u003c/span\u003e \u003cspan style=\"color:#c41a16\"\u003e\u0026#34;0.1.0\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e \u003cspan style=\"color:#a90d91\"\u003edef\u003c/span\u003e \u003cspan style=\"color:#000\"\u003esearch\u003c/span\u003e(\u003cspan style=\"color:#000\"\u003ename\u003c/span\u003e, \u003cspan style=\"color:#000\"\u003ecount\u003c/span\u003e\u003cspan style=\"color:#000\"\u003e=\u003c/span\u003e\u003cspan style=\"color:#1c01ce\"\u003e5\u003c/span\u003e):\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e     \u003cspan style=\"color:#c41a16\"\u003e\u0026#34;\u0026#34;\u0026#34;Search podcast by name.\u0026#34;\u0026#34;\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e     \u003cspan style=\"color:#a90d91\"\u003eraise\u003c/span\u003e \u003cspan style=\"color:#000\"\u003eNotImplementedError\u003c/span\u003e()\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"2-test-package\"\u003e2. Test package\u003c/h2\u003e\u003cp\u003eCreating a package in Python used to be a troublesome task. Fortunately, nowadays there is a great little \u003ca href=\"https://flit.readthedocs.io/en/latest/\"\u003eflit\u003c/a\u003e utility which simplifies everything. Let\u0026#39;s install it:\u003c/p\u003e\u003cpre tabindex=\"0\"\u003e\u003ccode\u003epip install flit\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eAnd create package description:\u003c/p\u003e\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e$ flit init\nModule name [podsearch]:\nAuthor [Anton Zhiyanov]:\nAuthor email [m@antonz.org]:\nHome page [https://github.com/nalgeon/podsearch-py]:\nChoose a license (see http://choosealicense.com/ for more info)\n1. MIT - simple and permissive\n2. Apache - explicitly grants patent rights\n3. GPL - ensures that code based on this is shared with the same terms\n4. Skip - choose a license later\nEnter 1-4 [1]: 1\n\nWritten pyproject.toml; edit that file to add optional extra info.\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003e\u003ca href=\"https://github.com/nalgeon/podsearch-py/blob/main/pyproject.toml\"\u003epyproject.toml\u003c/a\u003e\u003c/p\u003e\u003cp\u003eFlit has created \u003ccode\u003epyproject.toml\u003c/code\u003e - the project metadata file. It already has everything you need to publish the package to the public repository - PyPI.\u003c/p\u003e\u003cp\u003eSign up for \u003ca href=\"https://test.pypi.org/\"\u003eTestPyPi\u003c/a\u003e (test repository) and \u003ca href=\"http://pypi.org/\"\u003ePyPI\u003c/a\u003e (the main one). They are completely independent, so you will need two accounts.\u003c/p\u003e\u003cp\u003eSetup access to repositories in the \u003ccode\u003e~/.pypirc\u003c/code\u003e:\u003c/p\u003e\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e[distutils]\nindex-servers =\n  pypi\n  pypitest\n\n[pypi]\nusername: nalgeon  # replace with your PyPI username\n\n[pypitest]\nrepository: https://test.pypi.org/legacy/\nusername: nalgeon  # replace with your TestPyPI username\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eAnd publish the package to the test repository:\u003c/p\u003e\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e$ flit publish --repository pypitest\nFound 4 files tracked in git\n...\nPackage is at https://test.pypi.org/project/podsearch/\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eDone! The package is available on \u003ca href=\"https://test.pypi.org/project/podsearch/\"\u003eTestPyPi\u003c/a\u003e.\u003c/p\u003e\u003ch2 id=\"3-public-package\"\u003e3. Public package\u003c/h2\u003e\u003cp\u003eLet\u0026#39;s improve the code so that it actually searches for podcasts:\u003c/p\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"\u003e\u003ccode class=\"language-python\" data-lang=\"python\"\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#177500\"\u003e# ...\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#000\"\u003eSEARCH_URL\u003c/span\u003e \u003cspan style=\"color:#000\"\u003e=\u003c/span\u003e \u003cspan style=\"color:#c41a16\"\u003e\u0026#34;https://itunes.apple.com/search\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#000\"\u003e@dataclass\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#a90d91\"\u003eclass\u003c/span\u003e \u003cspan style=\"color:#3f6e75\"\u003ePodcast\u003c/span\u003e:\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#c41a16\"\u003e\u0026#34;\u0026#34;\u0026#34;Podcast metadata.\u0026#34;\u0026#34;\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#a90d91\"\u003eid\u003c/span\u003e: \u003cspan style=\"color:#a90d91\"\u003estr\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#000\"\u003ename\u003c/span\u003e: \u003cspan style=\"color:#a90d91\"\u003estr\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#000\"\u003eauthor\u003c/span\u003e: \u003cspan style=\"color:#a90d91\"\u003estr\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#000\"\u003eurl\u003c/span\u003e: \u003cspan style=\"color:#a90d91\"\u003estr\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#000\"\u003efeed\u003c/span\u003e: \u003cspan style=\"color:#000\"\u003eOptional\u003c/span\u003e[\u003cspan style=\"color:#a90d91\"\u003estr\u003c/span\u003e] \u003cspan style=\"color:#000\"\u003e=\u003c/span\u003e \u003cspan style=\"color:#a90d91\"\u003eNone\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#000\"\u003ecategory\u003c/span\u003e: \u003cspan style=\"color:#000\"\u003eOptional\u003c/span\u003e[\u003cspan style=\"color:#a90d91\"\u003estr\u003c/span\u003e] \u003cspan style=\"color:#000\"\u003e=\u003c/span\u003e \u003cspan style=\"color:#a90d91\"\u003eNone\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#000\"\u003eimage\u003c/span\u003e: \u003cspan style=\"color:#000\"\u003eOptional\u003c/span\u003e[\u003cspan style=\"color:#a90d91\"\u003estr\u003c/span\u003e] \u003cspan style=\"color:#000\"\u003e=\u003c/span\u003e \u003cspan style=\"color:#a90d91\"\u003eNone\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#a90d91\"\u003edef\u003c/span\u003e \u003cspan style=\"color:#000\"\u003esearch\u003c/span\u003e(\u003cspan style=\"color:#000\"\u003ename\u003c/span\u003e: \u003cspan style=\"color:#a90d91\"\u003estr\u003c/span\u003e, \u003cspan style=\"color:#000\"\u003elimit\u003c/span\u003e: \u003cspan style=\"color:#a90d91\"\u003eint\u003c/span\u003e \u003cspan style=\"color:#000\"\u003e=\u003c/span\u003e \u003cspan style=\"color:#1c01ce\"\u003e5\u003c/span\u003e) \u003cspan style=\"color:#000\"\u003e-\u0026gt;\u003c/span\u003e \u003cspan style=\"color:#000\"\u003eList\u003c/span\u003e[\u003cspan style=\"color:#000\"\u003ePodcast\u003c/span\u003e]:\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#c41a16\"\u003e\u0026#34;\u0026#34;\u0026#34;Search podcast by name.\u0026#34;\u0026#34;\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#000\"\u003eparams\u003c/span\u003e \u003cspan style=\"color:#000\"\u003e=\u003c/span\u003e {\u003cspan style=\"color:#c41a16\"\u003e\u0026#34;term\u0026#34;\u003c/span\u003e: \u003cspan style=\"color:#000\"\u003ename\u003c/span\u003e, \u003cspan style=\"color:#c41a16\"\u003e\u0026#34;limit\u0026#34;\u003c/span\u003e: \u003cspan style=\"color:#000\"\u003elimit\u003c/span\u003e, \u003cspan style=\"color:#c41a16\"\u003e\u0026#34;media\u0026#34;\u003c/span\u003e: \u003cspan style=\"color:#c41a16\"\u003e\u0026#34;podcast\u0026#34;\u003c/span\u003e}\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#000\"\u003eresponse\u003c/span\u003e \u003cspan style=\"color:#000\"\u003e=\u003c/span\u003e \u003cspan style=\"color:#000\"\u003e_get\u003c/span\u003e(\u003cspan style=\"color:#000\"\u003eurl\u003c/span\u003e\u003cspan style=\"color:#000\"\u003e=\u003c/span\u003e\u003cspan style=\"color:#000\"\u003eSEARCH_URL\u003c/span\u003e, \u003cspan style=\"color:#000\"\u003eparams\u003c/span\u003e\u003cspan style=\"color:#000\"\u003e=\u003c/span\u003e\u003cspan style=\"color:#000\"\u003eparams\u003c/span\u003e)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#a90d91\"\u003ereturn\u003c/span\u003e \u003cspan style=\"color:#000\"\u003e_parse\u003c/span\u003e(\u003cspan style=\"color:#000\"\u003eresponse\u003c/span\u003e)\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eAnd publish to the main repository - PyPI. Perform this step only after your package has working code that does something useful. Do not publish non-working packages and stubs.\u003c/p\u003e\u003cpre tabindex=\"0\"\u003e\u003ccode\u003eflit publish\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eDone! Time to \u003ca href=\"https://pypi.org/project/podsearch/\"\u003eshare it with colleagues\u003c/a\u003e.\u003c/p\u003e\u003cp\u003eTo make the package a pleasure to use, I recommend that you follow a few more steps.\u003c/p\u003e\u003ch2 id=\"a-readme-and-changelog\"\u003eA. Readme and changelog\u003c/h2\u003e\u003cp\u003eNo one likes to write documentation. But without docs, it is unlikely that people will want to install your package, so let\u0026#39;s add \u003ccode\u003eREADME.md\u003c/code\u003e and \u003ccode\u003eCHANGELOG.md\u003c/code\u003e.\u003c/p\u003e\u003cul\u003e\u003cli\u003e\u003ca href=\"https://github.com/nalgeon/podsearch-py/blob/main/README.md\"\u003eREADME.md\u003c/a\u003e\u003c/li\u003e\u003cli\u003e\u003ca href=\"https://github.com/nalgeon/podsearch-py/blob/main/CHANGELOG.md\"\u003eCHANGELOG.md\u003c/a\u003e\u003c/li\u003e\u003c/ul\u003e\u003cp\u003eAdd readme to the \u003ccode\u003epyproject.toml\u003c/code\u003e, so that PyPI shows it on the package page:\u003c/p\u003e\u003cpre tabindex=\"0\"\u003e\u003ccode\u003edescription-file = \u0026#34;README.md\u0026#34;\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eAlso specify the minimal supported Python version:\u003c/p\u003e\u003cpre tabindex=\"0\"\u003e\u003ccode\u003erequires-python = \u0026#34;\u0026gt;=3.7\u0026#34;\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eUpdate the version in \u003ccode\u003e__init__.py\u003c/code\u003e and publish the package via \u003ccode\u003eflit publish\u003c/code\u003e:\u003c/p\u003e\u003cp\u003e\u003cimg src=\"pypi.jpg\" alt=\"Package on PyPi\"/\u003e\u003c/p\u003e\u003cp\u003eMmm, nice.\u003c/p\u003e\u003ch2 id=\"b-linters-and-tests\"\u003eB. Linters and tests\u003c/h2\u003e\u003cp\u003eLet\u0026#39;s take care of formatting (\u003ccode\u003eblack\u003c/code\u003e), test coverage (\u003ccode\u003ecoverage\u003c/code\u003e), code quality (\u003ccode\u003eflake8\u003c/code\u003e, \u003ccode\u003epylint\u003c/code\u003e, \u003ccode\u003emccabe\u003c/code\u003e), and static analysis (\u003ccode\u003emypy\u003c/code\u003e). We will run everything through \u003ccode\u003etox\u003c/code\u003e.\u003c/p\u003e\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e$ pip install black coverage flake8 mccabe mypy pylint pytest tox\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eCreate \u003ccode\u003etox\u003c/code\u003e configuration in \u003ccode\u003etox.ini\u003c/code\u003e:\u003c/p\u003e\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e[tox]\nisolated_build = True\nenvlist = py37,py38,py39\n\n[testenv]\ndeps =\n    black\n    coverage\n    flake8\n    mccabe\n    mypy\n    pylint\n    pytest\ncommands =\n    black podsearch\n    flake8 podsearch\n    pylint podsearch\n    mypy podsearch\n    coverage erase\n    coverage run --include=podsearch/* -m pytest -ra\n    coverage report -m\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003e\u003ca href=\"https://github.com/nalgeon/podsearch-py/blob/main/tox.ini\"\u003etox.ini\u003c/a\u003e\u003c/p\u003e\u003cp\u003eAnd run all the checks:\u003c/p\u003e\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e$ tox -e py39\n...\npy39 run-test: commands[0] | black podsearch\nAll done! ✨ 🍰 ✨\n...\npy39 run-test: commands[2] | pylint podsearch\nYour code has been rated at 10.00/10 (previous run: 10.00/10, +0.00)\n...\npy39 run-test: commands[6] | coverage report -m\nTOTAL 100%\n...\npy39: commands succeeded\ncongratulations :)\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eLovely! The linters are happy, the tests passed, the coverage is 100%.\u003c/p\u003e\u003ch2 id=\"c-cloud-build\"\u003eC. Cloud build\u003c/h2\u003e\u003cp\u003eEvery solid open-source project runs cloud tests after each commit, so we will too. A nice side effect is having beautiful badges in the readme ツ\u003c/p\u003e\u003cp\u003eLet\u0026#39;s build the project with \u003ca href=\"https://github.com/features/actions\"\u003eGitHub Actions\u003c/a\u003e, check test coverage with \u003ca href=\"https://about.codecov.io/\"\u003eCodecov\u003c/a\u003e and code quality with \u003ca href=\"https://codeclimate.com/\"\u003eCode Climate\u003c/a\u003e.\u003c/p\u003e\u003cp\u003eYou will have to sign up for Codecov and Code Climate (both support GitHub login) and enable package repository in the settings.\u003c/p\u003e\u003cp\u003eAfter that, add the GitHub Actions build config to \u003ccode\u003e.github/workflows/build.yml\u003c/code\u003e:\u003c/p\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"\u003e\u003ccode class=\"language-yaml\" data-lang=\"yaml\"\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#177500\"\u003e# ...\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#000\"\u003ejobs\u003c/span\u003e:\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#000\"\u003ebuild\u003c/span\u003e:\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e        \u003cspan style=\"color:#000\"\u003eruns-on\u003c/span\u003e: \u003cspan style=\"color:#1c01ce\"\u003eubuntu-latest\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e        \u003cspan style=\"color:#000\"\u003estrategy\u003c/span\u003e:\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e            \u003cspan style=\"color:#000\"\u003ematrix\u003c/span\u003e:\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e                \u003cspan style=\"color:#000\"\u003epython-version\u003c/span\u003e: [\u003cspan style=\"color:#1c01ce\"\u003e3.7\u003c/span\u003e, \u003cspan style=\"color:#1c01ce\"\u003e3.8\u003c/span\u003e, \u003cspan style=\"color:#1c01ce\"\u003e3.9\u003c/span\u003e]\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e        \u003cspan style=\"color:#000\"\u003eenv\u003c/span\u003e:\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e            \u003cspan style=\"color:#000\"\u003eUSING_COVERAGE\u003c/span\u003e: \u003cspan style=\"color:#c41a16\"\u003e\u0026#34;3.9\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e        \u003cspan style=\"color:#000\"\u003esteps\u003c/span\u003e:\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e            - \u003cspan style=\"color:#000\"\u003ename\u003c/span\u003e: \u003cspan style=\"color:#1c01ce\"\u003eCheckout sources\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e              \u003cspan style=\"color:#000\"\u003euses\u003c/span\u003e: \u003cspan style=\"color:#1c01ce\"\u003eactions/checkout@v2\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e            - \u003cspan style=\"color:#000\"\u003ename\u003c/span\u003e: \u003cspan style=\"color:#1c01ce\"\u003eSet up Python\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e              \u003cspan style=\"color:#000\"\u003euses\u003c/span\u003e: \u003cspan style=\"color:#1c01ce\"\u003eactions/setup-python@v2\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e              \u003cspan style=\"color:#000\"\u003ewith\u003c/span\u003e:\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e                  \u003cspan style=\"color:#000\"\u003epython-version\u003c/span\u003e: \u003cspan style=\"color:#1c01ce\"\u003e${{ matrix.python-version }}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e            - \u003cspan style=\"color:#000\"\u003ename\u003c/span\u003e: \u003cspan style=\"color:#1c01ce\"\u003eInstall dependencies\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e              \u003cspan style=\"color:#000\"\u003erun\u003c/span\u003e: |\u003cspan style=\"color:#c41a16\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#c41a16\"\u003e                  python -m pip install --upgrade pip\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#c41a16\"\u003e                  python -m pip install black coverage flake8 flit mccabe mypy pylint pytest tox tox-gh-actions\u003c/span\u003e                  \n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e            - \u003cspan style=\"color:#000\"\u003ename\u003c/span\u003e: \u003cspan style=\"color:#1c01ce\"\u003eRun tox\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e              \u003cspan style=\"color:#000\"\u003erun\u003c/span\u003e: |\u003cspan style=\"color:#c41a16\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#c41a16\"\u003e                  \u003c/span\u003e                  \u003cspan style=\"color:#1c01ce\"\u003epython -m tox\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e            - \u003cspan style=\"color:#000\"\u003ename\u003c/span\u003e: \u003cspan style=\"color:#1c01ce\"\u003eUpload coverage to Codecov\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e              \u003cspan style=\"color:#000\"\u003euses\u003c/span\u003e: \u003cspan style=\"color:#1c01ce\"\u003ecodecov/codecov-action@v1\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e              \u003cspan style=\"color:#000\"\u003eif\u003c/span\u003e: \u003cspan style=\"color:#1c01ce\"\u003econtains(env.USING_COVERAGE, matrix.python-version)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e              \u003cspan style=\"color:#000\"\u003ewith\u003c/span\u003e:\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e                  \u003cspan style=\"color:#000\"\u003efail_ci_if_error\u003c/span\u003e: \u003cspan style=\"color:#a90d91\"\u003etrue\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e\u003ca href=\"https://github.com/nalgeon/podsearch-py/blob/main/.github/workflows/build.yml\"\u003ebuild.yml\u003c/a\u003e\u003c/p\u003e\u003cp\u003eGitHub runs tests via \u003ccode\u003etox\u003c/code\u003e - just as we did. \u003ccode\u003etox-gh-actions\u003c/code\u003e package and \u003ccode\u003eUSING_COVERAGE\u003c/code\u003e settings ensure that \u003ccode\u003etox\u003c/code\u003e uses the same Python version as GitHub Actions themself, as required by \u003ccode\u003estrategy.matrix\u003c/code\u003e (I learned this clever trick from \u003ca href=\"https://hynek.me/articles/python-github-actions/\"\u003eHynek Schlawak\u003c/a\u003e).\u003c/p\u003e\u003cp\u003eThe last step sends test coverage to Codecov. Code Climate does not need a separate step - it spots repository changes automatically.\u003c/p\u003e\u003cp\u003eNow commit, push, and enjoy the result in a minute. And let everyone enjoy as well - add badges to \u003ccode\u003eREADME.md\u003c/code\u003e:\u003c/p\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"\u003e\u003ccode class=\"language-markdown\" data-lang=\"markdown\"\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e[![PyPI Version][pypi-image]][pypi-url]\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e[![Build Status][build-image]][build-url]\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e[![Code Coverage][coverage-image]][coverage-url]\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e[![Code Quality][quality-image]][quality-url]\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e...\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#177500\"\u003e\u0026lt;!-- Badges --\u0026gt;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e[pypi-image]: https://img.shields.io/pypi/v/podsearch\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e[pypi-url]: https://pypi.org/project/podsearch/\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e[build-image]: https://github.com/nalgeon/podsearch-py/actions/workflows/build.yml/badge.svg\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e[build-url]: https://github.com/nalgeon/podsearch-py/actions/workflows/build.yml\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e[coverage-image]: https://codecov.io/gh/nalgeon/podsearch-py/branch/main/graph/badge.svg\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e[coverage-url]: https://codecov.io/gh/nalgeon/podsearch-py\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e[quality-image]: https://api.codeclimate.com/v1/badges/3130fa0ba3b7993fbf0a/maintainability\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e[quality-url]: https://codeclimate.com/github/nalgeon/podsearch-py\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eAren\u0026#39;t they cute?\u003c/p\u003e\u003cdiv class=\"row\"\u003e\u003cdiv class=\"col-xs-12 col-sm-8\"\u003e\u003cfigure\u003e\u003cimg class=\"img-bordered-thin\" alt=\"Readme badges\" src=\"badges.png\" width=\"400\"/\u003e\u003c/figure\u003e\u003c/div\u003e\u003c/div\u003e\u003ch2 id=\"d-task-automation\"\u003eD. Task automation\u003c/h2\u003e\u003cp\u003e\u003ccode\u003etox\u003c/code\u003e is fine, but not very handy for development. It\u0026#39;s faster to run individual commands like \u003ccode\u003epylint\u003c/code\u003e, \u003ccode\u003ecoverage\u003c/code\u003e etc. But they are quite verbose, so we\u0026#39;ll automate the boring stuff.\u003c/p\u003e\u003cp\u003eLet\u0026#39;s create short aliases for frequent actions with \u003ca href=\"/makefile-automation/\"\u003eMakefile\u003c/a\u003e:\u003c/p\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"\u003e\u003ccode class=\"language-Makefile\" data-lang=\"Makefile\"\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#000\"\u003e.DEFAULT_GOAL\u003c/span\u003e \u003cspan style=\"color:#000\"\u003e:=\u003c/span\u003e \u003cspan style=\"color:#a90d91\"\u003ehelp\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#000\"\u003e.PHONY\u003c/span\u003e\u003cspan style=\"color:#000\"\u003e:\u003c/span\u003e \u003cspan style=\"color:#000\"\u003ecoverage\u003c/span\u003e \u003cspan style=\"color:#000\"\u003edeps\u003c/span\u003e \u003cspan style=\"color:#000\"\u003ehelp\u003c/span\u003e \u003cspan style=\"color:#000\"\u003elint\u003c/span\u003e \u003cspan style=\"color:#000\"\u003epush\u003c/span\u003e \u003cspan style=\"color:#000\"\u003etest\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#000\"\u003ecoverage\u003c/span\u003e\u003cspan style=\"color:#000\"\u003e:\u003c/span\u003e  \u003cspan style=\"color:#177500\"\u003e## Run tests with coverage\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#177500\"\u003e\u003c/span\u003e\tcoverage erase\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\tcoverage run --include\u003cspan style=\"color:#000\"\u003e=\u003c/span\u003epodsearch/* -m pytest -ra\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\tcoverage report -m\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#000\"\u003edeps\u003c/span\u003e\u003cspan style=\"color:#000\"\u003e:\u003c/span\u003e  \u003cspan style=\"color:#177500\"\u003e## Install dependencies\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#177500\"\u003e\u003c/span\u003e\tpip install black coverage flake8 mccabe mypy pylint pytest tox\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#000\"\u003elint\u003c/span\u003e\u003cspan style=\"color:#000\"\u003e:\u003c/span\u003e  \u003cspan style=\"color:#177500\"\u003e## Lint and static-check\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#177500\"\u003e\u003c/span\u003e\tflake8 podsearch\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\tpylint podsearch\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\tmypy podsearch\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#000\"\u003epush\u003c/span\u003e\u003cspan style=\"color:#000\"\u003e:\u003c/span\u003e  \u003cspan style=\"color:#177500\"\u003e## Push code with tags\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#177500\"\u003e\u003c/span\u003e\tgit push \u003cspan style=\"color:#000\"\u003e\u0026amp;\u0026amp;\u003c/span\u003e git push --tags\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#000\"\u003etest\u003c/span\u003e\u003cspan style=\"color:#000\"\u003e:\u003c/span\u003e  \u003cspan style=\"color:#177500\"\u003e## Run tests\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#177500\"\u003e\u003c/span\u003e\tpytest -ra\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e\u003ca href=\"https://github.com/nalgeon/podsearch-py/blob/main/Makefile\"\u003eMakefile\u003c/a\u003e\u003c/p\u003e\u003cp\u003eHere are our tasks:\u003c/p\u003e\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e$ make help\nUsage: make [task]\n\ntask                 help\n------               ----\ncoverage             Run tests with coverage\ndeps                 Install dependencies\nlint                 Lint and static-check\npush                 Push code with tags\ntest                 Run tests\nhelp                 Show help message\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eTo make the code more DRY, replace raw \u003ccode\u003ebuild.yml\u003c/code\u003e steps with \u003ccode\u003emake\u003c/code\u003e calls:\u003c/p\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"\u003e\u003ccode class=\"language-yaml\" data-lang=\"yaml\"\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e- \u003cspan style=\"color:#000\"\u003ename\u003c/span\u003e: \u003cspan style=\"color:#1c01ce\"\u003eInstall dependencies\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e  \u003cspan style=\"color:#000\"\u003erun\u003c/span\u003e: |\u003cspan style=\"color:#c41a16\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#c41a16\"\u003e      \u003c/span\u003e      \u003cspan style=\"color:#1c01ce\"\u003emake deps\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e- \u003cspan style=\"color:#000\"\u003ename\u003c/span\u003e: \u003cspan style=\"color:#1c01ce\"\u003eRun tox\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e  \u003cspan style=\"color:#000\"\u003erun\u003c/span\u003e: |\u003cspan style=\"color:#c41a16\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#c41a16\"\u003e      \u003c/span\u003e      \u003cspan style=\"color:#1c01ce\"\u003emake tox\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"e-cloud-publish\"\u003eE. Cloud publish\u003c/h2\u003e\u003cp\u003eGitHub is quite capable of running \u003ccode\u003eflit publish\u003c/code\u003e for us. Let\u0026#39;s create a separate workflow:\u003c/p\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"\u003e\u003ccode class=\"language-yaml\" data-lang=\"yaml\"\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#000\"\u003ename\u003c/span\u003e: \u003cspan style=\"color:#1c01ce\"\u003epublish\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#000\"\u003eon\u003c/span\u003e:\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#000\"\u003erelease\u003c/span\u003e:\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e        \u003cspan style=\"color:#000\"\u003etypes\u003c/span\u003e: [\u003cspan style=\"color:#1c01ce\"\u003ecreated]\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#000\"\u003ejobs\u003c/span\u003e:\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#000\"\u003epublish\u003c/span\u003e:\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e        \u003cspan style=\"color:#000\"\u003eruns-on\u003c/span\u003e: \u003cspan style=\"color:#1c01ce\"\u003eubuntu-latest\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e        \u003cspan style=\"color:#000\"\u003esteps\u003c/span\u003e:\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e            - \u003cspan style=\"color:#000\"\u003ename\u003c/span\u003e: \u003cspan style=\"color:#1c01ce\"\u003eCheckout sources\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e              \u003cspan style=\"color:#000\"\u003euses\u003c/span\u003e: \u003cspan style=\"color:#1c01ce\"\u003eactions/checkout@v2\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e            - \u003cspan style=\"color:#000\"\u003ename\u003c/span\u003e: \u003cspan style=\"color:#1c01ce\"\u003eSet up Python\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e              \u003cspan style=\"color:#000\"\u003euses\u003c/span\u003e: \u003cspan style=\"color:#1c01ce\"\u003eactions/setup-python@v2\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e              \u003cspan style=\"color:#000\"\u003ewith\u003c/span\u003e:\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e                  \u003cspan style=\"color:#000\"\u003epython-version\u003c/span\u003e: \u003cspan style=\"color:#c41a16\"\u003e\u0026#34;3.9\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e            - \u003cspan style=\"color:#000\"\u003ename\u003c/span\u003e: \u003cspan style=\"color:#1c01ce\"\u003eInstall dependencies\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e              \u003cspan style=\"color:#000\"\u003erun\u003c/span\u003e: |\u003cspan style=\"color:#c41a16\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#c41a16\"\u003e                  \u003c/span\u003e                  \u003cspan style=\"color:#1c01ce\"\u003emake deps\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e            - \u003cspan style=\"color:#000\"\u003ename\u003c/span\u003e: \u003cspan style=\"color:#1c01ce\"\u003ePublish to PyPi\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e              \u003cspan style=\"color:#000\"\u003eenv\u003c/span\u003e:\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e                  \u003cspan style=\"color:#000\"\u003eFLIT_USERNAME\u003c/span\u003e: \u003cspan style=\"color:#1c01ce\"\u003e${{ secrets.PYPI_USERNAME }}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e                  \u003cspan style=\"color:#000\"\u003eFLIT_PASSWORD\u003c/span\u003e: \u003cspan style=\"color:#1c01ce\"\u003e${{ secrets.PYPI_PASSWORD }}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e              \u003cspan style=\"color:#000\"\u003erun\u003c/span\u003e: |\u003cspan style=\"color:#c41a16\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#c41a16\"\u003e                  \u003c/span\u003e                  \u003cspan style=\"color:#1c01ce\"\u003emake publish\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e\u003ca href=\"https://github.com/nalgeon/podsearch-py/blob/main/.github/workflows/publish.yml\"\u003epublish.yml\u003c/a\u003e\u003c/p\u003e\u003cp\u003e\u003ccode\u003ePYPI_USERNAME\u003c/code\u003e and \u003ccode\u003ePYPI_PASSWORD\u003c/code\u003e are set in repository settings (Settings \u0026gt; Secrets \u0026gt; New repository secret). Use your PyPi username and password, or even better - an \u003ca href=\"https://pypi.org/manage/account/token/\"\u003eAPI token\u003c/a\u003e.\u003c/p\u003e\u003cp\u003eNow GitHub will automatically publish the package as soon as you create a new release. Sweet!\u003c/p\u003e\u003cp class=\"align-center\"\u003e⌘ ⌘ ⌘\u003c/p\u003e\u003cp\u003eYour perfect package is ready! It has everything one could dream of: clean code, clear documentation, tests, and cloud builds. Time to tell your colleagues and friends.\u003c/p\u003e\u003cp\u003eThese settings will make your package awesome:\u003c/p\u003e\u003cul\u003e\u003cli\u003e\u003ca href=\"https://github.com/nalgeon/podsearch-py/blob/main/pyproject.toml\"\u003epyproject.toml\u003c/a\u003e\u003c/li\u003e\u003cli\u003e\u003ca href=\"https://github.com/nalgeon/podsearch-py/blob/main/tox.ini\"\u003etox.ini\u003c/a\u003e\u003c/li\u003e\u003cli\u003e\u003ca href=\"https://github.com/nalgeon/podsearch-py/blob/main/Makefile\"\u003eMakefile\u003c/a\u003e\u003c/li\u003e\u003cli\u003e\u003ca href=\"https://github.com/nalgeon/podsearch-py/blob/main/.github/workflows/build.yml\"\u003ebuild.yml\u003c/a\u003e\u003c/li\u003e\u003cli\u003e\u003ca href=\"https://github.com/nalgeon/podsearch-py/blob/main/.github/workflows/publish.yml\"\u003epublish.yml\u003c/a\u003e\u003c/li\u003e\u003c/ul\u003e\u003cp\u003e\u003ca href=\"https://news.ycombinator.com/item?id=26733423\"\u003eComments on Hacker News\u003c/a\u003e\u003c/p\u003e\u003cp\u003e\u003cem\u003e\u003ca href=\"/subscribe/\"\u003e\u003ci class=\"fas fa-star\"\u003e\u003c/i\u003e \u003cstrong\u003eSubscribe\u003c/strong\u003e\u003c/a\u003e\nto keep up with new posts.\u003c/em\u003e\u003c/p\u003e\u003c/div\u003e\u003c/div\u003e\u003cfooter class=\"post__footer\"\u003e\u003cdiv class=\"row\"\u003e\u003cdiv class=\"col-xs-12\"\u003e\u003cdiv class=\"post__date\"\u003e\u003ctime datetime=\"2021-04-06 20:30:00 +0300 +0300\"\u003e06 Apr, 2021\u003c/time\u003e\u003c/div\u003e\u003cdiv class=\"post__tags\"\u003e\u003ca href=\"/tags/python/\"\u003epython\u003c/a\u003e \u003c/div\u003e\u003c/div\u003e\u003c/div\u003e\u003c/footer\u003e\u003c/article\u003e",
  "Date": "2021-04-06T20:30:00+03:00",
  "Author": "Anton Zhiyanov"
}