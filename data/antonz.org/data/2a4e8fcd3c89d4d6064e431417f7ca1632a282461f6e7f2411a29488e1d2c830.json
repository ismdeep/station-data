{
  "Source": "antonz.org",
  "Title": "Caching slow functions in Python",
  "Link": "https://antonz.org/functools-cache/",
  "Content": "\u003carticle class=\"post\"\u003e\u003cdiv class=\"row\"\u003e\u003cdiv class=\"col-xs-12 col-md-10 article\"\u003e\u003cheader\u003e\u003ch1\u003eCaching slow functions in Python\u003c/h1\u003e\u003c/header\u003e\u003cp\u003eSuppose you wrote a function that returns the user\u0026#39;s email:\u003c/p\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"\u003e\u003ccode class=\"language-python\" data-lang=\"python\"\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#a90d91\"\u003edef\u003c/span\u003e \u003cspan style=\"color:#000\"\u003eget_user_email\u003c/span\u003e(\u003cspan style=\"color:#000\"\u003euser_id\u003c/span\u003e):\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#000\"\u003euser\u003c/span\u003e \u003cspan style=\"color:#000\"\u003e=\u003c/span\u003e \u003cspan style=\"color:#000\"\u003efind_by_id\u003c/span\u003e(\u003cspan style=\"color:#000\"\u003euser_id\u003c/span\u003e)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#a90d91\"\u003ereturn\u003c/span\u003e \u003cspan style=\"color:#000\"\u003euser\u003c/span\u003e[\u003cspan style=\"color:#c41a16\"\u003e\u0026#34;email\u0026#34;\u003c/span\u003e]\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eBut there is a problem. \u003ccode\u003efind_by_id()\u003c/code\u003e calls a terribly slow legacy system:\u003c/p\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"\u003e\u003ccode class=\"language-python\" data-lang=\"python\"\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#a90d91\"\u003edef\u003c/span\u003e \u003cspan style=\"color:#000\"\u003efind_by_id\u003c/span\u003e(\u003cspan style=\"color:#000\"\u003euser_id\u003c/span\u003e):\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#177500\"\u003e# simulate a slow network request,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#177500\"\u003e# returning a user by their id\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#000\"\u003etime\u003c/span\u003e\u003cspan style=\"color:#000\"\u003e.\u003c/span\u003e\u003cspan style=\"color:#000\"\u003esleep\u003c/span\u003e(\u003cspan style=\"color:#1c01ce\"\u003e1\u003c/span\u003e)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#a90d91\"\u003ereturn\u003c/span\u003e { \u003cspan style=\"color:#c41a16\"\u003e\u0026#34;email\u0026#34;\u003c/span\u003e: \u003cspan style=\"color:#c41a16\"\u003e\u0026#34;...\u0026#34;\u003c/span\u003e }\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e100 calls for \u003ccode\u003eget_user_email(42)\u003c/code\u003e result in 100 slow requests. A single one should be quite enough, so let\u0026#39;s attach a simple cache:\u003c/p\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"\u003e\u003ccode class=\"language-python\" data-lang=\"python\"\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#000\"\u003ecache\u003c/span\u003e \u003cspan style=\"color:#000\"\u003e=\u003c/span\u003e {}\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#a90d91\"\u003edef\u003c/span\u003e \u003cspan style=\"color:#000\"\u003eget_user_email\u003c/span\u003e(\u003cspan style=\"color:#000\"\u003euser_id\u003c/span\u003e):\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#a90d91\"\u003eif\u003c/span\u003e \u003cspan style=\"color:#000\"\u003euser_id\u003c/span\u003e \u003cspan style=\"color:#000\"\u003enot\u003c/span\u003e \u003cspan style=\"color:#000\"\u003ein\u003c/span\u003e \u003cspan style=\"color:#000\"\u003ecache\u003c/span\u003e:\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e        \u003cspan style=\"color:#000\"\u003euser\u003c/span\u003e \u003cspan style=\"color:#000\"\u003e=\u003c/span\u003e \u003cspan style=\"color:#000\"\u003efind_by_id\u003c/span\u003e(\u003cspan style=\"color:#000\"\u003euser_id\u003c/span\u003e)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e        \u003cspan style=\"color:#000\"\u003ecache\u003c/span\u003e[\u003cspan style=\"color:#000\"\u003euser_id\u003c/span\u003e] \u003cspan style=\"color:#000\"\u003e=\u003c/span\u003e \u003cspan style=\"color:#000\"\u003euser\u003c/span\u003e[\u003cspan style=\"color:#c41a16\"\u003e\u0026#34;email\u0026#34;\u003c/span\u003e]\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#a90d91\"\u003ereturn\u003c/span\u003e \u003cspan style=\"color:#000\"\u003ecache\u003c/span\u003e[\u003cspan style=\"color:#000\"\u003euser_id\u003c/span\u003e]\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eNothing too complicated (apart from the issue of cache expiration, let\u0026#39;s not touch it). But imagine that there are a lot of slow functions, and you have to implement caching for every one of them. Not too inspiring.\u003c/p\u003e\u003cp\u003eFortunately, there is an \u003ccode\u003e@lru_cache\u003c/code\u003e decorator in the \u003ccode\u003efunctools\u003c/code\u003e module. That\u0026#39;s what we need. Add one line to the original function, and be done with it:\u003c/p\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"\u003e\u003ccode class=\"language-python\" data-lang=\"python\"\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#000\"\u003e@functools\u003c/span\u003e\u003cspan style=\"color:#000\"\u003e.\u003c/span\u003e\u003cspan style=\"color:#000\"\u003elru_cache\u003c/span\u003e(\u003cspan style=\"color:#000\"\u003emaxsize\u003c/span\u003e\u003cspan style=\"color:#000\"\u003e=\u003c/span\u003e\u003cspan style=\"color:#1c01ce\"\u003e256\u003c/span\u003e)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#a90d91\"\u003edef\u003c/span\u003e \u003cspan style=\"color:#000\"\u003eget_user_email\u003c/span\u003e(\u003cspan style=\"color:#000\"\u003euser_id\u003c/span\u003e):\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#000\"\u003euser\u003c/span\u003e \u003cspan style=\"color:#000\"\u003e=\u003c/span\u003e \u003cspan style=\"color:#000\"\u003efind_by_id\u003c/span\u003e(\u003cspan style=\"color:#000\"\u003euser_id\u003c/span\u003e)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#a90d91\"\u003ereturn\u003c/span\u003e \u003cspan style=\"color:#000\"\u003euser\u003c/span\u003e[\u003cspan style=\"color:#c41a16\"\u003e\u0026#34;email\u0026#34;\u003c/span\u003e]\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eNow repeated calls to \u003ccode\u003eget_user_email()\u003c/code\u003e with the same \u003ccode\u003euser_id\u003c/code\u003e return the cached result without requesting \u003ccode\u003efind_by_id()\u003c/code\u003e.\u003c/p\u003e\u003cdiv class=\"row\"\u003e\u003cdiv class=\"col-xs-12 col-sm-6 col-md-5\"\u003e\u003cfigure\u003e\u003cimg alt=\"Don\u0026#39;t write your own cache\" src=\"cache-1.png\" class=\"img-bordered-thin\"/\u003e\u003cfigcaption\u003eDon\u0026#39;t write your own cache...\u003c/figcaption\u003e\u003c/figure\u003e\u003c/div\u003e\u003cdiv class=\"col-xs-12 col-sm-6 col-md-5\"\u003e\u003cfigure\u003e\u003cimg alt=\"Use functools @lru_cache\" src=\"cache-2.png\" class=\"img-bordered-thin\"/\u003e\u003cfigcaption\u003eUse functools @lru_cache instead!\u003c/figcaption\u003e\u003c/figure\u003e\u003c/div\u003e\u003c/div\u003e\u003cp\u003e\u003ccode\u003e@lru_cache\u003c/code\u003e automatically evicts old entries from the cache when there are more than \u003ccode\u003emaxsize\u003c/code\u003e entries. So the cache won\u0026#39;t eat up all the memory.\u003c/p\u003e\u003cp\u003ePython 3.9 received another decorator — \u003ccode\u003e@functools.cache\u003c/code\u003e. It\u0026#39;s similar to \u003ccode\u003e@lru_cache\u003c/code\u003e, only without the cache entry limit (which makes it work a little faster).\u003c/p\u003e\u003cp\u003eOne can manage the cache — view hits/misses stats or clean it:\u003c/p\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"\u003e\u003ccode class=\"language-python\" data-lang=\"python\"\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#177500\"\u003e# cache management\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#000\"\u003estats\u003c/span\u003e \u003cspan style=\"color:#000\"\u003e=\u003c/span\u003e \u003cspan style=\"color:#000\"\u003eget_user_email\u003c/span\u003e\u003cspan style=\"color:#000\"\u003e.\u003c/span\u003e\u003cspan style=\"color:#000\"\u003ecache_info\u003c/span\u003e()\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#a90d91\"\u003eprint\u003c/span\u003e(\u003cspan style=\"color:#000\"\u003estats\u003c/span\u003e)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#177500\"\u003e# CacheInfo(hits=2, misses=3, maxsize=256, currsize=3)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#000\"\u003eget_user_email\u003c/span\u003e\u003cspan style=\"color:#000\"\u003e.\u003c/span\u003e\u003cspan style=\"color:#000\"\u003ecache_clear\u003c/span\u003e()\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#177500\"\u003e# CacheInfo(hits=0, misses=0, maxsize=256, currsize=0)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eThe cache works in-process and will die with it. So if you need something more scalable, look at Redis or other external cache.\u003c/p\u003e\u003cp\u003e\u003ca href=\"https://devdocs.io/python/library/functools#functools.lru_cache\"\u003eDocumentation\u003c/a\u003e •\n\u003ca href=\"https://replit.com/@antonz/functools-cache#main.py\"\u003ePlayground\u003c/a\u003e\u003c/p\u003e\u003cp\u003e\u003cem\u003e\u003ca href=\"/subscribe/\"\u003e\u003ci class=\"fas fa-star\"\u003e\u003c/i\u003e \u003cstrong\u003eSubscribe\u003c/strong\u003e\u003c/a\u003e\nto keep up with new posts.\u003c/em\u003e\u003c/p\u003e\u003c/div\u003e\u003c/div\u003e\u003cfooter class=\"post__footer\"\u003e\u003cdiv class=\"row\"\u003e\u003cdiv class=\"col-xs-12\"\u003e\u003cdiv class=\"post__date\"\u003e\u003ctime datetime=\"2022-04-23 19:10:00 +0000 UTC\"\u003e23 Apr, 2022\u003c/time\u003e\u003c/div\u003e\u003cdiv class=\"post__tags\"\u003e\u003ca href=\"/tags/python/\"\u003epython\u003c/a\u003e \u003c/div\u003e\u003c/div\u003e\u003c/div\u003e\u003c/footer\u003e\u003c/article\u003e",
  "Date": "2022-04-23T19:10:00Z",
  "Author": "Anton Zhiyanov"
}