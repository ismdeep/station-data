{
  "Source": "antonz.org",
  "Title": "Interactive SQL examples in JavaScript",
  "Link": "https://antonz.org/interactive-sql-examples/",
  "Content": "\u003carticle class=\"post\"\u003e\u003cdiv class=\"row\"\u003e\u003cdiv class=\"col-xs-12 col-md-10 article\"\u003e\u003cheader\u003e\u003ch1\u003eInteractive SQL examples in JavaScript\u003c/h1\u003e\u003c/header\u003e\u003cp\u003e\u003cem\u003eThis was my early attempt to provide interactive SQL snippets in the browser. Later, I created \u003ca href=\"https://codapi.org/\"\u003eCodapi\u003c/a\u003e — an open-source tool for embedding interactive code examples into any kind of technical writing. Give it a try!\u003c/em\u003e\u003c/p\u003e\u003cp\u003eReading about SQL is fun, but trying out live examples is even better! So I created JavaScript widgets that turn static SQL code in your articles into interactive examples.\u003c/p\u003e\u003cp\u003eHere is a working example:\u003c/p\u003e\u003cpre class=\"example\"\u003e\u003ccode\u003eselect * from employees\nlimit 5;\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eAnd here are the four steps to creating executable SQL examples in your own articles or documentation:\u003c/p\u003e\u003ch2 id=\"1-include-the-widgets\"\u003e1. Include the widgets\u003c/h2\u003e\u003cp\u003eYou\u0026#39;ll need three JavaScript files:\u003c/p\u003e\u003cul\u003e\u003cli\u003e\u003ccode\u003esqlite3.js\u003c/code\u003e — SQLite compiled for the browser.\u003c/li\u003e\u003cli\u003e\u003ccode\u003esqlime-db.js\u003c/code\u003e — the database web component.\u003c/li\u003e\u003cli\u003e\u003ccode\u003esqlime-examples.js\u003c/code\u003e — the interactive example web component.\u003c/li\u003e\u003c/ul\u003e\u003cp\u003eInclude them from CDN or (better) download and host locally:\u003c/p\u003e\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e\u0026lt;script src=\u0026#34;https://unpkg.com/@antonz/sqlite@3.40.0/dist/sqlite3.js\u0026#34;\u0026gt;\u0026lt;/script\u0026gt;\n\u0026lt;script src=\u0026#34;https://unpkg.com/sqlime@0.1.2/dist/sqlime-db.js\u0026#34;\u0026gt;\u0026lt;/script\u0026gt;\n\u0026lt;script src=\u0026#34;https://unpkg.com/sqlime@0.1.2/dist/sqlime-examples.js\u0026#34;\u0026gt;\u0026lt;/script\u0026gt;\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eYou\u0026#39;ll also need to download and serve the SQLite WebAssembly file if you\u0026#39;re hosting locally:\u003c/p\u003e\u003cpre tabindex=\"0\"\u003e\u003ccode\u003ehttps://unpkg.com/@antonz/sqlite@3.40.0/dist/sqlite3.wasm\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003e\u003ccode\u003esqlite3.wasm\u003c/code\u003e is used internally by the \u003ccode\u003esqlite3.js\u003c/code\u003e script, so place them in the same folder.\u003c/p\u003e\u003cp\u003eI suggest you host SQLite locally because it weighs ≈1Mb, and CDNs tend to be quite slow with such large files.\u003c/p\u003e\u003cp\u003eYou can install all of these using \u003ccode\u003enpm\u003c/code\u003e:\u003c/p\u003e\u003cpre tabindex=\"0\"\u003e\u003ccode\u003enpm install @antonz/sqlite\nnpm install sqlime\n\u003c/code\u003e\u003c/pre\u003e\u003cblockquote\u003e\u003cp\u003e\u003cstrong\u003eNote\u003c/strong\u003e. \u003ccode\u003e@antonz/sqlite\u003c/code\u003e is a copy of the official \u003ca href=\"https://sqlite.org/wasm\"\u003eSQLite Wasm\u003c/a\u003e build, provided as an NPM package for convenience. You can download and use the build from the SQLite website if you prefer.\u003c/p\u003e\u003c/blockquote\u003e\u003ch2 id=\"2-write-an-article-as-usual\"\u003e2. Write an article as usual\u003c/h2\u003e\u003cp\u003eSuppose you are writing a short post about ranking data in SQL:\u003c/p\u003e\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e\u0026lt;p\u0026gt;To rank data in SQL, we use the\n\u0026lt;code\u0026gt;rank()\u0026lt;/code\u0026gt; window function:\u0026lt;/p\u0026gt;\n\n\u0026lt;pre class=\u0026#34;example\u0026#34;\u0026gt;select\n  rank() over w as \u0026#34;rank\u0026#34;,\n  name, department, salary\nfrom employees\nwindow w as (order by salary desc)\norder by \u0026#34;rank\u0026#34;, id;\u0026lt;/pre\u0026gt;\n\n\u0026lt;p\u0026gt;the article goes on...\u0026lt;/p\u0026gt;\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eWhich renders as ordinary HTML:\u003c/p\u003e\u003cdiv class=\"boxed\"\u003e\u003cp\u003eTo rank data in SQL, we use the \u003ccode\u003erank()\u003c/code\u003e window function:\u003c/p\u003e\u003cpre\u003e\u003ccode\u003eselect\n  rank() over w as \u0026#34;rank\u0026#34;,\n  name, department, salary\nfrom employees\nwindow w as (order by salary desc)\norder by \u0026#34;rank\u0026#34;, id;\u003c/code\u003e\u003c/pre\u003e\u003cp\u003ethe article goes on...\u003c/p\u003e\u003c/div\u003e\u003ch2 id=\"3-load-the-database\"\u003e3. Load the database\u003c/h2\u003e\u003cp\u003eYou can create a database from a binary SQLite file or SQL script. I\u0026#39;ll go with the latter and use \u003ca href=\"/sql-window-functions-book/employees.sql\"\u003eemployees.sql\u003c/a\u003e, which creates the \u003ccode\u003eemployees\u003c/code\u003e table and populates it with data.\u003c/p\u003e\u003cp\u003eLoad the database using the \u003ccode\u003esqlime-db\u003c/code\u003e web component:\u003c/p\u003e\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e\u0026lt;sqlime-db name=\u0026#34;employees\u0026#34; path=\u0026#34;./employees.sql\u0026#34;\u0026gt;\u0026lt;/sqlime-db\u0026gt;\n\u003c/code\u003e\u003c/pre\u003e\u003cul\u003e\u003cli\u003e\u003ccode\u003ename\u003c/code\u003e is the name we\u0026#39;ll use later to refer to the database.\u003c/li\u003e\u003cli\u003e\u003ccode\u003epath\u003c/code\u003e is the URL path to the SQL (or binary) database file.\u003c/li\u003e\u003c/ul\u003e\u003ch2 id=\"4-init-the-examples\"\u003e4. Init the examples\u003c/h2\u003e\u003cp\u003eThe only thing left is to convert your HTML \u003ccode\u003epre\u003c/code\u003e code snippets into interactive examples. Use the \u003ccode\u003esqlime-examples\u003c/code\u003e web component to do this:\u003c/p\u003e\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e\u0026lt;sqlime-examples db=\u0026#34;employees\u0026#34; selector=\u0026#34;pre.example\u0026#34; editable\u0026gt;\u0026lt;/sqlime-examples\u0026gt;\n\u003c/code\u003e\u003c/pre\u003e\u003cul\u003e\u003cli\u003e\u003ccode\u003edb\u003c/code\u003e is the name of the database we defined earlier.\u003c/li\u003e\u003cli\u003e\u003ccode\u003eselector\u003c/code\u003e is the CSS selector for your SQL code snippets.\u003c/li\u003e\u003cli\u003e\u003ccode\u003eeditable\u003c/code\u003e makes the examples editable (remove for read-only).\u003c/li\u003e\u003c/ul\u003e\u003cp\u003eAnd that\u0026#39;s it!\u003c/p\u003e\u003cdiv class=\"boxed\"\u003e\u003cp\u003eTo rank data in SQL, we use the \u003ccode\u003erank()\u003c/code\u003e window function:\u003c/p\u003e\u003cpre class=\"example\"\u003e\u003ccode\u003eselect\n  rank() over w as \u0026#34;rank\u0026#34;,\n  name, department, salary\nfrom employees\nwindow w as (order by salary desc)\norder by \u0026#34;rank\u0026#34;, id;\u003c/code\u003e\u003c/pre\u003e\u003cp\u003ethe article goes on...\u003c/p\u003e\u003c/div\u003e\u003cp\u003e\u003ccode\u003esqlime-examples\u003c/code\u003e converts all the snippets with the specified selector, so you only need to include it once (unless you have multiple databases to run your examples on).\u003c/p\u003e\u003ch2 id=\"summary\"\u003eSummary\u003c/h2\u003e\u003cp\u003eExecutable SQL examples are an excellent fit for any kind of documentation:\u003c/p\u003e\u003cul\u003e\u003cli\u003eThey are more informative than static snippets.\u003c/li\u003e\u003cli\u003eThey increase engagement and encourage experimentation,\u003c/li\u003e\u003cli\u003eThey are lightweight, easy to set up, and do not require a server.\u003c/li\u003e\u003c/ul\u003e\u003cp\u003eTry adding interactive SQL to your articles, or ask a question \u003ca href=\"https://github.com/nalgeon/sqlime\"\u003eon GitHub\u003c/a\u003e if you have one.\u003c/p\u003e\u003cp\u003e──\u003c/p\u003e\u003cp\u003e\u003cmark\u003eInteractive examples in this post\u003c/mark\u003e are powered by \u003ca href=\"https://codapi.org/\"\u003e\u003cstrong\u003ecodapi\u003c/strong\u003e\u003c/a\u003e — an open source tool I\u0026#39;m building. Use it to embed live code snippets into your product docs, online course or blog.\u003c/p\u003e\u003cp\u003e\u003csqlime-db name=\"employees\" path=\"/sql-window-functions-book/employees.sql\"\u003e\u003c/sqlime-db\u003e\n\u003csqlime-examples db=\"employees\" selector=\"pre.example\" editable=\"\"\u003e\u003c/sqlime-examples\u003e\u003c/p\u003e\u003cscript defer=\"\" src=\"/modules/sqlean/sqlean.js\"\u003e\u003c/script\u003e\n\u003cscript defer=\"\" src=\"/modules/sqlime/sqlime-db.js\"\u003e\u003c/script\u003e\n\u003cscript defer=\"\" src=\"/modules/sqlime/sqlime-examples.js\"\u003e\u003c/script\u003e\u003cp\u003e\u003cem\u003e\u003ca href=\"/subscribe/\"\u003e\u003ci class=\"fas fa-star\"\u003e\u003c/i\u003e \u003cstrong\u003eSubscribe\u003c/strong\u003e\u003c/a\u003e\nto keep up with new posts.\u003c/em\u003e\u003c/p\u003e\u003c/div\u003e\u003c/div\u003e\u003cfooter class=\"post__footer\"\u003e\u003cdiv class=\"row\"\u003e\u003cdiv class=\"col-xs-12\"\u003e\u003cdiv class=\"post__date\"\u003e\u003ctime datetime=\"2023-03-05 12:00:00 +0000 UTC\"\u003e05 Mar, 2023\u003c/time\u003e\u003c/div\u003e\u003cdiv class=\"post__tags\"\u003e\u003ca href=\"/tags/data/\"\u003edata\u003c/a\u003e \n\u003ca href=\"/tags/sqlite/\"\u003esqlite\u003c/a\u003e \u003c/div\u003e\u003c/div\u003e\u003c/div\u003e\u003c/footer\u003e\u003c/article\u003e",
  "Date": "2023-03-05T12:00:00Z",
  "Author": "Anton Zhiyanov"
}