{
  "Source": "antonz.org",
  "Title": "Common table expressions in SQL",
  "Link": "https://antonz.org/cte/",
  "Content": "\u003carticle class=\"post\"\u003e\u003cdiv class=\"row\"\u003e\u003cdiv class=\"col-xs-12 col-md-10 article\"\u003e\u003cheader\u003e\u003ch1\u003eCommon table expressions in SQL\u003c/h1\u003e\u003c/header\u003e\u003cp\u003eRule #1 for writing well-readable SQL queries is to use \u003cem\u003ecommon table expressions\u003c/em\u003e (CTE). People are afraid of them, but they really shouldn\u0026#39;t. Let\u0026#39;s learn CTEs in three minutes, so you don\u0026#39;t have to read a weighty SQL book or take an online course.\u003c/p\u003e\u003ch2 id=\"problem\"\u003eProblem\u003c/h2\u003e\u003cp\u003eLet\u0026#39;s say we have a table with monthly sales for two years:\u003c/p\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"\u003e\u003ccode class=\"language-sql\" data-lang=\"sql\"\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#a90d91\"\u003eselect\u003c/span\u003e \u003cspan style=\"color:#000\"\u003e*\u003c/span\u003e \u003cspan style=\"color:#a90d91\"\u003efrom\u003c/span\u003e \u003cspan style=\"color:#000\"\u003esales\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#a90d91\"\u003eorder\u003c/span\u003e \u003cspan style=\"color:#a90d91\"\u003eby\u003c/span\u003e \u003cspan style=\"color:#a90d91\"\u003eyear\u003c/span\u003e, \u003cspan style=\"color:#a90d91\"\u003emonth\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#a90d91\"\u003elimit\u003c/span\u003e \u003cspan style=\"color:#1c01ce\"\u003e10\u003c/span\u003e;\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ccodapi-snippet sandbox=\"sqlite\" editor=\"basic\" template=\"main.sql\"\u003e\u003c/codapi-snippet\u003e\u003cp\u003e\u003ca href=\"https://gist.github.com/nalgeon/858c409b81ae3a676580cba6745d68ea\"\u003eâ†“ sales.sql\u003c/a\u003e\u003c/p\u003e\u003cp\u003eWe want to select only those months for which revenue exceeded the monthly average for the year.\u003c/p\u003e\u003cp\u003eTo begin with, let\u0026#39;s calculate the average monthly revenue by year:\u003c/p\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"\u003e\u003ccode class=\"language-sql\" data-lang=\"sql\"\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#a90d91\"\u003eselect\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e  \u003cspan style=\"color:#a90d91\"\u003eyear\u003c/span\u003e,\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e  \u003cspan style=\"color:#a90d91\"\u003eavg\u003c/span\u003e(\u003cspan style=\"color:#000\"\u003erevenue\u003c/span\u003e) \u003cspan style=\"color:#a90d91\"\u003eas\u003c/span\u003e \u003cspan style=\"color:#000\"\u003eavg_rev\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#a90d91\"\u003efrom\u003c/span\u003e \u003cspan style=\"color:#000\"\u003esales\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#a90d91\"\u003egroup\u003c/span\u003e \u003cspan style=\"color:#a90d91\"\u003eby\u003c/span\u003e \u003cspan style=\"color:#a90d91\"\u003eyear\u003c/span\u003e;\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ccodapi-snippet sandbox=\"sqlite\" editor=\"basic\" template=\"main.sql\"\u003e\u003c/codapi-snippet\u003e\u003cp\u003eNow we can select only those records in which \u003ccode\u003erevenue\u003c/code\u003e is not less than \u003ccode\u003eavg_rev\u003c/code\u003e:\u003c/p\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"\u003e\u003ccode class=\"language-sql\" data-lang=\"sql\"\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#a90d91\"\u003eselect\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e  \u003cspan style=\"color:#000\"\u003esales\u003c/span\u003e.\u003cspan style=\"color:#a90d91\"\u003eyear\u003c/span\u003e,\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e  \u003cspan style=\"color:#000\"\u003esales\u003c/span\u003e.\u003cspan style=\"color:#a90d91\"\u003emonth\u003c/span\u003e,\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e  \u003cspan style=\"color:#000\"\u003esales\u003c/span\u003e.\u003cspan style=\"color:#000\"\u003erevenue\u003c/span\u003e,\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e  \u003cspan style=\"color:#000\"\u003eround\u003c/span\u003e(\u003cspan style=\"color:#000\"\u003etotals\u003c/span\u003e.\u003cspan style=\"color:#000\"\u003eavg_rev\u003c/span\u003e) \u003cspan style=\"color:#a90d91\"\u003eas\u003c/span\u003e \u003cspan style=\"color:#000\"\u003eavg_rev\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#a90d91\"\u003efrom\u003c/span\u003e \u003cspan style=\"color:#000\"\u003esales\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e  \u003cspan style=\"color:#a90d91\"\u003ejoin\u003c/span\u003e (\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#a90d91\"\u003eselect\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e      \u003cspan style=\"color:#a90d91\"\u003eyear\u003c/span\u003e,\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e      \u003cspan style=\"color:#a90d91\"\u003eavg\u003c/span\u003e(\u003cspan style=\"color:#000\"\u003erevenue\u003c/span\u003e) \u003cspan style=\"color:#a90d91\"\u003eas\u003c/span\u003e \u003cspan style=\"color:#000\"\u003eavg_rev\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#a90d91\"\u003efrom\u003c/span\u003e \u003cspan style=\"color:#000\"\u003esales\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#a90d91\"\u003egroup\u003c/span\u003e \u003cspan style=\"color:#a90d91\"\u003eby\u003c/span\u003e \u003cspan style=\"color:#a90d91\"\u003eyear\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e  ) \u003cspan style=\"color:#a90d91\"\u003eas\u003c/span\u003e \u003cspan style=\"color:#000\"\u003etotals\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e  \u003cspan style=\"color:#a90d91\"\u003eon\u003c/span\u003e \u003cspan style=\"color:#000\"\u003esales\u003c/span\u003e.\u003cspan style=\"color:#a90d91\"\u003eyear\u003c/span\u003e \u003cspan style=\"color:#000\"\u003e=\u003c/span\u003e \u003cspan style=\"color:#000\"\u003etotals\u003c/span\u003e.\u003cspan style=\"color:#a90d91\"\u003eyear\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#a90d91\"\u003ewhere\u003c/span\u003e \u003cspan style=\"color:#000\"\u003esales\u003c/span\u003e.\u003cspan style=\"color:#000\"\u003erevenue\u003c/span\u003e \u003cspan style=\"color:#000\"\u003e\u0026gt;=\u003c/span\u003e \u003cspan style=\"color:#000\"\u003etotals\u003c/span\u003e.\u003cspan style=\"color:#000\"\u003eavg_rev\u003c/span\u003e;\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ccodapi-snippet sandbox=\"sqlite\" editor=\"basic\" template=\"main.sql\"\u003e\u003c/codapi-snippet\u003e\u003cp\u003eWe solved the task using a subquery:\u003c/p\u003e\u003cul\u003e\u003cli\u003ethe inner query calculates the average monthly revenue;\u003c/li\u003e\u003cli\u003ethe outer query joins with it and filters the results.\u003c/li\u003e\u003c/ul\u003e\u003cp\u003eThe query as a whole turned out to be a bit complicated. If you revisit it in a month, you\u0026#39;ll probably spend some time \u0026#34;unraveling\u0026#34; things. The problem is that such nested queries have to be read from the inside out:\u003c/p\u003e\u003cul\u003e\u003cli\u003efind the innermost query and comprehend it;\u003c/li\u003e\u003cli\u003ejoin it with the next outer query;\u003c/li\u003e\u003cli\u003ejoin them with the next outer query;\u003c/li\u003e\u003cli\u003eand so on.\u003c/li\u003e\u003c/ul\u003e\u003cp\u003eIt is OK when there are only two levels, as in our example. In practice, I often encounter three- and four-level subqueries. A pain to read and understand.\u003c/p\u003e\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\u003cp\u003eInstead of a subquery, we can use a \u003cem\u003ecommon table expression\u003c/em\u003e (CTE). Every subquery \u003ccode\u003eX\u003c/code\u003e:\u003c/p\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"\u003e\u003ccode class=\"language-sql\" data-lang=\"sql\"\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#a90d91\"\u003eselect\u003c/span\u003e \u003cspan style=\"color:#000\"\u003ea\u003c/span\u003e, \u003cspan style=\"color:#000\"\u003eb\u003c/span\u003e, \u003cspan style=\"color:#a90d91\"\u003ec\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#a90d91\"\u003efrom\u003c/span\u003e (\u003cspan style=\"color:#000\"\u003eX\u003c/span\u003e)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#a90d91\"\u003ewhere\u003c/span\u003e \u003cspan style=\"color:#000\"\u003ee\u003c/span\u003e \u003cspan style=\"color:#000\"\u003e=\u003c/span\u003e \u003cspan style=\"color:#000\"\u003ef\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eCan be converted to CTE:\u003c/p\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"\u003e\u003ccode class=\"language-sql\" data-lang=\"sql\"\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#a90d91\"\u003ewith\u003c/span\u003e \u003cspan style=\"color:#000\"\u003ecte\u003c/span\u003e \u003cspan style=\"color:#a90d91\"\u003eas\u003c/span\u003e (\u003cspan style=\"color:#000\"\u003eX\u003c/span\u003e)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#a90d91\"\u003eselect\u003c/span\u003e \u003cspan style=\"color:#000\"\u003ea\u003c/span\u003e, \u003cspan style=\"color:#000\"\u003eb\u003c/span\u003e, \u003cspan style=\"color:#a90d91\"\u003ec\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#a90d91\"\u003efrom\u003c/span\u003e \u003cspan style=\"color:#000\"\u003ecte\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#a90d91\"\u003ewhere\u003c/span\u003e \u003cspan style=\"color:#000\"\u003ee\u003c/span\u003e \u003cspan style=\"color:#000\"\u003e=\u003c/span\u003e \u003cspan style=\"color:#000\"\u003ef\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eIn our example:\u003c/p\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"\u003e\u003ccode class=\"language-sql\" data-lang=\"sql\"\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#a90d91\"\u003ewith\u003c/span\u003e \u003cspan style=\"color:#000\"\u003etotals\u003c/span\u003e \u003cspan style=\"color:#a90d91\"\u003eas\u003c/span\u003e (\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e  \u003cspan style=\"color:#a90d91\"\u003eselect\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#a90d91\"\u003eyear\u003c/span\u003e,\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#a90d91\"\u003eavg\u003c/span\u003e(\u003cspan style=\"color:#000\"\u003erevenue\u003c/span\u003e) \u003cspan style=\"color:#a90d91\"\u003eas\u003c/span\u003e \u003cspan style=\"color:#000\"\u003eavg_rev\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e  \u003cspan style=\"color:#a90d91\"\u003efrom\u003c/span\u003e \u003cspan style=\"color:#000\"\u003esales\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e  \u003cspan style=\"color:#a90d91\"\u003egroup\u003c/span\u003e \u003cspan style=\"color:#a90d91\"\u003eby\u003c/span\u003e \u003cspan style=\"color:#a90d91\"\u003eyear\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#a90d91\"\u003eselect\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e  \u003cspan style=\"color:#000\"\u003esales\u003c/span\u003e.\u003cspan style=\"color:#a90d91\"\u003eyear\u003c/span\u003e,\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e  \u003cspan style=\"color:#000\"\u003esales\u003c/span\u003e.\u003cspan style=\"color:#a90d91\"\u003emonth\u003c/span\u003e,\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e  \u003cspan style=\"color:#000\"\u003esales\u003c/span\u003e.\u003cspan style=\"color:#000\"\u003erevenue\u003c/span\u003e,\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e  \u003cspan style=\"color:#000\"\u003eround\u003c/span\u003e(\u003cspan style=\"color:#000\"\u003etotals\u003c/span\u003e.\u003cspan style=\"color:#000\"\u003eavg_rev\u003c/span\u003e) \u003cspan style=\"color:#a90d91\"\u003eas\u003c/span\u003e \u003cspan style=\"color:#000\"\u003eavg_rev\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#a90d91\"\u003efrom\u003c/span\u003e \u003cspan style=\"color:#000\"\u003esales\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e  \u003cspan style=\"color:#a90d91\"\u003ejoin\u003c/span\u003e \u003cspan style=\"color:#000\"\u003etotals\u003c/span\u003e \u003cspan style=\"color:#a90d91\"\u003eon\u003c/span\u003e \u003cspan style=\"color:#000\"\u003etotals\u003c/span\u003e.\u003cspan style=\"color:#a90d91\"\u003eyear\u003c/span\u003e \u003cspan style=\"color:#000\"\u003e=\u003c/span\u003e \u003cspan style=\"color:#000\"\u003esales\u003c/span\u003e.\u003cspan style=\"color:#a90d91\"\u003eyear\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#a90d91\"\u003ewhere\u003c/span\u003e \u003cspan style=\"color:#000\"\u003esales\u003c/span\u003e.\u003cspan style=\"color:#000\"\u003erevenue\u003c/span\u003e \u003cspan style=\"color:#000\"\u003e\u0026gt;=\u003c/span\u003e \u003cspan style=\"color:#000\"\u003etotals\u003c/span\u003e.\u003cspan style=\"color:#000\"\u003eavg_rev\u003c/span\u003e;\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ccodapi-snippet sandbox=\"sqlite\" editor=\"basic\" template=\"main.sql\"\u003e\u003c/codapi-snippet\u003e\u003cp\u003eWith a table expression, the query becomes flat â€” it\u0026#39;s much easier to perceive it this way. Besides, we can reuse the table expression as if it were a regular table:\u003c/p\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"\u003e\u003ccode class=\"language-sql\" data-lang=\"sql\"\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#a90d91\"\u003ewith\u003c/span\u003e \u003cspan style=\"color:#000\"\u003etotals\u003c/span\u003e \u003cspan style=\"color:#a90d91\"\u003eas\u003c/span\u003e (...)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#a90d91\"\u003eselect\u003c/span\u003e ... \u003cspan style=\"color:#a90d91\"\u003efrom\u003c/span\u003e \u003cspan style=\"color:#000\"\u003esales_ru\u003c/span\u003e \u003cspan style=\"color:#a90d91\"\u003ejoin\u003c/span\u003e \u003cspan style=\"color:#000\"\u003etotals\u003c/span\u003e ...\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#a90d91\"\u003eunion\u003c/span\u003e \u003cspan style=\"color:#a90d91\"\u003eall\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#a90d91\"\u003eselect\u003c/span\u003e ... \u003cspan style=\"color:#a90d91\"\u003efrom\u003c/span\u003e \u003cspan style=\"color:#000\"\u003esales_us\u003c/span\u003e \u003cspan style=\"color:#a90d91\"\u003ejoin\u003c/span\u003e \u003cspan style=\"color:#000\"\u003etotals\u003c/span\u003e ...\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eSQL table expressions are somewhat similar to functions in a regular programming language â€” they reduce the overall complexity:\u003c/p\u003e\u003cul\u003e\u003cli\u003eYou can write an unreadable sheet of code, or you can break the code into understandable individual functions and compose a program out of them.\u003c/li\u003e\u003cli\u003eYou can build a tower of nested subqueries, or you can extract them into CTEs and reference from the main query.\u003c/li\u003e\u003c/ul\u003e\u003ch2 id=\"cte-vs-subquery\"\u003eCTE vs subquery\u003c/h2\u003e\u003cp\u003eThere is a myth that \u0026#34;CTEs are slow\u0026#34;. It came from old versions of PostgreSQL (11 and earlier), which always \u003cem\u003ematerialized\u003c/em\u003e CTE â€” calculated the full result of a table expression and stored it until the end of the query.\u003c/p\u003e\u003cp\u003eThis is usually a good thing: the engine calculates the result once, and then uses it several times during the main query. But sometimes materialization prevented the engine from optimizing the query:\u003c/p\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"\u003e\u003ccode class=\"language-sql\" data-lang=\"sql\"\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#a90d91\"\u003ewith\u003c/span\u003e \u003cspan style=\"color:#000\"\u003ecte\u003c/span\u003e \u003cspan style=\"color:#a90d91\"\u003eas\u003c/span\u003e (\u003cspan style=\"color:#a90d91\"\u003eselect\u003c/span\u003e \u003cspan style=\"color:#000\"\u003e*\u003c/span\u003e \u003cspan style=\"color:#a90d91\"\u003efrom\u003c/span\u003e \u003cspan style=\"color:#000\"\u003efoo\u003c/span\u003e)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#a90d91\"\u003eselect\u003c/span\u003e \u003cspan style=\"color:#000\"\u003e*\u003c/span\u003e \u003cspan style=\"color:#a90d91\"\u003efrom\u003c/span\u003e \u003cspan style=\"color:#000\"\u003ecte\u003c/span\u003e \u003cspan style=\"color:#a90d91\"\u003ewhere\u003c/span\u003e \u003cspan style=\"color:#000\"\u003eid\u003c/span\u003e \u003cspan style=\"color:#000\"\u003e=\u003c/span\u003e \u003cspan style=\"color:#1c01ce\"\u003e500000\u003c/span\u003e;\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eThe query selects exactly one record by ID, but materialization creates a copy of the \u003cem\u003eentire table\u003c/em\u003e in memory. Because of this, the query is terribly slow.\u003c/p\u003e\u003cp\u003ePostgreSQL 12+ and other modern DBMS have become smarter and no longer do so. Materialization is used when it does more good than harm. Plus, many DBMSs allow you to explicitly control this behavior through the \u003ccode\u003eMATERIALIZED\u003c/code\u003e / \u003ccode\u003eNOT MATERIALIZED\u003c/code\u003e instructions.\u003c/p\u003e\u003cp\u003eSo CTEs work no slower than subqueries. And if in doubt, you can try both â€” a subquery and a table expression â€” and compare the query plan and execution time.\u003c/p\u003e\u003cp\u003eHow does one know when to use a subquery and when to use CTE? I came up with a simple rule that has never failed me yet:\u003c/p\u003e\u003cblockquote class=\"big\"\u003e\u003cp\u003eAlways use CTE\u003c/p\u003e\u003c/blockquote\u003e\u003cp\u003eThat\u0026#39;s what I wish you.\u003c/p\u003e\u003cp\u003eP.S. There are also \u003cem\u003erecursive\u003c/em\u003e CTEs, famous for their complexity and terrible naming (they have almost nothing in common with regular CTEs). Let\u0026#39;s talk about them some other day.\u003c/p\u003e\u003cp\u003eâ”€â”€\u003c/p\u003e\u003cp\u003e\u003cmark\u003eInterested in mastering advanced SQL?\u003c/mark\u003e Check out my book â€” \u003ca href=\"/sql-window-functions-book\"\u003eSQLÂ WindowÂ FunctionsÂ Explained\u003c/a\u003e\u003c/p\u003e\u003cscript defer=\"\" src=\"/modules/codapi/snippet.js\"\u003e\u003c/script\u003e\u003cp\u003e\u003cem\u003e\u003ca href=\"/subscribe/\"\u003e\u003ci class=\"fas fa-star\"\u003e\u003c/i\u003eÂ \u003cstrong\u003eSubscribe\u003c/strong\u003e\u003c/a\u003e\nto keep up with new posts.\u003c/em\u003e\u003c/p\u003e\u003c/div\u003e\u003c/div\u003e\u003cfooter class=\"post__footer\"\u003e\u003cdiv class=\"row\"\u003e\u003cdiv class=\"col-xs-12\"\u003e\u003cdiv class=\"post__date\"\u003e\u003ctime datetime=\"2022-05-20 16:50:00 +0000 UTC\"\u003e20 May, 2022\u003c/time\u003e\u003c/div\u003e\u003cdiv class=\"post__tags\"\u003e\u003ca href=\"/tags/data/\"\u003edata\u003c/a\u003eÂ \u003c/div\u003e\u003c/div\u003e\u003c/div\u003e\u003c/footer\u003e\u003c/article\u003e",
  "Date": "2022-05-20T16:50:00Z",
  "Author": "Anton Zhiyanov"
}