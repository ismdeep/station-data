{
  "Source": "antonz.org",
  "Title": "Generated columns in SQLite",
  "Link": "https://antonz.org/generated-columns/",
  "Content": "\u003carticle class=\"post\"\u003e\u003cdiv class=\"row\"\u003e\u003cdiv class=\"col-xs-12 col-md-10 article\"\u003e\u003cheader\u003e\u003ch1\u003eGenerated columns in SQLite\u003c/h1\u003e\u003c/header\u003e\u003cp\u003eSometimes an SQL query field is calculated based on other table columns. Imagine a table with \u003ccode\u003eincome\u003c/code\u003e and \u003ccode\u003etax_rate\u003c/code\u003e columns:\u003c/p\u003e\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e┌────────┬──────────┐\n│ income │ tax_rate │\n├────────┼──────────┤\n│ 70     │ 0.22     │\n│ 84     │ 0.22     │\n│ 90     │ 0.24     │\n└────────┴──────────┘\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eYou can calculate the annual tax:\u003c/p\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"\u003e\u003ccode class=\"language-sql\" data-lang=\"sql\"\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#a90d91\"\u003eselect\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e  \u003cspan style=\"color:#000\"\u003eid\u003c/span\u003e,\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e  \u003cspan style=\"color:#000\"\u003eincome\u003c/span\u003e \u003cspan style=\"color:#000\"\u003e*\u003c/span\u003e \u003cspan style=\"color:#000\"\u003etax_rate\u003c/span\u003e \u003cspan style=\"color:#a90d91\"\u003eas\u003c/span\u003e \u003cspan style=\"color:#000\"\u003etax\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#a90d91\"\u003efrom\u003c/span\u003e \u003cspan style=\"color:#000\"\u003epeople\u003c/span\u003e;\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eIn order not to repeat these calculations everywhere, it is convenient to create a virtual \u003cem\u003egenerated column\u003c/em\u003e:\u003c/p\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"\u003e\u003ccode class=\"language-sql\" data-lang=\"sql\"\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#a90d91\"\u003ealter\u003c/span\u003e \u003cspan style=\"color:#a90d91\"\u003etable\u003c/span\u003e \u003cspan style=\"color:#000\"\u003epeople\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#a90d91\"\u003eadd\u003c/span\u003e \u003cspan style=\"color:#a90d91\"\u003ecolumn\u003c/span\u003e \u003cspan style=\"color:#000\"\u003etax\u003c/span\u003e \u003cspan style=\"color:#a90d91\"\u003ereal\u003c/span\u003e \u003cspan style=\"color:#a90d91\"\u003eas\u003c/span\u003e (\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e  \u003cspan style=\"color:#000\"\u003eincome\u003c/span\u003e \u003cspan style=\"color:#000\"\u003e*\u003c/span\u003e \u003cspan style=\"color:#000\"\u003etax_rate\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e);\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eAfter that, the column can be used in queries in the same way as regular columns:\u003c/p\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"\u003e\u003ccode class=\"language-sql\" data-lang=\"sql\"\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#a90d91\"\u003eselect\u003c/span\u003e \u003cspan style=\"color:#000\"\u003eid\u003c/span\u003e, \u003cspan style=\"color:#000\"\u003etax\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#a90d91\"\u003efrom\u003c/span\u003e \u003cspan style=\"color:#000\"\u003epeople\u003c/span\u003e;\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eVirtual columns are not stored in the database and are calculated on the fly. But you can build an index on them to speed up data retrieval.\u003c/p\u003e\u003cblockquote\u003e\u003cp\u003e\u003cstrong\u003eNote\u003c/strong\u003e. Strictly speaking, SQLite has \u003cem\u003evirtual\u003c/em\u003e generated columns and \u003cem\u003estored\u003c/em\u003e ones. The latter are stored on disk, but it is impossible to create them via \u003ccode\u003ealter table\u003c/code\u003e, so people mostly use virtual ones.\u003c/p\u003e\u003c/blockquote\u003e\u003cp\u003eIn general, the syntax is as follows:\u003c/p\u003e\u003cpre tabindex=\"0\"\u003e\u003ccode\u003ealter table TABLE\nadd column COLUMN TYPE as (EXPRESSION);\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eGenerated column expression can include any table columns, but not other tables or subquery results. It\u0026#39;s for the best: for more complex combinations, there are \u003cem\u003eviews\u003c/em\u003e and \u003cem\u003etemp tables\u003c/em\u003e. Let\u0026#39;s talk about them some \u003ca href=\"/temp-tables\"\u003eother time\u003c/a\u003e.\u003c/p\u003e\u003cp\u003e\u003ca href=\"https://sqlite.org/gencol.html\"\u003eDocumentation\u003c/a\u003e • \u003ca href=\"https://sqlime.org/#gist:5208177f89a0e38ccfae8ead90a35631\"\u003ePlayground\u003c/a\u003e\u003c/p\u003e\u003cp\u003e──\u003c/p\u003e\u003cp\u003eP.S. \u003cmark\u003eInterested in mastering advanced SQL?\u003c/mark\u003e Check out my book — \u003ca href=\"/sql-window-functions-book\"\u003eSQL Window Functions Explained\u003c/a\u003e\u003c/p\u003e\u003cp\u003e\u003cem\u003e\u003ca href=\"/subscribe/\"\u003e\u003ci class=\"fas fa-star\"\u003e\u003c/i\u003e \u003cstrong\u003eSubscribe\u003c/strong\u003e\u003c/a\u003e\nto keep up with new posts.\u003c/em\u003e\u003c/p\u003e\u003c/div\u003e\u003c/div\u003e\u003cfooter class=\"post__footer\"\u003e\u003cdiv class=\"row\"\u003e\u003cdiv class=\"col-xs-12\"\u003e\u003cdiv class=\"post__date\"\u003e\u003ctime datetime=\"2022-05-07 17:10:00 +0000 UTC\"\u003e07 May, 2022\u003c/time\u003e\u003c/div\u003e\u003cdiv class=\"post__tags\"\u003e\u003ca href=\"/tags/sqlite/\"\u003esqlite\u003c/a\u003e \u003c/div\u003e\u003c/div\u003e\u003c/div\u003e\u003c/footer\u003e\u003c/article\u003e",
  "Date": "2022-05-07T17:10:00Z",
  "Author": "Anton Zhiyanov"
}