{
  "Source": "antonz.org",
  "Title": "Flying pig, or protocols in Python",
  "Link": "https://antonz.org/protocol/",
  "Content": "\u003carticle class=\"post\"\u003e\u003cdiv class=\"row\"\u003e\u003cdiv class=\"col-xs-12 col-md-10 article\"\u003e\u003cheader\u003e\u003ch1\u003eFlying pig, or protocols in Python\u003c/h1\u003e\u003c/header\u003e\u003cp\u003eLet\u0026#39;s say you\u0026#39;ve developed a utility that sends everything flying:\u003c/p\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"\u003e\u003ccode class=\"language-python\" data-lang=\"python\"\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#a90d91\"\u003edef\u003c/span\u003e \u003cspan style=\"color:#000\"\u003elaunch\u003c/span\u003e(\u003cspan style=\"color:#000\"\u003ething\u003c/span\u003e):\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#000\"\u003ething\u003c/span\u003e\u003cspan style=\"color:#000\"\u003e.\u003c/span\u003e\u003cspan style=\"color:#000\"\u003efly\u003c/span\u003e()\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eWell, not exactly \u003cem\u003eeverything\u003c/em\u003e. Things with the \u003ccode\u003efly()\u003c/code\u003e method, to be precise. With a single handy function we launch Frank (he\u0026#39;s a pigeon), an airplane, and even Superman:\u003c/p\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"\u003e\u003ccode class=\"language-python\" data-lang=\"python\"\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#a90d91\"\u003eclass\u003c/span\u003e \u003cspan style=\"color:#3f6e75\"\u003eFrank\u003c/span\u003e:\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#a90d91\"\u003edef\u003c/span\u003e \u003cspan style=\"color:#000\"\u003efly\u003c/span\u003e(\u003cspan style=\"color:#5b269a\"\u003eself\u003c/span\u003e):\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e        \u003cspan style=\"color:#a90d91\"\u003eprint\u003c/span\u003e(\u003cspan style=\"color:#c41a16\"\u003e\u0026#34;üí©\u0026#34;\u003c/span\u003e)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#a90d91\"\u003eclass\u003c/span\u003e \u003cspan style=\"color:#3f6e75\"\u003ePlane\u003c/span\u003e:\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#a90d91\"\u003edef\u003c/span\u003e \u003cspan style=\"color:#000\"\u003efly\u003c/span\u003e(\u003cspan style=\"color:#5b269a\"\u003eself\u003c/span\u003e):\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e        \u003cspan style=\"color:#a90d91\"\u003eprint\u003c/span\u003e(\u003cspan style=\"color:#c41a16\"\u003e\u0026#34;Flight delayed\u0026#34;\u003c/span\u003e)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#a90d91\"\u003eclass\u003c/span\u003e \u003cspan style=\"color:#3f6e75\"\u003eSuperman\u003c/span\u003e:\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#a90d91\"\u003edef\u003c/span\u003e \u003cspan style=\"color:#000\"\u003efly\u003c/span\u003e(\u003cspan style=\"color:#5b269a\"\u003eself\u003c/span\u003e):\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e        \u003cspan style=\"color:#a90d91\"\u003eprint\u003c/span\u003e(\u003cspan style=\"color:#c41a16\"\u003e\u0026#34;Œµ===(„Å£‚âßœâ‚â¶)„Å£\u0026#34;\u003c/span\u003e)\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eWhoosh:\u003c/p\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"\u003e\u003ccode class=\"language-python\" data-lang=\"python\"\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#000\"\u003ef\u003c/span\u003e \u003cspan style=\"color:#000\"\u003e=\u003c/span\u003e \u003cspan style=\"color:#000\"\u003eFrank\u003c/span\u003e()\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#000\"\u003elaunch\u003c/span\u003e(\u003cspan style=\"color:#000\"\u003ef\u003c/span\u003e)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#177500\"\u003e# üí©\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#000\"\u003ep\u003c/span\u003e \u003cspan style=\"color:#000\"\u003e=\u003c/span\u003e \u003cspan style=\"color:#000\"\u003ePlane\u003c/span\u003e()\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#000\"\u003elaunch\u003c/span\u003e(\u003cspan style=\"color:#000\"\u003ep\u003c/span\u003e)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#177500\"\u003e# Flight delayed\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#000\"\u003es\u003c/span\u003e \u003cspan style=\"color:#000\"\u003e=\u003c/span\u003e \u003cspan style=\"color:#000\"\u003eSuperman\u003c/span\u003e()\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#000\"\u003elaunch\u003c/span\u003e(\u003cspan style=\"color:#000\"\u003es\u003c/span\u003e)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#177500\"\u003e# Œµ===(„Å£‚âßœâ‚â¶)„Å£\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eIt\u0026#39;s not that our heroes are particularly successful at coping with the task, but the launch works for them.\u003c/p\u003e\u003cp\u003eSo far, so good. But sometimes (especially when the program grows) the developer wants to add a little rigor. Make it clear that the \u003ccode\u003ething\u003c/code\u003e parameter in \u003ccode\u003elaunch()\u003c/code\u003e is not any object, but necessarily a flying thing with the \u003ccode\u003efly()\u003c/code\u003e method. What is the best way to do this?\u003c/p\u003e\u003ch2 id=\"using-a-description\"\u003eUsing a description\u003c/h2\u003e\u003cp\u003eIf you prefer to avoid types, then you will go with a variable name or a docstring:\u003c/p\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"\u003e\u003ccode class=\"language-python\" data-lang=\"python\"\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#a90d91\"\u003edef\u003c/span\u003e \u003cspan style=\"color:#000\"\u003elaunch\u003c/span\u003e(\u003cspan style=\"color:#000\"\u003eflyer\u003c/span\u003e):\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#c41a16\"\u003e\u0026#34;\u0026#34;\u0026#34;Launces a flyer (an object with a `fly()` method)\u0026#34;\u0026#34;\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#000\"\u003eflyer\u003c/span\u003e\u003cspan style=\"color:#000\"\u003e.\u003c/span\u003e\u003cspan style=\"color:#000\"\u003efly\u003c/span\u003e()\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eThe problem is that the more complex the code, the more often the \u0026#34;descriptive\u0026#34; approach fails.\u003c/p\u003e\u003ch2 id=\"using-a-base-class\"\u003eUsing a base class\u003c/h2\u003e\u003cp\u003eThanks to some 1990s java programming skills, you end up with a small hierarchy:\u003c/p\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"\u003e\u003ccode class=\"language-python\" data-lang=\"python\"\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#a90d91\"\u003eclass\u003c/span\u003e \u003cspan style=\"color:#3f6e75\"\u003eFlyer\u003c/span\u003e:\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#a90d91\"\u003edef\u003c/span\u003e \u003cspan style=\"color:#000\"\u003efly\u003c/span\u003e():\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e        \u003cspan style=\"color:#000\"\u003e...\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#a90d91\"\u003eclass\u003c/span\u003e \u003cspan style=\"color:#3f6e75\"\u003eFrank\u003c/span\u003e(\u003cspan style=\"color:#000\"\u003eFlyer\u003c/span\u003e):\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#177500\"\u003e# ...\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#a90d91\"\u003eclass\u003c/span\u003e \u003cspan style=\"color:#3f6e75\"\u003ePlane\u003c/span\u003e(\u003cspan style=\"color:#000\"\u003eFlyer\u003c/span\u003e):\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#177500\"\u003e# ...\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#a90d91\"\u003eclass\u003c/span\u003e \u003cspan style=\"color:#3f6e75\"\u003eSuperman\u003c/span\u003e(\u003cspan style=\"color:#000\"\u003eFlyer\u003c/span\u003e):\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#177500\"\u003e# ...\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"\u003e\u003ccode class=\"language-python\" data-lang=\"python\"\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#a90d91\"\u003edef\u003c/span\u003e \u003cspan style=\"color:#000\"\u003elaunch\u003c/span\u003e(\u003cspan style=\"color:#000\"\u003ething\u003c/span\u003e: \u003cspan style=\"color:#000\"\u003eFlyer\u003c/span\u003e):\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#000\"\u003ething\u003c/span\u003e\u003cspan style=\"color:#000\"\u003e.\u003c/span\u003e\u003cspan style=\"color:#000\"\u003efly\u003c/span\u003e()\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eThis method works:\u003c/p\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e$ mypy flyer.py\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003eSuccess: no issues found in \u003cspan style=\"color:#1c01ce\"\u003e1\u003c/span\u003e \u003cspan style=\"color:#a90d91\"\u003esource\u003c/span\u003e file\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eBut, as the Python devs say, it is terribly \u0026#34;unpythonic\u0026#34;:\u003c/p\u003e\u003cblockquote\u003e\u003cp\u003eThe problem is that a class has to be explicitly marked, which is unpythonic and unlike what one would normally do in idiomatic dynamically typed Python code.\u003c/p\u003e\u003c/blockquote\u003e\u003cp\u003eIndeed. Not only have we modified three classes instead of one function. Not only have we introduced an inheritance hierarchy to our code. But also Frank, the plane and Superman are now burdened by the shared knowledge that they are Flyers. They never asked for this, you know.\u003c/p\u003e\u003ch2 id=\"using-a-protocol\"\u003eUsing a protocol\u003c/h2\u003e\u003cp\u003eThe quote above is from¬†\u003ca href=\"https://peps.python.org/pep-0544/\"\u003ePEP 544\u003c/a\u003e (Python Enhancement Proposal), which was implemented in Python 3.8. Starting with this version, Python recieved \u003cem\u003eprotocols\u003c/em\u003e.\u003c/p\u003e\u003cp\u003eProtocols describe behavior. Here is our Flyer:\u003c/p\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"\u003e\u003ccode class=\"language-python\" data-lang=\"python\"\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#a90d91\"\u003efrom\u003c/span\u003e \u003cspan style=\"color:#000\"\u003etyping\u003c/span\u003e \u003cspan style=\"color:#a90d91\"\u003eimport\u003c/span\u003e \u003cspan style=\"color:#000\"\u003eProtocol\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#a90d91\"\u003eclass\u003c/span\u003e \u003cspan style=\"color:#3f6e75\"\u003eFlyer\u003c/span\u003e(\u003cspan style=\"color:#000\"\u003eProtocol\u003c/span\u003e):\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#a90d91\"\u003edef\u003c/span\u003e \u003cspan style=\"color:#000\"\u003efly\u003c/span\u003e(\u003cspan style=\"color:#5b269a\"\u003eself\u003c/span\u003e):\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e        \u003cspan style=\"color:#000\"\u003e...\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eWe use a protocol to specify that an object should have a specific behavior. The \u003ccode\u003elaunch()\u003c/code\u003e function can only launch Flyers:\u003c/p\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"\u003e\u003ccode class=\"language-python\" data-lang=\"python\"\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#a90d91\"\u003edef\u003c/span\u003e \u003cspan style=\"color:#000\"\u003elaunch\u003c/span\u003e(\u003cspan style=\"color:#000\"\u003ething\u003c/span\u003e: \u003cspan style=\"color:#000\"\u003eFlyer\u003c/span\u003e):\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#000\"\u003ething\u003c/span\u003e\u003cspan style=\"color:#000\"\u003e.\u003c/span\u003e\u003cspan style=\"color:#000\"\u003efly\u003c/span\u003e()\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eThe objects themselves do not need to know about the protocol. It is enough that they implement the right behavior:\u003c/p\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"\u003e\u003ccode class=\"language-python\" data-lang=\"python\"\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#a90d91\"\u003eclass\u003c/span\u003e \u003cspan style=\"color:#3f6e75\"\u003eFrank\u003c/span\u003e:\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#a90d91\"\u003edef\u003c/span\u003e \u003cspan style=\"color:#000\"\u003efly\u003c/span\u003e(\u003cspan style=\"color:#5b269a\"\u003eself\u003c/span\u003e):\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e        \u003cspan style=\"color:#177500\"\u003e# ...\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#a90d91\"\u003eclass\u003c/span\u003e \u003cspan style=\"color:#3f6e75\"\u003ePlane\u003c/span\u003e:\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#a90d91\"\u003edef\u003c/span\u003e \u003cspan style=\"color:#000\"\u003efly\u003c/span\u003e(\u003cspan style=\"color:#5b269a\"\u003eself\u003c/span\u003e):\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e        \u003cspan style=\"color:#177500\"\u003e# ...\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#a90d91\"\u003eclass\u003c/span\u003e \u003cspan style=\"color:#3f6e75\"\u003eSuperman\u003c/span\u003e:\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#a90d91\"\u003edef\u003c/span\u003e \u003cspan style=\"color:#000\"\u003efly\u003c/span\u003e(\u003cspan style=\"color:#5b269a\"\u003eself\u003c/span\u003e):\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e        \u003cspan style=\"color:#177500\"\u003e# ...\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eProtocols are static duck typing:\u003c/p\u003e\u003cul\u003e\u003cli\u003ethe interface is explicitly described in the protocol: a flyer has the \u003ccode\u003efly()\u003c/code\u003e method;\u003c/li\u003e\u003cli\u003ebut it is implemented implicitly, according to the \u0026#34;duck\u0026#34; principle: Superman has the \u003ccode\u003efly()\u003c/code\u003e method ‚Äî so he\u0026#39;s a flyer.\u003c/li\u003e\u003c/ul\u003e\u003cp\u003eLet\u0026#39;s check:\u003c/p\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e$ mypy flyer.py\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003eSuccess: no issues found in \u003cspan style=\"color:#1c01ce\"\u003e1\u003c/span\u003e \u003cspan style=\"color:#a90d91\"\u003esource\u003c/span\u003e file\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003ePerfect!\u003c/p\u003e\u003ch2 id=\"summary\"\u003eSummary\u003c/h2\u003e\u003cp\u003eIf your code should work consistently with different types, find their common behavior and specify it in the protocol. Use the protocol type for static code validation using mypy.\u003c/p\u003e\u003cp\u003eAvoid pigeons, planes, and superheroes whenever possible. They are nothing but problems.\u003c/p\u003e\u003cp\u003e\u003cem\u003e\u003ca href=\"/subscribe/\"\u003e\u003ci class=\"fas fa-star\"\u003e\u003c/i\u003e¬†\u003cstrong\u003eSubscribe\u003c/strong\u003e\u003c/a\u003e\nto keep up with new posts.\u003c/em\u003e\u003c/p\u003e\u003c/div\u003e\u003c/div\u003e\u003cfooter class=\"post__footer\"\u003e\u003cdiv class=\"row\"\u003e\u003cdiv class=\"col-xs-12\"\u003e\u003cdiv class=\"post__date\"\u003e\u003ctime datetime=\"2022-05-31 17:00:00 +0000 UTC\"\u003e31 May, 2022\u003c/time\u003e\u003c/div\u003e\u003cdiv class=\"post__tags\"\u003e\u003ca href=\"/tags/python/\"\u003epython\u003c/a\u003e¬†\u003c/div\u003e\u003c/div\u003e\u003c/div\u003e\u003c/footer\u003e\u003c/article\u003e",
  "Date": "2022-05-31T17:00:00Z",
  "Author": "Anton Zhiyanov"
}