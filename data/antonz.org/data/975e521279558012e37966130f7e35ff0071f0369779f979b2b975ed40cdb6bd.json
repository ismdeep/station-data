{
  "Source": "antonz.org",
  "Title": "Escaping macOS quarantine for SQLite extensions",
  "Link": "https://antonz.org/sqlpkg-which/",
  "Content": "\u003carticle class=\"post\"\u003e\u003cdiv class=\"row\"\u003e\u003cdiv class=\"col-xs-12 col-md-10 article\"\u003e\u003cheader\u003e\u003ch1\u003eEscaping macOS quarantine for SQLite extensions\u003c/h1\u003e\u003c/header\u003e\u003cp\u003e\u003ca href=\"https://github.com/nalgeon/sqlpkg-cli\"\u003e\u003cstrong\u003esqlpkg\u003c/strong\u003e\u003c/a\u003e is a package manager for SQLite, like \u003ccode\u003enpm\u003c/code\u003e for JavaScript or \u003ccode\u003epip\u003c/code\u003e for Python.\u003c/p\u003e\u003cp\u003eWith the new 0.2.0 release, it helps to escape quarantine on macOS and tells exactly which extension to load. There are also some nice features for package authors.\u003c/p\u003e\u003ch2 id=\"which-command\"\u003e\u0026#39;which\u0026#39; command\u003c/h2\u003e\u003cp\u003eTo load an extension into SQLite after installing it with \u003ccode\u003esqlpkg\u003c/code\u003e, you\u0026#39;ll need the path to the extension file. Run the \u003ccode\u003ewhich\u003c/code\u003e command to see it:\u003c/p\u003e\u003cpre tabindex=\"0\"\u003e\u003ccode\u003esqlpkg which nalgeon/stats\n\u003c/code\u003e\u003c/pre\u003e\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e/Users/anton/.sqlpkg/nalgeon/stats/stats.dylib\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eUse this path to load the extension with a \u003ccode\u003e.load\u003c/code\u003e shell command, a \u003ccode\u003eload_extension()\u003c/code\u003e SQL function, or other means. See this guide for details:\u003c/p\u003e\u003cp\u003e\u003ca href=\"/install-sqlite-extension/\"\u003eHow to Install an SQLite Extension\u003c/a\u003e\u003c/p\u003e\u003ch2 id=\"de-quarantine-extension-files-on-macos\"\u003eDe-quarantine extension files on macOS\u003c/h2\u003e\u003cp\u003eBy default, macOS disables unsigned binaries and prevents extensions from loading in SQLite. To solve this problem, you typically run a command like this:\u003c/p\u003e\u003cpre tabindex=\"0\"\u003e\u003ccode\u003exattr -d com.apple.quarantine /path/to/extension.dylib\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eBut now \u003ccode\u003esqlpkg\u003c/code\u003e automatically removes installed extensions from the operating system quarantine, so you can use them right away.\u003c/p\u003e\u003ch2 id=\"latest-version-support\"\u003eLatest version support\u003c/h2\u003e\u003cp\u003eThis feature is intended for package authors.\u003c/p\u003e\u003cp\u003ePreviously, you had to explicitly specify the version number in the package spec file. Now \u003ccode\u003esqlpkg\u003c/code\u003e supports the \u003ccode\u003elatest\u003c/code\u003e version for GitHub-hosted packages. It will automatically resolve the version to the latest GitHub release. For example:\u003c/p\u003e\u003cpre tabindex=\"0\"\u003e\u003ccode class=\"language-jsonc\" data-lang=\"jsonc\"\u003e{\n    \u0026#34;owner\u0026#34;: \u0026#34;nalgeon\u0026#34;,\n    \u0026#34;name\u0026#34;: \u0026#34;stats\u0026#34;,\n    \u0026#34;version\u0026#34;: \u0026#34;latest\u0026#34; // resolves automatically\n    // ...\n}\n\u003c/code\u003e\u003c/pre\u003e\u003ch2 id=\"checksums\"\u003eChecksums\u003c/h2\u003e\u003cp\u003eThis feature is intended for package authors.\u003c/p\u003e\u003cp\u003eTo have \u003ccode\u003esqlpkg\u003c/code\u003e validate asset checksums, host the \u003ccode\u003echecksums.txt\u003c/code\u003e file along with the asset files. For example:\u003c/p\u003e\u003cpre tabindex=\"0\"\u003e\u003ccode\u003ehttps://github.com/nalgeon/sqlean/releases/latest/download/checksums.txt\nhttps://github.com/nalgeon/sqlean/releases/latest/download/sqlean-linux-x86.zip\nhttps://github.com/nalgeon/sqlean/releases/latest/download/sqlean-macos-arm64.zip\nhttps://github.com/nalgeon/sqlean/releases/latest/download/sqlean-macos-x86.zip\nhttps://github.com/nalgeon/sqlean/releases/latest/download/sqlean-win-x64.zip\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eThe contents of \u003ccode\u003echecksums.txt\u003c/code\u003e should match the standard POSIX \u003ccode\u003eshasum\u003c/code\u003e output (using the SHA-256 algorithm):\u003c/p\u003e\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e6bc24897dde2c7f00cf435055a6853358cb06fcb5a2a789877903ebec0b9298d  sqlean-linux-x86.zip\ne3de533fdc23e0d953572c2b544ecc2951b890758af0a00b5a42695ae59ee7ac  sqlean-macos-arm64.zip\ne3de533fdc23e0d953572c2b544ecc2951b890758af0a00b5a42695ae59ee7ac  sqlean-macos-x86.zip\nf0d2d705bbe641bf2950a51253820e85de04373b7f428f109f69df1d85fa0654  sqlean-win-x64.zip\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eThat\u0026#39;s it! At this point, I\u0026#39;m pretty happy with the core \u003ccode\u003esqlpkg\u003c/code\u003e feature set.\u003c/p\u003e\u003cp\u003e\u003ca class=\"button\" href=\"https://github.com/nalgeon/sqlpkg-cli/releases/0.2.0\"\u003eDownload sqlpkg 0.2.0\u003c/a\u003e\u003c/p\u003e\u003cp\u003e\u003cem\u003e\u003ca href=\"/subscribe/\"\u003e\u003ci class=\"fas fa-star\"\u003e\u003c/i\u003e \u003cstrong\u003eSubscribe\u003c/strong\u003e\u003c/a\u003e\nto keep up with new posts.\u003c/em\u003e\u003c/p\u003e\u003c/div\u003e\u003c/div\u003e\u003cfooter class=\"post__footer\"\u003e\u003cdiv class=\"row\"\u003e\u003cdiv class=\"col-xs-12\"\u003e\u003cdiv class=\"post__date\"\u003e\u003ctime datetime=\"2023-07-24 17:00:00 +0000 UTC\"\u003e24 Jul, 2023\u003c/time\u003e\u003c/div\u003e\u003cdiv class=\"post__tags\"\u003e\u003ca href=\"/tags/sqlite/\"\u003esqlite\u003c/a\u003e \u003c/div\u003e\u003c/div\u003e\u003c/div\u003e\u003c/footer\u003e\u003c/article\u003e",
  "Date": "2023-07-24T17:00:00Z",
  "Author": "Anton Zhiyanov"
}