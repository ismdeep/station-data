{
  "Source": "antonz.org",
  "Title": "Gist of Go: Goroutines",
  "Link": "https://antonz.org/go-concurrency/goroutines/",
  "Content": "\u003carticle class=\"post\"\u003e\u003cdiv class=\"row\"\u003e\u003cdiv class=\"col-xs-12 col-md-10 article\"\u003e\u003cheader\u003e\u003ch1\u003eGist of Go: Goroutines\u003c/h1\u003e\u003c/header\u003e\u003cp\u003e\u003cem\u003eThis is a chapter from my book on \u003ca href=\"/go-concurrency\"\u003eGo concurrency\u003c/a\u003e, which teaches the topic from the ground up through interactive exercises.\u003c/em\u003e\u003c/p\u003e\u003cp\u003eLet\u0026#39;s skip the long talk about concurrency and parallelism and jump right into writing a concurrent program in Go!\u003c/p\u003e\u003cdiv class=\"row\"\u003e\u003cdiv class=\"col-xs-12 col-sm-6 col-md-5\"\u003e\u003cul\u003e\u003cli\u003e\u003ca href=\"#go-routine\"\u003eGo-routine\u003c/a\u003e\u003c/li\u003e\u003cli\u003e\u003ca href=\"#dependent-and-independent-goroutines\"\u003eDependent goroutines\u003c/a\u003e\u003c/li\u003e\u003cli\u003e\u003ca href=\"#-counting-digits-in-words\"\u003eCounting digits\u003c/a\u003e ✎\u003c/li\u003e\u003cli\u003e\u003ca href=\"#channels\"\u003eChannels\u003c/a\u003e\u003c/li\u003e\u003cli\u003e\u003ca href=\"#-result-channel\"\u003eResult channel\u003c/a\u003e ✎\u003c/li\u003e\u003cli\u003e\u003ca href=\"#generator\"\u003eGenerator\u003c/a\u003e\u003c/li\u003e\u003c/ul\u003e\u003c/div\u003e\u003cdiv class=\"col-xs-12 col-sm-6 col-md-5\"\u003e\u003cul\u003e\u003cli\u003e\u003ca href=\"#-generator-with-goroutines\"\u003eGenerator+goroutines\u003c/a\u003e ✎\u003c/li\u003e\u003cli\u003e\u003ca href=\"#-reader-and-worker\"\u003eReader/worker\u003c/a\u003e ✎\u003c/li\u003e\u003cli\u003e\u003ca href=\"#-named-goroutines\"\u003eNamed goroutines\u003c/a\u003e ✎\u003c/li\u003e\u003cli\u003e\u003ca href=\"#output-channel\"\u003eOutput channel\u003c/a\u003e\u003c/li\u003e\u003cli\u003e\u003ca href=\"#keep-it-up\"\u003eKeep it up\u003c/a\u003e\u003c/li\u003e\u003c/ul\u003e\u003c/div\u003e\u003c/div\u003e\u003ch2 id=\"go-routine\"\u003eGo-routine\u003c/h2\u003e\u003cp\u003eSuppose we have a function that speaks a phrase word by word with some pauses:\u003c/p\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#177500\"\u003e// say prints each word of a phrase.\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#177500\"\u003e\u003c/span\u003e\u003cspan style=\"color:#a90d91\"\u003efunc\u003c/span\u003e \u003cspan style=\"color:#000\"\u003esay\u003c/span\u003e(\u003cspan style=\"color:#000\"\u003ephrase\u003c/span\u003e \u003cspan style=\"color:#a90d91\"\u003estring\u003c/span\u003e) {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#a90d91\"\u003efor\u003c/span\u003e \u003cspan style=\"color:#000\"\u003e_\u003c/span\u003e, \u003cspan style=\"color:#000\"\u003eword\u003c/span\u003e \u003cspan style=\"color:#000\"\u003e:=\u003c/span\u003e \u003cspan style=\"color:#a90d91\"\u003erange\u003c/span\u003e \u003cspan style=\"color:#000\"\u003estrings\u003c/span\u003e.\u003cspan style=\"color:#000\"\u003eFields\u003c/span\u003e(\u003cspan style=\"color:#000\"\u003ephrase\u003c/span\u003e) {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e        \u003cspan style=\"color:#000\"\u003efmt\u003c/span\u003e.\u003cspan style=\"color:#000\"\u003ePrintf\u003c/span\u003e(\u003cspan style=\"color:#c41a16\"\u003e\u0026#34;Simon says: %s...\\n\u0026#34;\u003c/span\u003e, \u003cspan style=\"color:#000\"\u003eword\u003c/span\u003e)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e        \u003cspan style=\"color:#000\"\u003edur\u003c/span\u003e \u003cspan style=\"color:#000\"\u003e:=\u003c/span\u003e \u003cspan style=\"color:#000\"\u003etime\u003c/span\u003e.\u003cspan style=\"color:#000\"\u003eDuration\u003c/span\u003e(\u003cspan style=\"color:#000\"\u003erand\u003c/span\u003e.\u003cspan style=\"color:#000\"\u003eIntn\u003c/span\u003e(\u003cspan style=\"color:#1c01ce\"\u003e100\u003c/span\u003e)) \u003cspan style=\"color:#000\"\u003e*\u003c/span\u003e \u003cspan style=\"color:#000\"\u003etime\u003c/span\u003e.\u003cspan style=\"color:#000\"\u003eMillisecond\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e        \u003cspan style=\"color:#000\"\u003etime\u003c/span\u003e.\u003cspan style=\"color:#000\"\u003eSleep\u003c/span\u003e(\u003cspan style=\"color:#000\"\u003edur\u003c/span\u003e)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e    }\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e}\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ccodapi-snippet id=\"s-say\" editor=\"basic\"\u003e\u003c/codapi-snippet\u003e\u003cp\u003eWe call it from the main function:\u003c/p\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#a90d91\"\u003efunc\u003c/span\u003e \u003cspan style=\"color:#000\"\u003emain\u003c/span\u003e() {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#000\"\u003esay\u003c/span\u003e(\u003cspan style=\"color:#c41a16\"\u003e\u0026#34;go is awesome\u0026#34;\u003c/span\u003e)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e}\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ccodapi-snippet sandbox=\"go\" editor=\"basic\" depends-on=\"s-say\" template=\"header.go\" output=\"\"\u003e\u003c/codapi-snippet\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"\u003e\u003ccode class=\"language-text\" data-lang=\"text\"\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003eSimon says: go...\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003eSimon says: is...\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003eSimon says: awesome...\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eNow let\u0026#39;s create two talkers, each saying their own phrase:\u003c/p\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#177500\"\u003e// say prints each word of a phrase.\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#177500\"\u003e\u003c/span\u003e\u003cspan style=\"color:#a90d91\"\u003efunc\u003c/span\u003e \u003cspan style=\"color:#000\"\u003esay\u003c/span\u003e(\u003cspan style=\"color:#000\"\u003eid\u003c/span\u003e \u003cspan style=\"color:#a90d91\"\u003eint\u003c/span\u003e, \u003cspan style=\"color:#000\"\u003ephrase\u003c/span\u003e \u003cspan style=\"color:#a90d91\"\u003estring\u003c/span\u003e) {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#a90d91\"\u003efor\u003c/span\u003e \u003cspan style=\"color:#000\"\u003e_\u003c/span\u003e, \u003cspan style=\"color:#000\"\u003eword\u003c/span\u003e \u003cspan style=\"color:#000\"\u003e:=\u003c/span\u003e \u003cspan style=\"color:#a90d91\"\u003erange\u003c/span\u003e \u003cspan style=\"color:#000\"\u003estrings\u003c/span\u003e.\u003cspan style=\"color:#000\"\u003eFields\u003c/span\u003e(\u003cspan style=\"color:#000\"\u003ephrase\u003c/span\u003e) {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e        \u003cspan style=\"color:#000\"\u003efmt\u003c/span\u003e.\u003cspan style=\"color:#000\"\u003ePrintf\u003c/span\u003e(\u003cspan style=\"color:#c41a16\"\u003e\u0026#34;Worker #%d says: %s...\\n\u0026#34;\u003c/span\u003e, \u003cspan style=\"color:#000\"\u003eid\u003c/span\u003e, \u003cspan style=\"color:#000\"\u003eword\u003c/span\u003e)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e        \u003cspan style=\"color:#000\"\u003edur\u003c/span\u003e \u003cspan style=\"color:#000\"\u003e:=\u003c/span\u003e \u003cspan style=\"color:#000\"\u003etime\u003c/span\u003e.\u003cspan style=\"color:#000\"\u003eDuration\u003c/span\u003e(\u003cspan style=\"color:#000\"\u003erand\u003c/span\u003e.\u003cspan style=\"color:#000\"\u003eIntn\u003c/span\u003e(\u003cspan style=\"color:#1c01ce\"\u003e100\u003c/span\u003e)) \u003cspan style=\"color:#000\"\u003e*\u003c/span\u003e \u003cspan style=\"color:#000\"\u003etime\u003c/span\u003e.\u003cspan style=\"color:#000\"\u003eMillisecond\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e        \u003cspan style=\"color:#000\"\u003etime\u003c/span\u003e.\u003cspan style=\"color:#000\"\u003eSleep\u003c/span\u003e(\u003cspan style=\"color:#000\"\u003edur\u003c/span\u003e)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e    }\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e}\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ccodapi-snippet id=\"s-say-id\" editor=\"basic\"\u003e\u003c/codapi-snippet\u003e\u003cp\u003eRun the program:\u003c/p\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#a90d91\"\u003efunc\u003c/span\u003e \u003cspan style=\"color:#000\"\u003emain\u003c/span\u003e() {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#000\"\u003esay\u003c/span\u003e(\u003cspan style=\"color:#1c01ce\"\u003e1\u003c/span\u003e, \u003cspan style=\"color:#c41a16\"\u003e\u0026#34;go is awesome\u0026#34;\u003c/span\u003e)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#000\"\u003esay\u003c/span\u003e(\u003cspan style=\"color:#1c01ce\"\u003e2\u003c/span\u003e, \u003cspan style=\"color:#c41a16\"\u003e\u0026#34;cats are cute\u0026#34;\u003c/span\u003e)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e}\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ccodapi-snippet sandbox=\"go\" editor=\"basic\" depends-on=\"s-say-id\" template=\"header.go\" output=\"\"\u003e\u003c/codapi-snippet\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"\u003e\u003ccode class=\"language-text\" data-lang=\"text\"\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003eWorker #1 says: go...\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003eWorker #1 says: is...\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003eWorker #1 says: awesome...\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003eWorker #2 says: cats...\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003eWorker #2 says: are...\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003eWorker #2 says: cute...\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eNot bad, but the functions speak one after the other. To make them speak at the same time, let\u0026#39;s add \u003ccode\u003ego\u003c/code\u003e before calling the \u003ccode\u003esay()\u003c/code\u003e function:\u003c/p\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#a90d91\"\u003efunc\u003c/span\u003e \u003cspan style=\"color:#000\"\u003emain\u003c/span\u003e() {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#a90d91\"\u003ego\u003c/span\u003e \u003cspan style=\"color:#000\"\u003esay\u003c/span\u003e(\u003cspan style=\"color:#1c01ce\"\u003e1\u003c/span\u003e, \u003cspan style=\"color:#c41a16\"\u003e\u0026#34;go is awesome\u0026#34;\u003c/span\u003e)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#a90d91\"\u003ego\u003c/span\u003e \u003cspan style=\"color:#000\"\u003esay\u003c/span\u003e(\u003cspan style=\"color:#1c01ce\"\u003e2\u003c/span\u003e, \u003cspan style=\"color:#c41a16\"\u003e\u0026#34;cats are cute\u0026#34;\u003c/span\u003e)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#000\"\u003etime\u003c/span\u003e.\u003cspan style=\"color:#000\"\u003eSleep\u003c/span\u003e(\u003cspan style=\"color:#1c01ce\"\u003e500\u003c/span\u003e \u003cspan style=\"color:#000\"\u003e*\u003c/span\u003e \u003cspan style=\"color:#000\"\u003etime\u003c/span\u003e.\u003cspan style=\"color:#000\"\u003eMillisecond\u003c/span\u003e)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e}\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ccodapi-snippet sandbox=\"go\" editor=\"basic\" depends-on=\"s-say-id\" template=\"header.go\" output=\"\" actions=\"Playground:@playground\" data-playground=\"https://go.dev/play/p/2mSTyuXYLWI\"\u003e\u003c/codapi-snippet\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"\u003e\u003ccode class=\"language-text\" data-lang=\"text\"\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003eWorker #2 says: cats...\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003eWorker #1 says: go...\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003eWorker #2 says: are...\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003eWorker #1 says: is...\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003eWorker #2 says: cute...\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003eWorker #1 says: awesome...\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eNow they really compete for our attention! When we write \u003ccode\u003ego f()\u003c/code\u003e, the function \u003ccode\u003ef()\u003c/code\u003e runs independently of the others.\u003c/p\u003e\u003cblockquote\u003e\u003cp\u003eIf you\u0026#39;re familiar with concurrency in Python, JavaScript, or other languages with async/await, don\u0026#39;t try to apply that experience to Go. Go has a very different approach to concurrency. Try to look at it with fresh eyes.\u003c/p\u003e\u003c/blockquote\u003e\u003cp\u003eFunctions that run with \u003ccode\u003ego\u003c/code\u003e are called \u003cem\u003egoroutines\u003c/em\u003e. The Go runtime juggles these goroutines and distributes them among operating system threads running on CPU cores. Compared to OS threads, goroutines are lightweight, so you can create hundreds or thousands of them.\u003c/p\u003e\u003cp\u003eYou may be wondering why we need \u003ccode\u003etime.Sleep()\u003c/code\u003e in the \u003ccode\u003emain\u003c/code\u003e function. Let\u0026#39;s clarify that.\u003c/p\u003e\u003ch2 id=\"dependent-and-independent-goroutines\"\u003eDependent and independent goroutines\u003c/h2\u003e\u003cp\u003eGoroutines are completely independent. When we call \u003ccode\u003ego say()\u003c/code\u003e, the function runs on its own. \u003ccode\u003emain\u003c/code\u003e doesn\u0026#39;t wait for it. So if we write \u003ccode\u003emain\u003c/code\u003e like this:\u003c/p\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#a90d91\"\u003efunc\u003c/span\u003e \u003cspan style=\"color:#000\"\u003emain\u003c/span\u003e() {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#a90d91\"\u003ego\u003c/span\u003e \u003cspan style=\"color:#000\"\u003esay\u003c/span\u003e(\u003cspan style=\"color:#1c01ce\"\u003e1\u003c/span\u003e, \u003cspan style=\"color:#c41a16\"\u003e\u0026#34;go is awesome\u0026#34;\u003c/span\u003e)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#a90d91\"\u003ego\u003c/span\u003e \u003cspan style=\"color:#000\"\u003esay\u003c/span\u003e(\u003cspan style=\"color:#1c01ce\"\u003e2\u003c/span\u003e, \u003cspan style=\"color:#c41a16\"\u003e\u0026#34;cats are cute\u0026#34;\u003c/span\u003e)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e}\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e— the program won\u0026#39;t print anything. \u003ccode\u003emain\u003c/code\u003e finishes before our goroutines speak, and since the main is done, the whole program terminates.\u003c/p\u003e\u003cp\u003e\u003ccode\u003emain\u003c/code\u003e is also a goroutine, but it starts implicitly when the program starts. So we have three goroutines: \u003ccode\u003emain\u003c/code\u003e, \u003ccode\u003esay(1)\u003c/code\u003e, and \u003ccode\u003esay(2)\u003c/code\u003e, all of which are independent. The only catch is that when \u003ccode\u003emain\u003c/code\u003e ends, everything else ends too.\u003c/p\u003e\u003cp\u003eUsing \u003ccode\u003etime.Sleep()\u003c/code\u003e to wait for goroutines is a bad idea because we can\u0026#39;t predict how long they will take. A better approach is to use a \u003cem\u003ewait group\u003c/em\u003e:\u003c/p\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#a90d91\"\u003efunc\u003c/span\u003e \u003cspan style=\"color:#000\"\u003emain\u003c/span\u003e() {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#a90d91\"\u003evar\u003c/span\u003e \u003cspan style=\"color:#000\"\u003ewg\u003c/span\u003e \u003cspan style=\"color:#000\"\u003esync\u003c/span\u003e.\u003cspan style=\"color:#000\"\u003eWaitGroup\u003c/span\u003e \u003cspan style=\"color:#177500\"\u003e// (1)\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#177500\"\u003e\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#000\"\u003ewg\u003c/span\u003e.\u003cspan style=\"color:#000\"\u003eAdd\u003c/span\u003e(\u003cspan style=\"color:#1c01ce\"\u003e1\u003c/span\u003e)             \u003cspan style=\"color:#177500\"\u003e// (2)\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#177500\"\u003e\u003c/span\u003e    \u003cspan style=\"color:#a90d91\"\u003ego\u003c/span\u003e \u003cspan style=\"color:#000\"\u003esay\u003c/span\u003e(\u003cspan style=\"color:#000\"\u003e\u0026amp;\u003c/span\u003e\u003cspan style=\"color:#000\"\u003ewg\u003c/span\u003e, \u003cspan style=\"color:#1c01ce\"\u003e1\u003c/span\u003e, \u003cspan style=\"color:#c41a16\"\u003e\u0026#34;go is awesome\u0026#34;\u003c/span\u003e)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#000\"\u003ewg\u003c/span\u003e.\u003cspan style=\"color:#000\"\u003eAdd\u003c/span\u003e(\u003cspan style=\"color:#1c01ce\"\u003e1\u003c/span\u003e)             \u003cspan style=\"color:#177500\"\u003e// (2)\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#177500\"\u003e\u003c/span\u003e    \u003cspan style=\"color:#a90d91\"\u003ego\u003c/span\u003e \u003cspan style=\"color:#000\"\u003esay\u003c/span\u003e(\u003cspan style=\"color:#000\"\u003e\u0026amp;\u003c/span\u003e\u003cspan style=\"color:#000\"\u003ewg\u003c/span\u003e, \u003cspan style=\"color:#1c01ce\"\u003e2\u003c/span\u003e, \u003cspan style=\"color:#c41a16\"\u003e\u0026#34;cats are cute\u0026#34;\u003c/span\u003e)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#000\"\u003ewg\u003c/span\u003e.\u003cspan style=\"color:#000\"\u003eWait\u003c/span\u003e()             \u003cspan style=\"color:#177500\"\u003e// (3)\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#177500\"\u003e\u003c/span\u003e}\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#177500\"\u003e// say prints each word of a phrase.\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#177500\"\u003e\u003c/span\u003e\u003cspan style=\"color:#a90d91\"\u003efunc\u003c/span\u003e \u003cspan style=\"color:#000\"\u003esay\u003c/span\u003e(\u003cspan style=\"color:#000\"\u003ewg\u003c/span\u003e \u003cspan style=\"color:#000\"\u003e*\u003c/span\u003e\u003cspan style=\"color:#000\"\u003esync\u003c/span\u003e.\u003cspan style=\"color:#000\"\u003eWaitGroup\u003c/span\u003e, \u003cspan style=\"color:#000\"\u003eid\u003c/span\u003e \u003cspan style=\"color:#a90d91\"\u003eint\u003c/span\u003e, \u003cspan style=\"color:#000\"\u003ephrase\u003c/span\u003e \u003cspan style=\"color:#a90d91\"\u003estring\u003c/span\u003e) {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#a90d91\"\u003efor\u003c/span\u003e \u003cspan style=\"color:#000\"\u003e_\u003c/span\u003e, \u003cspan style=\"color:#000\"\u003eword\u003c/span\u003e \u003cspan style=\"color:#000\"\u003e:=\u003c/span\u003e \u003cspan style=\"color:#a90d91\"\u003erange\u003c/span\u003e \u003cspan style=\"color:#000\"\u003estrings\u003c/span\u003e.\u003cspan style=\"color:#000\"\u003eFields\u003c/span\u003e(\u003cspan style=\"color:#000\"\u003ephrase\u003c/span\u003e) {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e        \u003cspan style=\"color:#000\"\u003efmt\u003c/span\u003e.\u003cspan style=\"color:#000\"\u003ePrintf\u003c/span\u003e(\u003cspan style=\"color:#c41a16\"\u003e\u0026#34;Worker #%d says: %s...\\n\u0026#34;\u003c/span\u003e, \u003cspan style=\"color:#000\"\u003eid\u003c/span\u003e, \u003cspan style=\"color:#000\"\u003eword\u003c/span\u003e)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e        \u003cspan style=\"color:#000\"\u003edur\u003c/span\u003e \u003cspan style=\"color:#000\"\u003e:=\u003c/span\u003e \u003cspan style=\"color:#000\"\u003etime\u003c/span\u003e.\u003cspan style=\"color:#000\"\u003eDuration\u003c/span\u003e(\u003cspan style=\"color:#000\"\u003erand\u003c/span\u003e.\u003cspan style=\"color:#000\"\u003eIntn\u003c/span\u003e(\u003cspan style=\"color:#1c01ce\"\u003e100\u003c/span\u003e)) \u003cspan style=\"color:#000\"\u003e*\u003c/span\u003e \u003cspan style=\"color:#000\"\u003etime\u003c/span\u003e.\u003cspan style=\"color:#000\"\u003eMillisecond\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e        \u003cspan style=\"color:#000\"\u003etime\u003c/span\u003e.\u003cspan style=\"color:#000\"\u003eSleep\u003c/span\u003e(\u003cspan style=\"color:#000\"\u003edur\u003c/span\u003e)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e    }\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#000\"\u003ewg\u003c/span\u003e.\u003cspan style=\"color:#000\"\u003eDone\u003c/span\u003e()             \u003cspan style=\"color:#177500\"\u003e// (4)\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#177500\"\u003e\u003c/span\u003e}\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ccodapi-snippet sandbox=\"go\" editor=\"basic\" template=\"header.go\" output=\"\"\u003e\u003c/codapi-snippet\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"\u003e\u003ccode class=\"language-text\" data-lang=\"text\"\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003eWorker #2 says: cats...\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003eWorker #1 says: go...\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003eWorker #2 says: are...\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003eWorker #1 says: is...\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003eWorker #2 says: cute...\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003eWorker #1 says: awesome...\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e\u003ccode\u003ewg\u003c/code\u003e ➊ has a counter inside. Calling \u003ccode\u003ewg.Add(1)\u003c/code\u003e ➋ increments it by one, while \u003ccode\u003ewg.Done()\u003c/code\u003e ➍ decrements it. \u003ccode\u003ewg.Wait()\u003c/code\u003e ➌ blocks the goroutine (in this case, \u003ccode\u003emain\u003c/code\u003e) until the counter reaches zero. This way, \u003ccode\u003emain\u003c/code\u003e waits for \u003ccode\u003esay(1)\u003c/code\u003e and \u003ccode\u003esay(2)\u003c/code\u003e to finish before it exits.\u003c/p\u003e\u003cp\u003eHowever, this approach mixes business logic (\u003ccode\u003esay\u003c/code\u003e) with concurrency logic (\u003ccode\u003ewg\u003c/code\u003e). As a result, we can\u0026#39;t easily run \u003ccode\u003esay\u003c/code\u003e in regular, non-concurrent code.\u003c/p\u003e\u003cp\u003eIn Go, it\u0026#39;s common to separate concurrency logic from business logic. This is usually done with separate functions. In simple cases like ours, even anonymous functions will do:\u003c/p\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#a90d91\"\u003efunc\u003c/span\u003e \u003cspan style=\"color:#000\"\u003emain\u003c/span\u003e() {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#a90d91\"\u003evar\u003c/span\u003e \u003cspan style=\"color:#000\"\u003ewg\u003c/span\u003e \u003cspan style=\"color:#000\"\u003esync\u003c/span\u003e.\u003cspan style=\"color:#000\"\u003eWaitGroup\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#000\"\u003ewg\u003c/span\u003e.\u003cspan style=\"color:#000\"\u003eAdd\u003c/span\u003e(\u003cspan style=\"color:#1c01ce\"\u003e2\u003c/span\u003e)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#a90d91\"\u003ego\u003c/span\u003e \u003cspan style=\"color:#a90d91\"\u003efunc\u003c/span\u003e() {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e        \u003cspan style=\"color:#a90d91\"\u003edefer\u003c/span\u003e \u003cspan style=\"color:#000\"\u003ewg\u003c/span\u003e.\u003cspan style=\"color:#000\"\u003eDone\u003c/span\u003e()\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e        \u003cspan style=\"color:#000\"\u003esay\u003c/span\u003e(\u003cspan style=\"color:#1c01ce\"\u003e1\u003c/span\u003e, \u003cspan style=\"color:#c41a16\"\u003e\u0026#34;go is awesome\u0026#34;\u003c/span\u003e)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e    }()\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#a90d91\"\u003ego\u003c/span\u003e \u003cspan style=\"color:#a90d91\"\u003efunc\u003c/span\u003e() {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e        \u003cspan style=\"color:#a90d91\"\u003edefer\u003c/span\u003e \u003cspan style=\"color:#000\"\u003ewg\u003c/span\u003e.\u003cspan style=\"color:#000\"\u003eDone\u003c/span\u003e()\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e        \u003cspan style=\"color:#000\"\u003esay\u003c/span\u003e(\u003cspan style=\"color:#1c01ce\"\u003e2\u003c/span\u003e, \u003cspan style=\"color:#c41a16\"\u003e\u0026#34;cats are cute\u0026#34;\u003c/span\u003e)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e    }()\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#000\"\u003ewg\u003c/span\u003e.\u003cspan style=\"color:#000\"\u003eWait\u003c/span\u003e()\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e}\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ccodapi-snippet sandbox=\"go\" editor=\"basic\" depends-on=\"s-say-id\" template=\"header.go\" output=\"\" actions=\"Playground:@playground\" data-playground=\"https://go.dev/play/p/5DE_aQ1BRcU\"\u003e\u003c/codapi-snippet\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"\u003e\u003ccode class=\"language-text\" data-lang=\"text\"\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003eWorker #2 says: cats...\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003eWorker #1 says: go...\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003eWorker #2 says: are...\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003eWorker #1 says: is...\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003eWorker #2 says: cute...\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003eWorker #1 says: awesome...\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eHere\u0026#39;s how it works:\u003c/p\u003e\u003cul\u003e\u003cli\u003eWe know there will be two goroutines, so we call \u003ccode\u003ewg.Add(2)\u003c/code\u003e right away.\u003c/li\u003e\u003cli\u003eAnonymous functions are started with \u003ccode\u003ego\u003c/code\u003e just like regular ones.\u003c/li\u003e\u003cli\u003e\u003ccode\u003edefer wg.Done()\u003c/code\u003e ensures the goroutine decrements the counter before exiting, even if \u003ccode\u003esay\u003c/code\u003e panics.\u003c/li\u003e\u003cli\u003e\u003ccode\u003esay\u003c/code\u003e itself knows nothing about concurrency and just runs happily.\u003c/li\u003e\u003c/ul\u003e\u003ch2 id=\"-counting-digits-in-words\"\u003e✎ Counting digits in words\u003c/h2\u003e\u003cp\u003e\u003cem\u003eThe ✎ symbol indicates exercises. They are an essential part of the book, so try not to skip them. Half of what you learn comes from the exercises.\u003c/em\u003e\u003c/p\u003e\u003cp\u003eHere\u0026#39;s a function that counts the digits in a word:\u003c/p\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#177500\"\u003e// countDigits returns the number of digits in a string.\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#177500\"\u003e\u003c/span\u003e\u003cspan style=\"color:#a90d91\"\u003efunc\u003c/span\u003e \u003cspan style=\"color:#000\"\u003ecountDigits\u003c/span\u003e(\u003cspan style=\"color:#000\"\u003estr\u003c/span\u003e \u003cspan style=\"color:#a90d91\"\u003estring\u003c/span\u003e) \u003cspan style=\"color:#a90d91\"\u003eint\u003c/span\u003e {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#000\"\u003ecount\u003c/span\u003e \u003cspan style=\"color:#000\"\u003e:=\u003c/span\u003e \u003cspan style=\"color:#1c01ce\"\u003e0\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#a90d91\"\u003efor\u003c/span\u003e \u003cspan style=\"color:#000\"\u003e_\u003c/span\u003e, \u003cspan style=\"color:#000\"\u003echar\u003c/span\u003e \u003cspan style=\"color:#000\"\u003e:=\u003c/span\u003e \u003cspan style=\"color:#a90d91\"\u003erange\u003c/span\u003e \u003cspan style=\"color:#000\"\u003estr\u003c/span\u003e {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e        \u003cspan style=\"color:#a90d91\"\u003eif\u003c/span\u003e \u003cspan style=\"color:#000\"\u003eunicode\u003c/span\u003e.\u003cspan style=\"color:#000\"\u003eIsDigit\u003c/span\u003e(\u003cspan style=\"color:#000\"\u003echar\u003c/span\u003e) {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e            \u003cspan style=\"color:#000\"\u003ecount\u003c/span\u003e\u003cspan style=\"color:#000\"\u003e++\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e        }\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e    }\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#a90d91\"\u003ereturn\u003c/span\u003e \u003cspan style=\"color:#000\"\u003ecount\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e}\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eCreate a function \u003ccode\u003ecountDigitsInWords\u003c/code\u003e that takes an input string, splits it into words, and counts the digits in each word using \u003ccode\u003ecountDigits\u003c/code\u003e. Be sure to do the counting for each word in a separate goroutine.\u003c/p\u003e\u003cp\u003eWe haven\u0026#39;t discussed how to modify shared data from different goroutines yet, so there is a ready-to-use variable called \u003ccode\u003esyncStats\u003c/code\u003e that you can safely access from goroutines.\u003c/p\u003e\u003cp\u003e\u003cstrong\u003eImportant\u003c/strong\u003e: When submitting your solution, send only the code fragment marked with \u0026#34;solution start\u0026#34; and \u0026#34;solution end\u0026#34; comments. The full source code is available via the \u0026#34;Playground\u0026#34; link below.\u003c/p\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#177500\"\u003e// solution start\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#177500\"\u003e\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#177500\"\u003e// countDigitsInWords counts the number of digits in the words of a phrase.\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#177500\"\u003e\u003c/span\u003e\u003cspan style=\"color:#a90d91\"\u003efunc\u003c/span\u003e \u003cspan style=\"color:#000\"\u003ecountDigitsInWords\u003c/span\u003e(\u003cspan style=\"color:#000\"\u003ephrase\u003c/span\u003e \u003cspan style=\"color:#a90d91\"\u003estring\u003c/span\u003e) \u003cspan style=\"color:#000\"\u003ecounter\u003c/span\u003e {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#a90d91\"\u003evar\u003c/span\u003e \u003cspan style=\"color:#000\"\u003ewg\u003c/span\u003e \u003cspan style=\"color:#000\"\u003esync\u003c/span\u003e.\u003cspan style=\"color:#000\"\u003eWaitGroup\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#000\"\u003esyncStats\u003c/span\u003e \u003cspan style=\"color:#000\"\u003e:=\u003c/span\u003e \u003cspan style=\"color:#a90d91\"\u003enew\u003c/span\u003e(\u003cspan style=\"color:#000\"\u003esync\u003c/span\u003e.\u003cspan style=\"color:#000\"\u003eMap\u003c/span\u003e)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#000\"\u003ewords\u003c/span\u003e \u003cspan style=\"color:#000\"\u003e:=\u003c/span\u003e \u003cspan style=\"color:#000\"\u003estrings\u003c/span\u003e.\u003cspan style=\"color:#000\"\u003eFields\u003c/span\u003e(\u003cspan style=\"color:#000\"\u003ephrase\u003c/span\u003e)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#177500\"\u003e// Count the number of digits in words,\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#177500\"\u003e\u003c/span\u003e    \u003cspan style=\"color:#177500\"\u003e// using a separate goroutine for each word.\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#177500\"\u003e\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#177500\"\u003e// To store the results of the count,\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#177500\"\u003e\u003c/span\u003e    \u003cspan style=\"color:#177500\"\u003e// use syncStats.Store(word, count)\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#177500\"\u003e\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#177500\"\u003e// As a result, syncStats should contain words\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#177500\"\u003e\u003c/span\u003e    \u003cspan style=\"color:#177500\"\u003e// and the number of digits in each.\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#177500\"\u003e\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#a90d91\"\u003ereturn\u003c/span\u003e \u003cspan style=\"color:#000\"\u003easStats\u003c/span\u003e(\u003cspan style=\"color:#000\"\u003esyncStats\u003c/span\u003e)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e}\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#177500\"\u003e// solution end\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ccodapi-snippet id=\"ex01\" sandbox=\"go\" editor=\"basic\" template=\"ex01.go\" actions=\"Playground:@playground Toggle_solution:@solution\" data-playground=\"https://go.dev/play/p/CPI22QZfmE3\"\u003e\u003c/codapi-snippet\u003e\u003cdiv id=\"ex01-solution\" class=\"boxed\" hidden=\"\"\u003e\u003cp\u003e\u003cstrong\u003e✓ Counting digits in words\u003c/strong\u003e\u003c/p\u003e\u003cp\u003eHere\u0026#39;s what we do:\u003c/p\u003e\u003cul\u003e\u003cli\u003eSet the wait group counter to the number of goroutines (= number of words) with \u003ccode\u003ewg.Add()\u003c/code\u003e.\u003c/li\u003e\u003cli\u003eFor each word, start a new goroutine to count the digits and store the results in \u003ccode\u003esyncStats\u003c/code\u003e.\u003c/li\u003e\u003cli\u003eDecrement the wait group counter when a goroutine finishes with \u003ccode\u003ewg.Done()\u003c/code\u003e.\u003c/li\u003e\u003cli\u003eWait for all goroutines to finish with \u003ccode\u003ewg.Wait()\u003c/code\u003e.\u003c/li\u003e\u003c/ul\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#a90d91\"\u003efunc\u003c/span\u003e \u003cspan style=\"color:#000\"\u003ecountDigitsInWords\u003c/span\u003e(\u003cspan style=\"color:#000\"\u003ephrase\u003c/span\u003e \u003cspan style=\"color:#a90d91\"\u003estring\u003c/span\u003e) \u003cspan style=\"color:#000\"\u003ecounter\u003c/span\u003e {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#a90d91\"\u003evar\u003c/span\u003e \u003cspan style=\"color:#000\"\u003ewg\u003c/span\u003e \u003cspan style=\"color:#000\"\u003esync\u003c/span\u003e.\u003cspan style=\"color:#000\"\u003eWaitGroup\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#000\"\u003esyncStats\u003c/span\u003e \u003cspan style=\"color:#000\"\u003e:=\u003c/span\u003e \u003cspan style=\"color:#a90d91\"\u003enew\u003c/span\u003e(\u003cspan style=\"color:#000\"\u003esync\u003c/span\u003e.\u003cspan style=\"color:#000\"\u003eMap\u003c/span\u003e)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#000\"\u003ewords\u003c/span\u003e \u003cspan style=\"color:#000\"\u003e:=\u003c/span\u003e \u003cspan style=\"color:#000\"\u003estrings\u003c/span\u003e.\u003cspan style=\"color:#000\"\u003eFields\u003c/span\u003e(\u003cspan style=\"color:#000\"\u003ephrase\u003c/span\u003e)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#000\"\u003ewg\u003c/span\u003e.\u003cspan style=\"color:#000\"\u003eAdd\u003c/span\u003e(\u003cspan style=\"color:#a90d91\"\u003elen\u003c/span\u003e(\u003cspan style=\"color:#000\"\u003ewords\u003c/span\u003e))\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#a90d91\"\u003efor\u003c/span\u003e \u003cspan style=\"color:#000\"\u003e_\u003c/span\u003e, \u003cspan style=\"color:#000\"\u003eword\u003c/span\u003e \u003cspan style=\"color:#000\"\u003e:=\u003c/span\u003e \u003cspan style=\"color:#a90d91\"\u003erange\u003c/span\u003e \u003cspan style=\"color:#000\"\u003ewords\u003c/span\u003e {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e        \u003cspan style=\"color:#a90d91\"\u003ego\u003c/span\u003e \u003cspan style=\"color:#a90d91\"\u003efunc\u003c/span\u003e() {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e            \u003cspan style=\"color:#a90d91\"\u003edefer\u003c/span\u003e \u003cspan style=\"color:#000\"\u003ewg\u003c/span\u003e.\u003cspan style=\"color:#000\"\u003eDone\u003c/span\u003e()\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e            \u003cspan style=\"color:#000\"\u003ecount\u003c/span\u003e \u003cspan style=\"color:#000\"\u003e:=\u003c/span\u003e \u003cspan style=\"color:#000\"\u003ecountDigits\u003c/span\u003e(\u003cspan style=\"color:#000\"\u003eword\u003c/span\u003e)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e            \u003cspan style=\"color:#000\"\u003esyncStats\u003c/span\u003e.\u003cspan style=\"color:#000\"\u003eStore\u003c/span\u003e(\u003cspan style=\"color:#000\"\u003eword\u003c/span\u003e, \u003cspan style=\"color:#000\"\u003ecount\u003c/span\u003e)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e        }()\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e    }\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#000\"\u003ewg\u003c/span\u003e.\u003cspan style=\"color:#000\"\u003eWait\u003c/span\u003e()\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#a90d91\"\u003ereturn\u003c/span\u003e \u003cspan style=\"color:#000\"\u003easStats\u003c/span\u003e(\u003cspan style=\"color:#000\"\u003esyncStats\u003c/span\u003e)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e}\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\u003ch2 id=\"channels\"\u003eChannels\u003c/h2\u003e\u003cp\u003eStarting a bunch of goroutines is great, but how do they exchange data? In Go, goroutines can pass values to each other through \u003cem\u003echannels\u003c/em\u003e. A channel is like a window where one goroutine can throw something and another can catch it.\u003c/p\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"\u003e\u003ccode class=\"language-text\" data-lang=\"text\"\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e┌─────────────┐    ┌─────────────┐\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e│ goroutine A │    │ goroutine B │\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e│             └────┘             │\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e│        X \u0026lt;-  chan  \u0026lt;- X        │\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e│             ┌────┐             │\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e│             │    │             │\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e└─────────────┘    └─────────────┘\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e\u003cem\u003eGoroutine B sends value X to goroutine A. Canvas, oil, circa 2024.\u003c/em\u003e\u003c/p\u003e\u003cp\u003eHere\u0026#39;s how it works:\u003c/p\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#a90d91\"\u003efunc\u003c/span\u003e \u003cspan style=\"color:#000\"\u003emain\u003c/span\u003e() {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#177500\"\u003e// To create a channel, use `make(chan type)`.\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#177500\"\u003e\u003c/span\u003e    \u003cspan style=\"color:#177500\"\u003e// Channel can only accept values of the specified type:\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#177500\"\u003e\u003c/span\u003e    \u003cspan style=\"color:#000\"\u003emessages\u003c/span\u003e \u003cspan style=\"color:#000\"\u003e:=\u003c/span\u003e \u003cspan style=\"color:#a90d91\"\u003emake\u003c/span\u003e(\u003cspan style=\"color:#a90d91\"\u003echan\u003c/span\u003e \u003cspan style=\"color:#a90d91\"\u003estring\u003c/span\u003e)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#177500\"\u003e// To send a value to a channel,\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#177500\"\u003e\u003c/span\u003e    \u003cspan style=\"color:#177500\"\u003e// use the `channel \u0026lt;-` syntax.\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#177500\"\u003e\u003c/span\u003e    \u003cspan style=\"color:#177500\"\u003e// Let\u0026#39;s send \u0026#34;ping\u0026#34;:\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#177500\"\u003e\u003c/span\u003e    \u003cspan style=\"color:#a90d91\"\u003ego\u003c/span\u003e \u003cspan style=\"color:#a90d91\"\u003efunc\u003c/span\u003e() { \u003cspan style=\"color:#000\"\u003emessages\u003c/span\u003e \u003cspan style=\"color:#000\"\u003e\u0026lt;-\u003c/span\u003e \u003cspan style=\"color:#c41a16\"\u003e\u0026#34;ping\u0026#34;\u003c/span\u003e }()\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#177500\"\u003e// To receive a value from a channel,\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#177500\"\u003e\u003c/span\u003e    \u003cspan style=\"color:#177500\"\u003e// use the `\u0026lt;-channel` syntax.\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#177500\"\u003e\u003c/span\u003e    \u003cspan style=\"color:#177500\"\u003e// Let\u0026#39;s receive \u0026#34;ping\u0026#34; and print it:\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#177500\"\u003e\u003c/span\u003e    \u003cspan style=\"color:#000\"\u003emsg\u003c/span\u003e \u003cspan style=\"color:#000\"\u003e:=\u003c/span\u003e \u003cspan style=\"color:#000\"\u003e\u0026lt;-\u003c/span\u003e\u003cspan style=\"color:#000\"\u003emessages\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#000\"\u003efmt\u003c/span\u003e.\u003cspan style=\"color:#000\"\u003ePrintln\u003c/span\u003e(\u003cspan style=\"color:#000\"\u003emsg\u003c/span\u003e)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e}\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ccodapi-snippet sandbox=\"go\" editor=\"basic\" template=\"header.go\" output=\"\"\u003e\u003c/codapi-snippet\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"\u003e\u003ccode class=\"language-text\" data-lang=\"text\"\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003eping\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eWhen the program runs, the first goroutine (anonymous) sends a message to the second (\u003ccode\u003emain\u003c/code\u003e) through the \u003ccode\u003emessages\u003c/code\u003e channel.\u003c/p\u003e\u003cp\u003eSending a value through a channel is a synchronous operation. When the sending goroutine does \u003ccode\u003emessages \u0026lt;- \u0026#34;ping\u0026#34;\u003c/code\u003e, it gets blocked and waits for someone to receive that value with \u003ccode\u003e\u0026lt;-messages\u003c/code\u003e. Only then does it continue:\u003c/p\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#a90d91\"\u003efunc\u003c/span\u003e \u003cspan style=\"color:#000\"\u003emain\u003c/span\u003e() {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#000\"\u003emessages\u003c/span\u003e \u003cspan style=\"color:#000\"\u003e:=\u003c/span\u003e \u003cspan style=\"color:#a90d91\"\u003emake\u003c/span\u003e(\u003cspan style=\"color:#a90d91\"\u003echan\u003c/span\u003e \u003cspan style=\"color:#a90d91\"\u003estring\u003c/span\u003e)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#a90d91\"\u003ego\u003c/span\u003e \u003cspan style=\"color:#a90d91\"\u003efunc\u003c/span\u003e() {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e        \u003cspan style=\"color:#000\"\u003efmt\u003c/span\u003e.\u003cspan style=\"color:#000\"\u003ePrintln\u003c/span\u003e(\u003cspan style=\"color:#c41a16\"\u003e\u0026#34;B: Sending message...\u0026#34;\u003c/span\u003e)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e        \u003cspan style=\"color:#000\"\u003emessages\u003c/span\u003e \u003cspan style=\"color:#000\"\u003e\u0026lt;-\u003c/span\u003e \u003cspan style=\"color:#c41a16\"\u003e\u0026#34;ping\u0026#34;\u003c/span\u003e                    \u003cspan style=\"color:#177500\"\u003e// (1)\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#177500\"\u003e\u003c/span\u003e        \u003cspan style=\"color:#000\"\u003efmt\u003c/span\u003e.\u003cspan style=\"color:#000\"\u003ePrintln\u003c/span\u003e(\u003cspan style=\"color:#c41a16\"\u003e\u0026#34;B: Message sent!\u0026#34;\u003c/span\u003e)       \u003cspan style=\"color:#177500\"\u003e// (2)\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#177500\"\u003e\u003c/span\u003e    }()\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#000\"\u003efmt\u003c/span\u003e.\u003cspan style=\"color:#000\"\u003ePrintln\u003c/span\u003e(\u003cspan style=\"color:#c41a16\"\u003e\u0026#34;A: Doing some work...\u0026#34;\u003c/span\u003e)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#000\"\u003etime\u003c/span\u003e.\u003cspan style=\"color:#000\"\u003eSleep\u003c/span\u003e(\u003cspan style=\"color:#1c01ce\"\u003e500\u003c/span\u003e \u003cspan style=\"color:#000\"\u003e*\u003c/span\u003e \u003cspan style=\"color:#000\"\u003etime\u003c/span\u003e.\u003cspan style=\"color:#000\"\u003eMillisecond\u003c/span\u003e)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#000\"\u003efmt\u003c/span\u003e.\u003cspan style=\"color:#000\"\u003ePrintln\u003c/span\u003e(\u003cspan style=\"color:#c41a16\"\u003e\u0026#34;A: Ready to receive a message...\u0026#34;\u003c/span\u003e)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#000\"\u003e\u0026lt;-\u003c/span\u003e\u003cspan style=\"color:#000\"\u003emessages\u003c/span\u003e                               \u003cspan style=\"color:#177500\"\u003e//  (3)\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#177500\"\u003e\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#000\"\u003efmt\u003c/span\u003e.\u003cspan style=\"color:#000\"\u003ePrintln\u003c/span\u003e(\u003cspan style=\"color:#c41a16\"\u003e\u0026#34;A: Messege received!\u0026#34;\u003c/span\u003e)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#000\"\u003etime\u003c/span\u003e.\u003cspan style=\"color:#000\"\u003eSleep\u003c/span\u003e(\u003cspan style=\"color:#1c01ce\"\u003e100\u003c/span\u003e \u003cspan style=\"color:#000\"\u003e*\u003c/span\u003e \u003cspan style=\"color:#000\"\u003etime\u003c/span\u003e.\u003cspan style=\"color:#000\"\u003eMillisecond\u003c/span\u003e)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e}\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ccodapi-snippet sandbox=\"go\" editor=\"basic\" template=\"header.go\" output=\"\"\u003e\u003c/codapi-snippet\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"\u003e\u003ccode class=\"language-text\" data-lang=\"text\"\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003eA: Doing some work...\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003eB: Sending message...\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003eA: Ready to receive a message...\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003eA: Messege received!\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003eB: Message sent!\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eAfter sending the message to the channel ➊, goroutine B gets blocked. Only when goroutine A receives the message ➌ does goroutine B continue and print \u0026#34;message sent\u0026#34; ➋.\u003c/p\u003e\u003cp\u003eSo, channels not only transfer data, but also help to synchronize independent goroutines. This will come in handy later.\u003c/p\u003e\u003ch2 id=\"-result-channel\"\u003e✎ Result channel\u003c/h2\u003e\u003cp\u003eWe often see the \u0026#34;producer-consumer\u0026#34; pattern in programming:\u003c/p\u003e\u003cul\u003e\u003cli\u003eThe producer supplies data.\u003c/li\u003e\u003cli\u003eThe consumer receives and processes it.\u003c/li\u003e\u003c/ul\u003e\u003cp\u003eIn this and the following exercises, we\u0026#39;ll explore how producers and consumers can interact through channels.\u003c/p\u003e\u003cp\u003eWe are working with a function that counts digits in words:\u003c/p\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#177500\"\u003e// counter stores the number of digits in each word.\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#177500\"\u003e// The key is the word, and the value is the number of digits.\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#177500\"\u003e\u003c/span\u003e\u003cspan style=\"color:#a90d91\"\u003etype\u003c/span\u003e \u003cspan style=\"color:#000\"\u003ecounter\u003c/span\u003e \u003cspan style=\"color:#a90d91\"\u003emap\u003c/span\u003e[\u003cspan style=\"color:#a90d91\"\u003estring\u003c/span\u003e]\u003cspan style=\"color:#a90d91\"\u003eint\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#177500\"\u003e// countDigitsInWords counts the number of digits\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#177500\"\u003e// in the words of a phrase.\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#177500\"\u003e\u003c/span\u003e\u003cspan style=\"color:#a90d91\"\u003efunc\u003c/span\u003e \u003cspan style=\"color:#000\"\u003ecountDigitsInWords\u003c/span\u003e(\u003cspan style=\"color:#000\"\u003ephrase\u003c/span\u003e \u003cspan style=\"color:#a90d91\"\u003estring\u003c/span\u003e) \u003cspan style=\"color:#000\"\u003ecounter\u003c/span\u003e {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#000\"\u003ewords\u003c/span\u003e \u003cspan style=\"color:#000\"\u003e:=\u003c/span\u003e \u003cspan style=\"color:#000\"\u003estrings\u003c/span\u003e.\u003cspan style=\"color:#000\"\u003eFields\u003c/span\u003e(\u003cspan style=\"color:#000\"\u003ephrase\u003c/span\u003e)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#177500\"\u003e// ...\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#177500\"\u003e\u003c/span\u003e    \u003cspan style=\"color:#a90d91\"\u003ereturn\u003c/span\u003e \u003cspan style=\"color:#000\"\u003estats\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e}\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eDo the following:\u003c/p\u003e\u003cul\u003e\u003cli\u003eStart a goroutine.\u003c/li\u003e\u003cli\u003eIn this goroutine, loop through the words, count the digits in each, and write to the \u003ccode\u003ecounted\u003c/code\u003e channel (producer).\u003c/li\u003e\u003cli\u003eIn the outer function, read values from the channel and fill the \u003ccode\u003estats\u003c/code\u003e counter (consumer).\u003c/li\u003e\u003c/ul\u003e\u003cp\u003eSubmit only the code fragment marked with \u0026#34;solution start\u0026#34; and \u0026#34;solution end\u0026#34; comments. The full source code is available via the \u0026#34;Playground\u0026#34; link below.\u003c/p\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#177500\"\u003e// solution start\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#177500\"\u003e\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#177500\"\u003e// countDigitsInWords counts the number of digits in the words of a phrase.\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#177500\"\u003e\u003c/span\u003e\u003cspan style=\"color:#a90d91\"\u003efunc\u003c/span\u003e \u003cspan style=\"color:#000\"\u003ecountDigitsInWords\u003c/span\u003e(\u003cspan style=\"color:#000\"\u003ephrase\u003c/span\u003e \u003cspan style=\"color:#a90d91\"\u003estring\u003c/span\u003e) \u003cspan style=\"color:#000\"\u003ecounter\u003c/span\u003e {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#000\"\u003ewords\u003c/span\u003e \u003cspan style=\"color:#000\"\u003e:=\u003c/span\u003e \u003cspan style=\"color:#000\"\u003estrings\u003c/span\u003e.\u003cspan style=\"color:#000\"\u003eFields\u003c/span\u003e(\u003cspan style=\"color:#000\"\u003ephrase\u003c/span\u003e)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#000\"\u003ecounted\u003c/span\u003e \u003cspan style=\"color:#000\"\u003e:=\u003c/span\u003e \u003cspan style=\"color:#a90d91\"\u003emake\u003c/span\u003e(\u003cspan style=\"color:#a90d91\"\u003echan\u003c/span\u003e \u003cspan style=\"color:#a90d91\"\u003eint\u003c/span\u003e)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#a90d91\"\u003ego\u003c/span\u003e \u003cspan style=\"color:#a90d91\"\u003efunc\u003c/span\u003e() {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e        \u003cspan style=\"color:#177500\"\u003e// Loop through the words,\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#177500\"\u003e\u003c/span\u003e        \u003cspan style=\"color:#177500\"\u003e// count the number of digits in each,\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#177500\"\u003e\u003c/span\u003e        \u003cspan style=\"color:#177500\"\u003e// and write it to the counted channel.\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#177500\"\u003e\u003c/span\u003e    }()\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#177500\"\u003e// Read values from the counted channel\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#177500\"\u003e\u003c/span\u003e    \u003cspan style=\"color:#177500\"\u003e// and fill stats.\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#177500\"\u003e\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#177500\"\u003e// As a result, stats should contain words\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#177500\"\u003e\u003c/span\u003e    \u003cspan style=\"color:#177500\"\u003e// and the number of digits in each.\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#177500\"\u003e\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#a90d91\"\u003ereturn\u003c/span\u003e \u003cspan style=\"color:#000\"\u003estats\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e}\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#177500\"\u003e// solution end\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ccodapi-snippet id=\"ex02\" sandbox=\"go\" editor=\"basic\" template=\"ex02.go\" actions=\"Playground:@playground Toggle_solution:@solution\" data-playground=\"https://go.dev/play/p/nHLVqccfTld\"\u003e\u003c/codapi-snippet\u003e\u003cdiv id=\"ex02-solution\" class=\"boxed\" hidden=\"\"\u003e\u003cp\u003e\u003cstrong\u003e✓ Result channel\u003c/strong\u003e\u003c/p\u003e\u003cp\u003eHere\u0026#39;s what we do:\u003c/p\u003e\u003cul\u003e\u003cli\u003eIn the goroutine, loop through the words, count the digits in each, and write to the \u003ccode\u003ecounted\u003c/code\u003e channel.\u003c/li\u003e\u003cli\u003eIn the outer function, loop through the words, read the counts from the \u003ccode\u003ecounted\u003c/code\u003e channel, and fill in the \u003ccode\u003estats\u003c/code\u003e.\u003c/li\u003e\u003c/ul\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#a90d91\"\u003efunc\u003c/span\u003e \u003cspan style=\"color:#000\"\u003ecountDigitsInWords\u003c/span\u003e(\u003cspan style=\"color:#000\"\u003ephrase\u003c/span\u003e \u003cspan style=\"color:#a90d91\"\u003estring\u003c/span\u003e) \u003cspan style=\"color:#000\"\u003ecounter\u003c/span\u003e {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#000\"\u003ewords\u003c/span\u003e \u003cspan style=\"color:#000\"\u003e:=\u003c/span\u003e \u003cspan style=\"color:#000\"\u003estrings\u003c/span\u003e.\u003cspan style=\"color:#000\"\u003eFields\u003c/span\u003e(\u003cspan style=\"color:#000\"\u003ephrase\u003c/span\u003e)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#000\"\u003ecounted\u003c/span\u003e \u003cspan style=\"color:#000\"\u003e:=\u003c/span\u003e \u003cspan style=\"color:#a90d91\"\u003emake\u003c/span\u003e(\u003cspan style=\"color:#a90d91\"\u003echan\u003c/span\u003e \u003cspan style=\"color:#a90d91\"\u003eint\u003c/span\u003e)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#177500\"\u003e// count digits in words\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#177500\"\u003e\u003c/span\u003e    \u003cspan style=\"color:#a90d91\"\u003ego\u003c/span\u003e \u003cspan style=\"color:#a90d91\"\u003efunc\u003c/span\u003e() {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e        \u003cspan style=\"color:#a90d91\"\u003efor\u003c/span\u003e \u003cspan style=\"color:#000\"\u003e_\u003c/span\u003e, \u003cspan style=\"color:#000\"\u003eword\u003c/span\u003e \u003cspan style=\"color:#000\"\u003e:=\u003c/span\u003e \u003cspan style=\"color:#a90d91\"\u003erange\u003c/span\u003e \u003cspan style=\"color:#000\"\u003ewords\u003c/span\u003e {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e            \u003cspan style=\"color:#000\"\u003ecount\u003c/span\u003e \u003cspan style=\"color:#000\"\u003e:=\u003c/span\u003e \u003cspan style=\"color:#000\"\u003ecountDigits\u003c/span\u003e(\u003cspan style=\"color:#000\"\u003eword\u003c/span\u003e)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e            \u003cspan style=\"color:#000\"\u003ecounted\u003c/span\u003e \u003cspan style=\"color:#000\"\u003e\u0026lt;-\u003c/span\u003e \u003cspan style=\"color:#000\"\u003ecount\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e        }\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e    }()\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#177500\"\u003e// fill stats by words\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#177500\"\u003e\u003c/span\u003e    \u003cspan style=\"color:#000\"\u003estats\u003c/span\u003e \u003cspan style=\"color:#000\"\u003e:=\u003c/span\u003e \u003cspan style=\"color:#000\"\u003ecounter\u003c/span\u003e{}\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#a90d91\"\u003efor\u003c/span\u003e \u003cspan style=\"color:#000\"\u003e_\u003c/span\u003e, \u003cspan style=\"color:#000\"\u003eword\u003c/span\u003e \u003cspan style=\"color:#000\"\u003e:=\u003c/span\u003e \u003cspan style=\"color:#a90d91\"\u003erange\u003c/span\u003e \u003cspan style=\"color:#000\"\u003ewords\u003c/span\u003e {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e        \u003cspan style=\"color:#000\"\u003ecount\u003c/span\u003e \u003cspan style=\"color:#000\"\u003e:=\u003c/span\u003e \u003cspan style=\"color:#000\"\u003e\u0026lt;-\u003c/span\u003e\u003cspan style=\"color:#000\"\u003ecounted\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e        \u003cspan style=\"color:#000\"\u003estats\u003c/span\u003e[\u003cspan style=\"color:#000\"\u003eword\u003c/span\u003e] = \u003cspan style=\"color:#000\"\u003ecount\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e    }\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#a90d91\"\u003ereturn\u003c/span\u003e \u003cspan style=\"color:#000\"\u003estats\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e}\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\u003cblockquote\u003e\u003cp\u003eIf you\u0026#39;ve worked with concurrency in Go, the solutions in this chapter may seem a bit... unorthodox, if not clunky. It\u0026#39;s designed this way to avoid overwhelming readers who are new to concurrency. In a few chapters, we\u0026#39;ll cover the core concepts, and the code will start to look idiomatic.\u003c/p\u003e\u003c/blockquote\u003e\u003ch2 id=\"generator\"\u003eGenerator\u003c/h2\u003e\u003cp\u003eSo far, we\u0026#39;ve assumed that the \u003ccode\u003ecountDigitsInWords\u003c/code\u003e function knows all the words in advance.\u003c/p\u003e\u003cp\u003eBut we can\u0026#39;t expect that luxury in real life. Data can come from a database or over the network, and the function has no idea how many words there will be.\u003c/p\u003e\u003cp\u003eLet\u0026#39;s simulate this situation by passing a generator function \u003ccode\u003enext\u003c/code\u003e instead of a phrase. Each call to \u003ccode\u003enext()\u003c/code\u003e gives us the next word from the source. When there are no more words, it returns an empty string.\u003c/p\u003e\u003cp\u003eA sequential program would look like this:\u003c/p\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#177500\"\u003e// counter stores the number of digits in each word.\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#177500\"\u003e// The key is the word, and the value is the number of digits.\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#177500\"\u003e\u003c/span\u003e\u003cspan style=\"color:#a90d91\"\u003etype\u003c/span\u003e \u003cspan style=\"color:#000\"\u003ecounter\u003c/span\u003e \u003cspan style=\"color:#a90d91\"\u003emap\u003c/span\u003e[\u003cspan style=\"color:#a90d91\"\u003estring\u003c/span\u003e]\u003cspan style=\"color:#a90d91\"\u003eint\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#177500\"\u003e// countDigitsInWords counts the number of digits in words,\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#177500\"\u003e// fetching the next word with next().\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#177500\"\u003e\u003c/span\u003e\u003cspan style=\"color:#a90d91\"\u003efunc\u003c/span\u003e \u003cspan style=\"color:#000\"\u003ecountDigitsInWords\u003c/span\u003e(\u003cspan style=\"color:#000\"\u003enext\u003c/span\u003e \u003cspan style=\"color:#a90d91\"\u003efunc\u003c/span\u003e() \u003cspan style=\"color:#a90d91\"\u003estring\u003c/span\u003e) \u003cspan style=\"color:#000\"\u003ecounter\u003c/span\u003e {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#000\"\u003estats\u003c/span\u003e \u003cspan style=\"color:#000\"\u003e:=\u003c/span\u003e \u003cspan style=\"color:#000\"\u003ecounter\u003c/span\u003e{}\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#a90d91\"\u003efor\u003c/span\u003e {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e        \u003cspan style=\"color:#000\"\u003eword\u003c/span\u003e \u003cspan style=\"color:#000\"\u003e:=\u003c/span\u003e \u003cspan style=\"color:#000\"\u003enext\u003c/span\u003e()\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e        \u003cspan style=\"color:#a90d91\"\u003eif\u003c/span\u003e \u003cspan style=\"color:#000\"\u003eword\u003c/span\u003e \u003cspan style=\"color:#000\"\u003e==\u003c/span\u003e \u003cspan style=\"color:#c41a16\"\u003e\u0026#34;\u0026#34;\u003c/span\u003e {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e            \u003cspan style=\"color:#a90d91\"\u003ebreak\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e        }\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e        \u003cspan style=\"color:#000\"\u003ecount\u003c/span\u003e \u003cspan style=\"color:#000\"\u003e:=\u003c/span\u003e \u003cspan style=\"color:#000\"\u003ecountDigits\u003c/span\u003e(\u003cspan style=\"color:#000\"\u003eword\u003c/span\u003e)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e        \u003cspan style=\"color:#000\"\u003estats\u003c/span\u003e[\u003cspan style=\"color:#000\"\u003eword\u003c/span\u003e] = \u003cspan style=\"color:#000\"\u003ecount\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e    }\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#a90d91\"\u003ereturn\u003c/span\u003e \u003cspan style=\"color:#000\"\u003estats\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e}\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#a90d91\"\u003efunc\u003c/span\u003e \u003cspan style=\"color:#000\"\u003emain\u003c/span\u003e() {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#000\"\u003ephrase\u003c/span\u003e \u003cspan style=\"color:#000\"\u003e:=\u003c/span\u003e \u003cspan style=\"color:#c41a16\"\u003e\u0026#34;0ne 1wo thr33 4068\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#000\"\u003enext\u003c/span\u003e \u003cspan style=\"color:#000\"\u003e:=\u003c/span\u003e \u003cspan style=\"color:#000\"\u003ewordGenerator\u003c/span\u003e(\u003cspan style=\"color:#000\"\u003ephrase\u003c/span\u003e)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#000\"\u003estats\u003c/span\u003e \u003cspan style=\"color:#000\"\u003e:=\u003c/span\u003e \u003cspan style=\"color:#000\"\u003ecountDigitsInWords\u003c/span\u003e(\u003cspan style=\"color:#000\"\u003enext\u003c/span\u003e)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#000\"\u003eprintStats\u003c/span\u003e(\u003cspan style=\"color:#000\"\u003estats\u003c/span\u003e)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e}\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ccodapi-snippet sandbox=\"go\" editor=\"basic\" template=\"count.go\" output=\"\" actions=\"Playground:@playground\" data-playground=\"https://go.dev/play/p/4HksqpdLocW\"\u003e\u003c/codapi-snippet\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"\u003e\u003ccode class=\"language-text\" data-lang=\"text\"\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003ethr33: 2\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e4068: 4\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e0ne: 1\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e1wo: 1\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eNow let\u0026#39;s add some concurrency.\u003c/p\u003e\u003ch2 id=\"-generator-with-goroutines\"\u003e✎ Generator with goroutines\u003c/h2\u003e\u003cp\u003eWe are working with a function that counts digits in words:\u003c/p\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#177500\"\u003e// countDigitsInWords counts the number of digits in words,\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#177500\"\u003e// fetching the next word with next().\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#177500\"\u003e\u003c/span\u003e\u003cspan style=\"color:#a90d91\"\u003efunc\u003c/span\u003e \u003cspan style=\"color:#000\"\u003ecountDigitsInWords\u003c/span\u003e(\u003cspan style=\"color:#000\"\u003enext\u003c/span\u003e \u003cspan style=\"color:#a90d91\"\u003efunc\u003c/span\u003e() \u003cspan style=\"color:#a90d91\"\u003estring\u003c/span\u003e) \u003cspan style=\"color:#000\"\u003ecounter\u003c/span\u003e {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#177500\"\u003e// ...\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#177500\"\u003e\u003c/span\u003e    \u003cspan style=\"color:#a90d91\"\u003ereturn\u003c/span\u003e \u003cspan style=\"color:#000\"\u003estats\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e}\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eDo the following:\u003c/p\u003e\u003cul\u003e\u003cli\u003eStart a goroutine.\u003c/li\u003e\u003cli\u003eIn this goroutine, fetch words from the generator, count the digits in each, and write to the \u003ccode\u003ecounted\u003c/code\u003e channel.\u003c/li\u003e\u003cli\u003eIn the outer function, read values from the channel and fill \u003ccode\u003estats\u003c/code\u003e.\u003c/li\u003e\u003c/ul\u003e\u003cp\u003eIf you try to solve the exercise like the previous one, you\u0026#39;ll run into a couple of problems:\u003c/p\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#a90d91\"\u003efunc\u003c/span\u003e \u003cspan style=\"color:#000\"\u003ecountDigitsInWords\u003c/span\u003e(\u003cspan style=\"color:#000\"\u003enext\u003c/span\u003e \u003cspan style=\"color:#a90d91\"\u003efunc\u003c/span\u003e() \u003cspan style=\"color:#a90d91\"\u003estring\u003c/span\u003e) \u003cspan style=\"color:#000\"\u003ecounter\u003c/span\u003e {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#000\"\u003ecounted\u003c/span\u003e \u003cspan style=\"color:#000\"\u003e:=\u003c/span\u003e \u003cspan style=\"color:#a90d91\"\u003emake\u003c/span\u003e(\u003cspan style=\"color:#a90d91\"\u003echan\u003c/span\u003e \u003cspan style=\"color:#a90d91\"\u003eint\u003c/span\u003e)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#177500\"\u003e// count digits in words\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#177500\"\u003e\u003c/span\u003e    \u003cspan style=\"color:#a90d91\"\u003ego\u003c/span\u003e \u003cspan style=\"color:#a90d91\"\u003efunc\u003c/span\u003e() {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e        \u003cspan style=\"color:#a90d91\"\u003efor\u003c/span\u003e {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e            \u003cspan style=\"color:#177500\"\u003e// should return when\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#177500\"\u003e\u003c/span\u003e            \u003cspan style=\"color:#177500\"\u003e// there are no more words\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#177500\"\u003e\u003c/span\u003e            \u003cspan style=\"color:#000\"\u003eword\u003c/span\u003e \u003cspan style=\"color:#000\"\u003e:=\u003c/span\u003e \u003cspan style=\"color:#000\"\u003enext\u003c/span\u003e()\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e            \u003cspan style=\"color:#000\"\u003ecount\u003c/span\u003e \u003cspan style=\"color:#000\"\u003e:=\u003c/span\u003e \u003cspan style=\"color:#000\"\u003ecountDigits\u003c/span\u003e(\u003cspan style=\"color:#000\"\u003eword\u003c/span\u003e)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e            \u003cspan style=\"color:#000\"\u003ecounted\u003c/span\u003e \u003cspan style=\"color:#000\"\u003e\u0026lt;-\u003c/span\u003e \u003cspan style=\"color:#000\"\u003ecount\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e        }\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e    }()\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#177500\"\u003e// fill stats by words\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#177500\"\u003e\u003c/span\u003e    \u003cspan style=\"color:#000\"\u003estats\u003c/span\u003e \u003cspan style=\"color:#000\"\u003e:=\u003c/span\u003e \u003cspan style=\"color:#000\"\u003ecounter\u003c/span\u003e{}\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#a90d91\"\u003efor\u003c/span\u003e {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e        \u003cspan style=\"color:#000\"\u003ecount\u003c/span\u003e \u003cspan style=\"color:#000\"\u003e:=\u003c/span\u003e \u003cspan style=\"color:#000\"\u003e\u0026lt;-\u003c/span\u003e\u003cspan style=\"color:#000\"\u003ecounted\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e        \u003cspan style=\"color:#177500\"\u003e// how to break from the loop\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#177500\"\u003e\u003c/span\u003e        \u003cspan style=\"color:#177500\"\u003e// when there are no more words?\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#177500\"\u003e\u003c/span\u003e        \u003cspan style=\"color:#a90d91\"\u003eif\u003c/span\u003e \u003cspan style=\"color:#000\"\u003e...\u003c/span\u003e {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e            \u003cspan style=\"color:#a90d91\"\u003ebreak\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e        }\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e        \u003cspan style=\"color:#177500\"\u003e// where should the word come from?\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#177500\"\u003e\u003c/span\u003e        \u003cspan style=\"color:#000\"\u003estats\u003c/span\u003e[\u003cspan style=\"color:#000\"\u003e...\u003c/span\u003e] = \u003cspan style=\"color:#000\"\u003ecount\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e    }\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e}\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eThink about \u003cem\u003ewhat\u003c/em\u003e to send to the \u003ccode\u003ecounted\u003c/code\u003e channel to solve both problems. Note the \u003ccode\u003epair\u003c/code\u003e type.\u003c/p\u003e\u003cp\u003eSubmit only the code fragment marked with \u0026#34;solution start\u0026#34; and \u0026#34;solution end\u0026#34; comments. The full source code is available via the \u0026#34;Playground\u0026#34; link below.\u003c/p\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#177500\"\u003e// solution start\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#177500\"\u003e\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#177500\"\u003e// countDigitsInWords counts the number of digits in words,\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#177500\"\u003e// fetching the next word with next().\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#177500\"\u003e\u003c/span\u003e\u003cspan style=\"color:#a90d91\"\u003efunc\u003c/span\u003e \u003cspan style=\"color:#000\"\u003ecountDigitsInWords\u003c/span\u003e(\u003cspan style=\"color:#000\"\u003enext\u003c/span\u003e \u003cspan style=\"color:#a90d91\"\u003efunc\u003c/span\u003e() \u003cspan style=\"color:#a90d91\"\u003estring\u003c/span\u003e) \u003cspan style=\"color:#000\"\u003ecounter\u003c/span\u003e {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#000\"\u003ecounted\u003c/span\u003e \u003cspan style=\"color:#000\"\u003e:=\u003c/span\u003e \u003cspan style=\"color:#a90d91\"\u003emake\u003c/span\u003e(\u003cspan style=\"color:#a90d91\"\u003echan\u003c/span\u003e \u003cspan style=\"color:#000\"\u003e...\u003c/span\u003e)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#a90d91\"\u003ego\u003c/span\u003e \u003cspan style=\"color:#a90d91\"\u003efunc\u003c/span\u003e() {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e        \u003cspan style=\"color:#177500\"\u003e// Fetch words from the generator,\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#177500\"\u003e\u003c/span\u003e        \u003cspan style=\"color:#177500\"\u003e// count the number of digits in each,\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#177500\"\u003e\u003c/span\u003e        \u003cspan style=\"color:#177500\"\u003e// and write it to the counted channel.\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#177500\"\u003e\u003c/span\u003e    }()\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#177500\"\u003e// Read values from the counted channel\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#177500\"\u003e\u003c/span\u003e    \u003cspan style=\"color:#177500\"\u003e// and fill stats.\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#177500\"\u003e\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#177500\"\u003e// As a result, stats should contain words\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#177500\"\u003e\u003c/span\u003e    \u003cspan style=\"color:#177500\"\u003e// and the number of digits in each.\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#177500\"\u003e\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#a90d91\"\u003ereturn\u003c/span\u003e \u003cspan style=\"color:#000\"\u003estats\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e}\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#177500\"\u003e// solution end\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ccodapi-snippet id=\"ex03\" sandbox=\"go\" editor=\"basic\" template=\"ex03.go\" actions=\"Playground:@playground Toggle_solution:@solution\" data-playground=\"https://go.dev/play/p/OlNyCKJgL_S\"\u003e\u003c/codapi-snippet\u003e\u003cdiv id=\"ex03-solution\" class=\"boxed\" hidden=\"\"\u003e\u003cp\u003e\u003cstrong\u003e✓ Generator with goroutines\u003c/strong\u003e\u003c/p\u003e\u003cp\u003eDeclare a \u003ccode\u003epair\u003c/code\u003e type (word + count):\u003c/p\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#a90d91\"\u003etype\u003c/span\u003e \u003cspan style=\"color:#000\"\u003epair\u003c/span\u003e \u003cspan style=\"color:#a90d91\"\u003estruct\u003c/span\u003e {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#000\"\u003eword\u003c/span\u003e  \u003cspan style=\"color:#a90d91\"\u003estring\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#000\"\u003ecount\u003c/span\u003e \u003cspan style=\"color:#a90d91\"\u003eint\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e}\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eCreate a channel of the appropriate type:\u003c/p\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#a90d91\"\u003efunc\u003c/span\u003e \u003cspan style=\"color:#000\"\u003ecountDigitsInWords\u003c/span\u003e(\u003cspan style=\"color:#000\"\u003enext\u003c/span\u003e \u003cspan style=\"color:#a90d91\"\u003efunc\u003c/span\u003e() \u003cspan style=\"color:#a90d91\"\u003estring\u003c/span\u003e) \u003cspan style=\"color:#000\"\u003ecounter\u003c/span\u003e {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#000\"\u003ecounted\u003c/span\u003e \u003cspan style=\"color:#000\"\u003e:=\u003c/span\u003e \u003cspan style=\"color:#a90d91\"\u003emake\u003c/span\u003e(\u003cspan style=\"color:#a90d91\"\u003echan\u003c/span\u003e \u003cspan style=\"color:#000\"\u003epair\u003c/span\u003e)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#177500\"\u003e// ...\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#177500\"\u003e\u003c/span\u003e}\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eIn the goroutine, count the digits for each word and send the (word, count) pairs to the \u003ccode\u003ecounted\u003c/code\u003e channel:\u003c/p\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#a90d91\"\u003efunc\u003c/span\u003e \u003cspan style=\"color:#000\"\u003ecountDigitsInWords\u003c/span\u003e(\u003cspan style=\"color:#000\"\u003enext\u003c/span\u003e \u003cspan style=\"color:#a90d91\"\u003efunc\u003c/span\u003e() \u003cspan style=\"color:#a90d91\"\u003estring\u003c/span\u003e) \u003cspan style=\"color:#000\"\u003ecounter\u003c/span\u003e {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#000\"\u003ecounted\u003c/span\u003e \u003cspan style=\"color:#000\"\u003e:=\u003c/span\u003e \u003cspan style=\"color:#a90d91\"\u003emake\u003c/span\u003e(\u003cspan style=\"color:#a90d91\"\u003echan\u003c/span\u003e \u003cspan style=\"color:#000\"\u003epair\u003c/span\u003e)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#177500\"\u003e// count digits in words\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#177500\"\u003e\u003c/span\u003e    \u003cspan style=\"color:#a90d91\"\u003ego\u003c/span\u003e \u003cspan style=\"color:#a90d91\"\u003efunc\u003c/span\u003e() {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e        \u003cspan style=\"color:#a90d91\"\u003efor\u003c/span\u003e {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e            \u003cspan style=\"color:#000\"\u003eword\u003c/span\u003e \u003cspan style=\"color:#000\"\u003e:=\u003c/span\u003e \u003cspan style=\"color:#000\"\u003enext\u003c/span\u003e()\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e            \u003cspan style=\"color:#000\"\u003ecount\u003c/span\u003e \u003cspan style=\"color:#000\"\u003e:=\u003c/span\u003e \u003cspan style=\"color:#000\"\u003ecountDigits\u003c/span\u003e(\u003cspan style=\"color:#000\"\u003eword\u003c/span\u003e)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e            \u003cspan style=\"color:#000\"\u003ecounted\u003c/span\u003e \u003cspan style=\"color:#000\"\u003e\u0026lt;-\u003c/span\u003e \u003cspan style=\"color:#000\"\u003epair\u003c/span\u003e{\u003cspan style=\"color:#000\"\u003eword\u003c/span\u003e, \u003cspan style=\"color:#000\"\u003ecount\u003c/span\u003e}\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e            \u003cspan style=\"color:#a90d91\"\u003eif\u003c/span\u003e \u003cspan style=\"color:#000\"\u003eword\u003c/span\u003e \u003cspan style=\"color:#000\"\u003e==\u003c/span\u003e \u003cspan style=\"color:#c41a16\"\u003e\u0026#34;\u0026#34;\u003c/span\u003e {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e                \u003cspan style=\"color:#a90d91\"\u003ebreak\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e            }\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e        }\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e    }()\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#177500\"\u003e// ...\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#177500\"\u003e\u003c/span\u003e}\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eIn the outer function, read the pairs from the channel and fill \u003ccode\u003estats\u003c/code\u003e:\u003c/p\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#a90d91\"\u003efunc\u003c/span\u003e \u003cspan style=\"color:#000\"\u003ecountDigitsInWords\u003c/span\u003e(\u003cspan style=\"color:#000\"\u003enext\u003c/span\u003e \u003cspan style=\"color:#a90d91\"\u003efunc\u003c/span\u003e() \u003cspan style=\"color:#a90d91\"\u003estring\u003c/span\u003e) \u003cspan style=\"color:#000\"\u003ecounter\u003c/span\u003e {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#177500\"\u003e// count digits in words\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#177500\"\u003e\u003c/span\u003e    \u003cspan style=\"color:#177500\"\u003e// ...\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#177500\"\u003e\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#177500\"\u003e// fill stats by words\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#177500\"\u003e\u003c/span\u003e    \u003cspan style=\"color:#000\"\u003estats\u003c/span\u003e \u003cspan style=\"color:#000\"\u003e:=\u003c/span\u003e \u003cspan style=\"color:#000\"\u003ecounter\u003c/span\u003e{}\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#a90d91\"\u003efor\u003c/span\u003e {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e        \u003cspan style=\"color:#000\"\u003ep\u003c/span\u003e \u003cspan style=\"color:#000\"\u003e:=\u003c/span\u003e \u003cspan style=\"color:#000\"\u003e\u0026lt;-\u003c/span\u003e\u003cspan style=\"color:#000\"\u003ecounted\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e        \u003cspan style=\"color:#a90d91\"\u003eif\u003c/span\u003e \u003cspan style=\"color:#000\"\u003ep\u003c/span\u003e.\u003cspan style=\"color:#000\"\u003eword\u003c/span\u003e \u003cspan style=\"color:#000\"\u003e==\u003c/span\u003e \u003cspan style=\"color:#c41a16\"\u003e\u0026#34;\u0026#34;\u003c/span\u003e {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e            \u003cspan style=\"color:#a90d91\"\u003ebreak\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e        }\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e        \u003cspan style=\"color:#000\"\u003estats\u003c/span\u003e[\u003cspan style=\"color:#000\"\u003ep\u003c/span\u003e.\u003cspan style=\"color:#000\"\u003eword\u003c/span\u003e] = \u003cspan style=\"color:#000\"\u003ep\u003c/span\u003e.\u003cspan style=\"color:#000\"\u003ecount\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e    }\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#a90d91\"\u003ereturn\u003c/span\u003e \u003cspan style=\"color:#000\"\u003estats\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e}\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eThat\u0026#39;s it!\u003c/p\u003e\u003c/div\u003e\u003ch2 id=\"-reader-and-worker\"\u003e✎ Reader and worker\u003c/h2\u003e\u003cp\u003eWe are working with a function that counts digits in words:\u003c/p\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#177500\"\u003e// countDigitsInWords counts the number of digits in words,\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#177500\"\u003e// fetching the next word with next().\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#177500\"\u003e\u003c/span\u003e\u003cspan style=\"color:#a90d91\"\u003efunc\u003c/span\u003e \u003cspan style=\"color:#000\"\u003ecountDigitsInWords\u003c/span\u003e(\u003cspan style=\"color:#000\"\u003enext\u003c/span\u003e \u003cspan style=\"color:#a90d91\"\u003efunc\u003c/span\u003e() \u003cspan style=\"color:#a90d91\"\u003estring\u003c/span\u003e) \u003cspan style=\"color:#000\"\u003ecounter\u003c/span\u003e {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#177500\"\u003e// ...\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#177500\"\u003e\u003c/span\u003e    \u003cspan style=\"color:#a90d91\"\u003ereturn\u003c/span\u003e \u003cspan style=\"color:#000\"\u003estats\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e}\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eIn the previous exercise, the goroutine went through the words and counted the digits, while the outer function received the counts and updated the counter:\u003c/p\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"\u003e\u003ccode class=\"language-text\" data-lang=\"text\"\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e┌───────────────┐\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e│ loops through │               ┌────────────────┐\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e│ words and     │ → (counted) → │ fills stats    │\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e│ counts digits │               └────────────────┘\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e└───────────────┘\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e  goroutine          channel      outer function\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eFor more complex tasks, it\u0026#39;s useful to have a goroutine for reading data (\u003cem\u003ereader\u003c/em\u003e) and another for processing data (\u003cem\u003eworker\u003c/em\u003e). Let\u0026#39;s use this approach in our function:\u003c/p\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"\u003e\u003ccode class=\"language-text\" data-lang=\"text\"\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e┌───────────────┐               ┌───────────────┐\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e│ sends words   │               │ counts digits │               ┌────────────────┐\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e│ to be counted │ → (pending) → │ in words      │ → (counted) → │ fills stats    │\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e│               │               │               │               └────────────────┘\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e└───────────────┘               └───────────────┘\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e  reader             channel      worker             channel      outer function\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eDo the following:\u003c/p\u003e\u003cul\u003e\u003cli\u003eStart a goroutine that fetches words from the generator and sends them to the \u003ccode\u003epending\u003c/code\u003e channel (reader).\u003c/li\u003e\u003cli\u003eStart a second goroutine that reads from \u003ccode\u003epending\u003c/code\u003e, counts the digits, and writes to the \u003ccode\u003ecounted\u003c/code\u003e channel (worker).\u003c/li\u003e\u003cli\u003eIn the outer function, read from \u003ccode\u003ecounted\u003c/code\u003e and update the final \u003ccode\u003estats\u003c/code\u003e counter.\u003c/li\u003e\u003c/ul\u003e\u003cp\u003eSubmit only the code fragment marked with \u0026#34;solution start\u0026#34; and \u0026#34;solution end\u0026#34; comments. The full source code is available via the \u0026#34;Playground\u0026#34; link below.\u003c/p\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#177500\"\u003e// solution start\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#177500\"\u003e\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#177500\"\u003e// countDigitsInWords counts the number of digits in words,\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#177500\"\u003e// fetching the next word with next().\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#177500\"\u003e\u003c/span\u003e\u003cspan style=\"color:#a90d91\"\u003efunc\u003c/span\u003e \u003cspan style=\"color:#000\"\u003ecountDigitsInWords\u003c/span\u003e(\u003cspan style=\"color:#000\"\u003enext\u003c/span\u003e \u003cspan style=\"color:#a90d91\"\u003efunc\u003c/span\u003e() \u003cspan style=\"color:#a90d91\"\u003estring\u003c/span\u003e) \u003cspan style=\"color:#000\"\u003ecounter\u003c/span\u003e {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#000\"\u003epending\u003c/span\u003e \u003cspan style=\"color:#000\"\u003e:=\u003c/span\u003e \u003cspan style=\"color:#a90d91\"\u003emake\u003c/span\u003e(\u003cspan style=\"color:#a90d91\"\u003echan\u003c/span\u003e \u003cspan style=\"color:#a90d91\"\u003estring\u003c/span\u003e)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#000\"\u003ecounted\u003c/span\u003e \u003cspan style=\"color:#000\"\u003e:=\u003c/span\u003e \u003cspan style=\"color:#a90d91\"\u003emake\u003c/span\u003e(\u003cspan style=\"color:#a90d91\"\u003echan\u003c/span\u003e \u003cspan style=\"color:#000\"\u003epair\u003c/span\u003e)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#177500\"\u003e// sends words to be counted\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#177500\"\u003e\u003c/span\u003e    \u003cspan style=\"color:#a90d91\"\u003ego\u003c/span\u003e \u003cspan style=\"color:#a90d91\"\u003efunc\u003c/span\u003e() {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e        \u003cspan style=\"color:#177500\"\u003e// Fetch words from the generator\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#177500\"\u003e\u003c/span\u003e        \u003cspan style=\"color:#177500\"\u003e// and send them to the pending channel.\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#177500\"\u003e\u003c/span\u003e    }()\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#177500\"\u003e// counts digits in words\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#177500\"\u003e\u003c/span\u003e    \u003cspan style=\"color:#a90d91\"\u003ego\u003c/span\u003e \u003cspan style=\"color:#a90d91\"\u003efunc\u003c/span\u003e() {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e        \u003cspan style=\"color:#177500\"\u003e// Read the words from the pending channel,\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#177500\"\u003e\u003c/span\u003e        \u003cspan style=\"color:#177500\"\u003e// count the number of digits in each word,\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#177500\"\u003e\u003c/span\u003e        \u003cspan style=\"color:#177500\"\u003e// and send the results to the counted channel.\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#177500\"\u003e\u003c/span\u003e    }()\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#177500\"\u003e// Read values from the counted channel\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#177500\"\u003e\u003c/span\u003e    \u003cspan style=\"color:#177500\"\u003e// and fill stats.\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#177500\"\u003e\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#177500\"\u003e// As a result, stats should contain words\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#177500\"\u003e\u003c/span\u003e    \u003cspan style=\"color:#177500\"\u003e// and the number of digits in each.\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#177500\"\u003e\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#a90d91\"\u003ereturn\u003c/span\u003e \u003cspan style=\"color:#000\"\u003estats\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e}\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#177500\"\u003e// solution end\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ccodapi-snippet id=\"ex04\" sandbox=\"go\" editor=\"basic\" template=\"ex04.go\" actions=\"Playground:@playground Toggle_solution:@solution\" data-playground=\"https://go.dev/play/p/QWwMuRZbxtx\"\u003e\u003c/codapi-snippet\u003e\u003cdiv id=\"ex04-solution\" class=\"boxed\" hidden=\"\"\u003e\u003cp\u003e\u003cstrong\u003e✓ Reader and worker\u003c/strong\u003e\u003c/p\u003e\u003cp\u003eThe reader goroutine fetches words from the generator and sends them to the \u003ccode\u003epending\u003c/code\u003e channel:\u003c/p\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#a90d91\"\u003ego\u003c/span\u003e \u003cspan style=\"color:#a90d91\"\u003efunc\u003c/span\u003e() {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#a90d91\"\u003efor\u003c/span\u003e {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e        \u003cspan style=\"color:#000\"\u003eword\u003c/span\u003e \u003cspan style=\"color:#000\"\u003e:=\u003c/span\u003e \u003cspan style=\"color:#000\"\u003enext\u003c/span\u003e()\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e        \u003cspan style=\"color:#000\"\u003epending\u003c/span\u003e \u003cspan style=\"color:#000\"\u003e\u0026lt;-\u003c/span\u003e \u003cspan style=\"color:#000\"\u003eword\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e        \u003cspan style=\"color:#a90d91\"\u003eif\u003c/span\u003e \u003cspan style=\"color:#000\"\u003eword\u003c/span\u003e \u003cspan style=\"color:#000\"\u003e==\u003c/span\u003e \u003cspan style=\"color:#c41a16\"\u003e\u0026#34;\u0026#34;\u003c/span\u003e {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e            \u003cspan style=\"color:#a90d91\"\u003ebreak\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e        }\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e    }\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e}()\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eThe worker goroutine reads words from the \u003ccode\u003epending\u003c/code\u003e channel, counts digits, and sends the results to the \u003ccode\u003ecounted\u003c/code\u003e channel:\u003c/p\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#a90d91\"\u003ego\u003c/span\u003e \u003cspan style=\"color:#a90d91\"\u003efunc\u003c/span\u003e() {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#a90d91\"\u003efor\u003c/span\u003e {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e        \u003cspan style=\"color:#000\"\u003eword\u003c/span\u003e \u003cspan style=\"color:#000\"\u003e:=\u003c/span\u003e \u003cspan style=\"color:#000\"\u003e\u0026lt;-\u003c/span\u003e\u003cspan style=\"color:#000\"\u003epending\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e        \u003cspan style=\"color:#000\"\u003ecount\u003c/span\u003e \u003cspan style=\"color:#000\"\u003e:=\u003c/span\u003e \u003cspan style=\"color:#000\"\u003ecountDigits\u003c/span\u003e(\u003cspan style=\"color:#000\"\u003eword\u003c/span\u003e)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e        \u003cspan style=\"color:#000\"\u003ecounted\u003c/span\u003e \u003cspan style=\"color:#000\"\u003e\u0026lt;-\u003c/span\u003e \u003cspan style=\"color:#000\"\u003epair\u003c/span\u003e{\u003cspan style=\"color:#000\"\u003eword\u003c/span\u003e, \u003cspan style=\"color:#000\"\u003ecount\u003c/span\u003e}\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e        \u003cspan style=\"color:#a90d91\"\u003eif\u003c/span\u003e \u003cspan style=\"color:#000\"\u003eword\u003c/span\u003e \u003cspan style=\"color:#000\"\u003e==\u003c/span\u003e \u003cspan style=\"color:#c41a16\"\u003e\u0026#34;\u0026#34;\u003c/span\u003e {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e            \u003cspan style=\"color:#a90d91\"\u003ebreak\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e        }\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e    }\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e}()\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eThe outer function reads from the \u003ccode\u003ecounted\u003c/code\u003e channel and prepares the final results:\u003c/p\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#000\"\u003estats\u003c/span\u003e \u003cspan style=\"color:#000\"\u003e:=\u003c/span\u003e \u003cspan style=\"color:#000\"\u003ecounter\u003c/span\u003e{}\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#a90d91\"\u003efor\u003c/span\u003e {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#000\"\u003ep\u003c/span\u003e \u003cspan style=\"color:#000\"\u003e:=\u003c/span\u003e \u003cspan style=\"color:#000\"\u003e\u0026lt;-\u003c/span\u003e\u003cspan style=\"color:#000\"\u003ecounted\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#a90d91\"\u003eif\u003c/span\u003e \u003cspan style=\"color:#000\"\u003ep\u003c/span\u003e.\u003cspan style=\"color:#000\"\u003eword\u003c/span\u003e \u003cspan style=\"color:#000\"\u003e==\u003c/span\u003e \u003cspan style=\"color:#c41a16\"\u003e\u0026#34;\u0026#34;\u003c/span\u003e {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e        \u003cspan style=\"color:#a90d91\"\u003ebreak\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e    }\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#000\"\u003estats\u003c/span\u003e[\u003cspan style=\"color:#000\"\u003ep\u003c/span\u003e.\u003cspan style=\"color:#000\"\u003eword\u003c/span\u003e] = \u003cspan style=\"color:#000\"\u003ep\u003c/span\u003e.\u003cspan style=\"color:#000\"\u003ecount\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e}\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\u003ch2 id=\"-named-goroutines\"\u003e✎ Named goroutines\u003c/h2\u003e\u003cp\u003eWe are working with a function that counts digits in words:\u003c/p\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#177500\"\u003e// countDigitsInWords counts the number of digits in words,\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#177500\"\u003e// fetching the next word with next().\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#177500\"\u003e\u003c/span\u003e\u003cspan style=\"color:#a90d91\"\u003efunc\u003c/span\u003e \u003cspan style=\"color:#000\"\u003ecountDigitsInWords\u003c/span\u003e(\u003cspan style=\"color:#000\"\u003enext\u003c/span\u003e \u003cspan style=\"color:#a90d91\"\u003efunc\u003c/span\u003e() \u003cspan style=\"color:#a90d91\"\u003estring\u003c/span\u003e) \u003cspan style=\"color:#000\"\u003ecounter\u003c/span\u003e {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#177500\"\u003e// ...\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#177500\"\u003e\u003c/span\u003e    \u003cspan style=\"color:#a90d91\"\u003ereturn\u003c/span\u003e \u003cspan style=\"color:#000\"\u003estats\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e}\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eAfter splitting the logic between the reader and the worker, the function became quite hefty:\u003c/p\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#a90d91\"\u003efunc\u003c/span\u003e \u003cspan style=\"color:#000\"\u003ecountDigitsInWords\u003c/span\u003e(\u003cspan style=\"color:#000\"\u003enext\u003c/span\u003e \u003cspan style=\"color:#a90d91\"\u003efunc\u003c/span\u003e() \u003cspan style=\"color:#a90d91\"\u003estring\u003c/span\u003e) \u003cspan style=\"color:#000\"\u003ecounter\u003c/span\u003e {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#177500\"\u003e// ...\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#177500\"\u003e\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#177500\"\u003e// sends words to be counted\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#177500\"\u003e\u003c/span\u003e    \u003cspan style=\"color:#a90d91\"\u003ego\u003c/span\u003e \u003cspan style=\"color:#a90d91\"\u003efunc\u003c/span\u003e() {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e        \u003cspan style=\"color:#177500\"\u003e// ...\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#177500\"\u003e\u003c/span\u003e    }()\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#177500\"\u003e// counts digits in words\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#177500\"\u003e\u003c/span\u003e    \u003cspan style=\"color:#a90d91\"\u003ego\u003c/span\u003e \u003cspan style=\"color:#a90d91\"\u003efunc\u003c/span\u003e() {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e        \u003cspan style=\"color:#177500\"\u003e// ...\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#177500\"\u003e\u003c/span\u003e    }()\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#177500\"\u003e// fills stats\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#177500\"\u003e\u003c/span\u003e    \u003cspan style=\"color:#177500\"\u003e// ...\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#177500\"\u003e\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#a90d91\"\u003ereturn\u003c/span\u003e \u003cspan style=\"color:#000\"\u003estats\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e}\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eThere are clearly three logical blocks:\u003c/p\u003e\u003col\u003e\u003cli\u003eSend words to be counted.\u003c/li\u003e\u003cli\u003eCount digits in words.\u003c/li\u003e\u003cli\u003eFill in the final results.\u003c/li\u003e\u003c/ol\u003e\u003cp\u003eIt would be convenient to extract these blocks into separate functions that exchange data through channels:\u003c/p\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#a90d91\"\u003efunc\u003c/span\u003e \u003cspan style=\"color:#000\"\u003ecountDigitsInWords\u003c/span\u003e(\u003cspan style=\"color:#000\"\u003enext\u003c/span\u003e \u003cspan style=\"color:#a90d91\"\u003efunc\u003c/span\u003e() \u003cspan style=\"color:#a90d91\"\u003estring\u003c/span\u003e) \u003cspan style=\"color:#000\"\u003ecounter\u003c/span\u003e {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#000\"\u003epending\u003c/span\u003e \u003cspan style=\"color:#000\"\u003e:=\u003c/span\u003e \u003cspan style=\"color:#a90d91\"\u003emake\u003c/span\u003e(\u003cspan style=\"color:#a90d91\"\u003echan\u003c/span\u003e \u003cspan style=\"color:#a90d91\"\u003estring\u003c/span\u003e)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#a90d91\"\u003ego\u003c/span\u003e \u003cspan style=\"color:#000\"\u003esubmitWords\u003c/span\u003e(\u003cspan style=\"color:#000\"\u003enext\u003c/span\u003e, \u003cspan style=\"color:#000\"\u003epending\u003c/span\u003e)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#000\"\u003ecounted\u003c/span\u003e \u003cspan style=\"color:#000\"\u003e:=\u003c/span\u003e \u003cspan style=\"color:#a90d91\"\u003emake\u003c/span\u003e(\u003cspan style=\"color:#a90d91\"\u003echan\u003c/span\u003e \u003cspan style=\"color:#000\"\u003epair\u003c/span\u003e)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#a90d91\"\u003ego\u003c/span\u003e \u003cspan style=\"color:#000\"\u003ecountWords\u003c/span\u003e(\u003cspan style=\"color:#000\"\u003epending\u003c/span\u003e, \u003cspan style=\"color:#000\"\u003ecounted\u003c/span\u003e)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#a90d91\"\u003ereturn\u003c/span\u003e \u003cspan style=\"color:#000\"\u003efillStats\u003c/span\u003e(\u003cspan style=\"color:#000\"\u003ecounted\u003c/span\u003e)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e}\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eRefactor the program to achieve this.\u003c/p\u003e\u003cp\u003eSubmit only the code fragment marked with \u0026#34;solution start\u0026#34; and \u0026#34;solution end\u0026#34; comments. The full source code is available via the \u0026#34;Playground\u0026#34; link below.\u003c/p\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#177500\"\u003e// solution start\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#177500\"\u003e\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#177500\"\u003e// submitWords sends words to be counted.\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#177500\"\u003e\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#177500\"\u003e// countWords counts digits in words.\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#177500\"\u003e\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#177500\"\u003e// fillStats prepares the final statistics.\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#177500\"\u003e\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#177500\"\u003e// solution end\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ccodapi-snippet id=\"ex05\" sandbox=\"go\" editor=\"basic\" template=\"ex05.go\" actions=\"Playground:@playground Toggle_solution:@solution\" data-playground=\"https://go.dev/play/p/cN-AGmemUAF\"\u003e\u003c/codapi-snippet\u003e\u003cdiv id=\"ex05-solution\" class=\"boxed\" hidden=\"\"\u003e\u003cp\u003e\u003cstrong\u003e✓ Named goroutines\u003c/strong\u003e\u003c/p\u003e\u003cp\u003e\u003ccode\u003esubmitWords()\u003c/code\u003e fills the input channel with words from the \u003ccode\u003enext\u003c/code\u003e function:\u003c/p\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#a90d91\"\u003efunc\u003c/span\u003e \u003cspan style=\"color:#000\"\u003esubmitWords\u003c/span\u003e(\u003cspan style=\"color:#000\"\u003enext\u003c/span\u003e \u003cspan style=\"color:#a90d91\"\u003efunc\u003c/span\u003e() \u003cspan style=\"color:#a90d91\"\u003estring\u003c/span\u003e, \u003cspan style=\"color:#000\"\u003eout\u003c/span\u003e \u003cspan style=\"color:#a90d91\"\u003echan\u003c/span\u003e \u003cspan style=\"color:#a90d91\"\u003estring\u003c/span\u003e) {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#a90d91\"\u003efor\u003c/span\u003e {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e        \u003cspan style=\"color:#000\"\u003eword\u003c/span\u003e \u003cspan style=\"color:#000\"\u003e:=\u003c/span\u003e \u003cspan style=\"color:#000\"\u003enext\u003c/span\u003e()\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e        \u003cspan style=\"color:#000\"\u003eout\u003c/span\u003e \u003cspan style=\"color:#000\"\u003e\u0026lt;-\u003c/span\u003e \u003cspan style=\"color:#000\"\u003eword\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e        \u003cspan style=\"color:#a90d91\"\u003eif\u003c/span\u003e \u003cspan style=\"color:#000\"\u003eword\u003c/span\u003e \u003cspan style=\"color:#000\"\u003e==\u003c/span\u003e \u003cspan style=\"color:#c41a16\"\u003e\u0026#34;\u0026#34;\u003c/span\u003e {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e            \u003cspan style=\"color:#a90d91\"\u003ebreak\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e        }\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e    }\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e}\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e\u003ccode\u003ecountWords()\u003c/code\u003e reads data from the input channel, counts digits, and writes results to the output channel:\u003c/p\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#a90d91\"\u003efunc\u003c/span\u003e \u003cspan style=\"color:#000\"\u003ecountWords\u003c/span\u003e(\u003cspan style=\"color:#000\"\u003ein\u003c/span\u003e \u003cspan style=\"color:#a90d91\"\u003echan\u003c/span\u003e \u003cspan style=\"color:#a90d91\"\u003estring\u003c/span\u003e, \u003cspan style=\"color:#000\"\u003eout\u003c/span\u003e \u003cspan style=\"color:#a90d91\"\u003echan\u003c/span\u003e \u003cspan style=\"color:#000\"\u003epair\u003c/span\u003e) {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#a90d91\"\u003efor\u003c/span\u003e {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e        \u003cspan style=\"color:#000\"\u003eword\u003c/span\u003e \u003cspan style=\"color:#000\"\u003e:=\u003c/span\u003e \u003cspan style=\"color:#000\"\u003e\u0026lt;-\u003c/span\u003e\u003cspan style=\"color:#000\"\u003ein\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e        \u003cspan style=\"color:#000\"\u003ecount\u003c/span\u003e \u003cspan style=\"color:#000\"\u003e:=\u003c/span\u003e \u003cspan style=\"color:#000\"\u003ecountDigits\u003c/span\u003e(\u003cspan style=\"color:#000\"\u003eword\u003c/span\u003e)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e        \u003cspan style=\"color:#000\"\u003eout\u003c/span\u003e \u003cspan style=\"color:#000\"\u003e\u0026lt;-\u003c/span\u003e \u003cspan style=\"color:#000\"\u003epair\u003c/span\u003e{\u003cspan style=\"color:#000\"\u003eword\u003c/span\u003e, \u003cspan style=\"color:#000\"\u003ecount\u003c/span\u003e}\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e        \u003cspan style=\"color:#a90d91\"\u003eif\u003c/span\u003e \u003cspan style=\"color:#000\"\u003eword\u003c/span\u003e \u003cspan style=\"color:#000\"\u003e==\u003c/span\u003e \u003cspan style=\"color:#c41a16\"\u003e\u0026#34;\u0026#34;\u003c/span\u003e {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e            \u003cspan style=\"color:#a90d91\"\u003ebreak\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e        }\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e    }\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e}\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e\u003ccode\u003efillStats()\u003c/code\u003e reads from the result channel and prepares the final statistics:\u003c/p\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#a90d91\"\u003efunc\u003c/span\u003e \u003cspan style=\"color:#000\"\u003efillStats\u003c/span\u003e(\u003cspan style=\"color:#000\"\u003ein\u003c/span\u003e \u003cspan style=\"color:#a90d91\"\u003echan\u003c/span\u003e \u003cspan style=\"color:#000\"\u003epair\u003c/span\u003e) \u003cspan style=\"color:#000\"\u003ecounter\u003c/span\u003e {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#000\"\u003estats\u003c/span\u003e \u003cspan style=\"color:#000\"\u003e:=\u003c/span\u003e \u003cspan style=\"color:#000\"\u003ecounter\u003c/span\u003e{}\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#a90d91\"\u003efor\u003c/span\u003e {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e        \u003cspan style=\"color:#000\"\u003ep\u003c/span\u003e \u003cspan style=\"color:#000\"\u003e:=\u003c/span\u003e \u003cspan style=\"color:#000\"\u003e\u0026lt;-\u003c/span\u003e\u003cspan style=\"color:#000\"\u003ein\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e        \u003cspan style=\"color:#a90d91\"\u003eif\u003c/span\u003e \u003cspan style=\"color:#000\"\u003ep\u003c/span\u003e.\u003cspan style=\"color:#000\"\u003eword\u003c/span\u003e \u003cspan style=\"color:#000\"\u003e==\u003c/span\u003e \u003cspan style=\"color:#c41a16\"\u003e\u0026#34;\u0026#34;\u003c/span\u003e {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e            \u003cspan style=\"color:#a90d91\"\u003ebreak\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e        }\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e        \u003cspan style=\"color:#000\"\u003estats\u003c/span\u003e[\u003cspan style=\"color:#000\"\u003ep\u003c/span\u003e.\u003cspan style=\"color:#000\"\u003eword\u003c/span\u003e] = \u003cspan style=\"color:#000\"\u003ep\u003c/span\u003e.\u003cspan style=\"color:#000\"\u003ecount\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e    }\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#a90d91\"\u003ereturn\u003c/span\u003e \u003cspan style=\"color:#000\"\u003estats\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e}\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\u003ch2 id=\"output-channel\"\u003eOutput channel\u003c/h2\u003e\u003cp\u003eHere is the function we ended up with:\u003c/p\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#177500\"\u003e// countDigitsInWords counts the number of digits in words,\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#177500\"\u003e// fetching the next word with next().\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#177500\"\u003e\u003c/span\u003e\u003cspan style=\"color:#a90d91\"\u003efunc\u003c/span\u003e \u003cspan style=\"color:#000\"\u003ecountDigitsInWords\u003c/span\u003e(\u003cspan style=\"color:#000\"\u003enext\u003c/span\u003e \u003cspan style=\"color:#a90d91\"\u003efunc\u003c/span\u003e() \u003cspan style=\"color:#a90d91\"\u003estring\u003c/span\u003e) \u003cspan style=\"color:#000\"\u003ecounter\u003c/span\u003e {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#000\"\u003epending\u003c/span\u003e \u003cspan style=\"color:#000\"\u003e:=\u003c/span\u003e \u003cspan style=\"color:#a90d91\"\u003emake\u003c/span\u003e(\u003cspan style=\"color:#a90d91\"\u003echan\u003c/span\u003e \u003cspan style=\"color:#a90d91\"\u003estring\u003c/span\u003e)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#a90d91\"\u003ego\u003c/span\u003e \u003cspan style=\"color:#000\"\u003esubmitWords\u003c/span\u003e(\u003cspan style=\"color:#000\"\u003enext\u003c/span\u003e, \u003cspan style=\"color:#000\"\u003epending\u003c/span\u003e)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#000\"\u003ecounted\u003c/span\u003e \u003cspan style=\"color:#000\"\u003e:=\u003c/span\u003e \u003cspan style=\"color:#a90d91\"\u003emake\u003c/span\u003e(\u003cspan style=\"color:#a90d91\"\u003echan\u003c/span\u003e \u003cspan style=\"color:#000\"\u003epair\u003c/span\u003e)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#a90d91\"\u003ego\u003c/span\u003e \u003cspan style=\"color:#000\"\u003ecountWords\u003c/span\u003e(\u003cspan style=\"color:#000\"\u003epending\u003c/span\u003e, \u003cspan style=\"color:#000\"\u003ecounted\u003c/span\u003e)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#a90d91\"\u003ereturn\u003c/span\u003e \u003cspan style=\"color:#000\"\u003efillStats\u003c/span\u003e(\u003cspan style=\"color:#000\"\u003ecounted\u003c/span\u003e)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e}\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eIt looks fine, but there\u0026#39;s still one thing I\u0026#39;d like to change.\u003c/p\u003e\u003cp\u003eThe \u003ccode\u003epending\u003c/code\u003e channel is created in the \u003ccode\u003emain\u003c/code\u003e function only to be passed to the \u003ccode\u003esubmitWords\u003c/code\u003e function. It\u0026#39;d be better to create the channel in \u003ccode\u003esubmitWords\u003c/code\u003e and return it to \u003ccode\u003emain\u003c/code\u003e, so that \u003ccode\u003esubmitWords\u003c/code\u003e owns it completely. The same goes for the \u003ccode\u003ecounted\u003c/code\u003e channel and \u003ccode\u003ecountWords\u003c/code\u003e.\u003c/p\u003e\u003cp\u003eThen \u003ccode\u003ecountDigitsInWords\u003c/code\u003e will look like this:\u003c/p\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#a90d91\"\u003efunc\u003c/span\u003e \u003cspan style=\"color:#000\"\u003ecountDigitsInWords\u003c/span\u003e(\u003cspan style=\"color:#000\"\u003enext\u003c/span\u003e \u003cspan style=\"color:#a90d91\"\u003efunc\u003c/span\u003e() \u003cspan style=\"color:#a90d91\"\u003estring\u003c/span\u003e) \u003cspan style=\"color:#000\"\u003ecounter\u003c/span\u003e {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#000\"\u003epending\u003c/span\u003e \u003cspan style=\"color:#000\"\u003e:=\u003c/span\u003e \u003cspan style=\"color:#000\"\u003esubmitWords\u003c/span\u003e(\u003cspan style=\"color:#000\"\u003enext\u003c/span\u003e)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#000\"\u003ecounted\u003c/span\u003e \u003cspan style=\"color:#000\"\u003e:=\u003c/span\u003e \u003cspan style=\"color:#000\"\u003ecountWords\u003c/span\u003e(\u003cspan style=\"color:#000\"\u003epending\u003c/span\u003e)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#a90d91\"\u003ereturn\u003c/span\u003e \u003cspan style=\"color:#000\"\u003efillStats\u003c/span\u003e(\u003cspan style=\"color:#000\"\u003ecounted\u003c/span\u003e)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e}\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eNow the ownership is clear, and the program is easier to reason about. But where did all the goroutines go? We start them inside \u003ccode\u003esubmitWords\u003c/code\u003e and \u003ccode\u003ecountWords\u003c/code\u003e like this:\u003c/p\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#177500\"\u003e// submitWords sends words to be counted.\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#177500\"\u003e\u003c/span\u003e\u003cspan style=\"color:#a90d91\"\u003efunc\u003c/span\u003e \u003cspan style=\"color:#000\"\u003esubmitWords\u003c/span\u003e(\u003cspan style=\"color:#000\"\u003enext\u003c/span\u003e \u003cspan style=\"color:#a90d91\"\u003efunc\u003c/span\u003e() \u003cspan style=\"color:#a90d91\"\u003estring\u003c/span\u003e) \u003cspan style=\"color:#a90d91\"\u003echan\u003c/span\u003e \u003cspan style=\"color:#a90d91\"\u003estring\u003c/span\u003e {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#000\"\u003eout\u003c/span\u003e \u003cspan style=\"color:#000\"\u003e:=\u003c/span\u003e \u003cspan style=\"color:#a90d91\"\u003emake\u003c/span\u003e(\u003cspan style=\"color:#a90d91\"\u003echan\u003c/span\u003e \u003cspan style=\"color:#a90d91\"\u003estring\u003c/span\u003e)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#a90d91\"\u003ego\u003c/span\u003e \u003cspan style=\"color:#a90d91\"\u003efunc\u003c/span\u003e() {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e        \u003cspan style=\"color:#a90d91\"\u003efor\u003c/span\u003e {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e            \u003cspan style=\"color:#000\"\u003eword\u003c/span\u003e \u003cspan style=\"color:#000\"\u003e:=\u003c/span\u003e \u003cspan style=\"color:#000\"\u003enext\u003c/span\u003e()\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e            \u003cspan style=\"color:#000\"\u003eout\u003c/span\u003e \u003cspan style=\"color:#000\"\u003e\u0026lt;-\u003c/span\u003e \u003cspan style=\"color:#000\"\u003eword\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e            \u003cspan style=\"color:#a90d91\"\u003eif\u003c/span\u003e \u003cspan style=\"color:#000\"\u003eword\u003c/span\u003e \u003cspan style=\"color:#000\"\u003e==\u003c/span\u003e \u003cspan style=\"color:#c41a16\"\u003e\u0026#34;\u0026#34;\u003c/span\u003e {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e                \u003cspan style=\"color:#a90d91\"\u003ebreak\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e            }\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e        }\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e    }()\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#a90d91\"\u003ereturn\u003c/span\u003e \u003cspan style=\"color:#000\"\u003eout\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e}\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#177500\"\u003e// countWords counts digits in words.\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#177500\"\u003e\u003c/span\u003e\u003cspan style=\"color:#a90d91\"\u003efunc\u003c/span\u003e \u003cspan style=\"color:#000\"\u003ecountWords\u003c/span\u003e(\u003cspan style=\"color:#000\"\u003ein\u003c/span\u003e \u003cspan style=\"color:#a90d91\"\u003echan\u003c/span\u003e \u003cspan style=\"color:#a90d91\"\u003estring\u003c/span\u003e) \u003cspan style=\"color:#a90d91\"\u003echan\u003c/span\u003e \u003cspan style=\"color:#000\"\u003epair\u003c/span\u003e {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#000\"\u003eout\u003c/span\u003e \u003cspan style=\"color:#000\"\u003e:=\u003c/span\u003e \u003cspan style=\"color:#a90d91\"\u003emake\u003c/span\u003e(\u003cspan style=\"color:#a90d91\"\u003echan\u003c/span\u003e \u003cspan style=\"color:#000\"\u003epair\u003c/span\u003e)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#a90d91\"\u003ego\u003c/span\u003e \u003cspan style=\"color:#a90d91\"\u003efunc\u003c/span\u003e() {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e        \u003cspan style=\"color:#a90d91\"\u003efor\u003c/span\u003e {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e            \u003cspan style=\"color:#000\"\u003eword\u003c/span\u003e \u003cspan style=\"color:#000\"\u003e:=\u003c/span\u003e \u003cspan style=\"color:#000\"\u003e\u0026lt;-\u003c/span\u003e\u003cspan style=\"color:#000\"\u003ein\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e            \u003cspan style=\"color:#000\"\u003ecount\u003c/span\u003e \u003cspan style=\"color:#000\"\u003e:=\u003c/span\u003e \u003cspan style=\"color:#000\"\u003ecountDigits\u003c/span\u003e(\u003cspan style=\"color:#000\"\u003eword\u003c/span\u003e)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e            \u003cspan style=\"color:#000\"\u003eout\u003c/span\u003e \u003cspan style=\"color:#000\"\u003e\u0026lt;-\u003c/span\u003e \u003cspan style=\"color:#000\"\u003epair\u003c/span\u003e{\u003cspan style=\"color:#000\"\u003eword\u003c/span\u003e, \u003cspan style=\"color:#000\"\u003ecount\u003c/span\u003e}\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e            \u003cspan style=\"color:#a90d91\"\u003eif\u003c/span\u003e \u003cspan style=\"color:#000\"\u003eword\u003c/span\u003e \u003cspan style=\"color:#000\"\u003e==\u003c/span\u003e \u003cspan style=\"color:#c41a16\"\u003e\u0026#34;\u0026#34;\u003c/span\u003e {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e                \u003cspan style=\"color:#a90d91\"\u003ebreak\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e            }\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e        }\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e    }()\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#a90d91\"\u003ereturn\u003c/span\u003e \u003cspan style=\"color:#000\"\u003eout\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e}\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ccodapi-snippet id=\"s-output\" editor=\"basic\"\u003e\u003c/codapi-snippet\u003e\u003cp\u003eLet\u0026#39;s make sure the program still works as expected:\u003c/p\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#a90d91\"\u003efunc\u003c/span\u003e \u003cspan style=\"color:#000\"\u003emain\u003c/span\u003e() {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#000\"\u003ephrase\u003c/span\u003e \u003cspan style=\"color:#000\"\u003e:=\u003c/span\u003e \u003cspan style=\"color:#c41a16\"\u003e\u0026#34;0ne 1wo thr33 4068\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#000\"\u003enext\u003c/span\u003e \u003cspan style=\"color:#000\"\u003e:=\u003c/span\u003e \u003cspan style=\"color:#000\"\u003ewordGenerator\u003c/span\u003e(\u003cspan style=\"color:#000\"\u003ephrase\u003c/span\u003e)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#000\"\u003estats\u003c/span\u003e \u003cspan style=\"color:#000\"\u003e:=\u003c/span\u003e \u003cspan style=\"color:#000\"\u003ecountDigitsInWords\u003c/span\u003e(\u003cspan style=\"color:#000\"\u003enext\u003c/span\u003e)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#000\"\u003eprintStats\u003c/span\u003e(\u003cspan style=\"color:#000\"\u003estats\u003c/span\u003e)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e}\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ccodapi-snippet sandbox=\"go\" editor=\"basic\" depends-on=\"s-output\" template=\"output.go\" output=\"\" actions=\"Playground:@playground\" data-playground=\"https://go.dev/play/p/rlBv7-CU-TG\"\u003e\u003c/codapi-snippet\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"\u003e\u003ccode class=\"language-text\" data-lang=\"text\"\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003ethr33: 2\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e4068: 4\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e0ne: 1\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e1wo: 1\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eReturning an output channel from a function and filling it within an internal goroutine is a common pattern in Go.\u003c/p\u003e\u003ch2 id=\"keep-it-up\"\u003eKeep it up\u003c/h2\u003e\u003cp\u003eWe learned about goroutines and channels in Go. There is still a long way to go, but we\u0026#39;ve made a start! In the next chapter we\u0026#39;ll dive into \u003ca href=\"/go-concurrency/channels/\" class=\"disabled\"\u003echannels\u003c/a\u003e (coming soon).\u003c/p\u003e\u003cp\u003e\u003ca class=\"button\" href=\"https://antonz.gumroad.com/l/go-concurrency\"\u003ePre-order for $10\n\u003c/a\u003e \nor \u003ca href=\"/go-concurrency/\"\u003eread online\u003c/a\u003e\u003c/p\u003e\u003cscript defer=\"\" src=\"/modules/codapi/snippet.js\"\u003e\u003c/script\u003e\u003cscript defer=\"\" src=\"index.js\"\u003e\u003c/script\u003e\u003cp\u003e\u003ca href=\"/subscribe/\"\u003e★ Subscribe\u003c/a\u003e to keep up with new posts.\u003c/p\u003e\u003c/div\u003e\u003c/div\u003e\u003cfooter class=\"post__footer\"\u003e\u003cdiv class=\"row\"\u003e\u003cdiv class=\"col-xs-12\"\u003e\u003cdiv class=\"post__date\"\u003e\u003ctime datetime=\"2024-07-30 11:00:00 +0000 UTC\"\u003e30 Jul, 2024\u003c/time\u003e\u003c/div\u003e\u003cdiv class=\"post__tags\"\u003e\u003ca href=\"/tags/thank-go/\"\u003ethank-go\u003c/a\u003e \u003c/div\u003e\u003c/div\u003e\u003c/div\u003e\u003c/footer\u003e\u003c/article\u003e",
  "Date": "2024-07-30T11:00:00Z",
  "Author": "Anton Zhiyanov"
}