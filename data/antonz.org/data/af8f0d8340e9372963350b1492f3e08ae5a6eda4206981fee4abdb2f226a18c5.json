{
  "Source": "antonz.org",
  "Title": "API tutorials beyond OpenAPI",
  "Link": "https://antonz.org/interactive-api-tutorials/",
  "Content": "\u003carticle class=\"post\"\u003e\u003cdiv class=\"row\"\u003e\u003cdiv class=\"col-xs-12 col-md-10 article\"\u003e\u003cheader\u003e\u003ch1\u003eAPI tutorials beyond OpenAPI\u003c/h1\u003e\u003c/header\u003e\u003cp\u003eNot all documentation is created equal. According to the popular classification, there are four document types: tutorials, how-to guides, technical references, and explanations.\u003c/p\u003e\u003cdiv class=\"row\"\u003e\u003cdiv class=\"col-xs-12 col-sm-10\"\u003e\u003cimg alt=\"Four types of documentation\" src=\"documentation.png\"/\u003e\u003c/div\u003e\u003c/div\u003e\u003cp\u003eOpenAPI, the de facto standard for documenting APIs, is a decent reference-style documentation (and client code generator, of course). But it can\u0026#39;t serve as a good how-to or tutorial.\u003c/p\u003e\u003cp\u003eIn this article, I will introduce a concise and readable way to write interactive tutorials and how-tos for any HTTP API (REST, RPC, or other style). And for that (surprise, surprise), we will rely on the HTTP protocol itself.\u003c/p\u003e\u003ch2 id=\"a-crash-course-in-http-messages\"\u003eA crash course in HTTP messages\u003c/h2\u003e\u003cp\u003eHTTP/1.x is a plain-text protocol that describes the communication between the client and the server. The client sends messages like this:\u003c/p\u003e\u003cpre tabindex=\"0\"\u003e\u003ccode\u003ePOST /anything/chat HTTP/1.1\nhost: httpbingo.org\ncontent-type: application/json\nuser-agent: curl/7.87.0\n\n{\n    \u0026#34;message\u0026#34;: \u0026#34;Hello!\u0026#34;\n}\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eAnd receives messages like this in response:\u003c/p\u003e\u003cpre tabindex=\"0\"\u003e\u003ccode\u003eHTTP/1.1 200 OK\ndate: Mon, 28 Aug 2023 07:51:49 GMT\ncontent-type: application/json\n\n{\n    \u0026#34;message\u0026#34;: \u0026#34;Hi!\u0026#34;\n}\n\u003c/code\u003e\u003c/pre\u003e\u003cblockquote\u003e\u003cp\u003eHTTP/2, the successor to HTTP/1.1, is a binary protocol. However, all tools (such as the browser devtools or curl) display HTTP/2 messages in plain text (just like HTTP/1.1), so we can safely ignore this fact for our purposes.\u003c/p\u003e\u003c/blockquote\u003e\u003cdiv class=\"row\"\u003e\u003cdiv class=\"col-xs-12 col-sm-10\"\u003e\u003cfigure\u003e\u003cimg alt=\"HTTP request and response\" src=\"http-messages.png\"/\u003e\u003cfigcaption class=\"align-center\"\u003eIt\u0026#39;s easy to read HTTP requests and responses once you get used to it.\u003c/figcaption\u003e\u003c/figure\u003e\u003c/div\u003e\u003c/div\u003e\u003cp\u003e\u003cstrong\u003eHTTP request\u003c/strong\u003e consists of three main sections:\u003c/p\u003e\u003col\u003e\u003cli\u003eRequest line:\u003c/li\u003e\u003c/ol\u003e\u003cpre tabindex=\"0\"\u003e\u003ccode\u003ePOST /anything/chat HTTP/1.1\n\u003c/code\u003e\u003c/pre\u003e\u003cul\u003e\u003cli\u003eThe \u003cem\u003emethod\u003c/em\u003e (\u003ccode\u003ePOST\u003c/code\u003e) defines the operation the client wants to perform.\u003c/li\u003e\u003cli\u003eThe \u003cem\u003epath\u003c/em\u003e (\u003ccode\u003e/anything/chat\u003c/code\u003e) is the URL of the requested resource (without the protocol, domain and port).\u003c/li\u003e\u003cli\u003eThe \u003cem\u003eversion\u003c/em\u003e (\u003ccode\u003eHTTP/1.1\u003c/code\u003e) indicates the version of the HTTP protocol.\u003c/li\u003e\u003c/ul\u003e\u003col start=\"2\"\u003e\u003cli\u003eRequest headers:\u003c/li\u003e\u003c/ol\u003e\u003cpre tabindex=\"0\"\u003e\u003ccode\u003ehost: httpbingo.org\ncontent-type: application/json\nuser-agent: curl/7.87.0\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eEach header is a key-value pair that tells the server some useful information about the request. In our case it\u0026#39;s the hostname of the server (\u003ccode\u003ehttpbingo.org\u003c/code\u003e), the type of the content (\u003ccode\u003eapplication/json\u003c/code\u003e) and the client\u0026#39;s self-identification (\u003ccode\u003euser-agent\u003c/code\u003e).\u003c/p\u003e\u003col start=\"3\"\u003e\u003cli\u003eRequest body:\u003c/li\u003e\u003c/ol\u003e\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e{\n    \u0026#34;message\u0026#34;: \u0026#34;Hello!\u0026#34;\n}\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eThe actual data that the client sends to the server.\u003c/p\u003e\u003cp\u003eThe HTTP protocol is stateless, so any state must be contained within the request itself, either in the headers or in the body.\u003c/p\u003e\u003cp\u003e\u003cstrong\u003eHTTP response\u003c/strong\u003e also consists of three main sections:\u003c/p\u003e\u003col\u003e\u003cli\u003eStatus line:\u003c/li\u003e\u003c/ol\u003e\u003cpre tabindex=\"0\"\u003e\u003ccode\u003eHTTP/1.1 200 OK\n\u003c/code\u003e\u003c/pre\u003e\u003cul\u003e\u003cli\u003eThe \u003cem\u003eversion\u003c/em\u003e (\u003ccode\u003eHTTP/1.1\u003c/code\u003e) indicates the version of the HTTP protocol.\u003c/li\u003e\u003cli\u003eThe \u003cem\u003estatus code\u003c/em\u003e (\u003ccode\u003e200\u003c/code\u003e) tells whether the request was successful or not, and why (there are many status codes for \u003ca href=\"https://developer.mozilla.org/en-US/docs/Web/HTTP/Status\"\u003edifferent situations\u003c/a\u003e).\u003c/li\u003e\u003cli\u003eThe \u003cem\u003estatus message\u003c/em\u003e is a human-readable description of the status code. HTTP/2 does not have it.\u003c/li\u003e\u003c/ul\u003e\u003col start=\"2\"\u003e\u003cli\u003eResponse headers:\u003c/li\u003e\u003c/ol\u003e\u003cpre tabindex=\"0\"\u003e\u003ccode\u003edate: Mon, 28 Aug 2023 07:51:49 GMT\ncontent-type: application/json\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eSimilar to request headers, these provide useful information about the response to the client.\u003c/p\u003e\u003col start=\"3\"\u003e\u003cli\u003eResponse body:\u003c/li\u003e\u003c/ol\u003e\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e{\n    \u0026#34;message\u0026#34;: \u0026#34;Hi!\u0026#34;\n}\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eThe actual data that the server sends to the client.\u003c/p\u003e\u003cp\u003eThere is much more to the HTTP protocol, but this basic knowledge is enough to cover most of API use cases. So let\u0026#39;s move on.\u003c/p\u003e\u003ch2 id=\"using-http-to-document-api-usage\"\u003eUsing HTTP to document API usage\u003c/h2\u003e\u003cp\u003eWe are going to take an HTTP request:\u003c/p\u003e\u003cpre tabindex=\"0\"\u003e\u003ccode\u003ePOST /anything/chat HTTP/1.1\nhost: httpbingo.org\ncontent-type: application/json\nuser-agent: curl/7.87.0\n\n{\n    \u0026#34;message\u0026#34;: \u0026#34;Hello!\u0026#34;\n}\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eAnd modify it just a little bit:\u003c/p\u003e\u003cul\u003e\u003cli\u003einclude the full URL in the request line instead of the path;\u003c/li\u003e\u003cli\u003eremove the protocol version.\u003c/li\u003e\u003c/ul\u003e\u003cpre tabindex=\"0\"\u003e\u003ccode\u003ePOST http://httpbingo.org/anything/chat\ncontent-type: application/json\n\n{\n    \u0026#34;message\u0026#34;: \u0026#34;Hello!\u0026#34;\n}\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eThis format is perfect for API usage examples. It\u0026#39;s concise and readable, yet formal enough to be executed programmatically (directly from the documentation, as we\u0026#39;ll see shortly).\u003c/p\u003e\u003ch2 id=\"writing-an-interactive-api-guide\"\u003eWriting an interactive API guide\u003c/h2\u003e\u003cp\u003eInstead of telling you how to write an interactive API tutorial, I\u0026#39;m going to show you one. We\u0026#39;ll use \u003ca href=\"https://docs.github.com/en/rest/gists/gists\"\u003eGists API\u003c/a\u003e as an example. It\u0026#39;s a compact and useful GitHub service for storing code snippets (called \u0026#34;gists\u0026#34;).\u003c/p\u003e\u003cdiv class=\"row\"\u003e\u003cdiv class=\"col-xs-12 col-sm-10\"\u003e\u003cfigure\u003e\u003cimg alt=\"GitHub Gists\" src=\"gists.png\"/\u003e\u003cfigcaption class=\"align-center\"\u003eGists are quite handy when a full-blown Git repository is too much.\u003c/figcaption\u003e\u003c/figure\u003e\u003c/div\u003e\u003c/div\u003e\u003cp\u003eEven if you are not a GitHub user, you still have access to the Gists API.\u003c/p\u003e\u003ch3 id=\"reading-gists\"\u003eReading gists\u003c/h3\u003e\u003cp\u003eLet\u0026#39;s take a look at the \u003cstrong\u003epublic gists\u003c/strong\u003e of my pal Redowan (user \u003ccode\u003erednafi\u003c/code\u003e). The response can be quite chatty, so we\u0026#39;ll only select the 3 most recent (\u003ccode\u003eper_page = 3\u003c/code\u003e):\u003c/p\u003e\u003cpre tabindex=\"0\"\u003e\u003ccode\u003eGET https://api.github.com/users/rednafi/gists?per_page=3\naccept: application/json\n\u003c/code\u003e\u003c/pre\u003e\u003ccodapi-snippet engine=\"browser\" sandbox=\"fetch\" editor=\"basic\"\u003e\u003c/codapi-snippet\u003e\u003cp\u003eA family of non-standard \u003ccode\u003ex-ratelimit\u003c/code\u003e headers tell us how GitHub \u003cstrong\u003elimits\u003c/strong\u003e our requests:\u003c/p\u003e\u003cul\u003e\u003cli\u003eThere is a total number of \u003ccode\u003ex-ratelimit-limit\u003c/code\u003e requests available per hour.\u003c/li\u003e\u003cli\u003eWe\u0026#39;ve already used \u003ccode\u003ex-ratelimit-used\u003c/code\u003e requests.\u003c/li\u003e\u003cli\u003eSo there are \u003ccode\u003ex-ratelimit-remaining\u003c/code\u003e requests left.\u003c/li\u003e\u003c/ul\u003e\u003cp\u003eWe need to keep an eye on these to make sure we don\u0026#39;t exceed the quota.\u003c/p\u003e\u003cp\u003eWe can use a combination of \u003ccode\u003epage\u003c/code\u003e and \u003ccode\u003eper_page\u003c/code\u003e query parameters to select a \u003cstrong\u003eslice of gists\u003c/strong\u003e. For example, here are gists 10-15:\u003c/p\u003e\u003cpre tabindex=\"0\"\u003e\u003ccode\u003eGET https://api.github.com/users/rednafi/gists?page=3\u0026amp;per_page=5\naccept: application/json\n\u003c/code\u003e\u003c/pre\u003e\u003ccodapi-snippet engine=\"browser\" sandbox=\"fetch\" editor=\"basic\"\u003e\u003c/codapi-snippet\u003e\u003cp\u003eNote that GitHub provides navigation links in the \u003ccode\u003elink\u003c/code\u003e header:\u003c/p\u003e\u003cpre tabindex=\"0\"\u003e\u003ccode\u003elink:\n    \u0026lt;https://api.github.com/user/30027932/gists?page=2\u0026amp;per_page=5\u0026gt;; rel=\u0026#34;prev\u0026#34;,\n    \u0026lt;https://api.github.com/user/30027932/gists?page=4\u0026amp;per_page=5\u0026gt;; rel=\u0026#34;next\u0026#34;,\n    \u0026lt;https://api.github.com/user/30027932/gists?page=7\u0026amp;per_page=5\u0026gt;; rel=\u0026#34;last\u0026#34;,\n    \u0026lt;https://api.github.com/user/30027932/gists?page=1\u0026amp;per_page=5\u0026gt;; rel=\u0026#34;first\u0026#34;\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eThat\u0026#39;s thoughtful of them!\u003c/p\u003e\u003cp\u003eOkay, now let\u0026#39;s take a look at the \u003cstrong\u003especific gist\u003c/strong\u003e with id \u003ccode\u003e88242fd822603290255877e396664ba5\u003c/code\u003e (this one is mine; let\u0026#39;s not bother Redowan anymore):\u003c/p\u003e\u003cpre tabindex=\"0\"\u003e\u003ccode\u003eGET https://api.github.com/gists/88242fd822603290255877e396664ba5\naccept: application/json\n\u003c/code\u003e\u003c/pre\u003e\u003ccodapi-snippet engine=\"browser\" sandbox=\"fetch\" editor=\"basic\"\u003e\u003c/codapi-snippet\u003e\u003cp\u003eWe can see that there is a \u003ccode\u003egreet.py\u003c/code\u003e file written in the Python \u003ccode\u003elanguage\u003c/code\u003e with a certain \u003ccode\u003econtent\u003c/code\u003e:\u003c/p\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"\u003e\u003ccode class=\"language-python\" data-lang=\"python\"\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#a90d91\"\u003eclass\u003c/span\u003e \u003cspan style=\"color:#3f6e75\"\u003eGreeter\u003c/span\u003e:\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#a90d91\"\u003edef\u003c/span\u003e \u003cspan style=\"color:#000\"\u003e__init__\u003c/span\u003e(\u003cspan style=\"color:#5b269a\"\u003eself\u003c/span\u003e, \u003cspan style=\"color:#000\"\u003egreeting\u003c/span\u003e):\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e        \u003cspan style=\"color:#5b269a\"\u003eself\u003c/span\u003e\u003cspan style=\"color:#000\"\u003e.\u003c/span\u003e\u003cspan style=\"color:#000\"\u003egreeting\u003c/span\u003e \u003cspan style=\"color:#000\"\u003e=\u003c/span\u003e \u003cspan style=\"color:#000\"\u003egreeting\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#a90d91\"\u003edef\u003c/span\u003e \u003cspan style=\"color:#000\"\u003egreet\u003c/span\u003e(\u003cspan style=\"color:#5b269a\"\u003eself\u003c/span\u003e, \u003cspan style=\"color:#000\"\u003ewho\u003c/span\u003e):\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e        \u003cspan style=\"color:#a90d91\"\u003eprint\u003c/span\u003e(\u003cspan style=\"color:#c41a16\"\u003ef\u003c/span\u003e\u003cspan style=\"color:#c41a16\"\u003e\u0026#34;\u003c/span\u003e\u003cspan style=\"color:#c41a16\"\u003e{\u003c/span\u003e\u003cspan style=\"color:#5b269a\"\u003eself\u003c/span\u003e\u003cspan style=\"color:#000\"\u003e.\u003c/span\u003e\u003cspan style=\"color:#000\"\u003egreeting\u003c/span\u003e\u003cspan style=\"color:#c41a16\"\u003e}\u003c/span\u003e\u003cspan style=\"color:#c41a16\"\u003e, \u003c/span\u003e\u003cspan style=\"color:#c41a16\"\u003e{\u003c/span\u003e\u003cspan style=\"color:#000\"\u003ewho\u003c/span\u003e\u003cspan style=\"color:#c41a16\"\u003e}\u003c/span\u003e\u003cspan style=\"color:#c41a16\"\u003e!\u0026#34;\u003c/span\u003e)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#000\"\u003egr\u003c/span\u003e \u003cspan style=\"color:#000\"\u003e=\u003c/span\u003e \u003cspan style=\"color:#000\"\u003eGreeter\u003c/span\u003e(\u003cspan style=\"color:#c41a16\"\u003e\u0026#34;Hello\u0026#34;\u003c/span\u003e)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#000\"\u003egr\u003c/span\u003e\u003cspan style=\"color:#000\"\u003e.\u003c/span\u003e\u003cspan style=\"color:#000\"\u003egreet\u003c/span\u003e(\u003cspan style=\"color:#c41a16\"\u003e\u0026#34;world\u0026#34;\u003c/span\u003e)\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ccodapi-snippet sandbox=\"python\" editor=\"basic\"\u003e\u003c/codapi-snippet\u003e\u003cp\u003e\u003cem\u003e(yep, you can also create interactive Python examples!)\u003c/em\u003e\u003c/p\u003e\u003cp\u003eInterestingly, the gist has a \u003ccode\u003ehistory\u003c/code\u003e. It appears that every time you edit a gist, GitHub creates a new version, while also keeping previous versions.\u003c/p\u003e\u003cp\u003eLet\u0026#39;s get the \u003cstrong\u003eearliest revision\u003c/strong\u003e, which has a \u003ccode\u003eversion\u003c/code\u003e = \u003ccode\u003e4c10d27cfb163d654745f1d72f2c7ce14225b83b\u003c/code\u003e (a bit long, I know):\u003c/p\u003e\u003cpre tabindex=\"0\"\u003e\u003ccode\u003eGET https://api.github.com/gists/88242fd822603290255877e396664ba5/4c10d27cfb163d654745f1d72f2c7ce14225b83b\naccept: application/json\n\u003c/code\u003e\u003c/pre\u003e\u003ccodapi-snippet engine=\"browser\" sandbox=\"fetch\" editor=\"basic\"\u003e\u003c/codapi-snippet\u003e\u003cp\u003eThe code in the gist was much simpler back then:\u003c/p\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"\u003e\u003ccode class=\"language-python\" data-lang=\"python\"\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#000\"\u003emsg\u003c/span\u003e \u003cspan style=\"color:#000\"\u003e=\u003c/span\u003e \u003cspan style=\"color:#c41a16\"\u003e\u0026#34;Hello, world!\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#a90d91\"\u003eprint\u003c/span\u003e(\u003cspan style=\"color:#000\"\u003emsg\u003c/span\u003e)\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ccodapi-snippet sandbox=\"python\" editor=\"basic\"\u003e\u003c/codapi-snippet\u003e\u003ch3 id=\"modifying-gists\"\u003eModifying gists\u003c/h3\u003e\u003cp\u003eOkay, so we know how to list gists for a user, how to get a specific gist, and even how to get a specific revision. Now let\u0026#39;s \u003cstrong\u003ecreate a new gist\u003c/strong\u003e!\u003c/p\u003e\u003cpre tabindex=\"0\"\u003e\u003ccode\u003ePOST https://api.github.com/gists\ncontent-type: application/json\naccept: application/json\n\n{\n    \u0026#34;description\u0026#34;: \u0026#34;Greetings in Markdown\u0026#34;,\n    \u0026#34;public\u0026#34;: true,\n    \u0026#34;files\u0026#34;:{\n        \u0026#34;README.md\u0026#34;:{\n            \u0026#34;content\u0026#34;:\u0026#34;Hello, world!\u0026#34;\n        }\n    }\n}\n\u003c/code\u003e\u003c/pre\u003e\u003ccodapi-snippet engine=\"browser\" sandbox=\"fetch\" editor=\"basic\"\u003e\u003c/codapi-snippet\u003e\u003cp\u003eWhat\u0026#39;s that? We have a \u003ccode\u003e401 Unauthorized\u003c/code\u003e error. The response body explains: \u0026#34;requires authentication\u0026#34; and even provides a link to the documentation (oh, I just love GitHub APIs).\u003c/p\u003e\u003cp\u003eUnderstandably, GitHub does not allow anonymous users to create new gists. We have to authenticate with an API token.\u003c/p\u003e\u003cblockquote\u003e\u003cp\u003eIf you want the following examples to work, enter your API token in the field below. You can create one with a \u0026#39;gist\u0026#39; scope in the \u003ca href=\"https://github.com/settings/tokens\"\u003eGitHub settings\u003c/a\u003e.\u003c/p\u003e\u003cp\u003eAfter you enter the token below, it will be stored locally in the browser and will not be sent anywhere (except to the GitHub API when you click the Run button).\u003c/p\u003e\u003c/blockquote\u003e\u003cform id=\"token-form\"\u003e\u003cp\u003e\u003cinput name=\"token\" type=\"text\" placeholder=\"API token\" style=\"width:100%\"/\u003e\u003c/p\u003e\u003cp\u003e\u003cbutton\u003eSave\u003c/button\u003e\u003c/p\u003e\u003c/form\u003e\u003cbr/\u003e\u003cp\u003eLet\u0026#39;s try again, this time with an \u003ccode\u003eauthorization\u003c/code\u003e header.\u003c/p\u003e\u003cp\u003eNote the \u003ccode\u003epublic\u003c/code\u003e parameter. The service supports \u0026#34;secret\u0026#34; gists (\u003ccode\u003epublic = false\u003c/code\u003e), but it\u0026#39;s the \u0026#34;security by obscurity\u0026#34; type of secrecy. Secret gists do not show up in the \u0026#34;GET gists\u0026#34; API method, but they are still accessible by id, even by anonymous users.\u003c/p\u003e\u003cpre tabindex=\"0\"\u003e\u003ccode class=\"language-authenticated\" data-lang=\"authenticated\"\u003ePOST https://api.github.com/gists\ncontent-type: application/json\naccept: application/json\nauthorization: bearer {token}\n\n{\n    \u0026#34;description\u0026#34;: \u0026#34;Greetings in Markdown\u0026#34;,\n    \u0026#34;public\u0026#34;: true,\n    \u0026#34;files\u0026#34;:{\n        \u0026#34;README.md\u0026#34;:{\n            \u0026#34;content\u0026#34;:\u0026#34;Hello, world!\u0026#34;\n        }\n    }\n}\n\u003c/code\u003e\u003c/pre\u003e\u003ccodapi-snippet engine=\"browser\" sandbox=\"fetch\" editor=\"basic\"\u003e\u003c/codapi-snippet\u003e\u003cdetails\u003e\u003csummary\u003eI don\u0026#39;t have a token, just show me the results\u003c/summary\u003e\u003cpre\u003e\u003ccode\u003eHTTP/1.1 201 \ncache-control: private, max-age=60, s-maxage=60\ncontent-length: 3758\ncontent-type: application/json; charset=utf-8\netag: \u0026#34;819f6b4f728843abcb50ad63da200a4c110245585b3eb1c0f59a5ebe86c8ecf5\u0026#34;\nlocation: https://api.github.com/gists/b17474320a629af38255c0a6efbc72b9\nx-accepted-oauth-scopes: \nx-github-media-type: github.v3\nx-github-request-id: E8B5:8EDA:511F73:51AC33:64EE0266\nx-oauth-scopes: gist\nx-ratelimit-limit: 5000\nx-ratelimit-remaining: 4997\nx-ratelimit-reset: 1693323114\nx-ratelimit-resource: core\nx-ratelimit-used: 3\n\n{\n  \u0026#34;url\u0026#34;: \u0026#34;https://api.github.com/gists/b17474320a629af38255c0a6efbc72b9\u0026#34;,\n  \u0026#34;forks_url\u0026#34;: \u0026#34;https://api.github.com/gists/b17474320a629af38255c0a6efbc72b9/forks\u0026#34;,\n  \u0026#34;commits_url\u0026#34;: \u0026#34;https://api.github.com/gists/b17474320a629af38255c0a6efbc72b9/commits\u0026#34;,\n  \u0026#34;id\u0026#34;: \u0026#34;b17474320a629af38255c0a6efbc72b9\u0026#34;,\n  \u0026#34;node_id\u0026#34;: \u0026#34;G_kwDOACz0htoAIGIxNzQ3NDMyMGE2MjlhZjM4MjU1YzBhNmVmYmM3MmI5\u0026#34;,\n  \u0026#34;git_pull_url\u0026#34;: \u0026#34;https://gist.github.com/b17474320a629af38255c0a6efbc72b9.git\u0026#34;,\n  \u0026#34;git_push_url\u0026#34;: \u0026#34;https://gist.github.com/b17474320a629af38255c0a6efbc72b9.git\u0026#34;,\n  \u0026#34;html_url\u0026#34;: \u0026#34;https://gist.github.com/nalgeon/b17474320a629af38255c0a6efbc72b9\u0026#34;,\n  \u0026#34;files\u0026#34;: {\n    \u0026#34;README.md\u0026#34;: {\n      \u0026#34;filename\u0026#34;: \u0026#34;README.md\u0026#34;,\n      \u0026#34;type\u0026#34;: \u0026#34;text/markdown\u0026#34;,\n      \u0026#34;language\u0026#34;: \u0026#34;Markdown\u0026#34;,\n      \u0026#34;raw_url\u0026#34;: \u0026#34;https://gist.githubusercontent.com/nalgeon/b17474320a629af38255c0a6efbc72b9/raw/5dd01c177f5d7d1be5346a5bc18a569a7410c2ef/README.md\u0026#34;,\n      \u0026#34;size\u0026#34;: 13,\n      \u0026#34;truncated\u0026#34;: false,\n      \u0026#34;content\u0026#34;: \u0026#34;Hello, world!\u0026#34;\n    }\n  },\n  ...\n}\u003c/code\u003e\u003c/pre\u003e\u003c/details\u003e\u003cp\u003eHTTP status \u003ccode\u003e201 Created\u003c/code\u003e means that a new gist has been created as a result of our request.\u003c/p\u003e\u003cp\u003eOkay, now we can \u003cstrong\u003eupdate a gist\u003c/strong\u003e using its \u003ccode\u003eid\u003c/code\u003e (don\u0026#39;t forget to replace the \u003ccode\u003e{gist_id}\u003c/code\u003e in the request line with the actual \u003ccode\u003eid\u003c/code\u003e value):\u003c/p\u003e\u003cpre tabindex=\"0\"\u003e\u003ccode class=\"language-authenticated\" data-lang=\"authenticated\"\u003ePATCH https://api.github.com/gists/{gist_id}\ncontent-type: application/json\naccept: application/json\nauthorization: bearer {token}\n\n{\n    \u0026#34;description\u0026#34;: \u0026#34;Greetings in Markdown\u0026#34;,\n    \u0026#34;public\u0026#34;: true,\n    \u0026#34;files\u0026#34;:{\n        \u0026#34;README.md\u0026#34;:{\n            \u0026#34;content\u0026#34;:\u0026#34;¡Hola, mundo!\u0026#34;\n        }\n    }\n}\n\u003c/code\u003e\u003c/pre\u003e\u003ccodapi-snippet engine=\"browser\" sandbox=\"fetch\" editor=\"basic\"\u003e\u003c/codapi-snippet\u003e\u003cdetails\u003e\u003csummary\u003eI don\u0026#39;t have a token, just show me the results\u003c/summary\u003e\u003cpre\u003e\u003ccode\u003eHTTP/1.1 200 \ncache-control: private, max-age=60, s-maxage=60\ncontent-type: application/json; charset=utf-8\netag: W/\u0026#34;989eaec7cdb50ba6441e77ea2defba257b98a535f26c2ba6062f152ceffb2d77\u0026#34;\nx-accepted-oauth-scopes: \nx-github-media-type: github.v3\nx-github-request-id: E8B5:8EDA:5188AA:52163F:64EE027F\nx-oauth-scopes: gist\nx-ratelimit-limit: 100\nx-ratelimit-remaining: 98\nx-ratelimit-reset: 1693323129\nx-ratelimit-resource: gist_update\nx-ratelimit-used: 2\n\n{\n  \u0026#34;url\u0026#34;: \u0026#34;https://api.github.com/gists/b17474320a629af38255c0a6efbc72b9\u0026#34;,\n  \u0026#34;forks_url\u0026#34;: \u0026#34;https://api.github.com/gists/b17474320a629af38255c0a6efbc72b9/forks\u0026#34;,\n  \u0026#34;commits_url\u0026#34;: \u0026#34;https://api.github.com/gists/b17474320a629af38255c0a6efbc72b9/commits\u0026#34;,\n  \u0026#34;id\u0026#34;: \u0026#34;b17474320a629af38255c0a6efbc72b9\u0026#34;,\n  \u0026#34;node_id\u0026#34;: \u0026#34;G_kwDOACz0htoAIGIxNzQ3NDMyMGE2MjlhZjM4MjU1YzBhNmVmYmM3MmI5\u0026#34;,\n  \u0026#34;git_pull_url\u0026#34;: \u0026#34;https://gist.github.com/b17474320a629af38255c0a6efbc72b9.git\u0026#34;,\n  \u0026#34;git_push_url\u0026#34;: \u0026#34;https://gist.github.com/b17474320a629af38255c0a6efbc72b9.git\u0026#34;,\n  \u0026#34;html_url\u0026#34;: \u0026#34;https://gist.github.com/nalgeon/b17474320a629af38255c0a6efbc72b9\u0026#34;,\n  \u0026#34;files\u0026#34;: {\n    \u0026#34;README.md\u0026#34;: {\n      \u0026#34;filename\u0026#34;: \u0026#34;README.md\u0026#34;,\n      \u0026#34;type\u0026#34;: \u0026#34;text/markdown\u0026#34;,\n      \u0026#34;language\u0026#34;: \u0026#34;Markdown\u0026#34;,\n      \u0026#34;raw_url\u0026#34;: \u0026#34;https://gist.githubusercontent.com/nalgeon/b17474320a629af38255c0a6efbc72b9/raw/95975f3d0bac707ce4355dfc4a7955310d212fac/README.md\u0026#34;,\n      \u0026#34;size\u0026#34;: 14,\n      \u0026#34;truncated\u0026#34;: false,\n      \u0026#34;content\u0026#34;: \u0026#34;¡Hola, mundo!\u0026#34;\n    }\n  },\n  ...\n}\u003c/code\u003e\u003c/pre\u003e\u003c/details\u003e\u003cp\u003eIt now greets us in Spanish 🇪🇸\u003c/p\u003e\u003cp\u003eVery good. Finally, let\u0026#39;s \u003cstrong\u003edelete a gist\u003c/strong\u003e:\u003c/p\u003e\u003cpre tabindex=\"0\"\u003e\u003ccode class=\"language-authenticated\" data-lang=\"authenticated\"\u003eDELETE https://api.github.com/gists/{gist_id}\naccept: application/json\nauthorization: bearer {token}\n\u003c/code\u003e\u003c/pre\u003e\u003ccodapi-snippet engine=\"browser\" sandbox=\"fetch\" editor=\"basic\"\u003e\u003c/codapi-snippet\u003e\u003cdetails\u003e\u003csummary\u003eI don\u0026#39;t have a token, just show me the results\u003c/summary\u003e\u003cpre\u003e\u003ccode\u003eHTTP/1.1 204 \nx-accepted-oauth-scopes: \nx-github-media-type: github.v3\nx-github-request-id: E8B5:8EDA:51E584:5273CC:64EE027F\nx-oauth-scopes: gist\nx-ratelimit-limit: 5000\nx-ratelimit-remaining: 4996\nx-ratelimit-reset: 1693323114\nx-ratelimit-resource: core\nx-ratelimit-used: 4\u003c/code\u003e\u003c/pre\u003e\u003c/details\u003e\u003cp\u003eHTTP status \u003ccode\u003e204 No Content\u003c/code\u003e means we deleted the gist, so GitHub has nothing more to tell us about it. It\u0026#39;s a little sad to see it go, but we can always make another one, right?\u003c/p\u003e\u003cp\u003eThe Gists API has other useful features, but they are beyond the scope of this tutorial. Here are the functions we\u0026#39;ve covered:\u003c/p\u003e\u003cul\u003e\u003cli\u003eList user gists.\u003c/li\u003e\u003cli\u003eGet a specific gist, or a specific revision of a gist.\u003c/li\u003e\u003cli\u003eCreate a new gist.\u003c/li\u003e\u003cli\u003eUpdate an existing gist.\u003c/li\u003e\u003cli\u003eDelete a gist.\u003c/li\u003e\u003c/ul\u003e\u003cp\u003eNow try managing your gists! You can always use this article as a playground.\u003c/p\u003e\u003ch2 id=\"implementation\"\u003eImplementation\u003c/h2\u003e\u003cp\u003eTo run the API examples as we did in the previous section, you\u0026#39;ll need a bit of JavaScript that does the following:\u003c/p\u003e\u003col\u003e\u003cli\u003eParses the HTTP request example.\u003c/li\u003e\u003cli\u003eCalls the API.\u003c/li\u003e\u003cli\u003eDisplays the result.\u003c/li\u003e\u003c/ol\u003e\u003cdiv class=\"row\"\u003e\u003cdiv class=\"col-xs-12 col-sm-10\"\u003e\u003cfigure\u003e\u003cimg alt=\"Fetch API playground\" src=\"playground.png\"/\u003e\u003cfigcaption class=\"align-center\"\u003eIt\u0026#39;s always nice when a playground doesn\u0026#39;t need a server.\u003c/figcaption\u003e\u003c/figure\u003e\u003c/div\u003e\u003c/div\u003e\u003cp\u003eSince we\u0026#39;ve limited ourselves to a small subset of HTTP request capabilities, parsing is fairly easy:\u003c/p\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"\u003e\u003ccode class=\"language-js\" data-lang=\"js\"\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#177500\"\u003e// parse parses the request specification.\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#177500\"\u003e\u003c/span\u003e\u003cspan style=\"color:#a90d91\"\u003efunction\u003c/span\u003e \u003cspan style=\"color:#000\"\u003eparse\u003c/span\u003e(\u003cspan style=\"color:#000\"\u003etext\u003c/span\u003e) {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#a90d91\"\u003econst\u003c/span\u003e \u003cspan style=\"color:#000\"\u003elines\u003c/span\u003e \u003cspan style=\"color:#000\"\u003e=\u003c/span\u003e \u003cspan style=\"color:#000\"\u003etext\u003c/span\u003e.\u003cspan style=\"color:#000\"\u003esplit\u003c/span\u003e(\u003cspan style=\"color:#c41a16\"\u003e\u0026#34;\\n\u0026#34;\u003c/span\u003e);\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#a90d91\"\u003elet\u003c/span\u003e \u003cspan style=\"color:#000\"\u003elineIdx\u003c/span\u003e \u003cspan style=\"color:#000\"\u003e=\u003c/span\u003e \u003cspan style=\"color:#1c01ce\"\u003e0\u003c/span\u003e;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#177500\"\u003e// parse method and URL\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#177500\"\u003e\u003c/span\u003e    \u003cspan style=\"color:#a90d91\"\u003econst\u003c/span\u003e \u003cspan style=\"color:#000\"\u003emethodUrl\u003c/span\u003e \u003cspan style=\"color:#000\"\u003e=\u003c/span\u003e \u003cspan style=\"color:#000\"\u003elines\u003c/span\u003e[\u003cspan style=\"color:#1c01ce\"\u003e0\u003c/span\u003e].\u003cspan style=\"color:#000\"\u003esplit\u003c/span\u003e(\u003cspan style=\"color:#c41a16\"\u003e\u0026#34; \u0026#34;\u003c/span\u003e).\u003cspan style=\"color:#000\"\u003efilter\u003c/span\u003e((\u003cspan style=\"color:#000\"\u003es\u003c/span\u003e) =\u0026gt; \u003cspan style=\"color:#000\"\u003es\u003c/span\u003e);\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#a90d91\"\u003econst\u003c/span\u003e [\u003cspan style=\"color:#000\"\u003emethod\u003c/span\u003e, \u003cspan style=\"color:#000\"\u003eurl\u003c/span\u003e] \u003cspan style=\"color:#000\"\u003e=\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e        \u003cspan style=\"color:#000\"\u003emethodUrl\u003c/span\u003e.\u003cspan style=\"color:#000\"\u003elength\u003c/span\u003e \u003cspan style=\"color:#000\"\u003e\u0026gt;=\u003c/span\u003e \u003cspan style=\"color:#1c01ce\"\u003e2\u003c/span\u003e \u003cspan style=\"color:#000\"\u003e?\u003c/span\u003e \u003cspan style=\"color:#000\"\u003emethodUrl\u003c/span\u003e \u003cspan style=\"color:#000\"\u003e:\u003c/span\u003e [\u003cspan style=\"color:#c41a16\"\u003e\u0026#34;GET\u0026#34;\u003c/span\u003e, \u003cspan style=\"color:#000\"\u003emethodUrl\u003c/span\u003e[\u003cspan style=\"color:#1c01ce\"\u003e0\u003c/span\u003e]];\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#000\"\u003elineIdx\u003c/span\u003e \u003cspan style=\"color:#000\"\u003e+=\u003c/span\u003e \u003cspan style=\"color:#1c01ce\"\u003e1\u003c/span\u003e;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#177500\"\u003e// parse headers\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#177500\"\u003e\u003c/span\u003e    \u003cspan style=\"color:#a90d91\"\u003econst\u003c/span\u003e \u003cspan style=\"color:#000\"\u003eheaders\u003c/span\u003e \u003cspan style=\"color:#000\"\u003e=\u003c/span\u003e {};\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#a90d91\"\u003efor\u003c/span\u003e (\u003cspan style=\"color:#a90d91\"\u003elet\u003c/span\u003e \u003cspan style=\"color:#000\"\u003ei\u003c/span\u003e \u003cspan style=\"color:#000\"\u003e=\u003c/span\u003e \u003cspan style=\"color:#000\"\u003elineIdx\u003c/span\u003e; \u003cspan style=\"color:#000\"\u003ei\u003c/span\u003e \u003cspan style=\"color:#000\"\u003e\u0026lt;\u003c/span\u003e \u003cspan style=\"color:#000\"\u003elines\u003c/span\u003e.\u003cspan style=\"color:#000\"\u003elength\u003c/span\u003e; \u003cspan style=\"color:#000\"\u003ei\u003c/span\u003e\u003cspan style=\"color:#000\"\u003e++\u003c/span\u003e) {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e        \u003cspan style=\"color:#a90d91\"\u003econst\u003c/span\u003e \u003cspan style=\"color:#000\"\u003eline\u003c/span\u003e \u003cspan style=\"color:#000\"\u003e=\u003c/span\u003e \u003cspan style=\"color:#000\"\u003elines\u003c/span\u003e[\u003cspan style=\"color:#000\"\u003ei\u003c/span\u003e].\u003cspan style=\"color:#000\"\u003etrim\u003c/span\u003e();\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e        \u003cspan style=\"color:#a90d91\"\u003eif\u003c/span\u003e (\u003cspan style=\"color:#000\"\u003eline\u003c/span\u003e \u003cspan style=\"color:#000\"\u003e===\u003c/span\u003e \u003cspan style=\"color:#c41a16\"\u003e\u0026#34;\u0026#34;\u003c/span\u003e) {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e            \u003cspan style=\"color:#a90d91\"\u003ebreak\u003c/span\u003e;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e        }\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e        \u003cspan style=\"color:#a90d91\"\u003econst\u003c/span\u003e [\u003cspan style=\"color:#000\"\u003eheaderName\u003c/span\u003e, \u003cspan style=\"color:#000\"\u003eheaderValue\u003c/span\u003e] \u003cspan style=\"color:#000\"\u003e=\u003c/span\u003e \u003cspan style=\"color:#000\"\u003eline\u003c/span\u003e.\u003cspan style=\"color:#000\"\u003esplit\u003c/span\u003e(\u003cspan style=\"color:#c41a16\"\u003e\u0026#34;:\u0026#34;\u003c/span\u003e);\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e        \u003cspan style=\"color:#000\"\u003eheaders\u003c/span\u003e[\u003cspan style=\"color:#000\"\u003eheaderName\u003c/span\u003e.\u003cspan style=\"color:#000\"\u003etrim\u003c/span\u003e()] \u003cspan style=\"color:#000\"\u003e=\u003c/span\u003e \u003cspan style=\"color:#000\"\u003eheaderValue\u003c/span\u003e.\u003cspan style=\"color:#000\"\u003etrim\u003c/span\u003e();\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e        \u003cspan style=\"color:#000\"\u003elineIdx\u003c/span\u003e \u003cspan style=\"color:#000\"\u003e+=\u003c/span\u003e \u003cspan style=\"color:#1c01ce\"\u003e1\u003c/span\u003e;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e    }\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#177500\"\u003e// parse body\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#177500\"\u003e\u003c/span\u003e    \u003cspan style=\"color:#a90d91\"\u003econst\u003c/span\u003e \u003cspan style=\"color:#000\"\u003ebody\u003c/span\u003e \u003cspan style=\"color:#000\"\u003e=\u003c/span\u003e \u003cspan style=\"color:#000\"\u003elines\u003c/span\u003e.\u003cspan style=\"color:#000\"\u003eslice\u003c/span\u003e(\u003cspan style=\"color:#000\"\u003elineIdx\u003c/span\u003e \u003cspan style=\"color:#000\"\u003e+\u003c/span\u003e \u003cspan style=\"color:#1c01ce\"\u003e1\u003c/span\u003e).\u003cspan style=\"color:#000\"\u003ejoin\u003c/span\u003e(\u003cspan style=\"color:#c41a16\"\u003e\u0026#34;\\n\u0026#34;\u003c/span\u003e);\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#a90d91\"\u003ereturn\u003c/span\u003e { \u003cspan style=\"color:#000\"\u003emethod\u003c/span\u003e, \u003cspan style=\"color:#000\"\u003eurl\u003c/span\u003e, \u003cspan style=\"color:#000\"\u003eheaders\u003c/span\u003e, \u003cspan style=\"color:#000\"\u003ebody\u003c/span\u003e };\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e}\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#a90d91\"\u003econst\u003c/span\u003e \u003cspan style=\"color:#000\"\u003espec\u003c/span\u003e \u003cspan style=\"color:#000\"\u003e=\u003c/span\u003e \u003cspan style=\"color:#000\"\u003eparse\u003c/span\u003e(\u003cspan style=\"color:#c41a16\"\u003e`GET https://httpbingo.org/uuid`\u003c/span\u003e);\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#000\"\u003econsole\u003c/span\u003e.\u003cspan style=\"color:#000\"\u003elog\u003c/span\u003e(\u003cspan style=\"color:#000\"\u003eJSON\u003c/span\u003e.\u003cspan style=\"color:#000\"\u003estringify\u003c/span\u003e(\u003cspan style=\"color:#000\"\u003espec\u003c/span\u003e, \u003cspan style=\"color:#a90d91\"\u003enull\u003c/span\u003e, \u003cspan style=\"color:#1c01ce\"\u003e2\u003c/span\u003e));\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ccodapi-snippet engine=\"browser\" sandbox=\"javascript\" editor=\"basic\"\u003e\u003c/codapi-snippet\u003e\u003cp\u003eCalling the API and displaying the results is trivial — just use the Fetch API and display the result as plain text:\u003c/p\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"\u003e\u003ccode class=\"language-js\" data-lang=\"js\"\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#177500\"\u003e// execCode sends an HTTP request according to the spec\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#177500\"\u003e// and returns the response as text with status, headers and body.\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#177500\"\u003e\u003c/span\u003e\u003cspan style=\"color:#a90d91\"\u003easync\u003c/span\u003e \u003cspan style=\"color:#a90d91\"\u003efunction\u003c/span\u003e \u003cspan style=\"color:#000\"\u003eexecCode\u003c/span\u003e(\u003cspan style=\"color:#000\"\u003espec\u003c/span\u003e) {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#a90d91\"\u003econst\u003c/span\u003e \u003cspan style=\"color:#000\"\u003eresp\u003c/span\u003e \u003cspan style=\"color:#000\"\u003e=\u003c/span\u003e \u003cspan style=\"color:#a90d91\"\u003eawait\u003c/span\u003e \u003cspan style=\"color:#000\"\u003esendRequest\u003c/span\u003e(\u003cspan style=\"color:#000\"\u003espec\u003c/span\u003e);\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#a90d91\"\u003econst\u003c/span\u003e \u003cspan style=\"color:#000\"\u003etext\u003c/span\u003e \u003cspan style=\"color:#000\"\u003e=\u003c/span\u003e \u003cspan style=\"color:#a90d91\"\u003eawait\u003c/span\u003e \u003cspan style=\"color:#000\"\u003eresponseText\u003c/span\u003e(\u003cspan style=\"color:#000\"\u003eresp\u003c/span\u003e);\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#a90d91\"\u003ereturn\u003c/span\u003e \u003cspan style=\"color:#000\"\u003etext\u003c/span\u003e;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e}\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#177500\"\u003e// sendRequest sends an HTTP request according to the spec.\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#177500\"\u003e\u003c/span\u003e\u003cspan style=\"color:#a90d91\"\u003easync\u003c/span\u003e \u003cspan style=\"color:#a90d91\"\u003efunction\u003c/span\u003e \u003cspan style=\"color:#000\"\u003esendRequest\u003c/span\u003e(\u003cspan style=\"color:#000\"\u003espec\u003c/span\u003e) {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#a90d91\"\u003econst\u003c/span\u003e \u003cspan style=\"color:#000\"\u003eoptions\u003c/span\u003e \u003cspan style=\"color:#000\"\u003e=\u003c/span\u003e {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e        \u003cspan style=\"color:#000\"\u003emethod\u003c/span\u003e\u003cspan style=\"color:#000\"\u003e:\u003c/span\u003e \u003cspan style=\"color:#000\"\u003espec\u003c/span\u003e.\u003cspan style=\"color:#000\"\u003emethod\u003c/span\u003e,\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e        \u003cspan style=\"color:#000\"\u003eheaders\u003c/span\u003e\u003cspan style=\"color:#000\"\u003e:\u003c/span\u003e \u003cspan style=\"color:#000\"\u003espec\u003c/span\u003e.\u003cspan style=\"color:#000\"\u003eheaders\u003c/span\u003e,\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e        \u003cspan style=\"color:#000\"\u003ebody\u003c/span\u003e\u003cspan style=\"color:#000\"\u003e:\u003c/span\u003e \u003cspan style=\"color:#000\"\u003espec\u003c/span\u003e.\u003cspan style=\"color:#000\"\u003ebody\u003c/span\u003e \u003cspan style=\"color:#000\"\u003e||\u003c/span\u003e \u003cspan style=\"color:#a90d91\"\u003eundefined\u003c/span\u003e,\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e    };\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#a90d91\"\u003ereturn\u003c/span\u003e \u003cspan style=\"color:#a90d91\"\u003eawait\u003c/span\u003e \u003cspan style=\"color:#000\"\u003efetch\u003c/span\u003e(\u003cspan style=\"color:#000\"\u003espec\u003c/span\u003e.\u003cspan style=\"color:#000\"\u003eurl\u003c/span\u003e, \u003cspan style=\"color:#000\"\u003eoptions\u003c/span\u003e);\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e}\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#177500\"\u003e// responseText returns the response as text\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#177500\"\u003e// with status, headers and body.\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#177500\"\u003e\u003c/span\u003e\u003cspan style=\"color:#a90d91\"\u003easync\u003c/span\u003e \u003cspan style=\"color:#a90d91\"\u003efunction\u003c/span\u003e \u003cspan style=\"color:#000\"\u003eresponseText\u003c/span\u003e(\u003cspan style=\"color:#000\"\u003eresp\u003c/span\u003e) {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#a90d91\"\u003econst\u003c/span\u003e \u003cspan style=\"color:#000\"\u003eversion\u003c/span\u003e \u003cspan style=\"color:#000\"\u003e=\u003c/span\u003e \u003cspan style=\"color:#c41a16\"\u003e\u0026#34;HTTP/1.1\u0026#34;\u003c/span\u003e;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#a90d91\"\u003econst\u003c/span\u003e \u003cspan style=\"color:#000\"\u003etext\u003c/span\u003e \u003cspan style=\"color:#000\"\u003e=\u003c/span\u003e \u003cspan style=\"color:#a90d91\"\u003eawait\u003c/span\u003e \u003cspan style=\"color:#000\"\u003eresp\u003c/span\u003e.\u003cspan style=\"color:#000\"\u003etext\u003c/span\u003e();\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#a90d91\"\u003econst\u003c/span\u003e \u003cspan style=\"color:#000\"\u003emessages\u003c/span\u003e \u003cspan style=\"color:#000\"\u003e=\u003c/span\u003e [\u003cspan style=\"color:#c41a16\"\u003e`\u003c/span\u003e\u003cspan style=\"color:#c41a16\"\u003e${\u003c/span\u003e\u003cspan style=\"color:#000\"\u003eversion\u003c/span\u003e\u003cspan style=\"color:#c41a16\"\u003e}\u003c/span\u003e\u003cspan style=\"color:#c41a16\"\u003e \u003c/span\u003e\u003cspan style=\"color:#c41a16\"\u003e${\u003c/span\u003e\u003cspan style=\"color:#000\"\u003eresp\u003c/span\u003e.\u003cspan style=\"color:#000\"\u003estatus\u003c/span\u003e\u003cspan style=\"color:#c41a16\"\u003e}\u003c/span\u003e\u003cspan style=\"color:#c41a16\"\u003e \u003c/span\u003e\u003cspan style=\"color:#c41a16\"\u003e${\u003c/span\u003e\u003cspan style=\"color:#000\"\u003eresp\u003c/span\u003e.\u003cspan style=\"color:#000\"\u003estatusText\u003c/span\u003e\u003cspan style=\"color:#c41a16\"\u003e}\u003c/span\u003e\u003cspan style=\"color:#c41a16\"\u003e`\u003c/span\u003e];\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#a90d91\"\u003efor\u003c/span\u003e (\u003cspan style=\"color:#a90d91\"\u003econst\u003c/span\u003e \u003cspan style=\"color:#000\"\u003ehdr\u003c/span\u003e \u003cspan style=\"color:#a90d91\"\u003eof\u003c/span\u003e \u003cspan style=\"color:#000\"\u003eresp\u003c/span\u003e.\u003cspan style=\"color:#000\"\u003eheaders\u003c/span\u003e.\u003cspan style=\"color:#000\"\u003eentries\u003c/span\u003e()) {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e        \u003cspan style=\"color:#000\"\u003emessages\u003c/span\u003e.\u003cspan style=\"color:#000\"\u003epush\u003c/span\u003e(\u003cspan style=\"color:#c41a16\"\u003e`\u003c/span\u003e\u003cspan style=\"color:#c41a16\"\u003e${\u003c/span\u003e\u003cspan style=\"color:#000\"\u003ehdr\u003c/span\u003e[\u003cspan style=\"color:#1c01ce\"\u003e0\u003c/span\u003e]\u003cspan style=\"color:#c41a16\"\u003e}\u003c/span\u003e\u003cspan style=\"color:#c41a16\"\u003e: \u003c/span\u003e\u003cspan style=\"color:#c41a16\"\u003e${\u003c/span\u003e\u003cspan style=\"color:#000\"\u003ehdr\u003c/span\u003e[\u003cspan style=\"color:#1c01ce\"\u003e1\u003c/span\u003e]\u003cspan style=\"color:#c41a16\"\u003e}\u003c/span\u003e\u003cspan style=\"color:#c41a16\"\u003e`\u003c/span\u003e);\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e    }\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#a90d91\"\u003eif\u003c/span\u003e (\u003cspan style=\"color:#000\"\u003etext\u003c/span\u003e) {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e        \u003cspan style=\"color:#000\"\u003emessages\u003c/span\u003e.\u003cspan style=\"color:#000\"\u003epush\u003c/span\u003e(\u003cspan style=\"color:#c41a16\"\u003e\u0026#34;\u0026#34;\u003c/span\u003e, \u003cspan style=\"color:#000\"\u003etext\u003c/span\u003e);\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e    }\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#a90d91\"\u003ereturn\u003c/span\u003e \u003cspan style=\"color:#000\"\u003emessages\u003c/span\u003e.\u003cspan style=\"color:#000\"\u003ejoin\u003c/span\u003e(\u003cspan style=\"color:#c41a16\"\u003e\u0026#34;\\n\u0026#34;\u003c/span\u003e);\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e}\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#a90d91\"\u003econst\u003c/span\u003e \u003cspan style=\"color:#000\"\u003espec\u003c/span\u003e \u003cspan style=\"color:#000\"\u003e=\u003c/span\u003e {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#000\"\u003emethod\u003c/span\u003e\u003cspan style=\"color:#000\"\u003e:\u003c/span\u003e \u003cspan style=\"color:#c41a16\"\u003e\u0026#34;GET\u0026#34;\u003c/span\u003e,\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#000\"\u003eurl\u003c/span\u003e\u003cspan style=\"color:#000\"\u003e:\u003c/span\u003e \u003cspan style=\"color:#c41a16\"\u003e\u0026#34;https://httpbingo.org/uuid\u0026#34;\u003c/span\u003e,\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e};\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#a90d91\"\u003econst\u003c/span\u003e \u003cspan style=\"color:#000\"\u003etext\u003c/span\u003e \u003cspan style=\"color:#000\"\u003e=\u003c/span\u003e \u003cspan style=\"color:#a90d91\"\u003eawait\u003c/span\u003e \u003cspan style=\"color:#000\"\u003eexecCode\u003c/span\u003e(\u003cspan style=\"color:#000\"\u003espec\u003c/span\u003e);\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#000\"\u003econsole\u003c/span\u003e.\u003cspan style=\"color:#000\"\u003elog\u003c/span\u003e(\u003cspan style=\"color:#000\"\u003etext\u003c/span\u003e);\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ccodapi-snippet engine=\"browser\" sandbox=\"javascript\" editor=\"basic\"\u003e\u003c/codapi-snippet\u003e\u003cp\u003eFetch API works in the browser, so there is no intermediate server involved. The only nuance is that the documentation must either be on the same domain as the API itself, or the API must allow cross-domain requests. But even if that\u0026#39;s not the case, you can always proxy the requests — it\u0026#39;s not too much work.\u003c/p\u003e\u003cp\u003eIf you want an out-of-the-box solution, I\u0026#39;ve written a simple library that supports both JavaScript and Fetch API playgrounds (and some others):\u003c/p\u003e\u003cp\u003e\u003ca href=\"https://github.com/nalgeon/codapi-js\"\u003e\u003cstrong\u003e\u003ccode\u003ecodapi-js\u003c/code\u003e\u003c/strong\u003e\u003c/a\u003e\u003c/p\u003e\u003cp\u003eIdeally, I\u0026#39;d like most documentation to be interactive. Not just API guides, but everything from algorithms (like \u003ca href=\"https://samwho.dev/hashing/\"\u003ehashing\u003c/a\u003e) to programming languages (like \u003ca href=\"https://antonz.org/go-1-21-builtins/\"\u003eGo\u003c/a\u003e or \u003ca href=\"https://antonz.org/trying-odin/\"\u003eOdin\u003c/a\u003e) to databases (like \u003ca href=\"https://antonz.org/sql-compare-neighbors/\"\u003eSQLite\u003c/a\u003e), frameworks and tools, and even individual packages.\u003c/p\u003e\u003cp\u003eAnd (shameless plug here!) I\u0026#39;m building a platform that allows just that — easily embeddable code playgrounds for documentation, online education, and fun. Check it out if you are interested:\u003c/p\u003e\u003cp\u003e\u003ca href=\"https://codapi.org/\"\u003e\u003cstrong\u003e\u003ccode\u003ecodapi\u003c/code\u003e\u003c/strong\u003e\u003c/a\u003e\u003c/p\u003e\u003cp\u003eAnd please try to write an interactive guide the next time you develop an API!\u003c/p\u003e\u003cstyle\u003ejson-viewer{--background-color:#f5f5f5;--string-color:#177500;--number-color:var(--color-text);--boolean-color:var(--color-text);--null-color:var(--color-text);--preview-color:var(--color-gray);--property-color:#a90d91;--highlight-color:#a90d91;line-height:1.35;font-size:inherit}\u003c/style\u003e\u003cscript defer=\"\" src=\"/modules/codapi/snippet.js\"\u003e\u003c/script\u003e\n\u003cscript defer=\"\" src=\"/modules/json-viewer/json-viewer.bundle.js\"\u003e\u003c/script\u003e\n\u003cscript defer=\"\" src=\"index.js\" type=\"module\"\u003e\u003c/script\u003e\u003cp\u003e\u003cem\u003e\u003ca href=\"/subscribe/\"\u003e\u003ci class=\"fas fa-star\"\u003e\u003c/i\u003e \u003cstrong\u003eSubscribe\u003c/strong\u003e\u003c/a\u003e\nto keep up with new posts.\u003c/em\u003e\u003c/p\u003e\u003c/div\u003e\u003c/div\u003e\u003cfooter class=\"post__footer\"\u003e\u003cdiv class=\"row\"\u003e\u003cdiv class=\"col-xs-12\"\u003e\u003cdiv class=\"post__date\"\u003e\u003ctime datetime=\"2023-08-30 12:00:00 +0000 UTC\"\u003e30 Aug, 2023\u003c/time\u003e\u003c/div\u003e\u003cdiv class=\"post__tags\"\u003e\u003ca href=\"/tags/software/\"\u003esoftware\u003c/a\u003e \u003c/div\u003e\u003c/div\u003e\u003c/div\u003e\u003c/footer\u003e\u003c/article\u003e",
  "Date": "2023-08-30T12:00:00Z",
  "Author": "Anton Zhiyanov"
}