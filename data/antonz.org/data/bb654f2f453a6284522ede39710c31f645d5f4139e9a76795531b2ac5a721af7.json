{
  "Source": "antonz.org",
  "Title": "What's new in SQLite 3.35",
  "Link": "https://antonz.org/sqlite-3-35/",
  "Content": "\u003carticle class=\"post\"\u003e\u003cdiv class=\"row\"\u003e\u003cdiv class=\"col-xs-12 col-md-10 article\"\u003e\u003cheader\u003e\u003ch1\u003eWhat\u0026#39;s new in SQLite 3.35\u003c/h1\u003e\u003c/header\u003e\u003cp\u003eSQLite developers often prefer to work on database internals. For an external observer nothing really changes. 2020 was a pleasant exception - SQLite received a bunch of nice features for ordinary users, such as generated columns, \u003ccode\u003eUPDATE FROM\u003c/code\u003e and fantastic \u003ccode\u003e.mode box\u003c/code\u003e in the shell.\u003c/p\u003e\u003cp\u003eThere\u0026#39;s every chance that 2021 will continue the tradition. Here\u0026#39;s what shipped in the 3.35 release today:\u003c/p\u003e\u003col\u003e\u003cli\u003eMath functions ‼️\u003c/li\u003e\u003cli\u003eColumn removal ❗\u003c/li\u003e\u003cli\u003e\u003ccode\u003eRETURNING\u003c/code\u003e processed rows for \u003ccode\u003eDELETE\u003c/code\u003e, \u003ccode\u003eINSERT\u003c/code\u003e and \u003ccode\u003eUPDATE\u003c/code\u003e.\u003c/li\u003e\u003cli\u003eMaterialized CTEs.\u003c/li\u003e\u003c/ol\u003e\u003cp\u003eHere are some details about each feature.\u003c/p\u003e\u003ch2 id=\"math-functions\"\u003eMath functions\u003c/h2\u003e\u003cp\u003eFor many years, users literally begged SQLite devs to add basic functions like \u003ccode\u003esqrt()\u003c/code\u003e, \u003ccode\u003elog()\u003c/code\u003e and \u003ccode\u003epow()\u003c/code\u003e. The answer was always about the same (not a direct quote):\u003c/p\u003e\u003cblockquote\u003e\u003cp\u003eSQLite is called \u0026#39;lite\u0026#39; for a reason. If you need functions, add them yourself.\u003c/p\u003e\u003c/blockquote\u003e\u003cp\u003eAn understandable position indeed. But refusing to add the square root? At the same time implementing window functions, recursive queries and other advanced SQL magic? Seriously?\u003c/p\u003e\u003cp\u003eMaybe SQLite developers prefer to focus on features that large customers are willing to pay for. Anyway, after 20 years we now have mathematical functions!\u003c/p\u003e\u003cp\u003eHere is the full list:\u003c/p\u003e\u003cpre tabindex=\"0\"\u003e\u003ccode\u003eacos(X)\nacosh(X)\nasin(X)\nasinh(X)\natan(X)\natan2(X,Y)\nceil(X)\nceiling(X)\ncos(X)\ncosh(X)\ndegrees(X)\nexp(X)\nfloor(X)\nln(X)\nlog(B,X)\nlog(X)\nlog10(X)\nlog2(X)\nmod(X,Y)\npi()\npow(X,Y)\npower(X,Y)\nradians(X)\nsin(X)\nsinh(X)\nsqrt(X)\ntan(X)\ntanh(X)\ntrunc(X)\n\u003c/code\u003e\u003c/pre\u003e\u003ch2 id=\"column-removal\"\u003eColumn removal\u003c/h2\u003e\u003cp\u003eProbably the second most popular source of user suffering. It\u0026#39;s incredibly annoying that you can create as many columns as you want, but there is no way to delete them. Want to delete a column? Make a copy of the table without it, and delete the old one.\u003c/p\u003e\u003cp\u003eNow this pain is also going away! \u003ccode\u003eALTER TABLE DROP COLUMN\u003c/code\u003e, how long have we been waiting for you.\u003c/p\u003e\u003cp\u003eTo delete a column, SQLite have to completely overwrite the table - so the operation is not fast. But it\u0026#39;s still nice.\u003c/p\u003e\u003ch2 id=\"returning-clause\"\u003eRETURNING clause\u003c/h2\u003e\u003cp\u003e\u003ccode\u003eDELETE\u003c/code\u003e, \u003ccode\u003eINSERT\u003c/code\u003e and \u003ccode\u003eUPDATE\u003c/code\u003e queries now can return the rows that they deleted, added, or changed respectively.\u003c/p\u003e\u003cp\u003eE.g., return the \u003ccode\u003eid\u003c/code\u003e of a new record:\u003c/p\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"\u003e\u003ccode class=\"language-sql\" data-lang=\"sql\"\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#a90d91\"\u003ecreate\u003c/span\u003e \u003cspan style=\"color:#a90d91\"\u003etable\u003c/span\u003e \u003cspan style=\"color:#000\"\u003eusers\u003c/span\u003e (\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e  \u003cspan style=\"color:#000\"\u003eid\u003c/span\u003e \u003cspan style=\"color:#a90d91\"\u003einteger\u003c/span\u003e \u003cspan style=\"color:#a90d91\"\u003eprimary\u003c/span\u003e \u003cspan style=\"color:#a90d91\"\u003ekey\u003c/span\u003e,\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e  \u003cspan style=\"color:#000\"\u003efirst_name\u003c/span\u003e \u003cspan style=\"color:#a90d91\"\u003etext\u003c/span\u003e,\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e  \u003cspan style=\"color:#000\"\u003elast_name\u003c/span\u003e \u003cspan style=\"color:#a90d91\"\u003etext\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e);\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#a90d91\"\u003einsert\u003c/span\u003e \u003cspan style=\"color:#a90d91\"\u003einto\u003c/span\u003e \u003cspan style=\"color:#000\"\u003eusers\u003c/span\u003e (\u003cspan style=\"color:#000\"\u003efirst_name\u003c/span\u003e, \u003cspan style=\"color:#000\"\u003elast_name\u003c/span\u003e)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#a90d91\"\u003evalues\u003c/span\u003e (\u003cspan style=\"color:#c41a16\"\u003e\u0026#39;Jane\u0026#39;\u003c/span\u003e, \u003cspan style=\"color:#c41a16\"\u003e\u0026#39;Doe\u0026#39;\u003c/span\u003e)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#000\"\u003ereturning\u003c/span\u003e \u003cspan style=\"color:#000\"\u003eid\u003c/span\u003e;\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eOr return products with increased price:\u003c/p\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"\u003e\u003ccode class=\"language-sql\" data-lang=\"sql\"\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#a90d91\"\u003eupdate\u003c/span\u003e \u003cspan style=\"color:#000\"\u003eproducts\u003c/span\u003e \u003cspan style=\"color:#a90d91\"\u003eset\u003c/span\u003e \u003cspan style=\"color:#000\"\u003eprice\u003c/span\u003e \u003cspan style=\"color:#000\"\u003e=\u003c/span\u003e \u003cspan style=\"color:#000\"\u003eprice\u003c/span\u003e \u003cspan style=\"color:#000\"\u003e*\u003c/span\u003e \u003cspan style=\"color:#1c01ce\"\u003e1\u003c/span\u003e.\u003cspan style=\"color:#1c01ce\"\u003e10\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#a90d91\"\u003ewhere\u003c/span\u003e \u003cspan style=\"color:#000\"\u003eprice\u003c/span\u003e \u003cspan style=\"color:#000\"\u003e\u0026lt;=\u003c/span\u003e \u003cspan style=\"color:#1c01ce\"\u003e99\u003c/span\u003e.\u003cspan style=\"color:#1c01ce\"\u003e99\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#000\"\u003ereturning\u003c/span\u003e \u003cspan style=\"color:#000\"\u003ename\u003c/span\u003e, \u003cspan style=\"color:#000\"\u003eprice\u003c/span\u003e \u003cspan style=\"color:#a90d91\"\u003eas\u003c/span\u003e \u003cspan style=\"color:#000\"\u003enew_price\u003c/span\u003e;\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"materialized-ctes\"\u003eMaterialized CTEs\u003c/h2\u003e\u003cp\u003eCTE (Common Table Expression) is a great way to make a query more expressive. E.g., count the number of cities founded in each century:\u003c/p\u003e\u003cpre tabindex=\"0\"\u003e\u003ccode\u003ecreate table city(\n  city text,\n  timezone text,\n  geo_lat real,\n  geo_lon real,\n  population integer,\n  foundation_year integer\n);\n\n-- insert data ...\n\nwith history as (\n  select\n    city,\n    (foundation_year/100)+1 as century\n  from city\n)\nselect\n  century || \u0026#39; century\u0026#39; as dates,\n  count(*) as city_count\nfrom history\ngroup by century\norder by century desc;\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eIf the same CTE occurs multiple times in a query, SQLite calculates it multiple times. For large tables this may not be fast.\u003c/p\u003e\u003cp\u003eWith a materialized CTE, SQLite executes the query once, remembers the result and does not recalculate it (within the same query):\u003c/p\u003e\u003cpre tabindex=\"0\"\u003e\u003ccode\u003ewith history as materialized (\n  select ...\n)\nselect ... from history where ...\nexcept\nselect ... from history where ...\n;\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eFour great features, all in the same release! Awesome ツ\u003c/p\u003e\u003cp\u003e\u003ca href=\"https://sqlite.org/releaselog/3_35_0.html\"\u003eSQLite 3.35 Release Notes\u003c/a\u003e\u003c/p\u003e\u003cp\u003e\u003ca href=\"https://news.ycombinator.com/item?id=26440397\"\u003eComments on Hacker News\u003c/a\u003e\u003c/p\u003e\u003cp\u003e\u003cem\u003e\u003ca href=\"/subscribe/\"\u003e\u003ci class=\"fas fa-star\"\u003e\u003c/i\u003e \u003cstrong\u003eSubscribe\u003c/strong\u003e\u003c/a\u003e\nto keep up with new posts.\u003c/em\u003e\u003c/p\u003e\u003c/div\u003e\u003c/div\u003e\u003cfooter class=\"post__footer\"\u003e\u003cdiv class=\"row\"\u003e\u003cdiv class=\"col-xs-12\"\u003e\u003cdiv class=\"post__date\"\u003e\u003ctime datetime=\"2021-03-12 19:10:16 +0000 UTC\"\u003e12 Mar, 2021\u003c/time\u003e\u003c/div\u003e\u003cdiv class=\"post__tags\"\u003e\u003ca href=\"/tags/sqlite/\"\u003esqlite\u003c/a\u003e \u003c/div\u003e\u003c/div\u003e\u003c/div\u003e\u003c/footer\u003e\u003c/article\u003e",
  "Date": "2021-03-12T19:10:16Z",
  "Author": "Anton Zhiyanov"
}