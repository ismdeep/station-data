{
  "Source": "antonz.org",
  "Title": "Built-in functions in Go 1.21",
  "Link": "https://antonz.org/go-1-21-builtins/",
  "Content": "\u003carticle class=\"post\"\u003e\u003cdiv class=\"row\"\u003e\u003cdiv class=\"col-xs-12 col-md-10 article\"\u003e\u003cheader\u003e\u003ch1\u003eBuilt-in functions in Go 1.21\u003c/h1\u003e\u003c/header\u003e\u003cp\u003eGo 1.21 brings many exciting things, from profile-guided optimization to standard library packages for structured logging, slices and maps operations (see the \u003ca href=\"https://tip.golang.org/doc/go1.21\"\u003erelease notes\u003c/a\u003e for details). In this post, I\u0026#39;d like to skip all that and focus on the features that caught my eye: the new builtins.\u003c/p\u003e\u003cp\u003eIn case you\u0026#39;re wondering, builtins are functions that do not require importing a package, like \u003ccode\u003elen\u003c/code\u003e or \u003ccode\u003emake\u003c/code\u003e. Go 1.21 brings three more of them: \u003ccode\u003emin\u003c/code\u003e, \u003ccode\u003emax\u003c/code\u003e and \u003ccode\u003eclear\u003c/code\u003e. Let\u0026#39;s take a look.\u003c/p\u003e\u003cdiv class=\"row\"\u003e\u003cdiv class=\"col-xs-12 col-sm-8\"\u003e\u003cfigure\u003e\u003cimg src=\"trends.png\" alt=\"Go trends\" class=\"img-bordered-thin\"/\u003e\u003cfigcaption\u003eThere are some serious trends we\u0026#39;re seeing here.\u003c/figcaption\u003e\u003c/figure\u003e\u003c/div\u003e\u003c/div\u003e\u003ch2 id=\"minmax\"\u003emin/max\u003c/h2\u003e\u003cp\u003eThese work exactly as you\u0026#39;d expect: they select the smallest or largest of the values you specify:\u003c/p\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#000\"\u003en\u003c/span\u003e \u003cspan style=\"color:#000\"\u003e:=\u003c/span\u003e \u003cspan style=\"color:#000\"\u003emin\u003c/span\u003e(\u003cspan style=\"color:#1c01ce\"\u003e10\u003c/span\u003e, \u003cspan style=\"color:#1c01ce\"\u003e3\u003c/span\u003e, \u003cspan style=\"color:#1c01ce\"\u003e22\u003c/span\u003e)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#000\"\u003efmt\u003c/span\u003e.\u003cspan style=\"color:#000\"\u003ePrintln\u003c/span\u003e(\u003cspan style=\"color:#000\"\u003en\u003c/span\u003e)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#177500\"\u003e// 3\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#177500\"\u003e\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#000\"\u003em\u003c/span\u003e \u003cspan style=\"color:#000\"\u003e:=\u003c/span\u003e \u003cspan style=\"color:#000\"\u003emax\u003c/span\u003e(\u003cspan style=\"color:#1c01ce\"\u003e10\u003c/span\u003e, \u003cspan style=\"color:#1c01ce\"\u003e3\u003c/span\u003e, \u003cspan style=\"color:#1c01ce\"\u003e22\u003c/span\u003e)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#000\"\u003efmt\u003c/span\u003e.\u003cspan style=\"color:#000\"\u003ePrintln\u003c/span\u003e(\u003cspan style=\"color:#000\"\u003em\u003c/span\u003e)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#177500\"\u003e// 22\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ccodapi-snippet sandbox=\"go\" editor=\"basic\" template=\"main.go\"\u003e\u003c/codapi-snippet\u003e\u003cp\u003eBoth functions accept values of an ordered type: integers, floats, or strings (or their derived types).\u003c/p\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#000\"\u003ex\u003c/span\u003e \u003cspan style=\"color:#000\"\u003e:=\u003c/span\u003e \u003cspan style=\"color:#000\"\u003emin\u003c/span\u003e(\u003cspan style=\"color:#1c01ce\"\u003e9.99\u003c/span\u003e, \u003cspan style=\"color:#1c01ce\"\u003e3.14\u003c/span\u003e, \u003cspan style=\"color:#1c01ce\"\u003e5.27\u003c/span\u003e)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#000\"\u003efmt\u003c/span\u003e.\u003cspan style=\"color:#000\"\u003ePrintln\u003c/span\u003e(\u003cspan style=\"color:#000\"\u003ex\u003c/span\u003e)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#177500\"\u003e// 3.14\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#177500\"\u003e\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#000\"\u003es\u003c/span\u003e \u003cspan style=\"color:#000\"\u003e:=\u003c/span\u003e \u003cspan style=\"color:#000\"\u003emin\u003c/span\u003e(\u003cspan style=\"color:#c41a16\"\u003e\u0026#34;one\u0026#34;\u003c/span\u003e, \u003cspan style=\"color:#c41a16\"\u003e\u0026#34;two\u0026#34;\u003c/span\u003e, \u003cspan style=\"color:#c41a16\"\u003e\u0026#34;three\u0026#34;\u003c/span\u003e)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#000\"\u003efmt\u003c/span\u003e.\u003cspan style=\"color:#000\"\u003ePrintln\u003c/span\u003e(\u003cspan style=\"color:#000\"\u003es\u003c/span\u003e)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#177500\"\u003e// \u0026#34;one\u0026#34;\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#177500\"\u003e\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#a90d91\"\u003etype\u003c/span\u003e \u003cspan style=\"color:#000\"\u003eID\u003c/span\u003e \u003cspan style=\"color:#a90d91\"\u003eint\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#000\"\u003eid1\u003c/span\u003e \u003cspan style=\"color:#000\"\u003e:=\u003c/span\u003e \u003cspan style=\"color:#000\"\u003eID\u003c/span\u003e(\u003cspan style=\"color:#1c01ce\"\u003e7\u003c/span\u003e)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#000\"\u003eid2\u003c/span\u003e \u003cspan style=\"color:#000\"\u003e:=\u003c/span\u003e \u003cspan style=\"color:#000\"\u003eID\u003c/span\u003e(\u003cspan style=\"color:#1c01ce\"\u003e42\u003c/span\u003e)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#000\"\u003eid\u003c/span\u003e \u003cspan style=\"color:#000\"\u003e:=\u003c/span\u003e \u003cspan style=\"color:#000\"\u003emax\u003c/span\u003e(\u003cspan style=\"color:#000\"\u003eid1\u003c/span\u003e, \u003cspan style=\"color:#000\"\u003eid2\u003c/span\u003e)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#000\"\u003efmt\u003c/span\u003e.\u003cspan style=\"color:#000\"\u003ePrintln\u003c/span\u003e(\u003cspan style=\"color:#000\"\u003eid\u003c/span\u003e)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#177500\"\u003e// 42\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ccodapi-snippet sandbox=\"go\" editor=\"basic\" template=\"main.go\"\u003e\u003c/codapi-snippet\u003e\u003cp\u003eBoth functions take one or more arguments:\u003c/p\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#000\"\u003efmt\u003c/span\u003e.\u003cspan style=\"color:#000\"\u003ePrintln\u003c/span\u003e(\u003cspan style=\"color:#000\"\u003emin\u003c/span\u003e(\u003cspan style=\"color:#1c01ce\"\u003e10\u003c/span\u003e))\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#177500\"\u003e// 10\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#177500\"\u003e\u003c/span\u003e\u003cspan style=\"color:#000\"\u003efmt\u003c/span\u003e.\u003cspan style=\"color:#000\"\u003ePrintln\u003c/span\u003e(\u003cspan style=\"color:#000\"\u003emin\u003c/span\u003e(\u003cspan style=\"color:#1c01ce\"\u003e10\u003c/span\u003e, \u003cspan style=\"color:#1c01ce\"\u003e9\u003c/span\u003e))\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#177500\"\u003e// 9\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#177500\"\u003e\u003c/span\u003e\u003cspan style=\"color:#000\"\u003efmt\u003c/span\u003e.\u003cspan style=\"color:#000\"\u003ePrintln\u003c/span\u003e(\u003cspan style=\"color:#000\"\u003emin\u003c/span\u003e(\u003cspan style=\"color:#1c01ce\"\u003e10\u003c/span\u003e, \u003cspan style=\"color:#1c01ce\"\u003e9\u003c/span\u003e, \u003cspan style=\"color:#1c01ce\"\u003e8\u003c/span\u003e))\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#177500\"\u003e// 8\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#177500\"\u003e// ...\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ccodapi-snippet sandbox=\"go\" editor=\"basic\" template=\"main.go\"\u003e\u003c/codapi-snippet\u003e\u003cp\u003eHowever, they are not variadic:\u003c/p\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#000\"\u003enums\u003c/span\u003e \u003cspan style=\"color:#000\"\u003e:=\u003c/span\u003e []\u003cspan style=\"color:#a90d91\"\u003eint\u003c/span\u003e{\u003cspan style=\"color:#1c01ce\"\u003e10\u003c/span\u003e, \u003cspan style=\"color:#1c01ce\"\u003e9\u003c/span\u003e, \u003cspan style=\"color:#1c01ce\"\u003e8\u003c/span\u003e}\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#000\"\u003en\u003c/span\u003e \u003cspan style=\"color:#000\"\u003e:=\u003c/span\u003e \u003cspan style=\"color:#000\"\u003emin\u003c/span\u003e(\u003cspan style=\"color:#000\"\u003enums\u003c/span\u003e\u003cspan style=\"color:#000\"\u003e...\u003c/span\u003e)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#000\"\u003efmt\u003c/span\u003e.\u003cspan style=\"color:#000\"\u003ePrintln\u003c/span\u003e(\u003cspan style=\"color:#000\"\u003en\u003c/span\u003e)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#177500\"\u003e// invalid operation: invalid use of ... with built-in min\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ccodapi-snippet sandbox=\"go\" editor=\"basic\" template=\"main.go\"\u003e\u003c/codapi-snippet\u003e\u003cp\u003eIf you\u0026#39;re wondering whether these new builtins will break your existing code that already uses the names \u003ccode\u003emin\u003c/code\u003e and \u003ccode\u003emax\u003c/code\u003e — they won\u0026#39;t. Builtins aren\u0026#39;t keywords, you can shadow them however you like:\u003c/p\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#177500\"\u003e// all are just fine\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#177500\"\u003e\u003c/span\u003e\u003cspan style=\"color:#000\"\u003emax\u003c/span\u003e \u003cspan style=\"color:#000\"\u003e:=\u003c/span\u003e \u003cspan style=\"color:#c41a16\"\u003e\u0026#34;My name is Max\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#000\"\u003emin\u003c/span\u003e \u003cspan style=\"color:#000\"\u003e:=\u003c/span\u003e \u003cspan style=\"color:#1c01ce\"\u003e4\u003c/span\u003e \u003cspan style=\"color:#000\"\u003e-\u003c/span\u003e \u003cspan style=\"color:#1c01ce\"\u003e1\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#000\"\u003emake\u003c/span\u003e \u003cspan style=\"color:#000\"\u003e:=\u003c/span\u003e \u003cspan style=\"color:#a90d91\"\u003efunc\u003c/span\u003e() \u003cspan style=\"color:#a90d91\"\u003eint\u003c/span\u003e {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#a90d91\"\u003ereturn\u003c/span\u003e \u003cspan style=\"color:#1c01ce\"\u003e14\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e}\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#000\"\u003efmt\u003c/span\u003e.\u003cspan style=\"color:#000\"\u003ePrintln\u003c/span\u003e(\u003cspan style=\"color:#000\"\u003emax\u003c/span\u003e, \u003cspan style=\"color:#000\"\u003emin\u003c/span\u003e, \u003cspan style=\"color:#a90d91\"\u003emake\u003c/span\u003e())\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#177500\"\u003e// My name is Max 3 14\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ccodapi-snippet sandbox=\"go\" editor=\"basic\" template=\"main.go\"\u003e\u003c/codapi-snippet\u003e\u003cp\u003eNow here is an interesting question:\u003c/p\u003e\u003cblockquote\u003e\u003cp\u003eWhy would the Go team add new builtins instead of generic \u003ccode\u003eMin\u003c/code\u003e and \u003ccode\u003eMax\u003c/code\u003e functions in the \u003ccode\u003ecmp\u003c/code\u003e package?\u003c/p\u003e\u003c/blockquote\u003e\u003cp\u003eThere is an answer, though you may not like it. Russ Cox here:\u003c/p\u003e\u003cblockquote\u003e\u003cp\u003eWe have gone back and forth a few times on this proposal about min/max being builtins vs being in package cmp.\u003c/p\u003e\u003cp\u003eThere are good arguments on both sides. On the one hand, min and max are fundamental arithmetic operations much like addition, which justifies making them builtins.\u003c/p\u003e\u003cp\u003eOn the other hand, we have generics now and it would make sense to use generics to write library code rather than make them builtins.\u003c/p\u003e\u003cp\u003eEven among the active Go language designers, our own personal intuitions differ on this.\u003c/p\u003e\u003c/blockquote\u003e\u003cp\u003e\u003ca href=\"https://github.com/golang/go/issues/59488#issuecomment-1548505279\"\u003efull quote\u003c/a\u003e\u003c/p\u003e\u003cp\u003eSo it is what it is, I guess.\u003c/p\u003e\u003ch2 id=\"clear\"\u003eclear\u003c/h2\u003e\u003cp\u003eWhile \u003ccode\u003emin\u003c/code\u003e and \u003ccode\u003emax\u003c/code\u003e look obvious, \u003ccode\u003eclear\u003c/code\u003e is a more interesting beast. It works with maps, slices, and type parameter values (more on the latter in a minute).\u003c/p\u003e\u003cp\u003eWhen called on a map, \u003ccode\u003eclear\u003c/code\u003e deletes all entries, resulting in an empty map:\u003c/p\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#000\"\u003em\u003c/span\u003e \u003cspan style=\"color:#000\"\u003e:=\u003c/span\u003e \u003cspan style=\"color:#a90d91\"\u003emap\u003c/span\u003e[\u003cspan style=\"color:#a90d91\"\u003estring\u003c/span\u003e]\u003cspan style=\"color:#a90d91\"\u003eint\u003c/span\u003e{\u003cspan style=\"color:#c41a16\"\u003e\u0026#34;one\u0026#34;\u003c/span\u003e: \u003cspan style=\"color:#1c01ce\"\u003e1\u003c/span\u003e, \u003cspan style=\"color:#c41a16\"\u003e\u0026#34;two\u0026#34;\u003c/span\u003e: \u003cspan style=\"color:#1c01ce\"\u003e2\u003c/span\u003e, \u003cspan style=\"color:#c41a16\"\u003e\u0026#34;three\u0026#34;\u003c/span\u003e: \u003cspan style=\"color:#1c01ce\"\u003e3\u003c/span\u003e}\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#000\"\u003eclear\u003c/span\u003e(\u003cspan style=\"color:#000\"\u003em\u003c/span\u003e)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#000\"\u003efmt\u003c/span\u003e.\u003cspan style=\"color:#000\"\u003ePrintf\u003c/span\u003e(\u003cspan style=\"color:#c41a16\"\u003e\u0026#34;%#v\\n\u0026#34;\u003c/span\u003e, \u003cspan style=\"color:#000\"\u003em\u003c/span\u003e)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#177500\"\u003e// map[string]int{}\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ccodapi-snippet sandbox=\"go\" editor=\"basic\" template=\"main.go\"\u003e\u003c/codapi-snippet\u003e\u003cp\u003eBut when called on a slice, \u003ccode\u003eclear\u003c/code\u003e sets all slice elements to their zero values:\u003c/p\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#000\"\u003es\u003c/span\u003e \u003cspan style=\"color:#000\"\u003e:=\u003c/span\u003e []\u003cspan style=\"color:#a90d91\"\u003estring\u003c/span\u003e{\u003cspan style=\"color:#c41a16\"\u003e\u0026#34;one\u0026#34;\u003c/span\u003e, \u003cspan style=\"color:#c41a16\"\u003e\u0026#34;two\u0026#34;\u003c/span\u003e, \u003cspan style=\"color:#c41a16\"\u003e\u0026#34;three\u0026#34;\u003c/span\u003e}\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#000\"\u003eclear\u003c/span\u003e(\u003cspan style=\"color:#000\"\u003es\u003c/span\u003e)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#000\"\u003efmt\u003c/span\u003e.\u003cspan style=\"color:#000\"\u003ePrintf\u003c/span\u003e(\u003cspan style=\"color:#c41a16\"\u003e\u0026#34;%#v\\n\u0026#34;\u003c/span\u003e, \u003cspan style=\"color:#000\"\u003es\u003c/span\u003e)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#177500\"\u003e// []string{\u0026#34;\u0026#34;, \u0026#34;\u0026#34;, \u0026#34;\u0026#34;}\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ccodapi-snippet sandbox=\"go\" editor=\"basic\" template=\"main.go\"\u003e\u003c/codapi-snippet\u003e\u003cp\u003eAnd why would that be, you might ask. Wouldn\u0026#39;t it be logical for \u003ccode\u003eclear\u003c/code\u003e to, well, \u003cem\u003eclear\u003c/em\u003e a slice? Actually, no.\u003c/p\u003e\u003cp\u003eA slice in Go is a \u003cem\u003evalue\u003c/em\u003e, and it\u0026#39;s length is a part of that value:\u003c/p\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#177500\"\u003e// https://github.com/golang/go/blob/master/src/runtime/slice.go\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#177500\"\u003e\u003c/span\u003e\u003cspan style=\"color:#a90d91\"\u003etype\u003c/span\u003e \u003cspan style=\"color:#000\"\u003eslice\u003c/span\u003e \u003cspan style=\"color:#a90d91\"\u003estruct\u003c/span\u003e {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\t\u003cspan style=\"color:#000\"\u003earray\u003c/span\u003e \u003cspan style=\"color:#000\"\u003eunsafe\u003c/span\u003e.\u003cspan style=\"color:#000\"\u003ePointer\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\t\u003cspan style=\"color:#000\"\u003elen\u003c/span\u003e   \u003cspan style=\"color:#a90d91\"\u003eint\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\t\u003cspan style=\"color:#000\"\u003ecap\u003c/span\u003e   \u003cspan style=\"color:#a90d91\"\u003eint\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e}\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eSo any function that accepts a slice works with a \u003cem\u003ecopy\u003c/em\u003e of that value. There is no point in modifying the copy, as the caller will not see the changes. That\u0026#39;s why the \u003ccode\u003eappend\u003c/code\u003e builtin returns a new slice instead of changing the length of the original one.\u003c/p\u003e\u003cp\u003e\u003ccode\u003eclear\u003c/code\u003e is no different. It can\u0026#39;t change the length. But what it can do is change the underlying array elements by setting them to zero value. And that\u0026#39;s what it does.\u003c/p\u003e\u003cp\u003eMap, on the other hand, is a \u003cem\u003epointer\u003c/em\u003e to the following struct:\u003c/p\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#177500\"\u003e// https://github.com/golang/go/blob/master/src/runtime/map.go\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#177500\"\u003e\u003c/span\u003e\u003cspan style=\"color:#a90d91\"\u003etype\u003c/span\u003e \u003cspan style=\"color:#000\"\u003ehmap\u003c/span\u003e \u003cspan style=\"color:#a90d91\"\u003estruct\u003c/span\u003e {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\t\u003cspan style=\"color:#000\"\u003ecount\u003c/span\u003e \u003cspan style=\"color:#a90d91\"\u003eint\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\t\u003cspan style=\"color:#177500\"\u003e// ...\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#177500\"\u003e\u003c/span\u003e\t\u003cspan style=\"color:#000\"\u003ebuckets\u003c/span\u003e \u003cspan style=\"color:#000\"\u003eunsafe\u003c/span\u003e.\u003cspan style=\"color:#000\"\u003ePointer\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\t\u003cspan style=\"color:#177500\"\u003e// ...\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#177500\"\u003e\u003c/span\u003e}\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eSo it\u0026#39;s perfectly reasonable for \u003ccode\u003eclear\u003c/code\u003e to remove all elements from a map.\u003c/p\u003e\u003cp\u003eNow to the \u0026#34;type parameter values\u0026#34; part:\u003c/p\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#a90d91\"\u003efunc\u003c/span\u003e \u003cspan style=\"color:#000\"\u003ecustomClear\u003c/span\u003e [\u003cspan style=\"color:#000\"\u003eT\u003c/span\u003e []\u003cspan style=\"color:#a90d91\"\u003estring\u003c/span\u003e | \u003cspan style=\"color:#a90d91\"\u003emap\u003c/span\u003e[\u003cspan style=\"color:#a90d91\"\u003estring\u003c/span\u003e]\u003cspan style=\"color:#a90d91\"\u003eint\u003c/span\u003e] (\u003cspan style=\"color:#000\"\u003econtainer\u003c/span\u003e \u003cspan style=\"color:#000\"\u003eT\u003c/span\u003e) {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#000\"\u003eclear\u003c/span\u003e(\u003cspan style=\"color:#000\"\u003econtainer\u003c/span\u003e)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e}\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#a90d91\"\u003efunc\u003c/span\u003e \u003cspan style=\"color:#000\"\u003emain\u003c/span\u003e() {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#000\"\u003es\u003c/span\u003e \u003cspan style=\"color:#000\"\u003e:=\u003c/span\u003e []\u003cspan style=\"color:#a90d91\"\u003estring\u003c/span\u003e{\u003cspan style=\"color:#c41a16\"\u003e\u0026#34;one\u0026#34;\u003c/span\u003e, \u003cspan style=\"color:#c41a16\"\u003e\u0026#34;two\u0026#34;\u003c/span\u003e, \u003cspan style=\"color:#c41a16\"\u003e\u0026#34;three\u0026#34;\u003c/span\u003e}\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#000\"\u003ecustomClear\u003c/span\u003e(\u003cspan style=\"color:#000\"\u003es\u003c/span\u003e)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#000\"\u003efmt\u003c/span\u003e.\u003cspan style=\"color:#000\"\u003ePrintf\u003c/span\u003e(\u003cspan style=\"color:#c41a16\"\u003e\u0026#34;%#v\\n\u0026#34;\u003c/span\u003e, \u003cspan style=\"color:#000\"\u003es\u003c/span\u003e)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#177500\"\u003e// []string{\u0026#34;\u0026#34;, \u0026#34;\u0026#34;, \u0026#34;\u0026#34;}\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#177500\"\u003e\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#000\"\u003em\u003c/span\u003e \u003cspan style=\"color:#000\"\u003e:=\u003c/span\u003e \u003cspan style=\"color:#a90d91\"\u003emap\u003c/span\u003e[\u003cspan style=\"color:#a90d91\"\u003estring\u003c/span\u003e]\u003cspan style=\"color:#a90d91\"\u003eint\u003c/span\u003e{\u003cspan style=\"color:#c41a16\"\u003e\u0026#34;one\u0026#34;\u003c/span\u003e: \u003cspan style=\"color:#1c01ce\"\u003e1\u003c/span\u003e, \u003cspan style=\"color:#c41a16\"\u003e\u0026#34;two\u0026#34;\u003c/span\u003e: \u003cspan style=\"color:#1c01ce\"\u003e2\u003c/span\u003e, \u003cspan style=\"color:#c41a16\"\u003e\u0026#34;three\u0026#34;\u003c/span\u003e: \u003cspan style=\"color:#1c01ce\"\u003e3\u003c/span\u003e}\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#000\"\u003ecustomClear\u003c/span\u003e(\u003cspan style=\"color:#000\"\u003em\u003c/span\u003e)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#000\"\u003efmt\u003c/span\u003e.\u003cspan style=\"color:#000\"\u003ePrintf\u003c/span\u003e(\u003cspan style=\"color:#c41a16\"\u003e\u0026#34;%#v\\n\u0026#34;\u003c/span\u003e, \u003cspan style=\"color:#000\"\u003em\u003c/span\u003e)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#177500\"\u003e// map[string]int{}\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#177500\"\u003e\u003c/span\u003e}\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ccodapi-snippet sandbox=\"go\" editor=\"basic\" template=\"header.go\"\u003e\u003c/codapi-snippet\u003e\u003cp\u003e\u003ccode\u003ecustomClear\u003c/code\u003e takes a \u003ccode\u003econtainer\u003c/code\u003e argument, which can be either a slice or a map. \u003ccode\u003eclear\u003c/code\u003e inside the function handles the \u003ccode\u003econtainer\u003c/code\u003e accordingly, clearing the maps and zeroing-out the slices.\u003c/p\u003e\u003cp\u003eOh, and by the way, \u003ccode\u003eclear\u003c/code\u003e does not work with arrays:\u003c/p\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#000\"\u003earr\u003c/span\u003e \u003cspan style=\"color:#000\"\u003e:=\u003c/span\u003e [\u003cspan style=\"color:#1c01ce\"\u003e3\u003c/span\u003e]\u003cspan style=\"color:#a90d91\"\u003eint\u003c/span\u003e{\u003cspan style=\"color:#1c01ce\"\u003e1\u003c/span\u003e, \u003cspan style=\"color:#1c01ce\"\u003e2\u003c/span\u003e, \u003cspan style=\"color:#1c01ce\"\u003e3\u003c/span\u003e}\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#000\"\u003eclear\u003c/span\u003e(\u003cspan style=\"color:#000\"\u003earr\u003c/span\u003e)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex\"\u003e\u003cspan\u003e\u003cspan style=\"color:#177500\"\u003e// invalid argument: argument must be (or constrained by) map or slice\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ccodapi-snippet sandbox=\"go\" editor=\"basic\" template=\"main.go\"\u003e\u003c/codapi-snippet\u003e\u003ch2 id=\"summary\"\u003eSummary\u003c/h2\u003e\u003cp\u003eAll in all, getting \u003cem\u003ethree\u003c/em\u003e new builtins in a single release is a bit unexpected. But probably fine.\u003c/p\u003e\u003cp\u003eHere is a complete list of built-in functions in Go as of 1.21:\u003c/p\u003e\u003cpre tabindex=\"0\"\u003e\u003ccode\u003eappend     appends zero or more values to a slice\nclear      deletes or zeroes out all elements\n\nclose      records that no more values will be sent on the channel\n\ncomplex    assemble and disassemble complex numbers\nreal\nimag\n\ndelete     removes the element with key k from a map\n\nlen        returns the length of a container\ncap        returns the capacity of a container\n\nmake       creates a new slice, map, or channel\nnew        allocates storage for a variable\n\nmin        computes the smallest value among its arguments\nmax        computes the largest value among its arguments\n\npanic      assist in reporting and handling run-time panics\nrecover\n\nprint      print the arguments\nprintln\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eMaybe it\u0026#39;s a good idea not to add any more to this list. I still can\u0026#39;t get over \u003ccode\u003eprint\u003c/code\u003es, to be honest.\u003c/p\u003e\u003cp\u003e──\u003c/p\u003e\u003cp\u003e\u003cmark\u003eInteractive examples in this post\u003c/mark\u003e are powered by \u003ca href=\"https://codapi.org/\"\u003e\u003cstrong\u003ecodapi\u003c/strong\u003e\u003c/a\u003e — an open source tool I\u0026#39;m building. Use it to embed live code snippets into your product docs, online course or blog.\u003c/p\u003e\u003cscript defer=\"\" src=\"/modules/codapi/snippet.js\"\u003e\u003c/script\u003e\u003cp\u003e\u003cem\u003e\u003ca href=\"/subscribe/\"\u003e\u003ci class=\"fas fa-star\"\u003e\u003c/i\u003e \u003cstrong\u003eSubscribe\u003c/strong\u003e\u003c/a\u003e\nto keep up with new posts.\u003c/em\u003e\u003c/p\u003e\u003c/div\u003e\u003c/div\u003e\u003cfooter class=\"post__footer\"\u003e\u003cdiv class=\"row\"\u003e\u003cdiv class=\"col-xs-12\"\u003e\u003cdiv class=\"post__date\"\u003e\u003ctime datetime=\"2023-06-23 04:00:00 +0000 UTC\"\u003e23 Jun, 2023\u003c/time\u003e\u003c/div\u003e\u003cdiv class=\"post__tags\"\u003e\u003ca href=\"/tags/thank-go/\"\u003ethank-go\u003c/a\u003e \u003c/div\u003e\u003c/div\u003e\u003c/div\u003e\u003c/footer\u003e\u003c/article\u003e",
  "Date": "2023-06-23T04:00:00Z",
  "Author": "Anton Zhiyanov"
}