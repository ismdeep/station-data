{
  "Source": "arthurchiao.art",
  "Title": "[笔记] The AWK Programming Language（ADDISON-WESLEY, 1988）",
  "Link": "https://arthurchiao.art/blog/awk-notes-zh/",
  "Content": "\u003cdiv class=\"post\"\u003e\n  \n  \u003ch1 class=\"postTitle\"\u003e[笔记] The AWK Programming Language（ADDISON-WESLEY, 1988）\u003c/h1\u003e\n  \u003cp class=\"meta\"\u003ePublished at 2020-06-27 | Last Update 2020-06-27\u003c/p\u003e\n  \n  \u003ch3 id=\"编者按\"\u003e编者按\u003c/h3\u003e\n\n\u003cp\u003e本文是阅读 \u003cstrong\u003e\u003cem\u003eThe AWK Programming Language\u003c/em\u003e\u003c/strong\u003e 一书时所做的笔记。\u003c/p\u003e\n\n\u003cp\u003e本文内容仅供学习交流，如有侵权立即删除。\u003c/p\u003e\n\n\u003chr/\u003e\n\n\u003cul id=\"markdown-toc\"\u003e\n  \u003cli\u003e\u003ca href=\"#编者按\" id=\"markdown-toc-编者按\"\u003e编者按\u003c/a\u003e\u003c/li\u003e\n  \u003cli\u003e\u003ca href=\"#前言\" id=\"markdown-toc-前言\"\u003e前言\u003c/a\u003e    \u003cul\u003e\n      \u003cli\u003e\u003ca href=\"#awk-的演进\" id=\"markdown-toc-awk-的演进\"\u003eAWK 的演进\u003c/a\u003e\u003c/li\u003e\n    \u003c/ul\u003e\n  \u003c/li\u003e\n  \u003cli\u003e\u003ca href=\"#1-awk-入门教程an-awk-tutorial\" id=\"markdown-toc-1-awk-入门教程an-awk-tutorial\"\u003e1 AWK 入门教程（AN AWK TUTORIAL）\u003c/a\u003e    \u003cul\u003e\n      \u003cli\u003e\u003ca href=\"#11-getting-started\" id=\"markdown-toc-11-getting-started\"\u003e1.1 Getting Started\u003c/a\u003e        \u003cul\u003e\n          \u003cli\u003e\u003ca href=\"#awk-程序的结构\" id=\"markdown-toc-awk-程序的结构\"\u003eAWK 程序的结构\u003c/a\u003e\u003c/li\u003e\n          \u003cli\u003e\u003ca href=\"#运行-awk-程序\" id=\"markdown-toc-运行-awk-程序\"\u003e运行 AWK 程序\u003c/a\u003e\u003c/li\u003e\n        \u003c/ul\u003e\n      \u003c/li\u003e\n      \u003cli\u003e\u003ca href=\"#12-基本输出simple-output\" id=\"markdown-toc-12-基本输出simple-output\"\u003e1.2 基本输出（Simple Output）\u003c/a\u003e        \u003cul\u003e\n          \u003cli\u003e\u003ca href=\"#例子\" id=\"markdown-toc-例子\"\u003e例子\u003c/a\u003e\u003c/li\u003e\n        \u003c/ul\u003e\n      \u003c/li\u003e\n      \u003cli\u003e\u003ca href=\"#13-高级输出fancier-output\" id=\"markdown-toc-13-高级输出fancier-output\"\u003e1.3 高级输出（Fancier Output）\u003c/a\u003e        \u003cul\u003e\n          \u003cli\u003e\u003ca href=\"#printf-格式化输出\" id=\"markdown-toc-printf-格式化输出\"\u003e\u003ccode class=\"language-plaintext highlighter-rouge\"\u003eprintf\u003c/code\u003e 格式化输出\u003c/a\u003e\u003c/li\u003e\n          \u003cli\u003e\u003ca href=\"#排序输出\" id=\"markdown-toc-排序输出\"\u003e排序输出\u003c/a\u003e\u003c/li\u003e\n        \u003c/ul\u003e\n      \u003c/li\u003e\n      \u003cli\u003e\u003ca href=\"#14-选择过滤行selection\" id=\"markdown-toc-14-选择过滤行selection\"\u003e1.4 选择/过滤行（Selection）\u003c/a\u003e        \u003cul\u003e\n          \u003cli\u003e\u003ca href=\"#按某列的值\" id=\"markdown-toc-按某列的值\"\u003e按某列的值\u003c/a\u003e\u003c/li\u003e\n          \u003cli\u003e\u003ca href=\"#按某几列值的计算结果\" id=\"markdown-toc-按某几列值的计算结果\"\u003e按某几列值的计算结果\u003c/a\u003e\u003c/li\u003e\n          \u003cli\u003e\u003ca href=\"#按字符串匹配\" id=\"markdown-toc-按字符串匹配\"\u003e按字符串匹配\u003c/a\u003e\u003c/li\u003e\n          \u003cli\u003e\u003ca href=\"#不同方式的组合\" id=\"markdown-toc-不同方式的组合\"\u003e不同方式的组合\u003c/a\u003e\u003c/li\u003e\n          \u003cli\u003e\u003ca href=\"#begin-和-end\" id=\"markdown-toc-begin-和-end\"\u003e\u003ccode class=\"language-plaintext highlighter-rouge\"\u003eBEGIN\u003c/code\u003e 和 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eEND\u003c/code\u003e\u003c/a\u003e\u003c/li\u003e\n        \u003c/ul\u003e\n      \u003c/li\u003e\n      \u003cli\u003e\u003ca href=\"#15-计算computing-with-awk\" id=\"markdown-toc-15-计算computing-with-awk\"\u003e1.5 计算（Computing with AWK）\u003c/a\u003e        \u003cul\u003e\n          \u003cli\u003e\u003ca href=\"#统计数量工时超过-15-小时的员工人数\" id=\"markdown-toc-统计数量工时超过-15-小时的员工人数\"\u003e统计数量：工时超过 15 小时的员工人数\u003c/a\u003e\u003c/li\u003e\n          \u003cli\u003e\u003ca href=\"#求和求平均平均工资\" id=\"markdown-toc-求和求平均平均工资\"\u003e求和、求平均：平均工资\u003c/a\u003e\u003c/li\u003e\n          \u003cli\u003e\u003ca href=\"#处理文本打印时薪最高的员工信息\" id=\"markdown-toc-处理文本打印时薪最高的员工信息\"\u003e处理文本：打印时薪最高的员工信息\u003c/a\u003e\u003c/li\u003e\n          \u003cli\u003e\u003ca href=\"#字符串拼接concatenation在一行内打印所有员工名\" id=\"markdown-toc-字符串拼接concatenation在一行内打印所有员工名\"\u003e字符串拼接（concatenation）：在一行内打印所有员工名\u003c/a\u003e\u003c/li\u003e\n          \u003cli\u003e\u003ca href=\"#打印最后一行\" id=\"markdown-toc-打印最后一行\"\u003e打印最后一行\u003c/a\u003e\u003c/li\u003e\n          \u003cli\u003e\u003ca href=\"#内置函数built-in-functions\" id=\"markdown-toc-内置函数built-in-functions\"\u003e内置函数（Built-in Functions）\u003c/a\u003e\u003c/li\u003e\n          \u003cli\u003e\u003ca href=\"#统计行数单词数字符数\" id=\"markdown-toc-统计行数单词数字符数\"\u003e统计行数、单词数、字符数\u003c/a\u003e\u003c/li\u003e\n        \u003c/ul\u003e\n      \u003c/li\u003e\n      \u003cli\u003e\u003ca href=\"#16-控制流-statements\" id=\"markdown-toc-16-控制流-statements\"\u003e1.6 控制流 Statements\u003c/a\u003e        \u003cul\u003e\n          \u003cli\u003e\u003ca href=\"#if-else\" id=\"markdown-toc-if-else\"\u003eIf-Else\u003c/a\u003e\u003c/li\u003e\n          \u003cli\u003e\u003ca href=\"#while\" id=\"markdown-toc-while\"\u003eWhile\u003c/a\u003e\u003c/li\u003e\n          \u003cli\u003e\u003ca href=\"#for\" id=\"markdown-toc-for\"\u003eFor\u003c/a\u003e\u003c/li\u003e\n        \u003c/ul\u003e\n      \u003c/li\u003e\n      \u003cli\u003e\u003ca href=\"#17-数组\" id=\"markdown-toc-17-数组\"\u003e1.7 数组\u003c/a\u003e\u003c/li\u003e\n      \u003cli\u003e\u003ca href=\"#18-实用单行命令one-liners\" id=\"markdown-toc-18-实用单行命令one-liners\"\u003e1.8 实用单行命令（One-liners）\u003c/a\u003e\u003c/li\u003e\n    \u003c/ul\u003e\n  \u003c/li\u003e\n  \u003cli\u003e\u003ca href=\"#2-awk-编程语言the-awk-language\" id=\"markdown-toc-2-awk-编程语言the-awk-language\"\u003e2 AWK 编程语言（THE AWK LANGUAGE）\u003c/a\u003e    \u003cul\u003e\n      \u003cli\u003e\u003ca href=\"#awk-程序格式\" id=\"markdown-toc-awk-程序格式\"\u003eAWK 程序格式\u003c/a\u003e\u003c/li\u003e\n      \u003cli\u003e\u003ca href=\"#21-patterns\" id=\"markdown-toc-21-patterns\"\u003e2.1 Patterns\u003c/a\u003e        \u003cul\u003e\n          \u003cli\u003e\u003ca href=\"#211-begin-和-end\" id=\"markdown-toc-211-begin-和-end\"\u003e2.1.1 BEGIN 和 END\u003c/a\u003e\u003c/li\u003e\n          \u003cli\u003e\u003ca href=\"#212-expressions-as-patterns\" id=\"markdown-toc-212-expressions-as-patterns\"\u003e2.1.2 Expressions as Patterns\u003c/a\u003e\u003c/li\u003e\n          \u003cli\u003e\u003ca href=\"#213-string-matching-patterns\" id=\"markdown-toc-213-string-matching-patterns\"\u003e2.1.3 String-Matching Patterns\u003c/a\u003e\u003c/li\u003e\n          \u003cli\u003e\u003ca href=\"#214-regular-expressions\" id=\"markdown-toc-214-regular-expressions\"\u003e2.1.4 Regular Expressions\u003c/a\u003e\u003c/li\u003e\n          \u003cli\u003e\u003ca href=\"#215-compound-patterns\" id=\"markdown-toc-215-compound-patterns\"\u003e2.1.5 Compound Patterns\u003c/a\u003e\u003c/li\u003e\n          \u003cli\u003e\u003ca href=\"#216-range-patterns\" id=\"markdown-toc-216-range-patterns\"\u003e2.1.6 Range Patterns\u003c/a\u003e\u003c/li\u003e\n          \u003cli\u003e\u003ca href=\"#217-summary-of-patterns\" id=\"markdown-toc-217-summary-of-patterns\"\u003e2.1.7 Summary of Patterns\u003c/a\u003e\u003c/li\u003e\n        \u003c/ul\u003e\n      \u003c/li\u003e\n      \u003cli\u003e\u003ca href=\"#22-actions\" id=\"markdown-toc-22-actions\"\u003e2.2 Actions\u003c/a\u003e        \u003cul\u003e\n          \u003cli\u003e\u003ca href=\"#内置变量\" id=\"markdown-toc-内置变量\"\u003e内置变量\u003c/a\u003e\u003c/li\u003e\n          \u003cli\u003e\u003ca href=\"#字段变量field-variables\" id=\"markdown-toc-字段变量field-variables\"\u003e字段变量（Field Variables）\u003c/a\u003e            \u003cul\u003e\n              \u003cli\u003e\u003ca href=\"#内置字符串函数\" id=\"markdown-toc-内置字符串函数\"\u003e内置字符串函数\u003c/a\u003e\u003c/li\u003e\n            \u003c/ul\u003e\n          \u003c/li\u003e\n          \u003cli\u003e\u003ca href=\"#控制流\" id=\"markdown-toc-控制流\"\u003e控制流\u003c/a\u003e\u003c/li\u003e\n          \u003cli\u003e\u003ca href=\"#数组\" id=\"markdown-toc-数组\"\u003e数组\u003c/a\u003e            \u003cul\u003e\n              \u003cli\u003e\u003ca href=\"#从数组中删除一个元素的操作\" id=\"markdown-toc-从数组中删除一个元素的操作\"\u003e从数组中删除一个元素的操作\u003c/a\u003e\u003c/li\u003e\n              \u003cli\u003e\u003ca href=\"#split-到数组\" id=\"markdown-toc-split-到数组\"\u003eSplit 到数组\u003c/a\u003e\u003c/li\u003e\n              \u003cli\u003e\u003ca href=\"#多维数组\" id=\"markdown-toc-多维数组\"\u003e多维数组\u003c/a\u003e\u003c/li\u003e\n            \u003c/ul\u003e\n          \u003c/li\u003e\n        \u003c/ul\u003e\n      \u003c/li\u003e\n      \u003cli\u003e\u003ca href=\"#23-user-defined-functions\" id=\"markdown-toc-23-user-defined-functions\"\u003e2.3 User-Defined Functions\u003c/a\u003e\u003c/li\u003e\n      \u003cli\u003e\u003ca href=\"#24-output\" id=\"markdown-toc-24-output\"\u003e2.4 Output\u003c/a\u003e        \u003cul\u003e\n          \u003cli\u003e\u003ca href=\"#output-separators\" id=\"markdown-toc-output-separators\"\u003eOutput Separators\u003c/a\u003e\u003c/li\u003e\n          \u003cli\u003e\u003ca href=\"#output-to-file\" id=\"markdown-toc-output-to-file\"\u003eOutput to file\u003c/a\u003e\u003c/li\u003e\n          \u003cli\u003e\u003ca href=\"#output-to-pipes\" id=\"markdown-toc-output-to-pipes\"\u003eOutput to Pipes\u003c/a\u003e\u003c/li\u003e\n          \u003cli\u003e\u003ca href=\"#closing-flies-and-pipes\" id=\"markdown-toc-closing-flies-and-pipes\"\u003eClosing Flies and Pipes\u003c/a\u003e\u003c/li\u003e\n        \u003c/ul\u003e\n      \u003c/li\u003e\n      \u003cli\u003e\u003ca href=\"#25-input-separators\" id=\"markdown-toc-25-input-separators\"\u003e2.5 Input Separators\u003c/a\u003e        \u003cul\u003e\n          \u003cli\u003e\u003ca href=\"#多行记录multiline-records\" id=\"markdown-toc-多行记录multiline-records\"\u003e多行记录（Multiline Records）\u003c/a\u003e\u003c/li\u003e\n          \u003cli\u003e\u003ca href=\"#getline-函数\" id=\"markdown-toc-getline-函数\"\u003e\u003ccode class=\"language-plaintext highlighter-rouge\"\u003egetline\u003c/code\u003e 函数\u003c/a\u003e\u003c/li\u003e\n          \u003cli\u003e\u003ca href=\"#命令行输入\" id=\"markdown-toc-命令行输入\"\u003e命令行输入\u003c/a\u003e\u003c/li\u003e\n        \u003c/ul\u003e\n      \u003c/li\u003e\n      \u003cli\u003e\u003ca href=\"#26-interaction-with-other-programs\" id=\"markdown-toc-26-interaction-with-other-programs\"\u003e2.6 Interaction with Other Programs\u003c/a\u003e        \u003cul\u003e\n          \u003cli\u003e\u003ca href=\"#system-函数\" id=\"markdown-toc-system-函数\"\u003e\u003ccode class=\"language-plaintext highlighter-rouge\"\u003esystem\u003c/code\u003e 函数\u003c/a\u003e\u003c/li\u003e\n          \u003cli\u003e\u003ca href=\"#用-awk-编写-shell-可执行程序\" id=\"markdown-toc-用-awk-编写-shell-可执行程序\"\u003e用 AWK 编写 shell 可执行程序\u003c/a\u003e\u003c/li\u003e\n        \u003c/ul\u003e\n      \u003c/li\u003e\n      \u003cli\u003e\u003ca href=\"#27-summary\" id=\"markdown-toc-27-summary\"\u003e2.7 Summary\u003c/a\u003e\u003c/li\u003e\n    \u003c/ul\u003e\n  \u003c/li\u003e\n  \u003cli\u003e\u003ca href=\"#3-数据处理data-processing\" id=\"markdown-toc-3-数据处理data-processing\"\u003e3 数据处理（DATA PROCESSING）\u003c/a\u003e    \u003cul\u003e\n      \u003cli\u003e\u003ca href=\"#31-数据变换data-transformation-and-reduction\" id=\"markdown-toc-31-数据变换data-transformation-and-reduction\"\u003e3.1 数据变换（Data Transformation and Reduction）\u003c/a\u003e        \u003cul\u003e\n          \u003cli\u003e\u003ca href=\"#311-按列求和summing-columns\" id=\"markdown-toc-311-按列求和summing-columns\"\u003e3.1.1 按列求和（Summing Columns）\u003c/a\u003e\u003c/li\u003e\n          \u003cli\u003e\u003ca href=\"#312-计算百分比和百分线quantiles\" id=\"markdown-toc-312-计算百分比和百分线quantiles\"\u003e3.1.2 计算百分比和百分线（Quantiles）\u003c/a\u003e\u003c/li\u003e\n          \u003cli\u003e\u003ca href=\"#313-逗号格式的数字numbers-with-commas\" id=\"markdown-toc-313-逗号格式的数字numbers-with-commas\"\u003e3.1.3 逗号格式的数字（Numbers with Commas）\u003c/a\u003e\u003c/li\u003e\n          \u003cli\u003e\u003ca href=\"#314-固定宽度字段fixed-field-input\" id=\"markdown-toc-314-固定宽度字段fixed-field-input\"\u003e3.1.4 固定宽度字段（Fixed-Field Input）\u003c/a\u003e\u003c/li\u003e\n          \u003cli\u003e\u003ca href=\"#315-交叉索引从不同行获取输入\" id=\"markdown-toc-315-交叉索引从不同行获取输入\"\u003e3.1.5 交叉索引：从不同行获取输入\u003c/a\u003e\u003c/li\u003e\n        \u003c/ul\u003e\n      \u003c/li\u003e\n      \u003cli\u003e\u003ca href=\"#32-data-validation\" id=\"markdown-toc-32-data-validation\"\u003e3.2 Data Validation\u003c/a\u003e\u003c/li\u003e\n      \u003cli\u003e\u003ca href=\"#33-bundle-and-unbundle合并拆分文件\" id=\"markdown-toc-33-bundle-and-unbundle合并拆分文件\"\u003e3.3 Bundle and Unbundle（合并/拆分文件）\u003c/a\u003e\u003c/li\u003e\n      \u003cli\u003e\u003ca href=\"#34-multiline-records\" id=\"markdown-toc-34-multiline-records\"\u003e3.4 Multiline Records\u003c/a\u003e        \u003cul\u003e\n          \u003cli\u003e\u003ca href=\"#records-separated-by-blank-lines\" id=\"markdown-toc-records-separated-by-blank-lines\"\u003eRecords Separated by Blank Lines\u003c/a\u003e\u003c/li\u003e\n          \u003cli\u003e\u003ca href=\"#processing-multiline-records\" id=\"markdown-toc-processing-multiline-records\"\u003eProcessing Multiline Records\u003c/a\u003e\u003c/li\u003e\n          \u003cli\u003e\u003ca href=\"#records-with-headers-and-trailers\" id=\"markdown-toc-records-with-headers-and-trailers\"\u003eRecords with Headers and Trailers\u003c/a\u003e\u003c/li\u003e\n          \u003cli\u003e\u003ca href=\"#name-value-data\" id=\"markdown-toc-name-value-data\"\u003eName-value Data\u003c/a\u003e\u003c/li\u003e\n        \u003c/ul\u003e\n      \u003c/li\u003e\n      \u003cli\u003e\u003ca href=\"#35-summary\" id=\"markdown-toc-35-summary\"\u003e3.5 Summary\u003c/a\u003e\u003c/li\u003e\n    \u003c/ul\u003e\n  \u003c/li\u003e\n  \u003cli\u003e\u003ca href=\"#4-报表和数据库reports-and-databases\" id=\"markdown-toc-4-报表和数据库reports-and-databases\"\u003e4 报表和数据库（REPORTS AND DATABASES）\u003c/a\u003e    \u003cul\u003e\n      \u003cli\u003e\u003ca href=\"#41-生成报表generating-reports\" id=\"markdown-toc-41-生成报表generating-reports\"\u003e4.1 生成报表（Generating Reports）\u003c/a\u003e        \u003cul\u003e\n          \u003cli\u003e\u003ca href=\"#411-版本一\" id=\"markdown-toc-411-版本一\"\u003e4.1.1 版本一\u003c/a\u003e\u003c/li\u003e\n          \u003cli\u003e\u003ca href=\"#412-版本二\" id=\"markdown-toc-412-版本二\"\u003e4.1.2 版本二\u003c/a\u003e\u003c/li\u003e\n        \u003c/ul\u003e\n      \u003c/li\u003e\n      \u003cli\u003e\u003ca href=\"#42-packaged-queries-and-reports\" id=\"markdown-toc-42-packaged-queries-and-reports\"\u003e4.2 Packaged Queries and Reports\u003c/a\u003e\u003c/li\u003e\n      \u003cli\u003e\u003ca href=\"#43-a-relational-database-system\" id=\"markdown-toc-43-a-relational-database-system\"\u003e4.3 A Relational Database System\u003c/a\u003e        \u003cul\u003e\n          \u003cli\u003e\u003ca href=\"#431-natural-joins\" id=\"markdown-toc-431-natural-joins\"\u003e4.3.1 Natural Joins\u003c/a\u003e\u003c/li\u003e\n          \u003cli\u003e\u003ca href=\"#432-the-relflle\" id=\"markdown-toc-432-the-relflle\"\u003e4.3.2 The relflle\u003c/a\u003e\u003c/li\u003e\n        \u003c/ul\u003e\n      \u003c/li\u003e\n    \u003c/ul\u003e\n  \u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch1 id=\"前言\"\u003e前言\u003c/h1\u003e\n\n\u003cp\u003eAwk 对输入行（line）进行过滤和操作，格式：\u003ccode class=\"language-plaintext highlighter-rouge\"\u003eawk \u0026#39;patterns { actions }\u0026#39; files\u003c/code\u003e，其中\u003c/p\u003e\n\n\u003cul\u003e\n  \u003cli\u003e\u003ccode class=\"language-plaintext highlighter-rouge\"\u003epattern\u003c/code\u003e：用于过滤出匹配的行（lines matched by any of the patterns）\u003c/li\u003e\n  \u003cli\u003e\u003ccode class=\"language-plaintext highlighter-rouge\"\u003eaction\u003c/code\u003e：对匹配的行执行的动作\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eAwk 自动扫描输入文件，将内容分割成行。由于输入、字段分割、存储管理、初始化等过程\n都是内部完成的，因此相比于其他编程语言，awk 写出的程序通常都非常简短。\u003c/p\u003e\n\n\u003ch2 id=\"awk-的演进\"\u003eAWK 的演进\u003c/h2\u003e\n\n\u003cp\u003e最初于 1977 年设计和实现，部分目的是尝试对 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003egrep\u003c/code\u003e 和 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003esed\u003c/code\u003e 的功能进行普适化扩展\n，以支持数字和文本处理。\u003c/p\u003e\n\n\u003cp\u003eAwk 的产生与我们对正则表达式和可编程编辑器（programmable editors）的兴趣是分不开的。\u003c/p\u003e\n\n\u003cp\u003eAwk 的设计初衷是\u003cstrong\u003e编写非常简短的程序\u003c/strong\u003e，但与其他工具的结合使其展现出巨大潜力，\n吸引到很多用户用 awk 编写更大的程序。初版的 awk 缺少了这些程序所需的部分特性，\n因此我们在 1985 年又发布了一个增强版。\u003c/p\u003e\n\n\u003cp\u003e\u003ca name=\"ch_1\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003ch1 id=\"1-awk-入门教程an-awk-tutorial\"\u003e1 AWK 入门教程（AN AWK TUTORIAL）\u003c/h1\u003e\n\n\u003cp\u003e\u003ca name=\"ch_1.1\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003ch2 id=\"11-getting-started\"\u003e1.1 Getting Started\u003c/h2\u003e\n\n\u003cp\u003eAwk 程序一般都很简短，只有一两行。\u003c/p\u003e\n\n\u003cp\u003e来看个例子，\u003ccode class=\"language-plaintext highlighter-rouge\"\u003eemp.data\u003c/code\u003e 文件内容：\u003c/p\u003e\n\n\u003cdiv class=\"language-plaintext highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e$ cat emp.data\nBeth  4.00 0\nDan   3.75 0\nKathy 4.00 10\nMark  5.00 20\nMary  5.50 22\nSusie 4.25 18\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e三列分别表示：员工姓名，时薪，工作时长。下面的程序计算工时非零的员工的工资：\u003c/p\u003e\n\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003e$ \u003c/span\u003e\u003cspan class=\"nb\"\u003eawk\u003c/span\u003e \u003cspan class=\"s1\"\u003e\u0026#39;$3 \u0026gt; 0 {print $1, $2 * $3}\u0026#39;\u003c/span\u003e emp.data\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cul\u003e\n  \u003cli\u003e\u003ccode class=\"language-plaintext highlighter-rouge\"\u003e$3 \u0026gt; 0\u003c/code\u003e 是 pattern：表示匹配\u003cstrong\u003e第 3 列大于 0 的行\u003c/strong\u003e（列号从 1 开始）\u003c/li\u003e\n  \u003cli\u003e\u003ccode class=\"language-plaintext highlighter-rouge\"\u003e{ print $1, $2 * $3 }\u003c/code\u003e 是 action：表示打印第 1 列、第 2 列和第 3 列的乘积\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003e打印工时为 0 的员工的名字：\u003c/p\u003e\n\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003e$ \u003c/span\u003e\u003cspan class=\"nb\"\u003eawk\u003c/span\u003e \u003cspan class=\"s1\"\u003e\u0026#39;$3 == 0 { print $1 }\u0026#39;\u003c/span\u003e emp.data\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003ch3 id=\"awk-程序的结构\"\u003eAWK 程序的结构\u003c/h3\u003e\n\n\u003cdiv class=\"language-plaintext highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003epattern { action }\npattern { action }\n...\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e\u003cstrong\u003epattern 和 action 都是可选的\u003c/strong\u003e（optional），因此\u003cstrong\u003e用 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003e{}\u003c/code\u003e 将 action 扩起来，以\n便与 pattern 区分开\u003c/strong\u003e。特别地，\u003c/p\u003e\n\n\u003cul\u003e\n  \u003cli\u003e\u003cstrong\u003e如果 pattern 为空\u003c/strong\u003e：例如 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003e{ print $1 }\u003c/code\u003e，则对所有行执行 action\u003c/li\u003e\n  \u003cli\u003e\u003cstrong\u003e如果 action 为空\u003c/strong\u003e：例如 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003e$3 == 0\u003c/code\u003e，则打印匹配的行（默认 action）\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch3 id=\"运行-awk-程序\"\u003e运行 AWK 程序\u003c/h3\u003e\n\n\u003col\u003e\n  \u003cli\u003e\n    \u003cp\u003e\u003ccode class=\"language-plaintext highlighter-rouge\"\u003eawk \u0026#39;\u0026lt;awk code\u0026gt;\u0026#39;          \u0026lt;list of input files\u0026gt;\u003c/code\u003e\u003c/p\u003e\n\n    \u003cp\u003e注意这种方式中，\u003cstrong\u003eAWK 程序是用单引号括起来的，好处：\u003c/strong\u003e\u003c/p\u003e\n\n    \u003cul\u003e\n      \u003cli\u003e避免 shell 对特殊符号（例如 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003e$\u003c/code\u003e）进行解释\u003c/li\u003e\n      \u003cli\u003e使得长程序可以跨行（allows the program to be longer than one line）\u003c/li\u003e\n    \u003c/ul\u003e\n  \u003c/li\u003e\n  \u003cli\u003e\n    \u003cp\u003e\u003ccode class=\"language-plaintext highlighter-rouge\"\u003eawk -f \u0026lt;awk program file\u0026gt; \u0026lt;list of input files\u0026gt;\u003c/code\u003e\u003c/p\u003e\n  \u003c/li\u003e\n\u003c/ol\u003e\n\n\u003cp\u003e\u003ca name=\"ch_1.2\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003ch2 id=\"12-基本输出simple-output\"\u003e1.2 基本输出（Simple Output）\u003c/h2\u003e\n\n\u003cp\u003eAwk 中\u003cstrong\u003e只有两种数据类型\u003c/strong\u003e：\u003c/p\u003e\n\n\u003col\u003e\n  \u003cli\u003e数字（number）\u003c/li\u003e\n  \u003cli\u003e字符串（strings of characters.）\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003cp\u003eAwk 读取每行，然后以空格或 tab 将行分割成多个字段（列），其中：\u003c/p\u003e\n\n\u003cul\u003e\n  \u003cli\u003e\u003ccode class=\"language-plaintext highlighter-rouge\"\u003e$1\u003c/code\u003e、\u003ccode class=\"language-plaintext highlighter-rouge\"\u003e$2\u003c/code\u003e、\u003ccode class=\"language-plaintext highlighter-rouge\"\u003e$3\u003c/code\u003e：分别表示第 1、2、3 个字段（列）\u003c/li\u003e\n  \u003cli\u003e\u003ccode class=\"language-plaintext highlighter-rouge\"\u003e$0\u003c/code\u003e：该行（the entire line）\u003c/li\u003e\n  \u003cli\u003e\u003ccode class=\"language-plaintext highlighter-rouge\"\u003eNF\u003c/code\u003e：字段数量（Number of Fields），即列数\u003c/li\u003e\n  \u003cli\u003e\u003ccode class=\"language-plaintext highlighter-rouge\"\u003e$NF\u003c/code\u003e、\u003ccode class=\"language-plaintext highlighter-rouge\"\u003e$(NF-1)\u003c/code\u003e：最后一个字段（最后一列）、倒数第二个字段（列）\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch3 id=\"例子\"\u003e例子\u003c/h3\u003e\n\n\u003cul\u003e\n  \u003cli\u003e打印整行：\u003ccode class=\"language-plaintext highlighter-rouge\"\u003e{ print }\u003c/code\u003e 或 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003e{ print $0 }\u003c/code\u003e\u003c/li\u003e\n  \u003cli\u003e打印第 1 和 3 列：\u003ccode class=\"language-plaintext highlighter-rouge\"\u003e{ print $1, $3 }\u003c/code\u003e\u003c/li\u003e\n  \u003cli\u003e打印列数、第 1 列、最后一列、倒数第 2 列：\u003ccode class=\"language-plaintext highlighter-rouge\"\u003e{ print NF, $1, $NF, $(NF-1) }\u003c/code\u003e\u003c/li\u003e\n  \u003cli\u003e打印第 1 列、第 2、3 列之积：\u003ccode class=\"language-plaintext highlighter-rouge\"\u003e{ print $1, $2 * $3 }\u003c/code\u003e\u003c/li\u003e\n  \u003cli\u003e打印行并加上行号：\u003ccode class=\"language-plaintext highlighter-rouge\"\u003e{ print NR, $0 }\u003c/code\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003e$ \u003c/span\u003e\u003cspan class=\"nb\"\u003eawk\u003c/span\u003e \u003cspan class=\"s1\"\u003e\u0026#39;{ print NR, $0 }` emp.data\n1 Beth  4.00 0\n2 Dan   3.75 0\n3 Kathy 4.00 10\n...\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e混合以上几种（字符串、指定列、指定运算等等）：\u003c/p\u003e\n\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003e$ \u003c/span\u003e\u003cspan class=\"nb\"\u003eawk\u003c/span\u003e \u003cspan class=\"s1\"\u003e\u0026#39;{ print \u0026#34;total pay for\u0026#34;, $1, \u0026#34;is\u0026#34;, $2 * $3 }\u0026#39;\u003c/span\u003e emp.data\ntotal pay \u003cspan class=\"k\"\u003efor \u003c/span\u003eBeth is 0\ntotal pay \u003cspan class=\"k\"\u003efor \u003c/span\u003eDan is 0\ntotal pay \u003cspan class=\"k\"\u003efor \u003c/span\u003eKathy is 40\n...\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e\u003ca name=\"ch_1.3\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003ch2 id=\"13-高级输出fancier-output\"\u003e1.3 高级输出（Fancier Output）\u003c/h2\u003e\n\n\u003cp\u003e2.4 将会看到，\u003ccode class=\"language-plaintext highlighter-rouge\"\u003eprintf\u003c/code\u003e 几乎能以任何格式输出。来看两个例子。\u003c/p\u003e\n\n\u003ch3 id=\"printf-格式化输出\"\u003e\u003ccode class=\"language-plaintext highlighter-rouge\"\u003eprintf\u003c/code\u003e 格式化输出\u003c/h3\u003e\n\n\u003cp\u003e格式：\u003ccode class=\"language-plaintext highlighter-rouge\"\u003eprintf (format, value1 , value2 , ... , value,)\u003c/code\u003e\u003c/p\u003e\n\n\u003cp\u003e还是前面的例子，用 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eprintf\u003c/code\u003e 格式化输出：\u003c/p\u003e\n\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003e$ \u003c/span\u003e\u003cspan class=\"nb\"\u003eawk\u003c/span\u003e \u003cspan class=\"s1\"\u003e\u0026#39;{ printf(\u0026#34;total pay for %s is $%.2f\\n\u0026#34;, $1, $2 * $3) }\u0026#39;\u003c/span\u003e emp.data\ntotal pay \u003cspan class=\"k\"\u003efor \u003c/span\u003eBeth is \u003cspan class=\"nv\"\u003e$0\u003c/span\u003e.00\ntotal pay \u003cspan class=\"k\"\u003efor \u003c/span\u003eDan is \u003cspan class=\"nv\"\u003e$0\u003c/span\u003e.00\ntotal pay \u003cspan class=\"k\"\u003efor \u003c/span\u003eKathy is \u003cspan class=\"nv\"\u003e$40\u003c/span\u003e.00\n...\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e注意，\u003cstrong\u003e\u003ccode class=\"language-plaintext highlighter-rouge\"\u003eprint\u003c/code\u003e 会自动加换行符，而 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eprintf\u003c/code\u003e 不会\u003c/strong\u003e。\u003c/p\u003e\n\n\u003ch3 id=\"排序输出\"\u003e排序输出\u003c/h3\u003e\n\n\u003cp\u003e计算总工资，并按总工资排序，字段顺序为总工资、名字、时薪和工时：\u003c/p\u003e\n\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003e$ \u003c/span\u003e\u003cspan class=\"nb\"\u003eawk\u003c/span\u003e \u003cspan class=\"s1\"\u003e\u0026#39;{ printf(\u0026#34;%6.2f %s\\n\u0026#34;, $2 * $3, $0) }\u0026#39;\u003c/span\u003e emp.data | \u003cspan class=\"nb\"\u003esort\u003c/span\u003e\n  ...\n 40.00 Kathy 4.00 10\n 76.50 Susie 4.25 18\n100.00 Mark  5.00 20\n121.00 Mary  5.50 22\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e\u003ca name=\"ch_1.4\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003ch2 id=\"14-选择过滤行selection\"\u003e1.4 选择/过滤行（Selection）\u003c/h2\u003e\n\n\u003ch3 id=\"按某列的值\"\u003e按某列的值\u003c/h3\u003e\n\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003e$ \u003c/span\u003e\u003cspan class=\"nb\"\u003eawk\u003c/span\u003e \u003cspan class=\"s1\"\u003e\u0026#39;$2 \u0026gt;= 5\u0026#39;\u003c/span\u003e emp.data\nMark  5.00 20\nMary  5.50 22\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003ch3 id=\"按某几列值的计算结果\"\u003e按某几列值的计算结果\u003c/h3\u003e\n\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003e$ \u003c/span\u003e\u003cspan class=\"nb\"\u003eawk\u003c/span\u003e \u003cspan class=\"s1\"\u003e\u0026#39;$2 * $3 \u0026gt; 50 { printf(\u0026#34;$%.2f for %s\\n\u0026#34;, $2 * $3, $1) }\u0026#39;\u003c/span\u003e emp.data\n\u003cspan class=\"nv\"\u003e$100\u003c/span\u003e.00 \u003cspan class=\"k\"\u003efor \u003c/span\u003eMark\n\u003cspan class=\"nv\"\u003e$121\u003c/span\u003e.00 \u003cspan class=\"k\"\u003efor \u003c/span\u003eMary\n\u003cspan class=\"nv\"\u003e$76\u003c/span\u003e.50 \u003cspan class=\"k\"\u003efor \u003c/span\u003eSusie\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003ch3 id=\"按字符串匹配\"\u003e按字符串匹配\u003c/h3\u003e\n\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003e$ \u003c/span\u003e\u003cspan class=\"nb\"\u003eawk\u003c/span\u003e \u003cspan class=\"s1\"\u003e\u0026#39;$1 == \u0026#34;Susie\u0026#34; { printf(\u0026#34;$%.2f for %s\\n\u0026#34;, $2 * $3, $1) }\u0026#39;\u003c/span\u003e emp.data\n\u003cspan class=\"nv\"\u003e$76\u003c/span\u003e.50 \u003cspan class=\"k\"\u003efor \u003c/span\u003eSusie\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e也可以用正则表达式：\u003c/p\u003e\n\n\u003cdiv class=\"language-plaintext highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e$ awk \u0026#39;/Susie/ { printf(\u0026#34;$%.2f for %s\\n\u0026#34;, $2 * $3, $1) }\u0026#39; emp.data\n$76.50 for Susie\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003ch3 id=\"不同方式的组合\"\u003e不同方式的组合\u003c/h3\u003e\n\n\u003cul\u003e\n  \u003cli\u003e\u003ccode class=\"language-plaintext highlighter-rouge\"\u003e$2 \u0026gt;= 4 || $3 \u0026gt;= 20\u003c/code\u003e\u003c/li\u003e\n  \u003cli\u003e\u003ccode class=\"language-plaintext highlighter-rouge\"\u003e!($2 \u0026lt; 4 \u0026amp;\u0026amp; $3 \u0026lt; 20)\u003c/code\u003e\u003c/li\u003e\n  \u003cli\u003e\u003ccode class=\"language-plaintext highlighter-rouge\"\u003eNF != 3 { print $0, \u0026#34;number of fields is not equal to 3\u0026#34; }\u003c/code\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch3 id=\"begin-和-end\"\u003e\u003ccode class=\"language-plaintext highlighter-rouge\"\u003eBEGIN\u003c/code\u003e 和 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eEND\u003c/code\u003e\u003c/h3\u003e\n\n\u003cul\u003e\n  \u003cli\u003e\u003ccode class=\"language-plaintext highlighter-rouge\"\u003eBEGIN\u003c/code\u003e：在第一行之前匹配（即，在程序开始时\u003cstrong\u003e执行且只执行一次\u003c/strong\u003e）\u003c/li\u003e\n  \u003cli\u003e\u003ccode class=\"language-plaintext highlighter-rouge\"\u003eEND\u003c/code\u003e：在最后一行之后匹配（即，在程序结束之前\u003cstrong\u003e执行且只执行一次\u003c/strong\u003e）\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003e$ \u003c/span\u003e\u003cspan class=\"nb\"\u003eawk\u003c/span\u003e \u003cspan class=\"s1\"\u003e\u0026#39;BEGIN { print \u0026#34;NAME  RATE HOURS\u0026#34;; print \u0026#34;\u0026#34; } { print }\u0026#39;\u003c/span\u003e emp.data\nNAME  RATE HOURS\n\nBeth  4.00 0\nDan   3.75 0\nKathy 4.00 10\nMark  5.00 20\nMary  5.50 22\nSusie 4.25 18\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e注意其中 \u003cstrong\u003e\u003ccode class=\"language-plaintext highlighter-rouge\"\u003eprint \u0026#34;\u0026#34;\u003c/code\u003e 并不是什么都没做，而是打印了一个空行\u003c/strong\u003e；相同的功能，用 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eprintf\u003c/code\u003e 实现为：\u003c/p\u003e\n\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003e$ \u003c/span\u003e\u003cspan class=\"nb\"\u003eawk\u003c/span\u003e \u003cspan class=\"s1\"\u003e\u0026#39;BEGIN { printf \u0026#34;NAME  RATE HOURS\\n\\n\u0026#34;; } { print }\u0026#39;\u003c/span\u003e emp.data\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e\u003ca name=\"ch_1.5\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003ch2 id=\"15-计算computing-with-awk\"\u003e1.5 计算（Computing with AWK）\u003c/h2\u003e\n\n\u003cp\u003eaction 是用\u003cstrong\u003e换行\u003c/strong\u003e或\u003cstrong\u003e分号\u003c/strong\u003e隔开的一系列 statements。\u003c/p\u003e\n\n\u003ch3 id=\"统计数量工时超过-15-小时的员工人数\"\u003e统计数量：工时超过 15 小时的员工人数\u003c/h3\u003e\n\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003e$ \u003c/span\u003e\u003cspan class=\"nb\"\u003ecat \u003c/span\u003ecount.awk\n\u003cspan class=\"nv\"\u003e$3\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e 15 \u003cspan class=\"o\"\u003e{\u003c/span\u003e emp \u003cspan class=\"o\"\u003e=\u003c/span\u003e emp + 1 \u003cspan class=\"o\"\u003e}\u003c/span\u003e\nEND \u003cspan class=\"o\"\u003e{\u003c/span\u003e print emp, \u003cspan class=\"s2\"\u003e\u0026#34;employees worked more than 15 hours\u0026#34;\u003c/span\u003e \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"nv\"\u003e$ \u003c/span\u003e\u003cspan class=\"nb\"\u003eawk\u003c/span\u003e \u003cspan class=\"nt\"\u003e-f\u003c/span\u003e count.awk emp.data\n3 employees worked more than 15 hours\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e\u003cstrong\u003e数值类型的变量默认初始化为 0\u003c/strong\u003e，因此我们不需要自己初始化 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eemp\u003c/code\u003e 变量。\u003c/p\u003e\n\n\u003ch3 id=\"求和求平均平均工资\"\u003e求和、求平均：平均工资\u003c/h3\u003e\n\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003e$ \u003c/span\u003e\u003cspan class=\"nb\"\u003ecat \u003c/span\u003eavg.awk\n    \u003cspan class=\"o\"\u003e{\u003c/span\u003e pay \u003cspan class=\"o\"\u003e=\u003c/span\u003e pay + \u003cspan class=\"nv\"\u003e$2\u003c/span\u003e \u003cspan class=\"k\"\u003e*\u003c/span\u003e \u003cspan class=\"nv\"\u003e$3\u003c/span\u003e \u003cspan class=\"o\"\u003e}\u003c/span\u003e\nEND \u003cspan class=\"o\"\u003e{\u003c/span\u003e print NR, \u003cspan class=\"s2\"\u003e\u0026#34;employees\u0026#34;\u003c/span\u003e\n      print \u003cspan class=\"s2\"\u003e\u0026#34;total pay is\u0026#34;\u003c/span\u003e, pay\n      print \u003cspan class=\"s2\"\u003e\u0026#34;average pay is\u0026#34;\u003c/span\u003e, pay/NR\n    \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"nv\"\u003e$ \u003c/span\u003e\u003cspan class=\"nb\"\u003eawk\u003c/span\u003e \u003cspan class=\"nt\"\u003e-f\u003c/span\u003e avg.awk emp.data\n6 employees\ntotal pay is 337.5\naverage pay is 56.25\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003ch3 id=\"处理文本打印时薪最高的员工信息\"\u003e处理文本：打印时薪最高的员工信息\u003c/h3\u003e\n\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003e$ \u003c/span\u003e\u003cspan class=\"nb\"\u003ecat \u003c/span\u003emax.awk\n\u003cspan class=\"nv\"\u003e$2\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e maxrate \u003cspan class=\"o\"\u003e{\u003c/span\u003e maxrate \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nv\"\u003e$2\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e maxemp \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nv\"\u003e$1\u003c/span\u003e \u003cspan class=\"o\"\u003e}\u003c/span\u003e\nEND \u003cspan class=\"o\"\u003e{\u003c/span\u003e print \u003cspan class=\"s2\"\u003e\u0026#34;highest hourly rate:\u0026#34;\u003c/span\u003e, maxrate, \u003cspan class=\"s2\"\u003e\u0026#34;for\u0026#34;\u003c/span\u003e, maxemp \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"nv\"\u003e$ \u003c/span\u003e\u003cspan class=\"nb\"\u003eawk\u003c/span\u003e \u003cspan class=\"nt\"\u003e-f\u003c/span\u003e max.awk emp.data\nhighest hourly rate: 5.50 \u003cspan class=\"k\"\u003efor \u003c/span\u003eMary\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003ch3 id=\"字符串拼接concatenation在一行内打印所有员工名\"\u003e字符串拼接（concatenation）：在一行内打印所有员工名\u003c/h3\u003e\n\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003e$ \u003c/span\u003e\u003cspan class=\"nb\"\u003ecat \u003c/span\u003econcat.awk\n    \u003cspan class=\"o\"\u003e{\u003c/span\u003e names \u003cspan class=\"o\"\u003e=\u003c/span\u003e names \u003cspan class=\"nv\"\u003e$1\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34; \u0026#34;\u003c/span\u003e \u003cspan class=\"o\"\u003e}\u003c/span\u003e\nEND \u003cspan class=\"o\"\u003e{\u003c/span\u003e print names \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"nv\"\u003e$ \u003c/span\u003e\u003cspan class=\"nb\"\u003eawk\u003c/span\u003e \u003cspan class=\"nt\"\u003e-f\u003c/span\u003e concat.awk emp.data\nBeth Dan Kathy Mark Mary Susie\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e类似地，\u003cstrong\u003e字符串类型的变量自动初始化为空字符串\u003c/strong\u003e，因此 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003enames\u003c/code\u003e 变量不需要显式初始化。\u003c/p\u003e\n\n\u003ch3 id=\"打印最后一行\"\u003e打印最后一行\u003c/h3\u003e\n\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003e$ \u003c/span\u003e\u003cspan class=\"nb\"\u003ecat \u003c/span\u003elastline.awk\n    \u003cspan class=\"o\"\u003e{\u003c/span\u003e last \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nv\"\u003e$0\u003c/span\u003e \u003cspan class=\"o\"\u003e}\u003c/span\u003e\nEND \u003cspan class=\"o\"\u003e{\u003c/span\u003e print last \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"nv\"\u003e$ \u003c/span\u003e\u003cspan class=\"nb\"\u003eawk\u003c/span\u003e \u003cspan class=\"nt\"\u003e-f\u003c/span\u003e lastline.awk emp.data\nSusie 4.25 18\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003ch3 id=\"内置函数built-in-functions\"\u003e内置函数（Built-in Functions）\u003c/h3\u003e\n\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003e$ \u003c/span\u003e\u003cspan class=\"nb\"\u003eawk\u003c/span\u003e \u003cspan class=\"s1\"\u003e\u0026#39;{ print $1, length($1) }\u0026#39;\u003c/span\u003e emp.data\nBeth 4\nDan 3\n...\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003ch3 id=\"统计行数单词数字符数\"\u003e统计行数、单词数、字符数\u003c/h3\u003e\n\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003e$ \u003c/span\u003e\u003cspan class=\"nb\"\u003ecat \u003c/span\u003ecount2.awk\n    \u003cspan class=\"o\"\u003e{\u003c/span\u003e nc \u003cspan class=\"o\"\u003e=\u003c/span\u003e nc + length\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e$0\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e + 1    \u003cspan class=\"c\"\u003e# 字符串 $0 不包含换行符，因此我们自己 +1\u003c/span\u003e\n      nw \u003cspan class=\"o\"\u003e=\u003c/span\u003e nw + NF\n    \u003cspan class=\"o\"\u003e}\u003c/span\u003e\nEND \u003cspan class=\"o\"\u003e{\u003c/span\u003e print NR, \u003cspan class=\"s2\"\u003e\u0026#34;lines\u0026#34;\u003c/span\u003e, nw, \u003cspan class=\"s2\"\u003e\u0026#34;words,\u0026#34;\u003c/span\u003e, nc, \u003cspan class=\"s2\"\u003e\u0026#34;characters\u0026#34;\u003c/span\u003e \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"nv\"\u003e$ \u003c/span\u003e\u003cspan class=\"nb\"\u003eawk\u003c/span\u003e \u003cspan class=\"nt\"\u003e-f\u003c/span\u003e count2.awk emp.data\n6 lines 18 words, 82 characters\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e\u003ca name=\"ch_1.6\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003ch2 id=\"16-控制流-statements\"\u003e1.6 控制流 Statements\u003c/h2\u003e\n\n\u003ch3 id=\"if-else\"\u003eIf-Else\u003c/h3\u003e\n\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003e$ \u003c/span\u003e\u003cspan class=\"nb\"\u003ecat \u003c/span\u003e\u003cspan class=\"k\"\u003eif\u003c/span\u003e.awk\n\u003cspan class=\"nv\"\u003e$2\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e 6 \u003cspan class=\"o\"\u003e{\u003c/span\u003e n \u003cspan class=\"o\"\u003e=\u003c/span\u003e n + 1\u003cspan class=\"p\"\u003e;\u003c/span\u003e pay \u003cspan class=\"o\"\u003e=\u003c/span\u003e pay + \u003cspan class=\"nv\"\u003e$2\u003c/span\u003e \u003cspan class=\"k\"\u003e*\u003c/span\u003e \u003cspan class=\"nv\"\u003e$3\u003c/span\u003e \u003cspan class=\"o\"\u003e}\u003c/span\u003e\nEND    \u003cspan class=\"o\"\u003e{\u003c/span\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"o\"\u003e(\u003c/span\u003en \u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e 0\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n            print n, \u003cspan class=\"s2\"\u003e\u0026#34;employees total pay is\u0026#34;\u003c/span\u003e, pay,\n                \u003cspan class=\"s2\"\u003e\u0026#34;average pay is\u0026#34;\u003c/span\u003e, pay/n\n        \u003cspan class=\"k\"\u003eelse\n            \u003c/span\u003eprint \u003cspan class=\"s2\"\u003e\u0026#34;no employees are paid more than \u003c/span\u003e\u003cspan class=\"nv\"\u003e$6\u003c/span\u003e\u003cspan class=\"s2\"\u003e/hour\u0026#34;\u003c/span\u003e\n       \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"nv\"\u003e$ \u003c/span\u003e\u003cspan class=\"nb\"\u003eawk\u003c/span\u003e \u003cspan class=\"nt\"\u003e-f\u003c/span\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e.awk emp.data\nno employees are paid more than \u003cspan class=\"nv\"\u003e$6\u003c/span\u003e/hour\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e注意到\u003cstrong\u003e逗号可以将较长的行分为多行\u003c/strong\u003e。\u003c/p\u003e\n\n\u003ch3 id=\"while\"\u003eWhile\u003c/h3\u003e\n\n\u003cp\u003e计算复利：\u003c/p\u003e\n\n\u003cul\u003e\n  \u003cli\u003e输入格式：本金 利率 年限\u003c/li\u003e\n  \u003cli\u003e输出格式：每年的本金和利息之和\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003e$ \u003c/span\u003e\u003cspan class=\"nb\"\u003ecat \u003c/span\u003einterest1.awk\n\u003cspan class=\"o\"\u003e{\u003c/span\u003e i \u003cspan class=\"o\"\u003e=\u003c/span\u003e 1\n  \u003cspan class=\"k\"\u003ewhile\u003c/span\u003e \u003cspan class=\"o\"\u003e(\u003c/span\u003ei \u0026lt;\u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nv\"\u003e$3\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n      \u003cspan class=\"nb\"\u003eprintf\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"se\"\u003e\\t\u003c/span\u003e\u003cspan class=\"s2\"\u003e%.2f\u003c/span\u003e\u003cspan class=\"se\"\u003e\\n\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;\u003c/span\u003e, \u003cspan class=\"nv\"\u003e$1\u003c/span\u003e \u003cspan class=\"k\"\u003e*\u003c/span\u003e \u003cspan class=\"o\"\u003e(\u003c/span\u003e1 + \u003cspan class=\"nv\"\u003e$2\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e ^ i\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n      i \u003cspan class=\"o\"\u003e=\u003c/span\u003e i + 1\n  \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"nv\"\u003e$ \u003c/span\u003e\u003cspan class=\"nb\"\u003eawk\u003c/span\u003e \u003cspan class=\"nt\"\u003e-f\u003c/span\u003e interest1.awk\n1000 0.6 5\n        1600.00\n        2560.00\n        4096.00\n        6553.60\n        10485.76\n^C\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003ch3 id=\"for\"\u003eFor\u003c/h3\u003e\n\n\u003cp\u003e还是计算复利，用 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003efor\u003c/code\u003e 实现：\u003c/p\u003e\n\n\u003cdiv class=\"language-plaintext highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e$ cat interest2.awk\n{ for (i=1; i\u0026lt;=$3; i++)\n      printf(\u0026#34;\\t%.2f\\n\u0026#34;, $1 * (1 + $2) ^ i)\n}\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e\u003ca name=\"ch_1.7\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003ch2 id=\"17-数组\"\u003e1.7 数组\u003c/h2\u003e\n\n\u003cp\u003e以行倒序打印，\u003ccode class=\"language-plaintext highlighter-rouge\"\u003ewhile\u003c/code\u003e 实现：\u003c/p\u003e\n\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003e$ \u003c/span\u003e\u003cspan class=\"nb\"\u003ecat \u003c/span\u003earray1.awk\n    \u003cspan class=\"o\"\u003e{\u003c/span\u003e line[NR] \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nv\"\u003e$0\u003c/span\u003e \u003cspan class=\"o\"\u003e}\u003c/span\u003e \u003cspan class=\"c\"\u003e# remember each input line\u003c/span\u003e\nEND \u003cspan class=\"o\"\u003e{\u003c/span\u003e i \u003cspan class=\"o\"\u003e=\u003c/span\u003e NR          \u003cspan class=\"c\"\u003e# print lines in reverse order\u003c/span\u003e\n      \u003cspan class=\"k\"\u003ewhile\u003c/span\u003e \u003cspan class=\"o\"\u003e(\u003c/span\u003ei \u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e 0\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n          print line[i--]\n      \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n    \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"nv\"\u003e$ \u003c/span\u003e\u003cspan class=\"nb\"\u003eawk\u003c/span\u003e \u003cspan class=\"nt\"\u003e-f\u003c/span\u003e array1.awk emp.data\nSusie 4.25 18\nMary  5.50 22\nMark  5.00 20\nKathy 4.00 10\nDan   3.75 0\nBeth  4.00 0\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e\u003ccode class=\"language-plaintext highlighter-rouge\"\u003efor\u003c/code\u003e 实现：\u003c/p\u003e\n\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003e$ \u003c/span\u003e\u003cspan class=\"nb\"\u003ecat \u003c/span\u003earray2.awk\n    \u003cspan class=\"o\"\u003e{\u003c/span\u003e line[NR] \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nv\"\u003e$0\u003c/span\u003e \u003cspan class=\"o\"\u003e}\u003c/span\u003e\nEND \u003cspan class=\"o\"\u003e{\u003c/span\u003e \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003ei\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003eNR\u003cspan class=\"p\"\u003e;\u003c/span\u003e i\u0026gt;0\u003cspan class=\"p\"\u003e;\u003c/span\u003e i--\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n          print line[i]\n      \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n    \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e\u003ca name=\"ch_1.8\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003ch2 id=\"18-实用单行命令one-liners\"\u003e1.8 实用单行命令（One-liners）\u003c/h2\u003e\n\n\u003cp\u003e\u003ccode class=\"language-plaintext highlighter-rouge\"\u003eawk \u0026#39;\u0026lt;program\u0026gt;\u0026#39; \u0026lt;input\u0026gt;\u003c/code\u003e，不同功能的 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003e\u0026lt;program\u0026gt;\u003c/code\u003e 如下：\u003c/p\u003e\n\n\u003ctable\u003e\n  \u003cthead\u003e\n    \u003ctr\u003e\n      \u003cth style=\"text-align: left\"\u003e编号\u003c/th\u003e\n      \u003cth style=\"text-align: left\"\u003e功能\u003c/th\u003e\n      \u003cth style=\"text-align: left\"\u003eAWK 程序\u003c/th\u003e\n      \u003cth style=\"text-align: left\"\u003e类似效果的命令\u003c/th\u003e\n    \u003c/tr\u003e\n  \u003c/thead\u003e\n  \u003ctbody\u003e\n    \u003ctr\u003e\n      \u003ctd style=\"text-align: left\"\u003e1\u003c/td\u003e\n      \u003ctd style=\"text-align: left\"\u003e打印总行数\u003c/td\u003e\n      \u003ctd style=\"text-align: left\"\u003e\u003ccode class=\"language-plaintext highlighter-rouge\"\u003eEND { print NR }\u003c/code\u003e\u003c/td\u003e\n      \u003ctd style=\"text-align: left\"\u003e\u003ccode class=\"language-plaintext highlighter-rouge\"\u003ecat \u0026lt;file\u0026gt; | wc -l\u003c/code\u003e\u003c/td\u003e\n    \u003c/tr\u003e\n    \u003ctr\u003e\n      \u003ctd style=\"text-align: left\"\u003e2\u003c/td\u003e\n      \u003ctd style=\"text-align: left\"\u003e打印第 10 行\u003c/td\u003e\n      \u003ctd style=\"text-align: left\"\u003e\u003ccode class=\"language-plaintext highlighter-rouge\"\u003eNR == 10\u003c/code\u003e\u003c/td\u003e\n      \u003ctd style=\"text-align: left\"\u003e\u003ccode class=\"language-plaintext highlighter-rouge\"\u003ehead -n10 \u0026lt;file\u0026gt; | tail -n1\u003c/code\u003e\u003c/td\u003e\n    \u003c/tr\u003e\n    \u003ctr\u003e\n      \u003ctd style=\"text-align: left\"\u003e3\u003c/td\u003e\n      \u003ctd style=\"text-align: left\"\u003e打印最后一列\u003c/td\u003e\n      \u003ctd style=\"text-align: left\"\u003e\u003ccode class=\"language-plaintext highlighter-rouge\"\u003e{ print $NF }\u003c/code\u003e\u003c/td\u003e\n      \u003ctd style=\"text-align: left\"\u003e \u003c/td\u003e\n    \u003c/tr\u003e\n    \u003ctr\u003e\n      \u003ctd style=\"text-align: left\"\u003e4\u003c/td\u003e\n      \u003ctd style=\"text-align: left\"\u003e打印最后一行的最后一列\u003c/td\u003e\n      \u003ctd style=\"text-align: left\"\u003e\u003ccode class=\"language-plaintext highlighter-rouge\"\u003e{ f = $NF } END { print f }\u003c/code\u003e\u003c/td\u003e\n      \u003ctd style=\"text-align: left\"\u003e \u003c/td\u003e\n    \u003c/tr\u003e\n    \u003ctr\u003e\n      \u003ctd style=\"text-align: left\"\u003e5\u003c/td\u003e\n      \u003ctd style=\"text-align: left\"\u003e打印有 4 列以上的行\u003c/td\u003e\n      \u003ctd style=\"text-align: left\"\u003e\u003ccode class=\"language-plaintext highlighter-rouge\"\u003eNF \u0026gt; 4\u003c/code\u003e\u003c/td\u003e\n      \u003ctd style=\"text-align: left\"\u003e \u003c/td\u003e\n    \u003c/tr\u003e\n    \u003ctr\u003e\n      \u003ctd style=\"text-align: left\"\u003e6\u003c/td\u003e\n      \u003ctd style=\"text-align: left\"\u003e打印最后一列的值大于 4 的行\u003c/td\u003e\n      \u003ctd style=\"text-align: left\"\u003e\u003ccode class=\"language-plaintext highlighter-rouge\"\u003e$NF \u0026gt; 4\u003c/code\u003e\u003c/td\u003e\n      \u003ctd style=\"text-align: left\"\u003e \u003c/td\u003e\n    \u003c/tr\u003e\n    \u003ctr\u003e\n      \u003ctd style=\"text-align: left\"\u003e7\u003c/td\u003e\n      \u003ctd style=\"text-align: left\"\u003e打印所有输入的总字段数\u003c/td\u003e\n      \u003ctd style=\"text-align: left\"\u003e\u003ccode class=\"language-plaintext highlighter-rouge\"\u003e{ nf += NF } END { print nf }\u003c/code\u003e\u003c/td\u003e\n      \u003ctd style=\"text-align: left\"\u003e \u003c/td\u003e\n    \u003c/tr\u003e\n    \u003ctr\u003e\n      \u003ctd style=\"text-align: left\"\u003e8\u003c/td\u003e\n      \u003ctd style=\"text-align: left\"\u003e打印包含 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eBeth\u003c/code\u003e 的总行数\u003c/td\u003e\n      \u003ctd style=\"text-align: left\"\u003e\u003ccode class=\"language-plaintext highlighter-rouge\"\u003e/Beth/ { n++ } END { print n }\u003c/code\u003e\u003c/td\u003e\n      \u003ctd style=\"text-align: left\"\u003e \u003c/td\u003e\n    \u003c/tr\u003e\n    \u003ctr\u003e\n      \u003ctd style=\"text-align: left\"\u003e9\u003c/td\u003e\n      \u003ctd style=\"text-align: left\"\u003e打印第 1 列的最大值及对应的行（假设第 1 列为正）\u003c/td\u003e\n      \u003ctd style=\"text-align: left\"\u003e\u003ccode class=\"language-plaintext highlighter-rouge\"\u003e$1 \u0026gt; max { max = $1; line = $0 } END { print max, line }\u003c/code\u003e\u003c/td\u003e\n      \u003ctd style=\"text-align: left\"\u003e \u003c/td\u003e\n    \u003c/tr\u003e\n    \u003ctr\u003e\n      \u003ctd style=\"text-align: left\"\u003e10\u003c/td\u003e\n      \u003ctd style=\"text-align: left\"\u003e打印列数大于 1 的行\u003c/td\u003e\n      \u003ctd style=\"text-align: left\"\u003e\u003ccode class=\"language-plaintext highlighter-rouge\"\u003eNF \u0026gt; 1\u003c/code\u003e\u003c/td\u003e\n      \u003ctd style=\"text-align: left\"\u003e \u003c/td\u003e\n    \u003c/tr\u003e\n    \u003ctr\u003e\n      \u003ctd style=\"text-align: left\"\u003e11\u003c/td\u003e\n      \u003ctd style=\"text-align: left\"\u003e打印长度大于 80 的行\u003c/td\u003e\n      \u003ctd style=\"text-align: left\"\u003e\u003ccode class=\"language-plaintext highlighter-rouge\"\u003elength($0) \u0026gt; 80\u003c/code\u003e\u003c/td\u003e\n      \u003ctd style=\"text-align: left\"\u003e \u003c/td\u003e\n    \u003c/tr\u003e\n    \u003ctr\u003e\n      \u003ctd style=\"text-align: left\"\u003e12\u003c/td\u003e\n      \u003ctd style=\"text-align: left\"\u003e打印每行的列数，及该行\u003c/td\u003e\n      \u003ctd style=\"text-align: left\"\u003e\u003ccode class=\"language-plaintext highlighter-rouge\"\u003e{ print NF, $0 }\u003c/code\u003e\u003c/td\u003e\n      \u003ctd style=\"text-align: left\"\u003e \u003c/td\u003e\n    \u003c/tr\u003e\n    \u003ctr\u003e\n      \u003ctd style=\"text-align: left\"\u003e13\u003c/td\u003e\n      \u003ctd style=\"text-align: left\"\u003e打印第 2, 1 列\u003c/td\u003e\n      \u003ctd style=\"text-align: left\"\u003e\u003ccode class=\"language-plaintext highlighter-rouge\"\u003e{ print $2, $1 }\u003c/code\u003e\u003c/td\u003e\n      \u003ctd style=\"text-align: left\"\u003e \u003c/td\u003e\n    \u003c/tr\u003e\n    \u003ctr\u003e\n      \u003ctd style=\"text-align: left\"\u003e14\u003c/td\u003e\n      \u003ctd style=\"text-align: left\"\u003e交换第 1, 2 列，打印全部行\u003c/td\u003e\n      \u003ctd style=\"text-align: left\"\u003e\u003ccode class=\"language-plaintext highlighter-rouge\"\u003e{ t = $1; $1 ~ $2; $2 = t; print }\u003c/code\u003e\u003c/td\u003e\n      \u003ctd style=\"text-align: left\"\u003e \u003c/td\u003e\n    \u003c/tr\u003e\n    \u003ctr\u003e\n      \u003ctd style=\"text-align: left\"\u003e15\u003c/td\u003e\n      \u003ctd style=\"text-align: left\"\u003e第 1 列换成行号，打印全部行\u003c/td\u003e\n      \u003ctd style=\"text-align: left\"\u003e\u003ccode class=\"language-plaintext highlighter-rouge\"\u003e{ $1 = NR; print }\u003c/code\u003e\u003c/td\u003e\n      \u003ctd style=\"text-align: left\"\u003e \u003c/td\u003e\n    \u003c/tr\u003e\n    \u003ctr\u003e\n      \u003ctd style=\"text-align: left\"\u003e16\u003c/td\u003e\n      \u003ctd style=\"text-align: left\"\u003e去掉第 2 列，打印全部行\u003c/td\u003e\n      \u003ctd style=\"text-align: left\"\u003e\u003ccode class=\"language-plaintext highlighter-rouge\"\u003e{ $2 = \u0026#34;\u0026#34;; print }\u003c/code\u003e\u003c/td\u003e\n      \u003ctd style=\"text-align: left\"\u003e \u003c/td\u003e\n    \u003c/tr\u003e\n    \u003ctr\u003e\n      \u003ctd style=\"text-align: left\"\u003e17\u003c/td\u003e\n      \u003ctd style=\"text-align: left\"\u003e列倒序，打印全部行\u003c/td\u003e\n      \u003ctd style=\"text-align: left\"\u003e\u003ccode class=\"language-plaintext highlighter-rouge\"\u003e\u0026#39;{ for(i=NF; i\u0026gt;0; i--) printf(\u0026#34;%s \u0026#34;, $i); printf(\u0026#34;\\n\u0026#34;);} \u0026#39;\u003c/code\u003e\u003c/td\u003e\n      \u003ctd style=\"text-align: left\"\u003e \u003c/td\u003e\n    \u003c/tr\u003e\n    \u003ctr\u003e\n      \u003ctd style=\"text-align: left\"\u003e18\u003c/td\u003e\n      \u003ctd style=\"text-align: left\"\u003e打印每行的和\u003c/td\u003e\n      \u003ctd style=\"text-align: left\"\u003e\u003ccode class=\"language-plaintext highlighter-rouge\"\u003e\u0026#39;{ sum=0; for(i=1; i\u0026lt;=NF; i++) sum += $i; print sum }\u0026#39;\u003c/code\u003e\u003c/td\u003e\n      \u003ctd style=\"text-align: left\"\u003e \u003c/td\u003e\n    \u003c/tr\u003e\n    \u003ctr\u003e\n      \u003ctd style=\"text-align: left\"\u003e19\u003c/td\u003e\n      \u003ctd style=\"text-align: left\"\u003e打印所有行的和\u003c/td\u003e\n      \u003ctd style=\"text-align: left\"\u003e\u003ccode class=\"language-plaintext highlighter-rouge\"\u003e\u0026#39;{ for(i=1; i\u0026lt;=NF; i++) sum += $i; } END { print sum }\u0026#39;\u003c/code\u003e\u003c/td\u003e\n      \u003ctd style=\"text-align: left\"\u003e \u003c/td\u003e\n    \u003c/tr\u003e\n    \u003ctr\u003e\n      \u003ctd style=\"text-align: left\"\u003e20\u003c/td\u003e\n      \u003ctd style=\"text-align: left\"\u003e所有字段取绝对值，打印全部行\u003c/td\u003e\n      \u003ctd style=\"text-align: left\"\u003e\u003ccode class=\"language-plaintext highlighter-rouge\"\u003e\u0026#39;{ for(i=1; i\u0026lt;=NF; i++) if ($i\u0026lt;0) $i = -$i; print }\u0026#39;\u003c/code\u003e\u003c/td\u003e\n      \u003ctd style=\"text-align: left\"\u003e \u003c/td\u003e\n    \u003c/tr\u003e\n  \u003c/tbody\u003e\n\u003c/table\u003e\n\n\u003cp\u003e\u003ca name=\"ch_2\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003ch1 id=\"2-awk-编程语言the-awk-language\"\u003e2 AWK 编程语言（THE AWK LANGUAGE）\u003c/h1\u003e\n\n\u003cp\u003eAWK 工作流程：\u003c/p\u003e\n\n\u003col\u003e\n  \u003cli\u003e语法检查\u003c/li\u003e\n  \u003cli\u003e按行读取输入\u003c/li\u003e\n  \u003cli\u003e针对每行分别匹配 pattern，然后执行对应的 action\n    \u003cul\u003e\n      \u003cli\u003e如果 pattern 为空，匹配所有行\u003c/li\u003e\n      \u003cli\u003e如果 action 为空，打印匹配的行\u003c/li\u003e\n    \u003c/ul\u003e\n  \u003c/li\u003e\n\u003c/ol\u003e\n\n\u003cp\u003e本章将用下面的输入作为例子：\u003c/p\u003e\n\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003e$ \u003c/span\u003e\u003cspan class=\"nb\"\u003ecat \u003c/span\u003ecountries.txt\nUSSR\t8642\t275\tAsia\nCanada\t3852\t25\tNorth America\nChina\t3705\t1032\tAsia\nUSA\t3615\t237\tNorth America\nBrazil\t3286\t134\tSouth America\nIndia\t1267\t746\tAsia\nMexico\t762\t78\tNorth America\nFrance\t211\t55\tEurope\nJapan\t144\t120\tAsia\nGermany\t96\t61\tEurope\nEngland\t94\t56\tEurope\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e\u003cstrong\u003e这个输入的特别之处\u003c/strong\u003e：\u003c/p\u003e\n\n\u003col\u003e\n  \u003cli\u003e列之间用 tab 分隔（\u003ccode class=\"language-plaintext highlighter-rouge\"\u003e\\t\u003c/code\u003e）\u003c/li\u003e\n  \u003cli\u003e最后一列有空格（\u003ccode class=\"language-plaintext highlighter-rouge\"\u003eNorth America\u003c/code\u003e，\u003ccode class=\"language-plaintext highlighter-rouge\"\u003eNorth America\u003c/code\u003e）\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003ch3 id=\"awk-程序格式\"\u003eAWK 程序格式\u003c/h3\u003e\n\n\u003cul\u003e\n  \u003cli\u003e同一个 statement 太长需要换行时，用单斜杠（\\）连接\u003c/li\u003e\n  \u003cli\u003e多个 statement 可以写到同一行，用分号（\u003ccode class=\"language-plaintext highlighter-rouge\"\u003e;\u003c/code\u003e）分开\u003c/li\u003e\n  \u003cli\u003e注释以 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003e#\u003c/code\u003e 开头\u003c/li\u003e\n  \u003cli\u003e空格和 tab 会被忽略，因此可以适当添加空格/空行提高程序可读性\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003e例子：\u003c/p\u003e\n\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"o\"\u003e{\u003c/span\u003e print \u003cspan class=\"se\"\u003e\\\u003c/span\u003e\n  \u003cspan class=\"nv\"\u003e$1\u003c/span\u003e, \u003cspan class=\"c\"\u003e# country name\u003c/span\u003e\n  \u003cspan class=\"nv\"\u003e$2\u003c/span\u003e, \u003cspan class=\"c\"\u003e# area in thousands of square miles\u003c/span\u003e\n  \u003cspan class=\"nv\"\u003e$3\u003c/span\u003e  \u003cspan class=\"c\"\u003e# population in millions\u003c/span\u003e\n\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003ch2 id=\"21-patterns\"\u003e2.1 Patterns\u003c/h2\u003e\n\n\u003cp\u003e6 种 pattern：\u003c/p\u003e\n\n\u003col\u003e\n  \u003cli\u003e\u003ccode class=\"language-plaintext highlighter-rouge\"\u003eBEGIN { statements }\u003c/code\u003e：程序开始时（读取任何输入之前）执行一次\u003c/li\u003e\n  \u003cli\u003e\u003ccode class=\"language-plaintext highlighter-rouge\"\u003eEND { statements }\u003c/code\u003e：程序结束时（读完所有输入之后）执行一次\u003c/li\u003e\n  \u003cli\u003e\u003ccode class=\"language-plaintext highlighter-rouge\"\u003eexpression { statements }\u003c/code\u003e：\u003ccode class=\"language-plaintext highlighter-rouge\"\u003eexpression\u003c/code\u003e 为真时执行\u003c/li\u003e\n  \u003cli\u003e\u003ccode class=\"language-plaintext highlighter-rouge\"\u003e/regular expression/ { statements }\u003c/code\u003e：匹配到正则表达式时执行\u003c/li\u003e\n  \u003cli\u003e\u003ccode class=\"language-plaintext highlighter-rouge\"\u003ecompound pattern { statements }\u003c/code\u003e：复合表达式（包含 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003e||\u003c/code\u003e，\u003ccode class=\"language-plaintext highlighter-rouge\"\u003e\u0026amp;\u0026amp;\u003c/code\u003e 等逻辑）为真时执行\u003c/li\u003e\n  \u003cli\u003e\u003ccode class=\"language-plaintext highlighter-rouge\"\u003epattern1 , pattern2 { statements }\u003c/code\u003e：\u003cstrong\u003e匹配到 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003epattern1\u003c/code\u003e 时开始对接下来的每一行执行 actions，匹配到 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003epattern2\u003c/code\u003e 时停止对后面的行执行\u003c/strong\u003e\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003ch3 id=\"211-begin-和-end\"\u003e2.1.1 BEGIN 和 END\u003c/h3\u003e\n\n\u003cul\u003e\n  \u003cli\u003e\u003ccode class=\"language-plaintext highlighter-rouge\"\u003eBEGIN\u003c/code\u003e 和 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eEND\u003c/code\u003e 模式的 action 不能为空。\u003c/li\u003e\n  \u003cli\u003e\u003ccode class=\"language-plaintext highlighter-rouge\"\u003eBEGIN\u003c/code\u003e 和 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eEND\u003c/code\u003e 不能与其他 pattern 混用。\u003c/li\u003e\n  \u003cli\u003e\u003cstrong\u003e可以有多个 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eBEGIN\u003c/code\u003e，按顺序执行\u003c/strong\u003e；\u003ccode class=\"language-plaintext highlighter-rouge\"\u003eEND\u003c/code\u003e 同理。\u003c/li\u003e\n  \u003cli\u003e\u003cstrong\u003e\u003ccode class=\"language-plaintext highlighter-rouge\"\u003eBEGIN\u003c/code\u003e 和 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eEND\u003c/code\u003e 顺序没关系\u003c/strong\u003e，总是 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eBEGIN\u003c/code\u003e 先执行。\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003e\u003ccode class=\"language-plaintext highlighter-rouge\"\u003eBEGIN\u003c/code\u003e 的一个用处是：在开始处理输入之前\u003cstrong\u003e设置字段分隔符\u003c/strong\u003e（\u003ccode class=\"language-plaintext highlighter-rouge\"\u003eFS\u003c/code\u003e，Field Separator）。\n\u003cstrong\u003e默认的 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eFS\u003c/code\u003e 是空格和 tab\u003c/strong\u003e。\u003c/p\u003e\n\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003e$ \u003c/span\u003e\u003cspan class=\"nb\"\u003ecat \u003c/span\u003efs.awk\nBEGIN \u003cspan class=\"o\"\u003e{\u003c/span\u003e FS \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"se\"\u003e\\t\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;\u003c/span\u003e \u003cspan class=\"c\"\u003e# make tab the field separator\u003c/span\u003e\n        \u003cspan class=\"nb\"\u003eprintf\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;%10s %6s %5s %s\u003c/span\u003e\u003cspan class=\"se\"\u003e\\n\\n\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;\u003c/span\u003e, \u003cspan class=\"s2\"\u003e\u0026#34;COUNTRY\u0026#34;\u003c/span\u003e, \u003cspan class=\"s2\"\u003e\u0026#34;AREA\u0026#34;\u003c/span\u003e, \u003cspan class=\"s2\"\u003e\u0026#34;POP\u0026#34;\u003c/span\u003e, \u003cspan class=\"s2\"\u003e\u0026#34;CONTINENT\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n      \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n      \u003cspan class=\"o\"\u003e{\u003c/span\u003e \u003cspan class=\"nb\"\u003eprintf\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;%10s %6d %5d %s\u003c/span\u003e\u003cspan class=\"se\"\u003e\\n\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;\u003c/span\u003e, \u003cspan class=\"nv\"\u003e$1\u003c/span\u003e, \u003cspan class=\"nv\"\u003e$2\u003c/span\u003e, \u003cspan class=\"nv\"\u003e$3\u003c/span\u003e, \u003cspan class=\"nv\"\u003e$4\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n        area \u003cspan class=\"o\"\u003e=\u003c/span\u003e area + \u003cspan class=\"nv\"\u003e$2\u003c/span\u003e\n        pop \u003cspan class=\"o\"\u003e=\u003c/span\u003e pop + \u003cspan class=\"nv\"\u003e$3\u003c/span\u003e\n      \u003cspan class=\"o\"\u003e}\u003c/span\u003e\nEND   \u003cspan class=\"o\"\u003e{\u003c/span\u003e \u003cspan class=\"nb\"\u003eprintf\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"se\"\u003e\\n\u003c/span\u003e\u003cspan class=\"s2\"\u003e%10s %6d %5d\u003c/span\u003e\u003cspan class=\"se\"\u003e\\n\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;\u003c/span\u003e, \u003cspan class=\"s2\"\u003e\u0026#34;TOTAL\u0026#34;\u003c/span\u003e, area, pop\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"nv\"\u003e$ \u003c/span\u003e\u003cspan class=\"nb\"\u003eawk\u003c/span\u003e \u003cspan class=\"nt\"\u003e-f\u003c/span\u003e fs.awk countries.txt\n   COUNTRY   AREA   POP CONTINENT\n\n   USSR    8649    275     Asia\n   Canada  3852    25      North America\n   China   3705    1032    Asia\n   USA     3615    237     North America\n   ...\n   England 94      56      Europe\n\n        TOTAL      0     0\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e注意在设置 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eFS\u003c/code\u003e 为 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003etab\u003c/code\u003e 后，\u003cstrong\u003e\u003ccode class=\"language-plaintext highlighter-rouge\"\u003eNorth America\u003c/code\u003e 就会被当成一列来处理\u003c/strong\u003e；否则会被当成两列。\u003c/p\u003e\n\n\u003ch3 id=\"212-expressions-as-patterns\"\u003e2.1.2 Expressions as Patterns\u003c/h3\u003e\n\n\u003cblockquote\u003e\n  \u003cp\u003eAny expression can be used as an operand of any operator.\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eAWK 中，\u003cstrong\u003e任何类型的操作符都可以处理任何类型的数据\u003c/strong\u003e：\u003c/p\u003e\n\n\u003col\u003e\n  \u003cli\u003e数字会被自动转换成字符串\u003c/li\u003e\n  \u003cli\u003e字符串也会被自动转换成数字\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003cblockquote\u003e\n  \u003cp\u003eAny expression can be used as a pattern.\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003e比较操作符一共有 8 个：\u003c/p\u003e\n\n\u003col\u003e\n  \u003cli\u003e\u003ccode class=\"language-plaintext highlighter-rouge\"\u003e\u0026lt;\u003c/code\u003e\u003c/li\u003e\n  \u003cli\u003e\u003ccode class=\"language-plaintext highlighter-rouge\"\u003e\u0026lt;=\u003c/code\u003e\u003c/li\u003e\n  \u003cli\u003e\u003ccode class=\"language-plaintext highlighter-rouge\"\u003e==\u003c/code\u003e\u003c/li\u003e\n  \u003cli\u003e\u003ccode class=\"language-plaintext highlighter-rouge\"\u003e!=\u003c/code\u003e\u003c/li\u003e\n  \u003cli\u003e\u003ccode class=\"language-plaintext highlighter-rouge\"\u003e\u0026gt;=\u003c/code\u003e\u003c/li\u003e\n  \u003cli\u003e\u003ccode class=\"language-plaintext highlighter-rouge\"\u003e\u0026gt;\u003c/code\u003e\u003c/li\u003e\n  \u003cli\u003e\u003ccode class=\"language-plaintext highlighter-rouge\"\u003e~\u003c/code\u003e：匹配（matched by）\u003c/li\u003e\n  \u003cli\u003e\u003ccode class=\"language-plaintext highlighter-rouge\"\u003e!~\u003c/code\u003e：\u003cstrong\u003e不匹配\u003c/strong\u003e（not matched by）\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003cp\u003e字符串比较：\u003c/p\u003e\n\n\u003col\u003e\n  \u003cli\u003e“Canada” \u003ccode class=\"language-plaintext highlighter-rouge\"\u003e\u0026lt;\u003c/code\u003e “China”\u003c/li\u003e\n  \u003cli\u003e“Asia” \u003ccode class=\"language-plaintext highlighter-rouge\"\u003e\u0026lt;\u003c/code\u003e “Asian”\u003c/li\u003e\n  \u003cli\u003e\u003ccode class=\"language-plaintext highlighter-rouge\"\u003e$0 \u0026gt;= \u0026#34;M\u0026#34;\u003c/code\u003e：\u003cstrong\u003e选择首字母的 ASCII 码大于 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eM\u003c/code\u003e 的行\u003c/strong\u003e\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003ch3 id=\"213-string-matching-patterns\"\u003e2.1.3 String-Matching Patterns\u003c/h3\u003e\n\n\u003cp\u003e类型：\u003c/p\u003e\n\n\u003col\u003e\n  \u003cli\u003e\u003ccode class=\"language-plaintext highlighter-rouge\"\u003e/regexpr/\u003c/code\u003e：对整行进行匹配，等价于 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003e$0 ~ /regxpr/\u003c/code\u003e\u003c/li\u003e\n  \u003cli\u003e\u003ccode class=\"language-plaintext highlighter-rouge\"\u003eexpression ~ /regexpr/\u003c/code\u003e：对 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eexpression\u003c/code\u003e 进行匹配\u003c/li\u003e\n  \u003cli\u003e\u003ccode class=\"language-plaintext highlighter-rouge\"\u003eexpression !~ /regexpr/\u003c/code\u003e：反匹配\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003ch3 id=\"214-regular-expressions\"\u003e2.1.4 Regular Expressions\u003c/h3\u003e\n\n\u003ch3 id=\"215-compound-patterns\"\u003e2.1.5 Compound Patterns\u003c/h3\u003e\n\n\u003cp\u003e\u003ccode class=\"language-plaintext highlighter-rouge\"\u003e$4 == \u0026#34;Asia\u0026#34; || $4 == \u0026#34;Europe\u0026#34;\u003c/code\u003e\u003c/p\u003e\n\n\u003ch3 id=\"216-range-patterns\"\u003e2.1.6 Range Patterns\u003c/h3\u003e\n\n\u003cp\u003e格式：\u003ccode class=\"language-plaintext highlighter-rouge\"\u003epattern1, pattern2\u003c/code\u003e，表示：\u003c/p\u003e\n\n\u003col\u003e\n  \u003cli\u003e匹配到 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003epattern1\u003c/code\u003e 时开始对该行及后面的行执行 action\u003c/li\u003e\n  \u003cli\u003e匹配到 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003epattern2\u003c/code\u003e 时，终止对后面的行执行 action（对当前行还是会执行）\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003cp\u003e例子 1：下面的例子中 action 为空，因此会打印匹配的行：\u003c/p\u003e\n\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003e$ \u003c/span\u003e\u003cspan class=\"nb\"\u003ecat \u003c/span\u003ecountries.txt\nUSSR    8642    275     Asia\nCanada  3852    25      North America\nChina   3705    1032    Asia\nUSA     3615    237     North America\nBrazil  3286    134     South America\nIndia   1267    746     Asia\nMexico  762     78      North America\nFrance  211     55      Europe\nJapan   144     120     Asia\nGermany 96      61      Europe\nEngland 94      56      Europe\n\n\u003cspan class=\"nv\"\u003e$ \u003c/span\u003e\u003cspan class=\"nb\"\u003eawk\u003c/span\u003e \u003cspan class=\"s1\"\u003e\u0026#39;/Canada/, /Japan/\u0026#39;\u003c/span\u003e countries.txt\nCanada  3852    25      North America\nChina   3705    1032    Asia\nUSA     3615    237     North America\nBrazil  3286    134     South America\nIndia   1267    746     Asia\nMexico  762     78      North America\nFrance  211     55      Europe\nJapan   144     120     Asia\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e例子 2：按行号过滤：\u003c/p\u003e\n\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003e$ \u003c/span\u003e\u003cspan class=\"nb\"\u003eawk\u003c/span\u003e \u003cspan class=\"s1\"\u003e\u0026#39;FNR == 1, FNR == 5 { print FILENAME \u0026#34;: \u0026#34; $0 }\u0026#39;\u003c/span\u003e countries.txt\ncountries.txt: USSR     8642    275     Asia\ncountries.txt: Canada   3852    25      North America\ncountries.txt: China    3705    1032    Asia\ncountries.txt: USA      3615    237     North America\ncountries.txt: Brazil   3286    134     South America\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e两个内置变量：\u003c/p\u003e\n\n\u003cul\u003e\n  \u003cli\u003e\u003ccode class=\"language-plaintext highlighter-rouge\"\u003eFNR\u003c/code\u003e：行号（File line Number）\u003c/li\u003e\n  \u003cli\u003e\u003ccode class=\"language-plaintext highlighter-rouge\"\u003eFILENAME\u003c/code\u003e：当前文件名\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch3 id=\"217-summary-of-patterns\"\u003e2.1.7 Summary of Patterns\u003c/h3\u003e\n\n\u003cp\u003e\u003ca name=\"ch_2.2\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003ch2 id=\"22-actions\"\u003e2.2 Actions\u003c/h2\u003e\n\n\u003ch3 id=\"内置变量\"\u003e内置变量\u003c/h3\u003e\n\n\u003cp\u003erecord 和 line 的关系说明：\u003c/p\u003e\n\n\u003cul\u003e\n  \u003cli\u003e默认情况下，record 分隔符（\u003ccode class=\"language-plaintext highlighter-rouge\"\u003eRS\u003c/code\u003e）是换行符，因此一个行就是一个 record。\u003c/li\u003e\n  \u003cli\u003e如果显式修改 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eRS\u003c/code\u003e，也可以让多个行对应一个 record（multiline record），后面会介绍到。\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003e如无特殊说明，本文中 line 和 record 是等价的。\u003c/p\u003e\n\n\u003ctable\u003e\n  \u003cthead\u003e\n    \u003ctr\u003e\n      \u003cth style=\"text-align: left\"\u003e变量\u003c/th\u003e\n      \u003cth style=\"text-align: left\"\u003e解释\u003c/th\u003e\n      \u003cth style=\"text-align: left\"\u003e默认值\u003c/th\u003e\n    \u003c/tr\u003e\n  \u003c/thead\u003e\n  \u003ctbody\u003e\n    \u003ctr\u003e\n      \u003ctd style=\"text-align: left\"\u003e\u003ccode class=\"language-plaintext highlighter-rouge\"\u003eARGC\u003c/code\u003e\u003c/td\u003e\n      \u003ctd style=\"text-align: left\"\u003e命令行参数个数\u003c/td\u003e\n      \u003ctd style=\"text-align: left\"\u003e无\u003c/td\u003e\n    \u003c/tr\u003e\n    \u003ctr\u003e\n      \u003ctd style=\"text-align: left\"\u003e\u003ccode class=\"language-plaintext highlighter-rouge\"\u003eARGV\u003c/code\u003e\u003c/td\u003e\n      \u003ctd style=\"text-align: left\"\u003e命令行参数列表\u003c/td\u003e\n      \u003ctd style=\"text-align: left\"\u003e无\u003c/td\u003e\n    \u003c/tr\u003e\n    \u003ctr\u003e\n      \u003ctd style=\"text-align: left\"\u003e\u003ccode class=\"language-plaintext highlighter-rouge\"\u003eFILENAME\u003c/code\u003e\u003c/td\u003e\n      \u003ctd style=\"text-align: left\"\u003e当前文件的文件名\u003c/td\u003e\n      \u003ctd style=\"text-align: left\"\u003e无\u003c/td\u003e\n    \u003c/tr\u003e\n    \u003ctr\u003e\n      \u003ctd style=\"text-align: left\"\u003e\u003ccode class=\"language-plaintext highlighter-rouge\"\u003eFNR\u003c/code\u003e\u003c/td\u003e\n      \u003ctd style=\"text-align: left\"\u003erecord number in current file\u003c/td\u003e\n      \u003ctd style=\"text-align: left\"\u003e无\u003c/td\u003e\n    \u003c/tr\u003e\n    \u003ctr\u003e\n      \u003ctd style=\"text-align: left\"\u003e\u003ccode class=\"language-plaintext highlighter-rouge\"\u003eFS\u003c/code\u003e\u003c/td\u003e\n      \u003ctd style=\"text-align: left\"\u003e字段分隔符（field separator）\u003c/td\u003e\n      \u003ctd style=\"text-align: left\"\u003e空格或 tab\u003c/td\u003e\n    \u003c/tr\u003e\n    \u003ctr\u003e\n      \u003ctd style=\"text-align: left\"\u003e\u003ccode class=\"language-plaintext highlighter-rouge\"\u003eNF\u003c/code\u003e\u003c/td\u003e\n      \u003ctd style=\"text-align: left\"\u003e当前行的字段数\u003c/td\u003e\n      \u003ctd style=\"text-align: left\"\u003e无\u003c/td\u003e\n    \u003c/tr\u003e\n    \u003ctr\u003e\n      \u003ctd style=\"text-align: left\"\u003e\u003ccode class=\"language-plaintext highlighter-rouge\"\u003eNR\u003c/code\u003e\u003c/td\u003e\n      \u003ctd style=\"text-align: left\"\u003e已经读取的记录数（number of records）\u003c/td\u003e\n      \u003ctd style=\"text-align: left\"\u003e无\u003c/td\u003e\n    \u003c/tr\u003e\n    \u003ctr\u003e\n      \u003ctd style=\"text-align: left\"\u003e\u003ccode class=\"language-plaintext highlighter-rouge\"\u003eOFMT\u003c/code\u003e\u003c/td\u003e\n      \u003ctd style=\"text-align: left\"\u003eoutput format for numbers\u003c/td\u003e\n      \u003ctd style=\"text-align: left\"\u003e\u003ccode class=\"language-plaintext highlighter-rouge\"\u003e\u0026#34;%.6g\u0026#34;\u003c/code\u003e\u003c/td\u003e\n    \u003c/tr\u003e\n    \u003ctr\u003e\n      \u003ctd style=\"text-align: left\"\u003e\u003ccode class=\"language-plaintext highlighter-rouge\"\u003eOFS\u003c/code\u003e\u003c/td\u003e\n      \u003ctd style=\"text-align: left\"\u003e输出字段分隔符（output field separator）\u003c/td\u003e\n      \u003ctd style=\"text-align: left\"\u003e\u003ccode class=\"language-plaintext highlighter-rouge\"\u003e\u0026#34; \u0026#34;\u003c/code\u003e\u003c/td\u003e\n    \u003c/tr\u003e\n    \u003ctr\u003e\n      \u003ctd style=\"text-align: left\"\u003e\u003ccode class=\"language-plaintext highlighter-rouge\"\u003eORS\u003c/code\u003e\u003c/td\u003e\n      \u003ctd style=\"text-align: left\"\u003e输出记录分隔符（output record separator）\u003c/td\u003e\n      \u003ctd style=\"text-align: left\"\u003e\u003ccode class=\"language-plaintext highlighter-rouge\"\u003e\\n\u003c/code\u003e\u003c/td\u003e\n    \u003c/tr\u003e\n    \u003ctr\u003e\n      \u003ctd style=\"text-align: left\"\u003e\u003ccode class=\"language-plaintext highlighter-rouge\"\u003eRLENGTH\u003c/code\u003e\u003c/td\u003e\n      \u003ctd style=\"text-align: left\"\u003elength of string matched by match function\u003c/td\u003e\n      \u003ctd style=\"text-align: left\"\u003e无\u003c/td\u003e\n    \u003c/tr\u003e\n    \u003ctr\u003e\n      \u003ctd style=\"text-align: left\"\u003e\u003ccode class=\"language-plaintext highlighter-rouge\"\u003eRS\u003c/code\u003e\u003c/td\u003e\n      \u003ctd style=\"text-align: left\"\u003e输入记录分隔符（input record separator）\u003c/td\u003e\n      \u003ctd style=\"text-align: left\"\u003e\u003ccode class=\"language-plaintext highlighter-rouge\"\u003e\\n\u003c/code\u003e\u003c/td\u003e\n    \u003c/tr\u003e\n    \u003ctr\u003e\n      \u003ctd style=\"text-align: left\"\u003e\u003ccode class=\"language-plaintext highlighter-rouge\"\u003eRSTART\u003c/code\u003e\u003c/td\u003e\n      \u003ctd style=\"text-align: left\"\u003estart of string matched by match function\u003c/td\u003e\n      \u003ctd style=\"text-align: left\"\u003e无\u003c/td\u003e\n    \u003c/tr\u003e\n    \u003ctr\u003e\n      \u003ctd style=\"text-align: left\"\u003e\u003ccode class=\"language-plaintext highlighter-rouge\"\u003eSUBSEP\u003c/code\u003e\u003c/td\u003e\n      \u003ctd style=\"text-align: left\"\u003esubscript separator\u003c/td\u003e\n      \u003ctd style=\"text-align: left\"\u003e\u003ccode class=\"language-plaintext highlighter-rouge\"\u003e\\034\u003c/code\u003e\u003c/td\u003e\n    \u003c/tr\u003e\n  \u003c/tbody\u003e\n\u003c/table\u003e\n\n\u003cul\u003e\n  \u003cli\u003e每次读取一个新记录后，会设置 FNR, NF 和 NR\u003c/li\u003e\n  \u003cli\u003e\u003ccode class=\"language-plaintext highlighter-rouge\"\u003e$0\u003c/code\u003e 发生改变，或者创建了新的字段后，NF 会重置\u003c/li\u003e\n  \u003cli\u003e执行 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003ematch\u003c/code\u003e 函数后，RLENGTH and RSTART 会被重新赋值\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch3 id=\"字段变量field-variables\"\u003e字段变量（Field Variables）\u003c/h3\u003e\n\n\u003cp\u003e例子，设置分隔符，并替换第 4 列：\u003c/p\u003e\n\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003e$ \u003c/span\u003e\u003cspan class=\"nb\"\u003ecat \u003c/span\u003ereplace.awk\nBEGIN                 \u003cspan class=\"o\"\u003e{\u003c/span\u003e FS \u003cspan class=\"o\"\u003e=\u003c/span\u003e OFS \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"se\"\u003e\\t\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;\u003c/span\u003e \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003cspan class=\"nv\"\u003e$4\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;North America\u0026#34;\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e \u003cspan class=\"nv\"\u003e$4\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;NA\u0026#34;\u003c/span\u003e \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003cspan class=\"nv\"\u003e$4\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;South America\u0026#34;\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e \u003cspan class=\"nv\"\u003e$4\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;SA\u0026#34;\u003c/span\u003e \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n                      \u003cspan class=\"o\"\u003e{\u003c/span\u003e print \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"nv\"\u003e$ \u003c/span\u003e\u003cspan class=\"nb\"\u003eawk\u003c/span\u003e \u003cspan class=\"nt\"\u003e-f\u003c/span\u003e replace.awk countries.txt\nUSSR    8642    275     Asia\nCanada  3852    25      NA\nChina   3705    1032    Asia\nUSA     3615    237     NA\nBrazil  3286    134     SA\nIndia   1267    746     Asia\nMexico  762     78      NA\n...\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cul\u003e\n  \u003cli\u003e如果 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003e$0\u003c/code\u003e 发生变化，\u003ccode class=\"language-plaintext highlighter-rouge\"\u003e$1\u003c/code\u003e, \u003ccode class=\"language-plaintext highlighter-rouge\"\u003e$2\u003c/code\u003e 和 NF 等会被重新计算\u003c/li\u003e\n  \u003cli\u003e如果 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003e$1\u003c/code\u003e 或 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003e$2\u003c/code\u003e 等等发生变化，\u003ccode class=\"language-plaintext highlighter-rouge\"\u003e$0\u003c/code\u003e 也会被重新构建，构建时使用 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eOFS\u003c/code\u003e 作为字\n段分隔符\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003e不存在的字段：\u003c/p\u003e\n\n\u003cul\u003e\n  \u003cli\u003e\u003cstrong\u003e如果访问不存在的字段，例如 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003e$(NF+1)\u003c/code\u003e，得到的是空字符串。\u003c/strong\u003e\u003c/li\u003e\n  \u003cli\u003e\u003cstrong\u003e给一个不存在的字段赋值，就会创建该字段\u003c/strong\u003e，例如 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003e$5 = 1000 * $3 / $2\u003c/code\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003e每行的字段数量可能不相同，但有一个最大字段限制，一般是 100。\u003c/p\u003e\n\n\u003cp\u003eAWK 支持的运算：\u003c/p\u003e\n\n\u003cul\u003e\n  \u003cli\u003e\u003ccode class=\"language-plaintext highlighter-rouge\"\u003e^\u003c/code\u003e：指数运算，例如 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003ex^y\u003c/code\u003e\u003c/li\u003e\n  \u003cli\u003e\u003ccode class=\"language-plaintext highlighter-rouge\"\u003e+=\u003c/code\u003e、\u003ccode class=\"language-plaintext highlighter-rouge\"\u003e-=\u003c/code\u003e、\u003ccode class=\"language-plaintext highlighter-rouge\"\u003e*=\u003c/code\u003e、\u003ccode class=\"language-plaintext highlighter-rouge\"\u003e/=\u003c/code\u003e、\u003ccode class=\"language-plaintext highlighter-rouge\"\u003e^=\u003c/code\u003e\u003c/li\u003e\n  \u003cli\u003e\u003ccode class=\"language-plaintext highlighter-rouge\"\u003en++\u003c/code\u003e、\u003ccode class=\"language-plaintext highlighter-rouge\"\u003en--\u003c/code\u003e、\u003ccode class=\"language-plaintext highlighter-rouge\"\u003e++n\u003c/code\u003e、\u003ccode class=\"language-plaintext highlighter-rouge\"\u003e--n\u003c/code\u003e\u003c/li\u003e\n  \u003cli\u003e\u003ccode class=\"language-plaintext highlighter-rouge\"\u003eexpr1 ? expr2 : expr3\u003c/code\u003e\u003c/li\u003e\n  \u003cli\u003e三角函数运算\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003e例子，对字段进行正则匹配：\u003c/p\u003e\n\n\u003cul\u003e\n  \u003cli\u003e\u003ccode class=\"language-plaintext highlighter-rouge\"\u003e$4 ~ /Asia/\u003c/code\u003e：第 4 个字段包含 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eAsia\u003c/code\u003e 字符串。\u003c/li\u003e\n  \u003cli\u003e\u003ccode class=\"language-plaintext highlighter-rouge\"\u003eBEGIN { digits = \u0026#34;^[0-9]+$\u0026#34; } $2 ~ digits\u003c/code\u003e：匹配第二列是数字的行。\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003e下面的正则匹配浮点数：\u003c/p\u003e\n\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003eBEGIN \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n    sign \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;[+-]?\u0026#34;\u003c/span\u003e\n    \u003cspan class=\"nv\"\u003edecimal\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;[0-9]+[.]?[0-9]*\u0026#34;\u003c/span\u003e\n    \u003cspan class=\"nv\"\u003efraction\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;[.][0-9]+\u0026#34;\u003c/span\u003e\n    \u003cspan class=\"nv\"\u003eexponent\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;([eE]\u0026#34;\u003c/span\u003e sign \u003cspan class=\"s2\"\u003e\u0026#34;[0-9]+)?\u0026#34;\u003c/span\u003e\n    \u003cspan class=\"nv\"\u003enumber\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;^\u0026#34;\u003c/span\u003e sign \u003cspan class=\"s2\"\u003e\u0026#34;(\u0026#34;\u003c/span\u003e decimal \u003cspan class=\"s2\"\u003e\u0026#34;|\u0026#34;\u003c/span\u003e fraction \u003cspan class=\"s2\"\u003e\u0026#34;)\u0026#34;\u003c/span\u003e exponent \u003cspan class=\"s2\"\u003e\u0026#34;$\u0026#34;\u003c/span\u003e\n\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003cspan class=\"nv\"\u003e$0\u003c/span\u003e ~ number\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e\u003cstrong\u003e大部分情况下，以下两种匹配方式效果是相同的：\u003c/strong\u003e\u003c/p\u003e\n\n\u003cul\u003e\n  \u003cli\u003e引号表示法：\u003ccode class=\"language-plaintext highlighter-rouge\"\u003e\u0026#34;^[0-9]+$\u0026#34;\u003c/code\u003e\u003c/li\u003e\n  \u003cli\u003e斜杠表示法：\u003ccode class=\"language-plaintext highlighter-rouge\"\u003e/^[0-9]+$/\u003c/code\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003e但有一个\u003cstrong\u003e例外：斜杠表示法里面的字符串都是字面量（literal）\u003c/strong\u003e，这意味着\u003c/p\u003e\n\n\u003cul\u003e\n  \u003cli\u003e斜杠表示法不支持变量，而引号表示法里面可以有变量\u003c/li\u003e\n  \u003cli\u003e斜杠表示法不需要对特殊字符转义，而引号表示法需要，因此下面两个是等价的：\n    \u003col\u003e\n      \u003cli\u003e\u003ccode class=\"language-plaintext highlighter-rouge\"\u003e$0 ~ /(\\+|-)[0-9]+/\u003c/code\u003e\u003c/li\u003e\n      \u003cli\u003e\u003ccode class=\"language-plaintext highlighter-rouge\"\u003e$0 ~ \u0026#34;(\\\\+|-)[0-9]+\u0026#34;\u003c/code\u003e\u003c/li\u003e\n    \u003c/ol\u003e\n  \u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch4 id=\"内置字符串函数\"\u003e内置字符串函数\u003c/h4\u003e\n\n\u003col\u003e\n  \u003cli\u003e\u003ccode class=\"language-plaintext highlighter-rouge\"\u003egsub(r, s)\u003c/code\u003e：在当前行（\u003ccode class=\"language-plaintext highlighter-rouge\"\u003e$0\u003c/code\u003e）中进行字符串替换，等价于 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003egsub(r, s, $0)\u003c/code\u003e\u003c/li\u003e\n  \u003cli\u003e\u003ccode class=\"language-plaintext highlighter-rouge\"\u003egsub(r, s, t)\u003c/code\u003e：在字符串 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003et\u003c/code\u003e 中进行替换\u003c/li\u003e\n  \u003cli\u003e\u003ccode class=\"language-plaintext highlighter-rouge\"\u003eindex(s, t)\u003c/code\u003e：寻找子字符串出现的位置\u003c/li\u003e\n  \u003cli\u003e\u003ccode class=\"language-plaintext highlighter-rouge\"\u003elength(s)\u003c/code\u003e：字符串长度\u003c/li\u003e\n  \u003cli\u003e\u003ccode class=\"language-plaintext highlighter-rouge\"\u003ematch(s, r)\u003c/code\u003e：匹配字符串，会设置 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eRSTART\u003c/code\u003e 和 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eRLENGTH\u003c/code\u003e\u003c/li\u003e\n  \u003cli\u003e\u003ccode class=\"language-plaintext highlighter-rouge\"\u003esplit(s, a)\u003c/code\u003e：将字符串 s 分隔为数组 a，使用默认分隔符（FS）\u003c/li\u003e\n  \u003cli\u003e\u003ccode class=\"language-plaintext highlighter-rouge\"\u003esplit(s, a, fs)\u003c/code\u003e：将字符串 s 分隔为数组 a，使用指定分隔符\u003c/li\u003e\n  \u003cli\u003e\u003ccode class=\"language-plaintext highlighter-rouge\"\u003esprintf()\u003c/code\u003e：格式化字生成符串\u003c/li\u003e\n  \u003cli\u003e\u003ccode class=\"language-plaintext highlighter-rouge\"\u003esub(r, s)\u003c/code\u003e：字符串替换（leftmost），等价于 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003esub(r, s, t)\u003c/code\u003e\u003c/li\u003e\n  \u003cli\u003e\u003ccode class=\"language-plaintext highlighter-rouge\"\u003esub(r, s, t)\u003c/code\u003e：字符串替换（leftmost）\u003c/li\u003e\n  \u003cli\u003e\u003ccode class=\"language-plaintext highlighter-rouge\"\u003esubstr(s, p)\u003c/code\u003e：返回从位置 p 开始到最后的子字符串（即 suffix）\u003c/li\u003e\n  \u003cli\u003e\u003ccode class=\"language-plaintext highlighter-rouge\"\u003esubstr(s, p, n)\u003c/code\u003e：返回从位置 p 开始，长度为 n 的子字符串\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003cp\u003e例子：\u003c/p\u003e\n\n\u003col\u003e\n  \u003cli\u003e\u003ccode class=\"language-plaintext highlighter-rouge\"\u003e{ gsub(/USA/, \u0026#34;United States\u0026#34;); print }\u003c/code\u003e\u003c/li\u003e\n  \u003cli\u003e\u003ccode class=\"language-plaintext highlighter-rouge\"\u003e{ $1 =substr($1, 1, 3); print $0 }\u003c/code\u003e：第一列只保留前 3 个字母\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003cp\u003e\u003cstrong\u003e在替换函数中，\u003ccode class=\"language-plaintext highlighter-rouge\"\u003e\u0026amp;\u003c/code\u003e 字符是一个变量，表示匹配到的字符串\u003c/strong\u003e，来看下面的例子：\u003c/p\u003e\n\n\u003cdiv class=\"language-plaintext highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003egsub(/a/, \u0026#34;\u0026amp;b\u0026amp;\u0026#34;, \u0026#34;banana\u0026#34;)\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e等价于\u003c/p\u003e\n\n\u003cdiv class=\"language-plaintext highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003egsub(/a/, \u0026#34;aba\u0026#34;, \u0026#34;banana\u0026#34;)\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e\u003cstrong\u003e字符串和数字类型互相转换：\u003c/strong\u003e\u003c/p\u003e\n\n\u003cul\u003e\n  \u003cli\u003e\u003ccode class=\"language-plaintext highlighter-rouge\"\u003enumber \u0026#34;\u0026#34;\u003c/code\u003e：将数字转换成字符串\u003c/li\u003e\n  \u003cli\u003e\u003ccode class=\"language-plaintext highlighter-rouge\"\u003estring + 0\u003c/code\u003e：将字符串转换成数字\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003e因此，对不同类型的变量可以这样做转换和比较：\u003c/p\u003e\n\n\u003cul\u003e\n  \u003cli\u003e\u003ccode class=\"language-plaintext highlighter-rouge\"\u003e$1 \u0026#34;\u0026#34; ==  $2\u003c/code\u003e\u003c/li\u003e\n  \u003cli\u003e\u003ccode class=\"language-plaintext highlighter-rouge\"\u003e$1 + 0 == $2 + 0\u003c/code\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cblockquote\u003e\n  \u003cp\u003eThe numeric value of a string is the value of the longest prefix of the string\nthat looks numeric. Thus\u003c/p\u003e\n\n  \u003cp\u003eBEGIN { print “1E2”+0, “12E”+0, “E12”+0, “1X2Y3”+0 }\u003c/p\u003e\n\n  \u003cp\u003eyields\u003c/p\u003e\n\n  \u003cp\u003e100 12 0 1\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003ch3 id=\"控制流\"\u003e控制流\u003c/h3\u003e\n\n\u003cp\u003e关键字：\u003c/p\u003e\n\n\u003cul\u003e\n  \u003cli\u003e\u003ccode class=\"language-plaintext highlighter-rouge\"\u003enext\u003c/code\u003e：开始下一次主输入循环（main input loop），即，\u003cstrong\u003e开始处理下一行\u003c/strong\u003e\u003c/li\u003e\n  \u003cli\u003e\u003ccode class=\"language-plaintext highlighter-rouge\"\u003eexit [\u0026lt;expr\u0026gt;]\u003c/code\u003e：立即跳转到 END 部分；如果已经在 END 部分，立即退出程序；将 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eexpr\u003c/code\u003e 的执行结果作为返回值。\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch3 id=\"数组\"\u003e数组\u003c/h3\u003e\n\n\u003cp\u003eAWK 提供了一维数组。\u003cstrong\u003e数组不需要提前声明，也没有容量大小。\u003c/strong\u003e\u003c/p\u003e\n\n\u003cp\u003e例子，行倒序打印：\u003ccode class=\"language-plaintext highlighter-rouge\"\u003e{ x[NR] = $0 } END { for (i=NR; i\u0026gt;0; i--) print x[i] }\u003c/code\u003e。\u003c/p\u003e\n\n\u003cp\u003eAWK 中的数组是用字符串索引的，因此也叫关联数组（associative arrays）。\u003c/p\u003e\n\n\u003cp\u003e例子，分别计算 Asia 和 Europe 的总人口：\u003c/p\u003e\n\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e/Asia/   \u003cspan class=\"o\"\u003e{\u003c/span\u003e pop[\u003cspan class=\"s2\"\u003e\u0026#34;Asia\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e]\u003c/span\u003e +\u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nv\"\u003e$3\u003c/span\u003e \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n/Europe/ \u003cspan class=\"o\"\u003e{\u003c/span\u003e pop[\u003cspan class=\"s2\"\u003e\u0026#34;Europe\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e]\u003c/span\u003e +\u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nv\"\u003e$3\u003c/span\u003e \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e例子，分别为所有地区（第 4 列是地区）计算总人口：\u003c/p\u003e\n\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003eBEGIN \u003cspan class=\"o\"\u003e{\u003c/span\u003e FS \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"se\"\u003e\\t\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;\u003c/span\u003e \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n      \u003cspan class=\"o\"\u003e{\u003c/span\u003e pop[\u003cspan class=\"nv\"\u003e$4\u003c/span\u003e\u003cspan class=\"o\"\u003e]\u003c/span\u003e +\u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nv\"\u003e$3\u003c/span\u003e \u003cspan class=\"o\"\u003e}\u003c/span\u003e\nEND   \u003cspan class=\"o\"\u003e{\u003c/span\u003e \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"o\"\u003e(\u003c/span\u003ename \u003cspan class=\"k\"\u003ein \u003c/span\u003epop\u003cspan class=\"o\"\u003e)\u003c/span\u003e print name, pop[name] \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e\u003cstrong\u003e判断 key 是否存在\u003c/strong\u003e：\u003ccode class=\"language-plaintext highlighter-rouge\"\u003eif (\u0026#34;Africa\u0026#34; in pop) ...\u003c/code\u003e。\u003c/p\u003e\n\n\u003ch4 id=\"从数组中删除一个元素的操作\"\u003e从数组中删除一个元素的操作\u003c/h4\u003e\n\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003edelete array[subscript]\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e例子：\u003ccode class=\"language-plaintext highlighter-rouge\"\u003efor (i in pop) delete pop[i]\u003c/code\u003e\u003c/p\u003e\n\n\u003ch4 id=\"split-到数组\"\u003eSplit 到数组\u003c/h4\u003e\n\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"nb\"\u003esplit\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;7/4/76\u0026#34;\u003c/span\u003e, arr, \u003cspan class=\"s2\"\u003e\u0026#34;/\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e得到的数组 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003earr\u003c/code\u003e：\u003c/p\u003e\n\n\u003col\u003e\n  \u003cli\u003e\u003ccode class=\"language-plaintext highlighter-rouge\"\u003earr[\u0026#34;1\u0026#34;] = 7\u003c/code\u003e\u003c/li\u003e\n  \u003cli\u003e\u003ccode class=\"language-plaintext highlighter-rouge\"\u003earr[\u0026#34;2\u0026#34;] = 4\u003c/code\u003e\u003c/li\u003e\n  \u003cli\u003e\u003ccode class=\"language-plaintext highlighter-rouge\"\u003earr[\u0026#34;3\u0026#34;] = 76\u003c/code\u003e\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003cp\u003e数组是用字符串来索引的，这可能有点反直觉。但由于 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003e1\u003c/code\u003e 的字符串形式是 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003e\u0026#34;1\u0026#34;\u003c/code\u003e，因此\n自动类型转换之后，\u003ccode class=\"language-plaintext highlighter-rouge\"\u003earr[1] == arr[\u0026#34;1\u0026#34;]\u003c/code\u003e。\u003c/p\u003e\n\n\u003ch4 id=\"多维数组\"\u003e多维数组\u003c/h4\u003e\n\n\u003cp\u003eAwk 并没有提供多维数组的原生支持，但提供了间接方式。\u003c/p\u003e\n\n\u003cp\u003e以下创建一个 10x10 的二维数组：\u003c/p\u003e\n\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"o\"\u003e(\u003c/span\u003ei \u003cspan class=\"o\"\u003e=\u003c/span\u003e 1\u003cspan class=\"p\"\u003e;\u003c/span\u003e i \u0026lt;\u003cspan class=\"o\"\u003e=\u003c/span\u003e 10\u003cspan class=\"p\"\u003e;\u003c/span\u003e i++\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n    \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"o\"\u003e(\u003c/span\u003ej \u003cspan class=\"o\"\u003e=\u003c/span\u003e 1\u003cspan class=\"p\"\u003e;\u003c/span\u003e j \u0026lt;\u003cspan class=\"o\"\u003e=\u003c/span\u003e 10\u003cspan class=\"p\"\u003e;\u003c/span\u003e j++\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n        arr[i, j] \u003cspan class=\"o\"\u003e=\u003c/span\u003e0\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e在内部，\u003ccode class=\"language-plaintext highlighter-rouge\"\u003ei, j\u003c/code\u003e 会被转换成 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003ei SUBSEP j\u003c/code\u003e 的形式，即将二维索引转换为一维字符串。\n默认的 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eSUBSEP\u003c/code\u003e 是逗号。\u003c/p\u003e\n\n\u003cp\u003e测试多维数组中某个 key 是否存在：\u003ccode class=\"language-plaintext highlighter-rouge\"\u003eif ((i,j) in arr) ...\u003c/code\u003e。\u003c/p\u003e\n\n\u003cp\u003e对多维数组进行遍历：\u003c/p\u003e\n\n\u003col\u003e\n  \u003cli\u003e外层：\u003ccode class=\"language-plaintext highlighter-rouge\"\u003efor (k in arr) ...\u003c/code\u003e\u003c/li\u003e\n  \u003cli\u003e内层：\u003ccode class=\"language-plaintext highlighter-rouge\"\u003esplit(k, x, SUBSEP)\u003c/code\u003e if access to the individual subscript components is needed.\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003cp\u003e\u003ca name=\"ch_2.3\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003ch2 id=\"23-user-defined-functions\"\u003e2.3 User-Defined Functions\u003c/h2\u003e\n\n\u003cp\u003e函数格式：\u003c/p\u003e\n\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003efunction \u003c/span\u003ename\u003cspan class=\"o\"\u003e(\u003c/span\u003eparameter-list\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n    statements\n\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e函数定义可以出现在任何位置。\u003c/p\u003e\n\n\u003cp\u003e例子：递归函数调用：\u003c/p\u003e\n\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"o\"\u003e{\u003c/span\u003e print max\u003cspan class=\"o\"\u003e(\u003c/span\u003eS1, max\u003cspan class=\"o\"\u003e(\u003c/span\u003eS2, S3\u003cspan class=\"o\"\u003e))\u003c/span\u003e \u003cspan class=\"o\"\u003e}\u003c/span\u003e \u003cspan class=\"c\"\u003e# print maximum of $1, $2, $3\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003efunction \u003c/span\u003emax\u003cspan class=\"o\"\u003e(\u003c/span\u003em, n\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ereturn \u003c/span\u003em \u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e n ? m : n\n\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e函数的参数：\u003c/p\u003e\n\n\u003col\u003e\n  \u003cli\u003e非数组按值传递，传递的是值的复制\u003c/li\u003e\n  \u003cli\u003e数组按引用传递，能改变数组内的值\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003ch2 id=\"24-output\"\u003e2.4 Output\u003c/h2\u003e\n\n\u003col\u003e\n  \u003cli\u003e\u003ccode class=\"language-plaintext highlighter-rouge\"\u003eprint\u003c/code\u003e：等价于 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eprint $0\u003c/code\u003e\u003c/li\u003e\n  \u003cli\u003e\u003ccode class=\"language-plaintext highlighter-rouge\"\u003eprint expr, expr, ...\u003c/code\u003e：打印多个表达式的值，之间用 OFS 分隔，最后以 ORS 结束\u003c/li\u003e\n  \u003cli\u003e\u003ccode class=\"language-plaintext highlighter-rouge\"\u003eprint expr, expr, ... \u0026gt; \u0026lt;file\u0026gt;\u003c/code\u003e\u003c/li\u003e\n  \u003cli\u003e\u003ccode class=\"language-plaintext highlighter-rouge\"\u003eprint expr, expr, ... \u0026gt;\u0026gt; \u0026lt;file\u0026gt;\u003c/code\u003e\u003c/li\u003e\n  \u003cli\u003e\u003ccode class=\"language-plaintext highlighter-rouge\"\u003eprint expr, expr, ... | other_command\u003c/code\u003e：重定向到其他命令的标准输入\u003c/li\u003e\n  \u003cli\u003e\u003ccode class=\"language-plaintext highlighter-rouge\"\u003eclose(filename)\u003c/code\u003e，\u003ccode class=\"language-plaintext highlighter-rouge\"\u003eclose(command)\u003c/code\u003e：\u003c/li\u003e\n  \u003cli\u003e\u003ccode class=\"language-plaintext highlighter-rouge\"\u003esystem(command)\u003c/code\u003e：\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003ch3 id=\"output-separators\"\u003eOutput Separators\u003c/h3\u003e\n\n\u003cp\u003e内置变量：\u003c/p\u003e\n\n\u003cul\u003e\n  \u003cli\u003eOFS（Output Field Separator）：默认是单个空格\u003c/li\u003e\n  \u003cli\u003eORS（Output Record Separator）：默认是单个换行符（\u003ccode class=\"language-plaintext highlighter-rouge\"\u003e\\n\u003c/code\u003e）\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003e例子：\u003ccode class=\"language-plaintext highlighter-rouge\"\u003eBEGIN { OFS =\u0026#34;:\u0026#34;; ORS =\u0026#34;\\n\\n\u0026#34; } { print $1, $2 }\u003c/code\u003e\u003c/p\u003e\n\n\u003ch3 id=\"output-to-file\"\u003eOutput to file\u003c/h3\u003e\n\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"o\"\u003e{\u003c/span\u003e print\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e$1\u003c/span\u003e, \u003cspan class=\"nv\"\u003e$3\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e$3\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e 100 ? \u003cspan class=\"s2\"\u003e\u0026#34;bigpop\u0026#34;\u003c/span\u003e : \u003cspan class=\"s2\"\u003e\u0026#34;smallpop\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"o\"\u003e{\u003c/span\u003e print \u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"nv\"\u003e$1\u003c/span\u003e \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"o\"\u003e{\u003c/span\u003e print \u003cspan class=\"nv\"\u003e$1\u003c/span\u003e, \u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e$2\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"nv\"\u003e$3\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003ch3 id=\"output-to-pipes\"\u003eOutput to Pipes\u003c/h3\u003e\n\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003eBEGIN \u003cspan class=\"o\"\u003e{\u003c/span\u003e FS \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"se\"\u003e\\t\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;\u003c/span\u003e \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n      \u003cspan class=\"o\"\u003e{\u003c/span\u003e pop[\u003cspan class=\"nv\"\u003e$4\u003c/span\u003e\u003cspan class=\"o\"\u003e]\u003c/span\u003e +\u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nv\"\u003e$3\u003c/span\u003e \u003cspan class=\"o\"\u003e}\u003c/span\u003e\nEND   \u003cspan class=\"o\"\u003e{\u003c/span\u003e \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"o\"\u003e(\u003c/span\u003ec \u003cspan class=\"k\"\u003ein \u003c/span\u003epop\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n            \u003cspan class=\"nb\"\u003eprintf\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;%15s\u003c/span\u003e\u003cspan class=\"se\"\u003e\\t\u003c/span\u003e\u003cspan class=\"s2\"\u003e%6d\u003c/span\u003e\u003cspan class=\"se\"\u003e\\n\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;\u003c/span\u003e, c, pop[c]\u003cspan class=\"o\"\u003e)\u003c/span\u003e | \u003cspan class=\"s2\"\u003e\u0026#34;sort -t\u0026#39;\u003c/span\u003e\u003cspan class=\"se\"\u003e\\t\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#39; +1rn\u0026#34;\u003c/span\u003e\n      \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003ch3 id=\"closing-flies-and-pipes\"\u003eClosing Flies and Pipes\u003c/h3\u003e\n\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003eclose\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;sort -t\u0026#39;\u003c/span\u003e\u003cspan class=\"se\"\u003e\\t\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#39; +1rn\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003eclose is necessary if you intend to write a file, then read it later in the\nsame program.\u003c/p\u003e\n\n\u003ch2 id=\"25-input-separators\"\u003e2.5 Input Separators\u003c/h2\u003e\n\n\u003cp\u003e内置变量 FS，默认为单个空格。Leading blanks and tabs are discarded。\u003c/p\u003e\n\n\u003cp\u003e\u003cstrong\u003e修改 FS 时，如果长度超过一个字符，会被认为是正则表达式\u003c/strong\u003e，例如，下面设置 FS 为\n以下两种情况之一：\u003c/p\u003e\n\n\u003col\u003e\n  \u003cli\u003e一个逗号后面跟着若干空格或 tab\u003c/li\u003e\n  \u003cli\u003e多个空格或 tab\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003eBEGIN \u003cspan class=\"o\"\u003e{\u003c/span\u003e FS \u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;,[ \u003c/span\u003e\u003cspan class=\"se\"\u003e\\t\u003c/span\u003e\u003cspan class=\"s2\"\u003e]*|[ \u003c/span\u003e\u003cspan class=\"se\"\u003e\\t\u003c/span\u003e\u003cspan class=\"s2\"\u003e]+\u0026#34;\u003c/span\u003e \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e例子，将 FS 改为 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003e|\u003c/code\u003e 字符：\u003ccode class=\"language-plaintext highlighter-rouge\"\u003eFS = \u0026#34;|\u0026#34;\u003c/code\u003e。注意，\u003cstrong\u003e改回空格字符时需要用中括号：\u003ccode class=\"language-plaintext highlighter-rouge\"\u003eFS = \u0026#34;[ ]\u0026#34;\u003c/code\u003e\u003c/strong\u003e。\u003c/p\u003e\n\n\u003cp\u003e也可以在命令行指定 FS，用 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003e-F\u003c/code\u003e：\u003c/p\u003e\n\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003e$ \u003c/span\u003e\u003cspan class=\"nb\"\u003eawk\u003c/span\u003e \u003cspan class=\"nt\"\u003e-F\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;,[ \\t]*|[ \\t]+\u0026#39;\u003c/span\u003e \u003cspan class=\"s1\"\u003e\u0026#39;program\u0026#39;\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003ch3 id=\"多行记录multiline-records\"\u003e多行记录（Multiline Records）\u003c/h3\u003e\n\n\u003cp\u003e默认情况下，record 是用换行符分隔的（Record Separator, RS），因此，术语 line 和 record 是等价的。\u003c/p\u003e\n\n\u003cp\u003e\u003cstrong\u003e如果将 RS 设置为空字符串：\u003ccode class=\"language-plaintext highlighter-rouge\"\u003eBEGIN { RS = \u0026#34;\u0026#34; }\u003c/code\u003e\u003c/strong\u003e，就将以一个或多个空格作为\nrecord 分隔符。这种情况下，\u003cstrong\u003e一个 record 就可以占多个（连续的）行\u003c/strong\u003e。\u003c/p\u003e\n\n\u003cp\u003e处理多行记录时的常用配置：\u003c/p\u003e\n\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003eBEGIN \u003cspan class=\"o\"\u003e{\u003c/span\u003e RS \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e FS \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"se\"\u003e\\n\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;\u003c/span\u003e \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003ch3 id=\"getline-函数\"\u003e\u003ccode class=\"language-plaintext highlighter-rouge\"\u003egetline\u003c/code\u003e 函数\u003c/h3\u003e\n\n\u003ctable\u003e\n  \u003cthead\u003e\n    \u003ctr\u003e\n      \u003cth style=\"text-align: left\"\u003e表达式\u003c/th\u003e\n      \u003cth style=\"text-align: left\"\u003e解释\u003c/th\u003e\n      \u003cth style=\"text-align: left\"\u003e设置哪些值\u003c/th\u003e\n    \u003c/tr\u003e\n  \u003c/thead\u003e\n  \u003ctbody\u003e\n    \u003ctr\u003e\n      \u003ctd style=\"text-align: left\"\u003e\u003ccode class=\"language-plaintext highlighter-rouge\"\u003egetline\u003c/code\u003e\u003c/td\u003e\n      \u003ctd style=\"text-align: left\"\u003e从标准输入读入行\u003c/td\u003e\n      \u003ctd style=\"text-align: left\"\u003e$0, NF, NR, FNR\u003c/td\u003e\n    \u003c/tr\u003e\n    \u003ctr\u003e\n      \u003ctd style=\"text-align: left\"\u003e\u003ccode class=\"language-plaintext highlighter-rouge\"\u003egetline var\u003c/code\u003e\u003c/td\u003e\n      \u003ctd style=\"text-align: left\"\u003e从标准输入读入行，存储到变量 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003evar\u003c/code\u003e\u003c/td\u003e\n      \u003ctd style=\"text-align: left\"\u003evar, NR, FNR\u003c/td\u003e\n    \u003c/tr\u003e\n    \u003ctr\u003e\n      \u003ctd style=\"text-align: left\"\u003e\u003ccode class=\"language-plaintext highlighter-rouge\"\u003egetline \u0026lt; file\u003c/code\u003e\u003c/td\u003e\n      \u003ctd style=\"text-align: left\"\u003e从文件读取行\u003c/td\u003e\n      \u003ctd style=\"text-align: left\"\u003e$0, NF\u003c/td\u003e\n    \u003c/tr\u003e\n    \u003ctr\u003e\n      \u003ctd style=\"text-align: left\"\u003e\u003ccode class=\"language-plaintext highlighter-rouge\"\u003egetline var \u0026lt; file\u003c/code\u003e\u003c/td\u003e\n      \u003ctd style=\"text-align: left\"\u003e从文件读入行，存储到变量 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003evar\u003c/code\u003e\u003c/td\u003e\n      \u003ctd style=\"text-align: left\"\u003e\u003ccode class=\"language-plaintext highlighter-rouge\"\u003evar\u003c/code\u003e\u003c/td\u003e\n    \u003c/tr\u003e\n    \u003ctr\u003e\n      \u003ctd style=\"text-align: left\"\u003e\u003ccode class=\"language-plaintext highlighter-rouge\"\u003ecmd | getline\u003c/code\u003e\u003c/td\u003e\n      \u003ctd style=\"text-align: left\"\u003e从标准输入读入行\u003c/td\u003e\n      \u003ctd style=\"text-align: left\"\u003e\u003ccode class=\"language-plaintext highlighter-rouge\"\u003e$0\u003c/code\u003e, \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eNF\u003c/code\u003e\u003c/td\u003e\n    \u003c/tr\u003e\n    \u003ctr\u003e\n      \u003ctd style=\"text-align: left\"\u003e\u003ccode class=\"language-plaintext highlighter-rouge\"\u003ecmd | getline var\u003c/code\u003e\u003c/td\u003e\n      \u003ctd style=\"text-align: left\"\u003e从标准输入读入行，存储到变量 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003evar\u003c/code\u003e\u003c/td\u003e\n      \u003ctd style=\"text-align: left\"\u003e\u003ccode class=\"language-plaintext highlighter-rouge\"\u003evar\u003c/code\u003e\u003c/td\u003e\n    \u003c/tr\u003e\n  \u003c/tbody\u003e\n\u003c/table\u003e\n\n\u003cp\u003e例子，将 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003e#include \u0026#34;test.awk\u0026#34;\u003c/code\u003e 替换为文件内容：\u003c/p\u003e\n\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e/\u003cspan class=\"s2\"\u003e\u0026#34;#include/ {\n    gsub(/\u0026#34;\u003c/span\u003e/, \u003cspan class=\"s2\"\u003e\u0026#34;\u0026#34;\u003c/span\u003e, \u003cspan class=\"nv\"\u003e$2\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ewhile\u003c/span\u003e \u003cspan class=\"o\"\u003e(\u003c/span\u003egetline x \u0026lt;\u003cspan class=\"nv\"\u003e$2\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e 0\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n        print x\n        next\n\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003cspan class=\"o\"\u003e{\u003c/span\u003e print \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e例子，统计已登录的用户数量：\u003c/p\u003e\n\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003ewhile\u003c/span\u003e \u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;who\u0026#34;\u003c/span\u003e | getline\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n    n++\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e这个例子中，\u003ccode class=\"language-plaintext highlighter-rouge\"\u003ewho\u003c/code\u003e 命令只会执行一次。\u003c/p\u003e\n\n\u003cp\u003e例子，获取当前时间，并赋值给变量：\u003c/p\u003e\n\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"s2\"\u003e\u0026#34;date\u0026#34;\u003c/span\u003e | getline d\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003egetline 出错时返回 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003e-1\u003c/code\u003e，因此，\u003c/p\u003e\n\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003ewhile\u003c/span\u003e \u003cspan class=\"o\"\u003e(\u003c/span\u003egetline \u0026lt;\u003cspan class=\"s2\"\u003e\u0026#34;file\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e ... \u003cspan class=\"c\"\u003e# Dangerous\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003ewhile\u003c/span\u003e \u003cspan class=\"o\"\u003e(\u003c/span\u003egetline \u0026lt;\u003cspan class=\"s2\"\u003e\u0026#34;file\u0026#34;\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e 0\u003cspan class=\"o\"\u003e)\u003c/span\u003e ... \u003cspan class=\"c\"\u003e# Safe\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003ch3 id=\"命令行输入\"\u003e命令行输入\u003c/h3\u003e\n\n\u003cp\u003eseq 程序的实现：\u003c/p\u003e\n\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003e$ \u003c/span\u003e\u003cspan class=\"nb\"\u003ecat \u003c/span\u003eseq.awk\n\u003cspan class=\"c\"\u003e# seq - print sequences of integers\u003c/span\u003e\n\u003cspan class=\"c\"\u003e# input: arguments q, p q, or p q r; q \u0026gt;= p; r \u0026gt; 0\u003c/span\u003e\n\u003cspan class=\"c\"\u003e# output: integers 1 to q, p to q, or p to q in steps of r\u003c/span\u003e\nBEGIN \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"o\"\u003e(\u003c/span\u003eARGC \u003cspan class=\"o\"\u003e==\u003c/span\u003e 2\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n        \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"o\"\u003e(\u003c/span\u003ei \u003cspan class=\"o\"\u003e=\u003c/span\u003e 1\u003cspan class=\"p\"\u003e;\u003c/span\u003e i \u0026lt;\u003cspan class=\"o\"\u003e=\u003c/span\u003e ARGV[1]\u003cspan class=\"p\"\u003e;\u003c/span\u003e i++\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n        print i\n    \u003cspan class=\"k\"\u003eelse if\u003c/span\u003e \u003cspan class=\"o\"\u003e(\u003c/span\u003eARGC \u003cspan class=\"o\"\u003e==\u003c/span\u003e 3\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n        \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"o\"\u003e(\u003c/span\u003ei \u003cspan class=\"o\"\u003e=\u003c/span\u003e ARGV[1]\u003cspan class=\"p\"\u003e;\u003c/span\u003e i \u0026lt;\u003cspan class=\"o\"\u003e=\u003c/span\u003e ARGV[2]\u003cspan class=\"p\"\u003e;\u003c/span\u003e i++\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n        print i\n    \u003cspan class=\"k\"\u003eelse if\u003c/span\u003e \u003cspan class=\"o\"\u003e(\u003c/span\u003eARGC \u003cspan class=\"o\"\u003e==\u003c/span\u003e 4\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n        \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"o\"\u003e(\u003c/span\u003ei \u003cspan class=\"o\"\u003e=\u003c/span\u003e ARGV[1]\u003cspan class=\"p\"\u003e;\u003c/span\u003e i \u0026lt;\u003cspan class=\"o\"\u003e=\u003c/span\u003e ARGV[2]\u003cspan class=\"p\"\u003e;\u003c/span\u003e i +\u003cspan class=\"o\"\u003e=\u003c/span\u003e ARGV[3]\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n        print i\n\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e测试：\u003c/p\u003e\n\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003e$ \u003c/span\u003e\u003cspan class=\"nb\"\u003eawk\u003c/span\u003e \u003cspan class=\"nt\"\u003e-f\u003c/span\u003e seq.awk 2\n1\n2\n\n\u003cspan class=\"nv\"\u003e$ \u003c/span\u003e\u003cspan class=\"nb\"\u003eawk\u003c/span\u003e \u003cspan class=\"nt\"\u003e-f\u003c/span\u003e seq.awk 1 3\n1\n2\n3\n\n\u003cspan class=\"nv\"\u003e$ \u003c/span\u003e\u003cspan class=\"nb\"\u003eawk\u003c/span\u003e \u003cspan class=\"nt\"\u003e-f\u003c/span\u003e seq.awk 1 5 2\n1\n3\n5\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003ch2 id=\"26-interaction-with-other-programs\"\u003e2.6 Interaction with Other Programs\u003c/h2\u003e\n\n\u003ch3 id=\"system-函数\"\u003e\u003ccode class=\"language-plaintext highlighter-rouge\"\u003esystem\u003c/code\u003e 函数\u003c/h3\u003e\n\n\u003cp\u003e用 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003esystem\u003c/code\u003e 实现上面的例子：\u003c/p\u003e\n\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003e$1\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;#include\u0026#34;\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e gsub\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;/\u0026#34;\u003c/span\u003e, \u003cspan class=\"s2\"\u003e\u0026#34;\u0026#34;\u003c/span\u003e, \u003cspan class=\"nv\"\u003e$2\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e system\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;cat\u0026#34;\u003c/span\u003e \u003cspan class=\"nv\"\u003e$2\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e next \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n                 \u003cspan class=\"o\"\u003e{\u003c/span\u003e print \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003ch3 id=\"用-awk-编写-shell-可执行程序\"\u003e用 AWK 编写 shell 可执行程序\u003c/h3\u003e\n\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"c\"\u003e# field - print named fields of each input line\u003c/span\u003e\n\u003cspan class=\"c\"\u003e# usage: field n n n ... file file file\u003c/span\u003e\n\n\u003cspan class=\"nb\"\u003eawk\u003c/span\u003e \u003cspan class=\"s1\"\u003e\u0026#39;\nBEGIN {\n    for (i = 1; ARGV[i] ~ /^[0-9]+$/; i++) { # collect numbers\n        fld[++nf] = ARGV[i]\n        ARGV[i] = \u0026#34;\u0026#34;\n    }\n    if (i \u0026gt;= ARGC) # no file names so force stdin\n        ARGV[ARGC++] = \u0026#34; - \u0026#34;\n}\n{\n    for (i = 1; i \u0026lt;= nf; i++)\n            printf(\u0026#34;\u0026#34;s%s\u0026#34;, $fld[i], i \u0026lt; nf? \u0026#34; \u0026#34; : \u0026#34;\\n\u0026#34;)\n}\n\u0026#39;\u003c/span\u003e \u003cspan class=\"nv\"\u003e$*\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e使用方式：\u003c/p\u003e\n\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003e$ \u003c/span\u003eprint-fields 1 2 3 \u0026lt;file2\u0026gt; \u0026lt;file2\u0026gt;\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003ch2 id=\"27-summary\"\u003e2.7 Summary\u003c/h2\u003e\n\n\u003cp\u003e\u003ca name=\"ch_3\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003ch1 id=\"3-数据处理data-processing\"\u003e3 数据处理（DATA PROCESSING）\u003c/h1\u003e\n\n\u003cp\u003e\u003ca name=\"ch_3.1\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003ch2 id=\"31-数据变换data-transformation-and-reduction\"\u003e3.1 数据变换（Data Transformation and Reduction）\u003c/h2\u003e\n\n\u003ch3 id=\"311-按列求和summing-columns\"\u003e3.1.1 按列求和（Summing Columns）\u003c/h3\u003e\n\n\u003cp\u003e输出每列的和，\u003cstrong\u003e如果列数不等，缺少的字段认为是 0\u003c/strong\u003e：\u003c/p\u003e\n\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003e$ \u003c/span\u003e\u003cspan class=\"nb\"\u003ecat \u003c/span\u003esum1.awk\n    \u003cspan class=\"o\"\u003e{\u003c/span\u003e \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003ei\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e1\u003cspan class=\"p\"\u003e;\u003c/span\u003e i\u0026lt;\u003cspan class=\"o\"\u003e=\u003c/span\u003eNF\u003cspan class=\"p\"\u003e;\u003c/span\u003e i++\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"nb\"\u003esum\u003c/span\u003e\u003cspan class=\"o\"\u003e[\u003c/span\u003ei] +\u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nv\"\u003e$i\u003c/span\u003e\n        \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"o\"\u003e(\u003c/span\u003eNF \u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e maxfld\u003cspan class=\"o\"\u003e)\u003c/span\u003e maxfld \u003cspan class=\"o\"\u003e=\u003c/span\u003e NF \u003cspan class=\"c\"\u003e# 记录最大列数\u003c/span\u003e\n      \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n    \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\nEND \u003cspan class=\"o\"\u003e{\u003c/span\u003e \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003ei\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e1\u003cspan class=\"p\"\u003e;\u003c/span\u003e i\u0026lt;\u003cspan class=\"o\"\u003e=\u003c/span\u003emaxfld\u003cspan class=\"p\"\u003e;\u003c/span\u003e i++\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"nb\"\u003eprintf\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;%g%s\u0026#34;\u003c/span\u003e, \u003cspan class=\"nb\"\u003esum\u003c/span\u003e\u003cspan class=\"o\"\u003e[\u003c/span\u003ei], i \u003cspan class=\"o\"\u003e==\u003c/span\u003e maxfld? \u003cspan class=\"s2\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"se\"\u003e\\n\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;\u003c/span\u003e : \u003cspan class=\"s2\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"se\"\u003e\\t\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e测试：\u003c/p\u003e\n\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003e$ \u003c/span\u003e\u003cspan class=\"nb\"\u003ecat \u003c/span\u003einput1.txt\n1 1 1 1 1 1\n1 1 1 1 1\n1 1 1 1\n\n\u003cspan class=\"nv\"\u003e$ \u003c/span\u003e\u003cspan class=\"nb\"\u003eawk\u003c/span\u003e \u003cspan class=\"nt\"\u003e-f\u003c/span\u003e sum1.awk input1.txt\n3       3       3       3       2       1\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e改进：检查列数是否相同：\u003c/p\u003e\n\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003e$ \u003c/span\u003e\u003cspan class=\"nb\"\u003ecat \u003c/span\u003esum2.awk\nNR \u003cspan class=\"o\"\u003e==\u003c/span\u003e 1 \u003cspan class=\"o\"\u003e{\u003c/span\u003e maxfld \u003cspan class=\"o\"\u003e=\u003c/span\u003e NF \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n        \u003cspan class=\"o\"\u003e{\u003c/span\u003e \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003ei\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e1\u003cspan class=\"p\"\u003e;\u003c/span\u003e i\u0026lt;\u003cspan class=\"o\"\u003e=\u003c/span\u003eNF\u003cspan class=\"p\"\u003e;\u003c/span\u003e i++\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"nb\"\u003esum\u003c/span\u003e\u003cspan class=\"o\"\u003e[\u003c/span\u003ei] +\u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nv\"\u003e$i\u003c/span\u003e\n          \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"o\"\u003e(\u003c/span\u003eNF \u003cspan class=\"o\"\u003e!=\u003c/span\u003e maxfld\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"nb\"\u003eprintf\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;Line %d has %d fields, not %d\u003c/span\u003e\u003cspan class=\"se\"\u003e\\n\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;\u003c/span\u003e, NR, NF, maxfld\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n        \u003cspan class=\"o\"\u003e}\u003c/span\u003e\nEND     \u003cspan class=\"o\"\u003e{\u003c/span\u003e \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003ei\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e1\u003cspan class=\"p\"\u003e;\u003c/span\u003e i\u0026lt;\u003cspan class=\"o\"\u003e=\u003c/span\u003emaxfld\u003cspan class=\"p\"\u003e;\u003c/span\u003e i++\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"nb\"\u003eprintf\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;%g%s\u0026#34;\u003c/span\u003e, \u003cspan class=\"nb\"\u003esum\u003c/span\u003e\u003cspan class=\"o\"\u003e[\u003c/span\u003ei], i \u003cspan class=\"o\"\u003e==\u003c/span\u003e maxfld? \u003cspan class=\"s2\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"se\"\u003e\\n\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;\u003c/span\u003e : \u003cspan class=\"s2\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"se\"\u003e\\t\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"nv\"\u003e$ \u003c/span\u003e\u003cspan class=\"nb\"\u003eawk\u003c/span\u003e \u003cspan class=\"nt\"\u003e-f\u003c/span\u003e sum2.awk input1.txt\nLine 2 has 5 fields, not 6\nLine 3 has 4 fields, not 6\n3       3       3       3       2       1\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e改进：非数字列打印 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003e--\u003c/code\u003e，数字列打印和：\u003c/p\u003e\n\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003e$ \u003c/span\u003e\u003cspan class=\"nb\"\u003ecat \u003c/span\u003esum3.awk\nNR \u003cspan class=\"o\"\u003e==\u003c/span\u003e 1 \u003cspan class=\"o\"\u003e{\u003c/span\u003e nfld \u003cspan class=\"o\"\u003e=\u003c/span\u003e NF\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003ei\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e1\u003cspan class=\"p\"\u003e;\u003c/span\u003e i\u0026lt;\u003cspan class=\"o\"\u003e=\u003c/span\u003eNF\u003cspan class=\"p\"\u003e;\u003c/span\u003e i++\u003cspan class=\"o\"\u003e)\u003c/span\u003e col[i] \u003cspan class=\"o\"\u003e=\u003c/span\u003e isnum\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e$i\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e}\u003c/span\u003e \u003cspan class=\"c\"\u003e# col[i] 为 1 表示该列为数字列\u003c/span\u003e\n        \u003cspan class=\"o\"\u003e{\u003c/span\u003e \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003ei\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e1\u003cspan class=\"p\"\u003e;\u003c/span\u003e i\u0026lt;\u003cspan class=\"o\"\u003e=\u003c/span\u003eNF\u003cspan class=\"p\"\u003e;\u003c/span\u003e i++\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"o\"\u003e(\u003c/span\u003ecol[i]\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"nb\"\u003esum\u003c/span\u003e\u003cspan class=\"o\"\u003e[\u003c/span\u003ei] +\u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nv\"\u003e$i\u003c/span\u003e \u003cspan class=\"o\"\u003e}\u003c/span\u003e      \u003cspan class=\"c\"\u003e# 只对数字列求和\u003c/span\u003e\nEND     \u003cspan class=\"o\"\u003e{\u003c/span\u003e \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003ei\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e1\u003cspan class=\"p\"\u003e;\u003c/span\u003e i\u0026lt;\u003cspan class=\"o\"\u003e=\u003c/span\u003eNF\u003cspan class=\"p\"\u003e;\u003c/span\u003e i++\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n              \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"o\"\u003e(\u003c/span\u003ecol[i]\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n                  \u003cspan class=\"nb\"\u003eprintf\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;%g\u0026#34;\u003c/span\u003e, \u003cspan class=\"nb\"\u003esum\u003c/span\u003e\u003cspan class=\"o\"\u003e[\u003c/span\u003ei]\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n              \u003cspan class=\"k\"\u003eelse\n                  \u003c/span\u003e\u003cspan class=\"nb\"\u003eprintf\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;--\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n              \u003cspan class=\"nb\"\u003eprintf\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;%s\u0026#34;\u003c/span\u003e, i \u003cspan class=\"o\"\u003e==\u003c/span\u003e nfld? \u003cspan class=\"s2\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"se\"\u003e\\n\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;\u003c/span\u003e : \u003cspan class=\"s2\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"se\"\u003e\\t\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n          \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n        \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003cspan class=\"k\"\u003efunction \u003c/span\u003eisnum\u003cspan class=\"o\"\u003e(\u003c/span\u003en\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\u003cspan class=\"k\"\u003ereturn \u003c/span\u003en ~ /^[+-]?[0-9]+\u003cspan class=\"nv\"\u003e$/\u003c/span\u003e \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003ch3 id=\"312-计算百分比和百分线quantiles\"\u003e3.1.2 计算百分比和百分线（Quantiles）\u003c/h3\u003e\n\n\u003cp\u003e计算直方图：\u003c/p\u003e\n\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003e$ \u003c/span\u003e\u003cspan class=\"nb\"\u003ecat \u003c/span\u003ehistogram.awk\n\u003cspan class=\"c\"\u003e# histogram\u003c/span\u003e\n\u003cspan class=\"c\"\u003e# input: numbers between 0 and 100\u003c/span\u003e\n\u003cspan class=\"c\"\u003e# output: histogram of deciles\u003c/span\u003e\n\n    \u003cspan class=\"o\"\u003e{\u003c/span\u003e x[int\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e$1\u003c/span\u003e/10\u003cspan class=\"o\"\u003e)]\u003c/span\u003e++ \u003cspan class=\"o\"\u003e}\u003c/span\u003e\nEND \u003cspan class=\"o\"\u003e{\u003c/span\u003e \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"o\"\u003e(\u003c/span\u003ei \u003cspan class=\"o\"\u003e=\u003c/span\u003e 0\u003cspan class=\"p\"\u003e;\u003c/span\u003e i \u0026lt; 10\u003cspan class=\"p\"\u003e;\u003c/span\u003e i++\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n          \u003cspan class=\"nb\"\u003eprintf\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34; %2d-%2d: %3d %s\u003c/span\u003e\u003cspan class=\"se\"\u003e\\n\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;\u003c/span\u003e, 10\u003cspan class=\"k\"\u003e*\u003c/span\u003ei, 10\u003cspan class=\"k\"\u003e*\u003c/span\u003ei+9, x[i], rep\u003cspan class=\"o\"\u003e(\u003c/span\u003ex[i],\u003cspan class=\"s2\"\u003e\u0026#34;*\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e))\u003c/span\u003e\n      \u003cspan class=\"nb\"\u003eprintf\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;100: %3d %s\u003c/span\u003e\u003cspan class=\"se\"\u003e\\n\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;\u003c/span\u003e, x[10], rep\u003cspan class=\"o\"\u003e(\u003c/span\u003ex[10], \u003cspan class=\"s2\"\u003e\u0026#34;*\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e))\u003c/span\u003e\n    \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003efunction \u003c/span\u003erep\u003cspan class=\"o\"\u003e(\u003c/span\u003en, s, t\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ewhile\u003c/span\u003e \u003cspan class=\"o\"\u003e(\u003c/span\u003en-- \u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e 0\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n        t \u003cspan class=\"o\"\u003e=\u003c/span\u003e t s\n    \u003cspan class=\"k\"\u003ereturn \u003c/span\u003et\n\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e测试：\u003c/p\u003e\n\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003e$ \u003c/span\u003e\u003cspan class=\"nb\"\u003eawk\u003c/span\u003e \u003cspan class=\"s1\"\u003e\u0026#39;BEGIN { for (i=1; i\u0026lt;20; i++) print int(101*rand()) }\u0026#39;\u003c/span\u003e | \u003cspan class=\"nb\"\u003eawk\u003c/span\u003e \u003cspan class=\"nt\"\u003e-f\u003c/span\u003e histogram.awk\n  0- 9:   2 \u003cspan class=\"k\"\u003e**\u003c/span\u003e\n 10-19:   1 \u003cspan class=\"k\"\u003e*\u003c/span\u003e\n 20-29:   2 \u003cspan class=\"k\"\u003e**\u003c/span\u003e\n 30-39:   0\n 40-49:   1 \u003cspan class=\"k\"\u003e*\u003c/span\u003e\n 50-59:   2 \u003cspan class=\"k\"\u003e**\u003c/span\u003e\n 60-69:   2 \u003cspan class=\"k\"\u003e**\u003c/span\u003e\n 70-79:   2 \u003cspan class=\"k\"\u003e**\u003c/span\u003e\n 80-89:   2 \u003cspan class=\"k\"\u003e**\u003c/span\u003e\n 90-99:   5 \u003cspan class=\"k\"\u003e*****\u003c/span\u003e\n100:  0\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003ch3 id=\"313-逗号格式的数字numbers-with-commas\"\u003e3.1.3 逗号格式的数字（Numbers with Commas）\u003c/h3\u003e\n\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003e$ \u003c/span\u003e\u003cspan class=\"nb\"\u003ecat \u003c/span\u003eaddcomma.awk\n\u003cspan class=\"c\"\u003e# addcomma - put commas in numbers\u003c/span\u003e\n\u003cspan class=\"c\"\u003e# input: a number per line\u003c/span\u003e\n\u003cspan class=\"c\"\u003e# output: the input number followed by\u003c/span\u003e\n\u003cspan class=\"c\"\u003e#         the number with commas and two decimal places\u003c/span\u003e\n\u003cspan class=\"o\"\u003e{\u003c/span\u003e \u003cspan class=\"nb\"\u003eprintf\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;%-12s %20s\u003c/span\u003e\u003cspan class=\"se\"\u003e\\n\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;\u003c/span\u003e, \u003cspan class=\"nv\"\u003e$0\u003c/span\u003e, addcomma\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e$0\u003c/span\u003e\u003cspan class=\"o\"\u003e))\u003c/span\u003e \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003efunction \u003c/span\u003eaddcomma\u003cspan class=\"o\"\u003e(\u003c/span\u003ex, num\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"o\"\u003e(\u003c/span\u003ex \u0026lt; 0\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n        \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;-\u0026#34;\u003c/span\u003e addcomma\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"nt\"\u003e-x\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n\n    num \u003cspan class=\"o\"\u003e=\u003c/span\u003e sprintf\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;%.2f\u0026#34;\u003c/span\u003e, x\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"c\"\u003e# 转换成小数点后固定两位，后面高能预警\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ewhile\u003c/span\u003e \u003cspan class=\"o\"\u003e(\u003c/span\u003enum ~ /[0-9][0-9][0-9][0-9]/\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n        sub\u003cspan class=\"o\"\u003e(\u003c/span\u003e/[0-9][0-9][0-9][,.]/, \u003cspan class=\"s2\"\u003e\u0026#34;,\u0026amp;\u0026#34;\u003c/span\u003e, num\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ereturn \u003c/span\u003enum\n\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e解释：\u003c/p\u003e\n\n\u003col\u003e\n  \u003cli\u003e第一次时没有逗号，因此会匹配到小数点及其左边四位，然后插入一个逗号\u003c/li\u003e\n  \u003cli\u003e由于 AWK 总是从左往右匹配，因此从第二次开始，每次都能匹配到最左边的逗号及其左边四位，然后插入一个新逗号\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003cdiv class=\"language-plaintext highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e$ awk -f addcomma.awk comma-numbers.txt\n0                            0.00\n-1                          -1.00\n-12.34                     -12.34\n12345                   12,345.00\n-1234567.89         -1,234,567.89\n-123.                     -123.00\n-123456               -123,456.00\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003ch3 id=\"314-固定宽度字段fixed-field-input\"\u003e3.1.4 固定宽度字段（Fixed-Field Input）\u003c/h3\u003e\n\n\u003cp\u003e适合用 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003esubstr(s, start, len)\u003c/code\u003e 处理。\u003c/p\u003e\n\n\u003ch3 id=\"315-交叉索引从不同行获取输入\"\u003e3.1.5 交叉索引：从不同行获取输入\u003c/h3\u003e\n\n\u003cp\u003e\u003ccode class=\"language-plaintext highlighter-rouge\"\u003enm\u003c/code\u003e 输出对象文件中的符号信息，其输出格式如下：\u003c/p\u003e\n\n\u003col\u003e\n  \u003cli\u003e文件名单独占一行\u003c/li\u003e\n  \u003cli\u003e每个符号占一行，但该行可能有两列，也可能有三列\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003e$ \u003c/span\u003e\u003cspan class=\"nb\"\u003ecat \u003c/span\u003enm-output.txt\nfile.o:\n00000c80 T _addroot\n00000b30 T \u003cspan class=\"nt\"\u003e-checkdev\u003c/span\u003e\n00000a3c T \u003cspan class=\"nt\"\u003e-checkdupl\u003c/span\u003e\n         U \u003cspan class=\"nt\"\u003e-chown\u003c/span\u003e\n         U _client\n         U _close\nfunmount.o:\n00000000 T _funmount\n         U cerror\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e例子：\u003cstrong\u003e打印每个符号，及其所在文件\u003c/strong\u003e：\u003c/p\u003e\n\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003e$ \u003c/span\u003e\u003cspan class=\"nb\"\u003ecat \u003c/span\u003eadd-filename.awk\nNF \u003cspan class=\"o\"\u003e==\u003c/span\u003e 1 \u003cspan class=\"o\"\u003e{\u003c/span\u003e file \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nv\"\u003e$1\u003c/span\u003e \u003cspan class=\"o\"\u003e}\u003c/span\u003e\nNF \u003cspan class=\"o\"\u003e==\u003c/span\u003e 2 \u003cspan class=\"o\"\u003e{\u003c/span\u003e print file, \u003cspan class=\"nv\"\u003e$1\u003c/span\u003e, \u003cspan class=\"nv\"\u003e$2\u003c/span\u003e \u003cspan class=\"o\"\u003e}\u003c/span\u003e\nNF \u003cspan class=\"o\"\u003e==\u003c/span\u003e 3 \u003cspan class=\"o\"\u003e{\u003c/span\u003e print file, \u003cspan class=\"nv\"\u003e$2\u003c/span\u003e, \u003cspan class=\"nv\"\u003e$3\u003c/span\u003e \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"nv\"\u003e$ \u003c/span\u003e\u003cspan class=\"nb\"\u003eawk\u003c/span\u003e \u003cspan class=\"nt\"\u003e-f\u003c/span\u003e add-filename.awk nm-output.txt\nfile.o: T _addroot\nfile.o: T \u003cspan class=\"nt\"\u003e-checkdev\u003c/span\u003e\nfile.o: T \u003cspan class=\"nt\"\u003e-checkdupl\u003c/span\u003e\nfile.o: U \u003cspan class=\"nt\"\u003e-chown\u003c/span\u003e\nfile.o: U _client\nfile.o: U _close\nfunmount.o: T _funmount\nfunmount.o: U cerror\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e\u003ca name=\"ch_3.2\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003ch2 id=\"32-data-validation\"\u003e3.2 Data Validation\u003c/h2\u003e\n\n\u003cp\u003e\u003ca name=\"ch_3.3\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003ch2 id=\"33-bundle-and-unbundle合并拆分文件\"\u003e3.3 Bundle and Unbundle（合并/拆分文件）\u003c/h2\u003e\n\n\u003cp\u003e将多个文件合并为一个文件，在原文件每行前面加上 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003efilename\u003c/code\u003e：\u003c/p\u003e\n\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"o\"\u003e{\u003c/span\u003e print FILENAME, \u003cspan class=\"nv\"\u003e$0\u003c/span\u003e \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e这里生成的新文件会在 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eFILENAME\u003c/code\u003e 和原文件行直接加一个空格（默认 FS）。\u003c/p\u003e\n\n\u003cp\u003e拆分成单独文件（前方高能预警）：\u003c/p\u003e\n\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003e$1\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e prev \u003cspan class=\"o\"\u003e{\u003c/span\u003e close\u003cspan class=\"o\"\u003e(\u003c/span\u003eprev\u003cspan class=\"o\"\u003e)\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e prev \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nv\"\u003e$1\u003c/span\u003e \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n           \u003cspan class=\"o\"\u003e{\u003c/span\u003e print substr\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e$0\u003c/span\u003e, index\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e$0\u003c/span\u003e, \u003cspan class=\"s2\"\u003e\u0026#34; \u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e+1\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026gt;\u0026gt;\u003c/span\u003e \u003cspan class=\"nv\"\u003e$1\u003c/span\u003e \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e\u003ca name=\"ch_3.4\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003ch2 id=\"34-multiline-records\"\u003e3.4 Multiline Records\u003c/h2\u003e\n\n\u003cp\u003e本小节中，记录（record）和行（line）不再等价。\u003c/p\u003e\n\n\u003ch3 id=\"records-separated-by-blank-lines\"\u003eRecords Separated by Blank Lines\u003c/h3\u003e\n\n\u003cp\u003e输入文件：\u003c/p\u003e\n\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003e$ \u003c/span\u003e\u003cspan class=\"nb\"\u003ecat \u003c/span\u003eaddresses.txt\nAdam Smith\n1234 Wall St., Apt. 5C\nNew York, NY 10021\n212 555-4321\n\nDavid w. Copperfield\n221 Dickens Lane\nMonterey, CA 93940\n408 555-0041\nwork phone 408 555-6532\nMary, birthday January 30\n\nCanadian Consulate\n555 Fifth Ave\nNew York, NY\n212 586-2400\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e设置 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eRS\u003c/code\u003e 为空行后，匹配 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eNew York\u003c/code\u003e 会打印所有包含 “New York” 的\u003cstrong\u003e记录\u003c/strong\u003e（而不是行！）：\u003c/p\u003e\n\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003e$ \u003c/span\u003e\u003cspan class=\"nb\"\u003eawk\u003c/span\u003e \u003cspan class=\"s1\"\u003e\u0026#39;BEGIN { RS=\u0026#34;\u0026#34; } /New York/ \u0026#39;\u003c/span\u003e addresses.txt\nAdam Smith\n1234 Wall St., Apt. 5C\nNew York, NY 10021\n212 555-4321\nMary, birthday January 30\nCanadian Consulate\n555 Fifth Ave\nNew York, NY\n212 586-2400\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e同时修改 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eORS\u003c/code\u003e，以便隔开每个记录：\u003c/p\u003e\n\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003e$ \u003c/span\u003e\u003cspan class=\"nb\"\u003eawk\u003c/span\u003e \u003cspan class=\"s1\"\u003e\u0026#39;BEGIN { RS=\u0026#34;\u0026#34;; ORS=\u0026#34;\\n\\n\u0026#34; } /New York/ \u0026#39;\u003c/span\u003e addresses.txt\nAdam Smith\n1234 Wall St., Apt. 5C\nNew York, NY 10021\n212 555-4321\nMary, birthday January 30\n\nCanadian Consulate\n555 Fifth Ave\nNew York, NY\n212 586-2400\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e注意：\u003cstrong\u003e记录分隔符 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eRS\u003c/code\u003e 设为 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003e\u0026#34;\u0026#34;\u003c/code\u003e 后，以下都是字段分隔符 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eFS\u003c/code\u003e\u003c/strong\u003e：\u003c/p\u003e\n\n\u003cul\u003e\n  \u003cli\u003e空格\u003c/li\u003e\n  \u003cli\u003etab\u003c/li\u003e\n  \u003cli\u003e换行\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003e如果只想让 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eFS\u003c/code\u003e 为换行符，需要显示设置：\u003ccode class=\"language-plaintext highlighter-rouge\"\u003eBEGIN { RS=\u0026#34;\u0026#34;; FS=\u0026#34;\\n\u0026#34; }\u003c/code\u003e。\u003c/p\u003e\n\n\u003ch3 id=\"processing-multiline-records\"\u003eProcessing Multiline Records\u003c/h3\u003e\n\n\u003cp\u003e按 lastname 排序，打印原文件：\u003c/p\u003e\n\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003e$ \u003c/span\u003e\u003cspan class=\"nb\"\u003ecat \u003c/span\u003esort-by-lastname.sh\n\u003cspan class=\"c\"\u003e# pipeline to sort address list by last names\u003c/span\u003e\n\u003cspan class=\"nb\"\u003eawk\u003c/span\u003e \u003cspan class=\"s1\"\u003e\u0026#39;\nBEGIN { RS = \u0026#34;\u0026#34;; FS = \u0026#34;\\n\u0026#34; }\n      { printf(\u0026#34;%s!!#\u0026#34;, x[split($1, x, \u0026#34; \u0026#34;)])         # 此时 FS=\u0026#34;\\n\u0026#34;，因此 $1 是第一行\n        for (i = 1; i \u0026lt;= NF; i++)\n            printf(\u0026#34;%s%s\u0026#34; , $i, i \u0026lt; NF? \u0026#34;!!#\u0026#34; : \u0026#34;\\n\u0026#34;)\n      }\n\u0026#39;\u003c/span\u003e |\n\u003cspan class=\"nb\"\u003esort\u003c/span\u003e |\n\u003cspan class=\"nb\"\u003eawk\u003c/span\u003e \u003cspan class=\"s1\"\u003e\u0026#39;\nBEGIN { FS = \u0026#34;!!#\u0026#34; }\n      { for (i = 2; i \u0026lt;= NF; i++)\n            printf(\u0026#34;%s\\n\u0026#34;, $i)\n        printf (\u0026#34;\\n\u0026#34;)\n      }\n\u0026#39;\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e解释：\u003c/p\u003e\n\n\u003col\u003e\n  \u003cli\u003e第一个 awk 逻辑\n    \u003col\u003e\n      \u003cli\u003e从每个 record 的第一行里取出 lastname，连同一个自定义的 FS \u003ccode class=\"language-plaintext highlighter-rouge\"\u003e!!#\u003c/code\u003e，append 到每行开始\u003c/li\u003e\n      \u003cli\u003e用自定义的 FS \u003ccode class=\"language-plaintext highlighter-rouge\"\u003e!!#\u003c/code\u003e 连接每个 record 的行，这样整改 record 就变成了一行\u003c/li\u003e\n    \u003c/ol\u003e\n  \u003c/li\u003e\n  \u003cli\u003e直接 pipeline 到 sort 命令，对新生成的行排序\u003c/li\u003e\n  \u003cli\u003e第二个 awk 逻辑\n    \u003col\u003e\n      \u003cli\u003e设置 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eFS=!!#\u003c/code\u003e，取第二列到最后一列，顺序打印，即为原来的 record 内容\u003c/li\u003e\n    \u003c/ol\u003e\n  \u003c/li\u003e\n\u003c/ol\u003e\n\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003e$ \u003c/span\u003ebash sort-by-lastname.sh \u0026lt; addresses.txt\nCanadian Consulate\n555 Fifth Ave\nNew York, NY\n212 586-2400\n\nDavid w. Copperfield\n221 Dickens Lane\nMonterey, CA 93940\n408 555-0041\nwork phone 408 555-6532\nMary, birthday January 30\n\nAdam Smith\n1234 Wall St., Apt. 5C\nNew York, NY 10021\n212 555-4321\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003ch3 id=\"records-with-headers-and-trailers\"\u003eRecords with Headers and Trailers\u003c/h3\u003e\n\n\u003cp\u003e每个 record 的第一行表示职业：\u003c/p\u003e\n\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003e$ \u003c/span\u003e\u003cspan class=\"nb\"\u003ecat \u003c/span\u003eaddresses-2.txt\naccountant\nAdam Smith\n1234 Wall St., Apt. SC\nNew York, NY 10021\n\ndoctor - ophthalmologist\nDr. Will Seymour\n798 Maple Blvd.\nBerkeley Heights, NJ 07922\n\nlawyer\nDavid w. Copperfield\n221 Dickens Lane\nMonterey, CA 93940\n\ndoctor - pediatrician\nDr. Susan Mark\n600 Mountain Avenue\nMurray Hill, NJ 07974\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e用 range filter 过滤出所有的 doctor：\u003c/p\u003e\n\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003e$ \u003c/span\u003e\u003cspan class=\"nb\"\u003eawk\u003c/span\u003e \u003cspan class=\"s1\"\u003e\u0026#39;/^doctor/, \u0026#39;\u003c/span\u003e/^\u003cspan class=\"nv\"\u003e$/\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;\u0026#39;\u003c/span\u003e addresses-2.txt\ndoctor - ophthalmologist\nDr. Will Seymour\n798 Maple Blvd.\nBerkeley Heights, NJ 07922\n\ndoctor - pediatrician\nDr. Susan Mark\n600 Mountain Avenue\nMurray Hill, NJ 07974\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e不打印职业这一行（经典！）：\u003c/p\u003e\n\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003e$ \u003c/span\u003e\u003cspan class=\"nb\"\u003ecat \u003c/span\u003eomit-header.awk\n/^doctor/ \u003cspan class=\"o\"\u003e{\u003c/span\u003e \u003cspan class=\"nv\"\u003ep\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e1\u003cspan class=\"p\"\u003e;\u003c/span\u003e next \u003cspan class=\"o\"\u003e}\u003c/span\u003e \u003cspan class=\"c\"\u003e# 刚匹配到这一模式时 p=0；设置 p=1 后紧接着执行 next，会跳到下一行，因此不会执行下面的打印\u003c/span\u003e\np \u003cspan class=\"o\"\u003e==\u003c/span\u003e 1                  \u003cspan class=\"c\"\u003e# 默认 action 是 print\u003c/span\u003e\n/^\u003cspan class=\"nv\"\u003e$/\u003c/span\u003e      \u003cspan class=\"o\"\u003e{\u003c/span\u003e \u003cspan class=\"nv\"\u003ep\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e0\u003cspan class=\"p\"\u003e;\u003c/span\u003e next \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"nv\"\u003e$ \u003c/span\u003e\u003cspan class=\"nb\"\u003eawk\u003c/span\u003e \u003cspan class=\"nt\"\u003e-f\u003c/span\u003e omit-header.awk addresses-2.txt\nDr. Will Seymour\n798 Maple Blvd.\nBerkeley Heights, NJ 07922\n\nDr. Susan Mark\n600 Mountain Avenue\nMurray Hill, NJ 07974\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003ch3 id=\"name-value-data\"\u003eName-value Data\u003c/h3\u003e\n\n\u003cp\u003e存款（deposit）、取款（check）记录：\u003c/p\u003e\n\n\u003cul\u003e\n  \u003cli\u003edeposit 行只有一列\u003c/li\u003e\n  \u003cli\u003echeck 行有两列\u003c/li\u003e\n  \u003cli\u003edate, amount, to, tax 列为键值\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003e$ \u003c/span\u003e\u003cspan class=\"nb\"\u003ecat \u003c/span\u003edeposits-checks.txt\ncheck 1021\nto Champagne Unlimited\namount 123.10\n\u003cspan class=\"nb\"\u003edate \u003c/span\u003e1/1/87\n\ndeposit\namount 500.00\n\u003cspan class=\"nb\"\u003edate \u003c/span\u003e1/1/87\n\ncheck 1022\n\u003cspan class=\"nb\"\u003edate \u003c/span\u003e1/2/87\namount 45.10\nto Getwell Drug Store\ntax medical\n\ncheck 1023\namount 125.00\nto International Travel\n\u003cspan class=\"nb\"\u003edate \u003c/span\u003e1/3/87\n\namount 50.00\nto Carnegie Hall\n\u003cspan class=\"nb\"\u003edate \u003c/span\u003e1/3/87\ncheck 1024\ntax charitable contribution\nto American Express\n\ncheck 1025\namount 75.75\n\u003cspan class=\"nb\"\u003edate \u003c/span\u003e1/5/87\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e例子：统计总存款和总取款额（经典！）：\u003c/p\u003e\n\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003e$ \u003c/span\u003e\u003cspan class=\"nb\"\u003ecat \u003c/span\u003echeck1.awk\n/^check/   \u003cspan class=\"o\"\u003e{\u003c/span\u003e \u003cspan class=\"nv\"\u003eck\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e1\u003cspan class=\"p\"\u003e;\u003c/span\u003e next \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n/^deposit/ \u003cspan class=\"o\"\u003e{\u003c/span\u003e \u003cspan class=\"nv\"\u003edp\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e1\u003cspan class=\"p\"\u003e;\u003c/span\u003e next \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n/^amount/  \u003cspan class=\"o\"\u003e{\u003c/span\u003e \u003cspan class=\"nv\"\u003en\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"nv\"\u003e$2\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e next \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n/^\u003cspan class=\"nv\"\u003e$/\u003c/span\u003e       \u003cspan class=\"o\"\u003e{\u003c/span\u003e addup\u003cspan class=\"o\"\u003e()\u003c/span\u003e \u003cspan class=\"o\"\u003e}\u003c/span\u003e\nEND        \u003cspan class=\"o\"\u003e{\u003c/span\u003e addup\u003cspan class=\"o\"\u003e()\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"nb\"\u003eprintf\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;deposits: %.2f, checks: %.2f\u003c/span\u003e\u003cspan class=\"se\"\u003e\\n\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;\u003c/span\u003e, deposits, checks\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003efunction \u003c/span\u003eaddup\u003cspan class=\"o\"\u003e()\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"o\"\u003e(\u003c/span\u003eck\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n        checks +\u003cspan class=\"o\"\u003e=\u003c/span\u003e n\n    \u003cspan class=\"k\"\u003eelse if\u003c/span\u003e \u003cspan class=\"o\"\u003e(\u003c/span\u003edp\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n        deposits +\u003cspan class=\"o\"\u003e=\u003c/span\u003e n\n    ck \u003cspan class=\"o\"\u003e=\u003c/span\u003e dp \u003cspan class=\"o\"\u003e=\u003c/span\u003e n \u003cspan class=\"o\"\u003e=\u003c/span\u003e 0\n\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"nv\"\u003e$ \u003c/span\u003e\u003cspan class=\"nb\"\u003eawk\u003c/span\u003e \u003cspan class=\"nt\"\u003e-f\u003c/span\u003e check1.awk deposits-checks.txt\ndeposits: 500.00, checks: 418.95\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e\u003ca name=\"ch_3.5\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003ch2 id=\"35-summary\"\u003e3.5 Summary\u003c/h2\u003e\n\n\u003cp\u003e\u003ca name=\"ch_4\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003ch1 id=\"4-报表和数据库reports-and-databases\"\u003e4 报表和数据库（REPORTS AND DATABASES）\u003c/h1\u003e\n\n\u003cp\u003e\u003ca name=\"ch_4.1\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003ch2 id=\"41-生成报表generating-reports\"\u003e4.1 生成报表（Generating Reports）\u003c/h2\u003e\n\n\u003cp\u003e还是用第二章的输入：\u003c/p\u003e\n\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"c\"\u003e# 四列分别为：国家 面积 人口 洲\u003c/span\u003e\n\u003cspan class=\"nv\"\u003e$ \u003c/span\u003e\u003cspan class=\"nb\"\u003ecat \u003c/span\u003ecountries.txt\nUSSR    8642    275     Asia\nCanada  3852    25      North America\nChina   3705    1032    Asia\nUSA     3615    237     North America\nBrazil  3286    134     South America\nIndia   1267    746     Asia\nMexico  762     78      North America\nFrance  211     55      Europe\nJapan   144     120     Asia\nGermany 96      61      Europe\nEngland 94      56      Europe\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e生成报表一般分两个步骤：\u003c/p\u003e\n\n\u003col\u003e\n  \u003cli\u003e整理（准备）数据，生成中间数据\u003c/li\u003e\n  \u003cli\u003e基于中间数据，生成报表\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003cp\u003e例子：生成一个报表，要求：\u003c/p\u003e\n\n\u003col\u003e\n  \u003cli\u003e每列分别为洲、国家、面积、人口、人口密度\u003c/li\u003e\n  \u003cli\u003e输出结果按洲排序；在洲内，按人口密度降序排序\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003ch3 id=\"411-版本一\"\u003e4.1.1 版本一\u003c/h3\u003e\n\n\u003cp\u003e第一步：整理数据，将原始数据按以上顺序排列。格式：\u003ccode class=\"language-plaintext highlighter-rouge\"\u003e洲:国家:面积:人口:人口密度\u003c/code\u003e。\u003c/p\u003e\n\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003e$ \u003c/span\u003e\u003cspan class=\"nb\"\u003ecat \u003c/span\u003eprepare1.awk\nBEGIN \u003cspan class=\"o\"\u003e{\u003c/span\u003e FS \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"se\"\u003e\\t\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;\u003c/span\u003e \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n      \u003cspan class=\"o\"\u003e{\u003c/span\u003e \u003cspan class=\"nb\"\u003eprintf\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;%s:%s:%d:%d:%.1f\u003c/span\u003e\u003cspan class=\"se\"\u003e\\n\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;\u003c/span\u003e,\n          \u003cspan class=\"nv\"\u003e$4\u003c/span\u003e, \u003cspan class=\"nv\"\u003e$1\u003c/span\u003e, \u003cspan class=\"nv\"\u003e$3\u003c/span\u003e, \u003cspan class=\"nv\"\u003e$2\u003c/span\u003e, 1000\u003cspan class=\"k\"\u003e*\u003c/span\u003e\u003cspan class=\"nv\"\u003e$3\u003c/span\u003e/\u003cspan class=\"nv\"\u003e$2\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e | \u003cspan class=\"s2\"\u003e\u0026#34;sort -t: +0 -1 +4rn\u0026#34;\u003c/span\u003e\n      \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"nv\"\u003e$ \u003c/span\u003e\u003cspan class=\"nb\"\u003eawk\u003c/span\u003e \u003cspan class=\"nt\"\u003e-f\u003c/span\u003e prepare1.awk countries.txt\nAsia:Japan:120:144:833.3\nAsia:India:746:1267:588.8\nAsia:China:1032:3705:278.5\nAsia:USSR:275:8642:31.8\nEurope:Germany:61:96:635.4\nEurope:England:56:94:595.7\nEurope:France:55:211:260.7\nNorth America:Mexico:78:762:102.4\nNorth America:USA:237:3615:65.6\nNorth America:Canada:25:3852:6.5\nSouth America:Brazil:134:3286:40.8\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003esort 参数：\u003c/p\u003e\n\n\u003cul\u003e\n  \u003cli\u003e\u003ccode class=\"language-plaintext highlighter-rouge\"\u003e-t:\u003c/code\u003e：指定冒号作为字段分隔符\u003c/li\u003e\n  \u003cli\u003e\u003ccode class=\"language-plaintext highlighter-rouge\"\u003e+0 -1\u003c/code\u003e：指定第一个字段作为排序主键（primary key）\u003c/li\u003e\n  \u003cli\u003e\u003ccode class=\"language-plaintext highlighter-rouge\"\u003e+4rn\u003c/code\u003e：将第五个字段作为第二主键（secondary），并以数字降序（reverse numerical order）排序\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003e第二步，生成报表：\u003c/p\u003e\n\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003e$ \u003c/span\u003e\u003cspan class=\"nb\"\u003ecat \u003c/span\u003eform1.awk\n\u003cspan class=\"c\"\u003e# form1 - format countries data by continent, pop. den.\u003c/span\u003e\nBEGIN \u003cspan class=\"o\"\u003e{\u003c/span\u003e FS \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;:\u0026#34;\u003c/span\u003e\n        \u003cspan class=\"nb\"\u003eprintf\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;%-15s %-10s %10s %7s %12s\u003c/span\u003e\u003cspan class=\"se\"\u003e\\n\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;\u003c/span\u003e,\n           \u003cspan class=\"s2\"\u003e\u0026#34;CONTINENT\u0026#34;\u003c/span\u003e, \u003cspan class=\"s2\"\u003e\u0026#34;COUNTRY\u0026#34;\u003c/span\u003e, \u003cspan class=\"s2\"\u003e\u0026#34;POPULATION\u0026#34;\u003c/span\u003e, \u003cspan class=\"s2\"\u003e\u0026#34;AREA\u0026#34;\u003c/span\u003e, \u003cspan class=\"s2\"\u003e\u0026#34;POP. DEN.\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n      \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n      \u003cspan class=\"o\"\u003e{\u003c/span\u003e \u003cspan class=\"nb\"\u003eprintf\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;%-15s %-10s %7d %10d %10.1f\u003c/span\u003e\u003cspan class=\"se\"\u003e\\n\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;\u003c/span\u003e, \u003cspan class=\"nv\"\u003e$1\u003c/span\u003e, \u003cspan class=\"nv\"\u003e$2\u003c/span\u003e, \u003cspan class=\"nv\"\u003e$3\u003c/span\u003e, \u003cspan class=\"nv\"\u003e$4\u003c/span\u003e, \u003cspan class=\"nv\"\u003e$5\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"nv\"\u003e$ \u003c/span\u003e\u003cspan class=\"nb\"\u003eawk\u003c/span\u003e \u003cspan class=\"nt\"\u003e-f\u003c/span\u003e prepare1.awk countries.txt | \u003cspan class=\"nb\"\u003eawk\u003c/span\u003e \u003cspan class=\"nt\"\u003e-f\u003c/span\u003e form1.awk\nCONTINENT       COUNTRY    POPULATION    AREA    POP. DEN.\nAsia            Japan          120        144      833.3\nAsia            India          746       1267      588.8\nAsia            China         1032       3705      278.5\nAsia            USSR           275       8642       31.8\nEurope          Germany         61         96      635.4\nEurope          England         56         94      595.7\nEurope          France          55        211      260.7\nNorth America   Mexico          78        762      102.4\nNorth America   USA            237       3615       65.6\nNorth America   Canada          25       3852        6.5\nSouth America   Brazil         134       3286       40.8\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003ch3 id=\"412-版本二\"\u003e4.1.2 版本二\u003c/h3\u003e\n\n\u003cp\u003e上面的版本需要对 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003esort\u003c/code\u003e 高级参数比较熟悉，如果用 sort\n默认排序规则（不带任何参数），该怎么实现这个功能？\u003c/p\u003e\n\n\u003cp\u003e\u003ccode class=\"language-plaintext highlighter-rouge\"\u003esort\u003c/code\u003e 默认是按字母顺序升序排序的，这个例子要求第一列用字母升序排序，最后一列按数字降序排序，我们可以\n插入一个新列作为第二列，值是人口密度的倒数。然后将整行作为一个字符串，交给 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003esort\u003c/code\u003e 排序。\u003c/p\u003e\n\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003e$ \u003c/span\u003e\u003cspan class=\"nb\"\u003ecat \u003c/span\u003eprepare2.awk\nBEGIN \u003cspan class=\"o\"\u003e{\u003c/span\u003e FS \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"se\"\u003e\\t\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;\u003c/span\u003e \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n      \u003cspan class=\"o\"\u003e{\u003c/span\u003e den \u003cspan class=\"o\"\u003e=\u003c/span\u003e 1000 \u003cspan class=\"k\"\u003e*\u003c/span\u003e \u003cspan class=\"nv\"\u003e$3\u003c/span\u003e / \u003cspan class=\"nv\"\u003e$2\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n          \u003cspan class=\"nb\"\u003eprintf\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;%-15s:%12.8f:%s:%d:%d:%.1f\u003c/span\u003e\u003cspan class=\"se\"\u003e\\n\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;\u003c/span\u003e,\n          \u003cspan class=\"nv\"\u003e$4\u003c/span\u003e, 1/den, \u003cspan class=\"nv\"\u003e$1\u003c/span\u003e, \u003cspan class=\"nv\"\u003e$3\u003c/span\u003e, \u003cspan class=\"nv\"\u003e$2\u003c/span\u003e, den\u003cspan class=\"o\"\u003e)\u003c/span\u003e | \u003cspan class=\"s2\"\u003e\u0026#34;sort\u0026#34;\u003c/span\u003e\n      \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"nv\"\u003e$ \u003c/span\u003e\u003cspan class=\"nb\"\u003eawk\u003c/span\u003e \u003cspan class=\"nt\"\u003e-f\u003c/span\u003e prepare2.awk countries.txt\nAsia           :  0.00120000:Japan:120:144:833.3\nAsia           :  0.00169839:India:746:1267:588.8\nAsia           :  0.00359012:China:1032:3705:278.5\nAsia           :  0.03142545:USSR:275:8642:31.8\nEurope         :  0.00157377:Germany:61:96:635.4\nEurope         :  0.00167857:England:56:94:595.7\nEurope         :  0.00383636:France:55:211:260.7\nNorth America  :  0.00976923:Mexico:78:762:102.4\nNorth America  :  0.01525316:USA:237:3615:65.6\nNorth America  :  0.15408000:Canada:25:3852:6.5\nSouth America  :  0.02452239:Brazil:134:3286:40.8\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e此时按默认规则，sort 会对字母和数字升序排序，因此第一列和第二列都是升序（\n后面的列基本可以忽略，因为到第二列就已经能对该行排序了），最后一列和第二列相反，因此就是倒序。\u003c/p\u003e\n\n\u003cp\u003e生成报表时，再将第二列忽略。\u003c/p\u003e\n\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003e$ \u003c/span\u003e\u003cspan class=\"nb\"\u003ecat \u003c/span\u003eform2.awk\nBEGIN \u003cspan class=\"o\"\u003e{\u003c/span\u003e FS \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;:\u0026#34;\u003c/span\u003e\n        \u003cspan class=\"nb\"\u003eprintf\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;%-15s %-10s %10s %7s %12s\u003c/span\u003e\u003cspan class=\"se\"\u003e\\n\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;\u003c/span\u003e,\n           \u003cspan class=\"s2\"\u003e\u0026#34;CONTINENT\u0026#34;\u003c/span\u003e, \u003cspan class=\"s2\"\u003e\u0026#34;COUNTRY\u0026#34;\u003c/span\u003e, \u003cspan class=\"s2\"\u003e\u0026#34;POPULATION\u0026#34;\u003c/span\u003e, \u003cspan class=\"s2\"\u003e\u0026#34;AREA\u0026#34;\u003c/span\u003e, \u003cspan class=\"s2\"\u003e\u0026#34;POP. DEN.\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n      \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n      \u003cspan class=\"o\"\u003e{\u003c/span\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"o\"\u003e(\u003c/span\u003eprev \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"nv\"\u003e$1\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n            prev \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nv\"\u003e$1\u003c/span\u003e\n        \u003cspan class=\"k\"\u003eelse\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n            \u003cspan class=\"nv\"\u003e$1\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;\u0026#34;\u003c/span\u003e\n        \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\n        \u003cspan class=\"nb\"\u003eprintf\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;%-15s %-10s %7d %10d %10.1f\u003c/span\u003e\u003cspan class=\"se\"\u003e\\n\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;\u003c/span\u003e, \u003cspan class=\"nv\"\u003e$1\u003c/span\u003e, \u003cspan class=\"nv\"\u003e$3\u003c/span\u003e, \u003cspan class=\"nv\"\u003e$4\u003c/span\u003e, \u003cspan class=\"nv\"\u003e$5\u003c/span\u003e, \u003cspan class=\"nv\"\u003e$6\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n      \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"nv\"\u003e$ \u003c/span\u003e\u003cspan class=\"nb\"\u003eawk\u003c/span\u003e \u003cspan class=\"nt\"\u003e-f\u003c/span\u003e prepare2.awk countries.txt | \u003cspan class=\"nb\"\u003eawk\u003c/span\u003e \u003cspan class=\"nt\"\u003e-f\u003c/span\u003e form2.awk\nCONTINENT       COUNTRY    POPULATION    AREA    POP. DEN.\nAsia            Japan          120        144      833.3\n                India          746       1267      588.8\n                China         1032       3705      278.5\n                USSR           275       8642       31.8\nEurope          Germany         61         96      635.4\n                England         56         94      595.7\n                France          55        211      260.7\nNorth America   Mexico          78        762      102.4\n                USA            237       3615       65.6\n                Canada          25       3852        6.5\nSouth America   Brazil         134       3286       40.8\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e另外，上面的输出中，还将同一洲的进行了合并，只打印一次洲名。\u003c/p\u003e\n\n\u003ch2 id=\"42-packaged-queries-and-reports\"\u003e4.2 Packaged Queries and Reports\u003c/h2\u003e\n\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003e$ \u003c/span\u003e\u003cspan class=\"nb\"\u003ecat \u003c/span\u003einfo.bash\n\u003cspan class=\"c\"\u003e# info - print information about country\u003c/span\u003e\n\u003cspan class=\"c\"\u003e# usage: info country-name\u003c/span\u003e\n\n\u003cspan class=\"nb\"\u003eawk\u003c/span\u003e \u003cspan class=\"s1\"\u003e\u0026#39;\nBEGIN       { FS = \u0026#34;\\t\u0026#34; }\n$1 ~ /\u0026#39;\u003c/span\u003e\u003cspan class=\"nv\"\u003e$1\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;/ {\n    printf(\u0026#34;%s:\\n\u0026#34;, $1)\n    printf(\u0026#34;\\t%d million people\\n\u0026#34;, $3)\n    printf(\u0026#34;\\t%.3f million sq. mi.\\n\u0026#34;, $2/1000)\n    printf(\u0026#34;\\t%.1f people per sq. mi.\\n\u0026#34;, 1000*$3/$2)\n}\u0026#39;\u003c/span\u003e countries.txt\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e\u003ccode class=\"language-plaintext highlighter-rouge\"\u003e$1 ~ /\u0026#39;$1\u0026#39;/\u003c/code\u003e：后面的 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003e\u0026#39;$1\u0026#39;\u003c/code\u003e 表示 shell 变量。\u003c/p\u003e\n\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003e$ \u003c/span\u003e./info.bash \u003cspan class=\"s2\"\u003e\u0026#34;Canada|USA\u0026#34;\u003c/span\u003e\nCanada:\n        25 million people\n        3.852 million sq. mi.\n        6.5 people per sq. mi.\nUSA:\n        237 million people\n        3.615 million sq. mi.\n        65.6 people per sq. mi.\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e进阶：将模板中的几个 placeholder 替换为真实名字和数字：\u003c/p\u003e\n\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003eSubject: Demographic Information About \u003cspan class=\"c\"\u003e#1\u003c/span\u003e\nFrom: AWK Demographics, Inc.\n\nIn response to your request \u003cspan class=\"k\"\u003efor \u003c/span\u003einformation about \u003cspan class=\"c\"\u003e#1,\u003c/span\u003e\nour latest research has revealed that its population is \u003cspan class=\"c\"\u003e#2\u003c/span\u003e\nmillion people and its area is \u003cspan class=\"c\"\u003e#3 million square miles.\u003c/span\u003e\nThis gives \u003cspan class=\"c\"\u003e#1 a population density of #4 people per\u003c/span\u003e\nsquare mile.\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e实现：用 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003egsub()\u003c/code\u003e。\u003c/p\u003e\n\n\u003ch2 id=\"43-a-relational-database-system\"\u003e4.3 A Relational Database System\u003c/h2\u003e\n\n\u003ch3 id=\"431-natural-joins\"\u003e4.3.1 Natural Joins\u003c/h3\u003e\n\n\u003cp\u003eIn relational databases, a file is called a\ntable or relation and the columns are called attributes.\u003c/p\u003e\n\n\u003cp\u003eA natural join, or join for short, is an operator that combines two tables into\none on the basis of their common attributes. The attributes of the resulting\ntable are all the attributes of the two tables being joined, with duplicates\nremoved.\u003c/p\u003e\n\n\u003cp\u003eIf we join the two tables countries and capitals, we get a single\ntable, let’s call it cc, that has the attributes\u003c/p\u003e\n\n\u003cp\u003ecountry, area, population, continent, capital\u003c/p\u003e\n\n\u003cp\u003eTo answer a query involving attributes\nfrom several tables, we will first join the tables and then apply the query\nto the resulting table. That is, when necessary, we create a temporary file.\u003c/p\u003e\n\n\u003cp align=\"center\"\u003e\u003cimg src=\"/assets/img/awk-notes/join.png\" width=\"35%\" height=\"35%\"/\u003e\u003c/p\u003e\n\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003ch3 id=\"432-the-relflle\"\u003e4.3.2 The relflle\u003c/h3\u003e\n\n\n  \u003c!-- POST NAVIGATION --\u003e\n  \u003cdiv class=\"postNav clearfix\"\u003e\n     \n      \u003ca class=\"prev\" href=\"/blog/facebook-f16-minipack-zh/\"\u003e\u003cspan\u003e« [译] 重新设计 Facebook 的数据中心网络（2019）\u003c/span\u003e\n      \n    \u003c/a\u003e\n      \n      \n      \u003ca class=\"next\" href=\"/blog/cilium-code-add-network-policy/\"\u003e\u003cspan\u003eCilium Code Walk Through: Add Network Policy »\u003c/span\u003e\n       \n      \u003c/a\u003e\n     \n  \u003c/div\u003e\n\u003c/div\u003e",
  "Date": "2020-06-27T00:00:00Z",
  "Author": "Arthur Chiao"
}