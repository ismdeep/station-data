{
  "Source": "arthurchiao.art",
  "Title": "Cracking Kubernetes Authentication (AuthN) Model (2022)",
  "Link": "https://arthurchiao.art/blog/cracking-k8s-authn/",
  "Content": "\u003cdiv class=\"post\"\u003e\n  \n  \u003ch1 class=\"postTitle\"\u003eCracking Kubernetes Authentication (AuthN) Model (2022)\u003c/h1\u003e\n  \u003cp class=\"meta\"\u003ePublished at 2022-07-14 | Last Update 2023-10-11\u003c/p\u003e\n  \n  \u003cp\u003ePart of this post’s contents first appeared in \u003ca href=\"https://learnk8s.io/authentication-kubernetes\"\u003eUser and workload identities in Kubernetes\u003c/a\u003e,\nwhich was kindly edited, re-illustrated and exemplified by \u003ca href=\"https://learnk8s.io/\"\u003elearnk8s.io\u003c/a\u003e, and\nvery friendly to beginners.\u003c/p\u003e\n\n\u003cp\u003eThe version posted here in contrast has a biased focus on the design and\nimplementation, as well as in-depth discussions.\u003c/p\u003e\n\n\u003cp\u003eRelated posts:\u003c/p\u003e\n\n\u003col\u003e\n  \u003cli\u003e\u003ca href=\"/blog/cracking-k8s-node-proxy/\"\u003eCracking Kubernetes Node Proxy (aka kube-proxy)\u003c/a\u003e\u003c/li\u003e\n  \u003cli\u003e\u003ca href=\"/blog/cracking-k8s-network-policy/\"\u003eCracking Kubernetes Network Policy\u003c/a\u003e\u003c/li\u003e\n  \u003cli\u003e\u003ca href=\"/blog/cracking-k8s-authn/\"\u003eCracking Kubernetes Authentication (AuthN) Model\u003c/a\u003e\u003c/li\u003e\n  \u003cli\u003e\u003ca href=\"/blog/cracking-k8s-authz-rbac/\"\u003eCracking Kubernetes RBAC Authorization (AuthZ) Model\u003c/a\u003e\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003ch2 id=\"tl-dr\"\u003eTL; DR\u003c/h2\u003e\n\n\u003cp\u003eThis post digs into the Kubernetes authentication (AuthN) model.  Specifically,\nwe’ll start from analyzing the technical requirements of AuthN in Kubernetes then design one\nfor it (assuming it hasn’t had one yet), the final solution has an end-to-end workflow like below:\u003c/p\u003e\n\n\u003cp align=\"center\"\u003e\u003cimg src=\"/assets/img/cracking-k8s-authn/k8s-authn-workflow.png\" width=\"90%\" height=\"90%\"/\u003e\u003c/p\u003e\n\n\u003cp\u003eHope that after reading this post, readers will have a deeper understanding on\n\u003cstrong\u003e\u003cmark\u003ehow the Kubernetes AuthN module works\u003c/mark\u003e\u003c/strong\u003e (with strategies\nlike \u003cstrong\u003e\u003cmark\u003estatic token, bearer token, X509 certificates, ServiceAccounts, OIDC\u003c/mark\u003e\u003c/strong\u003e, etc), as well as\nhow to configure, use and manage it properly, either as administrators or\ndevelopers.\u003c/p\u003e\n\n\u003chr/\u003e\n\n\u003cul id=\"markdown-toc\"\u003e\n  \u003cli\u003e\u003ca href=\"#tl-dr\" id=\"markdown-toc-tl-dr\"\u003eTL; DR\u003c/a\u003e\u003c/li\u003e\n  \u003cli\u003e\u003ca href=\"#1-introduction\" id=\"markdown-toc-1-introduction\"\u003e1 Introduction\u003c/a\u003e    \u003cul\u003e\n      \u003cli\u003e\u003ca href=\"#11-curl-kubernetes-api-and-see-what-happens\" id=\"markdown-toc-11-curl-kubernetes-api-and-see-what-happens\"\u003e1.1 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003ecurl\u003c/code\u003e Kubernetes API and see what happens\u003c/a\u003e\u003c/li\u003e\n      \u003cli\u003e\u003ca href=\"#12-authn-and-authz\" id=\"markdown-toc-12-authn-and-authz\"\u003e1.2 AuthN and AuthZ\u003c/a\u003e\u003c/li\u003e\n      \u003cli\u003e\u003ca href=\"#13-requirements-of-the-authn-module\" id=\"markdown-toc-13-requirements-of-the-authn-module\"\u003e1.3 Requirements of the AuthN module\u003c/a\u003e\u003c/li\u003e\n      \u003cli\u003e\u003ca href=\"#14-purpose-of-this-post\" id=\"markdown-toc-14-purpose-of-this-post\"\u003e1.4 Purpose of this post\u003c/a\u003e\u003c/li\u003e\n    \u003c/ul\u003e\n  \u003c/li\u003e\n  \u003cli\u003e\u003ca href=\"#2-solution-design\" id=\"markdown-toc-2-solution-design\"\u003e2 Solution design\u003c/a\u003e    \u003cul\u003e\n      \u003cli\u003e\u003ca href=\"#21-authn-chain\" id=\"markdown-toc-21-authn-chain\"\u003e2.1 AuthN chain\u003c/a\u003e\u003c/li\u003e\n      \u003cli\u003e\u003ca href=\"#22-differentiate-two-kinds-of-users\" id=\"markdown-toc-22-differentiate-two-kinds-of-users\"\u003e2.2 Differentiate two kinds of users\u003c/a\u003e        \u003cul\u003e\n          \u003cli\u003e\u003ca href=\"#221-introducing-serviceaccount\" id=\"markdown-toc-221-introducing-serviceaccount\"\u003e2.2.1 Introducing \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eServiceAccount\u003c/code\u003e\u003c/a\u003e\u003c/li\u003e\n          \u003cli\u003e\u003ca href=\"#222-introducing-normal-user\" id=\"markdown-toc-222-introducing-normal-user\"\u003e2.2.2 Introducing normal \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eUser\u003c/code\u003e\u003c/a\u003e\u003c/li\u003e\n        \u003c/ul\u003e\n      \u003c/li\u003e\n      \u003cli\u003e\u003ca href=\"#23-faciliate-authz\" id=\"markdown-toc-23-faciliate-authz\"\u003e2.3 Faciliate AuthZ\u003c/a\u003e\u003c/li\u003e\n      \u003cli\u003e\u003ca href=\"#24-hypothetical-authn-workflow\" id=\"markdown-toc-24-hypothetical-authn-workflow\"\u003e2.4 Hypothetical AuthN workflow\u003c/a\u003e\u003c/li\u003e\n      \u003cli\u003e\u003ca href=\"#25-support-specific-authn-strategies\" id=\"markdown-toc-25-support-specific-authn-strategies\"\u003e2.5 Support specific AuthN strategies\u003c/a\u003e        \u003cul\u003e\n          \u003cli\u003e\u003ca href=\"#261-support-static-tokens-for-out-of-cluster-usersapps\" id=\"markdown-toc-261-support-static-tokens-for-out-of-cluster-usersapps\"\u003e2.6.1 Support static tokens (for out-of-cluster users/apps)\u003c/a\u003e\u003c/li\u003e\n          \u003cli\u003e\u003ca href=\"#262-support-x509-certificate-for-out-of-cluster-usersapps\" id=\"markdown-toc-262-support-x509-certificate-for-out-of-cluster-usersapps\"\u003e2.6.2 Support X509 certificate (for out-of-cluster users/apps)\u003c/a\u003e\u003c/li\u003e\n          \u003cli\u003e\u003ca href=\"#263-support-serviceaccount-for-in-cluster-apps-mainly\" id=\"markdown-toc-263-support-serviceaccount-for-in-cluster-apps-mainly\"\u003e2.6.3 Support \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eServiceAccount\u003c/code\u003e (for in-cluster apps, mainly)\u003c/a\u003e\u003c/li\u003e\n          \u003cli\u003e\u003ca href=\"#264-support-anonymous-user\" id=\"markdown-toc-264-support-anonymous-user\"\u003e2.6.4 Support anonymous user\u003c/a\u003e\u003c/li\u003e\n          \u003cli\u003e\u003ca href=\"#265-chain-up\" id=\"markdown-toc-265-chain-up\"\u003e2.6.5 Chain up\u003c/a\u003e\u003c/li\u003e\n        \u003c/ul\u003e\n      \u003c/li\u003e\n    \u003c/ul\u003e\n  \u003c/li\u003e\n  \u003cli\u003e\u003ca href=\"#3-implementation\" id=\"markdown-toc-3-implementation\"\u003e3 Implementation\u003c/a\u003e    \u003cul\u003e\n      \u003cli\u003e\u003ca href=\"#31-kube-apiserver-authn-options-registration\" id=\"markdown-toc-31-kube-apiserver-authn-options-registration\"\u003e3.1 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003ekube-apiserver\u003c/code\u003e AuthN options registration\u003c/a\u003e\u003c/li\u003e\n      \u003cli\u003e\u003ca href=\"#32-kubernetes-authenticator-chain\" id=\"markdown-toc-32-kubernetes-authenticator-chain\"\u003e3.2 Kubernetes authenticator chain\u003c/a\u003e\u003c/li\u003e\n      \u003cli\u003e\u003ca href=\"#33-authenticate-a-request\" id=\"markdown-toc-33-authenticate-a-request\"\u003e3.3 Authenticate a request\u003c/a\u003e        \u003cul\u003e\n          \u003cli\u003e\u003ca href=\"#331-static-token-authentication\" id=\"markdown-toc-331-static-token-authentication\"\u003e3.3.1 Static token authentication\u003c/a\u003e\u003c/li\u003e\n          \u003cli\u003e\u003ca href=\"#332-x509-authenticator\" id=\"markdown-toc-332-x509-authenticator\"\u003e3.3.2 X509 authenticator\u003c/a\u003e\u003c/li\u003e\n        \u003c/ul\u003e\n      \u003c/li\u003e\n      \u003cli\u003e\u003ca href=\"#34-serviceaccount-and-secret\" id=\"markdown-toc-34-serviceaccount-and-secret\"\u003e3.4 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eServiceAccount\u003c/code\u003e and \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eSecret\u003c/code\u003e\u003c/a\u003e\u003c/li\u003e\n    \u003c/ul\u003e\n  \u003c/li\u003e\n  \u003cli\u003e\u003ca href=\"#4-tests-with-the-kubernetes-authn\" id=\"markdown-toc-4-tests-with-the-kubernetes-authn\"\u003e4 Tests with the Kubernetes AuthN\u003c/a\u003e    \u003cul\u003e\n      \u003cli\u003e\u003ca href=\"#41-preparations\" id=\"markdown-toc-41-preparations\"\u003e4.1 Preparations\u003c/a\u003e\u003c/li\u003e\n      \u003cli\u003e\u003ca href=\"#41-static-token\" id=\"markdown-toc-41-static-token\"\u003e4.1 Static token\u003c/a\u003e        \u003cul\u003e\n          \u003cli\u003e\u003ca href=\"#411-prepare-token-file\" id=\"markdown-toc-411-prepare-token-file\"\u003e4.1.1 Prepare token file\u003c/a\u003e\u003c/li\u003e\n          \u003cli\u003e\u003ca href=\"#412-configure-kube-apiserver\" id=\"markdown-toc-412-configure-kube-apiserver\"\u003e4.1.2 Configure \u003ccode class=\"language-plaintext highlighter-rouge\"\u003ekube-apiserver\u003c/code\u003e\u003c/a\u003e\u003c/li\u003e\n          \u003cli\u003e\u003ca href=\"#413-command-line-example-with-curl\" id=\"markdown-toc-413-command-line-example-with-curl\"\u003e4.1.3 Command line example with \u003ccode class=\"language-plaintext highlighter-rouge\"\u003ecurl\u003c/code\u003e\u003c/a\u003e            \u003cul\u003e\n              \u003cli\u003e\u003ca href=\"#verify-authn-ok-but-authz-will-fail\" id=\"markdown-toc-verify-authn-ok-but-authz-will-fail\"\u003eVerify AuthN OK (but AuthZ will fail)\u003c/a\u003e\u003c/li\u003e\n              \u003cli\u003e\u003ca href=\"#add-role-and-rolebinding-to-pass-authz\" id=\"markdown-toc-add-role-and-rolebinding-to-pass-authz\"\u003eAdd \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eRole\u003c/code\u003e and \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eRoleBinding\u003c/code\u003e to pass AuthZ\u003c/a\u003e\u003c/li\u003e\n            \u003c/ul\u003e\n          \u003c/li\u003e\n          \u003cli\u003e\u003ca href=\"#414-programming-example-with-golang\" id=\"markdown-toc-414-programming-example-with-golang\"\u003e4.1.4 Programming example with golang\u003c/a\u003e\u003c/li\u003e\n        \u003c/ul\u003e\n      \u003c/li\u003e\n      \u003cli\u003e\u003ca href=\"#42-x509-certificate\" id=\"markdown-toc-42-x509-certificate\"\u003e4.2 X509 certificate\u003c/a\u003e        \u003cul\u003e\n          \u003cli\u003e\u003ca href=\"#421-prepare-root-ca\" id=\"markdown-toc-421-prepare-root-ca\"\u003e4.2.1 Prepare root CA\u003c/a\u003e\u003c/li\u003e\n          \u003cli\u003e\u003ca href=\"#422-configure-kube-apiserver\" id=\"markdown-toc-422-configure-kube-apiserver\"\u003e4.2.2 Configure \u003ccode class=\"language-plaintext highlighter-rouge\"\u003ekube-apiserver\u003c/code\u003e\u003c/a\u003e\u003c/li\u003e\n          \u003cli\u003e\u003ca href=\"#423-issue-an-x509-client-certificate-for-user\" id=\"markdown-toc-423-issue-an-x509-client-certificate-for-user\"\u003e4.2.3 Issue an X509 client certificate for user\u003c/a\u003e\u003c/li\u003e\n          \u003cli\u003e\u003ca href=\"#424-command-line-example-with-curl\" id=\"markdown-toc-424-command-line-example-with-curl\"\u003e4.2.4 Command line example with \u003ccode class=\"language-plaintext highlighter-rouge\"\u003ecurl\u003c/code\u003e\u003c/a\u003e\u003c/li\u003e\n          \u003cli\u003e\u003ca href=\"#425-programming-example-with-golang\" id=\"markdown-toc-425-programming-example-with-golang\"\u003e4.2.5 Programming example with golang\u003c/a\u003e\u003c/li\u003e\n        \u003c/ul\u003e\n      \u003c/li\u003e\n      \u003cli\u003e\u003ca href=\"#43-serviceaccount\" id=\"markdown-toc-43-serviceaccount\"\u003e4.3 ServiceAccount\u003c/a\u003e\u003c/li\u003e\n      \u003cli\u003e\u003ca href=\"#44-ldap-or-oidc\" id=\"markdown-toc-44-ldap-or-oidc\"\u003e4.4 LDAP or OIDC\u003c/a\u003e\u003c/li\u003e\n    \u003c/ul\u003e\n  \u003c/li\u003e\n  \u003cli\u003e\u003ca href=\"#5-discussions\" id=\"markdown-toc-5-discussions\"\u003e5 Discussions\u003c/a\u003e    \u003cul\u003e\n      \u003cli\u003e\u003ca href=\"#51-more-authn-strategies\" id=\"markdown-toc-51-more-authn-strategies\"\u003e5.1 More AuthN strategies\u003c/a\u003e\u003c/li\u003e\n      \u003cli\u003e\u003ca href=\"#52-authn-authz-and-the-admission-control-stage\" id=\"markdown-toc-52-authn-authz-and-the-admission-control-stage\"\u003e5.2 AuthN, AuthZ and the admission control stage\u003c/a\u003e\u003c/li\u003e\n      \u003cli\u003e\u003ca href=\"#53-manually-create-serviceaccount\" id=\"markdown-toc-53-manually-create-serviceaccount\"\u003e5.3 Manually create \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eServiceAccount\u003c/code\u003e\u003c/a\u003e\u003c/li\u003e\n      \u003cli\u003e\u003ca href=\"#54-extract-user-information-from-client-credentials\" id=\"markdown-toc-54-extract-user-information-from-client-credentials\"\u003e5.4 Extract user information from client credentials\u003c/a\u003e\u003c/li\u003e\n      \u003cli\u003e\u003ca href=\"#55-user-impersonate\" id=\"markdown-toc-55-user-impersonate\"\u003e5.5 User impersonate\u003c/a\u003e\u003c/li\u003e\n    \u003c/ul\u003e\n  \u003c/li\u003e\n  \u003cli\u003e\u003ca href=\"#6-conclusion\" id=\"markdown-toc-6-conclusion\"\u003e6 Conclusion\u003c/a\u003e\u003c/li\u003e\n  \u003cli\u003e\u003ca href=\"#references\" id=\"markdown-toc-references\"\u003eReferences\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003chr/\u003e\n\n\u003ch1 id=\"1-introduction\"\u003e1 Introduction\u003c/h1\u003e\n\n\u003ch2 id=\"11-curl-kubernetes-api-and-see-what-happens\"\u003e1.1 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003ecurl\u003c/code\u003e Kubernetes API and see what happens\u003c/h2\u003e\n\n\u003cp\u003eAs developers, we’ve been accustomed to \u003ccode class=\"language-plaintext highlighter-rouge\"\u003ecurl\u003c/code\u003e a server to interact with it,\ne.g. getting the content of a site’s homepage:\u003c/p\u003e\n\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003e$ \u003c/span\u003ecurl example.com \u003cspan class=\"c\"\u003e# Yes, this site really exists\u003c/span\u003e\n    ...\n    \u0026lt;h1\u0026gt;Example Domain\u0026lt;/h1\u0026gt;\n    \u0026lt;p\u0026gt;This domain is \u003cspan class=\"k\"\u003efor \u003c/span\u003euse \u003cspan class=\"k\"\u003ein \u003c/span\u003eillustrative examples \u003cspan class=\"k\"\u003ein \u003c/span\u003edocuments. You may use this\n    domain \u003cspan class=\"k\"\u003ein \u003c/span\u003eliterature without prior coordination or asking \u003cspan class=\"k\"\u003efor \u003c/span\u003epermission.\u0026lt;/p\u0026gt;\n    \u0026lt;p\u0026gt;\u0026lt;a \u003cspan class=\"nv\"\u003ehref\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;https://www.iana.org/domains/example\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003eMore information...\u0026lt;/a\u0026gt;\u0026lt;/p\u0026gt;\n\u0026lt;/html\u0026gt;\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003eNow let’s do a similar test against the Kubernetes API server (\u003ccode class=\"language-plaintext highlighter-rouge\"\u003ekube-apiserver\u003c/code\u003e).\nSuppose we would like to \u003cstrong\u003e\u003cmark\u003elist all the namespaces in the cluster\u003c/mark\u003e\u003c/strong\u003e,\u003c/p\u003e\n\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003e$ \u003c/span\u003e\u003cspan class=\"nb\"\u003eexport \u003c/span\u003e\u003cspan class=\"nv\"\u003eAPI_SERVER_URL\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003ehttps://10.5.5.5:6443\n\n\u003cspan class=\"nv\"\u003e$ \u003c/span\u003ecurl \u003cspan class=\"nv\"\u003e$API_SERVER_URL\u003c/span\u003e/api/v1/namespaces\ncurl: \u003cspan class=\"o\"\u003e(\u003c/span\u003e60\u003cspan class=\"o\"\u003e)\u003c/span\u003e Peer Certificate issuer is not recognized.\n...\nIf you\u003cspan class=\"s1\"\u003e\u0026#39;d like to turn off curl\u0026#39;\u003c/span\u003es verification of the certificate, use the \u003cspan class=\"nt\"\u003e-k\u003c/span\u003e \u003cspan class=\"o\"\u003e(\u003c/span\u003eor \u003cspan class=\"nt\"\u003e--insecure\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e option.\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003eThe output reminds us that the server is serving over \u003ccode class=\"language-plaintext highlighter-rouge\"\u003ehttps\u003c/code\u003e with an unrecognized\ncertificate (e.g. self-signed), so \u003ccode class=\"language-plaintext highlighter-rouge\"\u003ecurl\u003c/code\u003e stopped us for potential unsafeties. But,\nfor test purposes we could just turn off the certificate verification and proceed on:\u003c/p\u003e\n\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003e$ \u003c/span\u003ecurl \u003cspan class=\"nt\"\u003e-k\u003c/span\u003e \u003cspan class=\"nv\"\u003e$API_SERVER_URL\u003c/span\u003e/api/v1/namespaces\n\u003cspan class=\"o\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"s2\"\u003e\u0026#34;kind\u0026#34;\u003c/span\u003e: \u003cspan class=\"s2\"\u003e\u0026#34;Status\u0026#34;\u003c/span\u003e,\n  \u003cspan class=\"s2\"\u003e\u0026#34;apiVersion\u0026#34;\u003c/span\u003e: \u003cspan class=\"s2\"\u003e\u0026#34;v1\u0026#34;\u003c/span\u003e,\n  \u003cspan class=\"s2\"\u003e\u0026#34;status\u0026#34;\u003c/span\u003e: \u003cspan class=\"s2\"\u003e\u0026#34;Failure\u0026#34;\u003c/span\u003e,\n  \u003cspan class=\"s2\"\u003e\u0026#34;message\u0026#34;\u003c/span\u003e: \u003cspan class=\"s2\"\u003e\u0026#34;namespaces is forbidden: User \u003c/span\u003e\u003cspan class=\"se\"\u003e\\\u0026#34;\u003c/span\u003e\u003cspan class=\"s2\"\u003esystem:anonymous\u003c/span\u003e\u003cspan class=\"se\"\u003e\\\u0026#34;\u003c/span\u003e\u003cspan class=\"s2\"\u003e cannot list resource \u003c/span\u003e\u003cspan class=\"se\"\u003e\\\u0026#34;\u003c/span\u003e\u003cspan class=\"s2\"\u003enamespaces\u003c/span\u003e\u003cspan class=\"se\"\u003e\\\u0026#34;\u003c/span\u003e\u003cspan class=\"s2\"\u003e ...\u0026#34;\u003c/span\u003e,\n  \u003cspan class=\"s2\"\u003e\u0026#34;reason\u0026#34;\u003c/span\u003e: \u003cspan class=\"s2\"\u003e\u0026#34;Forbidden\u0026#34;\u003c/span\u003e,\n  \u003cspan class=\"s2\"\u003e\u0026#34;details\u0026#34;\u003c/span\u003e: \u003cspan class=\"o\"\u003e{\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;kind\u0026#34;\u003c/span\u003e: \u003cspan class=\"s2\"\u003e\u0026#34;namespaces\u0026#34;\u003c/span\u003e \u003cspan class=\"o\"\u003e}\u003c/span\u003e,\n  \u003cspan class=\"s2\"\u003e\u0026#34;code\u0026#34;\u003c/span\u003e: 403\n\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003eOK, we got a response from the server, but it said that\n\u003cstrong\u003e\u003cmark\u003ewe as user \u003ccode\u003esystem:anonymous\u003c/code\u003e\u003c/mark\u003e\u003c/strong\u003e\nare not allowed to list the \u003ccode class=\"language-plaintext highlighter-rouge\"\u003enamespaces\u003c/code\u003e resource (or accessing this API) in\nthis Kubernetes cluster, with a standard HTTP response code \u003cstrong\u003e\u003cmark\u003e\u003ccode\u003e403 (Unauthorized)\u003c/code\u003e\u003c/mark\u003e\u003c/strong\u003e.\u003c/p\u003e\n\n\u003ch2 id=\"12-authn-and-authz\"\u003e1.2 AuthN and AuthZ\u003c/h2\u003e\n\n\u003cp\u003eThe above test reveals some important working mechanisms in the \u003ccode class=\"language-plaintext highlighter-rouge\"\u003ekube-apiserver\u003c/code\u003e:\u003c/p\u003e\n\n\u003cul\u003e\n  \u003cli\u003eFirst, it \u003cstrong\u003e\u003cmark\u003eidentifies the user of a request (who you are)\u003c/mark\u003e\u003c/strong\u003e;\u003c/li\u003e\n  \u003cli\u003eThen, it \u003cstrong\u003e\u003cmark\u003edetermines what operations are allowed for this user (what permissions do you have)\u003c/mark\u003e\u003c/strong\u003e;\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eFormally,\u003c/p\u003e\n\n\u003cul\u003e\n  \u003cli\u003eThe former process (identifing who you are) is termed \u003cstrong\u003e\u003cmark\u003eAuthN\u003c/mark\u003e\u003c/strong\u003e, short for authentication;\u003c/li\u003e\n  \u003cli\u003eThe latter process (determining what permissions an authenticated user has) is termed \u003cstrong\u003e\u003cmark\u003eAuthZ\u003c/mark\u003e\u003c/strong\u003e, short for authorization.\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eThe workflow looks like something as below:\u003c/p\u003e\n\n\u003cp align=\"center\"\u003e\u003cimg src=\"/assets/img/cracking-k8s-authn/authn-authz-example.png\" width=\"80%\" height=\"80%\"/\u003e\u003c/p\u003e\n\u003cp align=\"center\"\u003eFig 1-1. AuthN and AuthZ when processing a client request\u003c/p\u003e\n\n\u003cp\u003eRegarding to our previous test case:\u003c/p\u003e\n\n\u003col\u003e\n  \u003cli\u003e\n    \u003cp\u003eAuthN: we didn’t provide any user credentials, so vanilla authentication\nwould fail; however, depending on whether \u003cstrong\u003e\u003cmark\u003eanonymous access\u003c/mark\u003e\u003c/strong\u003e is allowed by \u003ccode class=\"language-plaintext highlighter-rouge\"\u003ekube-apiserver\u003c/code\u003e:\u003c/p\u003e\n\n    \u003cul\u003e\n      \u003cli\u003e1.1 Disallow: return \u003cstrong\u003e\u003cmark\u003e\u003ccode\u003e401 Unauthorized\u003c/code\u003e\u003c/mark\u003e\u003c/strong\u003e directly (note that this status\n code is a \u003ca href=\"https://stackoverflow.com/a/6937030/4747193\"\u003e\u003cmark\u003elong-standing misnomer\u003c/mark\u003e\u003c/a\u003e\n as it indicates authentication errors rather than authorization errors, thanks [4] for pointing this out);\u003c/li\u003e\n      \u003cli\u003e1.2 Allow: proceed on as \u003cstrong\u003e\u003cmark\u003e\u003ccode\u003esystem:anonymous\u003c/code\u003e\u003c/mark\u003e\u003c/strong\u003e user (\u003cstrong\u003e\u003cmark\u003eour case\u003c/mark\u003e\u003c/strong\u003e) and go to the next stage (AuthZ);\u003c/li\u003e\n    \u003c/ul\u003e\n  \u003c/li\u003e\n  \u003cli\u003e\n    \u003cp\u003eAuthZ: check if \u003ccode class=\"language-plaintext highlighter-rouge\"\u003esystem:anonymous\u003c/code\u003e has the \u003cstrong\u003e\u003cmark\u003epermission to list namespaces\u003c/mark\u003e\u003c/strong\u003e in the cluster,\u003c/p\u003e\n\n    \u003cul\u003e\n      \u003cli\u003e2.1 No: return 403 Forbidden (\u003cstrong\u003e\u003cmark\u003eour case\u003c/mark\u003e\u003c/strong\u003e);\u003c/li\u003e\n      \u003cli\u003e2.2 Yes: perform business processing;\u003c/li\u003e\n    \u003c/ul\u003e\n  \u003c/li\u003e\n\u003c/ol\u003e\n\n\u003cp\u003eReasonable and clear.\u003c/p\u003e\n\n\u003cp\u003eIn fact, each request to \u003ccode class=\"language-plaintext highlighter-rouge\"\u003ekube-apiserver\u003c/code\u003e should be tied to a user, or is\ntreated as an anonymous request. Here, the request\nmay come from a process inside or outside the cluster, or from a human user\ntyping kubectl, or kubelets on nodes, or members of the control plane.\nThe AuthN module in the server will authenticate the request with the credentials it provides, either\na static token, a certificate, or an externally-managed identity.\u003c/p\u003e\n\n\u003cp\u003eThe AuthN module is vital (and inevitably, complex) as it is the first gatekeeper of the entire system.\nLet’s briefly describe what are required for this module.\u003c/p\u003e\n\n\u003ch2 id=\"13-requirements-of-the-authn-module\"\u003e1.3 Requirements of the AuthN module\u003c/h2\u003e\n\n\u003cp\u003eTo be a practical AuthN module as the one in Kubernetes, at least the following properties must be met:\u003c/p\u003e\n\n\u003col\u003e\n  \u003cli\u003eSupport both \u003cstrong\u003e\u003cmark\u003ehuman users and program users\u003c/mark\u003e\u003c/strong\u003e;\u003c/li\u003e\n  \u003cli\u003eSupport both \u003cstrong\u003e\u003cmark\u003eexternal users\u003c/mark\u003e\u003c/strong\u003e (e.g apps deployed in OpenStack or bare metal systems) and\n\u003cstrong\u003e\u003cmark\u003einternal users\u003c/mark\u003e\u003c/strong\u003e (e.g. accounts created and managed by\nKubernetes cluster itself);\u003c/li\u003e\n  \u003cli\u003eSupport \u003cstrong\u003e\u003cmark\u003ecommon AuthN strategies\u003c/mark\u003e\u003c/strong\u003e, e.g. static token, bearer\ntoken, X509 certificate, OIDC (we don’t include BasicAuth here since it has\nbeen removed from Kubernetes \u003ccode class=\"language-plaintext highlighter-rouge\"\u003ev1.19\u003c/code\u003e, which essentially doesn’t provide any\nsecurity mechanisms using encryption standards);\u003c/li\u003e\n  \u003cli\u003eSupport \u003cstrong\u003e\u003cmark\u003eenabling multipel AuthN strategies\u003c/mark\u003e\u003c/strong\u003e simultanously;\u003c/li\u003e\n  \u003cli\u003eExtensibility: \u003cstrong\u003e\u003cmark\u003eeasy to add new AuthN strategies\u003c/mark\u003e\u003c/strong\u003e or phase out old ones;\u003c/li\u003e\n  \u003cli\u003eOptionally, support \u003cstrong\u003e\u003cmark\u003eanonymous access\u003c/mark\u003e\u003c/strong\u003e (like the \u003ccode class=\"language-plaintext highlighter-rouge\"\u003esystem:anonymous\u003c/code\u003e case we’ve seen above).\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003cp\u003eNow, if you’re an software engineer or achitect,\n\u003cstrong\u003e\u003cmark\u003eon giving the above requirements, how would you design an AuthN solution\u003c/mark\u003e\u003c/strong\u003e\nthat fits into the system?\u003c/p\u003e\n\n\u003ch2 id=\"14-purpose-of-this-post\"\u003e1.4 Purpose of this post\u003c/h2\u003e\n\n\u003cp\u003eThis post try to answer the question by designing an AuthN module for Kubernetes\nby ourselves - just pretending that Kuberntes hasn’t had one yet. The workflow of the final\ndesign will look like below:\u003c/p\u003e\n\n\u003cp align=\"center\"\u003e\u003cimg src=\"/assets/img/cracking-k8s-authn/k8s-authn-workflow.png\" width=\"90%\" height=\"90%\"/\u003e\u003c/p\u003e\n\u003cp align=\"center\"\u003eFig 2-1. Workflow of the designed AuthN solution for Kubernetes\u003c/p\u003e\n\n\u003cp\u003eHope that after reading this post, readers will have a deeper understanding\nabout the design, configuration and usage of Kubernetes AuthN stuffs.\u003c/p\u003e\n\n\u003cblockquote\u003e\n  \u003cp\u003eAuthN and AuthZ are tightly related,\nrefer to our later post \u003ca href=\"\"\u003e\u003cmark\u003eCracking Kubernetes RABC Authorization Model\u003c/mark\u003e\u003c/a\u003e for the AuthZ part.\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003ch1 id=\"2-solution-design\"\u003e2 Solution design\u003c/h1\u003e\n\n\u003ch2 id=\"21-authn-chain\"\u003e2.1 AuthN chain\u003c/h2\u003e\n\n\u003cp\u003eOne of our targets is being able to support multiple AuthN strategies simultanously, that is,\nsome users can access via static tokens, some via certificates, and some others\nmay via external identity providers (IdP, e.g. Keystone).\u003c/p\u003e\n\n\u003cp\u003eEffectively, this means that as long as we’ve authenticated the user with\none strategy successfully, we should skip to try the remaing ones;\nonly if all the strategies have been tried and failed (and anonymous access is disabled), we\nshould treat this as an invalid user. This indicates the following \u003cstrong\u003e\u003cmark\u003echain design\u003c/mark\u003e\u003c/strong\u003e,\nwhich has the above described \u003cstrong\u003e\u003cmark\u003eshort-circuit property\u003c/mark\u003e\u003c/strong\u003e:\u003c/p\u003e\n\n\u003cp align=\"center\"\u003e\u003cimg src=\"/assets/img/cracking-k8s-authn/auth-chain.png\" width=\"80%\" height=\"80%\"/\u003e\u003c/p\u003e\n\u003cp align=\"center\"\u003eFig 2-1. Short-circuit property of the AuthN chain\u003c/p\u003e\n\n\u003cp\u003eThe chain design also makes extensability easy:\njust adding or removing given AuthN strategies to/from the chain.\u003c/p\u003e\n\n\u003ch2 id=\"22-differentiate-two-kinds-of-users\"\u003e2.2 Differentiate two kinds of users\u003c/h2\u003e\n\n\u003cp\u003eAnother requirement is to support different kinds of API users, as shown below:\u003c/p\u003e\n\n\u003cp align=\"center\"\u003e\u003cimg src=\"/assets/img/cracking-k8s-authn/k8s-internal-external-users.png\" width=\"80%\" height=\"80%\"/\u003e\u003c/p\u003e\n\u003cp align=\"center\"\u003eFig 2-2. Internal and external Kubernetes API users\u003c/p\u003e\n\n\u003cp\u003eJudging by whether the API user is inside the Kubernetes cluster, we can\ncategorize users into the following two kinds:\u003c/p\u003e\n\n\u003col\u003e\n  \u003cli\u003e\n    \u003cp\u003e\u003cstrong\u003e\u003cmark\u003eKubernetes managed users\u003c/mark\u003e\u003c/strong\u003e: the users (accounts) created by\n  the Kubernetes cluster itself and \u003cstrong\u003e\u003cmark\u003eused by in-cluster apps\u003c/mark\u003e\u003c/strong\u003e,\n  we name them \u003cstrong\u003e\u003cmark\u003e\u0026#34;service accounts\u0026#34;\u003c/mark\u003e\u003c/strong\u003e;\u003c/p\u003e\n  \u003c/li\u003e\n  \u003cli\u003e\n    \u003cp\u003e\u003cstrong\u003e\u003cmark\u003eNon Kubernetes managed users\u003c/mark\u003e\u003c/strong\u003e: users that are external to the Kubernetes cluster, e.g.\u003c/p\u003e\n\n    \u003cul\u003e\n      \u003cli\u003eUsers with static tokens or certificates that provided by \u003cstrong\u003e\u003cmark\u003ecluster administrators\u003c/mark\u003e\u003c/strong\u003e;\u003c/li\u003e\n      \u003cli\u003eUsers authenticated through \u003cstrong\u003e\u003cmark\u003eexternal identity providers\u003c/mark\u003e\u003c/strong\u003e like Keystone, Google account, and LDAP.\u003c/li\u003e\n    \u003c/ul\u003e\n  \u003c/li\u003e\n\u003c/ol\u003e\n\n\u003cp\u003eThe implementation implication of this differentiation:\u003c/p\u003e\n\n\u003cul\u003e\n  \u003cli\u003eThe former are \u003cstrong\u003e\u003cmark\u003enative Kubernetes objects\u003c/mark\u003e\u003c/strong\u003e, so we need to \u003cstrong\u003e\u003cmark\u003edefine a specification (data model)\u003c/mark\u003e\u003c/strong\u003e for them;\u003c/li\u003e\n  \u003cli\u003eThe latter are not Kubernetes objects, so there will be no specification for them.\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch3 id=\"221-introducing-serviceaccount\"\u003e2.2.1 Introducing \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eServiceAccount\u003c/code\u003e\u003c/h3\u003e\n\n\u003cp\u003eServicea accounts by our design will typically be created by \u003ccode class=\"language-plaintext highlighter-rouge\"\u003ekube-apiserver\u003c/code\u003e\nin an automatic way for applications deployed in the cluster, used\nby the apps (pods) to access \u003ccode class=\"language-plaintext highlighter-rouge\"\u003ekube-apiserver\u003c/code\u003e.\u003c/p\u003e\n\n\u003cp\u003eIntroducing \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eServiceAccount\u003c/code\u003e specification: bind an account name to a token\nwhich stored in Kubernetes \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eSecret\u003c/code\u003e format:\u003c/p\u003e\n\n\u003cdiv class=\"language-go highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003etype\u003c/span\u003e \u003cspan class=\"n\"\u003eServiceAccount\u003c/span\u003e \u003cspan class=\"k\"\u003estruct\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"n\"\u003emetav1\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eTypeMeta\u003c/span\u003e\n    \u003cspan class=\"n\"\u003emetav1\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eObjectMeta\u003c/span\u003e\n\n    \u003cspan class=\"n\"\u003eSecrets\u003c/span\u003e \u003cspan class=\"p\"\u003e[]\u003c/span\u003e\u003cspan class=\"n\"\u003eObjectReference\u003c/span\u003e          \u003cspan class=\"c\"\u003e// To be used by pods running using this ServiceAccount, which\u003c/span\u003e\n                                       \u003cspan class=\"c\"\u003e// holds the public CA of kube-apiserver and a signed JWT token\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eAutomountServiceAccountToken\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"kt\"\u003ebool\u003c/span\u003e \u003cspan class=\"c\"\u003e// Whether to mount the secret into related pods automatically\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003eWhere the \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eSecret\u003c/code\u003e model has already exists in Kubernetes model,\u003c/p\u003e\n\n\u003cdiv class=\"language-go highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"c\"\u003e// https://github.com/kubernetes/kubernetes/blob/v1.23.1/staging/src/k8s.io/api/core/v1/types.go#L6005\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003etype\u003c/span\u003e \u003cspan class=\"n\"\u003eSecret\u003c/span\u003e \u003cspan class=\"k\"\u003estruct\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"n\"\u003emetav1\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eTypeMeta\u003c/span\u003e\n    \u003cspan class=\"n\"\u003emetav1\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eObjectMeta\u003c/span\u003e\n\n    \u003cspan class=\"n\"\u003eData\u003c/span\u003e \u003cspan class=\"k\"\u003emap\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"kt\"\u003estring\u003c/span\u003e\u003cspan class=\"p\"\u003e][]\u003c/span\u003e\u003cspan class=\"kt\"\u003ebyte\u003c/span\u003e \u003cspan class=\"c\"\u003e// base64 encoded, hold the ServiceAccount token\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003ch3 id=\"222-introducing-normal-user\"\u003e2.2.2 Introducing normal \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eUser\u003c/code\u003e\u003c/h3\u003e\n\n\u003cp\u003eExternal users are not Kubernetes objects, so there is no need to create a data model for it.\u003c/p\u003e\n\n\u003cp\u003eHowever, for interacting with the subsequent AuthZ module, we must have the ability\nto deduce the user and group information from a given user token.\nThis will be elaborated in the next section.\u003c/p\u003e\n\n\u003ch2 id=\"23-faciliate-authz\"\u003e2.3 Faciliate AuthZ\u003c/h2\u003e\n\n\u003cp\u003eIf just considering AuthN, our chain design would be enough. But as has been\nsaid, if we’d like to integrate our AuthN module better to the\nsystem, we should do a little more - specifically, we need to feed some\nimportant information to the subsequent AuthZ module.\u003c/p\u003e\n\n\u003cp\u003eAuthZ checks what permissions a given subject has, where a subject may be a user, a user group, or a role.\nThe question is: request headers only contain \u003cstrong\u003e\u003cmark\u003eraw tokens or certificates\u003c/mark\u003e\u003c/strong\u003e,\nwhich can be recognized by the AuthN module, but is useless to the AuthZ module, the latter\n\u003cstrong\u003e\u003cmark\u003efavors user/group/role information\u003c/mark\u003e\u003c/strong\u003e to fulfill its task. So,\u003c/p\u003e\n\n\u003cul\u003e\n  \u003cli\u003e\n    \u003cp\u003eTo do our adjacent neighbor a favor, we (AuthN module) should transform the\nvalidated credentials to a corresponding user/group/role representation.\nWe introduce the following interface for this purpose:\u003c/p\u003e\n\n    \u003cdiv class=\"language-go highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e  \u003cspan class=\"c\"\u003e// Get user information from an authenticated token or credential.\u003c/span\u003e\n  \u003cspan class=\"c\"\u003e// Should be implemented by each authenticator.\u003c/span\u003e\n  \u003cspan class=\"k\"\u003etype\u003c/span\u003e \u003cspan class=\"n\"\u003eInfo\u003c/span\u003e \u003cspan class=\"k\"\u003einterface\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n      \u003cspan class=\"n\"\u003eGetName\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"kt\"\u003estring\u003c/span\u003e\n      \u003cspan class=\"n\"\u003eGetUID\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"kt\"\u003estring\u003c/span\u003e\n      \u003cspan class=\"n\"\u003eGetGroups\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e[]\u003c/span\u003e\u003cspan class=\"kt\"\u003estring\u003c/span\u003e\n      \u003cspan class=\"n\"\u003eGetExtra\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"k\"\u003emap\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"kt\"\u003estring\u003c/span\u003e\u003cspan class=\"p\"\u003e][]\u003c/span\u003e\u003cspan class=\"kt\"\u003estring\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e    \u003c/div\u003e\n  \u003c/li\u003e\n  \u003cli\u003e\n    \u003cp\u003eThen, we can \u003cstrong\u003e\u003cmark\u003einsert the user information into the request context\u003c/mark\u003e\u003c/strong\u003e,\nand our neighbor can get from the context later.\u003c/p\u003e\n  \u003c/li\u003e\n  \u003cli\u003e\n    \u003cp\u003eFurther, the \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eAuthorization\u003c/code\u003e header will be useless once AuthnN finishes, so we can safely remove it.\u003c/p\u003e\n  \u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eWith the above improvements, the updated flow would look like this:\u003c/p\u003e\n\n\u003cp align=\"center\"\u003e\u003cimg src=\"/assets/img/cracking-k8s-authn/auth-chain-refined.png\" width=\"80%\" height=\"80%\"/\u003e\u003c/p\u003e\n\u003cp align=\"center\"\u003eFig 2-3. Transform AuthN credentials into user information to faciliate subsequent processings (e.g. RBAC AuthZ)\u003c/p\u003e\n\n\u003ch2 id=\"24-hypothetical-authn-workflow\"\u003e2.4 Hypothetical AuthN workflow\u003c/h2\u003e\n\n\u003cp\u003eWith all the above preparations, we’re ready to describe our AuthN workflow.\nOn receiving a client request,\u003c/p\u003e\n\n\u003col\u003e\n  \u003cli\u003eExtract AuthN credentials from request header;\u003c/li\u003e\n  \u003cli\u003e\n    \u003cp\u003eAuthenticate the request against the authenticator list;\u003c/p\u003e\n\n    \u003cul\u003e\n      \u003cli\u003eOn failure: return “401 Unauthorized”\u003c/li\u003e\n      \u003cli\u003eOn success: add user info to request context and remove AuthN info from request header; goto next processing;\u003c/li\u003e\n    \u003c/ul\u003e\n  \u003c/li\u003e\n  \u003cli\u003eIf all authenticators failed and anonymous access enabled, try annonymous access;\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003ch2 id=\"25-support-specific-authn-strategies\"\u003e2.5 Support specific AuthN strategies\u003c/h2\u003e\n\n\u003cp\u003eSection will show how to implement the authenticators for each strategy.\nBut, before that, let’s briefly describe the \u003cstrong\u003e\u003cmark\u003e\u0026#34;bearer token\u0026#34;\u003c/mark\u003e\u003c/strong\u003e machanism.\u003c/p\u003e\n\n\u003cp\u003eBearer authentication is an HTTP authentication scheme.  Clients carry a token\nin the \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eAuthorization\u003c/code\u003e header when making requests to the server, in the format\nas below:\u003c/p\u003e\n\n\u003cdiv class=\"language-plaintext highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003eAuthorization: Bearer \u0026lt;token\u0026gt;\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003eThe bearer token scheme was originally created as part of OAuth 2.0 in\nRFC 6750, but can also be used on its own. So\nAuthN strategies like \u003cstrong\u003e\u003cmark\u003estatic token authentication\u003c/mark\u003e\u003c/strong\u003e just place\ntheir specific tokens into the \u003ccode class=\"language-plaintext highlighter-rouge\"\u003e\u0026lt;token\u0026gt;\u003c/code\u003e field via this mechanism.  With this\nsaid, let’s first see how to implement the static token authenticator.\u003c/p\u003e\n\n\u003ch3 id=\"261-support-static-tokens-for-out-of-cluster-usersapps\"\u003e2.6.1 Support static tokens (for out-of-cluster users/apps)\u003c/h3\u003e\n\n\u003cp\u003eStatic token is a simple machanism where cluster administrators generate some\nvalid tokens (abitrary strings) and assign to API users. Users must carry such\na token in their request headers when accesing the API.\u003c/p\u003e\n\n\u003cp\u003eNote that in this scenario, tokens are generated by administrators, he/she must\nalso \u003cstrong\u003e\u003cmark\u003eprovide the correspoinding user information\u003c/mark\u003e\u003c/strong\u003e otherwise the\nKubernetes AuthZ module would have no information to do permission judgement.\nWith this said, here is our simple design,\u003c/p\u003e\n\n\u003col\u003e\n  \u003cli\u003e\n    \u003cp\u003eDefine the static token format: \u003cstrong\u003e\u003cmark\u003e\u003ccode\u003e\u0026lt;token,user,uid,gid\u0026gt;\u003c/code\u003e\u003c/mark\u003e\u003c/strong\u003e,\u003c/p\u003e\n\n    \u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e \u003cspan class=\"nv\"\u003e$ \u003c/span\u003e\u003cspan class=\"nb\"\u003ecat\u003c/span\u003e /etc/kubernetes/static-tokens.csv \u003cspan class=\"c\"\u003e# The last field (group id) is optional\u003c/span\u003e\n 31ada4fd-adec-460c,alice,123,456\n 22a38432-8bcb-cdcf,bob,124,457\n ...\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e    \u003c/div\u003e\n  \u003c/li\u003e\n  \u003cli\u003e\n    \u003cp\u003eAdd a CLI option to \u003ccode class=\"language-plaintext highlighter-rouge\"\u003ekube-apiserver\u003c/code\u003e to load the token file, e.g. \u003cstrong\u003e\u003cmark\u003e\u003ccode\u003e--token-auth-file=/etc/kubernetes/static-tokens.csv\u003c/code\u003e\u003c/mark\u003e\u003c/strong\u003e.\u003c/p\u003e\n  \u003c/li\u003e\n\u003c/ol\u003e\n\n\u003cp\u003eThe overall workflow is shown as below:\u003c/p\u003e\n\n\u003cp align=\"center\"\u003e\u003cimg src=\"/assets/img/cracking-k8s-authn/support-static-token-auth.png\" width=\"80%\" height=\"80%\"/\u003e\u003c/p\u003e\n\u003cp align=\"center\"\u003eFig 3-1. Support static token AuthN strategy\u003c/p\u003e\n\n\u003col\u003e\n  \u003cli\u003e\u003cstrong\u003e\u003cmark\u003eAdmin\u003c/mark\u003e\u003c/strong\u003e: create a CSV token auth file, present to Kubernetes cluster;\u003c/li\u003e\n  \u003cli\u003e\u003cstrong\u003e\u003cmark\u003eAdmin\u003c/mark\u003e\u003c/strong\u003e: start \u003ccode class=\"language-plaintext highlighter-rouge\"\u003ekube-apiserver\u003c/code\u003e with this is config, reading and caching the info in memory;\u003c/li\u003e\n  \u003cli\u003e\u003cstrong\u003e\u003cmark\u003eAdmin\u003c/mark\u003e\u003c/strong\u003e: assign token to external users and/or apps;\u003c/li\u003e\n  \u003cli\u003e\u003cstrong\u003e\u003cmark\u003eClient\u003c/mark\u003e\u003c/strong\u003e: carry the token in bearer token field (\u003cstrong\u003e\u003cmark\u003e\u003ccode\u003eAuthorization: Bearer TOKEN\u003c/code\u003e\u003c/mark\u003e\u003c/strong\u003e) when sending requests;\u003c/li\u003e\n  \u003cli\u003e\u003cstrong\u003e\u003cmark\u003eServer\u003c/mark\u003e\u003c/strong\u003e (\u003ccode class=\"language-plaintext highlighter-rouge\"\u003ekube-apiserver\u003c/code\u003e) AuthN: verify the token against\nthe token list (and \u003cstrong\u003e\u003cmark\u003eretrieve user information for AuthZ if authenticated\u003c/mark\u003e\u003c/strong\u003e);\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003cp\u003eWith the above steps succeed, AuthZ will start (with the user information\nprovided by AuthN), but this is beyond the scope of this post.  See our later\npost \u003ca href=\"\"\u003e\u003cmark\u003eCracking Kubernetes RABC Authorization Model\u003c/mark\u003e\u003c/a\u003e for the AuthZ part.\u003c/p\u003e\n\n\u003ch3 id=\"262-support-x509-certificate-for-out-of-cluster-usersapps\"\u003e2.6.2 Support X509 certificate (for out-of-cluster users/apps)\u003c/h3\u003e\n\n\u003cp\u003eSimilar as static token, we can support X509 client certificate.\u003c/p\u003e\n\n\u003cp align=\"center\"\u003e\u003cimg src=\"/assets/img/cracking-k8s-authn/support-x509-auth.png\" width=\"80%\" height=\"80%\"/\u003e\u003c/p\u003e\n\u003cp align=\"center\"\u003eFig 3-2. Support X509 certificate AuthN strategy\u003c/p\u003e\n\n\u003col\u003e\n  \u003cli\u003e\u003cstrong\u003e\u003cmark\u003eAdmin\u003c/mark\u003e\u003c/strong\u003e: prepare \u003cstrong\u003e\u003cmark\u003ecertificate authorities (CAs)\u003c/mark\u003e\u003c/strong\u003e, which will be used to validate client certificates;\u003c/li\u003e\n  \u003cli\u003e\u003cstrong\u003e\u003cmark\u003eAdmin\u003c/mark\u003e\u003c/strong\u003e: start \u003ccode class=\"language-plaintext highlighter-rouge\"\u003ekube-apiserver\u003c/code\u003e with this is config (with a new option \u003cstrong\u003e\u003cmark\u003e\u003ccode\u003e--client-ca-file=FILE\u003c/code\u003e\u003c/mark\u003e\u003c/strong\u003e);\u003c/li\u003e\n  \u003cli\u003e\n    \u003cp\u003e\u003cstrong\u003e\u003cmark\u003eAdmin\u003c/mark\u003e\u003c/strong\u003e: \u003cstrong\u003e\u003cmark\u003eissue client certificates\u003c/mark\u003e\u003c/strong\u003e with root CAs to external users and/or apps;\u003c/p\u003e\n\n    \u003cp\u003eThese X509 client certificates \u003cstrong\u003e\u003cmark\u003ealready have user and group information inside\u003c/mark\u003e\u003c/strong\u003e, such as,\n when generating a certificate signing request (CSR) with \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eopenssl\u003c/code\u003e:\u003c/p\u003e\n\n    \u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e \u003cspan class=\"c\"\u003e# For the username \u0026#34;jbeda\u0026#34;, belonging to two groups, \u0026#34;app1\u0026#34; and \u0026#34;app2\u0026#34;.\u003c/span\u003e\n \u003cspan class=\"nv\"\u003e$ \u003c/span\u003eopenssl req \u003cspan class=\"nt\"\u003e-new\u003c/span\u003e \u003cspan class=\"nt\"\u003e-key\u003c/span\u003e jbeda.pem \u003cspan class=\"nt\"\u003e-out\u003c/span\u003e jbeda-csr.pem \u003cspan class=\"nt\"\u003e-subj\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;/CN=jbeda/O=app1/O=app2\u0026#34;\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e    \u003c/div\u003e\n\n    \u003cul\u003e\n      \u003cli\u003e\u003ccode class=\"language-plaintext highlighter-rouge\"\u003eCN\u003c/code\u003e (\u003cstrong\u003e\u003cmark\u003ecommon name\u003c/mark\u003e\u003c/strong\u003e): user name for the request.\u003c/li\u003e\n      \u003cli\u003e\u003ccode class=\"language-plaintext highlighter-rouge\"\u003eO\u003c/code\u003e (\u003cstrong\u003e\u003cmark\u003eorganization\u003c/mark\u003e\u003c/strong\u003e): user’s group memberships. To include multiple group memberships for a user, include multiple organization fields in the certificate.\u003c/li\u003e\n    \u003c/ul\u003e\n  \u003c/li\u003e\n  \u003cli\u003e\u003cstrong\u003e\u003cmark\u003eClient\u003c/mark\u003e\u003c/strong\u003e: carry the certificate in \u003cstrong\u003e\u003cmark\u003eTLS\u003c/mark\u003e\u003c/strong\u003e fields when sending a request;\u003c/li\u003e\n  \u003cli\u003e\u003cstrong\u003e\u003cmark\u003eServer\u003c/mark\u003e\u003c/strong\u003e (\u003ccode class=\"language-plaintext highlighter-rouge\"\u003ekube-apiserver\u003c/code\u003e): verify the client certificate\nagainst the root CAs.  If a client certificate is presented and verified, extract information.\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003ch3 id=\"263-support-serviceaccount-for-in-cluster-apps-mainly\"\u003e2.6.3 Support \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eServiceAccount\u003c/code\u003e (for in-cluster apps, mainly)\u003c/h3\u003e\n\n\u003cp\u003eThe above two strategies need a (human) administrator to generate and\ndistribute client credentials, which apparently isn’t friendly to the native\napplications deployed in a Kubernetes cluster.  For the latter scenario, there\nshould be an automatic way. That’s why we introduced \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eServiceAccount\u003c/code\u003e abstration.\u003c/p\u003e\n\n\u003cp\u003eFor the implementation,\u003c/p\u003e\n\n\u003col\u003e\n  \u003cli\u003eIt also uses \u003cstrong\u003e\u003cmark\u003esigned bearer tokens\u003c/mark\u003e\u003c/strong\u003e to verify requests;\u003c/li\u003e\n  \u003cli\u003e\n    \u003cp\u003eStill use X509 certificates, but can be configured with an independent CAs to differentiate from external users/apps;\u003c/p\u003e\n\n    \u003cp\u003e\u003ccode class=\"language-plaintext highlighter-rouge\"\u003e--service-account-key-file=\u0026lt;sa-key.pem\u0026gt;\u003c/code\u003e: a file containing a PEM encoded\n \u003cstrong\u003e\u003cmark\u003ekey for signing bearer tokens\u003c/mark\u003e\u003c/strong\u003e.\n If unspecified, use \u003ccode class=\"language-plaintext highlighter-rouge\"\u003ekube-apiserver\u003c/code\u003e’s TLS private key.\u003c/p\u003e\n  \u003c/li\u003e\n\u003c/ol\u003e\n\n\u003cp align=\"center\"\u003e\u003cimg src=\"/assets/img/cracking-k8s-authn/support-sa-auth.png\" width=\"80%\" height=\"80%\"/\u003e\u003c/p\u003e\n\u003cp align=\"center\"\u003eFig 3-3. Support X509 AuthN strategy\u003c/p\u003e\n\n\u003cp\u003eThe client certificate will be signed by the control plane automatically, and\nbe mounted to the related pods at well-known locations by a control plane\ncomponent (\u003cstrong\u003e\u003cmark\u003eServiceAccount Admission Controller\u003c/mark\u003e\u003c/strong\u003e).\u003c/p\u003e\n\n\u003cp\u003eWorkflow: \u003ccode class=\"language-plaintext highlighter-rouge\"\u003e1 -\u0026gt; 2 -\u0026gt; 3b -\u0026gt; 4b -\u0026gt; 5\u003c/code\u003e.\u003c/p\u003e\n\n\u003cp\u003eService account bearer tokens is mainly meant to be used for in-cluster apps,\nbut they are \u003cstrong\u003e\u003cmark\u003eperfectly valid to use outside the cluster\u003c/mark\u003e\u003c/strong\u003e\nand can be used to create identities for long standing jobs that wish to talk\nto the Kubernetes API.\u003c/p\u003e\n\n\u003cp\u003eAnd regarding to \u003cstrong\u003e\u003cmark\u003euser information assiciation\u003c/mark\u003e\u003c/strong\u003e, \nservice accounts authenticate with the username \u003ccode class=\"language-plaintext highlighter-rouge\"\u003esystem:serviceaccount:\u0026lt;ns\u0026gt;:\u0026lt;sa\u0026gt;\u003c/code\u003e,\nand are assigned to the groups \u003ccode class=\"language-plaintext highlighter-rouge\"\u003esystem:serviceaccounts\u003c/code\u003e and \u003ccode class=\"language-plaintext highlighter-rouge\"\u003esystem:serviceaccounts:\u0026lt;ns\u0026gt;\u003c/code\u003e.\u003c/p\u003e\n\n\u003ch3 id=\"264-support-anonymous-user\"\u003e2.6.4 Support anonymous user\u003c/h3\u003e\n\n\u003cp\u003eThis is easy, as long as we give a dedicated user/group association to the annonymous user\nso later AuthZ module can work correctly:\u003c/p\u003e\n\n\u003cul\u003e\n  \u003cli\u003eUser: \u003ccode class=\"language-plaintext highlighter-rouge\"\u003esystem:anonymous\u003c/code\u003e\u003c/li\u003e\n  \u003cli\u003eGroup: \u003ccode class=\"language-plaintext highlighter-rouge\"\u003esystem:unauthenticated\u003c/code\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch3 id=\"265-chain-up\"\u003e2.6.5 Chain up\u003c/h3\u003e\n\n\u003cp\u003eIn the similar way, we could support other types of AuthN strategies like\nOpenID Connect (OIDC), request header (\u003ccode class=\"language-plaintext highlighter-rouge\"\u003eX-Remote-xxx\u003c/code\u003e).\nWith all these strategies, the final architecture and workflow of our solution\nwill look like this:\u003c/p\u003e\n\n\u003cp align=\"center\"\u003e\u003cimg src=\"/assets/img/cracking-k8s-authn/k8s-authn-workflow.png\" width=\"90%\" height=\"90%\"/\u003e\u003c/p\u003e\n\u003cp align=\"center\"\u003eFig 3-4. Workflow of the designed AuthN solution\u003c/p\u003e\n\n\u003cp\u003eAnd the psudo-code when \u003ccode class=\"language-plaintext highlighter-rouge\"\u003ekube-apiserver\u003c/code\u003e authenticates a request:\u003c/p\u003e\n\n\u003cdiv class=\"language-go highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003efunc\u003c/span\u003e \u003cspan class=\"n\"\u003eAuthN\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003enextHandler\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003ereq\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"n\"\u003eh\u003c/span\u003e \u003cspan class=\"n\"\u003ein\u003c/span\u003e \u003cspan class=\"n\"\u003eauthenticator\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ehandlers\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"n\"\u003eresp\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eok\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"n\"\u003eh\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eAuthenticateRequest\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ereq\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e \u003cspan class=\"n\"\u003eok\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n           \u003cspan class=\"n\"\u003ereq\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eHeader\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eDel\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;Authorization\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e  \u003cspan class=\"c\"\u003e// not required anymore in case of a successful authentication.\u003c/span\u003e\n           \u003cspan class=\"n\"\u003ereq\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003ereq\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eContext\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eAdd\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eresp\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eUser\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"c\"\u003e// put user info into context\u003c/span\u003e\n\n           \u003cspan class=\"n\"\u003enextHandler\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eServeHTTP\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ew\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003ereq\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e    \u003cspan class=\"c\"\u003e// go to the next handler (e.g. AuthZ)\u003c/span\u003e\n           \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e\n        \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n    \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"n\"\u003eallowAnonymousAccess\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"n\"\u003ereq\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eHeader\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eDel\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;Authorization\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n        \u003cspan class=\"n\"\u003ereq\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003ereq\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eContext\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eAdd\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;system:anonymous\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n        \u003cspan class=\"n\"\u003enextHandler\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eServeHTTP\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ew\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003ereq\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e    \u003cspan class=\"c\"\u003e// go to the next handler (e.g. AuthZ)\u003c/span\u003e\n        \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n    \u003cspan class=\"c\"\u003e// Some error handling, then return 401\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;401 Unauthorized\u0026#34;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003eWith no surprises that this hand made solution is just a simplified version\nof the one shipped in Kubernetes.\u003c/p\u003e\n\n\u003ch1 id=\"3-implementation\"\u003e3 Implementation\u003c/h1\u003e\n\n\u003cblockquote\u003e\n  \u003cp\u003eIf you would like to have some hands-on tests right now, you can skip this section and go to setion 4 directly.\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eAnd, without making this post too long, we\njust give some implementation descriptions of the vanilla Kubernetes AuthN.\nCode based on Kubernetes \u003ccode class=\"language-plaintext highlighter-rouge\"\u003ev1.23\u003c/code\u003e.\u003c/p\u003e\n\n\u003ch2 id=\"31-kube-apiserver-authn-options-registration\"\u003e3.1 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003ekube-apiserver\u003c/code\u003e AuthN options registration\u003c/h2\u003e\n\n\u003cdiv class=\"language-go highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"c\"\u003e// https://github.com/kubernetes/kubernetes/blob/v1.23.1/pkg/kubeapiserver/options/authentication.go#L48\u003c/span\u003e\n\n\u003cspan class=\"c\"\u003e// All build-in authentication options for API Server\u003c/span\u003e\n\u003cspan class=\"k\"\u003etype\u003c/span\u003e \u003cspan class=\"n\"\u003eBuiltInAuthenticationOptions\u003c/span\u003e \u003cspan class=\"k\"\u003estruct\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eAPIAudiences\u003c/span\u003e    \u003cspan class=\"p\"\u003e[]\u003c/span\u003e\u003cspan class=\"kt\"\u003estring\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eAnonymous\u003c/span\u003e       \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003eAnonymousAuthenticationOptions\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eBootstrapToken\u003c/span\u003e  \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003eBootstrapTokenAuthenticationOptions\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eClientCert\u003c/span\u003e      \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003egenericoptions\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eClientCertAuthenticationOptions\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eOIDC\u003c/span\u003e            \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003eOIDCAuthenticationOptions\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eRequestHeader\u003c/span\u003e   \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003egenericoptions\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eRequestHeaderAuthenticationOptions\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eServiceAccounts\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003eServiceAccountAuthenticationOptions\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eTokenFile\u003c/span\u003e       \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003eTokenFileAuthenticationOptions\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eWebHook\u003c/span\u003e         \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003eWebHookAuthenticationOptions\u003c/span\u003e\n\n    \u003cspan class=\"n\"\u003eTokenSuccessCacheTTL\u003c/span\u003e \u003cspan class=\"n\"\u003etime\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eDuration\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eTokenFailureCacheTTL\u003c/span\u003e \u003cspan class=\"n\"\u003etime\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eDuration\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"c\"\u003e// WithAll set default value for every build-in authentication option\u003c/span\u003e\n\u003cspan class=\"k\"\u003efunc\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eo\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003eBuiltInAuthenticationOptions\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"n\"\u003eWithAll\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003eBuiltInAuthenticationOptions\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003eo\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\n        \u003cspan class=\"n\"\u003eWithAnonymous\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\n        \u003cspan class=\"n\"\u003eWithBootstrapToken\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\n        \u003cspan class=\"n\"\u003eWithClientCert\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\n        \u003cspan class=\"n\"\u003eWithOIDC\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\n        \u003cspan class=\"n\"\u003eWithRequestHeader\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\n        \u003cspan class=\"n\"\u003eWithServiceAccounts\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\n        \u003cspan class=\"n\"\u003eWithTokenFile\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\n        \u003cspan class=\"n\"\u003eWithWebHook\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"c\"\u003e// AddFlags returns flags of authentication for a API Server\u003c/span\u003e\n\u003cspan class=\"k\"\u003efunc\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eo\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003eBuiltInAuthenticationOptions\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"n\"\u003eAddFlags\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003efs\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003epflag\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eFlagSet\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"c\"\u003e// register options, e.g. --token-auth-file\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003ch2 id=\"32-kubernetes-authenticator-chain\"\u003e3.2 Kubernetes authenticator chain\u003c/h2\u003e\n\n\u003cp align=\"center\"\u003e\u003cimg src=\"/assets/img/cracking-k8s-authn/k8s-authn-chain.png\" width=\"100%\" height=\"100%\"/\u003e\u003c/p\u003e\n\u003cp align=\"center\"\u003eFig 1-1. \u003c/p\u003e\n\n\u003cp\u003eAs illustrated above, Kubernetes implements more AuthN strategies than our toy solution does,\u003c/p\u003e\n\n\u003col\u003e\n  \u003cli\u003eSupport request header authentication (e.g. \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eX-Remote-User\u003c/code\u003e, \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eX-Remote-Group\u003c/code\u003e headers)\u003c/li\u003e\n  \u003cli\u003eGroup all kinds of bearer token methods into a general one\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003cp\u003eBut essentially, it’s similar as our toy design. Some code:\u003c/p\u003e\n\n\u003cdiv class=\"language-c highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"c1\"\u003e// New returns an authenticator.Request or an error that supports the standard\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e// Kubernetes authentication mechanisms.\u003c/span\u003e\n\u003cspan class=\"n\"\u003eConfig\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eNew\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"c1\"\u003e// https://github.com/kubernetes/kubernetes/blob/v1.23.1/pkg/kubeapiserver/authenticator/config.go#L94\u003c/span\u003e\n \u003cspan class=\"o\"\u003e|\u003c/span\u003e\n \u003cspan class=\"o\"\u003e|\u003c/span\u003e\u003cspan class=\"c1\"\u003e// Request header method\u003c/span\u003e\n \u003cspan class=\"o\"\u003e|-\u003c/span\u003e\u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"n\"\u003econfig\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eRequestHeaderConfig\u003c/span\u003e\n \u003cspan class=\"o\"\u003e|\u003c/span\u003e   \u003cspan class=\"n\"\u003erequestHeaderAuthenticator\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"n\"\u003eheaderrequest\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eNewDynamicVerifyOptionsSecure\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n \u003cspan class=\"o\"\u003e|\u003c/span\u003e   \u003cspan class=\"n\"\u003eauthenticators\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eappend\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003erequestHeaderAuthenticator\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n \u003cspan class=\"o\"\u003e|\u003c/span\u003e\n \u003cspan class=\"o\"\u003e|\u003c/span\u003e\u003cspan class=\"c1\"\u003e// X509 methods\u003c/span\u003e\n \u003cspan class=\"o\"\u003e|-\u003c/span\u003e\u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"n\"\u003econfig\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eClientCAContentProvider\u003c/span\u003e\n \u003cspan class=\"o\"\u003e|\u003c/span\u003e   \u003cspan class=\"n\"\u003ecertAuth\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"n\"\u003ex509\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eNewDynamic\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n \u003cspan class=\"o\"\u003e|\u003c/span\u003e   \u003cspan class=\"n\"\u003eauthenticators\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eappend\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ecertAuth\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n \u003cspan class=\"o\"\u003e|\u003c/span\u003e\n \u003cspan class=\"o\"\u003e|\u003c/span\u003e\u003cspan class=\"c1\"\u003e// ================= Bearer token methods starts ===========================\u003c/span\u003e\n \u003cspan class=\"o\"\u003e|\u003c/span\u003e \u003cspan class=\"c1\"\u003e// Token Auth File\u003c/span\u003e\n \u003cspan class=\"o\"\u003e|-\u003c/span\u003e\u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"n\"\u003econfig\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eTokenAuthFile\u003c/span\u003e \u003cspan class=\"c1\"\u003e// --token-auth-file\u003c/span\u003e\n \u003cspan class=\"o\"\u003e|\u003c/span\u003e      \u003cspan class=\"n\"\u003etokenAuth\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"n\"\u003enewAuthenticatorFromTokenFile\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003econfig\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eTokenAuthFile\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n \u003cspan class=\"o\"\u003e|\u003c/span\u003e      \u003cspan class=\"n\"\u003etokenAuthenticators\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eappend\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003etokenAuth\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n \u003cspan class=\"o\"\u003e|\u003c/span\u003e\n \u003cspan class=\"o\"\u003e|\u003c/span\u003e \u003cspan class=\"c1\"\u003e// ServiceAccount key files\u003c/span\u003e\n \u003cspan class=\"o\"\u003e|-\u003c/span\u003e\u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"n\"\u003econfig\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eServiceAccountKeyFiles\u003c/span\u003e \u003cspan class=\"c1\"\u003e// --service-account-key-file\u003c/span\u003e\n \u003cspan class=\"o\"\u003e|\u003c/span\u003e     \u003cspan class=\"n\"\u003eserviceAccountAuth\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"n\"\u003enewLegacyServiceAccountAuthenticator\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003econfig\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eServiceAccountKeyFiles\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n \u003cspan class=\"o\"\u003e|\u003c/span\u003e     \u003cspan class=\"n\"\u003etokenAuthenticators\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eappend\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eserviceAccountAuth\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n \u003cspan class=\"o\"\u003e|\u003c/span\u003e\n \u003cspan class=\"o\"\u003e|\u003c/span\u003e \u003cspan class=\"c1\"\u003e// ServiceAccount issuers\u003c/span\u003e\n \u003cspan class=\"o\"\u003e|-\u003c/span\u003e\u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"n\"\u003econfig\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eServiceAccountIssuers\u003c/span\u003e  \u003cspan class=\"c1\"\u003e// --service-account-issuers\u003c/span\u003e\n \u003cspan class=\"o\"\u003e|\u003c/span\u003e     \u003cspan class=\"n\"\u003eserviceAccountAuth\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"n\"\u003enewServiceAccountAuthenticator\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003econfig\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eServiceAccountIssuers\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003econfig\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eServiceAccountKeyFiles\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n \u003cspan class=\"o\"\u003e|\u003c/span\u003e     \u003cspan class=\"n\"\u003etokenAuthenticators\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eappend\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eserviceAccountAuth\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n \u003cspan class=\"o\"\u003e|\u003c/span\u003e\n \u003cspan class=\"o\"\u003e|\u003c/span\u003e \u003cspan class=\"c1\"\u003e// Bootstrap tokens\u003c/span\u003e\n \u003cspan class=\"o\"\u003e|-\u003c/span\u003e\u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"n\"\u003econfig\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eBootstrapToken\u003c/span\u003e\n \u003cspan class=\"o\"\u003e|\u003c/span\u003e     \u003cspan class=\"n\"\u003etokenAuthenticators\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eappend\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003econfig\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eBootstrapTokenAuthenticator\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n \u003cspan class=\"o\"\u003e|\u003c/span\u003e\n \u003cspan class=\"o\"\u003e|\u003c/span\u003e \u003cspan class=\"c1\"\u003e// OIDC\u003c/span\u003e\n \u003cspan class=\"o\"\u003e|-\u003c/span\u003e\u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"n\"\u003econfig\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eOIDC\u003c/span\u003e\n \u003cspan class=\"o\"\u003e|\u003c/span\u003e     \u003cspan class=\"n\"\u003etokenAuthenticators\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eappend\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eoidcAuth\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n \u003cspan class=\"o\"\u003e|\u003c/span\u003e\n \u003cspan class=\"o\"\u003e|\u003c/span\u003e \u003cspan class=\"c1\"\u003e// Webhok token auth confi file\u003c/span\u003e\n \u003cspan class=\"o\"\u003e|-\u003c/span\u003e\u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"n\"\u003econfig\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eWebhookTokenAuthnConfigFile\u003c/span\u003e\n \u003cspan class=\"o\"\u003e|\u003c/span\u003e     \u003cspan class=\"n\"\u003ewebhookTokenAuth\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"n\"\u003enewWebhookTokenAuthenticator\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003econfig\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n \u003cspan class=\"o\"\u003e|\u003c/span\u003e     \u003cspan class=\"n\"\u003etokenAuthenticators\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eappend\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ewebhookTokenAuth\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n \u003cspan class=\"o\"\u003e|\u003c/span\u003e\n \u003cspan class=\"o\"\u003e|-\u003c/span\u003e\u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"n\"\u003elen\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003etokenAuthenticators\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\n \u003cspan class=\"o\"\u003e|\u003c/span\u003e     \u003cspan class=\"n\"\u003etokenAuth\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"n\"\u003etokenunion\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eNew\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003etokenAuthenticators\u003c/span\u003e\u003cspan class=\"p\"\u003e...)\u003c/span\u003e \u003cspan class=\"c1\"\u003e// Union the token authenticators (and cache it optionally)\u003c/span\u003e\n \u003cspan class=\"o\"\u003e|\u003c/span\u003e     \u003cspan class=\"n\"\u003eauthenticators\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eappend\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ebearertoken\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eNew\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003etokenAuth\u003c/span\u003e\u003cspan class=\"p\"\u003e),\u003c/span\u003e   \u003cspan class=\"c1\"\u003e// general bearertoken wrapper\u003c/span\u003e\n \u003cspan class=\"o\"\u003e|\u003c/span\u003e         \u003cspan class=\"n\"\u003ewebsocket\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eNewProtocolAuthenticator\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003etokenAuth\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e  \u003cspan class=\"c1\"\u003e//\u003c/span\u003e\n \u003cspan class=\"o\"\u003e|\u003c/span\u003e     \u003cspan class=\"n\"\u003esecurityDefinitions\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;BearerToken\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e\u003cspan class=\"n\"\u003espec\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eSecurityScheme\u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n \u003cspan class=\"o\"\u003e|\u003c/span\u003e             \u003cspan class=\"n\"\u003eType\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e        \u003cspan class=\"s\"\u003e\u0026#34;apiKey\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n \u003cspan class=\"o\"\u003e|\u003c/span\u003e             \u003cspan class=\"n\"\u003eName\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e        \u003cspan class=\"s\"\u003e\u0026#34;authorization\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n \u003cspan class=\"o\"\u003e|\u003c/span\u003e             \u003cspan class=\"n\"\u003eIn\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e          \u003cspan class=\"s\"\u003e\u0026#34;header\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n \u003cspan class=\"o\"\u003e|\u003c/span\u003e             \u003cspan class=\"n\"\u003eDescription\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;Bearer Token authentication\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n \u003cspan class=\"o\"\u003e|\u003c/span\u003e     \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n \u003cspan class=\"o\"\u003e|\u003c/span\u003e\u003cspan class=\"c1\"\u003e// ================= Bearer token methods ends ===========================\u003c/span\u003e\n \u003cspan class=\"o\"\u003e|\u003c/span\u003e\n \u003cspan class=\"o\"\u003e|\u003c/span\u003e  \u003cspan class=\"n\"\u003eauthenticator\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"k\"\u003eunion\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eNew\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eauthenticators\u003c/span\u003e\u003cspan class=\"p\"\u003e...)\u003c/span\u003e\n \u003cspan class=\"o\"\u003e|\u003c/span\u003e  \u003cspan class=\"n\"\u003eauthenticator\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003egroup\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eNewAuthenticatedGroupAdder\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eauthenticator\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n \u003cspan class=\"o\"\u003e|\u003c/span\u003e\n \u003cspan class=\"o\"\u003e|-\u003c/span\u003e\u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"n\"\u003econfig\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eAnonymous\u003c/span\u003e\n        \u003cspan class=\"n\"\u003eauthenticator\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eappend\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eanonymous\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eNewAuthenticator\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003ch2 id=\"33-authenticate-a-request\"\u003e3.3 Authenticate a request\u003c/h2\u003e\n\n\u003cp\u003eWhen a request arrives, \n\u003ccode class=\"language-plaintext highlighter-rouge\"\u003eWithAuthentication()\u003c/code\u003e will be invokded, which tries to authenticate the given\nrequest as a user, and then stores user information to the request’s context.\nOn success, “Authorization” header is removed from the request and the next handler\nis invoked to serve the request:\u003c/p\u003e\n\n\u003cdiv class=\"language-go highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"c\"\u003e// https://github.com/kubernetes/kubernetes/blob/v1.23.0/staging/src/k8s.io/apiserver/pkg/endpoints/filters/authentication.go#L41\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003efunc\u003c/span\u003e \u003cspan class=\"n\"\u003eWithAuthentication\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ehandler\u003c/span\u003e \u003cspan class=\"n\"\u003ehttp\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eHandler\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eauth\u003c/span\u003e \u003cspan class=\"n\"\u003eauthenticator\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eRequest\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"n\"\u003ehttp\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eHandler\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003ewithAuthentication\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ehandler\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eauth\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003efailed\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eapiAuds\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003erecordAuthMetrics\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003efunc\u003c/span\u003e \u003cspan class=\"n\"\u003ewithAuthentication\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ehandler\u003c/span\u003e \u003cspan class=\"n\"\u003ehttp\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eHandler\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eauth\u003c/span\u003e \u003cspan class=\"n\"\u003eauthenticator\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eRequest\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"o\"\u003e...\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"n\"\u003ehttp\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eHandler\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003ehttp\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eHandlerFunc\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003efunc\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ew\u003c/span\u003e \u003cspan class=\"n\"\u003ehttp\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eResponseWriter\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003ereq\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003ehttp\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eRequest\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"n\"\u003eresp\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eok\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"n\"\u003eauth\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eAuthenticateRequest\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ereq\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"c\"\u003e// iterate over the authenticator list, return ok if anyone succeeds\u003c/span\u003e\n        \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"o\"\u003e!\u003c/span\u003e\u003cspan class=\"n\"\u003eok\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n            \u003cspan class=\"n\"\u003efailed\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eServeHTTP\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n            \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e\n        \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n        \u003cspan class=\"n\"\u003ereq\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eHeader\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eDel\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;Authorization\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"c\"\u003e// not required anymore in case of a successful authentication.\u003c/span\u003e\n        \u003cspan class=\"n\"\u003ereq\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eContext\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eAdd\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eresp\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eUser\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\n        \u003cspan class=\"n\"\u003ehandler\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eServeHTTP\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ew\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003ereq\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e})\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e\u003ccode class=\"language-plaintext highlighter-rouge\"\u003eauth.AuthenticateRequest(req)\u003c/code\u003e will iterate over the registered authenticator list, and\nreturn ok if anyone succeeds.\u003c/p\u003e\n\n\u003cdiv class=\"language-go highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"c\"\u003e// https://github.com/kubernetes/kubernetes/blob/v1.23.1/staging/src/k8s.io/apiserver/pkg/authentication/request/union/union.go#L53\u003c/span\u003e\n\n\u003cspan class=\"c\"\u003e// unionAuthRequestHandler authenticates requests using a chain of authenticator.Requests\u003c/span\u003e\n\u003cspan class=\"k\"\u003etype\u003c/span\u003e \u003cspan class=\"n\"\u003eunionAuthRequestHandler\u003c/span\u003e \u003cspan class=\"k\"\u003estruct\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eHandlers\u003c/span\u003e \u003cspan class=\"p\"\u003e[]\u003c/span\u003e\u003cspan class=\"n\"\u003eauthenticator\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eRequest\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eFailOnError\u003c/span\u003e \u003cspan class=\"kt\"\u003ebool\u003c/span\u003e \u003cspan class=\"c\"\u003e// determines whether an error returns short-circuits the chain\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"c\"\u003e// Authenticate the request using a chain of authenticator.Request objects.\u003c/span\u003e\n\u003cspan class=\"k\"\u003efunc\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eauthHandler\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003eunionAuthRequestHandler\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"n\"\u003eAuthenticateRequest\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ereq\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003ehttp\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eRequest\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003eauthenticator\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eResponse\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"kt\"\u003ebool\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"kt\"\u003eerror\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"n\"\u003e_\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eh\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"k\"\u003erange\u003c/span\u003e \u003cspan class=\"n\"\u003eauthHandler\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eHandlers\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"n\"\u003eresp\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eok\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"n\"\u003eh\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eAuthenticateRequest\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ereq\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n        \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"n\"\u003eok\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n            \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003eresp\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eok\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eerr\u003c/span\u003e\n        \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"no\"\u003enil\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"no\"\u003efalse\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eutilerrors\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eNewAggregate\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eerrlist\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003eLet’s see two specific authenticator.\u003c/p\u003e\n\n\u003ch3 id=\"331-static-token-authentication\"\u003e3.3.1 Static token authentication\u003c/h3\u003e\n\n\u003cp\u003eStatic token authenticator, along with many other token based authenticators, is wrapped by\na general bearer token authenticator in the implementation:\u003c/p\u003e\n\n\u003cdiv class=\"language-go highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"c\"\u003e// https://github.com/kubernetes/kubernetes/blob/v1.23.1/staging/src/k8s.io/apiserver/pkg/authentication/request/bearertoken/bearertoken.go#L37\u003c/span\u003e\n\u003cspan class=\"k\"\u003efunc\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ea\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003eAuthenticator\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"n\"\u003eAuthenticateRequest\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ereq\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003ehttp\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eRequest\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003eauthenticator\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eResponse\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"kt\"\u003ebool\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"kt\"\u003eerror\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eauth\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"n\"\u003estrings\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eTrimSpace\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ereq\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eHeader\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eGet\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;Authorization\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eparts\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"n\"\u003estrings\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eSplitN\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eauth\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34; \u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"m\"\u003e3\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n    \u003cspan class=\"n\"\u003etoken\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"n\"\u003eparts\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"m\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\n\n    \u003cspan class=\"n\"\u003eresp\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eok\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"n\"\u003ea\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eauth\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eAuthenticateToken\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ereq\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eContext\u003c/span\u003e\u003cspan class=\"p\"\u003e(),\u003c/span\u003e \u003cspan class=\"n\"\u003etoken\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"n\"\u003eok\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"n\"\u003ereq\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eHeader\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eDel\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;Authorization\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n    \u003cspan class=\"c\"\u003e// If the token authenticator didn\u0026#39;t error, provide a default error\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"o\"\u003e!\u003c/span\u003e\u003cspan class=\"n\"\u003eok\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u0026amp;\u003c/span\u003e \u003cspan class=\"n\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"no\"\u003enil\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"n\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003einvalidToken\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003eresp\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eok\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eerr\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e\u003ccode class=\"language-plaintext highlighter-rouge\"\u003ea.auth.AuthenticateRequest()\u003c/code\u003e will further delegate to the real static token authenticator:\u003c/p\u003e\n\n\u003cdiv class=\"language-go highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"c\"\u003e// https://github.com/kubernetes/kubernetes/blob/v1.23.1/staging/src/k8s.io/apiserver/pkg/authentication/authenticator/interfaces.go#L28\u003c/span\u003e\n\u003cspan class=\"k\"\u003etype\u003c/span\u003e \u003cspan class=\"n\"\u003eToken\u003c/span\u003e \u003cspan class=\"k\"\u003einterface\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eAuthenticateToken\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ectx\u003c/span\u003e \u003cspan class=\"n\"\u003econtext\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eContext\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003etoken\u003c/span\u003e \u003cspan class=\"kt\"\u003estring\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003eResponse\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"kt\"\u003ebool\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"kt\"\u003eerror\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"c\"\u003e// https://github.com/kubernetes/kubernetes/blob/v1.23.1/staging/src/k8s.io/apiserver/pkg/authentication/token/tokenfile/tokenfile.go#L93\u003c/span\u003e\n\u003cspan class=\"k\"\u003efunc\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ea\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003eTokenAuthenticator\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"n\"\u003eAuthenticateToken\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ectx\u003c/span\u003e \u003cspan class=\"n\"\u003econtext\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eContext\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003evalue\u003c/span\u003e \u003cspan class=\"kt\"\u003estring\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003eauthenticator\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eResponse\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"kt\"\u003ebool\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"kt\"\u003eerror\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"n\"\u003euser\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eok\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"n\"\u003ea\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003etokens\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003evalue\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"o\"\u003e!\u003c/span\u003e\u003cspan class=\"n\"\u003eok\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"no\"\u003enil\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"no\"\u003efalse\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"no\"\u003enil\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e\u003cspan class=\"n\"\u003eauthenticator\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eResponse\u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"n\"\u003eUser\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003euser\u003c/span\u003e\u003cspan class=\"p\"\u003e},\u003c/span\u003e \u003cspan class=\"no\"\u003etrue\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"no\"\u003enil\u003c/span\u003e \u003cspan class=\"c\"\u003e// User: type user.Info\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003eWhere the \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eUser\u003c/code\u003e information of the token is retrieved:\u003c/p\u003e\n\n\u003cdiv class=\"language-go highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"c\"\u003e// https://github.com/kubernetes/kubernetes/blob/v1.23.1/staging/src/k8s.io/apiserver/pkg/authentication/user/user.go#L20\u003c/span\u003e\n\n\u003cspan class=\"c\"\u003e// Info describes a user that has been authenticated to the system.\u003c/span\u003e\n\u003cspan class=\"k\"\u003etype\u003c/span\u003e \u003cspan class=\"n\"\u003eInfo\u003c/span\u003e \u003cspan class=\"k\"\u003einterface\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eGetName\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"kt\"\u003estring\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eGetUID\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"kt\"\u003estring\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eGetGroups\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e[]\u003c/span\u003e\u003cspan class=\"kt\"\u003estring\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eGetExtra\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"k\"\u003emap\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"kt\"\u003estring\u003c/span\u003e\u003cspan class=\"p\"\u003e][]\u003c/span\u003e\u003cspan class=\"kt\"\u003estring\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003eToken file authenticator reads a \u003ccode class=\"language-plaintext highlighter-rouge\"\u003e\u0026lt;token,user,userid\u0026gt;\u003c/code\u003e 3-tuple CSV file when \u003ccode class=\"language-plaintext highlighter-rouge\"\u003ekube-apiserver\u003c/code\u003e starts,\nand stores this information in the memory.\u003c/p\u003e\n\n\u003cdiv class=\"language-go highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"c\"\u003e// NewCSV returns a TokenAuthenticator, populated from a CSV file.\u003c/span\u003e\n\u003cspan class=\"c\"\u003e// The CSV file must contain records in the format \u0026#34;token,username,useruid\u0026#34;\u003c/span\u003e\n\u003cspan class=\"k\"\u003efunc\u003c/span\u003e \u003cspan class=\"n\"\u003eNewCSV\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003epath\u003c/span\u003e \u003cspan class=\"kt\"\u003estring\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003eTokenAuthenticator\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"kt\"\u003eerror\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"o\"\u003e...\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003eSo here it just check if the given token is in the\ntoken list, if is, extract the \u003ccode class=\"language-plaintext highlighter-rouge\"\u003euser\u003c/code\u003e field and put into the response (so later on the outer authenticator can put\nit into the request’s context for subsequent AuthZ usage).\u003c/p\u003e\n\n\u003ch3 id=\"332-x509-authenticator\"\u003e3.3.2 X509 authenticator\u003c/h3\u003e\n\n\u003cdiv class=\"language-go highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"c\"\u003e// https://github.com/kubernetes/kubernetes/blob/v1.23.0/staging/src/k8s.io/apiserver/pkg/authentication/request/x509/x509.go#L198\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003efunc\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ea\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003eVerifier\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"n\"\u003eAuthenticateRequest\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ereq\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003ehttp\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eRequest\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003eauthenticator\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eResponse\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"kt\"\u003ebool\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"kt\"\u003eerror\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"o\"\u003e...\u003c/span\u003e\n    \u003cspan class=\"n\"\u003ereq\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eTLS\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ePeerCertificates\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"m\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eVerify\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e\n    \u003cspan class=\"n\"\u003everifySubject\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ereq\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eTLS\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ePeerCertificates\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"m\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eSubject\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003ea\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eauth\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eAuthenticateRequest\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ereq\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003efunc\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ea\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003eAuthenticator\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"n\"\u003eAuthenticateRequest\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ereq\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003ehttp\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eRequest\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003eauthenticator\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eResponse\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"kt\"\u003ebool\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"kt\"\u003eerror\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"n\"\u003ereq\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eTLS\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ePeerCertificates\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"m\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eNotAfter\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eSub\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003etime\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eNow\u003c/span\u003e\u003cspan class=\"p\"\u003e())\u003c/span\u003e\n\n    \u003cspan class=\"n\"\u003echains\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"n\"\u003ereq\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eTLS\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ePeerCertificates\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"m\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eVerify\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n    \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"n\"\u003e_\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003echain\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"k\"\u003erange\u003c/span\u003e \u003cspan class=\"n\"\u003echains\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"n\"\u003euser\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eok\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"n\"\u003ea\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003euser\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eUser\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003echain\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n        \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"n\"\u003eok\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n            \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003euser\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eok\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eerr\u003c/span\u003e\n        \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003eerr\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003ch2 id=\"34-serviceaccount-and-secret\"\u003e3.4 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eServiceAccount\u003c/code\u003e and \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eSecret\u003c/code\u003e\u003c/h2\u003e\n\n\u003cdiv class=\"language-go highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"c\"\u003e// https://github.com/kubernetes/kubernetes/blob/v1.23.1/staging/src/k8s.io/api/core/v1/types.go#L4600\u003c/span\u003e\n\n\u003cspan class=\"c\"\u003e// ServiceAccount binds together:\u003c/span\u003e\n\u003cspan class=\"c\"\u003e// * a name, understood by users, and perhaps by peripheral systems, for an identity\u003c/span\u003e\n\u003cspan class=\"c\"\u003e// * a principal that can be authenticated and authorized\u003c/span\u003e\n\u003cspan class=\"c\"\u003e// * a set of secrets\u003c/span\u003e\n\u003cspan class=\"k\"\u003etype\u003c/span\u003e \u003cspan class=\"n\"\u003eServiceAccount\u003c/span\u003e \u003cspan class=\"k\"\u003estruct\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"n\"\u003emetav1\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eTypeMeta\u003c/span\u003e\n    \u003cspan class=\"n\"\u003emetav1\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eObjectMeta\u003c/span\u003e\n\n    \u003cspan class=\"c\"\u003e// list of secrets allowed to be used by pods running using this ServiceAccount.\u003c/span\u003e\n    \u003cspan class=\"c\"\u003e// More info: https://kubernetes.io/docs/concepts/configuration/secret\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eSecrets\u003c/span\u003e \u003cspan class=\"p\"\u003e[]\u003c/span\u003e\u003cspan class=\"n\"\u003eObjectReference\u003c/span\u003e\n\n    \u003cspan class=\"n\"\u003eImagePullSecrets\u003c/span\u003e \u003cspan class=\"p\"\u003e[]\u003c/span\u003e\u003cspan class=\"n\"\u003eLocalObjectReference\u003c/span\u003e\n\n    \u003cspan class=\"c\"\u003e// whether pods running as this service account should have an API token automatically mounted.\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eAutomountServiceAccountToken\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"kt\"\u003ebool\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cdiv class=\"language-go highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"c\"\u003e// https://github.com/kubernetes/kubernetes/blob/v1.23.1/staging/src/k8s.io/api/core/v1/types.go#L6005\u003c/span\u003e\n\n\u003cspan class=\"c\"\u003e// Secret holds secret data of a certain type. The total bytes of the values in\u003c/span\u003e\n\u003cspan class=\"c\"\u003e// the Data field must be less than MaxSecretSize bytes.\u003c/span\u003e\n\u003cspan class=\"k\"\u003etype\u003c/span\u003e \u003cspan class=\"n\"\u003eSecret\u003c/span\u003e \u003cspan class=\"k\"\u003estruct\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"n\"\u003emetav1\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eTypeMeta\u003c/span\u003e\n    \u003cspan class=\"n\"\u003emetav1\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eObjectMeta\u003c/span\u003e\n\n    \u003cspan class=\"n\"\u003eImmutable\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"kt\"\u003ebool\u003c/span\u003e\n\n    \u003cspan class=\"n\"\u003eData\u003c/span\u003e \u003cspan class=\"k\"\u003emap\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"kt\"\u003estring\u003c/span\u003e\u003cspan class=\"p\"\u003e][]\u003c/span\u003e\u003cspan class=\"kt\"\u003ebyte\u003c/span\u003e \u003cspan class=\"c\"\u003e// secret data, base64 encoded\u003c/span\u003e\n\n    \u003cspan class=\"c\"\u003e// stringData allows specifying non-binary secret data in string form.\u003c/span\u003e\n    \u003cspan class=\"c\"\u003e// It is provided as a write-only input field for convenience.\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eStringData\u003c/span\u003e \u003cspan class=\"k\"\u003emap\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"kt\"\u003estring\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\u003cspan class=\"kt\"\u003estring\u003c/span\u003e\n\n    \u003cspan class=\"c\"\u003e// Used to facilitate programmatic handling of secret data.\u003c/span\u003e\n    \u003cspan class=\"c\"\u003e// More info: https://kubernetes.io/docs/concepts/configuration/secret/#secret-types\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eType\u003c/span\u003e \u003cspan class=\"n\"\u003eSecretType\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003eToken controller:\u003c/p\u003e\n\n\u003cdiv class=\"language-go highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"c\"\u003e// https://github.com/kubernetes/kubernetes/blob/v1.23.1/pkg/controller/serviceaccount/tokens_controller.go#L134\u003c/span\u003e\n\n\u003cspan class=\"c\"\u003e// TokensController manages ServiceAccountToken secrets for ServiceAccount objects\u003c/span\u003e\n\u003cspan class=\"k\"\u003etype\u003c/span\u003e \u003cspan class=\"n\"\u003eTokensController\u003c/span\u003e \u003cspan class=\"k\"\u003estruct\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n   \u003cspan class=\"o\"\u003e...\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003ch1 id=\"4-tests-with-the-kubernetes-authn\"\u003e4 Tests with the Kubernetes AuthN\u003c/h1\u003e\n\n\u003cp\u003eIn this section, let’s see how to use the various AuthN strategies with command\nline tools like \u003ccode class=\"language-plaintext highlighter-rouge\"\u003ecurl\u003c/code\u003e and programming (golang).\nExamples here will be simple enough, but it will reveal the workflows and implementation details\nwe’ve covered in the previous section.\u003c/p\u003e\n\n\u003ch2 id=\"41-preparations\"\u003e4.1 Preparations\u003c/h2\u003e\n\n\u003cblockquote\u003e\n  \u003cp\u003eFirst of all, you should have a running Kubernetes cluster at hand, e.g. with\nminikube, but this is out of this post’s scope.\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eMake sure the AuthN module works as expected by requesting \u003ccode class=\"language-plaintext highlighter-rouge\"\u003ekube-apiserver\u003c/code\u003e with\na \u003cstrong\u003e\u003cmark\u003efake token\u003c/mark\u003e\u003c/strong\u003e:\u003c/p\u003e\n\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003e$ \u003c/span\u003e\u003cspan class=\"nb\"\u003eexport \u003c/span\u003e\u003cspan class=\"nv\"\u003eAPI_SERVER_URL\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u0026lt;addr\u0026gt; \u003cspan class=\"c\"\u003e# e.g. https://127.0.0.1:6443\u003c/span\u003e\n\n\u003cspan class=\"nv\"\u003e$ \u003c/span\u003ecurl \u003cspan class=\"nt\"\u003e-k\u003c/span\u003e \u003cspan class=\"nt\"\u003e-H\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;Authorization: Bearer 1234\u0026#34;\u003c/span\u003e \u003cspan class=\"nv\"\u003e$API_SERVER_URL\u003c/span\u003e/api/v1/namespaces/default/pods\n\u003cspan class=\"o\"\u003e{\u003c/span\u003e\n  ...\n  \u003cspan class=\"s2\"\u003e\u0026#34;message\u0026#34;\u003c/span\u003e: \u003cspan class=\"s2\"\u003e\u0026#34;Unauthorized\u0026#34;\u003c/span\u003e,\n  \u003cspan class=\"s2\"\u003e\u0026#34;code\u0026#34;\u003c/span\u003e: 401\n\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003eReceived a “401 Unauthorized” response, and met expectation.\u003c/p\u003e\n\n\u003ch2 id=\"41-static-token\"\u003e4.1 Static token\u003c/h2\u003e\n\n\u003cp\u003eThis section describes how to access Kubernetes API from outside the cluster with static token AuthN strategy.\u003c/p\u003e\n\n\u003ch3 id=\"411-prepare-token-file\"\u003e4.1.1 Prepare token file\u003c/h3\u003e\n\n\u003cp\u003ePrepare a static token authentication file:\u003c/p\u003e\n\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003e$ \u003c/span\u003e\u003cspan class=\"nb\"\u003ecat\u003c/span\u003e /etc/kubernetes/static-tokens.csv\nalice-rand1,alice,111,666 \u003cspan class=\"c\"\u003e# \u0026lt;token\u0026gt;,\u0026lt;user\u0026gt;,\u0026lt;uid\u0026gt;,\u0026lt;gid\u0026gt;, where uid/gid are arbitrary strings\u003c/span\u003e\nbob-rand2,bob,222,666\ncindy-rand3,cindy,333,777\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003ewhere there are three tokens each for a user, and user \u003ccode class=\"language-plaintext highlighter-rouge\"\u003ealice\u003c/code\u003e\nand \u003ccode class=\"language-plaintext highlighter-rouge\"\u003ebob\u003c/code\u003e belongs to the same user group \u003ccode class=\"language-plaintext highlighter-rouge\"\u003e666\u003c/code\u003e.\u003c/p\u003e\n\n\u003ch3 id=\"412-configure-kube-apiserver\"\u003e4.1.2 Configure \u003ccode class=\"language-plaintext highlighter-rouge\"\u003ekube-apiserver\u003c/code\u003e\u003c/h3\u003e\n\n\u003cp\u003eConfigure \u003ccode class=\"language-plaintext highlighter-rouge\"\u003ekube-apiserver\u003c/code\u003e with \u003ccode class=\"language-plaintext highlighter-rouge\"\u003e--token-auth-file=/etc/kubernetes/static-tokens.csv\u003c/code\u003e and restart it,\ne.g. if your cluster is deployed with binaries:\u003c/p\u003e\n\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003e$ \u003c/span\u003esystemctl daemon-reload\n\u003cspan class=\"nv\"\u003e$ \u003c/span\u003esystemctl restart kube-apiserver\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003ch3 id=\"413-command-line-example-with-curl\"\u003e4.1.3 Command line example with \u003ccode class=\"language-plaintext highlighter-rouge\"\u003ecurl\u003c/code\u003e\u003c/h3\u003e\n\n\u003ch4 id=\"verify-authn-ok-but-authz-will-fail\"\u003eVerify AuthN OK (but AuthZ will fail)\u003c/h4\u003e\n\n\u003cp\u003eNow test again:\u003c/p\u003e\n\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003e$ \u003c/span\u003ecurl \u003cspan class=\"nt\"\u003e-k\u003c/span\u003e \u003cspan class=\"nt\"\u003e-H\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;Authorization: Bearer alice-rand1\u0026#34;\u003c/span\u003e \u003cspan class=\"nv\"\u003e$API_SERVER_URL\u003c/span\u003e/api/v1/namespaces/default/pods\n\u003cspan class=\"o\"\u003e{\u003c/span\u003e\n  ...\n  \u003cspan class=\"s2\"\u003e\u0026#34;message\u0026#34;\u003c/span\u003e: \u003cspan class=\"s2\"\u003e\u0026#34;pods is forbidden: User \u003c/span\u003e\u003cspan class=\"se\"\u003e\\\u0026#34;\u003c/span\u003e\u003cspan class=\"s2\"\u003ealice\u003c/span\u003e\u003cspan class=\"se\"\u003e\\\u0026#34;\u003c/span\u003e\u003cspan class=\"s2\"\u003e cannot list resource \u003c/span\u003e\u003cspan class=\"se\"\u003e\\\u0026#34;\u003c/span\u003e\u003cspan class=\"s2\"\u003epods\u003c/span\u003e\u003cspan class=\"se\"\u003e\\\u0026#34;\u003c/span\u003e\u003cspan class=\"s2\"\u003e in API group \u003c/span\u003e\u003cspan class=\"se\"\u003e\\\u0026#34;\\\u0026#34;\u003c/span\u003e\u003cspan class=\"s2\"\u003e in the namespace \u003c/span\u003e\u003cspan class=\"se\"\u003e\\\u0026#34;\u003c/span\u003e\u003cspan class=\"s2\"\u003edefault\u003c/span\u003e\u003cspan class=\"se\"\u003e\\\u0026#34;\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;\u003c/span\u003e,\n  \u003cspan class=\"s2\"\u003e\u0026#34;reason\u0026#34;\u003c/span\u003e: \u003cspan class=\"s2\"\u003e\u0026#34;Forbidden\u0026#34;\u003c/span\u003e,\n  \u003cspan class=\"s2\"\u003e\u0026#34;code\u0026#34;\u003c/span\u003e: 403\n\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003eWell, still failed, but notice that the response now is \u003ccode class=\"language-plaintext highlighter-rouge\"\u003e403 Forbidden\u003c/code\u003e instead\nof the previous \u003ccode class=\"language-plaintext highlighter-rouge\"\u003e401 Unauthorized\u003c/code\u003e, which \u003cstrong\u003e\u003cmark\u003eindicates that we have been\nsuccessfully authenticated\u003c/mark\u003e\u003c/strong\u003e, and the request failed only because user\n\u003ccode class=\"language-plaintext highlighter-rouge\"\u003ealice\u003c/code\u003e \u003cstrong\u003e\u003cmark\u003edoesn\u0026#39;t have enough permissions\u003c/mark\u003e\u003c/strong\u003e to perform the\noperation - which is \u003cstrong\u003e\u003cmark\u003edenied by AuthZ\u003c/mark\u003e\u003c/strong\u003e.\u003c/p\u003e\n\n\u003ch4 id=\"add-role-and-rolebinding-to-pass-authz\"\u003eAdd \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eRole\u003c/code\u003e and \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eRoleBinding\u003c/code\u003e to pass AuthZ\u003c/h4\u003e\n\n\u003cp\u003eAs a quick remedy, we can create a role which has the proper permissions, and\nthen bind users to this role [6].\u003c/p\u003e\n\n\u003cp\u003eThe role specification \u003cstrong\u003e\u003cmark\u003e\u003ccode\u003erole-pod-reader.yaml\u003c/code\u003e\u003c/mark\u003e\u003c/strong\u003e:\u003c/p\u003e\n\n\u003cdiv class=\"language-yaml highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"na\"\u003eapiVersion\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003erbac.authorization.k8s.io/v1\u003c/span\u003e\n\u003cspan class=\"na\"\u003ekind\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003eRole\u003c/span\u003e\n\u003cspan class=\"na\"\u003emetadata\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e\n  \u003cspan class=\"na\"\u003enamespace\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003edefault\u003c/span\u003e\n  \u003cspan class=\"na\"\u003ename\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003epod-reader\u003c/span\u003e\n\u003cspan class=\"na\"\u003erules\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e\n\u003cspan class=\"pi\"\u003e-\u003c/span\u003e \u003cspan class=\"na\"\u003eapiGroups\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"pi\"\u003e[\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"pi\"\u003e]\u003c/span\u003e \u003cspan class=\"c1\"\u003e# \u0026#34;\u0026#34; indicates the core API group\u003c/span\u003e\n  \u003cspan class=\"na\"\u003eresources\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"pi\"\u003e[\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"s\"\u003epods\u0026#34;\u003c/span\u003e\u003cspan class=\"pi\"\u003e]\u003c/span\u003e\n  \u003cspan class=\"na\"\u003everbs\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"pi\"\u003e[\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"s\"\u003eget\u0026#34;\u003c/span\u003e\u003cspan class=\"pi\"\u003e,\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"s\"\u003elist\u0026#34;\u003c/span\u003e\u003cspan class=\"pi\"\u003e]\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003eThe role binding specification \n\u003cstrong\u003e\u003cmark\u003e\u003ccode\u003erolebinding-for-alice.yaml\u003c/code\u003e\u003c/mark\u003e\u003c/strong\u003e:\u003c/p\u003e\n\n\u003cdiv class=\"language-yaml highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"na\"\u003eapiVersion\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003erbac.authorization.k8s.io/v1\u003c/span\u003e\n\u003cspan class=\"na\"\u003ekind\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003eRoleBinding\u003c/span\u003e\n\u003cspan class=\"na\"\u003emetadata\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e\n  \u003cspan class=\"na\"\u003ename\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003eread-pods\u003c/span\u003e\n  \u003cspan class=\"na\"\u003enamespace\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003edefault\u003c/span\u003e\n\u003cspan class=\"na\"\u003esubjects\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e\n\u003cspan class=\"pi\"\u003e-\u003c/span\u003e \u003cspan class=\"na\"\u003ekind\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003eUser\u003c/span\u003e\n  \u003cspan class=\"na\"\u003ename\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003ealice\u003c/span\u003e \u003cspan class=\"c1\"\u003e# \u0026#34;name\u0026#34; is case sensitive\u003c/span\u003e\n  \u003cspan class=\"na\"\u003eapiGroup\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003erbac.authorization.k8s.io\u003c/span\u003e\n\u003cspan class=\"na\"\u003eroleRef\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e\n  \u003cspan class=\"na\"\u003ekind\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003eRole\u003c/span\u003e\n  \u003cspan class=\"na\"\u003ename\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003epod-reader\u003c/span\u003e\n  \u003cspan class=\"na\"\u003eapiGroup\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003erbac.authorization.k8s.io\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003eNow create them:\u003c/p\u003e\n\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003e$ \u003c/span\u003ek apply \u003cspan class=\"nt\"\u003e-f\u003c/span\u003e role-pod-reader.yaml\n\u003cspan class=\"nv\"\u003e$ \u003c/span\u003ek apply \u003cspan class=\"nt\"\u003e-f\u003c/span\u003e rolebinding-for-alice.yaml\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003eThen test again:\u003c/p\u003e\n\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003e$ \u003c/span\u003ecurl \u003cspan class=\"nt\"\u003e-k\u003c/span\u003e \u003cspan class=\"nt\"\u003e-H\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;Authorization: Bearer alice-rand1\u0026#34;\u003c/span\u003e \u003cspan class=\"nv\"\u003e$API_SERVER_URL\u003c/span\u003e/api/v1/namespaces/default/pods\n\u003cspan class=\"o\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"s2\"\u003e\u0026#34;kind\u0026#34;\u003c/span\u003e: \u003cspan class=\"s2\"\u003e\u0026#34;PodList\u0026#34;\u003c/span\u003e,\n  \u003cspan class=\"s2\"\u003e\u0026#34;apiVersion\u0026#34;\u003c/span\u003e: \u003cspan class=\"s2\"\u003e\u0026#34;v1\u0026#34;\u003c/span\u003e,\n  \u003cspan class=\"s2\"\u003e\u0026#34;items\u0026#34;\u003c/span\u003e: \u003cspan class=\"o\"\u003e[\u003c/span\u003e ... \u003cspan class=\"o\"\u003e]\u003c/span\u003e\n\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003eOK, we \u003cstrong\u003e\u003cmark\u003esuccessfully got the response\u003c/mark\u003e\u003c/strong\u003e we wanted!\u003c/p\u003e\n\n\u003cp\u003eAnd we can double confirm that the \u003cstrong\u003e\u003cmark\u003eother two users will still encounter 403\u003c/mark\u003e\u003c/strong\u003e\nas they are not binded to the role (for brevity, we’ll just print the status code):\u003c/p\u003e\n\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003e$ \u003c/span\u003ecurl \u003cspan class=\"nt\"\u003e-s\u003c/span\u003e \u003cspan class=\"nt\"\u003e-k\u003c/span\u003e \u003cspan class=\"nt\"\u003e-H\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;Authorization: Bearer bob-rand2\u0026#34;\u003c/span\u003e \u003cspan class=\"nv\"\u003e$API_SERVER_URL\u003c/span\u003e/api/v1/namespaces/default/pods | jq \u003cspan class=\"s1\"\u003e\u0026#39;.code\u0026#39;\u003c/span\u003e\n403\n\n\u003cspan class=\"nv\"\u003e$ \u003c/span\u003ecurl \u003cspan class=\"nt\"\u003e-s\u003c/span\u003e \u003cspan class=\"nt\"\u003e-k\u003c/span\u003e \u003cspan class=\"nt\"\u003e-H\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;Authorization: Bearer cindy-rand3\u0026#34;\u003c/span\u003e \u003cspan class=\"nv\"\u003e$API_SERVER_URL\u003c/span\u003e/api/v1/namespaces/default/pods | jq \u003cspan class=\"s1\"\u003e\u0026#39;.code\u0026#39;\u003c/span\u003e\n403\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003eTest finished, now \u003cstrong\u003e\u003cmark\u003edelete the role binding\u003c/mark\u003e\u003c/strong\u003e (but keep the role\nfor subsequent tests, so do not perform \u003ccode class=\"language-plaintext highlighter-rouge\"\u003ek delete -f role-pod-reader.yaml\u003c/code\u003e):\u003c/p\u003e\n\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003e$ \u003c/span\u003ek delete \u003cspan class=\"nt\"\u003e-f\u003c/span\u003e rolebinding-for-alice.yaml\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003eAs another test, let bind user group \u003ccode class=\"language-plaintext highlighter-rouge\"\u003e666\u003c/code\u003e to \u003ccode class=\"language-plaintext highlighter-rouge\"\u003epod-reader\u003c/code\u003e role, so both \u003ccode class=\"language-plaintext highlighter-rouge\"\u003ealice\u003c/code\u003e and \u003ccode class=\"language-plaintext highlighter-rouge\"\u003ebob\u003c/code\u003e\ncan access the resource.\u003c/p\u003e\n\n\u003cp\u003eThe role binding specification \u003cstrong\u003e\u003cmark\u003e\u003ccode\u003erolebinding-for-group.yaml\u003c/code\u003e\u003c/mark\u003e\u003c/strong\u003e:\u003c/p\u003e\n\n\u003cdiv class=\"language-yaml highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"na\"\u003eapiVersion\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003erbac.authorization.k8s.io/v1\u003c/span\u003e\n\u003cspan class=\"na\"\u003ekind\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003eRoleBinding\u003c/span\u003e\n\u003cspan class=\"na\"\u003emetadata\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e\n  \u003cspan class=\"na\"\u003ename\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003eread-pods\u003c/span\u003e\n  \u003cspan class=\"na\"\u003enamespace\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003edefault\u003c/span\u003e\n\u003cspan class=\"na\"\u003esubjects\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e\n\u003cspan class=\"pi\"\u003e-\u003c/span\u003e \u003cspan class=\"na\"\u003ekind\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003eGroup\u003c/span\u003e\n  \u003cspan class=\"na\"\u003ename\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"s\"\u003e666\u0026#34;\u003c/span\u003e\n  \u003cspan class=\"na\"\u003eapiGroup\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003erbac.authorization.k8s.io\u003c/span\u003e\n\u003cspan class=\"na\"\u003eroleRef\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e\n  \u003cspan class=\"na\"\u003ekind\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003eRole\u003c/span\u003e\n  \u003cspan class=\"na\"\u003ename\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003epod-reader\u003c/span\u003e\n  \u003cspan class=\"na\"\u003eapiGroup\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003erbac.authorization.k8s.io\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003eApply it:\u003c/p\u003e\n\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003e$ \u003c/span\u003ek apply \u003cspan class=\"nt\"\u003e-f\u003c/span\u003e rolebinding-for-group.yaml\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003eAnd test again:\u003c/p\u003e\n\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003e$ \u003c/span\u003ecurl \u003cspan class=\"nt\"\u003e-k\u003c/span\u003e \u003cspan class=\"nt\"\u003e-H\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;Authorization: Bearer alice-rand1\u0026#34;\u003c/span\u003e \u003cspan class=\"nv\"\u003e$API_SERVER_URL\u003c/span\u003e/api/v1/namespaces/default/pods\n\u003cspan class=\"o\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"s2\"\u003e\u0026#34;kind\u0026#34;\u003c/span\u003e: \u003cspan class=\"s2\"\u003e\u0026#34;PodList\u0026#34;\u003c/span\u003e,\n  \u003cspan class=\"s2\"\u003e\u0026#34;apiVersion\u0026#34;\u003c/span\u003e: \u003cspan class=\"s2\"\u003e\u0026#34;v1\u0026#34;\u003c/span\u003e,\n  \u003cspan class=\"s2\"\u003e\u0026#34;items\u0026#34;\u003c/span\u003e: \u003cspan class=\"o\"\u003e[\u003c/span\u003e ... \u003cspan class=\"o\"\u003e]\u003c/span\u003e\n\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"nv\"\u003e$ \u003c/span\u003ecurl \u003cspan class=\"nt\"\u003e-k\u003c/span\u003e \u003cspan class=\"nt\"\u003e-H\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;Authorization: Bearer bob-rand2\u0026#34;\u003c/span\u003e \u003cspan class=\"nv\"\u003e$API_SERVER_URL\u003c/span\u003e/api/v1/namespaces/default/pods\n\u003cspan class=\"o\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"s2\"\u003e\u0026#34;kind\u0026#34;\u003c/span\u003e: \u003cspan class=\"s2\"\u003e\u0026#34;PodList\u0026#34;\u003c/span\u003e,\n  \u003cspan class=\"s2\"\u003e\u0026#34;apiVersion\u0026#34;\u003c/span\u003e: \u003cspan class=\"s2\"\u003e\u0026#34;v1\u0026#34;\u003c/span\u003e,\n  \u003cspan class=\"s2\"\u003e\u0026#34;items\u0026#34;\u003c/span\u003e: \u003cspan class=\"o\"\u003e[\u003c/span\u003e ... \u003cspan class=\"o\"\u003e]\u003c/span\u003e\n\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"c\"\u003e# cindy will still get 403 as she is not in the \u0026#34;666\u0026#34; user group\u003c/span\u003e\n\u003cspan class=\"nv\"\u003e$ \u003c/span\u003ecurl \u003cspan class=\"nt\"\u003e-s\u003c/span\u003e \u003cspan class=\"nt\"\u003e-k\u003c/span\u003e \u003cspan class=\"nt\"\u003e-H\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;Authorization: Bearer cindy-rand3\u0026#34;\u003c/span\u003e \u003cspan class=\"nv\"\u003e$API_SERVER_URL\u003c/span\u003e/api/v1/namespaces/default/pods | jq \u003cspan class=\"s1\"\u003e\u0026#39;.code\u0026#39;\u003c/span\u003e\n403\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003eJust as expected!\u003c/p\u003e\n\n\u003ch3 id=\"414-programming-example-with-golang\"\u003e4.1.4 Programming example with golang\u003c/h3\u003e\n\n\u003cdiv class=\"language-go highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003epackage\u003c/span\u003e \u003cspan class=\"n\"\u003emain\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003eimport\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\n\t\u003cspan class=\"s\"\u003e\u0026#34;crypto/tls\u0026#34;\u003c/span\u003e\n\t\u003cspan class=\"s\"\u003e\u0026#34;fmt\u0026#34;\u003c/span\u003e\n\t\u003cspan class=\"s\"\u003e\u0026#34;io/ioutil\u0026#34;\u003c/span\u003e\n\t\u003cspan class=\"s\"\u003e\u0026#34;net/http\u0026#34;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003efunc\u003c/span\u003e \u003cspan class=\"n\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\t\u003cspan class=\"c\"\u003e// Ignore TLS verification (irrelevant to our case) for simple tests\u003c/span\u003e\n\t\u003cspan class=\"n\"\u003etransport\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e\u003cspan class=\"n\"\u003ehttp\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eTransport\u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"n\"\u003eTLSClientConfig\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e\u003cspan class=\"n\"\u003etls\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eConfig\u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"n\"\u003eInsecureSkipVerify\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"no\"\u003etrue\u003c/span\u003e\u003cspan class=\"p\"\u003e}}\u003c/span\u003e\n\t\u003cspan class=\"n\"\u003eclient\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e\u003cspan class=\"n\"\u003ehttp\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eClient\u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"n\"\u003eTransport\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003etransport\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\t\u003cspan class=\"n\"\u003eurl\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;https://127.0.0.1:6443/api/v1/namespaces/default/pods\u0026#34;\u003c/span\u003e\n\t\u003cspan class=\"n\"\u003euserToken\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;alice-rand1\u0026#34;\u003c/span\u003e\n\n\t\u003cspan class=\"n\"\u003ereq\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"n\"\u003ehttp\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eNewRequest\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;GET\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eurl\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"no\"\u003enil\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\t\u003cspan class=\"n\"\u003ereq\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eHeader\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eAdd\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;Authorization\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;Bearer \u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e\u003cspan class=\"n\"\u003euserToken\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\n\t\u003cspan class=\"n\"\u003eresp\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"n\"\u003eclient\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eDo\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ereq\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\t\u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"n\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"no\"\u003enil\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\t\t\u003cspan class=\"n\"\u003efmt\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ePrintln\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;HTTP request failed: \u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eerr\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\t\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\t\u003cspan class=\"k\"\u003edefer\u003c/span\u003e \u003cspan class=\"n\"\u003eresp\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eBody\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eClose\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\n\t\u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"n\"\u003ebody\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"n\"\u003eioutil\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eReadAll\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eresp\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eBody\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e \u003cspan class=\"n\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"no\"\u003enil\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\t\t\u003cspan class=\"n\"\u003efmt\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ePrintln\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;Error while reading response:\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eerr\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\t\u003cspan class=\"p\"\u003e}\u003c/span\u003e \u003cspan class=\"k\"\u003eelse\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\t\t\u003cspan class=\"n\"\u003efmt\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ePrintln\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"kt\"\u003estring\u003c/span\u003e\u003cspan class=\"p\"\u003e([]\u003c/span\u003e\u003cspan class=\"kt\"\u003ebyte\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ebody\u003c/span\u003e\u003cspan class=\"p\"\u003e)))\u003c/span\u003e\n\t\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003eWith proper role binding configured (otherwise will get 401/403 responses as above):\u003c/p\u003e\n\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003e$ \u003c/span\u003ego run static-token-client.go\n\u003cspan class=\"o\"\u003e{\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;kind\u0026#34;\u003c/span\u003e:\u003cspan class=\"s2\"\u003e\u0026#34;PodList\u0026#34;\u003c/span\u003e,\u003cspan class=\"s2\"\u003e\u0026#34;apiVersion\u0026#34;\u003c/span\u003e:\u003cspan class=\"s2\"\u003e\u0026#34;v1\u0026#34;\u003c/span\u003e,\u003cspan class=\"s2\"\u003e\u0026#34;items\u0026#34;\u003c/span\u003e:[...]\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003ch2 id=\"42-x509-certificate\"\u003e4.2 X509 certificate\u003c/h2\u003e\n\n\u003ch3 id=\"421-prepare-root-ca\"\u003e4.2.1 Prepare root CA\u003c/h3\u003e\n\n\u003cp\u003eCheck if your \u003ccode class=\"language-plaintext highlighter-rouge\"\u003ekube-apiserver\u003c/code\u003e already has \u003ccode class=\"language-plaintext highlighter-rouge\"\u003e--client-ca-file=xx\u003c/code\u003e configured, if not, you should generate\nCA files with commands in this section.\u003c/p\u003e\n\n\u003cblockquote\u003e\n  \u003cp\u003eCommands adapted from \u003ca href=\"https://github.com/kelseyhightower/kubernetes-the-hard-way/blob/master/docs/04-certificate-authority.md\"\u003eProvisioning a CA and Generating TLS Certificates\u003c/a\u003e.\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003e$ \u003c/span\u003e\u003cspan class=\"nb\"\u003ecat\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e ca-config.json \u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e\u003cspan class=\"no\"\u003eEOF\u003c/span\u003e\u003cspan class=\"sh\"\u003e\n{\n  \u0026#34;signing\u0026#34;: {\n    \u0026#34;default\u0026#34;: {\n      \u0026#34;expiry\u0026#34;: \u0026#34;8760h\u0026#34;\n    },\n    \u0026#34;profiles\u0026#34;: {\n      \u0026#34;kubernetes\u0026#34;: {\n        \u0026#34;usages\u0026#34;: [\u0026#34;signing\u0026#34;, \u0026#34;key encipherment\u0026#34;, \u0026#34;server auth\u0026#34;, \u0026#34;client auth\u0026#34;],\n        \u0026#34;expiry\u0026#34;: \u0026#34;8760h\u0026#34;\n      }\n    }\n  }\n}\n\u003c/span\u003e\u003cspan class=\"no\"\u003eEOF\n\n\u003c/span\u003e\u003cspan class=\"nv\"\u003e$ \u003c/span\u003e\u003cspan class=\"nb\"\u003ecat\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e ca-csr.json \u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e\u003cspan class=\"no\"\u003eEOF\u003c/span\u003e\u003cspan class=\"sh\"\u003e\n{\n  \u0026#34;CN\u0026#34;: \u0026#34;Kubernetes\u0026#34;,\n  \u0026#34;key\u0026#34;: {\n    \u0026#34;algo\u0026#34;: \u0026#34;rsa\u0026#34;,\n    \u0026#34;size\u0026#34;: 2048\n  },\n  \u0026#34;names\u0026#34;: [\n    {\n      \u0026#34;C\u0026#34;: \u0026#34;US\u0026#34;,\n      \u0026#34;L\u0026#34;: \u0026#34;Portland\u0026#34;,\n      \u0026#34;O\u0026#34;: \u0026#34;Kubernetes\u0026#34;,\n      \u0026#34;OU\u0026#34;: \u0026#34;CA\u0026#34;,\n      \u0026#34;ST\u0026#34;: \u0026#34;Oregon\u0026#34;\n    }\n  ]\n}\n\u003c/span\u003e\u003cspan class=\"no\"\u003eEOF\n\n\u003c/span\u003e\u003cspan class=\"nv\"\u003e$ \u003c/span\u003ecfssl gencert \u003cspan class=\"nt\"\u003e-initca\u003c/span\u003e ca-csr.json | cfssljson \u003cspan class=\"nt\"\u003e-bare\u003c/span\u003e ca\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003eThe result will be:\u003c/p\u003e\n\n\u003col\u003e\n  \u003cli\u003e\u003ccode class=\"language-plaintext highlighter-rouge\"\u003eca.pem\u003c/code\u003e: CA certificate\u003c/li\u003e\n  \u003cli\u003e\u003ccode class=\"language-plaintext highlighter-rouge\"\u003eca-key.pem\u003c/code\u003e: CA \u003cstrong\u003e\u003cmark\u003eprivate key\u003c/mark\u003e\u003c/strong\u003e\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003ch3 id=\"422-configure-kube-apiserver\"\u003e4.2.2 Configure \u003ccode class=\"language-plaintext highlighter-rouge\"\u003ekube-apiserver\u003c/code\u003e\u003c/h3\u003e\n\n\u003cp\u003eStart \u003ccode class=\"language-plaintext highlighter-rouge\"\u003ekube-apiserver\u003c/code\u003e with \u003ccode class=\"language-plaintext highlighter-rouge\"\u003e--client-ca-file=/var/lib/kubernetes/ca.pem\u003c/code\u003e and restart it.\u003c/p\u003e\n\n\u003ch3 id=\"423-issue-an-x509-client-certificate-for-user\"\u003e4.2.3 Issue an X509 client certificate for user\u003c/h3\u003e\n\n\u003cp\u003eSuppose we’d like to issue a certificate for user \u003ccode class=\"language-plaintext highlighter-rouge\"\u003edylan\u003c/code\u003e:\u003c/p\u003e\n\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003e$ \u003c/span\u003e\u003cspan class=\"nb\"\u003ecat \u003c/span\u003edylan-csr.json\n\u003cspan class=\"o\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"s2\"\u003e\u0026#34;CN\u0026#34;\u003c/span\u003e: \u003cspan class=\"s2\"\u003e\u0026#34;dylan\u0026#34;\u003c/span\u003e,\n  \u003cspan class=\"s2\"\u003e\u0026#34;key\u0026#34;\u003c/span\u003e: \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"s2\"\u003e\u0026#34;algo\u0026#34;\u003c/span\u003e: \u003cspan class=\"s2\"\u003e\u0026#34;rsa\u0026#34;\u003c/span\u003e,\n    \u003cspan class=\"s2\"\u003e\u0026#34;size\u0026#34;\u003c/span\u003e: 2048\n  \u003cspan class=\"o\"\u003e}\u003c/span\u003e,\n  \u003cspan class=\"s2\"\u003e\u0026#34;names\u0026#34;\u003c/span\u003e: \u003cspan class=\"o\"\u003e[\u003c/span\u003e\n    \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n      \u003cspan class=\"s2\"\u003e\u0026#34;C\u0026#34;\u003c/span\u003e: \u003cspan class=\"s2\"\u003e\u0026#34;US\u0026#34;\u003c/span\u003e,\n      \u003cspan class=\"s2\"\u003e\u0026#34;L\u0026#34;\u003c/span\u003e: \u003cspan class=\"s2\"\u003e\u0026#34;Portland\u0026#34;\u003c/span\u003e,\n      \u003cspan class=\"s2\"\u003e\u0026#34;O\u0026#34;\u003c/span\u003e: \u003cspan class=\"s2\"\u003e\u0026#34;usergroup1\u0026#34;\u003c/span\u003e,\n      \u003cspan class=\"s2\"\u003e\u0026#34;OU\u0026#34;\u003c/span\u003e: \u003cspan class=\"s2\"\u003e\u0026#34;Cracking Kubernetes AuthN Model\u0026#34;\u003c/span\u003e,\n      \u003cspan class=\"s2\"\u003e\u0026#34;ST\u0026#34;\u003c/span\u003e: \u003cspan class=\"s2\"\u003e\u0026#34;Oregon\u0026#34;\u003c/span\u003e\n    \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n  \u003cspan class=\"o\"\u003e]\u003c/span\u003e\n\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003eFor our simple test case, we just need to take care the following fields:\u003c/p\u003e\n\n\u003col\u003e\n  \u003cli\u003e\u003ccode class=\"language-plaintext highlighter-rouge\"\u003e\u0026#34;CN\u0026#34;\u003c/code\u003e: username\u003c/li\u003e\n  \u003cli\u003e\u003ccode class=\"language-plaintext highlighter-rouge\"\u003e\u0026#34;O\u0026#34;\u003c/code\u003e: user group (organization)\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003cp\u003eNow generate the certificate:\u003c/p\u003e\n\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003e$ \u003c/span\u003ecfssl gencert \u003cspan class=\"nt\"\u003e-ca\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003eca.pem \u003cspan class=\"nt\"\u003e-ca-key\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003eca-key.pem \u003cspan class=\"nt\"\u003e-config\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003eca-config.json \u003cspan class=\"nt\"\u003e-profile\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003ekubernetes dylan-csr.json | cfssljson \u003cspan class=\"nt\"\u003e-bare\u003c/span\u003e dylan\n\u003cspan class=\"o\"\u003e[\u003c/span\u003eINFO] generate received request\n\u003cspan class=\"o\"\u003e[\u003c/span\u003eINFO] received CSR\n\u003cspan class=\"o\"\u003e[\u003c/span\u003eINFO] generating key: rsa-2048\n\u003cspan class=\"o\"\u003e[\u003c/span\u003eINFO] encoded CSR\n\u003cspan class=\"o\"\u003e[\u003c/span\u003eINFO] signed certificate with serial number 14406...\n\n\u003cspan class=\"nv\"\u003e$ \u003c/span\u003e\u003cspan class=\"nb\"\u003els \u003c/span\u003edylan\u003cspan class=\"k\"\u003e*\u003c/span\u003e.pem\ndylan-key.pem  dylan.pem \u003cspan class=\"c\"\u003e# \u0026lt;-- private key and certificate\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003ch3 id=\"424-command-line-example-with-curl\"\u003e4.2.4 Command line example with \u003ccode class=\"language-plaintext highlighter-rouge\"\u003ecurl\u003c/code\u003e\u003c/h3\u003e\n\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003e$ \u003c/span\u003ecurl \u003cspan class=\"nt\"\u003e--key\u003c/span\u003e dylan-key.pem \u003cspan class=\"nt\"\u003e--cert\u003c/span\u003e dylan.pem \u003cspan class=\"nt\"\u003e--cacert\u003c/span\u003e ca.pem \u003cspan class=\"nv\"\u003e$API_SERVER_URL\u003c/span\u003e/api/v1/namespaces/default/pods\n\u003cspan class=\"o\"\u003e{\u003c/span\u003e\n  ...\n  \u003cspan class=\"s2\"\u003e\u0026#34;message\u0026#34;\u003c/span\u003e: \u003cspan class=\"s2\"\u003e\u0026#34;pods is forbidden: User \u003c/span\u003e\u003cspan class=\"se\"\u003e\\\u0026#34;\u003c/span\u003e\u003cspan class=\"s2\"\u003edylan\u003c/span\u003e\u003cspan class=\"se\"\u003e\\\u0026#34;\u003c/span\u003e\u003cspan class=\"s2\"\u003e cannot list resource \u003c/span\u003e\u003cspan class=\"se\"\u003e\\\u0026#34;\u003c/span\u003e\u003cspan class=\"s2\"\u003epods\u003c/span\u003e\u003cspan class=\"se\"\u003e\\\u0026#34;\u003c/span\u003e\u003cspan class=\"s2\"\u003e in API group \u003c/span\u003e\u003cspan class=\"se\"\u003e\\\u0026#34;\\\u0026#34;\u003c/span\u003e\u003cspan class=\"s2\"\u003e in the namespace \u003c/span\u003e\u003cspan class=\"se\"\u003e\\\u0026#34;\u003c/span\u003e\u003cspan class=\"s2\"\u003edefault\u003c/span\u003e\u003cspan class=\"se\"\u003e\\\u0026#34;\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;\u003c/span\u003e,\n  \u003cspan class=\"s2\"\u003e\u0026#34;reason\u0026#34;\u003c/span\u003e: \u003cspan class=\"s2\"\u003e\u0026#34;Forbidden\u0026#34;\u003c/span\u003e,\n  \u003cspan class=\"s2\"\u003e\u0026#34;code\u0026#34;\u003c/span\u003e: 403\n\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003eJust as expected, \u003ccode class=\"language-plaintext highlighter-rouge\"\u003e403\u003c/code\u003e and the message indicate that \u003ccode class=\"language-plaintext highlighter-rouge\"\u003edylan\u003c/code\u003e have successfully been\nauthenticated, but is not allowed to access the API as we haven’t been granted the permission via AuthZ.\nNow create a role binding for \u003ccode class=\"language-plaintext highlighter-rouge\"\u003edylan\u003c/code\u003e:\u003c/p\u003e\n\n\u003cdiv class=\"language-yaml highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"na\"\u003eapiVersion\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003erbac.authorization.k8s.io/v1\u003c/span\u003e\n\u003cspan class=\"na\"\u003ekind\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003eRoleBinding\u003c/span\u003e\n\u003cspan class=\"na\"\u003emetadata\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e\n  \u003cspan class=\"na\"\u003ename\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003eread-pods\u003c/span\u003e\n  \u003cspan class=\"na\"\u003enamespace\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003edefault\u003c/span\u003e\n\u003cspan class=\"na\"\u003esubjects\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e\n\u003cspan class=\"pi\"\u003e-\u003c/span\u003e \u003cspan class=\"na\"\u003ekind\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003eUser\u003c/span\u003e\n  \u003cspan class=\"na\"\u003ename\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003edylan\u003c/span\u003e\n  \u003cspan class=\"na\"\u003eapiGroup\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003erbac.authorization.k8s.io\u003c/span\u003e\n\u003cspan class=\"na\"\u003eroleRef\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e\n  \u003cspan class=\"na\"\u003ekind\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003eRole\u003c/span\u003e\n  \u003cspan class=\"na\"\u003ename\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003epod-reader\u003c/span\u003e\n  \u003cspan class=\"na\"\u003eapiGroup\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003erbac.authorization.k8s.io\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003e$ \u003c/span\u003ek apply \u003cspan class=\"nt\"\u003e-f\u003c/span\u003e rolebinding-for-dylan.yaml\nrolebinding.rbac.authorization.k8s.io/read-pods configured\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003eTest again:\u003c/p\u003e\n\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003e$ \u003c/span\u003ecurl \u003cspan class=\"nt\"\u003e--key\u003c/span\u003e dylan-key.pem \u003cspan class=\"nt\"\u003e--cert\u003c/span\u003e dylan.pem \u003cspan class=\"nt\"\u003e--cacert\u003c/span\u003e ca.pem \u003cspan class=\"nv\"\u003e$API_SERVER_URL\u003c/span\u003e/api/v1/namespaces/default/pods\n\u003cspan class=\"o\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"s2\"\u003e\u0026#34;kind\u0026#34;\u003c/span\u003e: \u003cspan class=\"s2\"\u003e\u0026#34;PodList\u0026#34;\u003c/span\u003e,\n  \u003cspan class=\"s2\"\u003e\u0026#34;apiVersion\u0026#34;\u003c/span\u003e: \u003cspan class=\"s2\"\u003e\u0026#34;v1\u0026#34;\u003c/span\u003e,\n  \u003cspan class=\"s2\"\u003e\u0026#34;items\u0026#34;\u003c/span\u003e: \u003cspan class=\"o\"\u003e[\u003c/span\u003e ... \u003cspan class=\"o\"\u003e]\u003c/span\u003e\n\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e\u003cstrong\u003e\u003cmark\u003eSuccessful!\u003c/mark\u003e\u003c/strong\u003e\u003c/p\u003e\n\n\u003ch3 id=\"425-programming-example-with-golang\"\u003e4.2.5 Programming example with golang\u003c/h3\u003e\n\n\u003cp\u003eCode snippet adapted from \u003ca href=\"https://gist.github.com/michaljemala/d6f4e01c4834bf47a9c4\"\u003emichaljemala/tls-client.go\u003c/a\u003e:\u003c/p\u003e\n\n\u003cdiv class=\"language-go highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003epackage\u003c/span\u003e \u003cspan class=\"n\"\u003emain\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003eimport\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\n\t\u003cspan class=\"s\"\u003e\u0026#34;crypto/tls\u0026#34;\u003c/span\u003e\n\t\u003cspan class=\"s\"\u003e\u0026#34;crypto/x509\u0026#34;\u003c/span\u003e\n\t\u003cspan class=\"s\"\u003e\u0026#34;flag\u0026#34;\u003c/span\u003e\n\t\u003cspan class=\"s\"\u003e\u0026#34;io/ioutil\u0026#34;\u003c/span\u003e\n\t\u003cspan class=\"s\"\u003e\u0026#34;log\u0026#34;\u003c/span\u003e\n\t\u003cspan class=\"s\"\u003e\u0026#34;net/http\u0026#34;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003evar\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\n\t\u003cspan class=\"n\"\u003ecertFile\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eflag\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eString\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;cert\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;someCertFile\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;A PEM eoncoded certificate file.\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\t\u003cspan class=\"n\"\u003ekeyFile\u003c/span\u003e  \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eflag\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eString\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;key\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;someKeyFile\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;A PEM encoded private key file.\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\t\u003cspan class=\"n\"\u003ecaFile\u003c/span\u003e   \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eflag\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eString\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;CA\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;someCertCAFile\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;A PEM eoncoded CA\u0026#39;s certificate file.\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003efunc\u003c/span\u003e \u003cspan class=\"n\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\t\u003cspan class=\"n\"\u003eflag\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eParse\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\n\t\u003cspan class=\"c\"\u003e// Load client cert\u003c/span\u003e\n\t\u003cspan class=\"n\"\u003ecert\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"n\"\u003etls\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eLoadX509KeyPair\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003ecertFile\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003ekeyFile\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\t\u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"n\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"no\"\u003enil\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\t\t\u003cspan class=\"n\"\u003elog\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eFatal\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eerr\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\t\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\t\u003cspan class=\"c\"\u003e// Load CA cert\u003c/span\u003e\n\t\u003cspan class=\"n\"\u003ecaCert\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"n\"\u003eioutil\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eReadFile\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003ecaFile\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\t\u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"n\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"no\"\u003enil\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\t\t\u003cspan class=\"n\"\u003elog\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eFatal\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eerr\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\t\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\t\u003cspan class=\"n\"\u003ecaCertPool\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"n\"\u003ex509\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eNewCertPool\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\t\u003cspan class=\"n\"\u003ecaCertPool\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eAppendCertsFromPEM\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ecaCert\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\n\t\u003cspan class=\"c\"\u003e// Setup HTTPS client\u003c/span\u003e\n\t\u003cspan class=\"n\"\u003etlsConfig\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e\u003cspan class=\"n\"\u003etls\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eConfig\u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\t\t\u003cspan class=\"n\"\u003eCertificates\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"p\"\u003e[]\u003c/span\u003e\u003cspan class=\"n\"\u003etls\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eCertificate\u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"n\"\u003ecert\u003c/span\u003e\u003cspan class=\"p\"\u003e},\u003c/span\u003e\n\t\t\u003cspan class=\"n\"\u003eRootCAs\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e      \u003cspan class=\"n\"\u003ecaCertPool\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\t\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\t\u003cspan class=\"n\"\u003etlsConfig\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eBuildNameToCertificate\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\t\u003cspan class=\"n\"\u003etransport\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e\u003cspan class=\"n\"\u003ehttp\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eTransport\u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"n\"\u003eTLSClientConfig\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003etlsConfig\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\t\u003cspan class=\"n\"\u003eclient\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e\u003cspan class=\"n\"\u003ehttp\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eClient\u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"n\"\u003eTransport\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003etransport\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\t\u003cspan class=\"c\"\u003e// Do GET something\u003c/span\u003e\n\t\u003cspan class=\"n\"\u003eresp\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"n\"\u003eclient\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eGet\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;https://127.0.0.1:6443/api/v1/namespaces/default/pods\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\t\u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"n\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"no\"\u003enil\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\t\t\u003cspan class=\"n\"\u003elog\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eFatal\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eerr\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\t\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\t\u003cspan class=\"k\"\u003edefer\u003c/span\u003e \u003cspan class=\"n\"\u003eresp\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eBody\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eClose\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\n\t\u003cspan class=\"c\"\u003e// Dump response\u003c/span\u003e\n\t\u003cspan class=\"n\"\u003edata\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"n\"\u003eioutil\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eReadAll\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eresp\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eBody\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\t\u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"n\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"no\"\u003enil\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\t\t\u003cspan class=\"n\"\u003elog\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eFatal\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eerr\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\t\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\t\u003cspan class=\"n\"\u003elog\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ePrintln\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"kt\"\u003estring\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003edata\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003eWith proper role binding configured:\u003c/p\u003e\n\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003e$ \u003c/span\u003ego run x509-client.go \u003cspan class=\"nt\"\u003e-cert\u003c/span\u003e dylan.pem \u003cspan class=\"nt\"\u003e-key\u003c/span\u003e dylan-key.pem \u003cspan class=\"nt\"\u003e-CA\u003c/span\u003e ca.pem\n\u003cspan class=\"o\"\u003e{\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;kind\u0026#34;\u003c/span\u003e:\u003cspan class=\"s2\"\u003e\u0026#34;PodList\u0026#34;\u003c/span\u003e,\u003cspan class=\"s2\"\u003e\u0026#34;apiVersion\u0026#34;\u003c/span\u003e:\u003cspan class=\"s2\"\u003e\u0026#34;v1\u0026#34;\u003c/span\u003e,\u003cspan class=\"s2\"\u003e\u0026#34;items\u0026#34;\u003c/span\u003e:[...]\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003ch2 id=\"43-serviceaccount\"\u003e4.3 ServiceAccount\u003c/h2\u003e\n\n\u003cp\u003eFor \u003ccode class=\"language-plaintext highlighter-rouge\"\u003e\u0026lt; v1.24.0\u003c/code\u003e, a secret/token is automatically created for each serviceaccount:\u003c/p\u003e\n\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003e$ \u003c/span\u003ek create sa my-sa\nserviceaccount/my-sa created\n\n\u003cspan class=\"nv\"\u003e$ \u003c/span\u003ek get sa\nNAME      SECRETS   AGE\nmy-sa     1         2s  \u003cspan class=\"c\"\u003e# \u0026lt;-- A secret is created for this SA\u003c/span\u003e\n\n\u003cspan class=\"nv\"\u003e$ \u003c/span\u003ek get sa my-sa \u003cspan class=\"nt\"\u003e-o\u003c/span\u003e yaml\napiVersion: v1\nkind: ServiceAccount\nmetadata:\n  creationTimestamp: \u003cspan class=\"s2\"\u003e\u0026#34;2022-06-08T12:59:15Z\u0026#34;\u003c/span\u003e\n  name: my-sa\n  namespace: default\n  resourceVersion: \u003cspan class=\"s2\"\u003e\u0026#34;7682925\u0026#34;\u003c/span\u003e\n  uid: a0a2738e-5ad8-4f07-8588-10c82caac02e\nsecrets:\n- name: my-sa-token-5dx8g \u003cspan class=\"c\"\u003e# \u0026lt;-- A secret is created for this SA\u003c/span\u003e\n\n\u003cspan class=\"nv\"\u003e$ \u003c/span\u003ek get secrets my-sa-token-5dx8g \u003cspan class=\"nt\"\u003e-o\u003c/span\u003e yaml\napiVersion: v1\ndata:\n  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FUR...FURS0tLS0tCg\u003cspan class=\"o\"\u003e==\u003c/span\u003e\n  namespace: \u003cspan class=\"nv\"\u003eZGVmYXVsdA\u003c/span\u003e\u003cspan class=\"o\"\u003e==\u003c/span\u003e\n  token: ZXlKaGJHY2lPaUpT...UnYxbm9wbjAtUQ\u003cspan class=\"o\"\u003e==\u003c/span\u003e               \u003cspan class=\"c\"\u003e# \u0026lt;--- The token in the secret\u003c/span\u003e\nkind: Secret\n\u003cspan class=\"nb\"\u003etype\u003c/span\u003e: kubernetes.io/service-account-token\n\n\u003cspan class=\"nv\"\u003e$ \u003c/span\u003ek get secrets my-sa-token-5dx8g \u003cspan class=\"nt\"\u003e-o\u003c/span\u003e \u003cspan class=\"nv\"\u003ejsonpath\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;{.data.token}\u0026#39;\u003c/span\u003e | \u003cspan class=\"nb\"\u003ebase64\u003c/span\u003e \u003cspan class=\"nt\"\u003e-d\u003c/span\u003e\neyJhb...ZYT-VTp-v-rx8Rv1nopn0-Q\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003ePut this token into the \u003cmark\u003e\u003ccode\u003eAuthorization: Bearer {token}\u003c/code\u003e\u003c/mark\u003e and send the request.\u003c/p\u003e\n\n\u003cp\u003eOr, you could also use a kubeconfig + token file, such as to configure Cilium:\u003c/p\u003e\n\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003e$ \u003c/span\u003ecilium-agent \u003cspan class=\"nt\"\u003e--k8s-kubeconfig-path\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e/etc/cilium/cilium.kubeconfig ...\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003ewhere,\u003c/p\u003e\n\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003e$ \u003c/span\u003e\u003cspan class=\"nb\"\u003ecat\u003c/span\u003e /etc/cilium/cilium.kubeconfig\napiVersion: v1\nclusters:\n- cluster:\n    certificate-authority: /etc/cilium/ca.crt\n    server: https://\u0026lt;addr\u0026gt;:443\n  name: default-cluster\ncontexts:\n- context:\n    cluster: default-cluster\n    user: default-user\n  name: default-context\ncurrent-context: default-context\nkind: Config\npreferences: \u003cspan class=\"o\"\u003e{}\u003c/span\u003e\n\u003cspan class=\"nb\"\u003eusers\u003c/span\u003e:\n- name: default-user\n  user:\n    tokenFile: /etc/cilium/cilium.token\n\n\u003cspan class=\"nv\"\u003e$ \u003c/span\u003e\u003cspan class=\"nb\"\u003ecat\u003c/span\u003e /etc/cilium/cilium.token\neyJhbG...xuOMjQ\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003eAn excellent example has been provided in \n\u003ca href=\"https://learnk8s.io/kubernetes-custom-authentication\"\u003eImplementing a custom Kubernetes authentication method\u003c/a\u003e [4].\u003c/p\u003e\n\n\u003cp\u003eFor \u003ccode class=\"language-plaintext highlighter-rouge\"\u003e\u0026gt;= v1.24.0\u003c/code\u003e:\u003c/p\u003e\n\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003e$ \u003c/span\u003ek create sa my-sa\nserviceaccount/my-sa created\n\n\u003cspan class=\"nv\"\u003e$ \u003c/span\u003ek get sa\nNAME      SECRETS   AGE\nmy-sa     0         2s    \u003cspan class=\"c\"\u003e# \u0026lt;-- No secrets created for this SA\u003c/span\u003e\n\n\u003cspan class=\"nv\"\u003e$ \u003c/span\u003ek get sa my-sa \u003cspan class=\"nt\"\u003e-o\u003c/span\u003e yaml\napiVersion: v1\nkind: ServiceAccount\nmetadata:\n  creationTimestamp: \u003cspan class=\"s2\"\u003e\u0026#34;2022-06-08T13:48:02Z\u0026#34;\u003c/span\u003e\n  name: my-sa\n  namespace: default\n  resourceVersion: \u003cspan class=\"s2\"\u003e\u0026#34;7686160\u0026#34;\u003c/span\u003e\n  uid: baa8efd9-6219-46d3-9efd-87d6509dfd32\n\n\u003cspan class=\"nv\"\u003e$ \u003c/span\u003ek create token my-sa   \u003cspan class=\"c\"\u003e# Create a token for serviceaccount \u0026#39;my-sa\u0026#39; by our own\u003c/span\u003e\neyJhbGciO...yJbkfZQJt7Q  \u003cspan class=\"c\"\u003e# Note that this token is not base64 encoded\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003ch2 id=\"44-ldap-or-oidc\"\u003e4.4 LDAP or OIDC\u003c/h2\u003e\n\n\u003cp\u003eAn in-depth example has been provided in \n\u003ca href=\"https://learnk8s.io/kubernetes-custom-authentication\"\u003eImplementing a custom Kubernetes authentication method\u003c/a\u003e [5].\u003c/p\u003e\n\n\u003ch1 id=\"5-discussions\"\u003e5 Discussions\u003c/h1\u003e\n\n\u003cp\u003eSome in-depth disccussions.\u003c/p\u003e\n\n\u003ch2 id=\"51-more-authn-strategies\"\u003e5.1 More AuthN strategies\u003c/h2\u003e\n\n\u003cp\u003eKubernetes supports the following strategies that we haven’t mentioned or detailed in the previous sections:\u003c/p\u003e\n\n\u003col\u003e\n  \u003cli\u003e\n    \u003cp\u003eRequest header\u003c/p\u003e\n\n    \u003cp\u003eOption:\u003c/p\u003e\n\n    \u003cul\u003e\n      \u003cli\u003e\u003ccode class=\"language-plaintext highlighter-rouge\"\u003e--requestheader-client-ca-file=\u003c/code\u003e on \u003ccode class=\"language-plaintext highlighter-rouge\"\u003ekube-apiserver\u003c/code\u003e\u003c/li\u003e\n    \u003c/ul\u003e\n  \u003c/li\u003e\n  \u003cli\u003e\n    \u003cp\u003eBootstrap Tokens (v1.18+)\u003c/p\u003e\n\n    \u003cp\u003eTo allow for streamlined bootstrapping for new clusters.\n These tokens are \u003cstrong\u003e\u003cmark\u003estored as Secrets\u003c/mark\u003e\u003c/strong\u003e in the kube-system\n namespace, where they can be dynamically managed and created.\u003c/p\u003e\n\n    \u003cp\u003eOption:\u003c/p\u003e\n\n    \u003cul\u003e\n      \u003cli\u003e\u003ccode class=\"language-plaintext highlighter-rouge\"\u003e--enable-bootstrap-token-auth\u003c/code\u003e on the \u003ccode class=\"language-plaintext highlighter-rouge\"\u003ekube-apiserver\u003c/code\u003e;\u003c/li\u003e\n      \u003cli\u003e\u003ccode class=\"language-plaintext highlighter-rouge\"\u003e--controllers=\u0026lt;others\u0026gt;,tokerncleaner\u003c/code\u003e on the \u003ccode class=\"language-plaintext highlighter-rouge\"\u003ekube-controller-manager\u003c/code\u003e: enable the TokenCleaner controller.\u003c/li\u003e\n    \u003c/ul\u003e\n\n    \u003cp\u003eThe authenticator authenticates as \u003ccode class=\"language-plaintext highlighter-rouge\"\u003esystem:bootstrap:\u0026lt;Token ID\u0026gt;\u003c/code\u003e. It is included\n in the \u003ccode class=\"language-plaintext highlighter-rouge\"\u003esystem:bootstrappers\u003c/code\u003e group.\u003c/p\u003e\n  \u003c/li\u003e\n  \u003cli\u003e\n    \u003cp\u003eOpenID Connect Tokens\u003c/p\u003e\n\n    \u003cp\u003eOpenID Connect is a flavor of OAuth2 supported by some OAuth2 providers,\n e.g. Azure Active Directory (AD), Salesforce, and Google. The protocol’s\n \u003cstrong\u003e\u003cmark\u003emain extension to OAuth2\u003c/mark\u003e\u003c/strong\u003e is additionally returned a JWT (JSON Web Token) format\n called \u003cstrong\u003e\u003cmark\u003eID Token\u003c/mark\u003e\u003c/strong\u003e, which includes famous such as a user’s email, signed by the server.\u003c/p\u003e\n\n    \u003cp\u003eTo identify the user, the authenticator uses the \u003cstrong\u003e\u003cmark\u003e\u003ccode\u003eid_token\u003c/code\u003e\u003c/mark\u003e\u003c/strong\u003e\n (instead of the \u003cstrong\u003e\u003cmark\u003e\u003ccode\u003eaccess_token\u003c/code\u003e\u003c/mark\u003e\u003c/strong\u003e) as a bearer token.\u003c/p\u003e\n\n    \u003cp\u003eOption:\u003c/p\u003e\n\n    \u003cul\u003e\n      \u003cli\u003e\u003ccode class=\"language-plaintext highlighter-rouge\"\u003e--oidc-*\u003c/code\u003e \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eon kube-apiserver\u003c/code\u003e\u003c/li\u003e\n    \u003c/ul\u003e\n\n    \u003cp\u003eUse the token: \u003ccode class=\"language-plaintext highlighter-rouge\"\u003ekubectl --token=eyJhb...x01_yD35-rw get nodes\u003c/code\u003e\u003c/p\u003e\n  \u003c/li\u003e\n  \u003cli\u003e\n    \u003cp\u003e\u003ca href=\"https://kubernetes.io/docs/reference/access-authn-authz/authentication/#webhook-token-authentication\"\u003eWebhook Token Authentication\u003c/a\u003e\u003c/p\u003e\n\n    \u003cp\u003eWebhook authentication is \u003cstrong\u003e\u003cmark\u003ea hook for verifying bearer tokens\u003c/mark\u003e\u003c/strong\u003e.\u003c/p\u003e\n\n    \u003cp\u003eOption:\u003c/p\u003e\n\n    \u003cul\u003e\n      \u003cli\u003e\u003ccode class=\"language-plaintext highlighter-rouge\"\u003e--authentication-token-webhook-config-file\u003c/code\u003e a file describing how to access the remote webhook service.\u003c/li\u003e\n      \u003cli\u003e\u003ccode class=\"language-plaintext highlighter-rouge\"\u003e--authentication-token-webhook-cache-ttl\u003c/code\u003e how long to cache authentication decisions. Defaults to two minutes.\u003c/li\u003e\n      \u003cli\u003e\u003ccode class=\"language-plaintext highlighter-rouge\"\u003e--authentication-token-webhook-version=v1\u003c/code\u003e e.g. \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eauthentication.k8s.io/v1\u003c/code\u003e \u003cstrong\u003e\u003cmark\u003e\u003ccode\u003eTokenReview\u003c/code\u003e\u003c/mark\u003e\u003c/strong\u003e objects to send/receive information from the webhook.\u003c/li\u003e\n    \u003c/ul\u003e\n\n    \u003cp\u003eWhen a client attempts to authenticate with the \u003ccode class=\"language-plaintext highlighter-rouge\"\u003ekube-apiserver\u003c/code\u003e using a bearer\n token, the authentication \u003cstrong\u003e\u003cmark\u003ewebhook POSTs a JSON-serialized TokenReview object\u003c/mark\u003e\u003c/strong\u003e\n containing the token \u003cstrong\u003e\u003cmark\u003eto the remote service\u003c/mark\u003e\u003c/strong\u003e.\u003c/p\u003e\n  \u003c/li\u003e\n  \u003cli\u003e\n    \u003cp\u003e\u003ca href=\"https://kubernetes.io/docs/reference/access-authn-authz/authentication/#authenticating-proxy\"\u003eAuthenticating proxy\u003c/a\u003e\u003c/p\u003e\n\n    \u003cp\u003eOption:\u003c/p\u003e\n\n    \u003cul\u003e\n      \u003cli\u003e\u003ccode class=\"language-plaintext highlighter-rouge\"\u003e--proxy-client-cert-file\u003c/code\u003e\u003c/li\u003e\n      \u003cli\u003e\u003ccode class=\"language-plaintext highlighter-rouge\"\u003e--proxy-client-key-file\u003c/code\u003e\u003c/li\u003e\n    \u003c/ul\u003e\n\n    \u003cp\u003eIntegrations with other authentication protocols (LDAP, SAML, Kerberos,\n alternate x509 schemes, etc) can be accomplished using an authenticating proxy\n or the authentication webhook.\u003c/p\u003e\n  \u003c/li\u003e\n\u003c/ol\u003e\n\n\u003cp\u003eYou can \u003cstrong\u003e\u003cmark\u003eenable multiple authentication methods\u003c/mark\u003e\u003c/strong\u003e at once. You should\n\u003cstrong\u003e\u003cmark\u003euse at least two methods\u003c/mark\u003e\u003c/strong\u003e:\u003c/p\u003e\n\n\u003col\u003e\n  \u003cli\u003e\u003cstrong\u003e\u003cmark\u003eService account tokens\u003c/mark\u003e\u003c/strong\u003e for service accounts\u003c/li\u003e\n  \u003cli\u003eat least one other method for \u003cstrong\u003e\u003cmark\u003euser authentication\u003c/mark\u003e\u003c/strong\u003e.\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003cp\u003eWhen multiple authenticator modules are enabled, the first module to\nsuccessfully authenticate the request short-circuits evaluation.\nThe \u003cstrong\u003e\u003cmark\u003ekube-apiserver does not guarantee the order authenticators run in\u003c/mark\u003e\u003c/strong\u003e.\u003c/p\u003e\n\n\u003cp\u003eThe \u003cstrong\u003e\u003cmark\u003e\u003ccode\u003esystem:authenticated\u003c/code\u003e\u003c/mark\u003e\u003c/strong\u003e group is included in the list of groups for all authenticated users.\u003c/p\u003e\n\n\u003ch2 id=\"52-authn-authz-and-the-admission-control-stage\"\u003e5.2 AuthN, AuthZ and the admission control stage\u003c/h2\u003e\n\n\u003cp\u003eIn fact, there is also an admission control stage in Kubernetes that can be\nused to verify client requests before persistenting the object to backend\nstorage (etcd):\u003c/p\u003e\n\n\u003cp align=\"center\"\u003e\u003cimg src=\"/assets/img/cracking-k8s-authn/access-control-overview.svg\" width=\"80%\" height=\"80%\"/\u003e\u003c/p\u003e\n\u003cp align=\"center\"\u003eFig 6-1. AuthN, AuthZ and admission control when processing a client request [3]\u003c/p\u003e\n\n\u003cp\u003eSee [3] for more information.\u003c/p\u003e\n\n\u003ch2 id=\"53-manually-create-serviceaccount\"\u003e5.3 Manually create \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eServiceAccount\u003c/code\u003e\u003c/h2\u003e\n\n\u003cp\u003eService account bearer tokens are \u003cstrong\u003e\u003cmark\u003eperfectly valid to use outside the cluster\u003c/mark\u003e\u003c/strong\u003e\nand for apps that wish to talk to the Kubernetes API.\u003c/p\u003e\n\n\u003cp\u003eCommands to manually create and inspect a service account:\u003c/p\u003e\n\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003e$ \u003c/span\u003ekubectl create serviceaccount jenkins\nserviceaccount \u003cspan class=\"s2\"\u003e\u0026#34;jenkins\u0026#34;\u003c/span\u003e created\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003eCheck \u003cstrong\u003e\u003cmark\u003ethe associated secret\u003c/mark\u003e\u003c/strong\u003e:\u003c/p\u003e\n\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003e$ \u003c/span\u003ekubectl get serviceaccounts jenkins \u003cspan class=\"nt\"\u003e-o\u003c/span\u003e yaml\napiVersion: v1\nkind: ServiceAccount\n...\nsecrets:\n- name: jenkins-token-1yvwg  \u003cspan class=\"c\"\u003e# \u0026lt;---- the associated secret\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003eThe created secret holds the public CA of the \u003ccode class=\"language-plaintext highlighter-rouge\"\u003ekube-apiserver\u003c/code\u003e and a signed JSON Web Token (JWT).\u003c/p\u003e\n\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003e$ \u003c/span\u003ekubectl get secret jenkins-token-1yvwg \u003cspan class=\"nt\"\u003e-o\u003c/span\u003e yaml\napiVersion: v1\nkind: Secret\n\u003cspan class=\"nb\"\u003etype\u003c/span\u003e: kubernetes.io/service-account-token\ndata:\n  ca.crt: xxx               \u003cspan class=\"c\"\u003e# \u0026lt;---- APISERVER\u0026#39;S CA BASE64 ENCODED\u003c/span\u003e\n  namespace: \u003cspan class=\"nv\"\u003eZGVmYXVsdA\u003c/span\u003e\u003cspan class=\"o\"\u003e==\u003c/span\u003e\n  token: xxx                \u003cspan class=\"c\"\u003e# \u0026lt;---- BEARER TOKEN BASE64 ENCODED\u003c/span\u003e\n...\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003eThe signed JWT can be used as a bearer token to authenticate as the given\nservice account. Decode the base64 encoded token into a bearer token:\u003c/p\u003e\n\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003e$ \u003c/span\u003ek get secrets jenkins-token-1yvwg \u003cspan class=\"nt\"\u003e-o\u003c/span\u003e \u003cspan class=\"nv\"\u003ejsonpath\u003c/span\u003e\u003cspan class=\"o\"\u003e={\u003c/span\u003e.data.token\u003cspan class=\"o\"\u003e}\u003c/span\u003e | \u003cspan class=\"nb\"\u003ebase64\u003c/span\u003e \u003cspan class=\"nt\"\u003e-d\u003c/span\u003e\neyJhbGciOiJSUzI1NiIsImt...MvMzBl37sNzeA8w\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003eSee above for how the token is included in a request. Normally\nthese secrets are \u003cstrong\u003e\u003cmark\u003emounted into pods\u003c/mark\u003e\u003c/strong\u003e for in-cluster access to\n\u003ccode class=\"language-plaintext highlighter-rouge\"\u003ekube-apiserver\u003c/code\u003e, but can be used from outside the cluster as well.\u003c/p\u003e\n\n\u003ch2 id=\"54-extract-user-information-from-client-credentials\"\u003e5.4 Extract user information from client credentials\u003c/h2\u003e\n\n\u003cp\u003eAs HTTP requests are made to the \u003ccode class=\"language-plaintext highlighter-rouge\"\u003ekube-apiserver\u003c/code\u003e, plugins attempt to associate the following\nattributes with the request [1]:\u003c/p\u003e\n\n\u003cul\u003e\n  \u003cli\u003e\u003cstrong\u003e\u003cmark\u003e\u003ccode\u003eUsername\u003c/code\u003e\u003c/mark\u003e\u003c/strong\u003e: a string, e.g. \u003ccode class=\"language-plaintext highlighter-rouge\"\u003ekube-admin\u003c/code\u003e, \u003ccode class=\"language-plaintext highlighter-rouge\"\u003ejane@example.com\u003c/code\u003e.\u003c/li\u003e\n  \u003cli\u003e\u003cstrong\u003e\u003cmark\u003e\u003ccode\u003eUID\u003c/code\u003e\u003c/mark\u003e\u003c/strong\u003e: a string, attempts to be \u003cstrong\u003e\u003cmark\u003emore consistent and unique than username\u003c/mark\u003e\u003c/strong\u003e.\u003c/li\u003e\n  \u003cli\u003e\u003cstrong\u003e\u003cmark\u003e\u003ccode\u003eGroups\u003c/code\u003e\u003c/mark\u003e\u003c/strong\u003e: e.g. \u003ccode\u003esystem:masters\u003c/code\u003e, \u003ccode\u003edevops-team\u003c/code\u003e.\u003c/li\u003e\n  \u003cli\u003eExtra fields: a map of \u003ccode class=\"language-plaintext highlighter-rouge\"\u003estring -\u0026gt; string list\u003c/code\u003e which holds additional information authorizers may find useful.\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cdiv class=\"language-go highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"c\"\u003e// https://github.com/kubernetes/kubernetes/blob/v1.23.1/staging/src/k8s.io/apiserver/pkg/authentication/user/user.go#L20\u003c/span\u003e\n\n\u003cspan class=\"c\"\u003e// Info describes a user that has been authenticated to the system.\u003c/span\u003e\n\u003cspan class=\"k\"\u003etype\u003c/span\u003e \u003cspan class=\"n\"\u003eInfo\u003c/span\u003e \u003cspan class=\"k\"\u003einterface\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eGetName\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"kt\"\u003estring\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eGetUID\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"kt\"\u003estring\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eGetGroups\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e[]\u003c/span\u003e\u003cspan class=\"kt\"\u003estring\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eGetExtra\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"k\"\u003emap\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"kt\"\u003estring\u003c/span\u003e\u003cspan class=\"p\"\u003e][]\u003c/span\u003e\u003cspan class=\"kt\"\u003estring\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003eAll values are opaque to the authentication system and only hold significance when interpreted by an\n\u003ca href=\"https://kubernetes.io/docs/reference/access-authn-authz/authorization/\"\u003eauthorizer\u003c/a\u003e.\u003c/p\u003e\n\n\u003ch2 id=\"55-user-impersonate\"\u003e5.5 User impersonate\u003c/h2\u003e\n\n\u003cp\u003eAnother topic related to AuthN/AuthZ but hasn’t been discussed is user impersonate [1].\u003c/p\u003e\n\n\u003cp\u003eAn example of the impersonation headers used when impersonating a user with groups:\u003c/p\u003e\n\n\u003cdiv class=\"language-plaintext highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003eImpersonate-User: jane.doe@example.com\nImpersonate-Group: developers\nImpersonate-Group: admins\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003eAn example of the impersonation headers used when impersonating a user with a UID and extra fields:\u003c/p\u003e\n\n\u003cdiv class=\"language-plaintext highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003eImpersonate-User: jane.doe@example.com\nImpersonate-Extra-dn: cn=jane,ou=engineers,dc=example,dc=com\nImpersonate-Extra-acme.com%2Fproject: some-project\nImpersonate-Extra-scopes: view\nImpersonate-Extra-scopes: development\nImpersonate-Uid: 06f6ce97-e2c5-4ab8-7ba5-7654dd08d52b\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003eUsing CLI:\u003c/p\u003e\n\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003e$ \u003c/span\u003ekubectl drain mynode \u003cspan class=\"nt\"\u003e--as\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003esuperman \u003cspan class=\"nt\"\u003e--as-group\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003esystem:masters\nnode/mynode cordoned\nnode/mynode drained\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003ch1 id=\"6-conclusion\"\u003e6 Conclusion\u003c/h1\u003e\n\n\u003cp\u003eThis post digs into the Kubernetes AuthN module, we try to understand it by\ndesign one by ourself.\u003c/p\u003e\n\n\u003cp\u003eHope that after reading through this post, readers have had a deeper understanding on\n\u003cstrong\u003e\u003cmark\u003ehow the Kubernetes AuthN module works\u003c/mark\u003e\u003c/strong\u003e as well as how to\nconfigure, use and manage it properly, either as administrators or developers.\u003c/p\u003e\n\n\u003ch1 id=\"references\"\u003eReferences\u003c/h1\u003e\n\n\u003col\u003e\n  \u003cli\u003e\u003ca href=\"https://kubernetes.io/docs/reference/access-authn-authz/authentication/\"\u003eAuthentication Overview\u003c/a\u003e, Kubernetes Doc\u003c/li\u003e\n  \u003cli\u003e\u003ca href=\"https://kubernetes.io/docs/reference/access-authn-authz/authorization/\"\u003eAuthorization Overview\u003c/a\u003e, Kubernetes Doc\u003c/li\u003e\n  \u003cli\u003e\u003ca href=\"https://kubernetes.io/docs/concepts/security/controlling-access/\"\u003eConcept/Security: Controlling Access to the Kubernetes API\u003c/a\u003e, Kubernetes Doc\u003c/li\u003e\n  \u003cli\u003e\u003ca href=\"https://learnk8s.io/kubernetes-custom-authentication\"\u003eImplementing a custom Kubernetes authentication method\u003c/a\u003e, learnk8s.io, 2020\u003c/li\u003e\n  \u003cli\u003e\u003ca href=\"https://learnk8s.io/kubernetes-custom-authentication\"\u003eImplementing a custom Kubernetes authentication method\u003c/a\u003e, learnk8s.io, 2020\u003c/li\u003e\n  \u003cli\u003e\u003ca href=\"https://kubernetes.io/docs/reference/access-authn-authz/rbac/\"\u003eUsing RBAC Authorization\u003c/a\u003e, Kubernetes Doc\u003c/li\u003e\n\u003c/ol\u003e\n\n\n  \u003c!-- POST NAVIGATION --\u003e\n  \u003cdiv class=\"postNav clearfix\"\u003e\n     \n      \u003ca class=\"prev\" href=\"/blog/linux-net-stack-zh/\"\u003e\u003cspan\u003e« Linux 网络栈原理、监控与调优：前言（2022）\u003c/span\u003e\n      \n    \u003c/a\u003e\n      \n      \n      \u003ca class=\"next\" href=\"/blog/linux-tracing-basis-zh/\"\u003e\u003cspan\u003eLinux tracing/profiling 基础：符号表、调用栈、perf/bpftrace 示例等（2022） »\u003c/span\u003e\n       \n      \u003c/a\u003e\n     \n  \u003c/div\u003e\n\u003c/div\u003e",
  "Date": "2022-07-14T00:00:00Z",
  "Author": "Arthur Chiao"
}