{
  "Source": "arthurchiao.art",
  "Title": "Cilium: Handle Conntrack (CT) related BPF Maps on Agent Restart",
  "Link": "https://arthurchiao.art/blog/cilium-handle-conntrack-related-bpf-maps-on-agent-restart/",
  "Content": "\u003cdiv class=\"post\"\u003e\n  \n  \u003ch1 class=\"postTitle\"\u003eCilium: Handle Conntrack (CT) related BPF Maps on Agent Restart\u003c/h1\u003e\n  \u003cp class=\"meta\"\u003ePublished at 2021-06-06 | Last Update 2023-02-20\u003c/p\u003e\n  \n  \u003cp\u003eThis post digs into the \u003cstrong\u003e\u003cmark\u003ehandling of CT (conntrack) related BPF\nmaps\u003c/mark\u003e\u003c/strong\u003e during agent restart.  Code based on Cilium \u003ccode class=\"language-plaintext highlighter-rouge\"\u003e1.9.5\u003c/code\u003e.\u003c/p\u003e\n\n\u003cp align=\"center\"\u003e\u003cimg src=\"/assets/img/cilium-bpf-maps-handling/bpf-maps.png\" width=\"60%\" height=\"60%\"/\u003e\u003c/p\u003e\n\n\u003cp\u003eIf you’re not familiar with CT, refer to\n\u003ca href=\"/blog/conntrack-design-and-implementation/\"\u003eConnection Tracking (conntrack): Design and Implementation Inside Linux Kernel\u003c/a\u003e\n[5] for some basic concepts.\u003c/p\u003e\n\n\u003cp\u003eThis post is included in the\n\u003ca href=\"/blog/cilium-code-series/\"\u003eCilium Code Walk Through Series\u003c/a\u003e.\u003c/p\u003e\n\n\u003chr/\u003e\n\n\u003cul id=\"markdown-toc\"\u003e\n  \u003cli\u003e\u003ca href=\"#1-prerequisites-and-background-knowledge\" id=\"markdown-toc-1-prerequisites-and-background-knowledge\"\u003e1 Prerequisites and background knowledge\u003c/a\u003e    \u003cul\u003e\n      \u003cli\u003e\u003ca href=\"#11-bpf-maps\" id=\"markdown-toc-11-bpf-maps\"\u003e1.1 BPF maps\u003c/a\u003e\u003c/li\u003e\n      \u003cli\u003e\u003ca href=\"#12-bpf-maps-in-cilium\" id=\"markdown-toc-12-bpf-maps-in-cilium\"\u003e1.2 BPF maps in Cilium\u003c/a\u003e\u003c/li\u003e\n      \u003cli\u003e\u003ca href=\"#13-inspect-ct-entries-in-cilium\" id=\"markdown-toc-13-inspect-ct-entries-in-cilium\"\u003e1.3 Inspect CT entries in Cilium\u003c/a\u003e\u003c/li\u003e\n    \u003c/ul\u003e\n  \u003c/li\u003e\n  \u003cli\u003e\u003ca href=\"#2-functionality-test-adjust-ct-table-map-size\" id=\"markdown-toc-2-functionality-test-adjust-ct-table-map-size\"\u003e2 Functionality test: adjust CT table (map) size\u003c/a\u003e    \u003cul\u003e\n      \u003cli\u003e\u003ca href=\"#21-concern-will-existing-connections-be-interrupted\" id=\"markdown-toc-21-concern-will-existing-connections-be-interrupted\"\u003e2.1 Concern: will existing connections be interrupted?\u003c/a\u003e\u003c/li\u003e\n      \u003cli\u003e\u003ca href=\"#22-test-case-1-inbound-connection\" id=\"markdown-toc-22-test-case-1-inbound-connection\"\u003e2.2 Test case 1: inbound connection\u003c/a\u003e        \u003cul\u003e\n          \u003cli\u003e\u003ca href=\"#step-1-create-an-inbound-connection\" id=\"markdown-toc-step-1-create-an-inbound-connection\"\u003eStep 1. Create an inbound connection\u003c/a\u003e\u003c/li\u003e\n          \u003cli\u003e\u003ca href=\"#step-2-enlarge-ct-map-size-and-restart-agent\" id=\"markdown-toc-step-2-enlarge-ct-map-size-and-restart-agent\"\u003eStep 2. Enlarge CT (map) size and restart agent\u003c/a\u003e\u003c/li\u003e\n          \u003cli\u003e\u003ca href=\"#step-3-check-connection-liveliness\" id=\"markdown-toc-step-3-check-connection-liveliness\"\u003eStep 3. Check connection liveliness\u003c/a\u003e\u003c/li\u003e\n        \u003c/ul\u003e\n      \u003c/li\u003e\n      \u003cli\u003e\u003ca href=\"#23-test-case-2-outbound-service-connections\" id=\"markdown-toc-23-test-case-2-outbound-service-connections\"\u003e2.3 Test case 2: outbound Service connections\u003c/a\u003e\u003c/li\u003e\n      \u003cli\u003e\u003ca href=\"#24-summary\" id=\"markdown-toc-24-summary\"\u003e2.4 Summary\u003c/a\u003e\u003c/li\u003e\n    \u003c/ul\u003e\n  \u003c/li\u003e\n  \u003cli\u003e\u003ca href=\"#3-the-code-bpf-maps-handling-on-agent-restart\" id=\"markdown-toc-3-the-code-bpf-maps-handling-on-agent-restart\"\u003e3 The code: BPF maps handling on agent restart\u003c/a\u003e    \u003cul\u003e\n      \u003cli\u003e\u003ca href=\"#31-high-level-overview-call-stack\" id=\"markdown-toc-31-high-level-overview-call-stack\"\u003e3.1 High-level overview (call stack)\u003c/a\u003e\u003c/li\u003e\n      \u003cli\u003e\u003ca href=\"#32-init-map-info-from-agent-configurations-ctmapinitmapinfo\" id=\"markdown-toc-32-init-map-info-from-agent-configurations-ctmapinitmapinfo\"\u003e3.2 Init map info from agent configurations: \u003ccode class=\"language-plaintext highlighter-rouge\"\u003ectmap.InitMapInfo()\u003c/code\u003e\u003c/a\u003e\u003c/li\u003e\n      \u003cli\u003e\u003ca href=\"#33-init-map-objects-initmaps\" id=\"markdown-toc-33-init-map-objects-initmaps\"\u003e3.3 Init map objects: \u003ccode class=\"language-plaintext highlighter-rouge\"\u003einitMaps()\u003c/code\u003e\u003c/a\u003e        \u003cul\u003e\n          \u003cli\u003e\u003ca href=\"#conntracklocal-or-non-conntracklocal-default\" id=\"markdown-toc-conntracklocal-or-non-conntracklocal-default\"\u003eConntrackLocal or non-ConntrackLocal (default)\u003c/a\u003e\u003c/li\u003e\n          \u003cli\u003e\u003ca href=\"#init-global-ct-maps\" id=\"markdown-toc-init-global-ct-maps\"\u003eInit global CT maps\u003c/a\u003e\u003c/li\u003e\n        \u003c/ul\u003e\n      \u003c/li\u003e\n      \u003cli\u003e\u003ca href=\"#34-mcreate---mopenorcreate---mopenorcreate---remove--openorcreatemap\" id=\"markdown-toc-34-mcreate---mopenorcreate---mopenorcreate---remove--openorcreatemap\"\u003e3.4 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003em.Create() -\u0026gt; m.OpenOrCreate() -\u0026gt; m.openOrCreate() -\u0026gt; Remove() \u0026amp;\u0026amp; OpenOrCreateMap()\u003c/code\u003e\u003c/a\u003e\u003c/li\u003e\n      \u003cli\u003e\u003ca href=\"#35-openorcreatemap---objcheck---remove--recreate---createmap\" id=\"markdown-toc-35-openorcreatemap---objcheck---remove--recreate---createmap\"\u003e3.5 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eOpenOrCreateMap() -\u0026gt; objCheck() -\u0026gt; Remove() \u0026amp;\u0026amp; recreate -\u0026gt; CreateMap()\u003c/code\u003e\u003c/a\u003e\u003c/li\u003e\n      \u003cli\u003e\u003ca href=\"#36-the-final-creation-createmap---unixsyscall\" id=\"markdown-toc-36-the-final-creation-createmap---unixsyscall\"\u003e3.6 The final creation: \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eCreateMap() -\u0026gt; unix.SysCall()\u003c/code\u003e\u003c/a\u003e\u003c/li\u003e\n    \u003c/ul\u003e\n  \u003c/li\u003e\n  \u003cli\u003e\u003ca href=\"#4-back-to-the-functionality-test\" id=\"markdown-toc-4-back-to-the-functionality-test\"\u003e4 Back to the functionality test\u003c/a\u003e    \u003cul\u003e\n      \u003cli\u003e\u003ca href=\"#41-agent-logs-on-bpf-removing\" id=\"markdown-toc-41-agent-logs-on-bpf-removing\"\u003e4.1 Agent logs on BPF removing\u003c/a\u003e\u003c/li\u003e\n      \u003cli\u003e\u003ca href=\"#42-check-ct-entries-during-agent-restart\" id=\"markdown-toc-42-check-ct-entries-during-agent-restart\"\u003e4.2 Check CT entries during agent restart\u003c/a\u003e        \u003cul\u003e\n          \u003cli\u003e\u003ca href=\"#after-connection-established\" id=\"markdown-toc-after-connection-established\"\u003eAfter connection established\u003c/a\u003e\u003c/li\u003e\n          \u003cli\u003e\u003ca href=\"#after-configuration-changed-and-agent-restarted\" id=\"markdown-toc-after-configuration-changed-and-agent-restarted\"\u003eAfter configuration changed and agent restarted\u003c/a\u003e\u003c/li\u003e\n          \u003cli\u003e\u003ca href=\"#after-weve-sent-some-data\" id=\"markdown-toc-after-weve-sent-some-data\"\u003eAfter we’ve sent some data\u003c/a\u003e\u003c/li\u003e\n        \u003c/ul\u003e\n      \u003c/li\u003e\n    \u003c/ul\u003e\n  \u003c/li\u003e\n  \u003cli\u003e\u003ca href=\"#5-conclusion-and-future-work\" id=\"markdown-toc-5-conclusion-and-future-work\"\u003e5 Conclusion and future work\u003c/a\u003e\u003c/li\u003e\n  \u003cli\u003e\u003ca href=\"#references\" id=\"markdown-toc-references\"\u003eReferences\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003chr/\u003e\n\n\u003ch1 id=\"1-prerequisites-and-background-knowledge\"\u003e1 Prerequisites and background knowledge\u003c/h1\u003e\n\n\u003ch2 id=\"11-bpf-maps\"\u003e1.1 BPF maps\u003c/h2\u003e\n\n\u003cp\u003eBPF map is a \u003cstrong\u003e\u003cmark\u003eBPF in-kernel infrastructure for efficient key-value storage\u003c/mark\u003e\u003c/strong\u003e,\nwhich also serves as \u003cstrong\u003e\u003cmark\u003ea fashion for sharing data\u003c/mark\u003e\u003c/strong\u003e among:\u003c/p\u003e\n\n\u003cul\u003e\n  \u003cli\u003eDifferent BPF programs\u003c/li\u003e\n  \u003cli\u003eKernel and userspace programs\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eAs depicted below:\u003c/p\u003e\n\n\u003cp align=\"center\"\u003e\u003cimg src=\"/assets/img/cilium-bpf-maps-handling/bpf-maps.png\" width=\"60%\" height=\"60%\"/\u003e\u003c/p\u003e\n\u003cp align=\"center\"\u003eFig 1. BPF maps, BPF programs and userspace programs on a Cilium node\u003c/p\u003e\n\n\u003cp\u003eBPF maps (objects) could be \u003cstrong\u003e\u003cmark\u003epinned to BPFFS\u003c/mark\u003e\u003c/strong\u003e, which make them\nsurvivable to agent restarts and node reboots.\u003c/p\u003e\n\n\u003ch2 id=\"12-bpf-maps-in-cilium\"\u003e1.2 BPF maps in Cilium\u003c/h2\u003e\n\n\u003cp\u003eCilium agent relies heavily on BPF maps, most of which are pinned to bpffs.\nLet’s first have a glimpse of them on a worker node:\u003c/p\u003e\n\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003eroot@node:/sys/fs/bpf/tc/globals \u003cspan class=\"nv\"\u003e$ \u003c/span\u003e\u003cspan class=\"nb\"\u003els\n\u003c/span\u003ecilium_call_policy    cilium_calls_00571    cilium_calls_hostns_01320 cilium_calls_netdev_00008 cilium_ct4_global\ncilium_ct_any4_global cilium_encrypt_state  cilium_events             cilium_ipcache            cilium_ipv4_frag_datagrams\ncilium_lb4_affinity   cilium_lb4_backends   cilium_lb4_reverse_nat    cilium_lb4_services_v2    cilium_lb_affinity_match\ncilium_lxc            cilium_metrics        cilium_policy_01955       cilium_signals            cilium_tunnel_map\n...\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003eThe above maps can be groupped by their functionalities:\u003c/p\u003e\n\n\u003col\u003e\n  \u003cli\u003e\n    \u003cp\u003e\u003cstrong\u003e\u003cmark\u003eTail call\u003c/mark\u003e\u003c/strong\u003e\u003c/p\u003e\n\n    \u003col\u003e\n      \u003cli\u003e\u003ccode class=\"language-plaintext highlighter-rouge\"\u003ecilium_calls_\u0026lt;ep_id\u0026gt;\u003c/code\u003e\u003c/li\u003e\n      \u003cli\u003e\u003ccode class=\"language-plaintext highlighter-rouge\"\u003ecilium_calls_hostns_\u0026lt;ep_id\u0026gt;\u003c/code\u003e\u003c/li\u003e\n      \u003cli\u003e\u003ccode class=\"language-plaintext highlighter-rouge\"\u003ecilium_calls_netdev_\u0026lt;ep_id\u0026gt;\u003c/code\u003e\u003c/li\u003e\n    \u003c/ol\u003e\n\n    \u003cp\u003eUsed for tail calling between different BPF programs.\u003c/p\u003e\n\n    \u003cp\u003e\u003cstrong\u003eTail call is a special form of function call\u003c/strong\u003e, see [1] for how\n  tail calls are performed in Cilium.\u003c/p\u003e\n  \u003c/li\u003e\n  \u003cli\u003e\n    \u003cp\u003e\u003cstrong\u003e\u003cmark\u003eConnection tracking\u003c/mark\u003e\u003c/strong\u003e (conntrack, CT)\u003c/p\u003e\n\n    \u003col\u003e\n      \u003cli\u003e\u003ccode class=\"language-plaintext highlighter-rouge\"\u003ecilium_ct4_global\u003c/code\u003e\u003c/li\u003e\n      \u003cli\u003e\u003ccode class=\"language-plaintext highlighter-rouge\"\u003ecilium_ct4_\u0026lt;ep_id\u0026gt;\u003c/code\u003e: if per-endpoint CT (\u003ccode class=\"language-plaintext highlighter-rouge\"\u003eConntrackLocal=true\u003c/code\u003e) is enabled\u003c/li\u003e\n      \u003cli\u003e\u003ccode class=\"language-plaintext highlighter-rouge\"\u003ecilium_ct_any4_global\u003c/code\u003e\u003c/li\u003e\n    \u003c/ol\u003e\n\n    \u003cp\u003eUsed for connection tracking purpose [2].\u003c/p\u003e\n  \u003c/li\u003e\n  \u003cli\u003e\n    \u003cp\u003eEncryption\u003c/p\u003e\n\n    \u003col\u003e\n      \u003cli\u003e\u003ccode class=\"language-plaintext highlighter-rouge\"\u003ecilium_encrypt_state\u003c/code\u003e\u003c/li\u003e\n    \u003c/ol\u003e\n  \u003c/li\u003e\n  \u003cli\u003e\n    \u003cp\u003e\u003cstrong\u003e\u003cmark\u003eLoad balancing\u003c/mark\u003e\u003c/strong\u003e, or K8s Service handling\u003c/p\u003e\n\n    \u003col\u003e\n      \u003cli\u003e\u003ccode class=\"language-plaintext highlighter-rouge\"\u003ecilium_lb4_xxx\u003c/code\u003e\u003c/li\u003e\n    \u003c/ol\u003e\n\n    \u003cp\u003eFor client-side load balancing, e.g. K8s Service handling (mapping\n ServiceIP/ExternalIPs/NodePorts to backend PodIPs). Refer to [3] for more information.\u003c/p\u003e\n  \u003c/li\u003e\n  \u003cli\u003e\n    \u003cp\u003e\u003cstrong\u003e\u003cmark\u003eNetwork policy\u003c/mark\u003e\u003c/strong\u003e\u003c/p\u003e\n\n    \u003col\u003e\n      \u003cli\u003e\u003ccode class=\"language-plaintext highlighter-rouge\"\u003ecilium_policy_\u0026lt;ep_id\u0026gt;\u003c/code\u003e\u003c/li\u003e\n    \u003c/ol\u003e\n\n    \u003cp\u003eFor enforcing CiliumNetworkPolicy (CNP), which implements and extends K8s’s NetworkPolicy model.\u003c/p\u003e\n  \u003c/li\u003e\n  \u003cli\u003e\n    \u003cp\u003eevents, metrics, etc\u003c/p\u003e\n  \u003c/li\u003e\n\u003c/ol\u003e\n\n\u003ch2 id=\"13-inspect-ct-entries-in-cilium\"\u003e1.3 Inspect CT entries in Cilium\u003c/h2\u003e\n\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003enode\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"nv\"\u003e$ \u003c/span\u003ecilium bpf ct list global | \u003cspan class=\"nb\"\u003ehead\n\u003c/span\u003eTCP IN  192.168.139.13:44808 -\u0026gt; 192.168.64.97:4240 \u003cspan class=\"nv\"\u003eexpires\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e3553147 \u003cspan class=\"nv\"\u003eRxPackets\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e6 \u003cspan class=\"nv\"\u003eRxBytes\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e506 \u003cspan class=\"nv\"\u003eRxFlagsSeen\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e0x03 \u003cspan class=\"nv\"\u003eLastRxReport\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e3553137 \u003cspan class=\"nv\"\u003eTxPackets\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e4 \u003cspan class=\"nv\"\u003eTxBytes\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e347 \u003cspan class=\"nv\"\u003eTxFlagsSeen\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e0x03 \u003cspan class=\"nv\"\u003eLastTxReport\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e3553137 \u003cspan class=\"nv\"\u003eFlags\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e0x0013 \u003cspan class=\"o\"\u003e[\u003c/span\u003e RxClosing TxClosing SeenNonSyn \u003cspan class=\"o\"\u003e]\u003c/span\u003e \u003cspan class=\"nv\"\u003eRevNAT\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e0 \u003cspan class=\"nv\"\u003eSourceSecurityID\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e2 \u003cspan class=\"nv\"\u003eIfIndex\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e0\nTCP OUT 192.168.54.113:36260 -\u0026gt; 192.168.198.12:4240 \u003cspan class=\"nv\"\u003eexpires\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e3553014 \u003cspan class=\"nv\"\u003eRxPackets\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e14 \u003cspan class=\"nv\"\u003eRxBytes\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e1090 \u003cspan class=\"nv\"\u003eRxFlagsSeen\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e0x03 \u003cspan class=\"nv\"\u003eLastRxReport\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e3553004 \u003cspan class=\"nv\"\u003eTxPackets\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e9 \u003cspan class=\"nv\"\u003eTxBytes\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e704 \u003cspan class=\"nv\"\u003eTxFlagsSeen\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e0x03 \u003cspan class=\"nv\"\u003eLastTxReport\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e3553004 \u003cspan class=\"nv\"\u003eFlags\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e0x0013 \u003cspan class=\"o\"\u003e[\u003c/span\u003e RxClosing TxClosing SeenNonSyn \u003cspan class=\"o\"\u003e]\u003c/span\u003e \u003cspan class=\"nv\"\u003eRevNAT\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e0 \u003cspan class=\"nv\"\u003eSourceSecurityID\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e0 \u003cspan class=\"nv\"\u003eIfIndex\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e0\nTCP OUT 192.168.54.113:39298 -\u0026gt; 192.168.245.13:4240 \u003cspan class=\"nv\"\u003eexpires\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e3553107 \u003cspan class=\"nv\"\u003eRxPackets\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e14 \u003cspan class=\"nv\"\u003eRxBytes\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e1090 \u003cspan class=\"nv\"\u003eRxFlagsSeen\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e0x03 \u003cspan class=\"nv\"\u003eLastRxReport\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e3553097 \u003cspan class=\"nv\"\u003eTxPackets\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e9 \u003cspan class=\"nv\"\u003eTxBytes\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e704 \u003cspan class=\"nv\"\u003eTxFlagsSeen\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e0x03 \u003cspan class=\"nv\"\u003eLastTxReport\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e3553097 \u003cspan class=\"nv\"\u003eFlags\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e0x0013 \u003cspan class=\"o\"\u003e[\u003c/span\u003e RxClosing TxClosing SeenNonSyn \u003cspan class=\"o\"\u003e]\u003c/span\u003e \u003cspan class=\"nv\"\u003eRevNAT\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e0 \u003cspan class=\"nv\"\u003eSourceSecurityID\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e0 \u003cspan class=\"nv\"\u003eIfIndex\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e0\n...\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003ch1 id=\"2-functionality-test-adjust-ct-table-map-size\"\u003e2 Functionality test: adjust CT table (map) size\u003c/h1\u003e\n\n\u003cp\u003eIf \u003cstrong\u003e\u003cmark\u003eCT table is full\u003c/mark\u003e\u003c/strong\u003e because there are so many connections, we have to\nadjust the table size (equivalent to CT map size), such as, through CLI parameters:\u003c/p\u003e\n\n\u003cul\u003e\n  \u003cli\u003e\u003ccode class=\"language-plaintext highlighter-rouge\"\u003e--bpf-ct-global-any-max=262144\u003c/code\u003e\u003c/li\u003e\n  \u003cli\u003e\u003ccode class=\"language-plaintext highlighter-rouge\"\u003e--bpf-ct-global-tcp-max=524288\u003c/code\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003ethen restart the agent to load the configuration changes.\u003c/p\u003e\n\n\u003ch2 id=\"21-concern-will-existing-connections-be-interrupted\"\u003e2.1 Concern: will existing connections be interrupted?\u003c/h2\u003e\n\n\u003cp\u003eThe question is: \u003cstrong\u003e\u003cmark\u003ewill this operation disrupt the existing connections\u003c/mark\u003e\u003c/strong\u003e?\nFor example, there are already hundreds of thousands of \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eestablished\u003c/code\u003e connections on this node.\u003c/p\u003e\n\n\u003cp\u003eLet’s test it.\u003c/p\u003e\n\n\u003ch2 id=\"22-test-case-1-inbound-connection\"\u003e2.2 Test case 1: inbound connection\u003c/h2\u003e\n\n\u003cp\u003eFirst, test the inbound/ingress connections to the Pods on this node, as illustrated below:\u003c/p\u003e\n\n\u003cp align=\"center\"\u003e\u003cimg src=\"/assets/img/cilium-bpf-maps-handling/ingress-connection.png\" width=\"80%\" height=\"80%\"/\u003e\u003c/p\u003e\n\u003cp align=\"center\"\u003eFig 2.1 Inbound connection: access pod from other nodes\u003c/p\u003e\n\n\u003ch3 id=\"step-1-create-an-inbound-connection\"\u003eStep 1. Create an inbound connection\u003c/h3\u003e\n\n\u003cp\u003eOn another node: initiate a TCP connection and leave it there,\u003c/p\u003e\n\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003enode2\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"nv\"\u003e$ \u003c/span\u003etelnet 10.5.5.5 80\nConnected to 10.5.5.5.\nEscape character is \u003cspan class=\"s1\"\u003e\u0026#39;^]\u0026#39;\u003c/span\u003e\u003cspan class=\"nb\"\u003e.\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003ch3 id=\"step-2-enlarge-ct-map-size-and-restart-agent\"\u003eStep 2. Enlarge CT (map) size and restart agent\u003c/h3\u003e\n\n\u003cp\u003eWe use docker-compose to manage cilium-agents [4,6], so it is quite easy:\u003c/p\u003e\n\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003enode1\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"nv\"\u003e$ \u003c/span\u003e\u003cspan class=\"nb\"\u003ecd \u003c/span\u003ecilium-compose\n\n\u003cspan class=\"o\"\u003e(\u003c/span\u003enode1\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"nv\"\u003e$ \u003c/span\u003e\u003cspan class=\"nb\"\u003esed\u003c/span\u003e \u003cspan class=\"nt\"\u003e-i\u003c/span\u003e \u003cspan class=\"s1\"\u003e\u0026#39;s/524288/1048576/g\u0026#39;\u003c/span\u003e mount/configmap/bpf-ct-global-tcp-max\n\u003cspan class=\"o\"\u003e(\u003c/span\u003enode1\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"nv\"\u003e$ \u003c/span\u003e\u003cspan class=\"nb\"\u003esed\u003c/span\u003e \u003cspan class=\"nt\"\u003e-i\u003c/span\u003e \u003cspan class=\"s1\"\u003e\u0026#39;s/262144/524288/g\u0026#39;\u003c/span\u003e  mount/configmap/bpf-ct-global-any-max\n\u003cspan class=\"o\"\u003e(\u003c/span\u003enode1\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"nv\"\u003e$ \u003c/span\u003edocker-compose down \u003cspan class=\"o\"\u003e\u0026amp;\u0026amp;\u003c/span\u003e docker-compose up \u003cspan class=\"nt\"\u003e-d\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003ch3 id=\"step-3-check-connection-liveliness\"\u003eStep 3. Check connection liveliness\u003c/h3\u003e\n\n\u003cp\u003eBack to node2, first noticed that our connection is \u003cstrong\u003e\u003cmark\u003enot disconnected but still alive\u003c/mark\u003e\u003c/strong\u003e:\u003c/p\u003e\n\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003enode2\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"nv\"\u003e$ \u003c/span\u003etelnet 10.5.5.5 80\nConnected to 10.5.5.5.\nEscape character is \u003cspan class=\"s1\"\u003e\u0026#39;^]\u0026#39;\u003c/span\u003e\u003cspan class=\"nb\"\u003e.\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003eThen let’s \u003cstrong\u003e\u003cmark\u003eresume this connection by sending some data\u003c/mark\u003e\u003c/strong\u003e: typing\nsomething (e.g. \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eaaaaa\u003c/code\u003e) then press \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eEnter\u003c/code\u003e,\u003c/p\u003e\n\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003enode2\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"nv\"\u003e$ \u003c/span\u003etelnet 10.5.5.5 80\nConnected to 10.5.5.5.\nEscape character is \u003cspan class=\"s1\"\u003e\u0026#39;^]\u0026#39;\u003c/span\u003e\u003cspan class=\"nb\"\u003e.\u003c/span\u003e\n\naaaaa\nHTTP/1.1 400 Bad Request\nServer: nginx/1.11.1\n...\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003eThe pod returns HTTP 400 errors, which \u003cstrong\u003e\u003cmark\u003eindicates that our TCP\nconnection is still OK\u003c/mark\u003e\u003c/strong\u003e (\u003ccode class=\"language-plaintext highlighter-rouge\"\u003e400\u003c/code\u003e is a L7 error code, because we\ntyped some invalid HTTP data, which means L4 is OK).\u003c/p\u003e\n\n\u003ch2 id=\"23-test-case-2-outbound-service-connections\"\u003e2.3 Test case 2: outbound Service connections\u003c/h2\u003e\n\n\u003cp\u003eThis test case is different in that, the connection is targeted to a ServiceIP, so\n\u003cstrong\u003e\u003cmark\u003eclient side service handling\u003c/mark\u003e\u003c/strong\u003e, or DNAT (ServiceIP-\u0026gt;PodIP) to be\nspecific, will be performed.  Take a picture from [5]:\u003c/p\u003e\n\n\u003cp align=\"center\"\u003e\u003cimg src=\"/assets/img/cilium-life-of-a-packet/pod-to-service-path.png\" width=\"100%\" height=\"100%\"/\u003e\u003c/p\u003e\n\u003cp align=\"center\"\u003eFig 2.2. Traffic path of Pod-to-ServiceIP\u003c/p\u003e\n\n\u003cp\u003eCreate connection with command:\u003c/p\u003e\n\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003epod on node1\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"nv\"\u003e$ \u003c/span\u003etelnet \u0026lt;ServiceIP\u0026gt; \u0026lt;Port\u0026gt;\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003eThe other steps are similar. Omit here for simplicity.\u003c/p\u003e\n\n\u003cp\u003e\u003cstrong\u003e\u003cmark\u003eThe result of our test: the connction will not be interrupted either\u003c/mark\u003e\u003c/strong\u003e.\u003c/p\u003e\n\n\u003ch2 id=\"24-summary\"\u003e2.4 Summary\u003c/h2\u003e\n\n\u003cp\u003eNow we may wonder: \u003cstrong\u003e\u003cmark\u003ehow does cilium-agent handles the table/map changes on restart\u003c/mark\u003e\u003c/strong\u003e?\u003c/p\u003e\n\n\u003cp\u003eIn the next, we’ll explore the details in Cilium’s design and implementation.\u003c/p\u003e\n\n\u003ch1 id=\"3-the-code-bpf-maps-handling-on-agent-restart\"\u003e3 The code: BPF maps handling on agent restart\u003c/h1\u003e\n\n\u003ch2 id=\"31-high-level-overview-call-stack\"\u003e3.1 High-level overview (call stack)\u003c/h2\u003e\n\n\u003cp\u003eBelow is the high-level calling stack of the BPF maps handling logic:\u003c/p\u003e\n\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003erunDaemon                                                                    //    daemon/cmd/daemon_main.go\n  |-NewDaemon                                                                // -\u0026gt; daemon/cmd/daemon.go\n  |-ctmap.InitMapInfo\u003cspan class=\"o\"\u003e(\u003c/span\u003econf\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n  |  |-setupMapInfo\u003cspan class=\"o\"\u003e(\u003c/span\u003econf\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n  |  |-\u003cspan class=\"s2\"\u003e\u0026#34;save map conf to mapInfo[], for later use\u0026#34;\u003c/span\u003e\n  |\n  |-d.initMaps\u003cspan class=\"o\"\u003e()\u003c/span\u003e       // Open or create BPF maps.                           // daemon/cmd/datapath.go\n     |-lxcmap.LXCMap.OpenOrCreate              // \u003cspan class=\"s2\"\u003e\u0026#34;cilium_lxc\u0026#34;\u003c/span\u003e\n     |-ipcachemap.IPCache.OpenParallel         // \u003cspan class=\"s2\"\u003e\u0026#34;cilium_ipcache\u0026#34;\u003c/span\u003e\n     |-tunnel.TunnelMap.OpenOrCreate           //\n     |-supportedMapTypes :\u003cspan class=\"o\"\u003e=\u003c/span\u003e probe.GetMapTypes\n     |-d.svc.InitMaps                          //\n     |-policymap.InitCallMap                   // \u003cspan class=\"s2\"\u003e\u0026#34;cilium_call_xxx\u0026#34;\u003c/span\u003e\n     |\n     |-for ep \u003cspan class=\"k\"\u003ein \u003c/span\u003eendpoints:\n     |   ep.InitMap                                                           // -\u0026gt; pkg/endpoint/bpf.go\n     |      |-policymap.Create\u003cspan class=\"o\"\u003e(\u003c/span\u003ee.policyMapPath\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n     |\n     |-for ep \u003cspan class=\"k\"\u003ein \u003c/span\u003eendpoints:\n     |   \u003cspan class=\"k\"\u003eif \u003c/span\u003eep.ConntrackLocal\u003cspan class=\"o\"\u003e()\u003c/span\u003e:\n     |     \u003cspan class=\"k\"\u003efor \u003c/span\u003em \u003cspan class=\"k\"\u003ein \u003c/span\u003ectmap.LocalMaps:           // \u003cspan class=\"s2\"\u003e\u0026#34;cilium_ct4_\u0026lt;ep_id\u0026gt;\u0026#34;\u003c/span\u003e, \u003cspan class=\"s2\"\u003e\u0026#34;cilium_ct_any4_\u0026lt;ep_id\u0026gt;\u0026#34;\u003c/span\u003e\n     |       m.Create\u003cspan class=\"o\"\u003e()\u003c/span\u003e\n     |\n     |-ctmaps \u003cspan class=\"o\"\u003e=\u003c/span\u003e ctmap.GlobalMaps:                                             // pkg/maps/ctmap/ctmap.go\n     |                 |-maps\u003cspan class=\"o\"\u003e(\u003c/span\u003enil, ipv4, ipv6\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n     |                    |-newMap\n     |                       |-\u0026amp;Map\u003cspan class=\"o\"\u003e(\u003c/span\u003eMapTypeLRUHash\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n     |-for m \u003cspan class=\"k\"\u003ein \u003c/span\u003ectmaps: // \u003cspan class=\"s2\"\u003e\u0026#34;cilium_ct4_global\u0026#34;\u003c/span\u003e, \u003cspan class=\"s2\"\u003e\u0026#34;cilium_ct_any4_global\u0026#34;\u003c/span\u003e\n     |   m.Create                                                             // -\u0026gt; pkg/bpf/map_linux.go\n     |     |-OpenOrCreate\n     |       |-openOrCreate\n     |         |-OpenOrCreateMap                                              // -\u0026gt; pkg/bpf/bpf_linux.go\n     |\n     |-for m \u003cspan class=\"k\"\u003ein \u003c/span\u003enat.GlobalMaps:\n         m.Create // global NAT maps\n\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003ch2 id=\"32-init-map-info-from-agent-configurations-ctmapinitmapinfo\"\u003e3.2 Init map info from agent configurations: \u003ccode class=\"language-plaintext highlighter-rouge\"\u003ectmap.InitMapInfo()\u003c/code\u003e\u003c/h2\u003e\n\n\u003cp\u003eDuring agent restarting, one step is to \u003cstrong\u003e\u003cmark\u003esave\u003c/mark\u003e\u003c/strong\u003e the user specified\n\u003cstrong\u003e\u003cmark\u003emap configurations to a package-level variable\u003c/mark\u003e\u003c/strong\u003e\n\u003ccode class=\"language-plaintext highlighter-rouge\"\u003emapInfo map[mapType]mapAttributes\u003c/code\u003e, by calling \u003ccode class=\"language-plaintext highlighter-rouge\"\u003erunDaemon() -\u0026gt; ct.InitMapInfo()\u003c/code\u003e\u003c/p\u003e\n\n\u003cdiv class=\"language-go highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"c\"\u003e// daemon/cmd/daemon.go\u003c/span\u003e\n\n    \u003cspan class=\"n\"\u003ectmap\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eInitMapInfo\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e                \u003cspan class=\"c\"\u003e// Corresponding CLI or configmap options:\u003c/span\u003e\n        \u003cspan class=\"n\"\u003eConfig\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eCTMapEntriesGlobalTCP\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"c\"\u003e// --bpf-ct-global-tcp-max=524288\u003c/span\u003e\n        \u003cspan class=\"n\"\u003eConfig\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eCTMapEntriesGlobalAny\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"c\"\u003e// --bpf-ct-global-any-max=262144\u003c/span\u003e\n        \u003cspan class=\"n\"\u003eConfig\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eEnableIPv4\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e            \u003cspan class=\"c\"\u003e// --enable-ipv4\u003c/span\u003e\n        \u003cspan class=\"n\"\u003eConfig\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eEnableIPv6\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e            \u003cspan class=\"c\"\u003e// --enable-ipv6\u003c/span\u003e\n        \u003cspan class=\"n\"\u003eConfig\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eEnableNodePort\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e        \u003cspan class=\"c\"\u003e// --enable-node-port\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003ewhere \u003ccode class=\"language-plaintext highlighter-rouge\"\u003ectmap.InitMapInfo()\u003c/code\u003e is defined as:\u003c/p\u003e\n\n\u003cdiv class=\"language-go highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"c\"\u003e// pkg/maps/ctmap/ctmap.go\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003evar\u003c/span\u003e \u003cspan class=\"n\"\u003emapInfo\u003c/span\u003e \u003cspan class=\"k\"\u003emap\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003emapType\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\u003cspan class=\"n\"\u003emapAttributes\u003c/span\u003e  \u003cspan class=\"c\"\u003e// package-level variable, holding CT maps\u0026#39; configurations\u003c/span\u003e\n\n\u003cspan class=\"c\"\u003e// Build information about different CT maps for the combination of L3/L4 protocols,\u003c/span\u003e\n\u003cspan class=\"c\"\u003e// using the specified limits on TCP vs non-TCP maps.\u003c/span\u003e\n\u003cspan class=\"k\"\u003efunc\u003c/span\u003e \u003cspan class=\"n\"\u003eInitMapInfo\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003etcpMaxEntries\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eanyMaxEntries\u003c/span\u003e \u003cspan class=\"kt\"\u003eint\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003ev4\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003ev6\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003enodeport\u003c/span\u003e \u003cspan class=\"kt\"\u003ebool\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eglobal4Map\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eglobal6Map\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"n\"\u003enat\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eGlobalMaps\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ev4\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003ev6\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003enodeport\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"c\"\u003e// global CT maps\u003c/span\u003e\n\n    \u003cspan class=\"n\"\u003enatMaps\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"k\"\u003emap\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003emapType\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003enat\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eMap\u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"n\"\u003emapTypeIPv4TCPLocal\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e  \u003cspan class=\"no\"\u003enil\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e        \u003cspan class=\"c\"\u003e// SNAT only works if CT map is global\u003c/span\u003e\n        \u003cspan class=\"n\"\u003emapTypeIPv4TCPGlobal\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003eglobal4Map\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n        \u003cspan class=\"n\"\u003emapTypeIPv4AnyGlobal\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003eglobal4Map\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n    \u003cspan class=\"c\"\u003e//           CT_TYPE         NAME          KEY              MAP_SIZE            CORRESPONDING_NAT_MAP\u003c/span\u003e\n    \u003cspan class=\"n\"\u003esetupMapInfo\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eIPv4TCPLocal\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e  \u003cspan class=\"s\"\u003e\u0026#34;CT_MAP_TCP4\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e\u003cspan class=\"n\"\u003eCtKey4\u003c/span\u003e\u003cspan class=\"p\"\u003e{},\u003c/span\u003e       \u003cspan class=\"n\"\u003emapNumEntriesLocal\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003enatMaps\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003etypeIPv4TCPLocal\u003c/span\u003e\u003cspan class=\"p\"\u003e])\u003c/span\u003e\n    \u003cspan class=\"n\"\u003esetupMapInfo\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eIPv4TCPGlobal\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;CT_MAP_TCP4\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e\u003cspan class=\"n\"\u003eCtKey4Global\u003c/span\u003e\u003cspan class=\"p\"\u003e{},\u003c/span\u003e \u003cspan class=\"n\"\u003etcpMaxEntries\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e      \u003cspan class=\"n\"\u003enatMaps\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003etypeIPv4TCPGlobal\u003c/span\u003e\u003cspan class=\"p\"\u003e])\u003c/span\u003e\n    \u003cspan class=\"n\"\u003esetupMapInfo\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eIPv4AnyLocal\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e  \u003cspan class=\"s\"\u003e\u0026#34;CT_MAP_ANY4\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e\u003cspan class=\"n\"\u003eCtKey4\u003c/span\u003e\u003cspan class=\"p\"\u003e{},\u003c/span\u003e       \u003cspan class=\"n\"\u003emapNumEntriesLocal\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003enatMaps\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003etypeIPv4AnyLocal\u003c/span\u003e\u003cspan class=\"p\"\u003e])\u003c/span\u003e\n    \u003cspan class=\"n\"\u003esetupMapInfo\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eIPv4AnyGlobal\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;CT_MAP_ANY4\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e\u003cspan class=\"n\"\u003eCtKey4Global\u003c/span\u003e\u003cspan class=\"p\"\u003e{},\u003c/span\u003e \u003cspan class=\"n\"\u003eanyMaxEntries\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e      \u003cspan class=\"n\"\u003enatMaps\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003etypeIPv4AnyGlobal\u003c/span\u003e\u003cspan class=\"p\"\u003e])\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003efunc\u003c/span\u003e \u003cspan class=\"n\"\u003esetupMapInfo\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003em\u003c/span\u003e \u003cspan class=\"n\"\u003emapType\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003edefine\u003c/span\u003e \u003cspan class=\"kt\"\u003estring\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003emapKey\u003c/span\u003e \u003cspan class=\"n\"\u003ebpf\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eMapKey\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003ekeySize\u003c/span\u003e \u003cspan class=\"kt\"\u003eint\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003emaxEntries\u003c/span\u003e \u003cspan class=\"kt\"\u003eint\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003enat\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003enat\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eMap\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"n\"\u003emapInfo\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003em\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003emapAttributes\u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"n\"\u003ebpfDefine\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003edefine\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n        \u003cspan class=\"n\"\u003emapKey\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e    \u003cspan class=\"n\"\u003emapKey\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n        \u003cspan class=\"n\"\u003emapValue\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e   \u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e\u003cspan class=\"n\"\u003eCtEntry\u003c/span\u003e\u003cspan class=\"p\"\u003e{},\u003c/span\u003e \u003cspan class=\"c\"\u003e// for all CT maps, value type is the same: \u0026#34;struct CtEntry\u0026#34;\u003c/span\u003e\n        \u003cspan class=\"n\"\u003emaxEntries\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003emaxEntries\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n        \u003cspan class=\"n\"\u003eparser\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e     \u003cspan class=\"n\"\u003ebpf\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eConvertKeyValue\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n        \u003cspan class=\"n\"\u003enatMap\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e     \u003cspan class=\"n\"\u003enat\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003eWhen later the CT related BPF maps are being initialized,\nthey will retrieve map configurations from here (the configuration store \u003ccode class=\"language-plaintext highlighter-rouge\"\u003evar mapInfo[]\u003c/code\u003e).\u003c/p\u003e\n\n\u003ch2 id=\"33-init-map-objects-initmaps\"\u003e3.3 Init map objects: \u003ccode class=\"language-plaintext highlighter-rouge\"\u003einitMaps()\u003c/code\u003e\u003c/h2\u003e\n\n\u003cp\u003eAfter map configurations are parsed and saved, the next step is to\n\u003cstrong\u003e\u003cmark\u003ecreate, remove or recreate them according to configuration changes\u003c/mark\u003e\u003c/strong\u003e.\u003c/p\u003e\n\n\u003cp\u003eLet’s concentrate on CT related code:\u003c/p\u003e\n\n\u003cdiv class=\"language-plaintext highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003ed.initMaps() // Open or create BPF maps.    // daemon/cmd/datapath.go\n  |-...\n  |\n  |-for ep in endpoints:\n  |   if ep.ConntrackLocal():\n  |     for m in ctmap.LocalMaps:           // \u0026#34;cilium_ct4_\u0026lt;ep_id\u0026gt;\u0026#34;, \u0026#34;cilium_ct_any4_\u0026lt;ep_id\u0026gt;\u0026#34;\n  |       m.Create()\n  |\n  |-ctmaps = ctmap.GlobalMaps:\n  |                 |-maps(nil, ipv4, ipv6)\n  |                    |-newMap\n  |                       |-\u0026amp;Map(MapTypeLRUHash)\n  |-for m in ctmaps: // \u0026#34;cilium_ct4_global\u0026#34;, \u0026#34;cilium_ct_any4_global\u0026#34;\n  |   m.Create                              // -\u0026gt; pkg/bpf/map_linux.go\n  |     |-OpenOrCreate\n  |       |-openOrCreate\n  |         |-OpenOrCreateMap               // -\u0026gt; pkg/bpf/bpf_linux.go\n  |\n  |-for m in nat.GlobalMaps: // global NAT maps\n      m.Create\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003ch3 id=\"conntracklocal-or-non-conntracklocal-default\"\u003eConntrackLocal or non-ConntrackLocal (default)\u003c/h3\u003e\n\n\u003cp\u003eCilium supports to store all CT entries into a global CT talbe (by default),\nas well as store each endpoint’s CT entries into their own CT tables (runtime\noption \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eConntrackLocal=true\u003c/code\u003e, but this option \u003ca href=\"https://github.com/cilium/cilium/pull/16353\"\u003eis broken currently\u003c/a\u003e).\u003c/p\u003e\n\n\u003cp\u003eDespite its somewhat misleading name,\u003ccode class=\"language-plaintext highlighter-rouge\"\u003efunc (m *Map) Create()\u003c/code\u003e is actually the\n\u003cstrong\u003e\u003cmark\u003eentrypoint for creating/opening/removing/recreating a map\u003c/mark\u003e\u003c/strong\u003e.\nIt is \u003cstrong\u003e\u003cmark\u003esimilar to OpenOrCreate()\u003c/mark\u003e\u003c/strong\u003e, but closes the map after creating or opening it.\nWe’ll follow these methods later.\u003c/p\u003e\n\n\u003ch3 id=\"init-global-ct-maps\"\u003eInit global CT maps\u003c/h3\u003e\n\n\u003cp\u003eThe agent will always re-initialize the global CT maps by calling \u003ccode class=\"language-plaintext highlighter-rouge\"\u003em.Create()\u003c/code\u003e.\u003c/p\u003e\n\n\u003ch2 id=\"34-mcreate---mopenorcreate---mopenorcreate---remove--openorcreatemap\"\u003e3.4 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003em.Create() -\u0026gt; m.OpenOrCreate() -\u0026gt; m.openOrCreate() -\u0026gt; Remove() \u0026amp;\u0026amp; OpenOrCreateMap()\u003c/code\u003e\u003c/h2\u003e\n\n\u003cp\u003eOpen or create maps:\u003c/p\u003e\n\n\u003cdiv class=\"language-go highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"c\"\u003e// pkg/bpf/map_linux.go\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003efunc\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003em\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003eMap\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"n\"\u003eCreate\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"kt\"\u003ebool\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"kt\"\u003eerror\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eisNew\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"n\"\u003em\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eOpenOrCreate\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003eisNew\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003em\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eClose\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e\u003ccode class=\"language-plaintext highlighter-rouge\"\u003em.OpenOrCreate()\u003c/code\u003e is again a wrapper, it calls an internal method \u003ccode class=\"language-plaintext highlighter-rouge\"\u003em.openOrCreate()\u003c/code\u003e:\u003c/p\u003e\n\n\u003cdiv class=\"language-go highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"c\"\u003e// Returns whether the map was deleted and recreated, or an optional error.\u003c/span\u003e\n\u003cspan class=\"k\"\u003efunc\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003em\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003eMap\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"n\"\u003eOpenOrCreate\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"kt\"\u003ebool\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"kt\"\u003eerror\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003em\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eopenOrCreate\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"no\"\u003etrue\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cdiv class=\"language-go highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003efunc\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003em\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003eMap\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"n\"\u003eopenOrCreate\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003epin\u003c/span\u003e \u003cspan class=\"kt\"\u003ebool\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"kt\"\u003ebool\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"kt\"\u003eerror\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"n\"\u003em\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003esetPathIfUnset\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\n    \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"n\"\u003em\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eNonPersistent\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e  \u003cspan class=\"c\"\u003e// If the map represents non-persistent data,\u003c/span\u003e\n        \u003cspan class=\"n\"\u003eos\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eRemove\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003em\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003epath\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"c\"\u003e// always remove it before opening or creating.\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n    \u003cspan class=\"n\"\u003eflags\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"n\"\u003em\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eFlags\u003c/span\u003e \u003cspan class=\"o\"\u003e|\u003c/span\u003e \u003cspan class=\"n\"\u003eGetPreAllocateMapFlags\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003emapType\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n    \u003cspan class=\"n\"\u003efd\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eisNew\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"n\"\u003eOpenOrCreateMap\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003em\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003epath\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003emapType\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003em\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eKeySize\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003em\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eValueSize\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003em\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eMaxEntries\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eflags\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003em\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eInnerID\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003epin\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\n    \u003cspan class=\"n\"\u003eregisterMap\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003em\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003epath\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003em\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003eisNew\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"no\"\u003enil\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003eLogic of the method:\u003c/p\u003e\n\n\u003col\u003e\n  \u003cli\u003e\n    \u003cp\u003eIf the map is marked as \u003cstrong\u003e\u003cmark\u003enon-persistent\u003c/mark\u003e\u003c/strong\u003e, remove the map and it will later be recreated.\u003c/p\u003e\n  \u003c/li\u003e\n  \u003cli\u003e\n    \u003cp\u003eIf the \u003cstrong\u003e\u003cmark\u003eexisting map\u0026#39;s attributes\u003c/mark\u003e\u003c/strong\u003e such as map type, key/value size,\ncapacity, etc. \u003cstrong\u003e\u003cmark\u003echanged\u003c/mark\u003e\u003c/strong\u003e, then the map will\nbe \u003cstrong\u003e\u003cmark\u003edeleted and reopened without any attempt to retain its previous\ncontents\u003c/mark\u003e\u003c/strong\u003e. This attributes-checking process is done in \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eOpenOrCreateMap()\u003c/code\u003e, we’ll see it later.\u003c/p\u003e\n\n    \u003cp\u003eThis means that when we change the map size with \u003ccode class=\"language-plaintext highlighter-rouge\"\u003e--bpf-ct-global-tcp-max=xxx\u003c/code\u003e\n then restart the agent, the corresponding original/existing BPF map will always be deleted.\u003c/p\u003e\n  \u003c/li\u003e\n\u003c/ol\u003e\n\n\u003ch2 id=\"35-openorcreatemap---objcheck---remove--recreate---createmap\"\u003e3.5 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eOpenOrCreateMap() -\u0026gt; objCheck() -\u0026gt; Remove() \u0026amp;\u0026amp; recreate -\u0026gt; CreateMap()\u003c/code\u003e\u003c/h2\u003e\n\n\u003cp\u003eContinue the calling stack:\u003c/p\u003e\n\n\u003cdiv class=\"language-go highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"c\"\u003e// pkg/bpf/bpf_linux.go\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003efunc\u003c/span\u003e \u003cspan class=\"n\"\u003eOpenOrCreateMap\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003epath\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003emapType\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003ekeySize\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003evalueSize\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003emaxEntries\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eflags\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003einnerID\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003epin\u003c/span\u003e \u003cspan class=\"kt\"\u003ebool\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"kt\"\u003eint\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"kt\"\u003ebool\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"kt\"\u003eerror\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eredo\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"no\"\u003efalse\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eisNewMap\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"no\"\u003efalse\u003c/span\u003e\n\n\u003cspan class=\"n\"\u003erecreate\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e\n    \u003cspan class=\"n\"\u003ecreate\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"no\"\u003etrue\u003c/span\u003e\n\n    \u003cspan class=\"c\"\u003e// Step 1. ensure map directory exists\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"n\"\u003epin\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"n\"\u003eos\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eNotExist\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003epath\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e||\u003c/span\u003e \u003cspan class=\"n\"\u003eredo\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n            \u003cspan class=\"n\"\u003eos\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eMkdirAll\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003efilepath\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eDir\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003epath\u003c/span\u003e\u003cspan class=\"p\"\u003e),\u003c/span\u003e \u003cspan class=\"m\"\u003e0755\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n        \u003cspan class=\"p\"\u003e}\u003c/span\u003e \u003cspan class=\"k\"\u003eelse\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n            \u003cspan class=\"n\"\u003ecreate\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"no\"\u003efalse\u003c/span\u003e\n        \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n    \u003cspan class=\"c\"\u003e// Step 2. create map if not exist, then return\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"n\"\u003ecreate\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"n\"\u003efd\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eCreateMap\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003emapType\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003ekeySize\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003evalueSize\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003emaxEntries\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eflags\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003einnerID\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003epath\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n        \u003cspan class=\"n\"\u003eisNewMap\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"no\"\u003etrue\u003c/span\u003e\n\n        \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"n\"\u003epin\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n            \u003cspan class=\"n\"\u003eObjPin\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003efd\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003epath\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n        \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n        \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003efd\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eisNewMap\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"no\"\u003enil\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n    \u003cspan class=\"c\"\u003e// Step 3. map already exists, check if there are any map attribute changes,\u003c/span\u003e\n    \u003cspan class=\"c\"\u003e// if there is, delete the existing map\u003c/span\u003e\n    \u003cspan class=\"n\"\u003efd\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eObjGet\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003epath\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eredo\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eobjCheck\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003efd\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003epath\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003emapType\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003ekeySize\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003evalueSize\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003emaxEntries\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eflags\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\n    \u003cspan class=\"c\"\u003e// Step 4. recreate the map if there are attribute changes\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"n\"\u003eredo\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"no\"\u003etrue\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"n\"\u003eObjClose\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003efd\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e   \u003cspan class=\"c\"\u003e// close FD of existing map\u003c/span\u003e\n        \u003cspan class=\"k\"\u003egoto\u003c/span\u003e \u003cspan class=\"n\"\u003erecreate\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003efd\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eisNewMap\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eerr\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003eLogic:\u003c/p\u003e\n\n\u003col\u003e\n  \u003cli\u003e\u003cstrong\u003e\u003cmark\u003eif map not exist\u003c/mark\u003e\u003c/strong\u003e: \u003cstrong\u003ecreate the map\u003c/strong\u003e by calling \u003ccode class=\"language-plaintext highlighter-rouge\"\u003efd = CreateMap()\u003c/code\u003e\u003c/li\u003e\n  \u003cli\u003e\n    \u003cp\u003e\u003cstrong\u003e\u003cmark\u003eif map already exists\u003c/mark\u003e\u003c/strong\u003e: call \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eobjCheck()\u003c/code\u003e to see \u003cstrong\u003e\u003cmark\u003eif there are any map attribute changes\u003c/mark\u003e\u003c/strong\u003e, and if there is, it will\u003c/p\u003e\n\n    \u003col\u003e\n      \u003cli\u003eremove the existing map, then\u003c/li\u003e\n      \u003cli\u003ereturn \u003ccode class=\"language-plaintext highlighter-rouge\"\u003ehasChanged=true\u003c/code\u003e to the caller \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eOpenOrCreateMap()\u003c/code\u003e, which will create a map (\u003ccode class=\"language-plaintext highlighter-rouge\"\u003eremove+create\u003c/code\u003e = \u003ccode class=\"language-plaintext highlighter-rouge\"\u003ere-create\u003c/code\u003e).\u003c/li\u003e\n    \u003c/ol\u003e\n  \u003c/li\u003e\n\u003c/ol\u003e\n\n\u003cdiv class=\"language-go highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"c\"\u003e// pkg/bpf/bpf_linux.go\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003efunc\u003c/span\u003e \u003cspan class=\"n\"\u003eobjCheck\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003efd\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003epath\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003emapType\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003ekeySize\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003evalueSize\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003emaxEntries\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eflags\u003c/span\u003e \u003cspan class=\"kt\"\u003euint32\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"kt\"\u003ebool\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"n\"\u003einfo\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"n\"\u003eGetMapInfo\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eos\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eGetpid\u003c/span\u003e\u003cspan class=\"p\"\u003e(),\u003c/span\u003e \u003cspan class=\"n\"\u003efd\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n    \u003cspan class=\"n\"\u003emismatch\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"no\"\u003efalse\u003c/span\u003e\n\n    \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"n\"\u003einfo\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eMapType\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"n\"\u003emapType\u003c/span\u003e \u003cspan class=\"o\"\u003e||\u003c/span\u003e \u003cspan class=\"n\"\u003einfo\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eKeySize\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"n\"\u003ekeySize\u003c/span\u003e \u003cspan class=\"o\"\u003e||\u003c/span\u003e\n        \u003cspan class=\"n\"\u003einfo\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eValueSize\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"n\"\u003evalueSize\u003c/span\u003e \u003cspan class=\"o\"\u003e||\u003c/span\u003e \u003cspan class=\"n\"\u003einfo\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eMaxEntries\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"n\"\u003emaxEntries\u003c/span\u003e \u003cspan class=\"o\"\u003e||\u003c/span\u003e \u003cspan class=\"n\"\u003einfo\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eFlags\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"n\"\u003eflags\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"n\"\u003eWarn\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;XX mismatch for BPF map\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n        \u003cspan class=\"n\"\u003emismatch\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"no\"\u003etrue\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n    \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"n\"\u003emismatch\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"n\"\u003einfo\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eMapType\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"n\"\u003eMapTypeProgArray\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n            \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"no\"\u003efalse\u003c/span\u003e\n        \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n        \u003cspan class=\"n\"\u003eWarning\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;Removing map to allow for property upgrade (expect map data loss)\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\n        \u003cspan class=\"n\"\u003eos\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eRemove\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003epath\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"c\"\u003e// Kernel still holds map reference count via attached prog.\u003c/span\u003e\n        \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"no\"\u003etrue\u003c/span\u003e     \u003cspan class=\"c\"\u003e// Only exception is prog array, but that is already resolved differently.\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"no\"\u003efalse\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003ch2 id=\"36-the-final-creation-createmap---unixsyscall\"\u003e3.6 The final creation: \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eCreateMap() -\u0026gt; unix.SysCall()\u003c/code\u003e\u003c/h2\u003e\n\n\u003cdiv class=\"language-plaintext highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e// pkg/bpf/bpf_linux.go\n\n// When mapType is the type HASH_OF_MAPS an innerID is required to point at a\n// map fd which has the same type/keySize/valueSize/maxEntries as expected map\n// entries. For all other mapTypes innerID is ignored and should be zeroed.\nfunc CreateMap(mapType, keySize, valueSize, maxEntries, flags, innerID, path) (int, error) {\n    uba := struct {\n        mapType    uint32\n        keySize    uint32\n        valueSize  uint32\n        maxEntries uint32\n        mapFlags   uint32\n        innerID    uint32\n    }{ uint32(mapType), keySize, valueSize, maxEntries, flags, innerID }\n\n    unix.Syscall(unix.SYS_BPF, BPF_MAP_CREATE, uintptr(unsafe.Pointer(\u0026amp;uba)), unsafe.Sizeof(uba))\n\n    runtime.KeepAlive(\u0026amp;uba)\n    return int(ret), nil\n}\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003ch1 id=\"4-back-to-the-functionality-test\"\u003e4 Back to the functionality test\u003c/h1\u003e\n\n\u003cp\u003eAfter a tour to the code, we can back to our previous test and find more information.\u003c/p\u003e\n\n\u003ch2 id=\"41-agent-logs-on-bpf-removing\"\u003e4.1 Agent logs on BPF removing\u003c/h2\u003e\n\n\u003cp\u003eFirst, we could see from the code in Section 3.5 that, when map attributes are changed,\nagent will remove the old map and create a new one, and logging a warning about this,\nas the old data is deleted during this process:\u003c/p\u003e\n\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003elevel\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003ewarning \u003cspan class=\"nv\"\u003emsg\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;Max entries mismatch for BPF map\u0026#34;\u003c/span\u003e                                  file-path\u003cspan class=\"o\"\u003e=\u003c/span\u003e/sys/fs/bpf/tc/globals/cilium_ct4_global \u003cspan class=\"nv\"\u003enew\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e624288 \u003cspan class=\"nv\"\u003eold\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e524288\n\u003cspan class=\"nv\"\u003elevel\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003ewarning \u003cspan class=\"nv\"\u003emsg\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;Removing map to allow for property upgrade (expect map data loss)\u0026#34;\u003c/span\u003e file-path\u003cspan class=\"o\"\u003e=\u003c/span\u003e/sys/fs/bpf/tc/globals/cilium_ct4_global\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003ch2 id=\"42-check-ct-entries-during-agent-restart\"\u003e4.2 Check CT entries during agent restart\u003c/h2\u003e\n\n\u003cp\u003eWe could also check the CT table contents during each step in Section 2.2:\u003c/p\u003e\n\n\u003ch3 id=\"after-connection-established\"\u003eAfter connection established\u003c/h3\u003e\n\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003e$ \u003c/span\u003ecilium bpf ct list global 2\u0026gt;\u0026amp;1 | \u003cspan class=\"nb\"\u003egrep \u003c/span\u003e192.168.64.195 | \u003cspan class=\"nb\"\u003egrep \u003c/span\u003eTCP\nTCP IN 10.5.224.91:40356 -\u0026gt; 192.168.64.195:6379 \u003cspan class=\"nv\"\u003eexpires\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e3295721 \u003cspan class=\"nv\"\u003eRxPackets\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e14 \u003cspan class=\"nv\"\u003eRxBytes\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e983 ...\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003eCT entry \u003cstrong\u003e\u003cmark\u003ecreated\u003c/mark\u003e\u003c/strong\u003e.\u003c/p\u003e\n\n\u003ch3 id=\"after-configuration-changed-and-agent-restarted\"\u003eAfter configuration changed and agent restarted\u003c/h3\u003e\n\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003e$ \u003c/span\u003ecilium bpf ct list global 2\u0026gt;\u0026amp;1 | \u003cspan class=\"nb\"\u003egrep \u003c/span\u003e192.168.64.195 | \u003cspan class=\"nb\"\u003egrep \u003c/span\u003eTCP\n\u003cspan class=\"c\"\u003e# nothing found\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003eCT entry \u003cstrong\u003e\u003cmark\u003edisappeared\u003c/mark\u003e\u003c/strong\u003e.\u003c/p\u003e\n\n\u003ch3 id=\"after-weve-sent-some-data\"\u003eAfter we’ve sent some data\u003c/h3\u003e\n\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003e$ \u003c/span\u003ecilium bpf ct list global 2\u0026gt;\u0026amp;1 | \u003cspan class=\"nb\"\u003egrep \u003c/span\u003e192.168.64.195 | \u003cspan class=\"nb\"\u003egrep \u003c/span\u003eTCP\nTCP IN 10.5.224.91:40356 -\u0026gt; 192.168.64.195:6379 \u003cspan class=\"nv\"\u003eexpires\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e3295750 \u003cspan class=\"nv\"\u003eRxPackets\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e2 \u003cspan class=\"nv\"\u003eRxBytes\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e140 \u003cspan class=\"nv\"\u003eRxFlagsSeen\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e0x02 ...\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e\u003cstrong\u003e\u003cmark\u003eCT entry \u0026#34;came back\u0026#34;\u003c/mark\u003e\u003c/strong\u003e, but notice that all statistics, e.g. RxPackets, RxBytes has been reset.\nThe reason is that, as the code has shown, it won’t dump existing data when re-creating a map.\u003c/p\u003e\n\n\u003ch1 id=\"5-conclusion-and-future-work\"\u003e5 Conclusion and future work\u003c/h1\u003e\n\n\u003cp\u003eAccording to our test, when changing CT table sizes, existing CT entries will\nbe flushed, but the existing connections won’t be interrupted.\u003c/p\u003e\n\n\u003cp\u003eMore code should be digged into to explain why. May update later.\u003c/p\u003e\n\n\u003ch1 id=\"references\"\u003eReferences\u003c/h1\u003e\n\n\u003col\u003e\n  \u003cli\u003e\u003ca href=\"/blog/cilium-life-of-a-packet-pod-to-service/\"\u003eLife of a Packet in Cilium: Discovering the Pod-to-Service Traffic Path and BPF Processing Logics\u003c/a\u003e\u003c/li\u003e\n  \u003cli\u003e\u003ca href=\"/blog/conntrack-design-and-implementation/\"\u003eConnection Tracking (conntrack): Design and Implementation Inside Linux Kernel\u003c/a\u003e.\u003c/li\u003e\n  \u003cli\u003e\u003ca href=\"/blog/k8s-l4lb/\"\u003eL4LB for Kubernetes: Theory and Practice with Cilium+BGP+ECMP\u003c/a\u003e\u003c/li\u003e\n  \u003cli\u003e\u003ca href=\"/blog/trip-first-step-towards-cloud-native-networking/\"\u003eTrip.com: First Step towards Cloud Native Networking\u003c/a\u003e\u003c/li\u003e\n  \u003cli\u003e\u003ca href=\"/blog/cilium-life-of-a-packet-pod-to-service/\"\u003eLife of a Packet in Cilium: Discovering the Pod-to-Service Traffic Path and BPF Processing Logics\u003c/a\u003e\u003c/li\u003e\n  \u003cli\u003e\u003ca href=\"https://github.com/ctripcloud/cilium-compose\"\u003ehttps://github.com/ctripcloud/cilium-compose\u003c/a\u003e\u003c/li\u003e\n\u003c/ol\u003e\n\n\n  \u003c!-- POST NAVIGATION --\u003e\n  \u003cdiv class=\"postNav clearfix\"\u003e\n     \n      \u003ca class=\"prev\" href=\"/blog/what-happens-when-k8s-creates-pods-5-zh/\"\u003e\u003cspan\u003e« 源码解析：K8s 创建 pod 时，背后发生了什么（五）（2021）\u003c/span\u003e\n      \n    \u003c/a\u003e\n      \n      \n      \u003ca class=\"next\" href=\"/blog/firewalling-with-bpf-xdp/\"\u003e\u003cspan\u003eFirewalling with BPF/XDP: Examples and Deep Dive »\u003c/span\u003e\n       \n      \u003c/a\u003e\n     \n  \u003c/div\u003e\n\u003c/div\u003e",
  "Date": "2021-06-06T00:00:00Z",
  "Author": "Arthur Chiao"
}