{
  "Source": "arthurchiao.art",
  "Title": "The Mysterious Container net.core.somaxconn (2022)",
  "Link": "https://arthurchiao.art/blog/the-mysterious-container-somaxconn/",
  "Content": "\u003cdiv class=\"post\"\u003e\n  \n  \u003ch1 class=\"postTitle\"\u003eThe Mysterious Container \u003ccode\u003enet.core.somaxconn\u003c/code\u003e (2022)\u003c/h1\u003e\n  \u003cp class=\"meta\"\u003ePublished at 2022-08-06 | Last Update 2022-08-28\u003c/p\u003e\n  \n  \u003ch2 id=\"tl-dr\"\u003eTL; DR\u003c/h2\u003e\n\n\u003cp\u003eTry to answer several quick questions with a long post:\u003c/p\u003e\n\n\u003col\u003e\n  \u003cli\u003eOn creating a pod in Kubernetes, if \u003ccode class=\"language-plaintext highlighter-rouge\"\u003esomaxconn\u003c/code\u003e is not specified, what the default value will be, and who will set it?\u003c/li\u003e\n  \u003cli\u003eIf changing node’s sysctl settings, will they be propagated to pods?\u003c/li\u003e\n  \u003cli\u003eAre all sysctl parameters are equal in terms of initialization and propagation?\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003cp align=\"center\"\u003e\u003cimg src=\"/assets/img/the-mysterious-container-somaxconn/create-pod-journey.png\" width=\"80%\" height=\"80%\"/\u003e\u003c/p\u003e\n\n\u003chr/\u003e\n\n\u003cul id=\"markdown-toc\"\u003e\n  \u003cli\u003e\u003ca href=\"#tl-dr\" id=\"markdown-toc-tl-dr\"\u003eTL; DR\u003c/a\u003e\u003c/li\u003e\n  \u003cli\u003e\u003ca href=\"#1-background\" id=\"markdown-toc-1-background\"\u003e1 Background\u003c/a\u003e    \u003cul\u003e\n      \u003cli\u003e\u003ca href=\"#11-journey-of-components-when-creating-a-pod\" id=\"markdown-toc-11-journey-of-components-when-creating-a-pod\"\u003e1.1 Journey of components when creating a pod\u003c/a\u003e\u003c/li\u003e\n      \u003cli\u003e\u003ca href=\"#12-sysctls-in-container-and-unsafe-sysctls-in-k8s\" id=\"markdown-toc-12-sysctls-in-container-and-unsafe-sysctls-in-k8s\"\u003e1.2 sysctls in container and unsafe sysctls in k8s\u003c/a\u003e\u003c/li\u003e\n      \u003cli\u003e\u003ca href=\"#13-the-netcoresomaxconn-parameter-of-podscontainers\" id=\"markdown-toc-13-the-netcoresomaxconn-parameter-of-podscontainers\"\u003e1.3 The \u003ccode class=\"language-plaintext highlighter-rouge\"\u003enet.core.somaxconn\u003c/code\u003e parameter of pods/containers\u003c/a\u003e\u003c/li\u003e\n      \u003cli\u003e\u003ca href=\"#14-problem-statement\" id=\"markdown-toc-14-problem-statement\"\u003e1.4 Problem statement\u003c/a\u003e\u003c/li\u003e\n    \u003c/ul\u003e\n  \u003c/li\u003e\n  \u003cli\u003e\u003ca href=\"#2-dig-inside\" id=\"markdown-toc-2-dig-inside\"\u003e2 Dig inside\u003c/a\u003e    \u003cul\u003e\n      \u003cli\u003e\u003ca href=\"#21-kube-apiserver---kubelet\" id=\"markdown-toc-21-kube-apiserver---kubelet\"\u003e2.1 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003ekube-apiserver -\u0026gt; kubelet\u003c/code\u003e\u003c/a\u003e\u003c/li\u003e\n      \u003cli\u003e\u003ca href=\"#22-kubelet---dockerd\" id=\"markdown-toc-22-kubelet---dockerd\"\u003e2.2 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003ekubelet -\u0026gt; dockerd\u003c/code\u003e\u003c/a\u003e\u003c/li\u003e\n      \u003cli\u003e\u003ca href=\"#23-skip-k8skubeletcni-create-container-right-from-docker\" id=\"markdown-toc-23-skip-k8skubeletcni-create-container-right-from-docker\"\u003e2.3 Skip \u003ccode class=\"language-plaintext highlighter-rouge\"\u003ek8s/kubelet/cni\u003c/code\u003e: create container right from \u003ccode class=\"language-plaintext highlighter-rouge\"\u003edocker\u003c/code\u003e\u003c/a\u003e\u003c/li\u003e\n      \u003cli\u003e\u003ca href=\"#24-skip-docker-create-container-right-from-containerd\" id=\"markdown-toc-24-skip-docker-create-container-right-from-containerd\"\u003e2.4 Skip \u003ccode class=\"language-plaintext highlighter-rouge\"\u003edocker\u003c/code\u003e: create container right from \u003ccode class=\"language-plaintext highlighter-rouge\"\u003econtainerd\u003c/code\u003e\u003c/a\u003e        \u003cul\u003e\n          \u003cli\u003e\u003ca href=\"#find-the-right-containerdsock-file\" id=\"markdown-toc-find-the-right-containerdsock-file\"\u003eFind the right \u003ccode class=\"language-plaintext highlighter-rouge\"\u003econtainerd.sock\u003c/code\u003e file\u003c/a\u003e\u003c/li\u003e\n          \u003cli\u003e\u003ca href=\"#pull-image\" id=\"markdown-toc-pull-image\"\u003ePull image\u003c/a\u003e\u003c/li\u003e\n          \u003cli\u003e\u003ca href=\"#create-a-container\" id=\"markdown-toc-create-a-container\"\u003eCreate a container\u003c/a\u003e\u003c/li\u003e\n          \u003cli\u003e\u003ca href=\"#check-the-somaxconn-setting\" id=\"markdown-toc-check-the-somaxconn-setting\"\u003eCheck the somaxconn setting\u003c/a\u003e\u003c/li\u003e\n        \u003c/ul\u003e\n      \u003c/li\u003e\n      \u003cli\u003e\u003ca href=\"#25-skip-containerd-create-container-right-from-runc\" id=\"markdown-toc-25-skip-containerd-create-container-right-from-runc\"\u003e2.5 Skip \u003ccode class=\"language-plaintext highlighter-rouge\"\u003econtainerd\u003c/code\u003e: create container right from \u003ccode class=\"language-plaintext highlighter-rouge\"\u003erunc\u003c/code\u003e\u003c/a\u003e\u003c/li\u003e\n      \u003cli\u003e\u003ca href=\"#26-skip-runc-create-container-netns-right-from-iproute2\" id=\"markdown-toc-26-skip-runc-create-container-netns-right-from-iproute2\"\u003e2.6 Skip \u003ccode class=\"language-plaintext highlighter-rouge\"\u003erunc\u003c/code\u003e: create container netns right from \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eiproute2\u003c/code\u003e\u003c/a\u003e\u003c/li\u003e\n      \u003cli\u003e\u003ca href=\"#27-skip-iproute2-locate-the-kernel-code-of-init-new-netns\" id=\"markdown-toc-27-skip-iproute2-locate-the-kernel-code-of-init-new-netns\"\u003e2.7 Skip \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eiproute2\u003c/code\u003e: locate the kernel code of init new netns\u003c/a\u003e\u003c/li\u003e\n    \u003c/ul\u003e\n  \u003c/li\u003e\n  \u003cli\u003e\u003ca href=\"#3-conclusion--discussion\" id=\"markdown-toc-3-conclusion--discussion\"\u003e3 Conclusion \u0026amp; discussion\u003c/a\u003e    \u003cul\u003e\n      \u003cli\u003e\u003ca href=\"#31-answers\" id=\"markdown-toc-31-answers\"\u003e3.1 Answers\u003c/a\u003e\u003c/li\u003e\n      \u003cli\u003e\u003ca href=\"#32-related-kernel-patch-kernel-54\" id=\"markdown-toc-32-related-kernel-patch-kernel-54\"\u003e3.2 Related kernel patch (kernel \u003ccode class=\"language-plaintext highlighter-rouge\"\u003e5.4+\u003c/code\u003e)\u003c/a\u003e\u003c/li\u003e\n      \u003cli\u003e\u003ca href=\"#33-more-related-stuffs\" id=\"markdown-toc-33-more-related-stuffs\"\u003e3.3 More related stuffs\u003c/a\u003e        \u003cul\u003e\n          \u003cli\u003e\u003ca href=\"#cilium-bandwidth-manager-setting-somaxconn4096-on-agent-start\" id=\"markdown-toc-cilium-bandwidth-manager-setting-somaxconn4096-on-agent-start\"\u003eCilium bandwidth manager: setting \u003ccode class=\"language-plaintext highlighter-rouge\"\u003esomaxconn=4096\u003c/code\u003e on agent start\u003c/a\u003e\u003c/li\u003e\n        \u003c/ul\u003e\n      \u003c/li\u003e\n    \u003c/ul\u003e\n  \u003c/li\u003e\n  \u003cli\u003e\u003ca href=\"#references\" id=\"markdown-toc-references\"\u003eReferences\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003chr/\u003e\n\n\u003ch1 id=\"1-background\"\u003e1 Background\u003c/h1\u003e\n\n\u003ch2 id=\"11-journey-of-components-when-creating-a-pod\"\u003e1.1 Journey of components when creating a pod\u003c/h2\u003e\n\n\u003cp\u003eIn our environment, when creating a pod in Kubernetes (e.g. with \u003ccode class=\"language-plaintext highlighter-rouge\"\u003ek apply -f pod.yaml\u003c/code\u003e),\nthe request will go through the following components in sequence,\n\u003cstrong\u003e\u003cmark\u003e\u003ccode\u003ekube-apiserver -\u0026gt; kubelet -\u0026gt; dockerd -\u0026gt; containerd (-\u0026gt; containerd-shim) -\u0026gt; runc\u003c/code\u003e\u003c/mark\u003e\u003c/strong\u003e,\nas shown below:\u003c/p\u003e\n\n\u003cp align=\"center\"\u003e\u003cimg src=\"/assets/img/the-mysterious-container-somaxconn/create-pod-journey.png\" width=\"80%\" height=\"80%\"/\u003e\u003c/p\u003e\n\u003cp align=\"center\"\u003eFig. Journey of components when creating a pod in Kubernetes\u003c/p\u003e\n\n\u003cp\u003eA few words about each component:\u003c/p\u003e\n\n\u003col\u003e\n  \u003cli\u003e\n    \u003cp\u003e\u003ccode class=\"language-plaintext highlighter-rouge\"\u003ekube-apiserver\u003c/code\u003e: accept and validate the pod creation request;\u003c/p\u003e\n  \u003c/li\u003e\n  \u003cli\u003e\n    \u003cp\u003e\u003ccode class=\"language-plaintext highlighter-rouge\"\u003ekubelet\u003c/code\u003e: watch \u003ccode class=\"language-plaintext highlighter-rouge\"\u003ekube-apiserver\u003c/code\u003e, on receiving a new Pod spec, call\n\u003ccode class=\"language-plaintext highlighter-rouge\"\u003edockerd\u003c/code\u003e to create containers for the Pod (and later call CNI plugins to\ninit pod network);\u003c/p\u003e\n  \u003c/li\u003e\n  \u003cli\u003e\n    \u003cp\u003e\u003ccode class=\"language-plaintext highlighter-rouge\"\u003edockerd\u003c/code\u003e: a user-facing wrapper over \u003ccode class=\"language-plaintext highlighter-rouge\"\u003econtainerd\u003c/code\u003e, which just delegate most jobs to \u003ccode class=\"language-plaintext highlighter-rouge\"\u003econtainerd\u003c/code\u003e;\u003c/p\u003e\n\n    \u003cp\u003eActually, \u003ccode class=\"language-plaintext highlighter-rouge\"\u003edocker\u003c/code\u003e can be removed from the stack, which results in\n \u003cstrong\u003e\u003cmark\u003ea simpler chain\u003c/mark\u003e\u003c/strong\u003e: \u003ccode class=\"language-plaintext highlighter-rouge\"\u003ekube-apiserver -\u0026gt; kubelet -\u0026gt; containerd -\u0026gt; runc\u003c/code\u003e.\n But for historical reasons, we still have it in place now (may remove it later though).\u003c/p\u003e\n  \u003c/li\u003e\n  \u003cli\u003e\n    \u003cp\u003e\u003ccode class=\"language-plaintext highlighter-rouge\"\u003econtainerd\u003c/code\u003e: a less user-facing \u003cstrong\u003e\u003cmark\u003econtainer manager\u003c/mark\u003e\u003c/strong\u003e;\u003c/p\u003e\n\n    \u003cul\u003e\n      \u003cli\u003e\u003ccode class=\"language-plaintext highlighter-rouge\"\u003econtainerd\u003c/code\u003e: \u003cstrong\u003e\u003cmark\u003ea daemon that manages the complete container lifecycle on the host\u003c/mark\u003e\u003c/strong\u003e:\ncreates, starts, stops containers, pulls and stores images, configures mounts, networking, etc. [1]\u003c/li\u003e\n      \u003cli\u003e\u003cstrong\u003e\u003cmark\u003e\u003ccode\u003ectr\u003c/code\u003e\u003c/mark\u003e\u003c/strong\u003e: the command line tool ships with \u003ccode class=\"language-plaintext highlighter-rouge\"\u003econtainerd\u003c/code\u003e, which has\nsimilar commands and options as \u003ccode class=\"language-plaintext highlighter-rouge\"\u003edocker\u003c/code\u003e does, we’ll see it later.\u003c/li\u003e\n      \u003cli\u003e\u003cstrong\u003e\u003cmark\u003e\u003ccode\u003econtainerd-shim\u003c/code\u003e\u003c/mark\u003e\u003c/strong\u003e: a child process of containerd that\n\u003cstrong\u003e\u003cmark\u003eserves a single container and takes care of the container lifecycle\u003c/mark\u003e\u003c/strong\u003e\nand exposes its functions to containerd through containerd-shim API. [2]\u003c/li\u003e\n    \u003c/ul\u003e\n  \u003c/li\u003e\n  \u003cli\u003e\n    \u003cp\u003e\u003ccode class=\"language-plaintext highlighter-rouge\"\u003erunc\u003c/code\u003e: the eventual \u003cstrong\u003e\u003cmark\u003econtainer runtime\u003c/mark\u003e\u003c/strong\u003e in using, which creates containers by Linux namespaces;\u003c/p\u003e\n  \u003c/li\u003e\n  \u003cli\u003e\n    \u003cp\u003e\u003ccode class=\"language-plaintext highlighter-rouge\"\u003ecni-plugin\u003c/code\u003e: this is a binary, by default located at \u003ccode class=\"language-plaintext highlighter-rouge\"\u003e/opt/cni/bin/\u003c/code\u003e, and\n  will be called by \u003ccode class=\"language-plaintext highlighter-rouge\"\u003ekubelet\u003c/code\u003e after \u003ccode class=\"language-plaintext highlighter-rouge\"\u003epause\u003c/code\u003e container is created, which is\n  responsible for allocating IP addresses, configuring network interface, …\n  for the pod. Refer to [5] if you would like to see what Cilium CNI does.\u003c/p\u003e\n  \u003c/li\u003e\n\u003c/ol\u003e\n\n\u003ch2 id=\"12-sysctls-in-container-and-unsafe-sysctls-in-k8s\"\u003e1.2 sysctls in container and unsafe sysctls in k8s\u003c/h2\u003e\n\n\u003cp\u003eWhen creating a container, each sysctl parameter of the container has its default value;\nto customize those settings on container creation, you can pass them\nvia command line arguments or API parameters. Such as, with docker CLI,\u003c/p\u003e\n\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003e$ \u003c/span\u003edocker run \u003cspan class=\"nt\"\u003e--sysctl\u003c/span\u003e net.ipv4.ip_forward\u003cspan class=\"o\"\u003e=\u003c/span\u003e1 \u0026lt;image\u0026gt;\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003eIn Kubernetes, some of these parameters are named \u003cstrong\u003e\u003cmark\u003e\u0026#34;unsafe sysctls\u0026#34;\u003c/mark\u003e\u003c/strong\u003e parameters,\nand must be explicitly enabled in \u003ccode class=\"language-plaintext highlighter-rouge\"\u003ekubelet\u003c/code\u003e if you’d like to customize them on Pod creation:\nadding \u003ccode class=\"language-plaintext highlighter-rouge\"\u003e--allowed-unsafe-sysctls=\u0026lt;list\u0026gt;\u003c/code\u003e option to kubelet,\nsuch as \u003cstrong\u003e\u003cmark\u003e\u003ccode\u003e--allowed-unsafe-sysctls=net.core.somaxconn\u003c/code\u003e\u003c/mark\u003e\u003c/strong\u003e;\nthen, you can specify the desired value in pod spec’s \u003cstrong\u003e\u003cmark\u003e\u003ccode\u003esecurityContext\u003c/code\u003e\u003c/mark\u003e\u003c/strong\u003e\nsection, an example:\u003c/p\u003e\n\n\u003cdiv class=\"language-yaml highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"na\"\u003eapiVersion\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003ev1\u003c/span\u003e\n\u003cspan class=\"na\"\u003ekind\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003ePod\u003c/span\u003e\n\u003cspan class=\"na\"\u003emetadata\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e\n  \u003cspan class=\"na\"\u003ename\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003esmoke-pod-with-k8s\u003c/span\u003e\n  \u003cspan class=\"na\"\u003elabels\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e\n    \u003cspan class=\"na\"\u003eapp\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003esmoke-pod-with-k8s\u003c/span\u003e\n\u003cspan class=\"na\"\u003espec\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e\n  \u003cspan class=\"na\"\u003esecurityContext\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e\n    \u003cspan class=\"na\"\u003esysctls\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e                    \u003cspan class=\"c1\"\u003e# \u0026lt;--- Put your custom sysctls in this section\u003c/span\u003e\n    \u003cspan class=\"pi\"\u003e-\u003c/span\u003e \u003cspan class=\"na\"\u003ename\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003enet.core.somaxconn\u003c/span\u003e\n      \u003cspan class=\"na\"\u003evalue\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"s\"\u003e1024\u0026#34;\u003c/span\u003e\n  \u003cspan class=\"na\"\u003econtainers\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e\n  \u003cspan class=\"pi\"\u003e-\u003c/span\u003e \u003cspan class=\"na\"\u003ename\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003enginx\u003c/span\u003e\n    \u003cspan class=\"na\"\u003eimage\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003enginx-slim:0.8\u003c/span\u003e\n    \u003cspan class=\"na\"\u003eports\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e\n    \u003cspan class=\"pi\"\u003e-\u003c/span\u003e \u003cspan class=\"na\"\u003econtainerPort\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"m\"\u003e80\u003c/span\u003e\n      \u003cspan class=\"na\"\u003ename\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003enginx\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003eThe securityContext claim will go through the pod security validation procedure in kube-apiserver;\nif validates, the request will be accepted.\u003c/p\u003e\n\n\u003ch2 id=\"13-the-netcoresomaxconn-parameter-of-podscontainers\"\u003e1.3 The \u003ccode class=\"language-plaintext highlighter-rouge\"\u003enet.core.somaxconn\u003c/code\u003e parameter of pods/containers\u003c/h2\u003e\n\n\u003cp\u003eAs shown in the above spec, \u003ccode class=\"language-plaintext highlighter-rouge\"\u003esomaxconn\u003c/code\u003e is just one of those “unsafe sysctls” parameters in Kubernetes.\u003c/p\u003e\n\n\u003cp\u003eWhat is this parameter used for?\nAccording to kernel \u003cstrong\u003e\u003ca href=\"https://www.kernel.org/doc/Documentation/networking/ip-sysctl.txt\"\u003eDocumentation/networking/ip-sysctl.txt\u003c/a\u003e\u003c/strong\u003e,\u003c/p\u003e\n\n\u003cdiv class=\"language-plaintext highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003esomaxconn - INTEGER\n    Limit of socket listen() backlog, known in userspace as SOMAXCONN.\n    Defaults to 4096. (Was 128 before linux-5.4)\n    See also tcp_max_syn_backlog for additional tuning for TCP sockets.\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003eFor server side applications, if this parameter is\ntoo small, such as \u003ccode class=\"language-plaintext highlighter-rouge\"\u003e128\u003c/code\u003e traditionally, new TCP connecting requests from clients\nmay be rejected on encountering ingress requests bursts.\u003c/p\u003e\n\n\u003cp\u003eRefer to Cloudflare’s wonderful post [3] for more information.\u003c/p\u003e\n\n\u003ch2 id=\"14-problem-statement\"\u003e1.4 Problem statement\u003c/h2\u003e\n\n\u003cp\u003eWith all the above introductions, we can now describe the problem that we’re going to talk about:\nif you’re running a Kubernetes cluster, you may have noticed that when \u003ccode\u003esomaxconn\u003c/code\u003e is not specified in Pod specs,\nsome pods will have a value of \u003ccode class=\"language-plaintext highlighter-rouge\"\u003e128\u003c/code\u003e, while some others may have a value of \u003ccode class=\"language-plaintext highlighter-rouge\"\u003e4096\u003c/code\u003e, and it seems these\nvalues are not inherited from the corresponding node’s settings,\nas a node may have a somaxconn setting of 128, 1024, 2048, 4096, etc (but pods on the same host have the same default value).\u003c/p\u003e\n\n\u003cp\u003eSo our question is: \u003cstrong\u003e\u003cmark\u003eif \u003ccode\u003enet.core.somaxconn\u003c/code\u003e is not specified in Pod spec\u003c/mark\u003e\u003c/strong\u003e,\u003c/p\u003e\n\n\u003col\u003e\n  \u003cli\u003e\u003cstrong\u003e\u003cmark\u003eWhat the parameter will be initialized for the pod\u003c/mark\u003e\u003c/strong\u003e? And,\u003c/li\u003e\n  \u003cli\u003e\u003cstrong\u003e\u003cmark\u003eWho\u003c/mark\u003e\u003c/strong\u003e (kubelet, dockerd, containerd, runc, …) \u003cstrong\u003e\u003cmark\u003ewill be in responsible for the initialization\u003c/mark\u003e\u003c/strong\u003e?\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003cp\u003eBy looking at the source code from kubelet all the way down to runc,\nwe didn’t find any place that initiated the parameter explicitly: all they do\nis just passing this parameter to the down stream component if it were provided,\nand do nothing if the parameter is missing - meaning that the parameter is opaque to them.\u003c/p\u003e\n\n\u003cp\u003eBut to confirm this behavior, let’s get our hands dirty and do some testings\nalong the journey.\u003c/p\u003e\n\n\u003ch1 id=\"2-dig-inside\"\u003e2 Dig inside\u003c/h1\u003e\n\n\u003cp\u003eWhat we’ve already seen is that\nsome pods will get their somaxconn set as 128, and some as 4096; to see clearly if\nthis initial setting has any relationship with the host’s one,\nwe set \u003ccode class=\"language-plaintext highlighter-rouge\"\u003esomaxconn=2048\u003c/code\u003e for the hosts, which is different from the both;\nhence, if there is somewhere that inherits this value from the host,\nwe can immediately recognize it.\u003c/p\u003e\n\n\u003cp\u003eChanging the system setting of the node (we’ll schedule pods to this node later):\u003c/p\u003e\n\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003enode1\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"nv\"\u003e$ \u003c/span\u003esysctl \u003cspan class=\"nt\"\u003e-w\u003c/span\u003e net.core.somaxconn\u003cspan class=\"o\"\u003e=\u003c/span\u003e2048\nnet.core.somaxconn \u003cspan class=\"o\"\u003e=\u003c/span\u003e 2048\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003eCheck the effective value:\u003c/p\u003e\n\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003enode1\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"nv\"\u003e$ \u003c/span\u003esysctl net.core.somaxconn\u003cspan class=\"o\"\u003e=\u003c/span\u003e2048\nnet.core.somaxconn \u003cspan class=\"o\"\u003e=\u003c/span\u003e 2048\n\n\u003cspan class=\"o\"\u003e(\u003c/span\u003enode1\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"nv\"\u003e$ \u003c/span\u003e\u003cspan class=\"nb\"\u003ecat\u003c/span\u003e /proc/sys/net/core/somaxconn\n2048\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003eNow we’re ready to start our journey.\u003c/p\u003e\n\n\u003ch2 id=\"21-kube-apiserver---kubelet\"\u003e2.1 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003ekube-apiserver -\u0026gt; kubelet\u003c/code\u003e\u003c/h2\u003e\n\n\u003cp\u003eAs the very beginning of a pod creation action, Kubernetes validates the pod spec and\npasses it to kubelet to perform the real creation.\u003c/p\u003e\n\n\u003cp\u003eSo the first thing we want to be sure is: will Kubernetes (kube-apiserver or kubelet)\nchoose a default value for a Pod if the parameter is missing from the Pod’s spec?\u003c/p\u003e\n\n\u003cp\u003eWell, we can find the answer in two places:\u003c/p\u003e\n\n\u003col\u003e\n  \u003cli\u003eLook at the final Pod spec in Kubernetes: to determine if Kubernetes would insert a default setting when \u003ccode class=\"language-plaintext highlighter-rouge\"\u003esomaxconn\u003c/code\u003e is not specified;\u003c/li\u003e\n  \u003cli\u003eLook at the kubelet log: check if there is \u003ccode class=\"language-plaintext highlighter-rouge\"\u003esomaxconn\u003c/code\u003e related fields in the received Pod spec; kubelet will create pod according to this spec.\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003cp\u003eNow create a pod with spec (with no securityContext):\u003c/p\u003e\n\n\u003cdiv class=\"language-yaml highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"na\"\u003eapiVersion\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003ev1\u003c/span\u003e\n\u003cspan class=\"na\"\u003ekind\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003ePod\u003c/span\u003e\n\u003cspan class=\"na\"\u003emetadata\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e\n  \u003cspan class=\"na\"\u003ename\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003esmoke-pod-with-k8s\u003c/span\u003e\n  \u003cspan class=\"na\"\u003elabels\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e\n    \u003cspan class=\"na\"\u003eapp\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003esmoke-pod-with-k8s\u003c/span\u003e\n\u003cspan class=\"na\"\u003espec\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e\n  \u003cspan class=\"na\"\u003eaffinity\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e\n    \u003cspan class=\"na\"\u003enodeAffinity\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e\n      \u003cspan class=\"na\"\u003erequiredDuringSchedulingIgnoredDuringExecution\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e\n        \u003cspan class=\"na\"\u003enodeSelectorTerms\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e\n        \u003cspan class=\"pi\"\u003e-\u003c/span\u003e \u003cspan class=\"na\"\u003ematchExpressions\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e\n          \u003cspan class=\"pi\"\u003e-\u003c/span\u003e \u003cspan class=\"na\"\u003ekey\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003ekubernetes.io/hostname\u003c/span\u003e\n            \u003cspan class=\"na\"\u003eoperator\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003eIn\u003c/span\u003e\n            \u003cspan class=\"na\"\u003evalues\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e\n            \u003cspan class=\"pi\"\u003e-\u003c/span\u003e \u003cspan class=\"s\"\u003enode1\u003c/span\u003e\n  \u003cspan class=\"na\"\u003etolerations\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e\n  \u003cspan class=\"pi\"\u003e-\u003c/span\u003e \u003cspan class=\"na\"\u003eeffect\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003eNoSchedule\u003c/span\u003e\n    \u003cspan class=\"na\"\u003eoperator\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003eExists\u003c/span\u003e\n  \u003cspan class=\"na\"\u003econtainers\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e\n  \u003cspan class=\"pi\"\u003e-\u003c/span\u003e \u003cspan class=\"na\"\u003ename\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003enginx\u003c/span\u003e\n    \u003cspan class=\"na\"\u003eimage\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003enginx-slim:0.8\u003c/span\u003e\n    \u003cspan class=\"na\"\u003eports\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e\n    \u003cspan class=\"pi\"\u003e-\u003c/span\u003e \u003cspan class=\"na\"\u003econtainerPort\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"m\"\u003e80\u003c/span\u003e\n      \u003cspan class=\"na\"\u003ename\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003enginx\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003emaster\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"nv\"\u003e$ \u003c/span\u003ek apply \u003cspan class=\"nt\"\u003e-f\u003c/span\u003e smoke-with-k8s.yaml\n\n\u003cspan class=\"o\"\u003e(\u003c/span\u003emaster\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"nv\"\u003e$ \u003c/span\u003ek get pod smoke-pod-with-k8s \u003cspan class=\"nt\"\u003e-o\u003c/span\u003e wide\nNAME                 READY   STATUS    RESTARTS   AGE   IP          NODE    NOMINATED NODE   READINESS GATES\nsmoke-pod-with-k8s   1/1     Running   0          14s   10.2.4.32   node1   \u0026lt;none\u0026gt;           \u0026lt;none\u0026gt;\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003eCheck \u003cstrong\u003e\u003cmark\u003eif somaxconn will be automatically inserted if not provided in pod spec\u003c/mark\u003e\u003c/strong\u003e:\u003c/p\u003e\n\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003emaster\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"nv\"\u003e$ \u003c/span\u003ek get pod smoke-pod-with-k8s \u003cspan class=\"nt\"\u003e-o\u003c/span\u003e yaml | \u003cspan class=\"nb\"\u003egrep\u003c/span\u003e \u003cspan class=\"nt\"\u003e-i\u003c/span\u003e somaxconn\n\u003cspan class=\"c\"\u003e# nothing here\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003eNo. Now check \u003ccode class=\"language-plaintext highlighter-rouge\"\u003ekubelet\u003c/code\u003e log on the node:\u003c/p\u003e\n\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003enode1\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"nv\"\u003e$ \u003c/span\u003e\u003cspan class=\"nb\"\u003egrep \u003c/span\u003esmoke-pod-with-k8s /var/log/kubernetes/kubelet.INFO\nconfig.go          \u003cspan class=\"o\"\u003e]\u003c/span\u003e Receiving a new pod \u003cspan class=\"s2\"\u003e\u0026#34;smoke-pod-with-k8s_default(ca66a1aa)\u0026#34;\u003c/span\u003e\nkubelet.go         \u003cspan class=\"o\"\u003e]\u003c/span\u003e SyncLoop \u003cspan class=\"o\"\u003e(\u003c/span\u003eADD, \u003cspan class=\"s2\"\u003e\u0026#34;api\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e: \u003cspan class=\"s2\"\u003e\u0026#34;smoke-pod-with-k8s_default(ca66a1aa)\u0026#34;\u003c/span\u003e\nkubelet_pods.go    \u003cspan class=\"o\"\u003e]\u003c/span\u003e Generating status \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;smoke-pod-with-k8s_default(ca66a1aa)\u0026#34;\u003c/span\u003e\nvolume_manager.go  \u003cspan class=\"o\"\u003e]\u003c/span\u003e Waiting \u003cspan class=\"k\"\u003efor \u003c/span\u003evolumes to attach and mount \u003cspan class=\"k\"\u003efor \u003c/span\u003epod \u003cspan class=\"s2\"\u003e\u0026#34;smoke-pod-with-k8s_default(ca66a1aa)\u0026#34;\u003c/span\u003e\nkubelet.go         \u003cspan class=\"o\"\u003e]\u003c/span\u003e SyncLoop \u003cspan class=\"o\"\u003e(\u003c/span\u003eRECONCILE, \u003cspan class=\"s2\"\u003e\u0026#34;api\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e: \u003cspan class=\"s2\"\u003e\u0026#34;smoke-pod-with-k8s_default(ca66a1aa)\u0026#34;\u003c/span\u003e\nstatus_manager.go  \u003cspan class=\"o\"\u003e]\u003c/span\u003e Patch status \u003cspan class=\"k\"\u003efor \u003c/span\u003epod \u003cspan class=\"s2\"\u003e\u0026#34;smoke-pod-with-k8s_default(ca66a1aa)\u0026#34;\u003c/span\u003e with \n   \u003cspan class=\"s1\"\u003e\u0026#39;{\u0026#34;metadata\u0026#34;:{\u0026#34;uid\u0026#34;:\u0026#34;ca66a1aa\u0026#34;},\n    \u0026#34;status\u0026#34;:{\u0026#34;$setElementOrder/conditions\u0026#34;:[{\u0026#34;type\u0026#34;:\u0026#34;Initialized\u0026#34;},{\u0026#34;type\u0026#34;:\u0026#34;Ready\u0026#34;},{\u0026#34;type\u0026#34;:\u0026#34;ContainersReady\u0026#34;},{\u0026#34;type\u0026#34;:\u0026#34;PodScheduled\u0026#34;}],\u0026#34;conditions\u0026#34;:[{\u0026#34;message\u0026#34;:\u0026#34;containers with unready status: [nginx]\u0026#34;,\u0026#34;reas\non\u0026#34;:\u0026#34;ContainersNotReady\u0026#34;,\u0026#34;status\u0026#34;:\u0026#34;False\u0026#34;,\u0026#34;type\u0026#34;:\u0026#34;Ready\u0026#34;},{\u0026#34;message\u0026#34;:\u0026#34;containers with unready status: [nginx]\u0026#34;,\u0026#34;reason\u0026#34;:\u0026#34;ContainersNotReady\u0026#34;,\u0026#34;status\u0026#34;:\u0026#34;False\u0026#34;,\u0026#34;type\u0026#34;:\u0026#34;ContainersReady\u0026#34;}],\u0026#34;containerStatuses\u0026#34;:[{\u0026#34;image\u0026#34;:\u0026#34;nginx-slim:0.8\u0026#34;,\u0026#34;imageID\u0026#34;:\u0026#34;\u0026#34;,\u0026#34;name\u0026#34;:\u0026#34;nginx\u0026#34;,\u0026#34;ready\u0026#34;:false,\u0026#34;restartCount\u0026#34;:0,\u0026#34;started\u0026#34;:false,\u0026#34;state\u0026#34;:{\u0026#34;waiting\u0026#34;:{\u0026#34;reason\u0026#34;:\u0026#34;ContainerCreating\u0026#34;}}}]}}\u0026#39;\u003c/span\u003e\n...\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003eWell, we get lots of detailed configurations about the pod/container, but still\nno somaxconn related stuffs.\u003c/p\u003e\n\n\u003cp align=\"center\"\u003e\u003cimg src=\"/assets/img/the-mysterious-container-somaxconn/kube-apiserver-eliminated.png\" width=\"80%\" height=\"80%\"/\u003e\u003c/p\u003e\n\u003cp align=\"center\"\u003eFig. Kubernetes control plane (e.g. kube-apiserver) is eliminated from our suspects list\u003c/p\u003e\n\n\u003cp\u003eKubernetes control plane components eliminated. Will kubelet add this parameter during its internal handling?\nWe can decide that by looking at the request it sends to \u003ccode class=\"language-plaintext highlighter-rouge\"\u003edockerd\u003c/code\u003e.\u003c/p\u003e\n\n\u003ch2 id=\"22-kubelet---dockerd\"\u003e2.2 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003ekubelet -\u0026gt; dockerd\u003c/code\u003e\u003c/h2\u003e\n\n\u003cp\u003eWill \u003ccode class=\"language-plaintext highlighter-rouge\"\u003ekubelet\u003c/code\u003e set a default value for somaxconn? Well, if it does, it must\npass this parameter to \u003ccode class=\"language-plaintext highlighter-rouge\"\u003edockerd\u003c/code\u003e, as the real container creation is done by the latter.\nSo, we can check \u003ccode class=\"language-plaintext highlighter-rouge\"\u003edockerd\u003c/code\u003e logs for this information.\u003c/p\u003e\n\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003enode1\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"nv\"\u003e$ \u003c/span\u003e\u003cspan class=\"nb\"\u003egrep \u003c/span\u003esmoke-pod-with-k8s /var/log/docker/dockerd.log\n\u003cspan class=\"nv\"\u003elevel\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003edebug \u003cspan class=\"nv\"\u003emsg\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;Calling POST /containers/create?name=k8s_POD_smoke-pod-with-k8s_default_ca66a1aa\u0026#39;\u003c/span\u003e\n\u003cspan class=\"nv\"\u003elevel\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003edebug \u003cspan class=\"nv\"\u003emsg\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;form data: {\n  \u0026#34;Entrypoint\u0026#34;:null,\n  \u0026#34;Env\u0026#34;:null,\n  \u0026#34;HostConfig\u0026#34;:{\u0026#34;AutoRemove\u0026#34;:false,\u0026#34;Binds\u0026#34;:null,\u0026#34;BlkioDeviceReadBps\u0026#34;:null,\u0026#34;BlkioDeviceReadIOps\u0026#34;:null,\u0026#34;BlkioDeviceWriteBps\u0026#34;:null,\u0026#34;BlkioDeviceWriteIOps\u0026#34;:null,\u0026#34;BlkioWeight\u0026#34;:0,\u0026#34;BlkioWeightDevice\u0026#34;:null,\u0026#34;CapAdd\u0026#34;:null,\u0026#34;CapDrop\u0026#34;:null,\u0026#34;Capabilities\u0026#34;:null,\u0026#34;Cgroup\u0026#34;:\u0026#34;\u0026#34;,\u0026#34;CgroupParent\u0026#34;:\u0026#34;/kubepods/besteffort/podca66a1aa\u0026#34;,\u0026#34;ConsoleSize\u0026#34;:[0,0],\u0026#34;ContainerIDFile\u0026#34;:\u0026#34;\u0026#34;,\u0026#34;CpuCount\u0026#34;:0,\u0026#34;CpuPercent\u0026#34;:0,\u0026#34;CpuPeriod\u0026#34;:0,\u0026#34;CpuQuota\u0026#34;:0,\u0026#34;CpuRealtimePeriod\u0026#34;:0,\u0026#34;CpuRealtimeRuntime\u0026#34;:0,\u0026#34;CpuShares\u0026#34;:2,\u0026#34;CpusetCpus\u0026#34;:\u0026#34;\u0026#34;,\u0026#34;CpusetMems\u0026#34;:\u0026#34;\u0026#34;,\u0026#34;DeviceCgroupRules\u0026#34;:null,\u0026#34;DeviceRequests\u0026#34;:null,\u0026#34;Devices\u0026#34;:null,\u0026#34;DiskQuota\u0026#34;:0,\u0026#34;Dns\u0026#34;:null,\u0026#34;DnsOptions\u0026#34;:null,\u0026#34;DnsSearch\u0026#34;:null,\u0026#34;ExtraHosts\u0026#34;:null,\u0026#34;GroupAdd\u0026#34;:null,\u0026#34;IOMaximumBandwidth\u0026#34;:0,\u0026#34;IOMaximumIOps\u0026#34;:0,\u0026#34;IpcMode\u0026#34;:\u0026#34;shareable\u0026#34;,\u0026#34;Isolation\u0026#34;:\u0026#34;\u0026#34;,\u0026#34;KernelMemory\u0026#34;:0,\u0026#34;KernelMemoryTCP\u0026#34;:0,\u0026#34;Links\u0026#34;:null,\u0026#34;LogConfig\u0026#34;:{\u0026#34;Config\u0026#34;:null,\u0026#34;Type\u0026#34;:\u0026#34;\u0026#34;},\u0026#34;MaskedPaths\u0026#34;:null,\u0026#34;Memory\u0026#34;:0,\u0026#34;MemoryReservation\u0026#34;:0,\u0026#34;MemorySwap\u0026#34;:0,\u0026#34;MemorySwappiness\u0026#34;:null,\u0026#34;NanoCpus\u0026#34;:0,\u0026#34;NetworkMode\u0026#34;:\u0026#34;none\u0026#34;,\u0026#34;OomKillDisable\u0026#34;:null,\u0026#34;OomScoreAdj\u0026#34;:-998,\u0026#34;PidMode\u0026#34;:\u0026#34;\u0026#34;,\u0026#34;PidsLimit\u0026#34;:null,\u0026#34;PortBindings\u0026#34;:{},\u0026#34;Privileged\u0026#34;:false,\u0026#34;PublishAllPorts\u0026#34;:false,\u0026#34;ReadonlyPaths\u0026#34;:null,\u0026#34;ReadonlyRootfs\u0026#34;:false,\u0026#34;RestartPolicy\u0026#34;:{\u0026#34;MaximumRetryCount\u0026#34;:0,\u0026#34;Name\u0026#34;:\u0026#34;\u0026#34;},\u0026#34;SecurityOpt\u0026#34;:[\u0026#34;seccomp=unconfined\u0026#34;],\u0026#34;ShmSize\u0026#34;:67108864,\u0026#34;UTSMode\u0026#34;:\u0026#34;\u0026#34;,\u0026#34;Ulimits\u0026#34;:null,\u0026#34;UsernsMode\u0026#34;:\u0026#34;\u0026#34;,\u0026#34;VolumeDriver\u0026#34;:\u0026#34;\u0026#34;,\u0026#34;VolumesFrom\u0026#34;:null},\n  \u0026#34;Hostname\u0026#34;:\u0026#34;smoke-pod-with-k8s\u0026#34;,\n  \u0026#34;Image\u0026#34;:\u0026#34;pause-amd64:3.1\u0026#34;,\n  \u0026#34;Labels\u0026#34;:{...},\n  \u0026#34;NetworkingConfig\u0026#34;:null,\n  \u0026#34;OnBuild\u0026#34;:null,\u0026#34;OpenStdin\u0026#34;:false,\u0026#34;StdinOnce\u0026#34;:false,\u0026#34;Tty\u0026#34;:false,\u0026#34;User\u0026#34;:\u0026#34;\u0026#34;,\u0026#34;Volumes\u0026#34;:null,\u0026#34;WorkingDir\u0026#34;:\u0026#34;\u0026#34;}\u0026#39;\u003c/span\u003e\n\u003cspan class=\"nv\"\u003elevel\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003edebug \u003cspan class=\"nv\"\u003emsg\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;Calling POST /containers/create?name=k8s_nginx_smoke-pod-with-k8s_default_ca66a1aa\u0026#39;\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003eThere are two \u003cstrong\u003e\u003cmark\u003e\u003ccode\u003ePOST /containers/create\u003c/code\u003e\u003c/mark\u003e\u003c/strong\u003e calls,\u003c/p\u003e\n\n\u003cul\u003e\n  \u003cli\u003ethe first one asks to create the \u003ccode class=\"language-plaintext highlighter-rouge\"\u003epause\u003c/code\u003e container, which will hold the several namespaces for this Pod;\u003c/li\u003e\n  \u003cli\u003ethe second one asks to create the \u003ccode class=\"language-plaintext highlighter-rouge\"\u003enginx\u003c/code\u003e container in the Pod spec.\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eNo explicit somaxconn option in the POST body, otherwise we could see it in the\n\u003cstrong\u003e\u003cmark\u003e\u003ccode\u003eHostConfig.Sysctls\u003c/code\u003e\u003c/mark\u003e\u003c/strong\u003e field:\u003c/p\u003e\n\n\u003cdiv class=\"language-go highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"c\"\u003e// https://github.com/moby/moby/blob/20.10/api/types/container/host_config.go#L426\u003c/span\u003e\n\n\u003cspan class=\"c\"\u003e// HostConfig the non-portable Config structure of a container.\u003c/span\u003e\n\u003cspan class=\"c\"\u003e// Here, \u0026#34;non-portable\u0026#34; means \u0026#34;dependent of the host we are running on\u0026#34;.\u003c/span\u003e\n\u003cspan class=\"c\"\u003e// Portable information *should* appear in Config.\u003c/span\u003e\n\u003cspan class=\"k\"\u003etype\u003c/span\u003e \u003cspan class=\"n\"\u003eHostConfig\u003c/span\u003e \u003cspan class=\"k\"\u003estruct\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"o\"\u003e...\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eSysctls\u003c/span\u003e         \u003cspan class=\"k\"\u003emap\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"kt\"\u003estring\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\u003cspan class=\"kt\"\u003estring\u003c/span\u003e \u003cspan class=\"s\"\u003e`json:\u0026#34;,omitempty\u0026#34;`\u003c/span\u003e \u003cspan class=\"c\"\u003e// List of Namespaced sysctls used for the container\u003c/span\u003e\n    \u003cspan class=\"o\"\u003e...\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003eAs a comparison, this is how the \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eHostConfig.Sysctls\u003c/code\u003e field looks like if the somaxconn\nis provided in Pod spec’s securityContext:\u003c/p\u003e\n\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003elevel\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003edebug \u003cspan class=\"nv\"\u003emsg\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;form data: {\n  \u0026#34;HostConfig\u0026#34;:{\n      ...\n      \u0026#34;Sysctls\u0026#34;:{\u0026#34;net.core.somaxconn\u0026#34;:\u0026#34;1024\u0026#34;},\n      ...\n      },\n  ...\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp align=\"center\"\u003e\u003cimg src=\"/assets/img/the-mysterious-container-somaxconn/kubelet-eliminated.png\" width=\"80%\" height=\"80%\"/\u003e\u003c/p\u003e\n\u003cp align=\"center\"\u003eFig. kubelet is eliminated from our suspects list\u003c/p\u003e\n\n\u003cp\u003ekubelet eliminated. Will dockerd add this parameter in its internal handling?\u003c/p\u003e\n\n\u003ch2 id=\"23-skip-k8skubeletcni-create-container-right-from-docker\"\u003e2.3 Skip \u003ccode class=\"language-plaintext highlighter-rouge\"\u003ek8s/kubelet/cni\u003c/code\u003e: create container right from \u003ccode class=\"language-plaintext highlighter-rouge\"\u003edocker\u003c/code\u003e\u003c/h2\u003e\n\n\u003cp\u003eNow we’ve narrows down the scope to \u003ccode class=\"language-plaintext highlighter-rouge\"\u003edockerd\u003c/code\u003e and all its downstream components.\nSo, let’s forget all the stuffs around Kubernetes, and just start a clean container\ndirectly with docker and see what the somaxconn will be. But before this,\nwe need to configure containerd to output more logs for us:\u003c/p\u003e\n\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003e$ \u003c/span\u003e\u003cspan class=\"nb\"\u003ecat\u003c/span\u003e /etc/containerd/config.toml\n...\n\u003cspan class=\"o\"\u003e[\u003c/span\u003edebug]\n  ...\n  level \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;debug\u0026#34;\u003c/span\u003e           \u003cspan class=\"c\"\u003e# \u0026lt;--- set this\u003c/span\u003e\n\n\u003cspan class=\"o\"\u003e[\u003c/span\u003eplugins]\n  \u003cspan class=\"o\"\u003e[\u003c/span\u003eplugins.linux]\n    shim \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;containerd-shim\u0026#34;\u003c/span\u003e\n    runtime \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;runc\u0026#34;\u003c/span\u003e\n    runtime_root \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;\u0026#34;\u003c/span\u003e\n    no_shim \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nb\"\u003efalse\n    \u003c/span\u003eshim_debug \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nb\"\u003etrue\u003c/span\u003e       \u003cspan class=\"c\"\u003e# \u0026lt;--- set this\u003c/span\u003e\n\n\u003cspan class=\"c\"\u003e# WARNING: restart containerd will cause all containers on this node to restart,\u003c/span\u003e\n\u003cspan class=\"c\"\u003e# DO NOT do this in your production nodes\u003c/span\u003e\n\u003cspan class=\"nv\"\u003e$ \u003c/span\u003esystemctl restart containerd\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003eNow create a container with docker:\u003c/p\u003e\n\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003e$ \u003c/span\u003e\u003cspan class=\"nb\"\u003esudo \u003c/span\u003edocker run \u003cspan class=\"nt\"\u003e-d\u003c/span\u003e \u003cspan class=\"nt\"\u003e--name\u003c/span\u003e smoke-ctn-with-docker nginx-slim:0.8 \u003cspan class=\"nb\"\u003esleep \u003c/span\u003e10d\n977e0b1\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003e$ \u003c/span\u003e\u003cspan class=\"nb\"\u003esudo \u003c/span\u003edocker \u003cspan class=\"nb\"\u003eexec \u003c/span\u003esmoke-ctn-with-docker \u003cspan class=\"nb\"\u003ecat\u003c/span\u003e /proc/sys/net/core/somaxconn\n4096  \u003cspan class=\"c\"\u003e# \u0026lt;-- container value\u003c/span\u003e\n\n\u003cspan class=\"nv\"\u003e$ \u003c/span\u003e\u003cspan class=\"nb\"\u003ecat\u003c/span\u003e /proc/sys/net/core/somaxconn\n2048  \u003cspan class=\"c\"\u003e# \u0026lt;-- host value\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e\u003cstrong\u003e\u003cmark\u003eStill 4096\u003c/mark\u003e\u003c/strong\u003e, while the node has a value of 2048.\nSince this is a docker container but not a Kubernetes pod, CNI plugin is not involved,\nso CNI plugin (and the specific Kubernetes networking solution) is also eliminated from our suspects list.\u003c/p\u003e\n\n\u003cp align=\"center\"\u003e\u003cimg src=\"/assets/img/the-mysterious-container-somaxconn/kubelet-and-cni-eliminated.png\" width=\"80%\" height=\"80%\"/\u003e\u003c/p\u003e\n\u003cp align=\"center\"\u003eFig. kubelet and CNI plugin is eliminated from our suspects list\u003c/p\u003e\n\n\u003cp\u003eNow check the logs of containerd:\u003c/p\u003e\n\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003e$ \u003c/span\u003ejourctl \u003cspan class=\"nt\"\u003e-u\u003c/span\u003e containerd \u003cspan class=\"nt\"\u003e-f\u003c/span\u003e\n\u003cspan class=\"nv\"\u003elevel\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003edebug \u003cspan class=\"nv\"\u003emsg\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;event published\u0026#34;\u003c/span\u003e \u003cspan class=\"nv\"\u003ens\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003emoby \u003cspan class=\"nv\"\u003etopic\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e/containers/create \u003cspan class=\"nb\"\u003etype\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003econtainerd.events.ContainerCreate\n\u003cspan class=\"nv\"\u003elevel\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003einfo  \u003cspan class=\"nv\"\u003emsg\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;shim containerd-shim started\u0026#34;\u003c/span\u003e \u003cspan class=\"nv\"\u003eaddress\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e/containerd-shim/977e0b1.sock \u003cspan class=\"nv\"\u003edebug\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"nb\"\u003etrue \u003c/span\u003e\u003cspan class=\"nv\"\u003epid\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e957711\n\u003cspan class=\"nv\"\u003elevel\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003edebug \u003cspan class=\"nv\"\u003emsg\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;registering ttrpc server\u0026#34;\u003c/span\u003e\n\u003cspan class=\"nv\"\u003elevel\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003edebug \u003cspan class=\"nv\"\u003emsg\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;serving api on unix socket\u0026#34;\u003c/span\u003e \u003cspan class=\"nv\"\u003esocket\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;[inherited from parent]\u0026#34;\u003c/span\u003e\n\u003cspan class=\"nv\"\u003elevel\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003edebug \u003cspan class=\"nv\"\u003emsg\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;garbage collected\u0026#34;\u003c/span\u003e \u003cspan class=\"nv\"\u003ed\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;826.031µs\u0026#34;\u003c/span\u003e\n\u003cspan class=\"nv\"\u003elevel\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003edebug \u003cspan class=\"nv\"\u003emsg\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;event published\u0026#34;\u003c/span\u003e \u003cspan class=\"nv\"\u003ens\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003emoby \u003cspan class=\"nv\"\u003etopic\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e/tasks/create \u003cspan class=\"nb\"\u003etype\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003econtainerd.events.TaskCreate\n\u003cspan class=\"nv\"\u003elevel\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003edebug \u003cspan class=\"nv\"\u003emsg\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;event published\u0026#34;\u003c/span\u003e \u003cspan class=\"nv\"\u003ens\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003emoby \u003cspan class=\"nv\"\u003etopic\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e/tasks/start \u003cspan class=\"nb\"\u003etype\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003econtainerd.events.TaskStart\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003eWell, request body not captured, maybe there are other log settings that we need to adjust.\nBut by looking into docker (moby) source code, we confirmed that it would only pass\nthis sysctl parameter if it’s provided in \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eHostConfig.Sysctls[]\u003c/code\u003e option, or provided via CLI \u003ccode class=\"language-plaintext highlighter-rouge\"\u003e--sysctl\u003c/code\u003e option.\nNeither did we do. This indicates that, the initial value is set by somewhere\nfurther behind.\u003c/p\u003e\n\n\u003cp align=\"center\"\u003e\u003cimg src=\"/assets/img/the-mysterious-container-somaxconn/docker-eliminated.png\" width=\"80%\" height=\"80%\"/\u003e\u003c/p\u003e\n\u003cp align=\"center\"\u003eFig. docker is eliminated from our suspects list\u003c/p\u003e\n\n\u003cp\u003eMove on.\u003c/p\u003e\n\n\u003ch2 id=\"24-skip-docker-create-container-right-from-containerd\"\u003e2.4 Skip \u003ccode class=\"language-plaintext highlighter-rouge\"\u003edocker\u003c/code\u003e: create container right from \u003ccode class=\"language-plaintext highlighter-rouge\"\u003econtainerd\u003c/code\u003e\u003c/h2\u003e\n\n\u003cp\u003eAgain, let’s forget all the stuffs about Docker, and just start a container\nwith containerd’s CLI and see what the somaxconn setting is.\u003c/p\u003e\n\n\u003cp\u003eBut note that containerd is one layer lower than docker, so docker images/containers can not be \nmanipulated by \u003ccode class=\"language-plaintext highlighter-rouge\"\u003econtainerd\u003c/code\u003e directly. However, the good news is that they are much the same:\u003c/p\u003e\n\n\u003ch3 id=\"find-the-right-containerdsock-file\"\u003eFind the right \u003ccode class=\"language-plaintext highlighter-rouge\"\u003econtainerd.sock\u003c/code\u003e file\u003c/h3\u003e\n\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003eroot@node1:~ \u003cspan class=\"nv\"\u003e$ \u003c/span\u003ectr images \u003cspan class=\"nb\"\u003els\u003c/span\u003e \u003cspan class=\"c\"\u003e# stuck then timed out\u003c/span\u003e\nctr: failed to dial \u003cspan class=\"s2\"\u003e\u0026#34;/run/containerd/containerd.sock\u0026#34;\u003c/span\u003e: context deadline exceeded\n\nroot@node1:~ \u003cspan class=\"nv\"\u003e$ \u003c/span\u003e\u003cspan class=\"nb\"\u003els\u003c/span\u003e /run/containerd/containerd.sock\n\u003cspan class=\"nb\"\u003els\u003c/span\u003e: cannot access /run/containerd/containerd.sock: No such file or directory\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003eWell, seems we need to find the right sock, there are several ways:\u003c/p\u003e\n\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"c\"\u003e# method 1: get from process parameters\u003c/span\u003e\nroot@node1:~ \u003cspan class=\"nv\"\u003e$ \u003c/span\u003eps \u003cspan class=\"nt\"\u003e-ef\u003c/span\u003e | \u003cspan class=\"nb\"\u003egrep\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"se\"\u003e\\-\u003c/span\u003e\u003cspan class=\"s2\"\u003eshim\u0026#34;\u003c/span\u003e\nroot     121568   7930  0 Jul29 ?        00:00:05 containerd-shim \u003cspan class=\"nt\"\u003e-namespace\u003c/span\u003e moby \u003cspan class=\"se\"\u003e\\\u003c/span\u003e\n        \u003cspan class=\"nt\"\u003e-workdir\u003c/span\u003e /var/lib/containerd/io.containerd.runtime.v1.linux/moby/4d0e1ac \u003cspan class=\"se\"\u003e\\\u003c/span\u003e\n        \u003cspan class=\"nt\"\u003e-address\u003c/span\u003e /var/run/docker/libcontainerd/docker-containerd.sock \u003cspan class=\"se\"\u003e\\ \u003c/span\u003e \u003cspan class=\"c\"\u003e# \u0026lt;-- this parameter\u003c/span\u003e\n        \u003cspan class=\"nt\"\u003e-containerd-binary\u003c/span\u003e /usr/bin/containerd \u003cspan class=\"se\"\u003e\\\u003c/span\u003e\n        \u003cspan class=\"nt\"\u003e-runtime-root\u003c/span\u003e /var/run/docker/runtime-runc\n\n\u003cspan class=\"c\"\u003e# method 2: get from config file\u003c/span\u003e\n\u003cspan class=\"nv\"\u003e$ \u003c/span\u003e\u003cspan class=\"nb\"\u003ecat\u003c/span\u003e /etc/containerd/config.toml\n\u003cspan class=\"o\"\u003e[\u003c/span\u003egrpc]\n  address \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;/var/run/docker/libcontainerd/docker-containerd.sock\u0026#34;\u003c/span\u003e       \u003cspan class=\"c\"\u003e# \u0026lt;-- this parameter\u003c/span\u003e\n...\n\n\u003cspan class=\"c\"\u003e# method 3: get from config dump\u003c/span\u003e\n\u003cspan class=\"nv\"\u003e$ \u003c/span\u003econtainerd config dump | \u003cspan class=\"nb\"\u003egrep \u003c/span\u003eaddress | fgrep \u003cspan class=\"s2\"\u003e\u0026#34;.sock\u0026#34;\u003c/span\u003e\n  address \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;/var/run/docker/libcontainerd/docker-containerd.sock\u0026#34;\u003c/span\u003e       \u003cspan class=\"c\"\u003e# \u0026lt;-- this parameter\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003eNow try to use \u003ccode class=\"language-plaintext highlighter-rouge\"\u003e/var/run/docker/libcontainerd/docker-containerd.sock\u003c/code\u003e,\u003c/p\u003e\n\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003e$ \u003c/span\u003ectr \u003cspan class=\"nt\"\u003e-a\u003c/span\u003e /run/docker/libcontainerd/docker-containerd.sock images \u003cspan class=\"nb\"\u003els\n\u003c/span\u003eREF            TYPE                                                 DIGEST             SIZE     PLATFORMS   LABELS\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003eSuccessful!\u003c/p\u003e\n\n\u003ch3 id=\"pull-image\"\u003ePull image\u003c/h3\u003e\n\n\u003cp\u003ePull the same image with \u003ccode class=\"language-plaintext highlighter-rouge\"\u003econtainerd\u003c/code\u003e:\u003c/p\u003e\n\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003e$ \u003c/span\u003ectr \u003cspan class=\"nt\"\u003e-a\u003c/span\u003e /run/docker/libcontainerd/docker-containerd.sock images pull nginx-slim:0.8\n\n\u003cspan class=\"nv\"\u003e$ \u003c/span\u003ectr \u003cspan class=\"nt\"\u003e-a\u003c/span\u003e /run/docker/libcontainerd/docker-containerd.sock images \u003cspan class=\"nb\"\u003els\n\u003c/span\u003eREF            TYPE                                                 DIGEST             SIZE     PLATFORMS   LABELS\nnginx-slim:0.8 application/vnd.docker.distribution.manifest.v2+json sha256:dca6396b... 50.0 MiB linux/amd64 -\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003ch3 id=\"create-a-container\"\u003eCreate a container\u003c/h3\u003e\n\n\u003cp\u003eCreate a container (just run in the foreground here):\u003c/p\u003e\n\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003e$ \u003c/span\u003ectr \u003cspan class=\"nt\"\u003e-a\u003c/span\u003e /run/docker/libcontainerd/docker-containerd.sock run \u003cspan class=\"nt\"\u003e--rm\u003c/span\u003e \u003cspan class=\"nt\"\u003e-t\u003c/span\u003e nginx-slim:0.8 tmp\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003eIn another window:\u003c/p\u003e\n\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003e$ \u003c/span\u003ectr \u003cspan class=\"nt\"\u003e-a\u003c/span\u003e /run/docker/libcontainerd/docker-containerd.sock task \u003cspan class=\"nb\"\u003els\n\u003c/span\u003eTASK    PID       STATUS\ntmp     162866    RUNNING\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003ch3 id=\"check-the-somaxconn-setting\"\u003eCheck the somaxconn setting\u003c/h3\u003e\n\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003e$ \u003c/span\u003ectr \u003cspan class=\"nt\"\u003e-a\u003c/span\u003e /run/docker/libcontainerd/docker-containerd.sock task \u003cspan class=\"nb\"\u003eexec\u003c/span\u003e \u003cspan class=\"nt\"\u003e-t\u003c/span\u003e \u003cspan class=\"nt\"\u003e--exec-id\u003c/span\u003e bash_1 tmp bash\n\u003cspan class=\"o\"\u003e(\u003c/span\u003einside container\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"nv\"\u003e$ \u003c/span\u003e\u003cspan class=\"nb\"\u003ecat\u003c/span\u003e /proc/sys/net/core/somaxconn\n4096\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e\u003cstrong\u003e\u003cmark\u003eStill 4096\u003c/mark\u003e\u003c/strong\u003e. Does containerd set this parameter internally? We\ncan check the parameters it sends to runc, and the answer will be: NO - we\nleave the contents to the next section.\u003c/p\u003e\n\n\u003ch2 id=\"25-skip-containerd-create-container-right-from-runc\"\u003e2.5 Skip \u003ccode class=\"language-plaintext highlighter-rouge\"\u003econtainerd\u003c/code\u003e: create container right from \u003ccode class=\"language-plaintext highlighter-rouge\"\u003erunc\u003c/code\u003e\u003c/h2\u003e\n\n\u003cp\u003eTo get rid of containerd, we can create a container with \u003ccode class=\"language-plaintext highlighter-rouge\"\u003erunc\u003c/code\u003e directly. Well,\nthis is feasible of course, but not as straight forward as docker/containerd\ndoes, as it needs file bundle rather than existing images as input:\u003c/p\u003e\n\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003e$ \u003c/span\u003erunc create \u003cspan class=\"nt\"\u003e-h\u003c/span\u003e\n\nUSAGE:\n   runc create \u003cspan class=\"o\"\u003e[\u003c/span\u003e\u003cspan class=\"nb\"\u003ecommand \u003c/span\u003eoptions] \u0026lt;container-id\u0026gt;\n\nDESCRIPTION:\n   The create \u003cspan class=\"nb\"\u003ecommand \u003c/span\u003ecreates an instance of a container \u003cspan class=\"k\"\u003efor \u003c/span\u003ea bundle.\n   The bundle is a directory with a specification file named \u003cspan class=\"s2\"\u003e\u0026#34;config.json\u0026#34;\u003c/span\u003e and a root filesystem.\n\nOPTIONS:\n   \u003cspan class=\"nt\"\u003e--bundle\u003c/span\u003e value, \u003cspan class=\"nt\"\u003e-b\u003c/span\u003e value  path to the root of the bundle directory, defaults to the current directory\n   \u003cspan class=\"nt\"\u003e--console-socket\u003c/span\u003e value    path to an AF_UNIX socket which will receive a file descriptor referencing the master end of the console\u003cspan class=\"s1\"\u003e\u0026#39;s pseudoterminal\n   --pid-file value          specify the file to write the process id to\n   --no-pivot                do not use pivot root to jail process inside rootfs.  This should be used whenever the rootfs is on top of a ramdisk\n   --no-new-keyring          do not create a new session keyring for the container.  This will cause the container to inherit the calling processes session key\n   --preserve-fds value      Pass N additional file descriptors to the container (stdio + $LISTEN_FDS + N in total) (default: 0)\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003eAs the description said, runc reads a specification file named \u003cstrong\u003e\u003cmark\u003e\u0026#34;config.json\u0026#34;\u003c/mark\u003e\u003c/strong\u003e.\nThe config.json for each container on the node:\u003c/p\u003e\n\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003enode1\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"nv\"\u003e$ \u003c/span\u003efind /run/containerd \u003cspan class=\"nt\"\u003e-name\u003c/span\u003e config.json\n/run/containerd/io.containerd.runtime.v1.linux/moby/eedd634/config.json\n/run/containerd/io.containerd.runtime.v1.linux/moby/3a92315/config.json\n/run/containerd/io.containerd.runtime.v1.linux/moby/45e7479/config.json\n/run/containerd/io.containerd.runtime.v1.linux/moby/25ac9be/config.json\n/run/containerd/io.containerd.runtime.v1.linux/moby/54c3a57/config.json\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003ePeek into one:\u003c/p\u003e\n\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003enode1\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"nv\"\u003e$ \u003c/span\u003e\u003cspan class=\"nb\"\u003els\u003c/span\u003e /run/containerd/io.containerd.runtime.v1.linux/moby/eedd6341c/\naddress  config.json  init.pid  log.json  rootfs  shim.pid\n\n\u003cspan class=\"o\"\u003e(\u003c/span\u003enode1\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"nv\"\u003e$ \u003c/span\u003e\u003cspan class=\"nb\"\u003ecat\u003c/span\u003e /run/containerd/io.containerd.runtime.v1.linux/moby/eedd6341c/config.json | jq\n\u003cspan class=\"o\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"s2\"\u003e\u0026#34;ociVersion\u0026#34;\u003c/span\u003e: \u003cspan class=\"s2\"\u003e\u0026#34;1.0.1-dev\u0026#34;\u003c/span\u003e,\n  \u003cspan class=\"s2\"\u003e\u0026#34;process\u0026#34;\u003c/span\u003e: \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"s2\"\u003e\u0026#34;user\u0026#34;\u003c/span\u003e: \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n      \u003cspan class=\"s2\"\u003e\u0026#34;uid\u0026#34;\u003c/span\u003e: 0,\n      \u003cspan class=\"s2\"\u003e\u0026#34;gid\u0026#34;\u003c/span\u003e: 0\n    \u003cspan class=\"o\"\u003e}\u003c/span\u003e,\n    \u003cspan class=\"s2\"\u003e\u0026#34;args\u0026#34;\u003c/span\u003e: \u003cspan class=\"o\"\u003e[\u003c/span\u003e\n      \u003cspan class=\"s2\"\u003e\u0026#34;/pause\u0026#34;\u003c/span\u003e\n    \u003cspan class=\"o\"\u003e]\u003c/span\u003e,\n    \u003cspan class=\"s2\"\u003e\u0026#34;env\u0026#34;\u003c/span\u003e: \u003cspan class=\"o\"\u003e[\u003c/span\u003e\n      \u003cspan class=\"s2\"\u003e\u0026#34;PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\u0026#34;\u003c/span\u003e,\n      \u003cspan class=\"s2\"\u003e\u0026#34;HOSTNAME=smoke-pod-with-k8s\u0026#34;\u003c/span\u003e\n    \u003cspan class=\"o\"\u003e]\u003c/span\u003e,\n    ...\n    \u003cspan class=\"s2\"\u003e\u0026#34;memory\u0026#34;\u003c/span\u003e: \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n      \u003cspan class=\"s2\"\u003e\u0026#34;limit\u0026#34;\u003c/span\u003e: 2147483648,\n      \u003cspan class=\"s2\"\u003e\u0026#34;swap\u0026#34;\u003c/span\u003e: 2147483648,\n      \u003cspan class=\"s2\"\u003e\u0026#34;disableOOMKiller\u0026#34;\u003c/span\u003e: \u003cspan class=\"nb\"\u003efalse\u003c/span\u003e\n    \u003cspan class=\"o\"\u003e}\u003c/span\u003e,\n    \u003cspan class=\"s2\"\u003e\u0026#34;cpu\u0026#34;\u003c/span\u003e: \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n      \u003cspan class=\"s2\"\u003e\u0026#34;shares\u0026#34;\u003c/span\u003e: 1024,\n      \u003cspan class=\"s2\"\u003e\u0026#34;quota\u0026#34;\u003c/span\u003e: 100000,\n      \u003cspan class=\"s2\"\u003e\u0026#34;period\u0026#34;\u003c/span\u003e: 100000,\n      \u003cspan class=\"s2\"\u003e\u0026#34;cpus\u0026#34;\u003c/span\u003e: \u003cspan class=\"s2\"\u003e\u0026#34;0-31\u0026#34;\u003c/span\u003e\n    \u003cspan class=\"o\"\u003e}\u003c/span\u003e,\n    \u003cspan class=\"s2\"\u003e\u0026#34;blockIO\u0026#34;\u003c/span\u003e: \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n      \u003cspan class=\"s2\"\u003e\u0026#34;weight\u0026#34;\u003c/span\u003e: 0\n    \u003cspan class=\"o\"\u003e}\u003c/span\u003e,\n    \u003cspan class=\"s2\"\u003e\u0026#34;cgroupsPath\u0026#34;\u003c/span\u003e: \u003cspan class=\"s2\"\u003e\u0026#34;/kubepods/besteffort/pod187acdb9/eedd6341c\u0026#34;\u003c/span\u003e,\n    \u003cspan class=\"s2\"\u003e\u0026#34;namespaces\u0026#34;\u003c/span\u003e: \u003cspan class=\"o\"\u003e[\u003c/span\u003e\n      \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"s2\"\u003e\u0026#34;type\u0026#34;\u003c/span\u003e: \u003cspan class=\"s2\"\u003e\u0026#34;mount\u0026#34;\u003c/span\u003e\n      \u003cspan class=\"o\"\u003e}\u003c/span\u003e,\n      \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"s2\"\u003e\u0026#34;type\u0026#34;\u003c/span\u003e: \u003cspan class=\"s2\"\u003e\u0026#34;network\u0026#34;\u003c/span\u003e\n      \u003cspan class=\"o\"\u003e}\u003c/span\u003e,\n      ...\n    \u003cspan class=\"o\"\u003e]\u003c/span\u003e,\n    \u003cspan class=\"s2\"\u003e\u0026#34;maskedPaths\u0026#34;\u003c/span\u003e: \u003cspan class=\"o\"\u003e[\u003c/span\u003e\n      \u003cspan class=\"s2\"\u003e\u0026#34;/proc/asound\u0026#34;\u003c/span\u003e,\n      \u003cspan class=\"s2\"\u003e\u0026#34;/proc/acpi\u0026#34;\u003c/span\u003e,\n      \u003cspan class=\"s2\"\u003e\u0026#34;/proc/kcore\u0026#34;\u003c/span\u003e,\n      \u003cspan class=\"s2\"\u003e\u0026#34;/proc/keys\u0026#34;\u003c/span\u003e,\n      \u003cspan class=\"s2\"\u003e\u0026#34;/proc/latency_stats\u0026#34;\u003c/span\u003e,\n      \u003cspan class=\"s2\"\u003e\u0026#34;/proc/timer_list\u0026#34;\u003c/span\u003e,\n      \u003cspan class=\"s2\"\u003e\u0026#34;/proc/timer_stats\u0026#34;\u003c/span\u003e,\n      \u003cspan class=\"s2\"\u003e\u0026#34;/proc/sched_debug\u0026#34;\u003c/span\u003e,\n      \u003cspan class=\"s2\"\u003e\u0026#34;/proc/scsi\u0026#34;\u003c/span\u003e,\n      \u003cspan class=\"s2\"\u003e\u0026#34;/sys/firmware\u0026#34;\u003c/span\u003e\n    \u003cspan class=\"o\"\u003e]\u003c/span\u003e,\n    \u003cspan class=\"s2\"\u003e\u0026#34;readonlyPaths\u0026#34;\u003c/span\u003e: \u003cspan class=\"o\"\u003e[\u003c/span\u003e\n      \u003cspan class=\"s2\"\u003e\u0026#34;/proc/bus\u0026#34;\u003c/span\u003e,\n      \u003cspan class=\"s2\"\u003e\u0026#34;/proc/fs\u0026#34;\u003c/span\u003e,\n      \u003cspan class=\"s2\"\u003e\u0026#34;/proc/irq\u0026#34;\u003c/span\u003e,\n      \u003cspan class=\"s2\"\u003e\u0026#34;/proc/sys\u0026#34;\u003c/span\u003e,\n      \u003cspan class=\"s2\"\u003e\u0026#34;/proc/sysrq-trigger\u0026#34;\u003c/span\u003e\n    \u003cspan class=\"o\"\u003e]\u003c/span\u003e\n  \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003eStill \u003cstrong\u003e\u003cmark\u003eno somaxconn settings in the config.json\u003c/mark\u003e\u003c/strong\u003e.\u003c/p\u003e\n\n\u003cp\u003eNotice that \u003ccode class=\"language-plaintext highlighter-rouge\"\u003erunc\u003c/code\u003e mounts \u003ccode class=\"language-plaintext highlighter-rouge\"\u003e/proc/sys\u003c/code\u003e into the container as \u003ccode class=\"language-plaintext highlighter-rouge\"\u003ereadonly\u003c/code\u003e.\nHowever, proc files are not regular files, but read/write interfaces to the corresponding kernel parameters.\nSo this only indicates that we can read /proc/sys/net/core/somaxconn inside container, not that\nthe container inherits the current settings of the node.\u003c/p\u003e\n\n\u003cp\u003eBut at this point, we still have gained something new: containerd didn’t set this for us,\nas config.json was created by containerd.\u003c/p\u003e\n\n\u003cp align=\"center\"\u003e\u003cimg src=\"/assets/img/the-mysterious-container-somaxconn/containerd-eliminated.png\" width=\"80%\" height=\"80%\"/\u003e\u003c/p\u003e\n\u003cp align=\"center\"\u003eFig. containerd is eliminated from our suspects list\u003c/p\u003e\n\n\u003cp\u003eWill runc initialize the parameter internally? The source code tells us that it won’t:\u003c/p\u003e\n\n\u003cdiv class=\"language-go highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"c\"\u003e// libcontainer/standard_init_linux.go in runc\u003c/span\u003e\n\n    \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"n\"\u003ekey\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003evalue\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"k\"\u003erange\u003c/span\u003e \u003cspan class=\"n\"\u003el\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003econfig\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eConfig\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eSysctl\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"n\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"n\"\u003ewriteSystemProperty\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ekey\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003evalue\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e \u003cspan class=\"n\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"no\"\u003enil\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n            \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003eerr\u003c/span\u003e\n        \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003eIt just writes those sysctl parameters specified by config.json to the container, and\ndoesn’t not add any new values, or initialize default values of some fields are not provided.\u003c/p\u003e\n\n\u003cp align=\"center\"\u003e\u003cimg src=\"/assets/img/the-mysterious-container-somaxconn/runc-eliminated.png\" width=\"80%\" height=\"80%\"/\u003e\u003c/p\u003e\n\u003cp align=\"center\"\u003eFig. runc is eliminated from our suspects list\u003c/p\u003e\n\n\u003cp\u003eSo, it seems we’ve come to an end: no component picks and sets the default value for a newly created container.\nWhat’s next to do? Well, \u003ccode class=\"language-plaintext highlighter-rouge\"\u003erunc\u003c/code\u003e will \u003cstrong\u003e\u003cmark\u003ecreate namespaces\u003c/mark\u003e\u003c/strong\u003e based\non kernel capabilities, among those is the network namespace (netns).\nWhy not create a netns by hands and see what’s the value of somaxconn in that netns?\u003c/p\u003e\n\n\u003ch2 id=\"26-skip-runc-create-container-netns-right-from-iproute2\"\u003e2.6 Skip \u003ccode class=\"language-plaintext highlighter-rouge\"\u003erunc\u003c/code\u003e: create container netns right from \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eiproute2\u003c/code\u003e\u003c/h2\u003e\n\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003eroot@node1:~ \u003cspan class=\"nv\"\u003e$ \u003c/span\u003eip netns add smoke-netns\nroot@node1:~ \u003cspan class=\"nv\"\u003e$ \u003c/span\u003eip netns \u003cspan class=\"nb\"\u003els\n\u003c/span\u003esmoke-netns\n\nroot@node1:~ \u003cspan class=\"nv\"\u003e$ \u003c/span\u003eip netns \u003cspan class=\"nb\"\u003eexec \u003c/span\u003esmoke-netns sysctl net.core.somaxconn\nnet.core.somaxconn \u003cspan class=\"o\"\u003e=\u003c/span\u003e 4096\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003eOh, \u003cstrong\u003e\u003cmark\u003estill 4096\u003c/mark\u003e\u003c/strong\u003e.\u003c/p\u003e\n\n\u003cp\u003eBut, this narrows things down quite a lot: maybe the parameter is specially handled/initialized by the kernel.\nWith a quick search I found \u003ca href=\"https://stackoverflow.com/questions/26177059/refresh-net-core-somaxcomm-or-any-sysctl-property-for-docker-containers\"\u003ethis question \u0026amp; answer\u003c/a\u003e\nat year 2014 [4]. Now let me explain it with kernel 5.10 code.\u003c/p\u003e\n\n\u003ch2 id=\"27-skip-iproute2-locate-the-kernel-code-of-init-new-netns\"\u003e2.7 Skip \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eiproute2\u003c/code\u003e: locate the kernel code of init new netns\u003c/h2\u003e\n\n\u003cp\u003eIn short, somaxconn is a special parameter that are \u003cstrong\u003e\u003cmark\u003eregistered per-netns\u003c/mark\u003e\u003c/strong\u003e:\u003c/p\u003e\n\n\u003cdiv class=\"language-c highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"c1\"\u003e// https://github.com/torvalds/linux/blob/v5.10/net/core/net_namespace.c#L375-L391\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003estatic\u003c/span\u003e \u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"n\"\u003e__net_init\u003c/span\u003e \u003cspan class=\"nf\"\u003enet_defaults_init_net\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003estruct\u003c/span\u003e \u003cspan class=\"n\"\u003enet\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003enet\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"n\"\u003enet\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003ecore\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003esysctl_somaxconn\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eSOMAXCONN\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"c1\"\u003e// \u0026lt;-- initialized with the kernel constant\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003estatic\u003c/span\u003e \u003cspan class=\"k\"\u003estruct\u003c/span\u003e \u003cspan class=\"n\"\u003epernet_operations\u003c/span\u003e \u003cspan class=\"n\"\u003enet_defaults_ops\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003einit\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003enet_defaults_init_net\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003cspan class=\"p\"\u003e};\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003estatic\u003c/span\u003e \u003cspan class=\"n\"\u003e__init\u003c/span\u003e \u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"nf\"\u003enet_defaults_init\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"kt\"\u003evoid\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eregister_pernet_subsys\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e\u003cspan class=\"n\"\u003enet_defaults_ops\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e\n        \u003cspan class=\"n\"\u003epanic\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;Cannot initialize net default settings\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"n\"\u003ecore_initcall\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003enet_defaults_init\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003eWhen a new netns is created, \u003cstrong\u003e\u003cmark\u003e\u003ccode\u003e.init = net_defaults_init_net\u003c/code\u003e\u003c/mark\u003e\u003c/strong\u003e\nwill be called to initialize the netns, and the init function actually does exactly one\nthing as shown above, set \u003ccode class=\"language-plaintext highlighter-rouge\"\u003esomaxconn=SOMAXCONN\u003c/code\u003e for the netns, where \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eSOMAXCONN\u003c/code\u003e is\na \u003cstrong\u003e\u003cmark\u003ekernel built time constant\u003c/mark\u003e\u003c/strong\u003e, for kernel 5.4+, it’s 4096:\u003c/p\u003e\n\n\u003cdiv class=\"language-c highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"c1\"\u003e// https://github.com/torvalds/linux/blob/v5.10/include/linux/socket.h#L280\u003c/span\u003e\n\n\u003cspan class=\"cm\"\u003e/* Maximum queue length specifiable by listen.  */\u003c/span\u003e\n\u003cspan class=\"cp\"\u003e#define SOMAXCONN   4096\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003eAnd for kernel \u003ccode class=\"language-plaintext highlighter-rouge\"\u003e\u0026lt; 5.4\u003c/code\u003e, it’s set to 128. Suspect found!\u003c/p\u003e\n\n\u003ch1 id=\"3-conclusion--discussion\"\u003e3 Conclusion \u0026amp; discussion\u003c/h1\u003e\n\n\u003ch2 id=\"31-answers\"\u003e3.1 Answers\u003c/h2\u003e\n\n\u003col\u003e\n  \u003cli\u003e\n    \u003cp\u003eWhen creating a pod in Kubernetes, if \u003ccode class=\"language-plaintext highlighter-rouge\"\u003esomaxconn\u003c/code\u003e is not specified, what the default value will be and who sets it?\u003c/p\u003e\n\n    \u003cp\u003eThe default value will be a kernel constant \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eSOMAXCONN\u003c/code\u003e, initialized during\n container’s network namespace (netns) creation, regardless of the node setting\n (effective only in \u003ccode class=\"language-plaintext highlighter-rouge\"\u003edefault\u003c/code\u003e netns). For kernel \u003ccode class=\"language-plaintext highlighter-rouge\"\u003e\u0026lt; 5.4\u003c/code\u003e, the constant is 128; for kernel \u003ccode class=\"language-plaintext highlighter-rouge\"\u003e5.4+\u003c/code\u003e, it’s 4096.\u003c/p\u003e\n  \u003c/li\u003e\n  \u003cli\u003e\n    \u003cp\u003eIf changing node’s sysctl settings, will they be propagated to pods?\u003c/p\u003e\n\n    \u003cp\u003eIt depends. Most values will, but as we’ve seen in this post, \u003ccode class=\"language-plaintext highlighter-rouge\"\u003esomaxconn\u003c/code\u003e won’t.\u003c/p\u003e\n  \u003c/li\u003e\n  \u003cli\u003e\n    \u003cp\u003eAre all sysctl parameters are equal in terms of initialization and propagation?\u003c/p\u003e\n\n    \u003cp\u003eNo. \u003ccode class=\"language-plaintext highlighter-rouge\"\u003esomaxconn\u003c/code\u003e is just such an exception.\u003c/p\u003e\n  \u003c/li\u003e\n\u003c/ol\u003e\n\n\u003ch2 id=\"32-related-kernel-patch-kernel-54\"\u003e3.2 Related kernel patch (kernel \u003ccode class=\"language-plaintext highlighter-rouge\"\u003e5.4+\u003c/code\u003e)\u003c/h2\u003e\n\n\u003cp\u003eThe \u003ca href=\"https://github.com/torvalds/linux/commit/19f92a030ca6d772ab44b22ee6a01378a8cb32d4\"\u003echange\u003c/a\u003e\nwas from Google:\u003c/p\u003e\n\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003enet: increase SOMAXCONN to 4096\n\nSOMAXCONN is /proc/sys/net/core/somaxconn default value.\n\nIt has been defined as 128 more than 20 years ago.\n\nSince it caps the listen\u003cspan class=\"o\"\u003e()\u003c/span\u003e backlog values, the very small value has\ncaused numerous problems over the years, and many people had\nto raise it on their hosts after beeing hit by problems.\n\nGoogle has been using 1024 \u003cspan class=\"k\"\u003efor \u003c/span\u003eat least 15 years, and we increased\nthis to 4096 after TCP listener rework has been completed, more than\n4 years ago. We got no complain of this change breaking any\nlegacy application.\n\nMany applications indeed setup a TCP listener with listen\u003cspan class=\"o\"\u003e(\u003c/span\u003efd, \u003cspan class=\"nt\"\u003e-1\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\nmeaning they \u003cspan class=\"nb\"\u003elet \u003c/span\u003ethe system \u003cspan class=\"k\"\u003eselect \u003c/span\u003ethe backlog.\n\nRaising SOMAXCONN lowers chance of the port being unavailable under\neven small SYNFLOOD attack, and reduces possibilities of side channel\nvulnerabilities.\n\nSigned-off-by: Eric Dumazet \u0026lt;edumazet@google.com\u0026gt;\nCc: Willy Tarreau \u0026lt;w@1wt.eu\u0026gt;\nCc: Yue Cao \u0026lt;ycao009@ucr.edu\u0026gt;\nSigned-off-by: David S. Miller \u0026lt;davem@davemloft.net\u0026gt;\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003ch2 id=\"33-more-related-stuffs\"\u003e3.3 More related stuffs\u003c/h2\u003e\n\n\u003ch3 id=\"cilium-bandwidth-manager-setting-somaxconn4096-on-agent-start\"\u003eCilium bandwidth manager: setting \u003ccode class=\"language-plaintext highlighter-rouge\"\u003esomaxconn=4096\u003c/code\u003e on agent start\u003c/h3\u003e\n\n\u003cdiv class=\"language-go highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"c\"\u003e// https://github.com/cilium/cilium/blob/v1.10.7/pkg/bandwidth/bandwidth.go#L100-L109\u003c/span\u003e\n\n\u003cspan class=\"n\"\u003ebaseSettings\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"p\"\u003e[]\u003c/span\u003e\u003cspan class=\"n\"\u003esetting\u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;net.core.netdev_max_backlog\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;1000\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e},\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;net.core.somaxconn\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;4096\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e},\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;net.core.default_qdisc\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;fq\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e},\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;net.ipv4.tcp_max_syn_backlog\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;4096\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e},\u003c/span\u003e\n    \u003cspan class=\"c\"\u003e// Temporary disable setting bbr for now until we have a kernel fix for pacing out of Pods as described in #15324.\u003c/span\u003e\n    \u003cspan class=\"c\"\u003e// Then, kernels with the fix can use bbr, and others cubic.\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;net.ipv4.tcp_congestion_control\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;cubic\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e},\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003eBut note that bandwidth manager could only be enabled on kernel 5.10+.\u003c/p\u003e\n\n\u003ch1 id=\"references\"\u003eReferences\u003c/h1\u003e\n\n\u003col\u003e\n  \u003cli\u003e\u003ca href=\"https://iximiuz.com/en/posts/containerd-command-line-clients/\"\u003eWhy and How to Use containerd From Command Line\u003c/a\u003e, https://iximiuz.com, 2022\u003c/li\u003e\n  \u003cli\u003e\u003ca href=\"https://blog.aquasec.com/cve-2020-15257-containerd-shim-api-vulnerability\"\u003eCVE-2020-15275: New Vulnerability Exploits containerd-shim API\u003c/a\u003e, https://blog.aquasec.com, 2020\u003c/li\u003e\n  \u003cli\u003e\u003ca href=\"https://blog.cloudflare.com/syn-packet-handling-in-the-wild/\"\u003eSYN packet handling in the wild\u003c/a\u003e, Cloudflare, 2018\u003c/li\u003e\n  \u003cli\u003e\u003ca href=\"\"\u003eRefresh net.core.somaxcomm (or any sysctl property) for docker containers\u003c/a\u003e, Stackoverflow, 2014\u003c/li\u003e\n  \u003cli\u003e\u003ca href=\"/blog/cilium-code-cni-create-network/\"\u003eCilium Code Walk Through: CNI Create Network\u003c/a\u003e\u003c/li\u003e\n\u003c/ol\u003e\n\n\n  \u003c!-- POST NAVIGATION --\u003e\n  \u003cdiv class=\"postNav clearfix\"\u003e\n     \n      \u003ca class=\"prev\" href=\"/blog/differentiate-bpf-redirects/\"\u003e\u003cspan\u003e« Differentiate three types of eBPF redirects (2022)\u003c/span\u003e\n      \n    \u003c/a\u003e\n      \n      \n      \u003ca class=\"next\" href=\"/blog/tcp-listen-a-tale-of-two-queues/\"\u003e\u003cspan\u003eTCP Socket Listen: A Tale of Two Queues (2022) »\u003c/span\u003e\n       \n      \u003c/a\u003e\n     \n  \u003c/div\u003e\n\u003c/div\u003e",
  "Date": "2022-08-06T00:00:00Z",
  "Author": "Arthur Chiao"
}