{
  "Source": "arthurchiao.art",
  "Title": "K8s 的核心是 API 而非容器（一）：从理论到 CRD 实践（2022）",
  "Link": "https://arthurchiao.art/blog/k8s-is-about-apis-zh/",
  "Content": "\u003cdiv class=\"post\"\u003e\n  \n  \u003ch1 class=\"postTitle\"\u003eK8s 的核心是 API 而非容器（一）：从理论到 CRD 实践（2022）\u003c/h1\u003e\n  \u003cp class=\"meta\"\u003ePublished at 2022-06-04 | Last Update 2023-10-14\u003c/p\u003e\n  \n  \u003cp align=\"center\"\u003e\u003cimg src=\"/assets/img/k8s-is-about-apis/k8s-is-about-apis.jpeg\" width=\"60%\" height=\"60%\"/\u003e\u003c/p\u003e\n\n\u003cp\u003e本文最初串联了以下几篇文章的核心部分，\u003c/p\u003e\n\n\u003col\u003e\n  \u003cli\u003e\u003ca href=\"https://blog.joshgav.com/2021/12/16/kubernetes-isnt-about-containers.html\"\u003eKubernetes isn’t about containers\u003c/a\u003e，2021\u003c/li\u003e\n  \u003cli\u003e\u003ca href=\"https://github.com/gotopple/k8s-for-users-intro/blob/master/database.md\"\u003eKubernetes is a Database\u003c/a\u003e, 2019\u003c/li\u003e\n  \u003cli\u003e\u003ca href=\"https://itnext.io/crd-is-just-a-table-in-kubernetes-13e15367bbe4\"\u003eCRD is just a table in Kubernetes\u003c/a\u003e, 2020\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003cp\u003e论述了 K8s 的核心价值是其通用、跨厂商和平台、可灵活扩展的声明式 API 框架，\n而不是容器（虽然容器是它成功的基础）；然后手动创建一个 API extension（CRD），\n通过测试和类比来对这一论述有一个更直观的理解。\u003c/p\u003e\n\n\u003cp\u003e例子及测试基于 K8s \u003ccode class=\"language-plaintext highlighter-rouge\"\u003ev1.21.0\u003c/code\u003e，感谢原作者们的精彩文章。\u003c/p\u003e\n\n\u003cul\u003e\n  \u003cli\u003e\u003ca href=\"/blog/k8s-is-about-apis-zh/\"\u003eK8s 的核心是 API 而非容器（一）：从理论到 CRD 实践（2022）\u003c/a\u003e\u003c/li\u003e\n  \u003cli\u003e\u003ca href=\"/blog/k8s-is-about-apis-2-zh/\"\u003eK8s 的核心是 API 而非容器（二）：从开源项目看 k8s 的几种 API 扩展机制（2023）\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003chr/\u003e\n\n\u003cul id=\"markdown-toc\"\u003e\n  \u003cli\u003e\u003ca href=\"#1-k8s-的核心是其-api-框架而非容器\" id=\"markdown-toc-1-k8s-的核心是其-api-框架而非容器\"\u003e1 K8s 的核心是其 API 框架而非容器\u003c/a\u003e    \u003cul\u003e\n      \u003cli\u003e\u003ca href=\"#11-容器是基础\" id=\"markdown-toc-11-容器是基础\"\u003e1.1 容器是基础\u003c/a\u003e\u003c/li\u003e\n      \u003cli\u003e\u003ca href=\"#12-api-才是核心\" id=\"markdown-toc-12-api-才是核心\"\u003e1.2 API 才是核心\u003c/a\u003e        \u003cul\u003e\n          \u003cli\u003e\u003ca href=\"#121-k8s-之前各自造轮子封装厂商-api-差异\" id=\"markdown-toc-121-k8s-之前各自造轮子封装厂商-api-差异\"\u003e1.2.1 K8s 之前：各自造轮子，封装厂商 API 差异\u003c/a\u003e\u003c/li\u003e\n          \u003cli\u003e\u003ca href=\"#122-k8s-面世标准化跨厂商的-api结构和语义\" id=\"markdown-toc-122-k8s-面世标准化跨厂商的-api结构和语义\"\u003e1.2.2 K8s 面世：标准化、跨厂商的 API、结构和语义\u003c/a\u003e\u003c/li\u003e\n          \u003cli\u003e\u003ca href=\"#123-k8s-api-扩展crd\" id=\"markdown-toc-123-k8s-api-扩展crd\"\u003e1.2.3 K8s API 扩展：CRD\u003c/a\u003e\u003c/li\u003e\n        \u003c/ul\u003e\n      \u003c/li\u003e\n      \u003cli\u003e\u003ca href=\"#13-小结\" id=\"markdown-toc-13-小结\"\u003e1.3 小结\u003c/a\u003e\u003c/li\u003e\n    \u003c/ul\u003e\n  \u003c/li\u003e\n  \u003cli\u003e\u003ca href=\"#2-k8s-的-api-类型\" id=\"markdown-toc-2-k8s-的-api-类型\"\u003e2 K8s 的 API 类型\u003c/a\u003e    \u003cul\u003e\n      \u003cli\u003e\u003ca href=\"#21-标准-api针对内置资源类型\" id=\"markdown-toc-21-标准-api针对内置资源类型\"\u003e2.1 标准 API（针对内置资源类型）\u003c/a\u003e        \u003cul\u003e\n          \u003cli\u003e\u003ca href=\"#211-namespaced-类型\" id=\"markdown-toc-211-namespaced-类型\"\u003e2.1.1 Namespaced 类型\u003c/a\u003e\u003c/li\u003e\n          \u003cli\u003e\u003ca href=\"#212-un-namespaced-类型\" id=\"markdown-toc-212-un-namespaced-类型\"\u003e2.1.2 Un-namespaced 类型\u003c/a\u003e\u003c/li\u003e\n        \u003c/ul\u003e\n      \u003c/li\u003e\n      \u003cli\u003e\u003ca href=\"#22-扩展-apiapiextension\" id=\"markdown-toc-22-扩展-apiapiextension\"\u003e2.2 扩展 API（\u003ccode class=\"language-plaintext highlighter-rouge\"\u003eapiextension\u003c/code\u003e）\u003c/a\u003e        \u003cul\u003e\n          \u003cli\u003e\u003ca href=\"#221-namespaced-类型\" id=\"markdown-toc-221-namespaced-类型\"\u003e2.2.1 Namespaced 类型\u003c/a\u003e\u003c/li\u003e\n          \u003cli\u003e\u003ca href=\"#222-un-namespaced-类型\" id=\"markdown-toc-222-un-namespaced-类型\"\u003e2.2.2 Un-namespaced 类型\u003c/a\u003e\u003c/li\u003e\n        \u003c/ul\u003e\n      \u003c/li\u003e\n      \u003cli\u003e\u003ca href=\"#23-crd\" id=\"markdown-toc-23-crd\"\u003e2.3 CRD\u003c/a\u003e\u003c/li\u003e\n    \u003c/ul\u003e\n  \u003c/li\u003e\n  \u003cli\u003e\u003ca href=\"#3-直观类比k8s-是个数据库crd-是一张表api-是-sql\" id=\"markdown-toc-3-直观类比k8s-是个数据库crd-是一张表api-是-sql\"\u003e3 直观类比：K8s 是个数据库，CRD 是一张表，API 是 SQL\u003c/a\u003e    \u003cul\u003e\n      \u003cli\u003e\u003ca href=\"#31-k8s-是个数据库\" id=\"markdown-toc-31-k8s-是个数据库\"\u003e3.1 K8s 是个数据库\u003c/a\u003e\u003c/li\u003e\n      \u003cli\u003e\u003ca href=\"#32-crd-是一张表\" id=\"markdown-toc-32-crd-是一张表\"\u003e3.2 CRD 是一张表\u003c/a\u003e        \u003cul\u003e\n          \u003cli\u003e\u003ca href=\"#321-定义表结构crd-spec\" id=\"markdown-toc-321-定义表结构crd-spec\"\u003e3.2.1 定义表结构（CRD spec）\u003c/a\u003e\u003c/li\u003e\n          \u003cli\u003e\u003ca href=\"#322-测试cr-增删查改-vs-数据库-sql\" id=\"markdown-toc-322-测试cr-增删查改-vs-数据库-sql\"\u003e3.2.2 测试：CR 增删查改 vs. 数据库 SQL\u003c/a\u003e\u003c/li\u003e\n        \u003c/ul\u003e\n      \u003c/li\u003e\n      \u003cli\u003e\u003ca href=\"#33-api-是-sql\" id=\"markdown-toc-33-api-是-sql\"\u003e3.3 API 是 SQL\u003c/a\u003e\u003c/li\u003e\n    \u003c/ul\u003e\n  \u003c/li\u003e\n  \u003cli\u003e\u003ca href=\"#4-其他\" id=\"markdown-toc-4-其他\"\u003e4 其他\u003c/a\u003e    \u003cul\u003e\n      \u003cli\u003e\u003ca href=\"#41-给-cr-打标签label根据-label-过滤\" id=\"markdown-toc-41-给-cr-打标签label根据-label-过滤\"\u003e4.1 给 CR 打标签（label），根据 label 过滤\u003c/a\u003e\u003c/li\u003e\n      \u003cli\u003e\u003ca href=\"#42-k8s-api-与鉴权控制rbac\" id=\"markdown-toc-42-k8s-api-与鉴权控制rbac\"\u003e4.2 K8s API 与鉴权控制（RBAC）\u003c/a\u003e\u003c/li\u003e\n    \u003c/ul\u003e\n  \u003c/li\u003e\n  \u003cli\u003e\u003ca href=\"#参考资料\" id=\"markdown-toc-参考资料\"\u003e参考资料\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003chr/\u003e\n\n\u003ch1 id=\"1-k8s-的核心是其-api-框架而非容器\"\u003e1 K8s 的核心是其 API 框架而非容器\u003c/h1\u003e\n\n\u003ch2 id=\"11-容器是基础\"\u003e1.1 容器是基础\u003c/h2\u003e\n\n\u003cp\u003e时间回到 2013 年。当一条简单的 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003edocker run postgre\u003c/code\u003e 命令就能运行起 postgre 这样\n复杂的传统服务时，开发者在震惊之余犹如受到天启；以 docker 为代表的实用容器技术的\n横空出世，也预示着一扇通往敏捷基础设施的大门即将打开。此后，一切都在往好的方向迅速发展：\u003c/p\u003e\n\n\u003cul\u003e\n  \u003cli\u003e越来越多的开发者开始采用\u003cstrong\u003e\u003cmark\u003e容器作为一种标准构建和运行方式\u003c/mark\u003e\u003c/strong\u003e，\u003c/li\u003e\n  \u003cli\u003e业界也意识到，很容易将这种封装方式引入计算集群，通过\nKubernetes 或 Mesos 这样的编排器来调度计算任务 —— 自此，\u003cstrong\u003e\u003cmark\u003e容器便成为这些调度器最重要的 workload 类型\u003c/mark\u003e\u003c/strong\u003e。\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003e但本文将要说明，容器并非 Kubernetes 最重要、最有价值的地方，Kubernetes 也并非\n仅仅是一个更广泛意义上的 workload 调度器 —— 高效地调度不同类型的 workload 只是\nKubernetes 提供的一种重要价值，但并不是它成功的原因。\u003c/p\u003e\n\n\u003ch2 id=\"12-api-才是核心\"\u003e1.2 API 才是核心\u003c/h2\u003e\n\n\u003cp align=\"center\"\u003e\u003cimg src=\"/assets/img/k8s-is-about-apis/k8s-is-about-apis.jpeg\" width=\"60%\" height=\"60%\"/\u003e\u003c/p\u003e\n\n\u003cblockquote\u003e\n  \u003cp\u003e“等等 —— \u003cstrong\u003e\u003cmark\u003eK8s 只是一堆 API？\u003c/mark\u003e\u003c/strong\u003e”\u003c/p\u003e\n\n  \u003cp\u003e“不好意思，一直都是！”\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eK8s 的成功和价值在于，提供了一种标准的编程接口（API），可以用来编写和使用\n\u003cstrong\u003e\u003cmark\u003e软件定义的基础设施服务\u003c/mark\u003e\u003c/strong\u003e（本文所说的“基础设施”，\u003cstrong\u003e\u003cmark\u003e范围要大于 IAAS\u003c/mark\u003e\u003c/strong\u003e）：\u003c/p\u003e\n\n\u003cul\u003e\n  \u003cli\u003eSpecification + Implementation 构成一个完整的 API 框架 —— 用于设计、实现和使用\u003cstrong\u003e\u003cmark\u003e各种类型和规模的基础设施服务\u003c/mark\u003e\u003c/strong\u003e；\u003c/li\u003e\n  \u003cli\u003e这些 API 都基于相同的核心结构和语义：\u003cstrong\u003e\u003cmark\u003etyped resources watched and reconciled by controllers\u003c/mark\u003e\u003c/strong\u003e\n （资源按类型划分，控制器监听相应类型的资源，并将其实际 status 校准到 spec 里期望的状态）。\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003e为了进一步解释这一点，考虑下 Kubernetes 出现之前的场景。\u003c/p\u003e\n\n\u003ch3 id=\"121-k8s-之前各自造轮子封装厂商-api-差异\"\u003e1.2.1 K8s 之前：各自造轮子，封装厂商 API 差异\u003c/h3\u003e\n\n\u003cp\u003eK8s 之前，基础设施基本上是各种不同 API、格式和语义的“云”服务组成的大杂烩：\u003c/p\u003e\n\n\u003col\u003e\n  \u003cli\u003e云厂商只提供了计算实例、块存储、虚拟网络和对象存储等基础构建模块，开发者需要像拼图一样将它们拼出一个相对完整的基础设施方案；\u003c/li\u003e\n  \u003cli\u003e对于其他云厂商，重复过程 1，因为各家的 API、结构和语义并不相同，甚至差异很大。\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003cp\u003e虽然 Terraform 等工具的出现，提供了一种跨厂商的通用格式，但原始的结构和语义仍然\n是五花八门的，—— 针对 AWS 编写的 Terraform descriptor 是无法用到 Azure 的。\u003c/p\u003e\n\n\u003ch3 id=\"122-k8s-面世标准化跨厂商的-api结构和语义\"\u003e1.2.2 K8s 面世：标准化、跨厂商的 API、结构和语义\u003c/h3\u003e\n\n\u003cp\u003e现在再来看 Kubernetes 从一开始就提供的东西：描述各种资源需求的标准 API。例如，\u003c/p\u003e\n\n\u003cul\u003e\n  \u003cli\u003e描述 pod、container 等\u003cstrong\u003e\u003cmark\u003e计算需求\u003c/mark\u003e\u003c/strong\u003e 的 API；\u003c/li\u003e\n  \u003cli\u003e描述 service、ingress 等\u003cstrong\u003e\u003cmark\u003e虚拟网络功能\u003c/mark\u003e\u003c/strong\u003e 的 API；\u003c/li\u003e\n  \u003cli\u003e描述 volumes 之类的\u003cstrong\u003e\u003cmark\u003e持久存储\u003c/mark\u003e\u003c/strong\u003e 的 API；\u003c/li\u003e\n  \u003cli\u003e甚至还包括 service account 之类的\u003cstrong\u003e\u003cmark\u003e服务身份\u003c/mark\u003e\u003c/strong\u003e 的 API 等等。\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003e这些 API 是跨公有云/私有云和各家云厂商的，各云厂商会将 Kubernetes 结构和语义\n对接到它们各自的原生 API。\n因此我们可以说，Kubernetes 提供了一种\u003cstrong\u003e\u003cmark\u003e管理软件定义基础设施（也就是云）的标准接口\u003c/mark\u003e\u003c/strong\u003e。\n或者说，Kubernetes 是一个针对云服务（cloud services）的标准 API 框架。\u003c/p\u003e\n\n\u003ch3 id=\"123-k8s-api-扩展crd\"\u003e1.2.3 K8s API 扩展：CRD\u003c/h3\u003e\n\n\u003cp\u003e提供一套跨厂商的标准结构和语义来声明核心基础设施（pod/service/volume/serviceaccount/…），\n是 Kubernetes 成功的基础。在此基础上，它又通过 CRD（Custom Resource Definition），\n将这个结构\u003cstrong\u003e\u003cmark\u003e扩展到任何/所有基础设施资源\u003c/mark\u003e\u003c/strong\u003e。\u003c/p\u003e\n\n\u003cul\u003e\n  \u003cli\u003e\n    \u003cp\u003eCRD 在 1.7 引入，允许云厂商和开发者自己的服务复用 K8s 的 spec/impl 编程框架。\u003c/p\u003e\n\n    \u003cp\u003e有了 CRD，用户不仅能声明 Kubernetes API 预定义的计算、存储、网络服务，\n  还能声明数据库、task runner、消息总线、数字证书 … 任何云厂商能想到的东西！\u003c/p\u003e\n  \u003c/li\u003e\n  \u003cli\u003e\n    \u003cp\u003e\u003ca href=\"https://operatorframework.io/\"\u003eOperator Framework\u003c/a\u003e 以及 \u003ca href=\"https://github.com/kubernetes/community/tree/master/sig-api-machinery\"\u003eSIG API Machinery\u003c/a\u003e\n 等项目的出现，提供了方便地创建和管理这些 CRD 的工具，最小化用户工作量，最大程度实现标准化。\u003c/p\u003e\n  \u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003e例如，Crossplane 之类的项目，将厂商资源 RDS 数据库、SQS queue 资源映射到\nKubernetes API，就像核心 K8s controller 一样用自己的 controller 来管理网卡、磁盘等自定义资源。\nGoogle、RedHat 等 Kubernetes 发行商也在它们的基础 Kubernetes 发行版中包含越来越多的自定义资源类型。\u003c/p\u003e\n\n\u003ch2 id=\"13-小结\"\u003e1.3 小结\u003c/h2\u003e\n\n\u003cp\u003e我们说 Kubernetes 的核心是其 API 框架，但\u003cstrong\u003e\u003cmark\u003e并不是说这套 API 框架就是完美的\u003c/mark\u003e\u003c/strong\u003e。\n事实上，后一点并不是（非常）重要，因为 Kubernetes 模型已经成为一个事实标准：\n开发者理解它、大量工具主动与它对接、主流厂商也都已经原生支持它。用户认可度、互操作性\n经常比其他方面更能决定一个产品能否成功。\u003c/p\u003e\n\n\u003cp\u003e随着 Kubernetes 资源模型越来越广泛的传播，现在已经能够\n用一组 Kubernetes 资源来描述一整个\u003cstrong\u003e\u003cmark\u003e软件定义计算环境\u003c/mark\u003e\u003c/strong\u003e。\n就像用 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003edocker run\u003c/code\u003e 可以启动单个程序一样，用 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003ekubectl apply -f\u003c/code\u003e 就能部署和运行一个分布式应用，\n而无需关心是在私有云还是公有云以及具体哪家云厂商上，Kubernetes 的 API 框架已经屏蔽了这些细节。\u003c/p\u003e\n\n\u003cp\u003e因此，Kubernetes 并不是关于容器的，而是关于 API。\u003c/p\u003e\n\n\u003ch1 id=\"2-k8s-的-api-类型\"\u003e2 K8s 的 API 类型\u003c/h1\u003e\n\n\u003cp\u003e可以通过 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eGET/LIST/PUT/POST/DELETE\u003c/code\u003e 等 API 操作，来创建、查询、修改或删除集群中的资源。\n各 controller 监听到资源变化时，就会执行相应的 reconcile 逻辑，来使 status 与 spec 描述相符。\u003c/p\u003e\n\n\u003ch2 id=\"21-标准-api针对内置资源类型\"\u003e2.1 标准 API（针对内置资源类型）\u003c/h2\u003e\n\n\u003ch3 id=\"211-namespaced-类型\"\u003e2.1.1 Namespaced 类型\u003c/h3\u003e\n\n\u003cp\u003e这种类型的资源是区分 namespace，也就是可以用 namespace 来隔离。\n大部分内置资源都是这种类型，包括：\u003c/p\u003e\n\n\u003cul\u003e\n  \u003cli\u003epods\u003c/li\u003e\n  \u003cli\u003eservices\u003c/li\u003e\n  \u003cli\u003enetworkpolicies\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eAPI 格式：\u003c/p\u003e\n\n\u003cul\u003e\n  \u003cli\u003e格式：\u003cstrong\u003e\u003cmark\u003e\u003ccode\u003e/api/{version}/namespaces/{namespace}/{resource}\u003c/code\u003e\u003c/mark\u003e\u003c/strong\u003e\u003c/li\u003e\n  \u003cli\u003e举例：\u003ccode class=\"language-plaintext highlighter-rouge\"\u003e/api/v1/namespaces/default/pods\u003c/code\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch3 id=\"212-un-namespaced-类型\"\u003e2.1.2 Un-namespaced 类型\u003c/h3\u003e\n\n\u003cp\u003e这种类型的资源是全局的，\u003cstrong\u003e\u003cmark\u003e不能用 namespace 隔离\u003c/mark\u003e\u003c/strong\u003e，例如：\u003c/p\u003e\n\n\u003cul\u003e\n  \u003cli\u003enodes\u003c/li\u003e\n  \u003cli\u003eclusterroles (\u003ccode class=\"language-plaintext highlighter-rouge\"\u003eclusterxxx\u003c/code\u003e 一般都是，表示它是 cluster-scoped 的资源）\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eAPI 格式：\u003c/p\u003e\n\n\u003cul\u003e\n  \u003cli\u003e格式：\u003cstrong\u003e\u003cmark\u003e\u003ccode\u003e/api/{version}/{resource}\u003c/code\u003e\u003c/mark\u003e\u003c/strong\u003e\u003c/li\u003e\n  \u003cli\u003e举例：\u003ccode class=\"language-plaintext highlighter-rouge\"\u003e/api/v1/nodes\u003c/code\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2 id=\"22-扩展-apiapiextension\"\u003e2.2 扩展 API（\u003ccode class=\"language-plaintext highlighter-rouge\"\u003eapiextension\u003c/code\u003e）\u003c/h2\u003e\n\n\u003ch3 id=\"221-namespaced-类型\"\u003e2.2.1 Namespaced 类型\u003c/h3\u003e\n\n\u003cp\u003eAPI 格式：\u003c/p\u003e\n\n\u003cul\u003e\n  \u003cli\u003e格式：\u003cstrong\u003e\u003cmark\u003e\u003ccode\u003e/apis/{apiGroup}/{apiVersion}/namespaces/{namespace}/{resource}\u003c/code\u003e\u003c/mark\u003e\u003c/strong\u003e\u003c/li\u003e\n  \u003cli\u003e举例：\u003ccode class=\"language-plaintext highlighter-rouge\"\u003e/apis/cilium.io/v2/namespaces/kube-system/ciliumnetworkpolicies\u003c/code\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch3 id=\"222-un-namespaced-类型\"\u003e2.2.2 Un-namespaced 类型\u003c/h3\u003e\n\n\u003cp\u003e略。\u003c/p\u003e\n\n\u003ch2 id=\"23-crd\"\u003e2.3 CRD\u003c/h2\u003e\n\n\u003cp\u003e用户发现了 k8s 的强大之后，希望将越来越多的东西（数据）放到 k8s 里面，\n像内置的 Pod、Service、NetworkPolicy 一样来管理，因此出现了两个东西：\u003c/p\u003e\n\n\u003col\u003e\n  \u003cli\u003e\n    \u003cp\u003eCRD：用来声明用户的自定义资源，例如它是 namespace-scope 还是 cluster-scope\n  的资源、有哪些字段等等，\u003cstrong\u003e\u003cmark\u003eK8s 会自动根据这个定义生成相应的 API\u003c/mark\u003e\u003c/strong\u003e；\u003c/p\u003e\n\n    \u003cp\u003e官方文档的\u003ca href=\"https://kubernetes.io/docs/tasks/extend-kubernetes/custom-resources/custom-resource-definitions/#create-a-customresourcedefinition\"\u003e例子\u003c/a\u003e，\n 后文也将给出一个更简单和具体的例子。\u003c/p\u003e\n\n    \u003cp\u003eCRD 是资源类型定义，具体的资源叫 CR。\u003c/p\u003e\n  \u003c/li\u003e\n  \u003cli\u003e\n    \u003cp\u003eOperator 框架：“operator” 在这里的字面意思是\u003cstrong\u003e\u003cmark\u003e“承担运维任务的程序”\u003c/mark\u003e\u003c/strong\u003e，\n  它们的基本逻辑都是一样的：时刻盯着资源状态，一有变化马上作出反应（也就是 reconcile 逻辑）。\u003c/p\u003e\n  \u003c/li\u003e\n\u003c/ol\u003e\n\n\u003cp\u003e这就是扩展 API 的（最主要）声明和使用方式。\u003c/p\u003e\n\n\u003cp\u003e至此，我们讨论的都是一些比较抽象的东西，接下来通过一些例子和类比来更直观地理解一下。\u003c/p\u003e\n\n\u003ch1 id=\"3-直观类比k8s-是个数据库crd-是一张表api-是-sql\"\u003e3 直观类比：K8s 是个数据库，CRD 是一张表，API 是 SQL\u003c/h1\u003e\n\n\u003cp\u003e在本节中，我们将创建一个名为 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003efruit\u003c/code\u003e 的 CRD，它有 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003ename/sweet/weight\u003c/code\u003e 三个字段，\n完整 CRD 如下，\u003c/p\u003e\n\n\u003cdiv class=\"language-yaml highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"na\"\u003eapiVersion\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003eapiextensions.k8s.io/v1\u003c/span\u003e\n\u003cspan class=\"na\"\u003ekind\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003eCustomResourceDefinition\u003c/span\u003e\n\u003cspan class=\"na\"\u003emetadata\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e\n  \u003cspan class=\"na\"\u003ename\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003efruits.example.org\u003c/span\u003e        \u003cspan class=\"c1\"\u003e# CRD 名字\u003c/span\u003e\n\u003cspan class=\"na\"\u003espec\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e\n  \u003cspan class=\"na\"\u003econversion\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e\n    \u003cspan class=\"na\"\u003estrategy\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003eNone\u003c/span\u003e\n  \u003cspan class=\"na\"\u003egroup\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003eexample.org\u003c/span\u003e              \u003cspan class=\"c1\"\u003e# REST API: /apis/\u0026lt;group\u0026gt;/\u0026lt;version\u0026gt;\u003c/span\u003e\n  \u003cspan class=\"na\"\u003enames\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e\n    \u003cspan class=\"na\"\u003ekind\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003eFruit\u003c/span\u003e\n    \u003cspan class=\"na\"\u003elistKind\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003eFruitList\u003c/span\u003e\n    \u003cspan class=\"na\"\u003eplural\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003efruits\u003c/span\u003e\n    \u003cspan class=\"na\"\u003esingular\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003efruit\u003c/span\u003e\n  \u003cspan class=\"na\"\u003escope\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003eNamespaced\u003c/span\u003e               \u003cspan class=\"c1\"\u003e# Fruit 资源是区分 namespace 的\u003c/span\u003e\n  \u003cspan class=\"na\"\u003eversions\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e\n  \u003cspan class=\"pi\"\u003e-\u003c/span\u003e \u003cspan class=\"na\"\u003ename\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003ev1\u003c/span\u003e                      \u003cspan class=\"c1\"\u003e# REST API: /apis/\u0026lt;group\u0026gt;/\u0026lt;version\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"na\"\u003eschema\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e\n      \u003cspan class=\"na\"\u003eopenAPIV3Schema\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e\n        \u003cspan class=\"na\"\u003eproperties\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e\n          \u003cspan class=\"na\"\u003espec\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e\n            \u003cspan class=\"na\"\u003eproperties\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e\n              \u003cspan class=\"na\"\u003ecomment\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e            \u003cspan class=\"c1\"\u003e# 字段 1，表示备注\u003c/span\u003e\n                \u003cspan class=\"na\"\u003etype\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003estring\u003c/span\u003e\n              \u003cspan class=\"na\"\u003esweet\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e              \u003cspan class=\"c1\"\u003e# 字段 2，表示甜否\u003c/span\u003e\n                \u003cspan class=\"na\"\u003etype\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003eboolean\u003c/span\u003e\n              \u003cspan class=\"na\"\u003eweight\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e             \u003cspan class=\"c1\"\u003e# 字段 3，表示重量\u003c/span\u003e\n                \u003cspan class=\"na\"\u003etype\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003einteger\u003c/span\u003e\n            \u003cspan class=\"na\"\u003etype\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003eobject\u003c/span\u003e\n        \u003cspan class=\"na\"\u003etype\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003eobject\u003c/span\u003e\n    \u003cspan class=\"na\"\u003eserved\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"no\"\u003etrue\u003c/span\u003e                  \u003cspan class=\"c1\"\u003e# 启用这个版本的 API（v1）\u003c/span\u003e\n    \u003cspan class=\"na\"\u003estorage\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"no\"\u003etrue\u003c/span\u003e\n    \u003cspan class=\"na\"\u003eadditionalPrinterColumns\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e     \u003cspan class=\"c1\"\u003e# 可选项，配置了这些 printer columns 之后，\u003c/span\u003e\n    \u003cspan class=\"pi\"\u003e-\u003c/span\u003e \u003cspan class=\"na\"\u003ejsonPath\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003e.spec.sweet\u003c/span\u003e       \u003cspan class=\"c1\"\u003e# 命令行 k get \u0026lt;crd\u0026gt; \u0026lt;cr\u0026gt; 时，能够打印出下面这些字段，\u003c/span\u003e\n      \u003cspan class=\"na\"\u003ename\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003esweet\u003c/span\u003e                 \u003cspan class=\"c1\"\u003e# 否则，k8s 默认只打印 CRD 的 NAME 和 AGE\u003c/span\u003e\n      \u003cspan class=\"na\"\u003etype\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003eboolean\u003c/span\u003e\n    \u003cspan class=\"pi\"\u003e-\u003c/span\u003e \u003cspan class=\"na\"\u003ejsonPath\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003e.spec.weight\u003c/span\u003e\n      \u003cspan class=\"na\"\u003ename\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003eweight\u003c/span\u003e\n      \u003cspan class=\"na\"\u003etype\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003einteger\u003c/span\u003e\n    \u003cspan class=\"pi\"\u003e-\u003c/span\u003e \u003cspan class=\"na\"\u003ejsonPath\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003e.spec.comment\u003c/span\u003e\n      \u003cspan class=\"na\"\u003ename\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003ecomment\u003c/span\u003e\n      \u003cspan class=\"na\"\u003etype\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003estring\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e后面会解释每个 section 都是什么意思。在此之前，先来做几个（直观而粗糙的）类比。\u003c/p\u003e\n\n\u003ch2 id=\"31-k8s-是个数据库\"\u003e3.1 K8s 是个数据库\u003c/h2\u003e\n\n\u003cp\u003e像其他数据库技术一样，它有自己的持久存储引擎（etcd），以及构建在存储引擎之上的\n一套 API 和语义。这些语义允许用户创建、读取、更新和删除（CURD）数据库中的数据。\n下面是一些\u003cstrong\u003e\u003cmark\u003e概念对应关系\u003c/mark\u003e\u003c/strong\u003e：\u003c/p\u003e\n\n\u003ctable\u003e\n  \u003cthead\u003e\n    \u003ctr\u003e\n      \u003cth style=\"text-align: left\"\u003e关系型数据库\u003c/th\u003e\n      \u003cth style=\"text-align: left\"\u003eKubernetes (as a database)\u003c/th\u003e\n      \u003cth style=\"text-align: left\"\u003e说明\u003c/th\u003e\n    \u003c/tr\u003e\n  \u003c/thead\u003e\n  \u003ctbody\u003e\n    \u003ctr\u003e\n      \u003ctd style=\"text-align: left\"\u003e\u003ccode class=\"language-plaintext highlighter-rouge\"\u003eDATABASE\u003c/code\u003e\u003c/td\u003e\n      \u003ctd style=\"text-align: left\"\u003ecluster\u003c/td\u003e\n      \u003ctd style=\"text-align: left\"\u003e一套 K8s 集群就是一个 database 【注 1】\u003c/td\u003e\n    \u003c/tr\u003e\n    \u003ctr\u003e\n      \u003ctd style=\"text-align: left\"\u003e\u003ccode class=\"language-plaintext highlighter-rouge\"\u003eTABLE\u003c/code\u003e\u003c/td\u003e\n      \u003ctd style=\"text-align: left\"\u003e\u003ccode class=\"language-plaintext highlighter-rouge\"\u003eKind\u003c/code\u003e\u003c/td\u003e\n      \u003ctd style=\"text-align: left\"\u003e每种资源类型对应一个表；分为内置类型和扩展类型 【注 2】\u003c/td\u003e\n    \u003c/tr\u003e\n    \u003ctr\u003e\n      \u003ctd style=\"text-align: left\"\u003e\u003ccode class=\"language-plaintext highlighter-rouge\"\u003eCOLUMN\u003c/code\u003e\u003c/td\u003e\n      \u003ctd style=\"text-align: left\"\u003eproperty\u003c/td\u003e\n      \u003ctd style=\"text-align: left\"\u003e表里面的列，可以是 string、boolean 等类型\u003c/td\u003e\n    \u003c/tr\u003e\n    \u003ctr\u003e\n      \u003ctd style=\"text-align: left\"\u003erows\u003c/td\u003e\n      \u003ctd style=\"text-align: left\"\u003eresources\u003c/td\u003e\n      \u003ctd style=\"text-align: left\"\u003e表中的一个具体 record\u003c/td\u003e\n    \u003c/tr\u003e\n  \u003c/tbody\u003e\n\u003c/table\u003e\n\n\u003cblockquote\u003e\n  \u003cp\u003e【注 1】 如果只考虑 namespaced 资源的话，也可以说一个 namespace 对应一个 database。\u003c/p\u003e\n\n  \u003cp\u003e【注 2】 前面已经介绍过，\u003c/p\u003e\n\n  \u003cul\u003e\n    \u003cli\u003e内置 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eKind\u003c/code\u003e：Job、Service、Deployment、Event、NetworkPolicy、Secret、ConfigMap 等等；\u003c/li\u003e\n    \u003cli\u003e扩展 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eKind\u003c/code\u003e：各种 CRD，例如 CiliumNetworkPolicy。\u003c/li\u003e\n  \u003c/ul\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003e所以，和其他数据库一样，本质上 Kubernetes 所做的不过是以 schema 规定的格式来处理 records。\u003c/p\u003e\n\n\u003cp\u003e另外，Kubernetes 的表都有\u003cstrong\u003e\u003cmark\u003e自带文档\u003c/mark\u003e\u003c/strong\u003e：\u003c/p\u003e\n\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003e$ \u003c/span\u003ek explain fruits\nKIND:     Fruit\nVERSION:  example.org/v1\n\nDESCRIPTION:\n     \u0026lt;empty\u0026gt;\n\nFIELDS:\n   apiVersion   \u0026lt;string\u0026gt;\n     APIVersion defines the versioned schema of this representation of an\n     object. Servers should convert recognized schemas to the latest internal\n     value, and may reject unrecognized values. More info:\n     https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n   kind \u0026lt;string\u0026gt;\n     Kind is a string value representing the REST resource this object\n     represents. Servers may infer this from the endpoint the client submits\n     requests to. Cannot be updated. In CamelCase. More info:\n     https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n   metadata     \u0026lt;Object\u0026gt;\n     Standard object\u003cspan class=\"s1\"\u003e\u0026#39;s metadata. More info:\n     https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n   spec \u0026lt;Object\u0026gt;\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e另外，Kubernetes API 还有\u003cstrong\u003e\u003cmark\u003e两大特色\u003c/mark\u003e\u003c/strong\u003e：\u003c/p\u003e\n\n\u003col\u003e\n  \u003cli\u003e极其可扩展：声明 CRD 就会自动创建 API；\u003c/li\u003e\n  \u003cli\u003e支持事件驱动。\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003ch2 id=\"32-crd-是一张表\"\u003e3.2 CRD 是一张表\u003c/h2\u003e\n\n\u003cp\u003eCRD 和内置的 Pod、Service、NetworkPolicy 一样，不过是数据库的一张表。\n例如，前面给出的 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003efruit\u003c/code\u003e CRD，有 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003ename/sweet/weight\u003c/code\u003e 列，以及 “apple”, “banana” 等 entry，\u003c/p\u003e\n\n\u003cp align=\"center\"\u003e\u003cimg src=\"/assets/img/k8s-is-about-apis/table-vs-crd.png\" width=\"80%\" height=\"80%\"/\u003e\u003c/p\u003e\n\n\u003cp\u003e用户发现了 k8s 的强大，希望将越来越多的东西（数据）放到 k8s 里面来管理。数据类\n型显然多种多样的，不可能全部内置到 k8s 里。因此，一种方式就是允许用户创建自己的\n“表”，设置自己的“列” —— 这正是 CRD 的由来。\u003c/p\u003e\n\n\u003ch3 id=\"321-定义表结构crd-spec\"\u003e3.2.1 定义表结构（CRD spec）\u003c/h3\u003e\n\n\u003cp\u003eCRD（及 CR）描述格式可以是 YAML 或 JSON。CRD 的内容可以简单分为三部分：\u003c/p\u003e\n\n\u003col\u003e\n  \u003cli\u003e\n    \u003cp\u003e\u003cstrong\u003e\u003cmark\u003e常规 k8s metadata\u003c/mark\u003e\u003c/strong\u003e：每种 K8s 资源都需要声明的字段，包括 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eapiVersion\u003c/code\u003e、\u003ccode class=\"language-plaintext highlighter-rouge\"\u003ekind\u003c/code\u003e、\u003ccode class=\"language-plaintext highlighter-rouge\"\u003emetadata.name\u003c/code\u003e 等。\u003c/p\u003e\n\n    \u003cdiv class=\"language-yaml highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e \u003cspan class=\"na\"\u003eapiVersion\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003eapiextensions.k8s.io/v1\u003c/span\u003e\n \u003cspan class=\"na\"\u003ekind\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003eCustomResourceDefinition\u003c/span\u003e\n \u003cspan class=\"na\"\u003emetadata\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e\n   \u003cspan class=\"na\"\u003ename\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003efruits.example.org\u003c/span\u003e        \u003cspan class=\"c1\"\u003e# CRD 名字\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e    \u003c/div\u003e\n  \u003c/li\u003e\n  \u003cli\u003e\n    \u003cp\u003e\u003cstrong\u003e\u003cmark\u003eTable-level 信息\u003c/mark\u003e\u003c/strong\u003e：例如表的名字，最好用小写，方便以后命令行操作；\u003c/p\u003e\n\n    \u003cdiv class=\"language-yaml highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e \u003cspan class=\"na\"\u003espec\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e\n   \u003cspan class=\"na\"\u003econversion\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e\n     \u003cspan class=\"na\"\u003estrategy\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003eNone\u003c/span\u003e\n   \u003cspan class=\"na\"\u003egroup\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003eexample.org\u003c/span\u003e              \u003cspan class=\"c1\"\u003e# REST API: /apis/\u0026lt;group\u0026gt;/\u0026lt;version\u0026gt;\u003c/span\u003e\n   \u003cspan class=\"na\"\u003enames\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e\n     \u003cspan class=\"na\"\u003ekind\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003eFruit\u003c/span\u003e\n     \u003cspan class=\"na\"\u003elistKind\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003eFruitList\u003c/span\u003e\n     \u003cspan class=\"na\"\u003eplural\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003efruits\u003c/span\u003e\n     \u003cspan class=\"na\"\u003esingular\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003efruit\u003c/span\u003e\n   \u003cspan class=\"na\"\u003escope\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003eNamespaced\u003c/span\u003e               \u003cspan class=\"c1\"\u003e# Fruit 资源是区分 namespace 的\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e    \u003c/div\u003e\n  \u003c/li\u003e\n  \u003cli\u003e\n    \u003cp\u003e\u003cstrong\u003e\u003cmark\u003eColumn-level 信息\u003c/mark\u003e\u003c/strong\u003e：列名及类型等等，遵循 OpenAPISpecification v3 规范。\u003c/p\u003e\n\n    \u003cdiv class=\"language-yaml highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e   \u003cspan class=\"na\"\u003eversions\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e\n   \u003cspan class=\"pi\"\u003e-\u003c/span\u003e \u003cspan class=\"na\"\u003ename\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003ev1\u003c/span\u003e                      \u003cspan class=\"c1\"\u003e# REST API: /apis/\u0026lt;group\u0026gt;/\u0026lt;version\u0026gt;\u003c/span\u003e\n     \u003cspan class=\"na\"\u003eschema\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e\n       \u003cspan class=\"na\"\u003eopenAPIV3Schema\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e\n         \u003cspan class=\"na\"\u003eproperties\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e\n           \u003cspan class=\"na\"\u003espec\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e\n             \u003cspan class=\"na\"\u003eproperties\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e\n               \u003cspan class=\"na\"\u003ecomment\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e            \u003cspan class=\"c1\"\u003e# 字段 1，表示备注\u003c/span\u003e\n                 \u003cspan class=\"na\"\u003etype\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003estring\u003c/span\u003e\n               \u003cspan class=\"na\"\u003esweet\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e              \u003cspan class=\"c1\"\u003e# 字段 2，表示甜否\u003c/span\u003e\n                 \u003cspan class=\"na\"\u003etype\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003eboolean\u003c/span\u003e\n               \u003cspan class=\"na\"\u003eweight\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e             \u003cspan class=\"c1\"\u003e# 字段 3，表示重量\u003c/span\u003e\n                 \u003cspan class=\"na\"\u003etype\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003einteger\u003c/span\u003e\n             \u003cspan class=\"na\"\u003etype\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003eobject\u003c/span\u003e\n         \u003cspan class=\"na\"\u003etype\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003eobject\u003c/span\u003e\n     \u003cspan class=\"na\"\u003eserved\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"no\"\u003etrue\u003c/span\u003e                  \u003cspan class=\"c1\"\u003e# 启用这个版本的 API（v1）\u003c/span\u003e\n     \u003cspan class=\"na\"\u003estorage\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"no\"\u003etrue\u003c/span\u003e\n     \u003cspan class=\"na\"\u003eadditionalPrinterColumns\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e     \u003cspan class=\"c1\"\u003e# 可选项，配置了这些 printer columns 之后，\u003c/span\u003e\n     \u003cspan class=\"pi\"\u003e-\u003c/span\u003e \u003cspan class=\"na\"\u003ejsonPath\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003e.spec.sweet\u003c/span\u003e       \u003cspan class=\"c1\"\u003e# 命令行 k get \u0026lt;crd\u0026gt; \u0026lt;cr\u0026gt; 时，能够打印出下面这些字段，\u003c/span\u003e\n       \u003cspan class=\"na\"\u003ename\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003esweet\u003c/span\u003e                 \u003cspan class=\"c1\"\u003e# 否则，k8s 默认只打印 CRD 的 NAME 和 AGE\u003c/span\u003e\n       \u003cspan class=\"na\"\u003etype\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003eboolean\u003c/span\u003e\n     \u003cspan class=\"pi\"\u003e-\u003c/span\u003e \u003cspan class=\"na\"\u003ejsonPath\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003e.spec.weight\u003c/span\u003e\n       \u003cspan class=\"na\"\u003ename\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003eweight\u003c/span\u003e\n       \u003cspan class=\"na\"\u003etype\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003einteger\u003c/span\u003e\n     \u003cspan class=\"pi\"\u003e-\u003c/span\u003e \u003cspan class=\"na\"\u003ejsonPath\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003e.spec.comment\u003c/span\u003e\n       \u003cspan class=\"na\"\u003ename\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003ecomment\u003c/span\u003e\n       \u003cspan class=\"na\"\u003etype\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003estring\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e    \u003c/div\u003e\n  \u003c/li\u003e\n\u003c/ol\u003e\n\n\u003ch3 id=\"322-测试cr-增删查改-vs-数据库-sql\"\u003e3.2.2 测试：CR 增删查改 vs. 数据库 SQL\u003c/h3\u003e\n\n\u003col\u003e\n  \u003cli\u003e\n    \u003cp\u003e创建 CRD：这一步相当于 \u003cstrong\u003e\u003cmark\u003e\u003ccode\u003eCREATE TABLE fruits ...;\u003c/code\u003e\u003c/mark\u003e\u003c/strong\u003e，\u003c/p\u003e\n\n    \u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e \u003cspan class=\"nv\"\u003e$ \u003c/span\u003ekubectl create \u003cspan class=\"nt\"\u003e-f\u003c/span\u003e fruits-crd.yaml\n customresourcedefinition.apiextensions.k8s.io/fruits.example.org created\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e    \u003c/div\u003e\n  \u003c/li\u003e\n  \u003cli\u003e\n    \u003cp\u003e创建 CR：相当于 \u003cstrong\u003e\u003cmark\u003e\u003ccode\u003eINSERT INTO fruits values(...);\u003c/code\u003e\u003c/mark\u003e\u003c/strong\u003e，\u003c/p\u003e\n\n    \u003cp\u003e\u003ccode class=\"language-plaintext highlighter-rouge\"\u003eapple-cr.yaml\u003c/code\u003e：\u003c/p\u003e\n\n    \u003cdiv class=\"language-yaml highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e \u003cspan class=\"na\"\u003eapiVersion\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003eexample.org/v1\u003c/span\u003e\n \u003cspan class=\"na\"\u003ekind\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003eFruit\u003c/span\u003e\n \u003cspan class=\"na\"\u003emetadata\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e\n   \u003cspan class=\"na\"\u003ename\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003eapple\u003c/span\u003e\n \u003cspan class=\"na\"\u003espec\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e\n   \u003cspan class=\"na\"\u003esweet\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"no\"\u003efalse\u003c/span\u003e\n   \u003cspan class=\"na\"\u003eweight\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"m\"\u003e100\u003c/span\u003e\n   \u003cspan class=\"na\"\u003ecomment\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003elittle bit rotten\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e    \u003c/div\u003e\n\n    \u003cp\u003e\u003ccode class=\"language-plaintext highlighter-rouge\"\u003ebanana-cr.yaml\u003c/code\u003e：\u003c/p\u003e\n\n    \u003cdiv class=\"language-yaml highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e \u003cspan class=\"na\"\u003eapiVersion\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003eexample.org/v1\u003c/span\u003e\n \u003cspan class=\"na\"\u003ekind\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003eFruit\u003c/span\u003e\n \u003cspan class=\"na\"\u003emetadata\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e\n   \u003cspan class=\"na\"\u003ename\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003ebanana\u003c/span\u003e\n \u003cspan class=\"na\"\u003espec\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e\n   \u003cspan class=\"na\"\u003esweet\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"no\"\u003etrue\u003c/span\u003e\n   \u003cspan class=\"na\"\u003eweight\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"m\"\u003e80\u003c/span\u003e\n   \u003cspan class=\"na\"\u003ecomment\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003ejust bought\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e    \u003c/div\u003e\n\n    \u003cp\u003e创建：\u003c/p\u003e\n\n    \u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e \u003cspan class=\"nv\"\u003e$ \u003c/span\u003ekubectl create \u003cspan class=\"nt\"\u003e-f\u003c/span\u003e apple-cr.yaml\n fruit.example.org/apple created\n \u003cspan class=\"nv\"\u003e$ \u003c/span\u003ekubectl create \u003cspan class=\"nt\"\u003e-f\u003c/span\u003e banana-cr.yaml\n fruit.example.org/banana created\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e    \u003c/div\u003e\n  \u003c/li\u003e\n  \u003cli\u003e\n    \u003cp\u003e查询 CR：相当于 \u003cstrong\u003e\u003cmark\u003e\u003ccode\u003eSELECT * FROM fruits ... ;\u003c/code\u003e\u003c/mark\u003e\u003c/strong\u003e\n 或 \u003cstrong\u003e\u003cmark\u003e\u003ccode\u003eSELECT * FROM fruits WHERE name=\u0026#39;apple\u0026#39;;\u003c/code\u003e\u003c/mark\u003e\u003c/strong\u003e。\u003c/p\u003e\n\n    \u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e \u003cspan class=\"nv\"\u003e$ \u003c/span\u003ek get fruits.example.org \u003cspan class=\"c\"\u003e# or kubectl get fruits\u003c/span\u003e\n NAME     SWEET   WEIGHT   COMMENT\n apple    \u003cspan class=\"nb\"\u003efalse   \u003c/span\u003e100      little bit rotten\n banana   \u003cspan class=\"nb\"\u003etrue    \u003c/span\u003e80       just bought\n\n \u003cspan class=\"nv\"\u003e$ \u003c/span\u003ekubectl get fruits apple\n NAME    SWEET   WEIGHT   COMMENT\n apple   \u003cspan class=\"nb\"\u003efalse   \u003c/span\u003e100      little bit rotten\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e    \u003c/div\u003e\n  \u003c/li\u003e\n  \u003cli\u003e\n    \u003cp\u003e删除 CR：相当于 \u003cstrong\u003e\u003cmark\u003e\u003ccode\u003eDELETE FROM fruits WHERE name=\u0026#39;apple\u0026#39;;\u003c/code\u003e\u003c/mark\u003e\u003c/strong\u003e，\u003c/p\u003e\n\n    \u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e \u003cspan class=\"nv\"\u003e$ \u003c/span\u003ekubectl delete fruit apple\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e    \u003c/div\u003e\n  \u003c/li\u003e\n\u003c/ol\u003e\n\n\u003cp\u003e可以看到，CRD/CR 的操作都能对应到常规的数据库操作。\u003c/p\u003e\n\n\u003ch2 id=\"33-api-是-sql\"\u003e3.3 API 是 SQL\u003c/h2\u003e\n\n\u003cp\u003e上一节我们是通过 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003ekubectl\u003c/code\u003e 命令行来执行 CR 的增删查改，它其实只是一个外壳，内部\n调用的是 \u003cstrong\u003e\u003cmark\u003eKubernetes 为这个 CRD 自动生成的 API\u003c/mark\u003e\u003c/strong\u003e —— 所以\n又回到了本文第一节论述的内容：\u003cstrong\u003e\u003cmark\u003eK8s 的核心是其 API 框架\u003c/mark\u003e\u003c/strong\u003e。\u003c/p\u003e\n\n\u003cp\u003e只要在执行 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003ekubectl\u003c/code\u003e 命令时\u003cstrong\u003e\u003cmark\u003e指定一个足够大的 loglevel\u003c/mark\u003e\u003c/strong\u003e，就能看到\n背后的具体 API 请求。例如，\u003c/p\u003e\n\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003e$ \u003c/span\u003ekubectl create \u003cspan class=\"nt\"\u003e-v\u003c/span\u003e 10 \u003cspan class=\"nt\"\u003e-f\u003c/span\u003e apple-cr.yaml\n  ...\n  Request Body: \u003cspan class=\"o\"\u003e{\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;apiVersion\u0026#34;\u003c/span\u003e:\u003cspan class=\"s2\"\u003e\u0026#34;example.org/v1\u0026#34;\u003c/span\u003e,\u003cspan class=\"s2\"\u003e\u0026#34;kind\u0026#34;\u003c/span\u003e:\u003cspan class=\"s2\"\u003e\u0026#34;Fruit\u0026#34;\u003c/span\u003e,\u003cspan class=\"se\"\u003e\\\u0026#34;\u003c/span\u003espec\u003cspan class=\"se\"\u003e\\\u0026#34;\u003c/span\u003e:\u003cspan class=\"o\"\u003e{\u003c/span\u003e\u003cspan class=\"se\"\u003e\\\u0026#34;\u003c/span\u003ecomment\u003cspan class=\"se\"\u003e\\\u0026#34;\u003c/span\u003e:\u003cspan class=\"se\"\u003e\\\u0026#34;\u003c/span\u003elittle bit rotten\u003cspan class=\"se\"\u003e\\\u0026#34;\u003c/span\u003e,\u003cspan class=\"se\"\u003e\\\u0026#34;\u003c/span\u003esweet\u003cspan class=\"se\"\u003e\\\u0026#34;\u003c/span\u003e:false,\u003cspan class=\"se\"\u003e\\\u0026#34;\u003c/span\u003eweight\u003cspan class=\"se\"\u003e\\\u0026#34;\u003c/span\u003e:100\u003cspan class=\"o\"\u003e}}\u003c/span\u003e\u003cspan class=\"se\"\u003e\\n\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;},\u0026#34;\u003c/span\u003ename\u003cspan class=\"s2\"\u003e\u0026#34;:\u0026#34;\u003c/span\u003eapple\u003cspan class=\"s2\"\u003e\u0026#34;,\u0026#34;\u003c/span\u003enamespace\u003cspan class=\"s2\"\u003e\u0026#34;:\u0026#34;\u003c/span\u003edefault\u003cspan class=\"s2\"\u003e\u0026#34;},\u0026#34;\u003c/span\u003espec\u003cspan class=\"s2\"\u003e\u0026#34;:{\u0026#34;\u003c/span\u003ecomment\u003cspan class=\"s2\"\u003e\u0026#34;:\u0026#34;\u003c/span\u003elittle bit rotten\u003cspan class=\"s2\"\u003e\u0026#34;,\u0026#34;\u003c/span\u003esweet\u003cspan class=\"s2\"\u003e\u0026#34;:false,\u0026#34;\u003c/span\u003eweight\u003cspan class=\"s2\"\u003e\u0026#34;:100}}\n  curl -k -v -XPOST \u0026#39;https://127.0.0.1:6443/apis/example.org/v1/namespaces/default/fruits?fieldManager=kubectl-client-side-apply\u0026#39;\n  POST https://127.0.0.1:6443/apis/example.org/v1/namespaces/default/fruits?fieldManager=kubectl-client-side-apply 201 Created in 25 milliseconds\n  ...\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003ch1 id=\"4-其他\"\u003e4 其他\u003c/h1\u003e\n\n\u003ch2 id=\"41-给-cr-打标签label根据-label-过滤\"\u003e4.1 给 CR 打标签（label），根据 label 过滤\u003c/h2\u003e\n\n\u003cp\u003e和内置资源类型一样，K8s 支持对 CR 打标签，然后根据标签做过滤：\u003c/p\u003e\n\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"c\"\u003e# 查看所有 frutis\u003c/span\u003e\n\u003cspan class=\"nv\"\u003e$ \u003c/span\u003ek get fruits\nNAME     SWEET   WEIGHT   COMMENT\napple    \u003cspan class=\"nb\"\u003efalse   \u003c/span\u003e100      little bit rotten\nbanana   \u003cspan class=\"nb\"\u003etrue    \u003c/span\u003e80       just bought\n\n\u003cspan class=\"c\"\u003e# 给 banana 打上一个特殊新标签\u003c/span\u003e\n\u003cspan class=\"nv\"\u003e$ \u003c/span\u003ek label fruits banana tastes-good\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"nb\"\u003etrue\n\u003c/span\u003efruit.example.org/banana labeled\n\n\u003cspan class=\"c\"\u003e# 按标签筛选 CR\u003c/span\u003e\n\u003cspan class=\"nv\"\u003e$ \u003c/span\u003ek get fruits \u003cspan class=\"nt\"\u003e-l\u003c/span\u003e tastes-good\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"nb\"\u003etrue\n\u003c/span\u003eNAME     SWEET   WEIGHT   COMMENT\nbanana   \u003cspan class=\"nb\"\u003etrue    \u003c/span\u003e80       just bought\n\n\u003cspan class=\"c\"\u003e# 删除 label\u003c/span\u003e\n\u003cspan class=\"nv\"\u003e$ \u003c/span\u003ek label fruits banana tastes-good-\nfruit.example.org/banana labeled\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003ch2 id=\"42-k8s-api-与鉴权控制rbac\"\u003e4.2 K8s API 与鉴权控制（RBAC）\u003c/h2\u003e\n\n\u003cp\u003e不管是内置 API，还是扩展 API，都能用 K8s 强大的 RBAC 来做鉴权控制。\u003c/p\u003e\n\n\u003cp\u003e关于如何使用 RBAC 网上已经有大量文档；但如果想了解其设计，可参考\n\u003ca href=\"/blog/cracking-k8s-authz-rbac/\"\u003eCracking Kubernetes RBAC Authorization Model\u003c/a\u003e，\n它展示了如何从零开始设计出一个 RBAC 鉴权模型（假设 K8s 里还没有）。\u003c/p\u003e\n\n\u003ch1 id=\"参考资料\"\u003e参考资料\u003c/h1\u003e\n\n\u003col\u003e\n  \u003cli\u003e\u003ca href=\"https://blog.joshgav.com/2021/12/16/kubernetes-isnt-about-containers.html\"\u003eKubernetes isn’t about containers\u003c/a\u003e，2021\u003c/li\u003e\n  \u003cli\u003e\u003ca href=\"https://github.com/gotopple/k8s-for-users-intro/blob/master/database.md\"\u003eKubernetes is a Database\u003c/a\u003e, 2019\u003c/li\u003e\n  \u003cli\u003e\u003ca href=\"https://itnext.io/crd-is-just-a-table-in-kubernetes-13e15367bbe4\"\u003eCRD is just a table in Kubernetes\u003c/a\u003e, 2020\u003c/li\u003e\n  \u003cli\u003e\u003ca href=\"/blog/cracking-k8s-authz-rbac/\"\u003eCracking Kubernetes RBAC Authorization Model\u003c/a\u003e, 2022\u003c/li\u003e\n\u003c/ol\u003e\n\n\n  \u003c!-- POST NAVIGATION --\u003e\n  \u003cdiv class=\"postNav clearfix\"\u003e\n     \n      \u003ca class=\"prev\" href=\"/blog/k8s-reliability-list-data-zh/\"\u003e\u003cspan\u003e« K8s 集群稳定性：LIST 请求源码分析、性能评估与大规模基础服务部署调优\u003c/span\u003e\n      \n    \u003c/a\u003e\n      \n      \n      \u003ca class=\"next\" href=\"/blog/linux-irq-softirq-zh/\"\u003e\u003cspan\u003eLinux 中断（IRQ/softirq）基础：原理及内核实现（2022） »\u003c/span\u003e\n       \n      \u003c/a\u003e\n     \n  \u003c/div\u003e\n\u003c/div\u003e",
  "Date": "2022-06-04T00:00:00Z",
  "Author": "Arthur Chiao"
}