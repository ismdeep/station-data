{
  "Source": "arthurchiao.art",
  "Title": "Cilium Code Walk Through: Add Network Policy",
  "Link": "https://arthurchiao.art/blog/cilium-code-add-network-policy/",
  "Content": "\u003cdiv class=\"post\"\u003e\n  \n  \u003ch1 class=\"postTitle\"\u003eCilium Code Walk Through: Add Network Policy\u003c/h1\u003e\n  \u003cp class=\"meta\"\u003ePublished at 2020-07-03 | Last Update 2022-09-13\u003c/p\u003e\n  \n  \u003cp\u003eThis post is included in\n\u003ca href=\"/blog/cilium-code-series/\"\u003eCilium Code Walk Through Series\u003c/a\u003e.\u003c/p\u003e\n\n\u003cp\u003eThis post walks you through the network policy enforcement process. Code based\non Cilium \u003ccode class=\"language-plaintext highlighter-rouge\"\u003e1.8.0/1.10.7\u003c/code\u003e.\u003c/p\u003e\n\n\u003cp\u003eNOTE: this post is not well organized yet, posted mainly to memorize the calling stack.\u003c/p\u003e\n\n\u003chr/\u003e\n\n\u003cul id=\"markdown-toc\"\u003e\n  \u003cli\u003e\u003ca href=\"#1-call-stack-start-from-policyadd\" id=\"markdown-toc-1-call-stack-start-from-policyadd\"\u003e1 Call stack: start from \u003ccode class=\"language-plaintext highlighter-rouge\"\u003epolicyAdd()\u003c/code\u003e\u003c/a\u003e    \u003cul\u003e\n      \u003cli\u003e\u003ca href=\"#11-triggerfunc-policyupdatetrigger\" id=\"markdown-toc-11-triggerfunc-policyupdatetrigger\"\u003e1.1 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eTriggerFunc\u003c/code\u003e: \u003ccode class=\"language-plaintext highlighter-rouge\"\u003epolicyUpdateTrigger\u003c/code\u003e\u003c/a\u003e\u003c/li\u003e\n      \u003cli\u003e\u003ca href=\"#12-triggerfunc-datapathregen\" id=\"markdown-toc-12-triggerfunc-datapathregen\"\u003e1.2 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eTriggerFunc\u003c/code\u003e: \u003ccode class=\"language-plaintext highlighter-rouge\"\u003edatapathRegen\u003c/code\u003e\u003c/a\u003e\u003c/li\u003e\n      \u003cli\u003e\u003ca href=\"#13-add-an-allow-policy\" id=\"markdown-toc-13-add-an-allow-policy\"\u003e1.3 Add an \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eallow\u003c/code\u003e policy\u003c/a\u003e\u003c/li\u003e\n      \u003cli\u003e\u003ca href=\"#14-endpointregenerationeventhandle\" id=\"markdown-toc-14-endpointregenerationeventhandle\"\u003e1.4 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eEndpointRegenerationEvent.Handle()\u003c/code\u003e\u003c/a\u003e\u003c/li\u003e\n    \u003c/ul\u003e\n  \u003c/li\u003e\n  \u003cli\u003e\u003ca href=\"#2-l7-policy-addnewredirects\" id=\"markdown-toc-2-l7-policy-addnewredirects\"\u003e2 L7 policy: \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eaddNewRedirects()\u003c/code\u003e\u003c/a\u003e\u003c/li\u003e\n  \u003cli\u003e\u003ca href=\"#3-l7-policy-kafka\" id=\"markdown-toc-3-l7-policy-kafka\"\u003e3 L7 policy: Kafka\u003c/a\u003e\u003c/li\u003e\n  \u003cli\u003e\u003ca href=\"#4-policy-calc\" id=\"markdown-toc-4-policy-calc\"\u003e4 policy calc\u003c/a\u003e\u003c/li\u003e\n  \u003cli\u003e\u003ca href=\"#5-policy-distill\" id=\"markdown-toc-5-policy-distill\"\u003e5 Policy Distill\u003c/a\u003e\u003c/li\u003e\n  \u003cli\u003e\u003ca href=\"#6-skip-duplicated-labels\" id=\"markdown-toc-6-skip-duplicated-labels\"\u003e6 Skip duplicated labels\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003chr/\u003e\n\n\u003ch1 id=\"1-call-stack-start-from-policyadd\"\u003e1 Call stack: start from \u003ccode class=\"language-plaintext highlighter-rouge\"\u003epolicyAdd()\u003c/code\u003e\u003c/h1\u003e\n\n\u003cdiv class=\"language-plaintext highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003epolicyAdd                                                  // daemon/policy.go\n  |-log.Info(\u0026#34;Policy imported via API, recalculating...\u0026#34;)\n  |-d.policy.AddListLocked(sourceRules)\n  |   |-d.policy.AddListLocked(sourceRules)\n  |       |-p.rules = append(p.rules, newList...)\n  |       |-return newList, newRevsion\n  |\n  |-if Config.SelectiveRegeneration // default true\n  |   ev := eventqueue.NewEvent()\n  |   d.policy.RuleReactionQueue.Enqueue(ev)\n  |-else\n      TriggerPolicyUpdates                                 // daemon/policy.go\n        |-TriggerWithReason                                // pkg/trigger/trigger.go\n           |- t.wakeupChan \u0026lt;- true                         // pkg/trigger/trigger.go\n                /\\\n                ||\n                \\/\n        func (t *Trigger) waiter()                         // pkg/trigger/trigger.go\n\t\t  t.params.TriggerFunc(reasons)\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003ch2 id=\"11-triggerfunc-policyupdatetrigger\"\u003e1.1 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eTriggerFunc\u003c/code\u003e: \u003ccode class=\"language-plaintext highlighter-rouge\"\u003epolicyUpdateTrigger\u003c/code\u003e\u003c/h2\u003e\n\n\u003cdiv class=\"language-plaintext highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e        func (t *Trigger) waiter()                         // pkg/trigger/trigger.go\n\t\t  t.params.TriggerFunc(reasons)\n                   /\n                  /\n   policyUpdateTrigger                                     // daemon/policy.go\n\t |-meta := \u0026amp;regeneration.ExternalRegenerationMetadata{\n\t |   RegenerationLevel: RegenerateWithoutDatapath,\n\t | }\n     |-RegenerateAllEndpoints(meta)                        // pkg/endpointmanager/manager.go\n         for ep in eps:\n           RegenerateIfAlive(meta)                         // pkg/endpoint/policy.go\n             |-Regenerate(meta)                            // pkg/endpoint/policy.go\n               |- eventqueue.NewEvent(meta)\n                  eventQueue.Enqueue()                     // pkg/eventqueue/eventqueue.go\n                              /\\\n                              ||\n                              \\/\n                  eventQueue.Run()                         // pkg/eventqueue/eventqueue.go\n                    for ev in events:\n                       ev.Metadata.Handle()\n                                    |\n         EndpointRegenerationEvent.Handle                  // pkg/endpoint/events.go\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003ch2 id=\"12-triggerfunc-datapathregen\"\u003e1.2 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eTriggerFunc\u003c/code\u003e: \u003ccode class=\"language-plaintext highlighter-rouge\"\u003edatapathRegen\u003c/code\u003e\u003c/h2\u003e\n\n\u003cdiv class=\"language-plaintext highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e        func (t *Trigger) waiter()                         // pkg/trigger/trigger.go\n\t\t  t.params.TriggerFunc(reasons)\n                   /\n                  /\n   datapathRegen\n\t |-meta := \u0026amp;regeneration.ExternalRegenerationMetadata{\n\t |   RegenerationLevel: RegenerateWithDatapathRewrite,\n\t | }\n     |-RegenerateAllEndpoints(meta)\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003ch2 id=\"13-add-an-allow-policy\"\u003e1.3 Add an \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eallow\u003c/code\u003e policy\u003c/h2\u003e\n\n\u003cp\u003eAdd an \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eallow\u003c/code\u003e policy: several places will call into the \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eAllow()\u003c/code\u003e method in the end:\u003c/p\u003e\n\n\u003cdiv class=\"language-plaintext highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e// case 1\nupdateSelectorCacheFQDNs  // daemon/cmd/fqdn.go\n |-UpdatePolicyMaps  // pkg/endpointmanager/\n   |-ApplyPolicyMapChanges\n     |-applyPolicyMapChanges\n       |-addPolicyKey // pkg/endpoint/bpf.go\n         |-AllowKey\n            |-Allow\n\n// case 2\nsyncPolicyMapController(1min, \u0026#34;sync-policymap-\u0026lt;ep id\u0026gt;\u0026#34;) // pkg/endpoint/bpf.go\n |-syncPolicyMapWithDump\n    |-applyPolicyMapChanges\n      |-addPolicyKey // pkg/endpoint/bpf.go\n         |-AllowKey\n            |-Allow\n\n// case 3\nregenerateBPF                   // pkg/endpoint/bpf.go\n |-syncPolicyMap\n    |-applyPolicyMapChanges\n    | |-addPolicyKey            // pkg/endpoint/bpf.go\n    |    |-AllowKey\n    |        |-Allow\n    |-syncDesiredPolicyMapWith\n      |-addPolicyKey // pkg/endpoint/bpf.go\n         |-AllowKey\n             |-Allow\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003ch2 id=\"14-endpointregenerationeventhandle\"\u003e1.4 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eEndpointRegenerationEvent.Handle()\u003c/code\u003e\u003c/h2\u003e\n\n\u003cdiv class=\"language-plaintext highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003eEndpointRegenerationEvent.Handle                                              //    pkg/endpoint/events.go\n  |-regenerate(ctx)                                                           //    pkg/endpoint/policy.go\n    |-if e.skippedRegenerationLevel \u0026gt; ctx.regenerationLevel\n    |   ctx.regenerationLevel = skippedRegenerationLevel\n    |-regenerateBPF                                                           //    pkg/endpoint/bpf.go\n       |-runPreCompilationSteps                                               //    pkg/endpoint/bpf.go\n       |  |-regeneratePolicy                                                  //    pkg/endpoint/policy.go\n       |  |  |-UpdatePolicy                                                   //    pkg/policy/distillery.go\n       |  |  |  |-cache.updateSelectorPolicy                                  //    pkg/policy/distillery.go\n       |  |  |     |-cip = cache.policies[identity.ID]                        //    pkg/policy/distillery.go\n       |  |  |     |-resolvePolicyLocked                                      // -\u0026gt; pkg/policy/repository.go\n       |  |  |     |  |-matchingRules.resolveL4IngressPolicy                  //    pkg/policy/repository.go\n       |  |  |     |  |-p.rules.resolveL4IngressPolicy                        //    pkg/policy/rules.go\n       |  |  |     |     |-resolveIngressPolicy                               // -\u0026gt; pkg/policy/rule.go\n       |  |  |     |        |-GetSourceEndpointSelectorsWithRequirements      // -\u0026gt; pkg/policy/api/ingress.go\n       |  |  |     |        |-mergeIngress                                    //    pkg/policy/rule.go\n       |  |  |     |           |-mergeIngressPortProto         // L3-only rule\n       |  |  |     |           |-toPorts.Iterate(func(ports) { // L4/L7 rule\n       |  |  |     |               for p := range GetPortProtocols() {\n       |  |  |     |                 mergeIngressPortProto(TCP/UDP/...)\n       |  |  |     |                   |-createL4IngressFilter\n       |  |  |     |                   |-addL4Filter(ruleLabels)\n       |  |  |     |                       |-mergePortProto\n       |  |  |     |                       |-if ruleLabels in existingRuleLabels\n       |  |  |     |                       |    exists = true\n       |  |  |     |                       |-if !exists:\n       |  |  |     |                       |    existingFilter.DerivedFromRules.append(ruleLabels)\n       |  |  |     |               }\n       |  |  |     |-cip.setPolicy(selPolicy)                                 //    pkg/policy/distillery.go\n       |  |  |-e.selectorPolicy.Consume                                       //    pkg/policy/distillery.go\n       |  |     |-if !IngressPolicyEnabled || !EgressPolicyEnabled\n       |  |     |  |-AllowAllIdentities(!IngressPolicyEnabled, !EgressPolicyEnabled)\n       |  |     |-DistillPolicy                                               //    pkg/policy/resolve.go\n       |  |        |-computeDesiredL4PolicyMapEntries                         //    pkg/policy/resolve.go\n       |  |           |-computeDirectionL4PolicyMapEntries                    //    pkg/policy/resolve.go\n       |  |-updateNetworkPolicy                                               //    pkg/endpoint/policy.go\n       |  |  |-e.proxy.UpdateNetworkPolicy                                    //    pkg/proxy/proxy.go\n       |  |      |-p.XDSServer.UpdateNetworkPolicy                            //    pkg/envoy/server.go\n       |  |-addNewRedirects                                                   //    pkg/endpoint/bpf.go\n       |  |  |-addNewRedirectsFromDesiredPolicy                               //    pkg/endpoint/bpf.go\n       |  |     |-updateProxyRedirect                                         //    pkg/endpoint/proxy.go\n       |  |        |-e.proxy.CreateOrUpdateRedirect                           //    pkg/proxy/proxy.go\n       |  |          |-redir := newRedirect()                                 //    pkg/proxy/redirect.go\n       |  |            switch l4.L7Parser:\n       |  |              case DNS  : createDNSRedirect\n       |  |              case Kafka: createKafkaRedirect                      // pkg/proxy/kafka.go\n       |  |                           |-listener := kafkaListeners[proxyPort]\n       |  |                           |-listenSocket()                        // pkg/proxy/kafka.go\n       |  |                           |-go listener.Listen()                  // pkg/proxy/kafka.go\n       |  |                                /\n       |  |                               /\n       |  |                  func (l *kafkaListener) Listen() {               // pkg/proxy/kafka.go\n       |  |                    for {\n       |  |                      pair := l.socket.Accept(true)\n       |  |                      go redir.handleRequestConnection(pair)\n       |  |                          |-k.handleRequests(handler)              // pkg/proxy/kafka.go\n       |  |                              |-for {\n       |  |                                  req := kafka.ReadRequest(c.conn)\n       |  |                                  handler(pair, req ...)\n       |  |                                   |-handleRequest                 // pkg/proxy/kafka.go\n       |  |                                      |-if !k.canAccess\n       |  |                                           req.CreateResponse(ErrTopicAuthorizationFailed)\n       |  |                                           return\n       |  |                                        pair.Rx.Enqueue(resp)\n       |  |                                        correlationCache.HandleRequest // pkg/kafka/correlation_cache.go\n       |  |                                        pair.Tx.Enqueue(req)\n       |  |                                }\n       |  |                    }\n       |  |                  }\n       |  |              case HTTP : createEnvoyRedirect\n       |  |              default   : createEnvoyRedirect\n       |  |-removeOldRedirects                                                //    pkg/endpoint/bpf.go\n       |  |-writeHeaderfile(nextDir)                                          //    pkg/endpoint/bpf.go\n       |  |-createEpInfoCache                                                 // -\u0026gt; pkg/endpoint/cache.go\n       |-realizeBPFState\n       |-eppolicymap.WriteEndpoint\n       |-lxcmap.WriteEndpoint\n       |-waitForProxyCompletions\n       |-syncPolicyMap()\n          |-applyPolicyMapChanges\n          |  |-addPolicyKey                                                    // pkg/endpoint/bpf.go\n          |     |-AllowKey\n          |        |-Allow\n          |\n          |-syncDesiredPolicyMapWith\n             |-addPolicyKey                                                    // pkg/endpoint/bpf.go\n                |-AllowKey\n                   |-Allow\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003ch1 id=\"2-l7-policy-addnewredirects\"\u003e2 L7 policy: \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eaddNewRedirects()\u003c/code\u003e\u003c/h1\u003e\n\n\u003cdiv class=\"language-go highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"c\"\u003e// adding an l7 redirect for the specified policy.\u003c/span\u003e\n\u003cspan class=\"c\"\u003e// The returned map contains the exact set of IDs of proxy redirects that is\u003c/span\u003e\n\u003cspan class=\"c\"\u003e// required to implement the given L4 policy.\u003c/span\u003e\n\u003cspan class=\"k\"\u003efunc\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ee\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003eEndpoint\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"n\"\u003eaddNewRedirects\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eproxyWaitGroup\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003ecompletion\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eWaitGroup\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003emap\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"kt\"\u003estring\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\u003cspan class=\"kt\"\u003ebool\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"o\"\u003e...\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\t\u003cspan class=\"n\"\u003edesiredRedirects\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nb\"\u003emake\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003emap\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"kt\"\u003estring\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\u003cspan class=\"kt\"\u003ebool\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\n\t\u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"n\"\u003edirLogStr\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eingress\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"k\"\u003erange\u003c/span\u003e \u003cspan class=\"k\"\u003emap\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"kt\"\u003estring\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\u003cspan class=\"kt\"\u003ebool\u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;ingress\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"no\"\u003etrue\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;egress\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"no\"\u003efalse\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\t\t\u003cspan class=\"n\"\u003ee\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eaddNewRedirectsFromDesiredPolicy\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eingress\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003edesiredRedirects\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eproxyWaitGroup\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\n\t\t\u003cspan class=\"n\"\u003ee\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eaddVisibilityRedirects\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eingress\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003edesiredRedirects\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eproxyWaitGroup\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\t\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\t\u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003edesiredRedirects\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"no\"\u003enil\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"o\"\u003e...\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cdiv class=\"language-go highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003efunc\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ee\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003eEndpoint\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"n\"\u003eaddNewRedirectsFromDesiredPolicy\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eingress\u003c/span\u003e \u003cspan class=\"kt\"\u003ebool\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003edesiredRedirects\u003c/span\u003e \u003cspan class=\"o\"\u003e...\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"kt\"\u003eerror\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"o\"\u003e...\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\t\u003cspan class=\"k\"\u003evar\u003c/span\u003e \u003cspan class=\"n\"\u003em\u003c/span\u003e \u003cspan class=\"n\"\u003epolicy\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eL4PolicyMap\u003c/span\u003e\n\n\t\u003cspan class=\"n\"\u003em\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eingress\u003c/span\u003e\u003cspan class=\"err\"\u003e?\u003c/span\u003e \u003cspan class=\"n\"\u003ee\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003edesiredPolicy\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eL4Policy\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eIngress\u003c/span\u003e \u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003eEgress\u003c/span\u003e\n\t\u003cspan class=\"n\"\u003einsertedDesiredMapState\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nb\"\u003emake\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003emap\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003epolicy\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eKey\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\u003cspan class=\"k\"\u003estruct\u003c/span\u003e\u003cspan class=\"p\"\u003e{})\u003c/span\u003e\n\t\u003cspan class=\"n\"\u003eupdatedDesiredMapState\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nb\"\u003emake\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003epolicy\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eMapState\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\n\t\u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"n\"\u003e_\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003el4\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"k\"\u003erange\u003c/span\u003e \u003cspan class=\"n\"\u003em\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\t\t\u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"n\"\u003el4\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eIsRedirect\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\t\t\t\u003cspan class=\"k\"\u003evar\u003c/span\u003e \u003cspan class=\"n\"\u003eredirectPort\u003c/span\u003e \u003cspan class=\"kt\"\u003euint16\u003c/span\u003e\n\n\t\t\t\u003cspan class=\"c\"\u003e// Only create a redirect if the proxy is NOT running in a sidecar\u003c/span\u003e\n\t\t\t\u003cspan class=\"c\"\u003e// container. If running in a sidecar container, just allow traffic\u003c/span\u003e\n\t\t\t\u003cspan class=\"c\"\u003e// to the port at L4 by setting the proxy port to 0.\u003c/span\u003e\n\t\t\t\u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"o\"\u003e!\u003c/span\u003e\u003cspan class=\"n\"\u003ee\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ehasSidecarProxy\u003c/span\u003e \u003cspan class=\"o\"\u003e||\u003c/span\u003e \u003cspan class=\"n\"\u003el4\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eL7Parser\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"n\"\u003epolicy\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eParserTypeHTTP\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\t\t\t\t\u003cspan class=\"n\"\u003ee\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eupdateProxyRedirect\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003el4\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eproxyWaitGroup\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\n\t\t\t\t\u003cspan class=\"n\"\u003eproxyID\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"n\"\u003ee\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eProxyID\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003el4\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\t\t\t\t\u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"n\"\u003ee\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003erealizedRedirects\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"no\"\u003enil\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\t\t\t\t\t\u003cspan class=\"n\"\u003ee\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003erealizedRedirects\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nb\"\u003emake\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003emap\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"kt\"\u003estring\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\u003cspan class=\"kt\"\u003euint16\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\t\t\t\t\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\t\t\t\t\u003cspan class=\"n\"\u003ee\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003erealizedRedirects\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003eproxyID\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eredirectPort\u003c/span\u003e\n\n\t\t\t\t\u003cspan class=\"n\"\u003edesiredRedirects\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003eproxyID\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"no\"\u003etrue\u003c/span\u003e\n\t\t\t\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\t\t\t\u003cspan class=\"c\"\u003e// Set the proxy port in the policy map.\u003c/span\u003e\n\t\t\t\u003cspan class=\"n\"\u003edirection\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003el4\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eIngress\u003c/span\u003e\u003cspan class=\"err\"\u003e?\u003c/span\u003e \u003cspan class=\"n\"\u003etrafficdirection\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eIngress\u003c/span\u003e \u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003eEgress\u003c/span\u003e\n\t\t\t\u003cspan class=\"n\"\u003ekeysFromFilter\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"n\"\u003el4\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eToMapState\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003edirection\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\n\t\t\t\u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"n\"\u003ekeyFromFilter\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eentry\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"k\"\u003erange\u003c/span\u003e \u003cspan class=\"n\"\u003ekeysFromFilter\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\t\t\t\t\u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"n\"\u003eoldEntry\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eok\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"n\"\u003ee\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003edesiredPolicy\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ePolicyMapState\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003ekeyFromFilter\u003c/span\u003e\u003cspan class=\"p\"\u003e];\u003c/span\u003e \u003cspan class=\"n\"\u003eok\u003c/span\u003e\n\t\t\t\t\t\u003cspan class=\"n\"\u003eupdatedDesiredMapState\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003ekeyFromFilter\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eoldEntry\u003c/span\u003e\n\t\t\t\t\u003cspan class=\"k\"\u003eelse\u003c/span\u003e\n\t\t\t\t\t\u003cspan class=\"n\"\u003einsertedDesiredMapState\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003ekeyFromFilter\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"k\"\u003estruct\u003c/span\u003e\u003cspan class=\"p\"\u003e{}{}\u003c/span\u003e\n\n\t\t\t\t\u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"n\"\u003eentry\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"n\"\u003epolicy\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eNoRedirectEntry\u003c/span\u003e\n\t\t\t\t\t\u003cspan class=\"n\"\u003eentry\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eProxyPort\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eredirectPort\u003c/span\u003e\n\n\t\t\t\t\u003cspan class=\"n\"\u003ee\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003edesiredPolicy\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ePolicyMapState\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003ekeyFromFilter\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eentry\u003c/span\u003e\n\t\t\t\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\t\t\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\t\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\t\u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"no\"\u003enil\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"o\"\u003e...\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cdiv class=\"language-go highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"c\"\u003e// updateProxyRedirect updates the redirect rules in the proxy for a particular\u003c/span\u003e\n\u003cspan class=\"c\"\u003e// endpoint using the provided L4 filter. Returns the allocated proxy port\u003c/span\u003e\n\u003cspan class=\"k\"\u003efunc\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ee\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003eEndpoint\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"n\"\u003eupdateProxyRedirect\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003el4\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003epolicy\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eL4Filter\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eproxyWaitGroup\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eproxyPort\u003c/span\u003e \u003cspan class=\"kt\"\u003euint16\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"o\"\u003e...\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\t\u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003ee\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eproxy\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eCreateOrUpdateRedirect\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003el4\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003ee\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eProxyID\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003el4\u003c/span\u003e\u003cspan class=\"p\"\u003e),\u003c/span\u003e \u003cspan class=\"n\"\u003ee\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eproxyWaitGroup\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cdiv class=\"language-go highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"c\"\u003e// CreateOrUpdateRedirect creates or updates a L4 redirect with corresponding\u003c/span\u003e\n\u003cspan class=\"c\"\u003e// proxy configuration. This will allocate a proxy port as required and launch\u003c/span\u003e\n\u003cspan class=\"c\"\u003e// a proxy instance. If the redirect is already in place, only the rules will be\u003c/span\u003e\n\u003cspan class=\"c\"\u003e// updated.\u003c/span\u003e\n\u003cspan class=\"k\"\u003efunc\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ep\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003eProxy\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"n\"\u003eCreateOrUpdateRedirect\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003el4\u003c/span\u003e \u003cspan class=\"n\"\u003epolicy\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eProxyPolicy\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eid\u003c/span\u003e \u003cspan class=\"kt\"\u003estring\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003elocalEndpoint\u003c/span\u003e \u003cspan class=\"n\"\u003elogger\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eEndpointUpdater\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\t\u003cspan class=\"n\"\u003ewg\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003ecompletion\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eWaitGroup\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eproxyPort\u003c/span\u003e \u003cspan class=\"kt\"\u003euint16\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"o\"\u003e...\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\n\t\u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"n\"\u003eredir\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eok\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"n\"\u003ep\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eredirects\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003eid\u003c/span\u003e\u003cspan class=\"p\"\u003e];\u003c/span\u003e \u003cspan class=\"n\"\u003eok\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\t\t\u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"n\"\u003eredir\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003elistener\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eparserType\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"n\"\u003el4\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eGetL7Parser\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\t\t\t\u003cspan class=\"n\"\u003eredir\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eupdateRules\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003el4\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\t\t\t\u003cspan class=\"n\"\u003eredir\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eimplementation\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eUpdateRules\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ewg\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\t\t\t\u003cspan class=\"n\"\u003eredir\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003elastUpdated\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003etime\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eNow\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\t\t\t\u003cspan class=\"n\"\u003eproxyPort\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eredir\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003elistener\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eproxyPort\u003c/span\u003e\n\t\t\t\u003cspan class=\"k\"\u003ereturn\u003c/span\u003e\n\t\t\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\t\t\u003cspan class=\"n\"\u003ep\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eremoveRedirect\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eid\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003ewg\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"c\"\u003e// remove old redirect\u003c/span\u003e\n\t\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\t\u003cspan class=\"n\"\u003epp\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"n\"\u003egetProxyPort\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003el4\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eGetL7Parser\u003c/span\u003e\u003cspan class=\"p\"\u003e(),\u003c/span\u003e \u003cspan class=\"n\"\u003el4\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eGetIngress\u003c/span\u003e\u003cspan class=\"p\"\u003e())\u003c/span\u003e\n\t\u003cspan class=\"n\"\u003eredir\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"n\"\u003enewRedirect\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003elocalEndpoint\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003epp\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003el4\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eGetPort\u003c/span\u003e\u003cspan class=\"p\"\u003e())\u003c/span\u003e\n\t\u003cspan class=\"n\"\u003eredir\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eupdateRules\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003el4\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\n\t\u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"n\"\u003enRetry\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"m\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"n\"\u003enRetry\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"n\"\u003eredirectCreationAttempts\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"n\"\u003enRetry\u003c/span\u003e\u003cspan class=\"o\"\u003e++\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\t\t\u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"o\"\u003e!\u003c/span\u003e\u003cspan class=\"n\"\u003epp\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003econfigured\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\t\t\t\u003cspan class=\"c\"\u003e// Try allocate (the configured) port\u003c/span\u003e\n\t\t\t\u003cspan class=\"n\"\u003epp\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eproxyPort\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eallocatePort\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003epp\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eproxyPort\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003ep\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003erangeMin\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003ep\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003erangeMax\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\t\t\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\t\t\u003cspan class=\"k\"\u003eswitch\u003c/span\u003e \u003cspan class=\"n\"\u003el4\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eGetL7Parser\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\t\t\u003cspan class=\"k\"\u003ecase\u003c/span\u003e \u003cspan class=\"n\"\u003epolicy\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eParserTypeDNS\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e\n\t\t\t\u003cspan class=\"n\"\u003eredir\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eimplementation\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003ecreateDNSRedirect\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eredir\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\t\t\u003cspan class=\"k\"\u003ecase\u003c/span\u003e \u003cspan class=\"n\"\u003epolicy\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eParserTypeKafka\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e\n\t\t\t\u003cspan class=\"n\"\u003eredir\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eimplementation\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003ecreateKafkaRedirect\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eredir\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\t\t\u003cspan class=\"k\"\u003ecase\u003c/span\u003e \u003cspan class=\"n\"\u003epolicy\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eParserTypeHTTP\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e\n\t\t\t\u003cspan class=\"n\"\u003eredir\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eimplementation\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003ecreateEnvoyRedirect\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eredir\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\t\t\u003cspan class=\"k\"\u003edefault\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e\n\t\t\t\u003cspan class=\"n\"\u003eredir\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eimplementation\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003ecreateEnvoyRedirect\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eredir\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\t\t\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\t\t\u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"n\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"no\"\u003enil\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\t\t\t\u003cspan class=\"n\"\u003eDebug\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;Created new \u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003el4\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eGetL7Parser\u003c/span\u003e\u003cspan class=\"p\"\u003e(),\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34; proxy instance\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\t\t\t\u003cspan class=\"n\"\u003ep\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eredirects\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003eid\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eredir\u003c/span\u003e\n\n\t\t\t\u003cspan class=\"n\"\u003epp\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ereservePort\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"c\"\u003e// mark the proxyPort configured\u003c/span\u003e\n\t\t\t\u003cspan class=\"n\"\u003eproxyPort\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003epp\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eproxyPort\u003c/span\u003e\n\t\t\t\u003cspan class=\"k\"\u003ereturn\u003c/span\u003e\n\t\t\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\t\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\t\u003cspan class=\"n\"\u003elog\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eError\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;Unable to create \u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003el4\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eGetL7Parser\u003c/span\u003e\u003cspan class=\"p\"\u003e(),\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34; proxy\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\t\u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"m\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eerr\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"no\"\u003enil\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"no\"\u003enil\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003ch1 id=\"3-l7-policy-kafka\"\u003e3 L7 policy: Kafka\u003c/h1\u003e\n\n\u003cdiv class=\"language-go highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"c\"\u003e// HandleRequest must be called when a request is forwarded to the broker, will\u003c/span\u003e\n\u003cspan class=\"c\"\u003e// keep track of the request and rewrite the correlation ID inside of the\u003c/span\u003e\n\u003cspan class=\"c\"\u003e// request to a sequence number. This sequence number is guaranteed to be\u003c/span\u003e\n\u003cspan class=\"c\"\u003e// unique within the connection covered by the cache.\u003c/span\u003e\n\u003cspan class=\"k\"\u003efunc\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ecc\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003eCorrelationCache\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"n\"\u003eHandleRequest\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ereq\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003eRequestMessage\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003efinishFunc\u003c/span\u003e \u003cspan class=\"n\"\u003eFinishFunc\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\n\t\u003cspan class=\"n\"\u003eorigCorrelationID\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"n\"\u003ereq\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eGetCorrelationID\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\t\u003cspan class=\"n\"\u003enewCorrelationID\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"n\"\u003ecc\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003enextSequenceNumber\u003c/span\u003e\n\t\u003cspan class=\"n\"\u003ecc\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003enextSequenceNumber\u003c/span\u003e\u003cspan class=\"o\"\u003e++\u003c/span\u003e\n\n\t\u003cspan class=\"c\"\u003e// Overwrite the correlation ID in the request to allow correlating the\u003c/span\u003e\n\t\u003cspan class=\"c\"\u003e// response later on. The original correlation ID will be restored when\u003c/span\u003e\n\t\u003cspan class=\"c\"\u003e// forwarding the response\u003c/span\u003e\n\t\u003cspan class=\"n\"\u003ereq\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eSetCorrelationID\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003enewCorrelationID\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\n\t\u003cspan class=\"n\"\u003ecc\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ecache\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003enewCorrelationID\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e\u003cspan class=\"n\"\u003ecorrelationEntry\u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\t\t\u003cspan class=\"n\"\u003erequest\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e           \u003cspan class=\"n\"\u003ereq\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\t\t\u003cspan class=\"n\"\u003ecreated\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e           \u003cspan class=\"n\"\u003etime\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eNow\u003c/span\u003e\u003cspan class=\"p\"\u003e(),\u003c/span\u003e\n\t\t\u003cspan class=\"n\"\u003eorigCorrelationID\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003eorigCorrelationID\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\t\t\u003cspan class=\"n\"\u003efinishFunc\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e        \u003cspan class=\"n\"\u003efinishFunc\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\t\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003ch1 id=\"4-policy-calc\"\u003e4 policy calc\u003c/h1\u003e\n\n\u003cdiv class=\"language-plaintext highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e// DistillPolicy filters down the specified selectorPolicy (which acts\n// upon selectors) into a set of concrete map entries based on the\n// SelectorCache. These can subsequently be plumbed into the datapath.\n//\n// Must be performed while holding the Repository lock.\n// PolicyOwner (aka Endpoint) is also locked during this call.\nfunc (p *selectorPolicy) DistillPolicy(policyOwner PolicyOwner, npMap NamedPortsMap, isHost bool) *EndpointPolicy {\n\tcalculatedPolicy := \u0026amp;EndpointPolicy{\n\t\tselectorPolicy: p,\n\t\tNamedPortsMap:  npMap,\n\t\tPolicyMapState: make(MapState),\n\t\tPolicyOwner:    policyOwner,\n\t}\n\n\tif !p.IngressPolicyEnabled || !p.EgressPolicyEnabled {\n\t\tcalculatedPolicy.PolicyMapState.AllowAllIdentities(\n\t\t\t!p.IngressPolicyEnabled, !p.EgressPolicyEnabled)\n\t}\n\n\t// Register the new EndpointPolicy as a receiver of delta\n\t// updates.  Any updates happening after this, but before\n\t// computeDesiredL4PolicyMapEntries() call finishes may\n\t// already be applied to the PolicyMapState, specifically:\n\t//\n\t// - policyMapChanges may contain an addition of an entry that\n\t//   is already added to the PolicyMapState\n\t//\n\t// - policyMapChanges may contain a deletion of an entry that\n\t//   has already been deleted from PolicyMapState\n\tp.insertUser(calculatedPolicy)\n\n\t// Must come after the \u0026#39;insertUser()\u0026#39; above to guarantee\n\t// PolicyMapChanges will contain all changes that are applied\n\t// after the computation of PolicyMapState has started.\n\tcalculatedPolicy.computeDesiredL4PolicyMapEntries()\n\tif !isHost {\n\t\tcalculatedPolicy.PolicyMapState.DetermineAllowLocalhostIngress(p.L4Policy)\n\t}\n\n\treturn calculatedPolicy\n}\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003ch1 id=\"5-policy-distill\"\u003e5 Policy Distill\u003c/h1\u003e\n\n\u003cp\u003epkg/policy/resolve.go:\u003c/p\u003e\n\n\u003cdiv class=\"language-go highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"c\"\u003e// selectorPolicy is a structure which contains the resolved policy for a\u003c/span\u003e\n\u003cspan class=\"c\"\u003e// particular Identity across all layers (L3, L4, and L7), with the policy\u003c/span\u003e\n\u003cspan class=\"c\"\u003e// still determined in terms of EndpointSelectors.\u003c/span\u003e\n\u003cspan class=\"k\"\u003etype\u003c/span\u003e \u003cspan class=\"n\"\u003eselectorPolicy\u003c/span\u003e \u003cspan class=\"k\"\u003estruct\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\t\u003cspan class=\"n\"\u003eRevision\u003c/span\u003e \u003cspan class=\"kt\"\u003euint64\u003c/span\u003e \u003cspan class=\"c\"\u003e// Revision is the revision of the policy repository used to generate this selectorPolicy.\u003c/span\u003e\n\n\t\u003cspan class=\"n\"\u003eSelectorCache\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003eSelectorCache\u003c/span\u003e \u003cspan class=\"c\"\u003e// SelectorCache managing selectors in L4Policy\u003c/span\u003e\n\t\u003cspan class=\"n\"\u003eL4Policy\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003eL4Policy\u003c/span\u003e           \u003cspan class=\"c\"\u003e// L4Policy contains the computed L4 and L7 policy.\u003c/span\u003e\n\t\u003cspan class=\"n\"\u003eCIDRPolicy\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003eCIDRPolicy\u003c/span\u003e       \u003cspan class=\"c\"\u003e// CIDRPolicy contains the L3 (not L4) CIDR-based policy.\u003c/span\u003e\n\n\t\u003cspan class=\"n\"\u003eIngressPolicyEnabled\u003c/span\u003e \u003cspan class=\"kt\"\u003ebool\u003c/span\u003e\n\t\u003cspan class=\"n\"\u003eEgressPolicyEnabled\u003c/span\u003e \u003cspan class=\"kt\"\u003ebool\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cul\u003e\n  \u003cli\u003e\u003ccode class=\"language-plaintext highlighter-rouge\"\u003eCIDRPolicy\u003c/code\u003e is \u003cstrong\u003epure L3 policy\u003c/strong\u003e, does not include L4 policy.\u003c/li\u003e\n  \u003cli\u003e\u003ccode class=\"language-plaintext highlighter-rouge\"\u003eL4Policy\u003c/code\u003e is \u003cstrong\u003eL4/L7 policy\u003c/strong\u003e, note that it contains L7 policy.\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cdiv class=\"language-go highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"c\"\u003e// EndpointPolicy is a structure which contains the resolved policy across all\u003c/span\u003e\n\u003cspan class=\"c\"\u003e// layers (L3, L4, and L7), distilled against a set of identities.\u003c/span\u003e\n\u003cspan class=\"k\"\u003etype\u003c/span\u003e \u003cspan class=\"n\"\u003eEndpointPolicy\u003c/span\u003e \u003cspan class=\"k\"\u003estruct\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\t\u003cspan class=\"c\"\u003e// all Endpoints sharing the same identity will be referring to a shared selectorPolicy!\u003c/span\u003e\n\t\u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003eselectorPolicy\u003c/span\u003e\n\n\t\u003cspan class=\"c\"\u003e// maps PortNames in L4Filters to port numbers. This mapping is endpoint specific.\u003c/span\u003e\n\t\u003cspan class=\"n\"\u003eNamedPortsMap\u003c/span\u003e \u003cspan class=\"n\"\u003eNamedPortsMap\u003c/span\u003e\n\n\t\u003cspan class=\"c\"\u003e// PolicyMapState contains the state of this policy as it relates to the datapath.\u003c/span\u003e\n\t\u003cspan class=\"c\"\u003e// Maps Key -\u0026gt; proxy port if redirection is needed. Proxy port 0 indicates no proxy redirection.\u003c/span\u003e\n\t\u003cspan class=\"c\"\u003e// All fields within the Key and the proxy port must be in host byte-order.\u003c/span\u003e\n\t\u003cspan class=\"n\"\u003ePolicyMapState\u003c/span\u003e \u003cspan class=\"n\"\u003eMapState\u003c/span\u003e\n\n\t\u003cspan class=\"n\"\u003epolicyMapChanges\u003c/span\u003e \u003cspan class=\"n\"\u003eMapChanges\u003c/span\u003e \u003cspan class=\"c\"\u003e// pending changes to the PolicyMapState\u003c/span\u003e\n\t\u003cspan class=\"n\"\u003ePolicyOwner\u003c/span\u003e \u003cspan class=\"n\"\u003ePolicyOwner\u003c/span\u003e     \u003cspan class=\"c\"\u003e// describes any type which consumes this EndpointPolicy object.\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cdiv class=\"language-plaintext highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003eregeneratePolicy  // pkg/endpoint/policy.go\n  Consume(GetNamedPorts())\n  DistillPolicy(NamedPortsMap)\n\ncomputeDirectionL4PolicyMapEntries   // pkg/policy/resolve.go\n  |-ToMapState                       // pkg/policy/l4.go\n      |-NewMapStateEntry\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003ch1 id=\"6-skip-duplicated-labels\"\u003e6 Skip duplicated labels\u003c/h1\u003e\n\n\u003cp\u003eWhen there are duplicated label selectors in the rule, such as,\u003c/p\u003e\n\n\u003cdiv class=\"language-yaml highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"na\"\u003eapiVersion\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003ecilium.io/v2\u003c/span\u003e\n\u003cspan class=\"na\"\u003ekind\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003eCiliumClusterwideNetworkPolicy\u003c/span\u003e\n\u003cspan class=\"na\"\u003espec\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e\n  \u003cspan class=\"na\"\u003eendpointSelector\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e\n    \u003cspan class=\"na\"\u003ematchLabels\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e\n      \u003cspan class=\"s\"\u003ek8s:redis-cluster-name: my-test-cluster\u003c/span\u003e\n  \u003cspan class=\"na\"\u003eingress\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e\n  \u003cspan class=\"pi\"\u003e-\u003c/span\u003e \u003cspan class=\"na\"\u003efromEndpoints\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e\n    \u003cspan class=\"pi\"\u003e-\u003c/span\u003e \u003cspan class=\"na\"\u003ematchLabels\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e\n        \u003cspan class=\"s\"\u003ek8s:appid: \u0026#34;0001\u0026#34;\u003c/span\u003e\n    \u003cspan class=\"pi\"\u003e-\u003c/span\u003e \u003cspan class=\"na\"\u003ematchLabels\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e\n        \u003cspan class=\"s\"\u003ek8s:appid: \u0026#34;0001\u0026#34;\u003c/span\u003e  \u003cspan class=\"c1\"\u003e# duplicated from the adjacent above label selectors\u003c/span\u003e\n    \u003cspan class=\"pi\"\u003e-\u003c/span\u003e \u003cspan class=\"na\"\u003ematchLabels\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e\n        \u003cspan class=\"s\"\u003ek8s:appid: \u0026#34;0002\u0026#34;\u003c/span\u003e\n    \u003cspan class=\"na\"\u003etoPorts\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e\n    \u003cspan class=\"pi\"\u003e-\u003c/span\u003e \u003cspan class=\"na\"\u003eports\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e\n      \u003cspan class=\"pi\"\u003e-\u003c/span\u003e \u003cspan class=\"na\"\u003eport\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"s\"\u003e6379\u0026#34;\u003c/span\u003e\n        \u003cspan class=\"na\"\u003eprotocol\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003eTCP\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003ecilium-agent will skip the duplicated ones:\u003c/p\u003e\n\n\u003cdiv class=\"language-plaintext highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e       mergeIngress                                    //    pkg/policy/rule.go\n        |-mergeIngressPortProto         // L3-only rule\n        |-toPorts.Iterate(func(ports) { // L4/L7 rule\n            for p := range GetPortProtocols() {\n              mergeIngressPortProto(TCP/UDP/...)\n                |-createL4IngressFilter\n                |-addL4Filter(ruleLabels)\n                    |-mergePortProto\n                    |-if ruleLabels in existingRuleLabels\n                    |    exists = true\n                    |-if !exists:\n                    |    existingFilter.DerivedFromRules.append(ruleLabels)\n            }\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003eOnly unique rule labels will be included to the final rule, so the final effect is\nequivalent to this:\u003c/p\u003e\n\n\u003cdiv class=\"language-yaml highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"na\"\u003eapiVersion\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003ecilium.io/v2\u003c/span\u003e\n\u003cspan class=\"na\"\u003ekind\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003eCiliumClusterwideNetworkPolicy\u003c/span\u003e\n\u003cspan class=\"na\"\u003espec\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e\n  \u003cspan class=\"na\"\u003eendpointSelector\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e\n    \u003cspan class=\"na\"\u003ematchLabels\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e\n      \u003cspan class=\"s\"\u003ek8s:redis-cluster-name: my-test-cluster\u003c/span\u003e\n  \u003cspan class=\"na\"\u003eingress\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e\n  \u003cspan class=\"pi\"\u003e-\u003c/span\u003e \u003cspan class=\"na\"\u003efromEndpoints\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e\n    \u003cspan class=\"pi\"\u003e-\u003c/span\u003e \u003cspan class=\"na\"\u003ematchLabels\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e\n        \u003cspan class=\"s\"\u003ek8s:appid: \u0026#34;0001\u0026#34;\u003c/span\u003e\n    \u003cspan class=\"pi\"\u003e-\u003c/span\u003e \u003cspan class=\"na\"\u003ematchLabels\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e\n        \u003cspan class=\"s\"\u003ek8s:appid: \u0026#34;0002\u0026#34;\u003c/span\u003e\n    \u003cspan class=\"na\"\u003etoPorts\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e\n    \u003cspan class=\"pi\"\u003e-\u003c/span\u003e \u003cspan class=\"na\"\u003eports\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e\n      \u003cspan class=\"pi\"\u003e-\u003c/span\u003e \u003cspan class=\"na\"\u003eport\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"s\"\u003e6379\u0026#34;\u003c/span\u003e\n        \u003cspan class=\"na\"\u003eprotocol\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003eTCP\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\n  \u003c!-- POST NAVIGATION --\u003e\n  \u003cdiv class=\"postNav clearfix\"\u003e\n     \n      \u003ca class=\"prev\" href=\"/blog/awk-notes-zh/\"\u003e\u003cspan\u003e« [笔记] The AWK Programming Language（ADDISON-WESLEY, 1988）\u003c/span\u003e\n      \n    \u003c/a\u003e\n      \n      \n      \u003ca class=\"next\" href=\"/blog/starbucks-do-not-use-two-phase-commit-zh/\"\u003e\u003cspan\u003e[译] 星巴克不使用两阶段提交（2004） »\u003c/span\u003e\n       \n      \u003c/a\u003e\n     \n  \u003c/div\u003e\n\u003c/div\u003e",
  "Date": "2020-07-03T00:00:00Z",
  "Author": "Arthur Chiao"
}