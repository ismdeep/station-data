{
  "Source": "arthurchiao.art",
  "Title": "OVS Deep Dive 0: Overview",
  "Link": "https://arthurchiao.art/blog/ovs-deep-dive-0-overview/",
  "Content": "\u003cdiv class=\"post\"\u003e\n  \n  \u003ch1 class=\"postTitle\"\u003eOVS Deep Dive 0: Overview\u003c/h1\u003e\n  \u003cp class=\"meta\"\u003ePublished at 2016-12-31 | Last Update \u003c/p\u003e\n  \n  \u003cp class=\"intro\"\u003e\u003cspan class=\"dropcap\"\u003eI\u003c/span\u003en this OVS Deep Dive series,\nI will walk through the \u003ca href=\"https://github.com/openvswitch/ovs\"\u003eOpen vSwtich\u003c/a\u003e\n source code to look into the core designs\nand implementations of OVS. The code is based on\n \u003cspan style=\"font-weight:bold\"\u003eovs 2.6.1\u003c/span\u003e.\n\u003c/p\u003e\n\n\u003ch2 id=\"1-why-ovs\"\u003e1. WHY OVS\u003c/h2\u003e\n\u003cp\u003eThe official doc \u003ca href=\"https://github.com/openvswitch/ovs/blob/master/Documentation/intro/why-ovs.rst\"\u003eWHY Open vSwitch\u003c/a\u003e\ndescribes how OVS emerges and what problems it aims at solving.\nBut the explanation is very high-level and abstract. I bet you need years of\nvirtualization and networking experiences to understand what it’s saying.\u003c/p\u003e\n\n\u003cp\u003eInstead, I highly recommend the following materials to new comers of OVS:\u003c/p\u003e\n\n\u003cul\u003e\n  \u003cli\u003eexcellent hands-on intro to OVS \u003ca href=\"https://www.youtube.com/watch?v=rYW7kQRyUvA\"\u003eIntroduction to Open vSwitch (video)\u003c/a\u003e\u003c/li\u003e\n  \u003cli\u003e\u003ca href=\"https://www.google.com.hk/url?sa=t\u0026amp;rct=j\u0026amp;q=\u0026amp;esrc=s\u0026amp;source=web\u0026amp;cd=8\u0026amp;cad=rja\u0026amp;uact=8\u0026amp;ved=0ahUKEwiy6sCB_pXRAhWKnpQKHblDC2wQFgg-MAc\u0026amp;url=https%3A%2F%2Fnsrc.org%2Fworkshops%2F2014%2Fnznog-sdn%2Fraw-attachment%2Fwiki%2FAgenda%2FOpenVSwitch.pdf\u0026amp;usg=AFQjCNFg9VULvEmHMXQAsuTOE6XLH6WbzQ\u0026amp;sig2=UlVrLltLct2F_xjgnqZiOA\"\u003epresentation (PDF)\u003c/a\u003e\nfrom NSRC\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2 id=\"2-ovs-architecture\"\u003e2. OVS Architecture\u003c/h2\u003e\n\n\u003cp align=\"center\"\u003e\u003cimg src=\"/assets/img/ovs-deep-dive/ovs_arch.jpg\" width=\"80%\" height=\"80%\"/\u003e\u003c/p\u003e\n\u003cp align=\"center\"\u003eFig.2.1. OVS Architecture (image source NSRC[1])\u003c/p\u003e\n\n\u003cp\u003eOVS is usually used to bridge up multiple VMs/contaiers within one host.  Such\nas, in OpenStack compute node, it is used as integration bridge to connect all\nthe VMs running on the node. It manages both physical ports (e.g. eth0, eth1)\nand virtual ports (tap devices of VMs).\u003c/p\u003e\n\n\u003cp\u003eAs depicted in Fig.2.1, OVS is composed of three components:\u003c/p\u003e\n\n\u003cul\u003e\n  \u003cli\u003evswitchd\n    \u003cul\u003e\n      \u003cli\u003euser space program, ovs deamon\u003c/li\u003e\n      \u003cli\u003etools: \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eovs-appctl\u003c/code\u003e\u003c/li\u003e\n    \u003c/ul\u003e\n  \u003c/li\u003e\n  \u003cli\u003eovsdb-server\n    \u003cul\u003e\n      \u003cli\u003euser space program, database server of OVS\u003c/li\u003e\n      \u003cli\u003etools: \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eovs-vsctl\u003c/code\u003e, \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eovs-ofctl\u003c/code\u003e\u003c/li\u003e\n    \u003c/ul\u003e\n  \u003c/li\u003e\n  \u003cli\u003ekernel module (datapath)\n    \u003cul\u003e\n      \u003cli\u003ekernel space module, OVS packet forwarder\u003c/li\u003e\n      \u003cli\u003etools: \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eovs-dpctl\u003c/code\u003e\u003c/li\u003e\n    \u003c/ul\u003e\n  \u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003e\u003ccode class=\"language-plaintext highlighter-rouge\"\u003evswitchd\u003c/code\u003e is the main deamon process of OVS,\n\u003ccode class=\"language-plaintext highlighter-rouge\"\u003eovsdb-server\u003c/code\u003e is the database server of OVS, and \u003ccode class=\"language-plaintext highlighter-rouge\"\u003edatapath\u003c/code\u003e is a kernel\nmodule that performs \u003cstrong\u003eplatform-dependent\u003c/strong\u003e packet\nforwarding. After OVS started, we could see two services: \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eovs-vswitchd\u003c/code\u003e and\n\u003ccode class=\"language-plaintext highlighter-rouge\"\u003eovsdb-server\u003c/code\u003e:\u003c/p\u003e\n\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003e$ \u003c/span\u003eps \u003cspan class=\"nt\"\u003e-ef\u003c/span\u003e | \u003cspan class=\"nb\"\u003egrep \u003c/span\u003eovs\nroot     63346     1  0  2016 ?        00:00:00 ovsdb-server: monitoring pid 63347 \u003cspan class=\"o\"\u003e(\u003c/span\u003ehealthy\u003cspan class=\"o\"\u003e)\u003c/span\u003e\nroot     63347 63346  0  2016 ?        01:16:25 ovsdb-server /etc/openvswitch/conf.db \u003cspan class=\"nt\"\u003e-vconsole\u003c/span\u003e:emer \u003cspan class=\"nt\"\u003e-vsyslog\u003c/span\u003e:err \u003cspan class=\"nt\"\u003e-vfile\u003c/span\u003e:info \u003cspan class=\"nt\"\u003e--remote\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003epunix:/var/run/openvswitch/db.sock \u003cspan class=\"nt\"\u003e--private-key\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003edb:Open_vSwitch,SSL,private_key \u003cspan class=\"nt\"\u003e--certificate\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003edb:Open_vSwitch,SSL,certificate \u003cspan class=\"nt\"\u003e--bootstrap-ca-cert\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003edb:Open_vSwitch,SSL,ca_cert \u003cspan class=\"nt\"\u003e--no-chdir\u003c/span\u003e \u003cspan class=\"nt\"\u003e--log-file\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e/var/log/openvswitch/ovsdb-server.log \u003cspan class=\"nt\"\u003e--pidfile\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e/var/run/openvswitch/ovsdb-server.pid \u003cspan class=\"nt\"\u003e--detach\u003c/span\u003e \u003cspan class=\"nt\"\u003e--monitor\u003c/span\u003e\nroot     63356     1  0  2016 ?        00:00:00 ovs-vswitchd: monitoring pid 63357 \u003cspan class=\"o\"\u003e(\u003c/span\u003ehealthy\u003cspan class=\"o\"\u003e)\u003c/span\u003e\nroot     63357 63356  0  2016 ?        01:03:31 ovs-vswitchd unix:/var/run/openvswitch/db.sock \u003cspan class=\"nt\"\u003e-vconsole\u003c/span\u003e:emer \u003cspan class=\"nt\"\u003e-vsyslog\u003c/span\u003e:err \u003cspan class=\"nt\"\u003e-vfile\u003c/span\u003e:info \u003cspan class=\"nt\"\u003e--mlockall\u003c/span\u003e \u003cspan class=\"nt\"\u003e--no-chdir\u003c/span\u003e \u003cspan class=\"nt\"\u003e--log-file\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e/var/log/openvswitch/ovs-vswitchd.log \u003cspan class=\"nt\"\u003e--pidfile\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e/var/run/openvswitch/ovs-vswitchd.pid \u003cspan class=\"nt\"\u003e--detach\u003c/span\u003e \u003cspan class=\"nt\"\u003e--monitor\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e\u003ccode class=\"language-plaintext highlighter-rouge\"\u003eovs-ovswitchd\u003c/code\u003e receives OpenFlow messages from OpenFlow controller, and\n\u003ccode class=\"language-plaintext highlighter-rouge\"\u003eOVSDB-protocol\u003c/code\u003e format messages from \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eovsdb-server\u003c/code\u003e. Communication between\n\u003ccode class=\"language-plaintext highlighter-rouge\"\u003eovs-vswitchd\u003c/code\u003e and \u003ccode class=\"language-plaintext highlighter-rouge\"\u003edatapath\u003c/code\u003e is through\n\u003ca href=\"https://en.wikipedia.org/wiki/Netlink\"\u003enetlink\u003c/a\u003e (a socket family similar with\nUnix Domain Socket).\u003c/p\u003e\n\n\u003ch2 id=\"3-ovs-components\"\u003e3. OVS Components\u003c/h2\u003e\n\u003cp\u003eLet’s get a quick glance of the three components of OVS.\nDetailed explorations will be in subsequent articles of this series.\u003c/p\u003e\n\n\u003ch3 id=\"31-ovs-daemon\"\u003e3.1. OVS Daemon\u003c/h3\u003e\n\u003cp\u003e\u003ccode class=\"language-plaintext highlighter-rouge\"\u003eovs-vswitchd\u003c/code\u003e is\nthe main Open vSwitch userspace program. It reads the desired\nOpen vSwitch configuration from ovsdb-server over an IPC channel\nand passes this configuration down to the ovs bridges (implemented as\na library called \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eofproto\u003c/code\u003e).  It also passes\ncertain status and statistical information from ovs bridges back into the\ndatabase.\u003c/p\u003e\n\n\u003cp align=\"center\"\u003e\u003cimg src=\"/assets/img/ovs-deep-dive/vswitchd_ovsdb_ofproto.png\" width=\"75%\" height=\"75%\"/\u003e\u003c/p\u003e\n\u003cp align=\"center\"\u003eFig.3.1. vswitchd: ovs main daemon\u003c/p\u003e\n\n\u003ch3 id=\"32-ovsdb\"\u003e3.2 OVSDB\u003c/h3\u003e\n\u003cp\u003eSome transient configurations, e.g. flows, are stored in datapaths and vswitchd.\nPersistent configurations are stored in ovsdb, which survives reboot.\u003c/p\u003e\n\n\u003cp\u003e\u003ccode class=\"language-plaintext highlighter-rouge\"\u003eovsdb-server\u003c/code\u003e provides RPC itnerfaces to OVSDB. It supports JSON-RPC\nclient connections over active or passive TCP/IP or Unix domain sockets.\u003c/p\u003e\n\n\u003cp\u003e\u003ccode class=\"language-plaintext highlighter-rouge\"\u003eovsdb-server\u003c/code\u003e runs either as a backup server, or as an active server. Only\nthe active server handles transactions that will change the OVSDB.\u003c/p\u003e\n\n\u003ch3 id=\"33-datapath\"\u003e3.3 Datapath\u003c/h3\u003e\n\u003cp\u003eDatapath is the main packet forwarding module of OVS, implemented in kernel\nspace for high performance. It caches OpenFlow flows, and execute actions\non received packets which match specific flow(s). If no flow is matched for\none packet, the packet will be delivered to userspace program \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eovs-vswitchd\u003c/code\u003e.\nUsually,\n\u003ccode class=\"language-plaintext highlighter-rouge\"\u003eovs-vswitchd\u003c/code\u003e will issue an new flow to datapath which will be used to handle\nsubsequent packets of this type. The high performance comes from the fact\nthat most packets will match flows successfully in datapath, thus will be\nprocessed directly in kernel space.\u003c/p\u003e\n\n\u003ch2 id=\"4-ovs-packet-handling\"\u003e4. OVS Packet Handling\u003c/h2\u003e\n\n\u003cp\u003eLet’s first see how a packet traverses through OVS.\u003c/p\u003e\n\n\u003cp align=\"center\"\u003e\u003cimg src=\"/assets/img/ovs-deep-dive/ovs_packet_flow.jpg\" width=\"80%\" height=\"80%\"/\u003e\u003c/p\u003e\n\u003cp align=\"center\"\u003eFig.4.1. OVS Packet Handling (image source[6])\u003c/p\u003e\n\n\u003cp\u003eOVS is an OpenFlow-capable software switch.\u003c/p\u003e\n\n\u003cp\u003eAn OpenFlow controller is responsible for instructing\ndatapath how to handle different types packets, in the form called \u003cstrong\u003e\u003cem\u003eflows\u003c/em\u003e\u003c/strong\u003e.\nA \u003cstrong\u003e\u003cem\u003eflow\u003c/em\u003e\u003c/strong\u003e describes how should datapth handle packets of one specific type,\nin the form called \u003cstrong\u003e\u003cem\u003eactions\u003c/em\u003e\u003c/strong\u003e. Action types include forwarding to another\nport, output, modify vlan tag, etc.\nThe process of finding a flow for a packet is called \u003cstrong\u003e\u003cem\u003eflow matching\u003c/em\u003e\u003c/strong\u003e.\u003c/p\u003e\n\n\u003cp\u003eFor performance consideration, part of the flows are cached in datapath, and\nthe others stored in \u003ccode class=\"language-plaintext highlighter-rouge\"\u003evswitchd\u003c/code\u003e.\u003c/p\u003e\n\n\u003cp\u003eFig.4.1 depicts how OVS forwards packets.\u003c/p\u003e\n\n\u003cp\u003eA packet enters OVS datapath after it is received on a NIC.\nIf a flow is matched in datapath for the packet, the datapath simply excutes the\nactions described in the flow. Otherwise (flow missing), datapath delivers the\npacket to\n\u003ccode class=\"language-plaintext highlighter-rouge\"\u003eovs-vswitchd\u003c/code\u003e, and another flow-matching process will be done there. After\n\u003ccode class=\"language-plaintext highlighter-rouge\"\u003eovs-vswitchd\u003c/code\u003e determines how the packet should be handled, it passes the packet\nback to the datapath with the desired handling.  Usually, it also tells the\ndatapath to cache the flow, for handling similar packets later.\u003c/p\u003e\n\n\u003ch2 id=\"5-implementation\"\u003e5. Implementation\u003c/h2\u003e\n\n\u003ch3 id=\"51-vswitchd\"\u003e5.1 vswitchd\u003c/h3\u003e\n\u003cp\u003eImplementation of \u003ccode class=\"language-plaintext highlighter-rouge\"\u003evswitchd\u003c/code\u003e is at \u003ccode class=\"language-plaintext highlighter-rouge\"\u003evswitchd/\u003c/code\u003e.\u003c/p\u003e\n\n\u003cp\u003eImplementation of ovs bridge is at \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eofproto/\u003c/code\u003e.\u003c/p\u003e\n\n\u003ch3 id=\"52-ovsdb\"\u003e5.2 ovsdb\u003c/h3\u003e\n\u003cp\u003eImplementation of \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eOVSDB\u003c/code\u003e is at \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eovsdb/\u003c/code\u003e.\u003c/p\u003e\n\n\u003ch3 id=\"51-datapath\"\u003e5.1 datapath\u003c/h3\u003e\n\u003cp\u003eImplementation of \u003ccode class=\"language-plaintext highlighter-rouge\"\u003evswitchd\u003c/code\u003e is at \u003ccode class=\"language-plaintext highlighter-rouge\"\u003edatapath/\u003c/code\u003e, and \u003ccode class=\"language-plaintext highlighter-rouge\"\u003edatapath-windows/\u003c/code\u003e for\nwindows.\u003c/p\u003e\n\n\u003ch2 id=\"summary\"\u003eSummary\u003c/h2\u003e\n\u003col\u003e\n  \u003cli\u003eThree components of OVS\n    \u003cul\u003e\n      \u003cli\u003e\u003ccode class=\"language-plaintext highlighter-rouge\"\u003evswitchd\u003c/code\u003e\u003c/li\u003e\n      \u003cli\u003e\u003ccode class=\"language-plaintext highlighter-rouge\"\u003eovsdb\u003c/code\u003e\u003c/li\u003e\n      \u003cli\u003e\u003ccode class=\"language-plaintext highlighter-rouge\"\u003edatapath\u003c/code\u003e (kernel module)\u003c/li\u003e\n    \u003c/ul\u003e\n  \u003c/li\u003e\n  \u003cli\u003eSome implementation terms\n    \u003cul\u003e\n      \u003cli\u003e\u003ccode class=\"language-plaintext highlighter-rouge\"\u003eovs-vswitchd\u003c/code\u003e: main OVS daemon\u003c/li\u003e\n      \u003cli\u003e\u003ccode class=\"language-plaintext highlighter-rouge\"\u003eovsdb-server\u003c/code\u003e: OVSDB service daemon\u003c/li\u003e\n    \u003c/ul\u003e\n  \u003c/li\u003e\n\u003c/ol\u003e\n\n\u003ch2 id=\"references\"\u003eReferences\u003c/h2\u003e\n\u003col\u003e\n  \u003cli\u003e\u003ca href=\"https://www.google.com.hk/url?sa=t\u0026amp;rct=j\u0026amp;q=\u0026amp;esrc=s\u0026amp;source=web\u0026amp;cd=8\u0026amp;cad=rja\u0026amp;uact=8\u0026amp;ved=0ahUKEwiy6sCB_pXRAhWKnpQKHblDC2wQFgg-MAc\u0026amp;url=https%3A%2F%2Fnsrc.org%2Fworkshops%2F2014%2Fnznog-sdn%2Fraw-attachment%2Fwiki%2FAgenda%2FOpenVSwitch.pdf\u0026amp;usg=AFQjCNFg9VULvEmHMXQAsuTOE6XLH6WbzQ\u0026amp;sig2=UlVrLltLct2F_xjgnqZiOA\"\u003ePDF: An OpenVSwitch Introduction From NSRC\u003c/a\u003e\u003c/li\u003e\n  \u003cli\u003e\u003ca href=\"https://github.com/openvswitch/ovs/blob/master/Documentation/topics/porting.rst\"\u003eOVS Doc: Porting Guide\u003c/a\u003e\u003c/li\u003e\n  \u003cli\u003e\u003ca href=\"https://github.com/openvswitch/ovs/blob/master/Documentation/intro/what-is-ovs.rst\"\u003eOVS Doc: What Is OVS\u003c/a\u003e\u003c/li\u003e\n  \u003cli\u003e\u003ca href=\"https://github.com/openvswitch/ovs/blob/master/Documentation/intro/why-ovs.rst\"\u003eOVS Doc: WHY OVS\u003c/a\u003e\u003c/li\u003e\n  \u003cli\u003e\u003ca href=\"https://www.youtube.com/watch?v=rYW7kQRyUvA\"\u003eYouTube: Introduction to Open vSwitch\u003c/a\u003e\u003c/li\u003e\n  \u003cli\u003e\u003ca href=\"https://www.usenix.org/system/files/conference/nsdi15/nsdi15-paper-pfaff.pdf\"\u003eThe Design and Implementation of Open vSwitch\u003c/a\u003e\u003c/li\u003e\n\u003c/ol\u003e\n\n\n  \u003c!-- POST NAVIGATION --\u003e\n  \u003cdiv class=\"postNav clearfix\"\u003e\n      \n      \n      \u003ca class=\"next\" href=\"/blog/ovs-deep-dive-1-vswitchd/\"\u003e\u003cspan\u003eOVS Deep Dive 1: vswitchd »\u003c/span\u003e\n       \n      \u003c/a\u003e\n     \n  \u003c/div\u003e\n\u003c/div\u003e",
  "Date": "2016-12-31T00:00:00Z",
  "Author": "Arthur Chiao"
}