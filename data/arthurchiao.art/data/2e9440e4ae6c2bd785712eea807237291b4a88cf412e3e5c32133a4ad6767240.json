{
  "Source": "arthurchiao.art",
  "Title": "TCP Socket Listen: A Tale of Two Queues (2022)",
  "Link": "https://arthurchiao.art/blog/tcp-listen-a-tale-of-two-queues/",
  "Content": "\u003cdiv class=\"post\"\u003e\n  \n  \u003ch1 class=\"postTitle\"\u003eTCP Socket Listen: A Tale of Two Queues (2022)\u003c/h1\u003e\n  \u003cp class=\"meta\"\u003ePublished at 2022-08-28 | Last Update 2022-12-30\u003c/p\u003e\n  \n  \u003ch2 id=\"tl-dr\"\u003eTL; DR\u003c/h2\u003e\n\n\u003cp\u003eThis post digs into the design and implementation of the TCP listen queues\nin Linux kernel. Hope that after reading through this post, readers will have a\ndeeper understanding about the underlying working mechanism of TCP/socket\nlistening and 3-way handshaking, as well as related kernel configurations and\nperformance tunings.\u003c/p\u003e\n\n\u003cp align=\"center\"\u003e\u003cimg src=\"/assets/img/tcp-listen-a-tale-of-two-queues/synq-acceptq.png\" width=\"70%\" height=\"70%\"/\u003e\u003c/p\u003e\n\u003cp align=\"center\"\u003eFig. The \u0026#34;SYN queue\u0026#34; and accept queue of a listening state TCP socket\u003c/p\u003e\n\n\u003chr/\u003e\n\n\u003cul id=\"markdown-toc\"\u003e\n  \u003cli\u003e\u003ca href=\"#tl-dr\" id=\"markdown-toc-tl-dr\"\u003eTL; DR\u003c/a\u003e\u003c/li\u003e\n  \u003cli\u003e\u003ca href=\"#1-introduction\" id=\"markdown-toc-1-introduction\"\u003e1 Introduction\u003c/a\u003e    \u003cul\u003e\n      \u003cli\u003e\u003ca href=\"#11-why-listen-queues\" id=\"markdown-toc-11-why-listen-queues\"\u003e1.1 Why listen queues?\u003c/a\u003e\u003c/li\u003e\n      \u003cli\u003e\u003ca href=\"#12-technical-requirements-for-server-side-3whs-implementation-1\" id=\"markdown-toc-12-technical-requirements-for-server-side-3whs-implementation-1\"\u003e1.2 Technical requirements for (server-side) 3WHS implementation [1]\u003c/a\u003e\u003c/li\u003e\n      \u003cli\u003e\u003ca href=\"#13-where-are-the-queues-in-linux-kernel-code\" id=\"markdown-toc-13-where-are-the-queues-in-linux-kernel-code\"\u003e1.3 Where are the queues in Linux kernel code?\u003c/a\u003e\u003c/li\u003e\n      \u003cli\u003e\u003ca href=\"#14-purpose-of-this-post\" id=\"markdown-toc-14-purpose-of-this-post\"\u003e1.4 Purpose of this post\u003c/a\u003e\u003c/li\u003e\n    \u003c/ul\u003e\n  \u003c/li\u003e\n  \u003cli\u003e\u003ca href=\"#2-fundamentals-socket-related-data-structures\" id=\"markdown-toc-2-fundamentals-socket-related-data-structures\"\u003e2 Fundamentals: socket related data structures\u003c/a\u003e    \u003cul\u003e\n      \u003cli\u003e\u003ca href=\"#21-classification-of-socket-related-structs\" id=\"markdown-toc-21-classification-of-socket-related-structs\"\u003e2.1 Classification of socket related structs\u003c/a\u003e\u003c/li\u003e\n      \u003cli\u003e\u003ca href=\"#22-connection-request-related-structs\" id=\"markdown-toc-22-connection-request-related-structs\"\u003e2.2 Connection request related structs\u003c/a\u003e        \u003cul\u003e\n          \u003cli\u003e\u003ca href=\"#221-struct-request_socka-proto-agnostic-connection-request\" id=\"markdown-toc-221-struct-request_socka-proto-agnostic-connection-request\"\u003e2.2.1 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003estruct request_sock\u003c/code\u003e：a (proto agnostic) connection request\u003c/a\u003e\u003c/li\u003e\n          \u003cli\u003e\u003ca href=\"#222-struct-inet_request_sock-wraps-over-struct-request_sock\" id=\"markdown-toc-222-struct-inet_request_sock-wraps-over-struct-request_sock\"\u003e2.2.2 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003estruct inet_request_sock\u003c/code\u003e: wraps over \u003ccode class=\"language-plaintext highlighter-rouge\"\u003estruct request_sock\u003c/code\u003e\u003c/a\u003e\u003c/li\u003e\n          \u003cli\u003e\u003ca href=\"#223-struct-tcp_request_sock-wraps-over-struct-inet_request_sock\" id=\"markdown-toc-223-struct-tcp_request_sock-wraps-over-struct-inet_request_sock\"\u003e2.2.3 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003estruct tcp_request_sock\u003c/code\u003e: wraps over \u003ccode class=\"language-plaintext highlighter-rouge\"\u003estruct inet_request_sock\u003c/code\u003e\u003c/a\u003e\u003c/li\u003e\n          \u003cli\u003e\u003ca href=\"#224-struct-request_sock_queuerequest-queue\" id=\"markdown-toc-224-struct-request_sock_queuerequest-queue\"\u003e2.2.4 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003estruct request_sock_queue\u003c/code\u003e：request queue\u003c/a\u003e\u003c/li\u003e\n        \u003c/ul\u003e\n      \u003c/li\u003e\n      \u003cli\u003e\u003ca href=\"#23-structures-of-long-lifetime-objects\" id=\"markdown-toc-23-structures-of-long-lifetime-objects\"\u003e2.3 Structures of long lifetime objects\u003c/a\u003e        \u003cul\u003e\n          \u003cli\u003e\u003ca href=\"#231-struct-socket-general-bsd-socket\" id=\"markdown-toc-231-struct-socket-general-bsd-socket\"\u003e2.3.1 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003estruct socket\u003c/code\u003e: general BSD socket\u003c/a\u003e\u003c/li\u003e\n          \u003cli\u003e\u003ca href=\"#232-struct-sock_common-minimal-network-layer-representation-of-sockets\" id=\"markdown-toc-232-struct-sock_common-minimal-network-layer-representation-of-sockets\"\u003e2.3.2 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003estruct sock_common\u003c/code\u003e: minimal network layer representation of sockets\u003c/a\u003e\u003c/li\u003e\n          \u003cli\u003e\u003ca href=\"#233-struct-sock-network-layer-representation-of-sockets\" id=\"markdown-toc-233-struct-sock-network-layer-representation-of-sockets\"\u003e2.3.3 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003estruct sock\u003c/code\u003e: network layer representation of sockets\u003c/a\u003e\u003c/li\u003e\n          \u003cli\u003e\u003ca href=\"#234-struct-inet_sock-inet-socket-wraps-over-struct-sock\" id=\"markdown-toc-234-struct-inet_sock-inet-socket-wraps-over-struct-sock\"\u003e2.3.4 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003estruct inet_sock\u003c/code\u003e: INET socket, wraps over \u003ccode class=\"language-plaintext highlighter-rouge\"\u003estruct sock\u003c/code\u003e\u003c/a\u003e\u003c/li\u003e\n          \u003cli\u003e\u003ca href=\"#235-struct-inet_connection_sock-connection-oriented-inet-socket-wraps-over-struct-inet_sock\" id=\"markdown-toc-235-struct-inet_connection_sock-connection-oriented-inet-socket-wraps-over-struct-inet_sock\"\u003e2.3.5 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003estruct inet_connection_sock\u003c/code\u003e: connection-oriented INET socket, wraps over \u003ccode class=\"language-plaintext highlighter-rouge\"\u003estruct inet_sock\u003c/code\u003e\u003c/a\u003e\u003c/li\u003e\n          \u003cli\u003e\u003ca href=\"#236-struct-tcp_sock-wraps-over-struct-inet_connection_sock\" id=\"markdown-toc-236-struct-tcp_sock-wraps-over-struct-inet_connection_sock\"\u003e2.3.6 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003estruct tcp_sock\u003c/code\u003e: wraps over \u003ccode class=\"language-plaintext highlighter-rouge\"\u003estruct inet_connection_sock\u003c/code\u003e\u003c/a\u003e\u003c/li\u003e\n        \u003c/ul\u003e\n      \u003c/li\u003e\n      \u003cli\u003e\u003ca href=\"#24-summary\" id=\"markdown-toc-24-summary\"\u003e2.4 Summary\u003c/a\u003e\u003c/li\u003e\n    \u003c/ul\u003e\n  \u003c/li\u003e\n  \u003cli\u003e\u003ca href=\"#3-listen-system-call-explained\" id=\"markdown-toc-3-listen-system-call-explained\"\u003e3 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003elisten()\u003c/code\u003e system call explained\u003c/a\u003e    \u003cul\u003e\n      \u003cli\u003e\u003ca href=\"#31-call-stack\" id=\"markdown-toc-31-call-stack\"\u003e3.1 Call stack\u003c/a\u003e\u003c/li\u003e\n      \u003cli\u003e\u003ca href=\"#32-listen---__sys_listen---sock-ops-listen\" id=\"markdown-toc-32-listen---__sys_listen---sock-ops-listen\"\u003e3.2 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003elisten() -\u0026gt; __sys_listen() -\u0026gt; sock-\u0026gt;ops-\u0026gt;listen()\u003c/code\u003e\u003c/a\u003e\u003c/li\u003e\n      \u003cli\u003e\u003ca href=\"#33-inet-tcpipv4-type-socket\" id=\"markdown-toc-33-inet-tcpipv4-type-socket\"\u003e3.3 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eINET TCP/IPv4\u003c/code\u003e type socket\u003c/a\u003e        \u003cul\u003e\n          \u003cli\u003e\u003ca href=\"#331-inet_listen---inet_csk_listen_start\" id=\"markdown-toc-331-inet_listen---inet_csk_listen_start\"\u003e3.3.1 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003einet_listen() -\u0026gt; inet_csk_listen_start()\u003c/code\u003e\u003c/a\u003e\u003c/li\u003e\n          \u003cli\u003e\u003ca href=\"#332-inet_csk_listen_start\" id=\"markdown-toc-332-inet_csk_listen_start\"\u003e3.3.2 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003einet_csk_listen_start()\u003c/code\u003e\u003c/a\u003e\u003c/li\u003e\n          \u003cli\u003e\u003ca href=\"#333-tcp_call_bpfsk-bpf_sock_ops_tcp_listen_cb\" id=\"markdown-toc-333-tcp_call_bpfsk-bpf_sock_ops_tcp_listen_cb\"\u003e3.3.3 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003etcp_call_bpf(sk, BPF_SOCK_OPS_TCP_LISTEN_CB)\u003c/code\u003e\u003c/a\u003e\u003c/li\u003e\n        \u003c/ul\u003e\n      \u003c/li\u003e\n      \u003cli\u003e\u003ca href=\"#34-summary\" id=\"markdown-toc-34-summary\"\u003e3.4 Summary\u003c/a\u003e\u003c/li\u003e\n    \u003c/ul\u003e\n  \u003c/li\u003e\n  \u003cli\u003e\u003ca href=\"#4-3-way-handshake-explained-server-side-view\" id=\"markdown-toc-4-3-way-handshake-explained-server-side-view\"\u003e4 3-way handshake explained: server side view\u003c/a\u003e    \u003cul\u003e\n      \u003cli\u003e\u003ca href=\"#41-server-received-a-syn-3whs-progress-13\" id=\"markdown-toc-41-server-received-a-syn-3whs-progress-13\"\u003e4.1 Server received a \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eSYN\u003c/code\u003e (3WHS progress: 1/3)\u003c/a\u003e        \u003cul\u003e\n          \u003cli\u003e\u003ca href=\"#411-call-stack\" id=\"markdown-toc-411-call-stack\"\u003e4.1.1 Call stack\u003c/a\u003e\u003c/li\u003e\n          \u003cli\u003e\u003ca href=\"#412-tcp_rcv_state_processsk-skb---conn_request\" id=\"markdown-toc-412-tcp_rcv_state_processsk-skb---conn_request\"\u003e4.1.2 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003etcp_rcv_state_process(sk, skb) -\u0026gt; conn_request()\u003c/code\u003e\u003c/a\u003e\u003c/li\u003e\n          \u003cli\u003e\u003ca href=\"#413-conn_request---tcp_v4_conn_request\" id=\"markdown-toc-413-conn_request---tcp_v4_conn_request\"\u003e4.1.3 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003econn_request() -\u0026gt; tcp_v4_conn_request()\u003c/code\u003e\u003c/a\u003e\u003c/li\u003e\n          \u003cli\u003e\u003ca href=\"#414-tcp_conn_request\" id=\"markdown-toc-414-tcp_conn_request\"\u003e4.1.4 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003etcp_conn_request()\u003c/code\u003e\u003c/a\u003e            \u003cul\u003e\n              \u003cli\u003e\u003ca href=\"#allocate-memory-for-request_sock-per-connection-memory\" id=\"markdown-toc-allocate-memory-for-request_sock-per-connection-memory\"\u003eAllocate memory for request_sock (per-connection memory)\u003c/a\u003e\u003c/li\u003e\n              \u003cli\u003e\u003ca href=\"#add-to-syn-queue-if-tfo-off\" id=\"markdown-toc-add-to-syn-queue-if-tfo-off\"\u003eAdd to “SYN queue” (if TFO off)\u003c/a\u003e\u003c/li\u003e\n              \u003cli\u003e\u003ca href=\"#tcp-global-hash-tables-initialization\" id=\"markdown-toc-tcp-global-hash-tables-initialization\"\u003eTCP global hash tables initialization\u003c/a\u003e\u003c/li\u003e\n            \u003c/ul\u003e\n          \u003c/li\u003e\n        \u003c/ul\u003e\n      \u003c/li\u003e\n      \u003cli\u003e\u003ca href=\"#42-server-replied-a-synack-3whs-progress-23\" id=\"markdown-toc-42-server-replied-a-synack-3whs-progress-23\"\u003e4.2 Server replied a \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eSYN+ACK\u003c/code\u003e (3WHS progress: 2/3)\u003c/a\u003e        \u003cul\u003e\n          \u003cli\u003e\u003ca href=\"#tcp_v4_send_synack\" id=\"markdown-toc-tcp_v4_send_synack\"\u003e\u003ccode class=\"language-plaintext highlighter-rouge\"\u003etcp_v4_send_synack()\u003c/code\u003e\u003c/a\u003e\u003c/li\u003e\n          \u003cli\u003e\u003ca href=\"#retransmit-synack\" id=\"markdown-toc-retransmit-synack\"\u003eRetransmit SYN+ACK\u003c/a\u003e\u003c/li\u003e\n        \u003c/ul\u003e\n      \u003c/li\u003e\n      \u003cli\u003e\u003ca href=\"#43-server-received-the-ack-3whs-progress-33\" id=\"markdown-toc-43-server-received-the-ack-3whs-progress-33\"\u003e4.3 Server received the \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eACK\u003c/code\u003e (3WHS progress: 3/3)\u003c/a\u003e        \u003cul\u003e\n          \u003cli\u003e\u003ca href=\"#431-call-stack\" id=\"markdown-toc-431-call-stack\"\u003e4.3.1 Call stack\u003c/a\u003e\u003c/li\u003e\n          \u003cli\u003e\u003ca href=\"#432-tcp_rcv_state_process---tcp_check_req\" id=\"markdown-toc-432-tcp_rcv_state_process---tcp_check_req\"\u003e4.3.2 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003etcp_rcv_state_process() -\u0026gt; tcp_check_req()\u003c/code\u003e\u003c/a\u003e\u003c/li\u003e\n          \u003cli\u003e\u003ca href=\"#433-tcp_check_req---syn_recv_sock\" id=\"markdown-toc-433-tcp_check_req---syn_recv_sock\"\u003e4.3.3 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003etcp_check_req() -\u0026gt; syn_recv_sock()\u003c/code\u003e\u003c/a\u003e\u003c/li\u003e\n          \u003cli\u003e\u003ca href=\"#434-syn_recv_sock---tcp_v4_syn_recv_sock\" id=\"markdown-toc-434-syn_recv_sock---tcp_v4_syn_recv_sock\"\u003e4.3.4 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003esyn_recv_sock() -\u0026gt; tcp_v4_syn_recv_sock()\u003c/code\u003e\u003c/a\u003e\u003c/li\u003e\n          \u003cli\u003e\u003ca href=\"#435-inet_csk_complete_hashdance\" id=\"markdown-toc-435-inet_csk_complete_hashdance\"\u003e4.3.5 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003einet_csk_complete_hashdance()\u003c/code\u003e\u003c/a\u003e\u003c/li\u003e\n        \u003c/ul\u003e\n      \u003c/li\u003e\n    \u003c/ul\u003e\n  \u003c/li\u003e\n  \u003cli\u003e\u003ca href=\"#5-connections-accept-by-application\" id=\"markdown-toc-5-connections-accept-by-application\"\u003e5 Connections \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eaccept()\u003c/code\u003e by application\u003c/a\u003e    \u003cul\u003e\n      \u003cli\u003e\u003ca href=\"#51-inet_accept---sk-sk_prot-accpt---inet_csk_accept\" id=\"markdown-toc-51-inet_accept---sk-sk_prot-accpt---inet_csk_accept\"\u003e5.1 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003einet_accept() -\u0026gt; sk-\u0026gt;sk_prot-\u0026gt;accpt() -\u0026gt; inet_csk_accept()\u003c/code\u003e\u003c/a\u003e\u003c/li\u003e\n      \u003cli\u003e\u003ca href=\"#52-inet_csk_accept---reqsk_queue_remove\" id=\"markdown-toc-52-inet_csk_accept---reqsk_queue_remove\"\u003e5.2 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003einet_csk_accept() -\u0026gt; reqsk_queue_remove()\u003c/code\u003e\u003c/a\u003e\u003c/li\u003e\n      \u003cli\u003e\u003ca href=\"#53-reqsk_queue_remove\" id=\"markdown-toc-53-reqsk_queue_remove\"\u003e5.3 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003ereqsk_queue_remove()\u003c/code\u003e\u003c/a\u003e\u003c/li\u003e\n    \u003c/ul\u003e\n  \u003c/li\u003e\n  \u003cli\u003e\u003ca href=\"#6-a-tale-of-two-queues\" id=\"markdown-toc-6-a-tale-of-two-queues\"\u003e6 A tale of two queues\u003c/a\u003e    \u003cul\u003e\n      \u003cli\u003e\u003ca href=\"#61-syn-queue\" id=\"markdown-toc-61-syn-queue\"\u003e6.1 SYN Queue\u003c/a\u003e        \u003cul\u003e\n          \u003cli\u003e\u003ca href=\"#purpose-storing-syn_recv-state-connections\" id=\"markdown-toc-purpose-storing-syn_recv-state-connections\"\u003ePurpose: storing SYN_RECV state connections\u003c/a\u003e\u003c/li\u003e\n          \u003cli\u003e\u003ca href=\"#queue-position--implementation\" id=\"markdown-toc-queue-position--implementation\"\u003eQueue position \u0026amp; implementation\u003c/a\u003e\u003c/li\u003e\n          \u003cli\u003e\u003ca href=\"#kernel-code-checking-whether-the-queue-is-full\" id=\"markdown-toc-kernel-code-checking-whether-the-queue-is-full\"\u003eKernel code checking whether the queue is full\u003c/a\u003e\u003c/li\u003e\n          \u003cli\u003e\u003ca href=\"#queue-configurations\" id=\"markdown-toc-queue-configurations\"\u003eQueue configurations\u003c/a\u003e\u003c/li\u003e\n          \u003cli\u003e\u003ca href=\"#check-queue-status\" id=\"markdown-toc-check-queue-status\"\u003eCheck queue status\u003c/a\u003e\u003c/li\u003e\n          \u003cli\u003e\u003ca href=\"#syn-queue-overflow-test-simple-syn-flood\" id=\"markdown-toc-syn-queue-overflow-test-simple-syn-flood\"\u003e“SYN queue” overflow test: simple SYN flood\u003c/a\u003e\u003c/li\u003e\n        \u003c/ul\u003e\n      \u003c/li\u003e\n      \u003cli\u003e\u003ca href=\"#62-accept-queue\" id=\"markdown-toc-62-accept-queue\"\u003e6.2 Accept Queue\u003c/a\u003e        \u003cul\u003e\n          \u003cli\u003e\u003ca href=\"#purpose-storing-established-but-havent-been-accept-ed-connections\" id=\"markdown-toc-purpose-storing-established-but-havent-been-accept-ed-connections\"\u003ePurpose: storing ESTABLISHED but haven’t been \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eaccept()\u003c/code\u003e-ed connections\u003c/a\u003e\u003c/li\u003e\n          \u003cli\u003e\u003ca href=\"#queue-position--implementation-1\" id=\"markdown-toc-queue-position--implementation-1\"\u003eQueue position \u0026amp; implementation\u003c/a\u003e\u003c/li\u003e\n          \u003cli\u003e\u003ca href=\"#kernel-code-checking-whether-the-queue-is-full-1\" id=\"markdown-toc-kernel-code-checking-whether-the-queue-is-full-1\"\u003eKernel code checking whether the queue is full\u003c/a\u003e\u003c/li\u003e\n          \u003cli\u003e\u003ca href=\"#queue-configurations-1\" id=\"markdown-toc-queue-configurations-1\"\u003eQueue configurations\u003c/a\u003e\u003c/li\u003e\n          \u003cli\u003e\u003ca href=\"#check-queue-status-1\" id=\"markdown-toc-check-queue-status-1\"\u003eCheck queue status\u003c/a\u003e\u003c/li\u003e\n        \u003c/ul\u003e\n      \u003c/li\u003e\n    \u003c/ul\u003e\n  \u003c/li\u003e\n  \u003cli\u003e\u003ca href=\"#7-more-discussions\" id=\"markdown-toc-7-more-discussions\"\u003e7 More discussions\u003c/a\u003e    \u003cul\u003e\n      \u003cli\u003e\u003ca href=\"#71-tfo-tcp-fast-open\" id=\"markdown-toc-71-tfo-tcp-fast-open\"\u003e7.1 TFO (TCP Fast Open)\u003c/a\u003e\u003c/li\u003e\n    \u003c/ul\u003e\n  \u003c/li\u003e\n  \u003cli\u003e\u003ca href=\"#references\" id=\"markdown-toc-references\"\u003eReferences\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003chr/\u003e\n\n\u003ch1 id=\"1-introduction\"\u003e1 Introduction\u003c/h1\u003e\n\n\u003cp\u003eOn encountering problems related to TCP listen overflow, listen drop etc,\nalmost all search results on the internet will tell you that there are\ntwo queues for each listening socket:\u003c/p\u003e\n\n\u003cul\u003e\n  \u003cli\u003e\u003cstrong\u003e\u003cmark\u003eA SYN queue\u003c/mark\u003e\u003c/strong\u003e: used for storing connection requests (one connection request per SYN packet);\u003c/li\u003e\n  \u003cli\u003e\u003cstrong\u003e\u003cmark\u003eAn accept queue\u003c/mark\u003e\u003c/strong\u003e: used to store fully established (but haven’t been \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eaccept()\u003c/code\u003e-ed by the server application) connections\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eWhile this is a right answer for most cases, it’s also a fairly high-level answer\nwhich may be not thathelpful for solving the tricky and specific problems you’re facing.\nThe latter needs a deep and thorough understanding about the relationships and working mechanism of\nthe queues, such as,\u003c/p\u003e\n\n\u003cul\u003e\n  \u003cli\u003eWhy two queues are utilized? e.g. Whey not single or three ones?\u003c/li\u003e\n  \u003cli\u003eAre there interactions between the two queues, and what are them?\u003c/li\u003e\n  \u003cli\u003eWhat are the differences between listen overflow and listen drops?\u003c/li\u003e\n  \u003cli\u003eAre there configuration best practices and how the configurations relate to kernel code?\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eTo answer these questions, we need first go back to history, to see what’s the\ntechnical requirements of the LISTEN operation.\nTo avoid being superfluous, we’ll narrow down our scope to TCP/IPv4 socket in this post.\u003c/p\u003e\n\n\u003ch2 id=\"11-why-listen-queues\"\u003e1.1 Why listen queues?\u003c/h2\u003e\n\n\u003cp\u003eThe TCP/IP specification defines the expected behavior of the famous 3-way handshake (3WHS):\u003c/p\u003e\n\n\u003col\u003e\n  \u003cli\u003eClient -\u0026gt; Server: SYN\u003c/li\u003e\n  \u003cli\u003eServer -\u0026gt; Client: SYN+ACK\u003c/li\u003e\n  \u003cli\u003eClient -\u0026gt; Server: ACK\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003cp\u003eBut if you’re a devloper to implement these interactions for a LISTEN state socket,\nyou’ll soon meet many practical challenges, such as:\u003c/p\u003e\n\n\u003col\u003e\n  \u003cli\u003eWhere to store the intermediate SYNs (or SYN info) for the listening socket?\u003c/li\u003e\n  \u003cli\u003eWhich data structure to use? e.g. FIFO queue? hash table?\u003c/li\u003e\n  \u003cli\u003eOptimization considerations to reduce memory and CPU overhead, for example,\n  the more memory used for storing intermediate information of a connection request,\n  the more we’re likely to be SYN flooding attacked.\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003cp\u003eThis is why the queues come in place: the protocol only standardized the expected behavior,\nbut for a real implementation of the protocol, tons of stuffs need to be concerned and designed;\nin other words, the two-queue mechanism is \u003cstrong\u003e\u003cmark\u003eimplementation related, rather than protocol related\u003c/mark\u003e\u003c/strong\u003e.\u003c/p\u003e\n\n\u003cp\u003eWith the origin found, let’s get a deeper understanding about the technical\nrequirements and solutions.\u003c/p\u003e\n\n\u003ch2 id=\"12-technical-requirements-for-server-side-3whs-implementation-1\"\u003e1.2 Technical requirements for (server-side) 3WHS implementation [1]\u003c/h2\u003e\n\n\u003cp\u003eWith the 3-way handshake mechanism in TCP, an incoming connection will go through\nan intermediate state \u003cstrong\u003e\u003cmark\u003e\u003ccode\u003eSYN_RECV\u003c/code\u003e\u003c/mark\u003e\u003c/strong\u003e before it reaches\nthe \u003cstrong\u003e\u003cmark\u003e\u003ccode\u003eESTABLISHED\u003c/code\u003e\u003c/mark\u003e\u003c/strong\u003e state and can be returned by the\n\u003cstrong\u003e\u003cmark\u003e\u003ccode\u003eaccept()\u003c/code\u003e\u003c/mark\u003e\u003c/strong\u003e syscall to the application. This means that a\nTCP/IP stack (server side) has \u003cstrong\u003e\u003cmark\u003etwo options to implement the backlog queue\u003c/mark\u003e\u003c/strong\u003e:\u003c/p\u003e\n\n\u003col\u003e\n  \u003cli\u003e\n    \u003cp\u003eUsing a single queue.\u003c/p\u003e\n\n    \u003cul\u003e\n      \u003cli\u003eOn receiving a SYN, send back a SYN+ACK and insert the connection to the queue;\u003c/li\u003e\n      \u003cli\u003eOn receiving the corresponding ACK, change the connection state to ESTABLISHED then\nwait for application to dequeue it with an \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eaccept()\u003c/code\u003e system call.\u003c/li\u003e\n    \u003c/ul\u003e\n\n    \u003cp\u003eIn this way, the queue can contain connections in two different state:\n SYN_RECV and ESTABLISHED.  Only connections in the latter state can be\n returned to the application by the \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eaccept()\u003c/code\u003e syscall.\u003c/p\u003e\n  \u003c/li\u003e\n  \u003cli\u003e\n    \u003cp\u003eUsing two queues.\u003c/p\u003e\n\n    \u003cul\u003e\n      \u003cli\u003eA SYN queue (or incomplete connection queue): hold \u003cstrong\u003e\u003cmark\u003e\u003ccode\u003eSYN_RECV state\u003c/code\u003e\u003c/mark\u003e\u003c/strong\u003e connections;\u003c/li\u003e\n      \u003cli\u003eAn accept queue (or complete connection queue): hold \u003cstrong\u003e\u003cmark\u003e\u003ccode\u003eESTABLISHED\u003c/code\u003e\u003c/mark\u003e\u003c/strong\u003e state connections;\u003c/li\u003e\n    \u003c/ul\u003e\n\n    \u003cp\u003eIn this fashion, a connection in the SYN queue is moved to the accept queue\n when its state changes to ESTABLISHED after the ACK in the 3-way handshake\n is received; the accept() call simply consumes connections from the accept queue.\u003c/p\u003e\n  \u003c/li\u003e\n\u003c/ol\u003e\n\n\u003cp\u003eHistorically, BSD derived TCP implementations use the first approach, which is\ndescribed in section \u003cstrong\u003e\u003cmark\u003e\u003ccode\u003e14.5\u003c/code\u003e, \u003ccode\u003elisten\u003c/code\u003e Backlog Queue\u003c/mark\u003e\u003c/strong\u003e\nin W. Richard Stevens’ classic textbook \u003cstrong\u003e\u003cmark\u003eTCP/IP Illustrated, Volume 3\u003c/mark\u003e\u003c/strong\u003e.\u003c/p\u003e\n\n\u003cp\u003eOn Linux, things are different, as mentioned in the man page of the \u003ccode class=\"language-plaintext highlighter-rouge\"\u003elisten\u003c/code\u003e syscall:\u003c/p\u003e\n\n\u003cdiv class=\"language-plaintext highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003eThe behavior of the backlog argument on TCP sockets changed with Linux 2.2.\n\nNow it specifies the queue length for completely established sockets waiting to be\naccepted, instead of the number of incomplete connection requests.\n\nThe maximum length of the queue for incomplete sockets can be set using\n/proc/sys/net/ipv4/tcp_max_syn_backlog.\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003eThis indicates that modern Linux kernels use the second option with two distinct\nqueues:\u003c/p\u003e\n\n\u003cul\u003e\n  \u003cli\u003eA SYN queue with a size specified by a system wide setting, and\u003c/li\u003e\n  \u003cli\u003eAn accept queue with a size specified by the application.\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eIs this the truth (\u003cstrong\u003e\u003cmark\u003etwo distinct \u0026amp; real queues\u003c/mark\u003e\u003c/strong\u003e) in the Linux implementation?\u003c/p\u003e\n\n\u003ch2 id=\"13-where-are-the-queues-in-linux-kernel-code\"\u003e1.3 Where are the queues in Linux kernel code?\u003c/h2\u003e\n\n\u003cp\u003eWhile it’s not too hard to find the \u003ca href=\"https://github.com/torvalds/linux/blob/v5.10/include/net/inet_connection_sock.h#L83\"\u003eaccept queue\u003c/a\u003e\nin kernel code, you’ll soon realize it’s not that easy to locate the former one;\nwhat makes things even strange is that code that seems like updating\nthe length of SYN queue, eventually updates the fields of the accept queue.\u003c/p\u003e\n\n\u003cp\u003eWith these doubts in mind, you may wonder like me:\n\u003cstrong\u003e\u003cmark\u003edoes SYN queue really exists\u003c/mark\u003e\u003c/strong\u003e? (Careful readers may have already\nnoticed that the phrase of “SYN queue” has been double quoted in the previous sections.)\u003c/p\u003e\n\n\u003ch2 id=\"14-purpose-of-this-post\"\u003e1.4 Purpose of this post\u003c/h2\u003e\n\n\u003cp\u003eThis post tries to answer the above question by digging into the kernel code,\nand the kernel code will be based on \u003ccode class=\"language-plaintext highlighter-rouge\"\u003e5.10\u003c/code\u003e.\nApart from that, we’ll also discuss some related issues in real environments.\u003c/p\u003e\n\n\u003cp\u003eThe remainings of this post is organized as follows:\u003c/p\u003e\n\n\u003cul\u003e\n  \u003cli\u003eSection 2 introduces some important socket related data structures in the kernel;\u003c/li\u003e\n  \u003cli\u003eSection 3 walks through the code of \u003ccode class=\"language-plaintext highlighter-rouge\"\u003elisten()\u003c/code\u003e system call;\u003c/li\u003e\n  \u003cli\u003eSection 4 has a look at the 3WHS implementation in server side;\u003c/li\u003e\n  \u003cli\u003eSection 5 describes the implementation of \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eaccept()\u003c/code\u003e system call;\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eWith all these background knowledges,\u003c/p\u003e\n\n\u003cul\u003e\n  \u003cli\u003eSection 6 finally answers the question we asked above;\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eIf you prefer \u003cstrong\u003e\u003cmark\u003equick answers and takeaways\u003c/mark\u003e\u003c/strong\u003e, jump to \u003ca href=\"#section_6\"\u003esection 6\u003c/a\u003e directly.\u003c/p\u003e\n\n\u003ch1 id=\"2-fundamentals-socket-related-data-structures\"\u003e2 Fundamentals: socket related data structures\u003c/h1\u003e\n\n\u003cp\u003eBefore digging inside, we need to clarify some socket related\nstructures in the kernel.\u003c/p\u003e\n\n\u003cp align=\"center\"\u003e\u003cimg src=\"/assets/img/tcp-listen-a-tale-of-two-queues/socket-related-structs.png\" width=\"100%\" height=\"100%\"/\u003e\u003c/p\u003e\n\u003cp align=\"center\"\u003eFig. Socket related data structures in the kernel\u003c/p\u003e\n\n\u003ch2 id=\"21-classification-of-socket-related-structs\"\u003e2.1 Classification of socket related structs\u003c/h2\u003e\n\n\u003cp align=\"center\"\u003e\u003cimg src=\"/assets/img/tcp-listen-a-tale-of-two-queues/socket-structs-scope.png\" width=\"80%\" height=\"80%\"/\u003e\u003c/p\u003e\n\u003cp align=\"center\"\u003eFig. Socket related data structures and their memory layouts\u003c/p\u003e\n\n\u003cp\u003eData structures that describe intermediate objects (\u003cstrong\u003e\u003cmark\u003econnection requests\u003c/mark\u003e\u003c/strong\u003e),\u003c/p\u003e\n\n\u003cul\u003e\n  \u003cli\u003e\u003ccode class=\"language-plaintext highlighter-rouge\"\u003estruct request_sock\u003c/code\u003e: describes a general, \u003cstrong\u003e\u003cmark\u003eprotocol agnostic connection request\u003c/mark\u003e\u003c/strong\u003e;\u003c/li\u003e\n  \u003cli\u003e\u003ccode class=\"language-plaintext highlighter-rouge\"\u003estruct inet_request_sock\u003c/code\u003e: wraps over \u003ccode class=\"language-plaintext highlighter-rouge\"\u003estruct request_sock\u003c/code\u003e, describes INET type request;\u003c/li\u003e\n  \u003cli\u003e\u003ccode class=\"language-plaintext highlighter-rouge\"\u003estruct tcp_request_sock\u003c/code\u003e：wraps over \u003ccode class=\"language-plaintext highlighter-rouge\"\u003estruct inet_request_sock\u003c/code\u003e, describes TCP INET type request;\u003c/li\u003e\n  \u003cli\u003e\u003ccode class=\"language-plaintext highlighter-rouge\"\u003estruct request_sock_queue\u003c/code\u003e: describes a \u003cstrong\u003e\u003cmark\u003erequest queue\u003c/mark\u003e\u003c/strong\u003e.\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eData structures that hold information of real sockets:\u003c/p\u003e\n\n\u003cul\u003e\n  \u003cli\u003e\u003ccode class=\"language-plaintext highlighter-rouge\"\u003estruct sock_common\u003c/code\u003e：minimal network layer representation of sockets;\u003c/li\u003e\n  \u003cli\u003e\u003ccode class=\"language-plaintext highlighter-rouge\"\u003estruct sock\u003c/code\u003e：network layer representation of sockets; \u003cstrong\u003e\u003cmark\u003eprotocol agnostic\u003c/mark\u003e\u003c/strong\u003e;\u003c/li\u003e\n  \u003cli\u003e\u003ccode class=\"language-plaintext highlighter-rouge\"\u003estruct inet_sock\u003c/code\u003e：sockets of INET type，wraps over \u003ccode class=\"language-plaintext highlighter-rouge\"\u003estruct sock\u003c/code\u003e;\u003c/li\u003e\n  \u003cli\u003e\u003ccode class=\"language-plaintext highlighter-rouge\"\u003estruct inet_connection_sock\u003c/code\u003e：Connection-oriented INET sockets, wraps over \u003ccode class=\"language-plaintext highlighter-rouge\"\u003estruct inet_sock\u003c/code\u003e;\u003c/li\u003e\n  \u003cli\u003e\u003ccode class=\"language-plaintext highlighter-rouge\"\u003estruct tcp_sock\u003c/code\u003e：TCP INET sockets, wraps over \u003ccode class=\"language-plaintext highlighter-rouge\"\u003estruct inet_connection_sock\u003c/code\u003e.\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2 id=\"22-connection-request-related-structs\"\u003e2.2 Connection request related structs\u003c/h2\u003e\n\n\u003cp align=\"center\"\u003e\u003cimg src=\"/assets/img/tcp-listen-a-tale-of-two-queues/socket-structs-scope.png\" width=\"80%\" height=\"80%\"/\u003e\u003c/p\u003e\n\u003cp align=\"center\"\u003eFig. Socket related data structures and their memory layouts\u003c/p\u003e\n\n\u003ch3 id=\"221-struct-request_socka-proto-agnostic-connection-request\"\u003e2.2.1 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003estruct request_sock\u003c/code\u003e：a (proto agnostic) connection request\u003c/h3\u003e\n\n\u003cdiv class=\"language-c highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"c1\"\u003e// https://github.com/torvalds/linux/blob/v5.10/include/net/request_sock.h#L53\u003c/span\u003e\n\n\u003cspan class=\"c1\"\u003e// struct request_sock - mini sock to represent a connection request\u003c/span\u003e\n\u003cspan class=\"k\"\u003estruct\u003c/span\u003e \u003cspan class=\"n\"\u003erequest_sock\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003estruct\u003c/span\u003e \u003cspan class=\"n\"\u003esock_common\u003c/span\u003e        \u003cspan class=\"n\"\u003e__req_common\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"c1\"\u003e// Important! we\u0026#39;ll talk about this later\u003c/span\u003e\n\n    \u003cspan class=\"k\"\u003estruct\u003c/span\u003e \u003cspan class=\"n\"\u003erequest_sock\u003c/span\u003e      \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003edl_next\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eu16\u003c/span\u003e                       \u003cspan class=\"n\"\u003emss\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eu8\u003c/span\u003e                        \u003cspan class=\"n\"\u003enum_retrans\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e  \u003cspan class=\"cm\"\u003e/* number of retransmits */\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eu8\u003c/span\u003e                        \u003cspan class=\"n\"\u003esyncookie\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e  \u003cspan class=\"cm\"\u003e/* syncookie: encode tcpopts in timestamp */\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eu8\u003c/span\u003e                        \u003cspan class=\"n\"\u003enum_timeout\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e\u003cspan class=\"mi\"\u003e7\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\u003cspan class=\"cm\"\u003e/* number of timeouts */\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eu32\u003c/span\u003e                       \u003cspan class=\"n\"\u003ets_recent\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"k\"\u003estruct\u003c/span\u003e \u003cspan class=\"n\"\u003etimer_list\u003c/span\u003e         \u003cspan class=\"n\"\u003ersk_timer\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"k\"\u003estruct\u003c/span\u003e \u003cspan class=\"n\"\u003erequest_sock_ops\u003c/span\u003e    \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003ersk_ops\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\n    \u003cspan class=\"k\"\u003estruct\u003c/span\u003e \u003cspan class=\"n\"\u003esock\u003c/span\u003e            \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003esk\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"k\"\u003estruct\u003c/span\u003e \u003cspan class=\"n\"\u003esaved_syn\u003c/span\u003e       \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003esaved_syn\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eu32\u003c/span\u003e                     \u003cspan class=\"n\"\u003esecid\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eu32\u003c/span\u003e                     \u003cspan class=\"n\"\u003epeer_secid\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e};\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003eBasic connection request information such as src/dst addresses, are stored in the\n\u003ccode class=\"language-plaintext highlighter-rouge\"\u003estruct sock_common __req_common\u003c/code\u003e field, we’ll introduce this important struct later.\u003c/p\u003e\n\n\u003ch3 id=\"222-struct-inet_request_sock-wraps-over-struct-request_sock\"\u003e2.2.2 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003estruct inet_request_sock\u003c/code\u003e: wraps over \u003ccode class=\"language-plaintext highlighter-rouge\"\u003estruct request_sock\u003c/code\u003e\u003c/h3\u003e\n\n\u003cp\u003e\u003ccode class=\"language-plaintext highlighter-rouge\"\u003estruct request_sock\u003c/code\u003e is a general request structure, for specific connection types,\nsuch as INET connection request, more fields are needed to describe the INET parameters,\nand this is where \u003ccode class=\"language-plaintext highlighter-rouge\"\u003estrcut inet_request_sock\u003c/code\u003e comes to place:\u003c/p\u003e\n\n\u003cdiv class=\"language-c highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"c1\"\u003e// https://github.com/torvalds/linux/blob/v5.10/include/net/inet_sock.h#L68\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003estruct\u003c/span\u003e \u003cspan class=\"n\"\u003einet_request_sock\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003estruct\u003c/span\u003e \u003cspan class=\"n\"\u003erequest_sock\u003c/span\u003e    \u003cspan class=\"n\"\u003ereq\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\n    \u003cspan class=\"n\"\u003eu16\u003c/span\u003e         \u003cspan class=\"n\"\u003esnd_wscale\u003c/span\u003e \u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"mi\"\u003e4\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n                \u003cspan class=\"n\"\u003ercv_wscale\u003c/span\u003e \u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"mi\"\u003e4\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n                \u003cspan class=\"n\"\u003etstamp_ok\u003c/span\u003e  \u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n                \u003cspan class=\"n\"\u003esack_ok\u003c/span\u003e    \u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n                \u003cspan class=\"n\"\u003ewscale_ok\u003c/span\u003e  \u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n                \u003cspan class=\"n\"\u003eecn_ok\u003c/span\u003e     \u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n                \u003cspan class=\"n\"\u003eacked\u003c/span\u003e      \u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n                \u003cspan class=\"nl\"\u003eno_srccheck:\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n                \u003cspan class=\"n\"\u003esmc_ok\u003c/span\u003e     \u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eu32\u003c/span\u003e         \u003cspan class=\"n\"\u003eir_mark\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eunion\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"k\"\u003estruct\u003c/span\u003e \u003cspan class=\"n\"\u003eip_options_rcu\u003c/span\u003e \u003cspan class=\"n\"\u003e__rcu\u003c/span\u003e    \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003eireq_opt\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e};\u003c/span\u003e\n\u003cspan class=\"p\"\u003e};\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003eIt simple wraps over \u003ccode class=\"language-plaintext highlighter-rouge\"\u003estruct request_sock\u003c/code\u003e, and appends several INET related fields.\u003c/p\u003e\n\n\u003ch3 id=\"223-struct-tcp_request_sock-wraps-over-struct-inet_request_sock\"\u003e2.2.3 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003estruct tcp_request_sock\u003c/code\u003e: wraps over \u003ccode class=\"language-plaintext highlighter-rouge\"\u003estruct inet_request_sock\u003c/code\u003e\u003c/h3\u003e\n\n\u003cp\u003eIn the same sense, more fields are needed to describe a TCP INET socket request,\nwhich is where \u003ccode class=\"language-plaintext highlighter-rouge\"\u003estruct tcp_request_sock\u003c/code\u003e comes out:\u003c/p\u003e\n\n\u003cdiv class=\"language-c highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"c1\"\u003e// https://github.com/torvalds/linux/blob/v5.10/include/linux/tcp.h#L119\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003estruct\u003c/span\u003e \u003cspan class=\"n\"\u003etcp_request_sock\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003estruct\u003c/span\u003e \u003cspan class=\"n\"\u003einet_request_sock\u003c/span\u003e     \u003cspan class=\"n\"\u003ereq\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"k\"\u003estruct\u003c/span\u003e \u003cspan class=\"n\"\u003etcp_request_sock_ops\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003eaf_specific\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eu64\u003c/span\u003e                \u003cspan class=\"n\"\u003esnt_synack\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"cm\"\u003e/* first SYNACK sent time */\u003c/span\u003e\n    \u003cspan class=\"n\"\u003ebool\u003c/span\u003e               \u003cspan class=\"n\"\u003etfo_listener\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"n\"\u003ebool\u003c/span\u003e               \u003cspan class=\"n\"\u003eis_mptcp\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"n\"\u003ebool\u003c/span\u003e               \u003cspan class=\"n\"\u003edrop_req\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eu32\u003c/span\u003e                \u003cspan class=\"n\"\u003etxhash\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eu32\u003c/span\u003e                \u003cspan class=\"n\"\u003ercv_isn\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eu32\u003c/span\u003e                \u003cspan class=\"n\"\u003esnt_isn\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eu32\u003c/span\u003e                \u003cspan class=\"n\"\u003ets_off\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eu32\u003c/span\u003e                \u003cspan class=\"n\"\u003elast_oow_ack_time\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"cm\"\u003e/* last SYNACK */\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eu32\u003c/span\u003e                \u003cspan class=\"n\"\u003ercv_nxt\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"cm\"\u003e/* the ack # by SYNACK. For FastOpen it\u0026#39;s the seq# after data-in-SYN.  */\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eu8\u003c/span\u003e                 \u003cspan class=\"n\"\u003esyn_tos\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e};\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003ch3 id=\"224-struct-request_sock_queuerequest-queue\"\u003e2.2.4 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003estruct request_sock_queue\u003c/code\u003e：request queue\u003c/h3\u003e\n\n\u003cp\u003e\u003ccode class=\"language-plaintext highlighter-rouge\"\u003estruct request_sock_queue\u003c/code\u003e describe a protocol agnostic request queue, which\nholds a head and a tail pointer to the protocol agnostic queue items:\u003c/p\u003e\n\n\u003cdiv class=\"language-c highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"c1\"\u003e// include/net/request_sock.h\u003c/span\u003e\n\n\u003cspan class=\"c1\"\u003e// struct request_sock_queue - queue of request_socks\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e//\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e// @rskq_accept_head - FIFO head of established children\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e// @rskq_accept_tail - FIFO tail of established children\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e// @rskq_defer_accept - User waits for some data after accept()\u003c/span\u003e\n\u003cspan class=\"k\"\u003estruct\u003c/span\u003e \u003cspan class=\"n\"\u003erequest_sock_queue\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"n\"\u003espinlock_t\u003c/span\u003e      \u003cspan class=\"n\"\u003erskq_lock\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eu8\u003c/span\u003e              \u003cspan class=\"n\"\u003erskq_defer_accept\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eu32\u003c/span\u003e             \u003cspan class=\"n\"\u003esynflood_warned\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\n    \u003cspan class=\"c1\"\u003e// \u0026#34;SYN queue\u0026#34; fields (although this struct is used to create the accept queue)\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eatomic_t\u003c/span\u003e        \u003cspan class=\"n\"\u003eqlen\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e   \u003cspan class=\"c1\"\u003e// current \u0026#34;SYN queue\u0026#34; size\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eatomic_t\u003c/span\u003e        \u003cspan class=\"n\"\u003eyoung\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e  \u003cspan class=\"c1\"\u003e// SYN+ACK retransmission related\u003c/span\u003e\n\n    \u003cspan class=\"c1\"\u003e// Accept queue fields\u003c/span\u003e\n    \u003cspan class=\"k\"\u003estruct\u003c/span\u003e \u003cspan class=\"n\"\u003erequest_sock\u003c/span\u003e    \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003erskq_accept_head\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"c1\"\u003e// accept queue head\u003c/span\u003e\n    \u003cspan class=\"k\"\u003estruct\u003c/span\u003e \u003cspan class=\"n\"\u003erequest_sock\u003c/span\u003e    \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003erskq_accept_tail\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"c1\"\u003e// accept queue tail\u003c/span\u003e\n\n    \u003cspan class=\"c1\"\u003e// Server side TFO is disabled by default\u003c/span\u003e\n    \u003cspan class=\"k\"\u003estruct\u003c/span\u003e \u003cspan class=\"n\"\u003efastopen_queue\u003c/span\u003e   \u003cspan class=\"n\"\u003efastopenq\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e  \u003cspan class=\"cm\"\u003e/* Check max_qlen != 0 to determine * if TFO is enabled.  */\u003c/span\u003e\n\u003cspan class=\"p\"\u003e};\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003eSpoiler: the kernel actually \u003cstrong\u003e\u003cmark\u003edeclares the accept queue with this data structure\u003c/mark\u003e\u003c/strong\u003e,\u003c/p\u003e\n\n\u003cdiv class=\"language-c highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"c1\"\u003e// https://github.com/torvalds/linux/blob/v5.10/include/net/inet_connection_sock.h#L80\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003estruct\u003c/span\u003e \u003cspan class=\"n\"\u003einet_connection_sock\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003estruct\u003c/span\u003e \u003cspan class=\"n\"\u003einet_sock\u003c/span\u003e          \u003cspan class=\"n\"\u003eicsk_inet\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"k\"\u003estruct\u003c/span\u003e \u003cspan class=\"n\"\u003erequest_sock_queue\u003c/span\u003e \u003cspan class=\"n\"\u003eicsk_accept_queue\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"c1\"\u003e// accept queue of the listening socket\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e...\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003eAlso note that the FIFO queue it maintains contains items of \u003ccode class=\"language-plaintext highlighter-rouge\"\u003estruct request_sock\u003c/code\u003e\ntype (but the kernel code has the magic to obtain inet/tcp request sock with the general data structure).\nWe’ll see this later.\u003c/p\u003e\n\n\u003ch2 id=\"23-structures-of-long-lifetime-objects\"\u003e2.3 Structures of long lifetime objects\u003c/h2\u003e\n\n\u003cp align=\"center\"\u003e\u003cimg src=\"/assets/img/tcp-listen-a-tale-of-two-queues/socket-structs-scope.png\" width=\"80%\" height=\"80%\"/\u003e\u003c/p\u003e\n\u003cp align=\"center\"\u003eFig. Socket related data structures and their memory layouts\u003c/p\u003e\n\n\u003cp\u003eNow let’s have a look at the structures representing kernel socket objects at\ndifferent levels of abstraction.\u003c/p\u003e\n\n\u003ch3 id=\"231-struct-socket-general-bsd-socket\"\u003e2.3.1 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003estruct socket\u003c/code\u003e: general BSD socket\u003c/h3\u003e\n\n\u003cp\u003eThis is high level socket structure:\u003c/p\u003e\n\n\u003cdiv class=\"language-c highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"c1\"\u003e// include/linux/net.h\u003c/span\u003e\n\n\u003cspan class=\"c1\"\u003e// struct socket - general BSD socket\u003c/span\u003e\n\u003cspan class=\"k\"\u003estruct\u003c/span\u003e \u003cspan class=\"n\"\u003esocket\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"n\"\u003esocket_state\u003c/span\u003e            \u003cspan class=\"n\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"c1\"\u003e// e.g. SS_CONNECTED\u003c/span\u003e\n    \u003cspan class=\"kt\"\u003eshort\u003c/span\u003e                   \u003cspan class=\"n\"\u003etype\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e  \u003cspan class=\"c1\"\u003e// e.g. SOCK_STREAM\u003c/span\u003e\n    \u003cspan class=\"kt\"\u003eunsigned\u003c/span\u003e \u003cspan class=\"kt\"\u003elong\u003c/span\u003e           \u003cspan class=\"n\"\u003eflags\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"c1\"\u003e// e.g. SOCK_NOSPACE\u003c/span\u003e\n    \u003cspan class=\"k\"\u003estruct\u003c/span\u003e \u003cspan class=\"n\"\u003efile\u003c/span\u003e            \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003efile\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e  \u003cspan class=\"c1\"\u003e// File back pointer for gc\u003c/span\u003e\n    \u003cspan class=\"k\"\u003estruct\u003c/span\u003e \u003cspan class=\"n\"\u003esock\u003c/span\u003e            \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003esk\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e    \u003cspan class=\"c1\"\u003e// internal networking protocol agnostic socket representation\u003c/span\u003e\n    \u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"k\"\u003estruct\u003c/span\u003e \u003cspan class=\"n\"\u003eproto_ops\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003eops\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e   \u003cspan class=\"c1\"\u003e// proto specific handlers\u003c/span\u003e\n    \u003cspan class=\"k\"\u003estruct\u003c/span\u003e \u003cspan class=\"n\"\u003esocket_wq\u003c/span\u003e        \u003cspan class=\"n\"\u003ewq\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e    \u003cspan class=\"c1\"\u003e// wait queue for several uses\u003c/span\u003e\n\u003cspan class=\"p\"\u003e};\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003eThe \u003ccode class=\"language-plaintext highlighter-rouge\"\u003estruct sock *sk\u003c/code\u003e field points to the network representation in the kernel.\nWe’ll see it later.\u003c/p\u003e\n\n\u003ch3 id=\"232-struct-sock_common-minimal-network-layer-representation-of-sockets\"\u003e2.3.2 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003estruct sock_common\u003c/code\u003e: minimal network layer representation of sockets\u003c/h3\u003e\n\n\u003cp\u003eThis is a minimal network layer representation of sockets, holding\nsocket information such as \u003cstrong\u003e\u003cmark\u003esrc/dst addresses\u003c/mark\u003e\u003c/strong\u003e,\nand is a subset of the \u003ccode class=\"language-plaintext highlighter-rouge\"\u003estruct sock\u003c/code\u003e that will be introduced in the next:\u003c/p\u003e\n\n\u003cdiv class=\"language-c highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"c1\"\u003e// include/net/sock.h\u003c/span\u003e\n\n\u003cspan class=\"c1\"\u003e// struct sock_common - minimal network layer representation of sockets\u003c/span\u003e\n\u003cspan class=\"k\"\u003estruct\u003c/span\u003e \u003cspan class=\"n\"\u003esock_common\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eunion\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"n\"\u003e__addrpair\u003c/span\u003e    \u003cspan class=\"n\"\u003eskc_addrpair\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n        \u003cspan class=\"k\"\u003estruct\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n            \u003cspan class=\"n\"\u003e__be32\u003c/span\u003e    \u003cspan class=\"n\"\u003eskc_daddr\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n            \u003cspan class=\"n\"\u003e__be32\u003c/span\u003e    \u003cspan class=\"n\"\u003eskc_rcv_saddr\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n        \u003cspan class=\"p\"\u003e};\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e};\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eunion\u003c/span\u003e  \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"kt\"\u003eunsigned\u003c/span\u003e \u003cspan class=\"kt\"\u003eint\u003c/span\u003e    \u003cspan class=\"n\"\u003eskc_hash\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n        \u003cspan class=\"n\"\u003e__u16\u003c/span\u003e        \u003cspan class=\"n\"\u003eskc_u16hashes\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e];\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e};\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eunion\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"n\"\u003e__portpair\u003c/span\u003e    \u003cspan class=\"n\"\u003eskc_portpair\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n        \u003cspan class=\"k\"\u003estruct\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n            \u003cspan class=\"n\"\u003e__be16\u003c/span\u003e    \u003cspan class=\"n\"\u003eskc_dport\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n            \u003cspan class=\"n\"\u003e__u16\u003c/span\u003e    \u003cspan class=\"n\"\u003eskc_num\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n        \u003cspan class=\"p\"\u003e};\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e};\u003c/span\u003e\n\n    \u003cspan class=\"kt\"\u003eunsigned\u003c/span\u003e \u003cspan class=\"kt\"\u003eshort\u003c/span\u003e        \u003cspan class=\"n\"\u003eskc_family\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"k\"\u003evolatile\u003c/span\u003e \u003cspan class=\"kt\"\u003eunsigned\u003c/span\u003e \u003cspan class=\"kt\"\u003echar\u003c/span\u003e    \u003cspan class=\"n\"\u003eskc_state\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"kt\"\u003eunsigned\u003c/span\u003e \u003cspan class=\"kt\"\u003echar\u003c/span\u003e        \u003cspan class=\"n\"\u003eskc_reuse\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e\u003cspan class=\"mi\"\u003e4\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"kt\"\u003eunsigned\u003c/span\u003e \u003cspan class=\"kt\"\u003echar\u003c/span\u003e        \u003cspan class=\"n\"\u003eskc_reuseport\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"kt\"\u003eunsigned\u003c/span\u003e \u003cspan class=\"kt\"\u003echar\u003c/span\u003e        \u003cspan class=\"n\"\u003eskc_ipv6only\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"kt\"\u003eunsigned\u003c/span\u003e \u003cspan class=\"kt\"\u003echar\u003c/span\u003e        \u003cspan class=\"n\"\u003eskc_net_refcnt\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"kt\"\u003eint\u003c/span\u003e            \u003cspan class=\"n\"\u003eskc_bound_dev_if\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eunion\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"k\"\u003estruct\u003c/span\u003e \u003cspan class=\"n\"\u003ehlist_node\u003c/span\u003e    \u003cspan class=\"n\"\u003eskc_bind_node\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n        \u003cspan class=\"k\"\u003estruct\u003c/span\u003e \u003cspan class=\"n\"\u003ehlist_node\u003c/span\u003e    \u003cspan class=\"n\"\u003eskc_portaddr_node\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e};\u003c/span\u003e\n    \u003cspan class=\"k\"\u003estruct\u003c/span\u003e \u003cspan class=\"n\"\u003eproto\u003c/span\u003e        \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003eskc_prot\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"n\"\u003epossible_net_t\u003c/span\u003e        \u003cspan class=\"n\"\u003eskc_net\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e...\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eatomic64_t\u003c/span\u003e        \u003cspan class=\"n\"\u003eskc_cookie\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\n    \u003cspan class=\"k\"\u003eunion\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"kt\"\u003eunsigned\u003c/span\u003e \u003cspan class=\"kt\"\u003elong\u003c/span\u003e    \u003cspan class=\"n\"\u003eskc_flags\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n        \u003cspan class=\"k\"\u003estruct\u003c/span\u003e \u003cspan class=\"n\"\u003esock\u003c/span\u003e    \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003eskc_listener\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"cm\"\u003e/* request_sock */\u003c/span\u003e\n        \u003cspan class=\"k\"\u003estruct\u003c/span\u003e \u003cspan class=\"n\"\u003einet_timewait_death_row\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003eskc_tw_dr\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"cm\"\u003e/* inet_timewait_sock */\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e};\u003c/span\u003e\n\n    \u003cspan class=\"kt\"\u003eint\u003c/span\u003e            \u003cspan class=\"n\"\u003eskc_dontcopy_begin\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e];\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eunion\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"k\"\u003estruct\u003c/span\u003e \u003cspan class=\"n\"\u003ehlist_node\u003c/span\u003e    \u003cspan class=\"n\"\u003eskc_node\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n        \u003cspan class=\"k\"\u003estruct\u003c/span\u003e \u003cspan class=\"n\"\u003ehlist_nulls_node\u003c/span\u003e \u003cspan class=\"n\"\u003eskc_nulls_node\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e};\u003c/span\u003e\n\n    \u003cspan class=\"kt\"\u003eunsigned\u003c/span\u003e \u003cspan class=\"kt\"\u003eshort\u003c/span\u003e        \u003cspan class=\"n\"\u003eskc_tx_queue_mapping\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"kt\"\u003eunsigned\u003c/span\u003e \u003cspan class=\"kt\"\u003eshort\u003c/span\u003e        \u003cspan class=\"n\"\u003eskc_rx_queue_mapping\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eunion\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"kt\"\u003eint\u003c/span\u003e        \u003cspan class=\"n\"\u003eskc_incoming_cpu\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n        \u003cspan class=\"n\"\u003eu32\u003c/span\u003e        \u003cspan class=\"n\"\u003eskc_rcv_wnd\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n        \u003cspan class=\"n\"\u003eu32\u003c/span\u003e        \u003cspan class=\"n\"\u003eskc_tw_rcv_nxt\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"cm\"\u003e/* struct tcp_timewait_sock  */\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e};\u003c/span\u003e\n\n    \u003cspan class=\"n\"\u003erefcount_t\u003c/span\u003e        \u003cspan class=\"n\"\u003eskc_refcnt\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"kt\"\u003eint\u003c/span\u003e                     \u003cspan class=\"n\"\u003eskc_dontcopy_end\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e];\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eunion\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"n\"\u003eu32\u003c/span\u003e        \u003cspan class=\"n\"\u003eskc_rxhash\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n        \u003cspan class=\"n\"\u003eu32\u003c/span\u003e        \u003cspan class=\"n\"\u003eskc_window_clamp\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n        \u003cspan class=\"n\"\u003eu32\u003c/span\u003e        \u003cspan class=\"n\"\u003eskc_tw_snd_nxt\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"cm\"\u003e/* struct tcp_timewait_sock */\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e};\u003c/span\u003e\n\u003cspan class=\"p\"\u003e};\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003ch3 id=\"233-struct-sock-network-layer-representation-of-sockets\"\u003e2.3.3 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003estruct sock\u003c/code\u003e: network layer representation of sockets\u003c/h3\u003e\n\n\u003cp\u003eThis a a big wrapper around \u003ccode class=\"language-plaintext highlighter-rouge\"\u003estruct sock_common\u003c/code\u003e, and \u003ccode class=\"language-plaintext highlighter-rouge\"\u003estruct sock_common __sk_common\u003c/code\u003e\nis its first field. Note that it also \u003cstrong\u003e\u003cmark\u003edeclares many macros to simplify accessing\u003c/mark\u003e\u003c/strong\u003e\nthe fields in \u003ccode class=\"language-plaintext highlighter-rouge\"\u003e__sk_common\u003c/code\u003e:\u003c/p\u003e\n\n\u003cdiv class=\"language-c highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"c1\"\u003e// https://github.com/torvalds/linux/blob/v5.10/include/net/sock.h#L347\u003c/span\u003e\n\n\u003cspan class=\"c1\"\u003e// struct sock - network layer representation of sockets\u003c/span\u003e\n\u003cspan class=\"k\"\u003estruct\u003c/span\u003e \u003cspan class=\"n\"\u003esock\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003estruct\u003c/span\u003e \u003cspan class=\"n\"\u003esock_common\u003c/span\u003e    \u003cspan class=\"n\"\u003e__sk_common\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e           \u003cspan class=\"c1\"\u003e// the minimal subset of a socket\u003c/span\u003e\n\n\u003cspan class=\"cp\"\u003e#define sk_node           __sk_common.skc_node\n#define sk_hash           __sk_common.skc_hash   // key in hash table `ehash`\n\u003c/span\u003e\u003cspan class=\"p\"\u003e...\u003c/span\u003e\n\u003cspan class=\"cp\"\u003e#define sk_rxhash         __sk_common.skc_rxhash\n\u003c/span\u003e\n    \u003cspan class=\"n\"\u003esocket_lock_t\u003c/span\u003e          \u003cspan class=\"n\"\u003esk_lock\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eatomic_t\u003c/span\u003e               \u003cspan class=\"n\"\u003esk_drops\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"kt\"\u003eint\u003c/span\u003e                    \u003cspan class=\"n\"\u003esk_rcvlowat\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"k\"\u003estruct\u003c/span\u003e \u003cspan class=\"n\"\u003esk_buff_head\u003c/span\u003e    \u003cspan class=\"n\"\u003esk_error_queue\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"k\"\u003estruct\u003c/span\u003e \u003cspan class=\"n\"\u003esk_buff\u003c/span\u003e        \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003esk_rx_skb_cache\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"k\"\u003estruct\u003c/span\u003e \u003cspan class=\"n\"\u003esk_buff_head\u003c/span\u003e    \u003cspan class=\"n\"\u003esk_receive_queue\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\n    \u003cspan class=\"k\"\u003estruct\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"kt\"\u003eint\u003c/span\u003e                \u003cspan class=\"n\"\u003elen\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n        \u003cspan class=\"k\"\u003estruct\u003c/span\u003e \u003cspan class=\"n\"\u003esk_buff\u003c/span\u003e    \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003ehead\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n        \u003cspan class=\"k\"\u003estruct\u003c/span\u003e \u003cspan class=\"n\"\u003esk_buff\u003c/span\u003e    \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003etail\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e}\u003c/span\u003e \u003cspan class=\"n\"\u003esk_backlog\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"c1\"\u003e// backlog queue for receiving skbs from the kernel stack, softirqd fills this buffer\u003c/span\u003e\n\n    \u003cspan class=\"kt\"\u003eint\u003c/span\u003e            \u003cspan class=\"n\"\u003esk_forward_alloc\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"kt\"\u003eunsigned\u003c/span\u003e \u003cspan class=\"kt\"\u003eint\u003c/span\u003e   \u003cspan class=\"n\"\u003esk_ll_usec\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"kt\"\u003eunsigned\u003c/span\u003e \u003cspan class=\"kt\"\u003eint\u003c/span\u003e   \u003cspan class=\"n\"\u003esk_napi_id\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"kt\"\u003eint\u003c/span\u003e            \u003cspan class=\"n\"\u003esk_rcvbuf\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\n    \u003cspan class=\"k\"\u003estruct\u003c/span\u003e \u003cspan class=\"n\"\u003esk_filter\u003c/span\u003e \u003cspan class=\"n\"\u003e__rcu\u003c/span\u003e    \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003esk_filter\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"c1\"\u003e// socket filter, attaching BPF programs\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eunion\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"k\"\u003estruct\u003c/span\u003e \u003cspan class=\"n\"\u003esocket_wq\u003c/span\u003e \u003cspan class=\"n\"\u003e__rcu\u003c/span\u003e    \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003esk_wq\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n        \u003cspan class=\"k\"\u003estruct\u003c/span\u003e \u003cspan class=\"n\"\u003esocket_wq\u003c/span\u003e    \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003esk_wq_raw\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e};\u003c/span\u003e\n    \u003cspan class=\"k\"\u003estruct\u003c/span\u003e \u003cspan class=\"n\"\u003exfrm_policy\u003c/span\u003e \u003cspan class=\"n\"\u003e__rcu\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003esk_policy\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e];\u003c/span\u003e\n    \u003cspan class=\"k\"\u003estruct\u003c/span\u003e \u003cspan class=\"n\"\u003edst_entry\u003c/span\u003e         \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003esk_rx_dst\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"k\"\u003estruct\u003c/span\u003e \u003cspan class=\"n\"\u003edst_entry\u003c/span\u003e \u003cspan class=\"n\"\u003e__rcu\u003c/span\u003e   \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003esk_dst_cache\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eatomic_t\u003c/span\u003e                  \u003cspan class=\"n\"\u003esk_omem_alloc\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"kt\"\u003eint\u003c/span\u003e                       \u003cspan class=\"n\"\u003esk_sndbuf\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\n    \u003cspan class=\"kt\"\u003eint\u003c/span\u003e                  \u003cspan class=\"n\"\u003esk_wmem_queued\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"n\"\u003erefcount_t\u003c/span\u003e           \u003cspan class=\"n\"\u003esk_wmem_alloc\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"kt\"\u003eunsigned\u003c/span\u003e \u003cspan class=\"kt\"\u003elong\u003c/span\u003e        \u003cspan class=\"n\"\u003esk_tsq_flags\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eunion\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"k\"\u003estruct\u003c/span\u003e \u003cspan class=\"n\"\u003esk_buff\u003c/span\u003e    \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003esk_send_head\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n        \u003cspan class=\"k\"\u003estruct\u003c/span\u003e \u003cspan class=\"n\"\u003erb_root\u003c/span\u003e    \u003cspan class=\"n\"\u003etcp_rtx_queue\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e};\u003c/span\u003e\n    \u003cspan class=\"k\"\u003estruct\u003c/span\u003e \u003cspan class=\"n\"\u003esk_buff\u003c/span\u003e        \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003esk_tx_skb_cache\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"k\"\u003estruct\u003c/span\u003e \u003cspan class=\"n\"\u003esk_buff_head\u003c/span\u003e    \u003cspan class=\"n\"\u003esk_write_queue\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"n\"\u003e__s32\u003c/span\u003e                  \u003cspan class=\"n\"\u003esk_peek_off\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"kt\"\u003eint\u003c/span\u003e                    \u003cspan class=\"n\"\u003esk_write_pending\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"n\"\u003e__u32\u003c/span\u003e                  \u003cspan class=\"n\"\u003esk_dst_pending_confirm\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eu32\u003c/span\u003e                    \u003cspan class=\"n\"\u003esk_pacing_status\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"cm\"\u003e/* see enum sk_pacing */\u003c/span\u003e\n    \u003cspan class=\"kt\"\u003elong\u003c/span\u003e                   \u003cspan class=\"n\"\u003esk_sndtimeo\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"k\"\u003estruct\u003c/span\u003e \u003cspan class=\"n\"\u003etimer_list\u003c/span\u003e      \u003cspan class=\"n\"\u003esk_timer\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"n\"\u003e__u32\u003c/span\u003e                  \u003cspan class=\"n\"\u003esk_priority\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"n\"\u003e__u32\u003c/span\u003e                  \u003cspan class=\"n\"\u003esk_mark\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"kt\"\u003eunsigned\u003c/span\u003e \u003cspan class=\"kt\"\u003elong\u003c/span\u003e          \u003cspan class=\"n\"\u003esk_pacing_rate\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"cm\"\u003e/* bytes per second */\u003c/span\u003e\n    \u003cspan class=\"kt\"\u003eunsigned\u003c/span\u003e \u003cspan class=\"kt\"\u003elong\u003c/span\u003e          \u003cspan class=\"n\"\u003esk_max_pacing_rate\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"k\"\u003estruct\u003c/span\u003e \u003cspan class=\"n\"\u003epage_frag\u003c/span\u003e       \u003cspan class=\"n\"\u003esk_frag\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"n\"\u003enetdev_features_t\u003c/span\u003e      \u003cspan class=\"n\"\u003esk_route_caps\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"n\"\u003enetdev_features_t\u003c/span\u003e      \u003cspan class=\"n\"\u003esk_route_nocaps\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"n\"\u003enetdev_features_t\u003c/span\u003e      \u003cspan class=\"n\"\u003esk_route_forced_caps\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"kt\"\u003eint\u003c/span\u003e                    \u003cspan class=\"n\"\u003esk_gso_type\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"kt\"\u003eunsigned\u003c/span\u003e \u003cspan class=\"kt\"\u003eint\u003c/span\u003e           \u003cspan class=\"n\"\u003esk_gso_max_size\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"n\"\u003egfp_t\u003c/span\u003e                  \u003cspan class=\"n\"\u003esk_allocation\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"n\"\u003e__u32\u003c/span\u003e                  \u003cspan class=\"n\"\u003esk_txhash\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\n    \u003cspan class=\"n\"\u003eu8\u003c/span\u003e             \u003cspan class=\"n\"\u003esk_padding\u003c/span\u003e \u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n                   \u003cspan class=\"n\"\u003esk_kern_sock\u003c/span\u003e \u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n                   \u003cspan class=\"n\"\u003esk_no_check_tx\u003c/span\u003e \u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n                   \u003cspan class=\"n\"\u003esk_no_check_rx\u003c/span\u003e \u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n                   \u003cspan class=\"n\"\u003esk_userlocks\u003c/span\u003e \u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"mi\"\u003e4\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eu8\u003c/span\u003e             \u003cspan class=\"n\"\u003esk_pacing_shift\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eu16\u003c/span\u003e            \u003cspan class=\"n\"\u003esk_type\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eu16\u003c/span\u003e            \u003cspan class=\"n\"\u003esk_protocol\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eu16\u003c/span\u003e            \u003cspan class=\"n\"\u003esk_gso_max_segs\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"kt\"\u003eunsigned\u003c/span\u003e \u003cspan class=\"kt\"\u003elong\u003c/span\u003e  \u003cspan class=\"n\"\u003esk_lingertime\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"k\"\u003estruct\u003c/span\u003e \u003cspan class=\"n\"\u003eproto\u003c/span\u003e  \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003esk_prot_creator\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"n\"\u003erwlock_t\u003c/span\u003e       \u003cspan class=\"n\"\u003esk_callback_lock\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"kt\"\u003eint\u003c/span\u003e            \u003cspan class=\"n\"\u003esk_err\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003esk_err_soft\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\n    \u003cspan class=\"n\"\u003eu32\u003c/span\u003e            \u003cspan class=\"n\"\u003esk_ack_backlog\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e     \u003cspan class=\"c1\"\u003e// \u003c/span\u003e\n    \u003cspan class=\"n\"\u003eu32\u003c/span\u003e            \u003cspan class=\"n\"\u003esk_max_ack_backlog\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"c1\"\u003e// max SYN queue length\u003c/span\u003e\n\n    \u003cspan class=\"n\"\u003ekuid_t\u003c/span\u003e                \u003cspan class=\"n\"\u003esk_uid\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"k\"\u003estruct\u003c/span\u003e \u003cspan class=\"n\"\u003epid\u003c/span\u003e           \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003esk_peer_pid\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"k\"\u003estruct\u003c/span\u003e \u003cspan class=\"n\"\u003ecred\u003c/span\u003e    \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003esk_peer_cred\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"kt\"\u003elong\u003c/span\u003e                  \u003cspan class=\"n\"\u003esk_rcvtimeo\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"n\"\u003ektime_t\u003c/span\u003e               \u003cspan class=\"n\"\u003esk_stamp\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eseqlock_t\u003c/span\u003e             \u003cspan class=\"n\"\u003esk_stamp_seq\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eu16\u003c/span\u003e                   \u003cspan class=\"n\"\u003esk_tsflags\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eu8\u003c/span\u003e                    \u003cspan class=\"n\"\u003esk_shutdown\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eu32\u003c/span\u003e                   \u003cspan class=\"n\"\u003esk_tskey\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eatomic_t\u003c/span\u003e              \u003cspan class=\"n\"\u003esk_zckey\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\n    \u003cspan class=\"n\"\u003eu8\u003c/span\u003e            \u003cspan class=\"n\"\u003esk_clockid\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eu8\u003c/span\u003e            \u003cspan class=\"n\"\u003esk_txtime_deadline_mode\u003c/span\u003e \u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n                  \u003cspan class=\"n\"\u003esk_txtime_report_errors\u003c/span\u003e \u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n                  \u003cspan class=\"n\"\u003esk_txtime_unused\u003c/span\u003e \u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"mi\"\u003e6\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\n    \u003cspan class=\"k\"\u003estruct\u003c/span\u003e \u003cspan class=\"n\"\u003esocket\u003c/span\u003e             \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003esk_socket\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e         \u003cspan class=\"c1\"\u003e// the general BSD socket representation, a simple structure\u003c/span\u003e\n    \u003cspan class=\"kt\"\u003evoid\u003c/span\u003e                      \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003esk_user_data\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"kt\"\u003evoid\u003c/span\u003e                      \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003esk_security\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"k\"\u003estruct\u003c/span\u003e \u003cspan class=\"n\"\u003esock_cgroup_data\u003c/span\u003e    \u003cspan class=\"n\"\u003esk_cgrp_data\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"k\"\u003estruct\u003c/span\u003e \u003cspan class=\"n\"\u003emem_cgroup\u003c/span\u003e         \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003esk_memcg\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"kt\"\u003evoid\u003c/span\u003e                     \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003esk_state_change\u003c/span\u003e\u003cspan class=\"p\"\u003e)(\u003c/span\u003e\u003cspan class=\"k\"\u003estruct\u003c/span\u003e \u003cspan class=\"n\"\u003esock\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003esk\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"kt\"\u003evoid\u003c/span\u003e                     \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003esk_data_ready\u003c/span\u003e\u003cspan class=\"p\"\u003e)(\u003c/span\u003e\u003cspan class=\"k\"\u003estruct\u003c/span\u003e \u003cspan class=\"n\"\u003esock\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003esk\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"kt\"\u003evoid\u003c/span\u003e                     \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003esk_write_space\u003c/span\u003e\u003cspan class=\"p\"\u003e)(\u003c/span\u003e\u003cspan class=\"k\"\u003estruct\u003c/span\u003e \u003cspan class=\"n\"\u003esock\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003esk\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"kt\"\u003evoid\u003c/span\u003e                     \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003esk_error_report\u003c/span\u003e\u003cspan class=\"p\"\u003e)(\u003c/span\u003e\u003cspan class=\"k\"\u003estruct\u003c/span\u003e \u003cspan class=\"n\"\u003esock\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003esk\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"kt\"\u003eint\u003c/span\u003e                      \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003esk_backlog_rcv\u003c/span\u003e\u003cspan class=\"p\"\u003e)(\u003c/span\u003e\u003cspan class=\"k\"\u003estruct\u003c/span\u003e \u003cspan class=\"n\"\u003esock\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003esk\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"k\"\u003estruct\u003c/span\u003e \u003cspan class=\"n\"\u003esk_buff\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003eskb\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"k\"\u003estruct\u003c/span\u003e \u003cspan class=\"n\"\u003esk_buff\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e          \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003esk_validate_xmit_skb\u003c/span\u003e\u003cspan class=\"p\"\u003e)(\u003c/span\u003e\u003cspan class=\"k\"\u003estruct\u003c/span\u003e \u003cspan class=\"n\"\u003esock\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003esk\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"k\"\u003estruct\u003c/span\u003e \u003cspan class=\"n\"\u003enet_device\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003edev\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"k\"\u003estruct\u003c/span\u003e \u003cspan class=\"n\"\u003esk_buff\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003eskb\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"kt\"\u003evoid\u003c/span\u003e                     \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003esk_destruct\u003c/span\u003e\u003cspan class=\"p\"\u003e)(\u003c/span\u003e\u003cspan class=\"k\"\u003estruct\u003c/span\u003e \u003cspan class=\"n\"\u003esock\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003esk\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"k\"\u003estruct\u003c/span\u003e \u003cspan class=\"n\"\u003esock_reuseport\u003c/span\u003e    \u003cspan class=\"n\"\u003e__rcu\u003c/span\u003e    \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003esk_reuseport_cb\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"k\"\u003estruct\u003c/span\u003e \u003cspan class=\"n\"\u003ebpf_local_storage\u003c/span\u003e \u003cspan class=\"n\"\u003e__rcu\u003c/span\u003e    \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003esk_bpf_storage\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e};\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003ch3 id=\"234-struct-inet_sock-inet-socket-wraps-over-struct-sock\"\u003e2.3.4 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003estruct inet_sock\u003c/code\u003e: INET socket, wraps over \u003ccode class=\"language-plaintext highlighter-rouge\"\u003estruct sock\u003c/code\u003e\u003c/h3\u003e\n\n\u003cp\u003e\u003ccode class=\"language-plaintext highlighter-rouge\"\u003estruct sock sk\u003c/code\u003e is the first field in this struct, followed by some INET\nrelated fields:\u003c/p\u003e\n\n\u003cdiv class=\"language-c highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"c1\"\u003e// https://github.com/torvalds/linux/blob/v5.10/include/net/inet_sock.h#L175\u003c/span\u003e\n\n\u003cspan class=\"c1\"\u003e// struct inet_sock - representation of INET sockets\u003c/span\u003e\n\u003cspan class=\"k\"\u003estruct\u003c/span\u003e \u003cspan class=\"n\"\u003einet_sock\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003estruct\u003c/span\u003e \u003cspan class=\"n\"\u003esock\u003c/span\u003e        \u003cspan class=\"n\"\u003esk\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\n    \u003cspan class=\"n\"\u003e__be32\u003c/span\u003e            \u003cspan class=\"n\"\u003einet_saddr\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"n\"\u003e__s16\u003c/span\u003e            \u003cspan class=\"n\"\u003euc_ttl\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"n\"\u003e__u16\u003c/span\u003e            \u003cspan class=\"n\"\u003ecmsg_flags\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"n\"\u003e__be16\u003c/span\u003e            \u003cspan class=\"n\"\u003einet_sport\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"n\"\u003e__u16\u003c/span\u003e            \u003cspan class=\"n\"\u003einet_id\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\n    \u003cspan class=\"k\"\u003estruct\u003c/span\u003e \u003cspan class=\"n\"\u003eip_options_rcu\u003c/span\u003e \u003cspan class=\"n\"\u003e__rcu\u003c/span\u003e    \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003einet_opt\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"kt\"\u003eint\u003c/span\u003e            \u003cspan class=\"n\"\u003erx_dst_ifindex\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"n\"\u003e__u8\u003c/span\u003e            \u003cspan class=\"n\"\u003etos\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"n\"\u003e__u8\u003c/span\u003e            \u003cspan class=\"n\"\u003emin_ttl\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"n\"\u003e__u8\u003c/span\u003e            \u003cspan class=\"n\"\u003emc_ttl\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"n\"\u003e__u8\u003c/span\u003e            \u003cspan class=\"n\"\u003epmtudisc\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"n\"\u003e__u8\u003c/span\u003e            \u003cspan class=\"n\"\u003erecverr\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n                \u003cspan class=\"nl\"\u003eis_icsk:\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n                \u003cspan class=\"nl\"\u003efreebind:\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n                \u003cspan class=\"nl\"\u003ehdrincl:\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n                \u003cspan class=\"nl\"\u003emc_loop:\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n                \u003cspan class=\"nl\"\u003etransparent:\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n                \u003cspan class=\"nl\"\u003emc_all:\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n                \u003cspan class=\"nl\"\u003enodefrag:\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"n\"\u003e__u8\u003c/span\u003e            \u003cspan class=\"n\"\u003ebind_address_no_port\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n                \u003cspan class=\"nl\"\u003erecverr_rfc4884:\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n                \u003cspan class=\"nl\"\u003edefer_connect:\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"n\"\u003e__u8\u003c/span\u003e            \u003cspan class=\"n\"\u003ercv_tos\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"n\"\u003e__u8\u003c/span\u003e            \u003cspan class=\"n\"\u003econvert_csum\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"kt\"\u003eint\u003c/span\u003e            \u003cspan class=\"n\"\u003euc_index\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"kt\"\u003eint\u003c/span\u003e            \u003cspan class=\"n\"\u003emc_index\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"n\"\u003e__be32\u003c/span\u003e            \u003cspan class=\"n\"\u003emc_addr\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"k\"\u003estruct\u003c/span\u003e \u003cspan class=\"n\"\u003eip_mc_socklist\u003c/span\u003e \u003cspan class=\"n\"\u003e__rcu\u003c/span\u003e    \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003emc_list\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"k\"\u003estruct\u003c/span\u003e \u003cspan class=\"n\"\u003einet_cork_full\u003c/span\u003e    \u003cspan class=\"n\"\u003ecork\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e};\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003ch3 id=\"235-struct-inet_connection_sock-connection-oriented-inet-socket-wraps-over-struct-inet_sock\"\u003e2.3.5 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003estruct inet_connection_sock\u003c/code\u003e: connection-oriented INET socket, wraps over \u003ccode class=\"language-plaintext highlighter-rouge\"\u003estruct inet_sock\u003c/code\u003e\u003c/h3\u003e\n\n\u003cp\u003eSimilar as previous, this struct wraps over \u003ccode class=\"language-plaintext highlighter-rouge\"\u003estruct inet_sock\u003c/code\u003e,\u003c/p\u003e\n\n\u003cdiv class=\"language-c highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"c1\"\u003e// https://github.com/torvalds/linux/blob/v5.10/include/net/inet_connection_sock.h#L80\u003c/span\u003e\n\n\u003cspan class=\"c1\"\u003e// inet_connection_sock - INET connection oriented sock\u003c/span\u003e\n\u003cspan class=\"k\"\u003estruct\u003c/span\u003e \u003cspan class=\"n\"\u003einet_connection_sock\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003estruct\u003c/span\u003e \u003cspan class=\"n\"\u003einet_sock\u003c/span\u003e          \u003cspan class=\"n\"\u003eicsk_inet\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e         \u003cspan class=\"c1\"\u003e//\u003c/span\u003e\n    \u003cspan class=\"k\"\u003estruct\u003c/span\u003e \u003cspan class=\"n\"\u003erequest_sock_queue\u003c/span\u003e \u003cspan class=\"n\"\u003eicsk_accept_queue\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"c1\"\u003e// accept queue of a listening socket\u003c/span\u003e\n\n    \u003cspan class=\"k\"\u003estruct\u003c/span\u003e \u003cspan class=\"n\"\u003einet_bind_bucket\u003c/span\u003e  \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003eicsk_bind_hash\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"kt\"\u003eunsigned\u003c/span\u003e \u003cspan class=\"kt\"\u003elong\u003c/span\u003e             \u003cspan class=\"n\"\u003eicsk_timeout\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n     \u003cspan class=\"k\"\u003estruct\u003c/span\u003e \u003cspan class=\"n\"\u003etimer_list\u003c/span\u003e        \u003cspan class=\"n\"\u003eicsk_retransmit_timer\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n     \u003cspan class=\"k\"\u003estruct\u003c/span\u003e \u003cspan class=\"n\"\u003etimer_list\u003c/span\u003e        \u003cspan class=\"n\"\u003eicsk_delack_timer\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"n\"\u003e__u32\u003c/span\u003e                     \u003cspan class=\"n\"\u003eicsk_rto\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e          \u003cspan class=\"c1\"\u003e// Retransmit timeout\u003c/span\u003e\n    \u003cspan class=\"n\"\u003e__u32\u003c/span\u003e                     \u003cspan class=\"n\"\u003eicsk_rto_min\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"n\"\u003e__u32\u003c/span\u003e                     \u003cspan class=\"n\"\u003eicsk_delack_max\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"n\"\u003e__u32\u003c/span\u003e                      \u003cspan class=\"n\"\u003eicsk_pmtu_cookie\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"k\"\u003estruct\u003c/span\u003e \u003cspan class=\"n\"\u003etcp_congestion_ops\u003c/span\u003e          \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003eicsk_ca_ops\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"k\"\u003estruct\u003c/span\u003e \u003cspan class=\"n\"\u003einet_connection_sock_af_ops\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003eicsk_af_ops\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"k\"\u003estruct\u003c/span\u003e \u003cspan class=\"n\"\u003etcp_ulp_ops\u003c/span\u003e                 \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003eicsk_ulp_ops\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"kt\"\u003evoid\u003c/span\u003e \u003cspan class=\"n\"\u003e__rcu\u003c/span\u003e                               \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003eicsk_ulp_data\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"kt\"\u003evoid\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003eicsk_clean_acked\u003c/span\u003e\u003cspan class=\"p\"\u003e)(\u003c/span\u003e\u003cspan class=\"k\"\u003estruct\u003c/span\u003e \u003cspan class=\"n\"\u003esock\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003esk\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eu32\u003c/span\u003e \u003cspan class=\"n\"\u003eacked_seq\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"k\"\u003estruct\u003c/span\u003e \u003cspan class=\"n\"\u003ehlist_node\u003c/span\u003e         \u003cspan class=\"n\"\u003eicsk_listen_portaddr_node\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"kt\"\u003eunsigned\u003c/span\u003e \u003cspan class=\"kt\"\u003eint\u003c/span\u003e      \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003eicsk_sync_mss\u003c/span\u003e\u003cspan class=\"p\"\u003e)(\u003c/span\u003e\u003cspan class=\"k\"\u003estruct\u003c/span\u003e \u003cspan class=\"n\"\u003esock\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003esk\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eu32\u003c/span\u003e \u003cspan class=\"n\"\u003epmtu\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"n\"\u003e__u8\u003c/span\u003e              \u003cspan class=\"n\"\u003eicsk_ca_state\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e\u003cspan class=\"mi\"\u003e5\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n                      \u003cspan class=\"nl\"\u003eicsk_ca_initialized:\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n                      \u003cspan class=\"nl\"\u003eicsk_ca_setsockopt:\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n                      \u003cspan class=\"nl\"\u003eicsk_ca_dst_locked:\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"n\"\u003e__u8\u003c/span\u003e              \u003cspan class=\"n\"\u003eicsk_retransmits\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"n\"\u003e__u8\u003c/span\u003e              \u003cspan class=\"n\"\u003eicsk_pending\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"n\"\u003e__u8\u003c/span\u003e              \u003cspan class=\"n\"\u003eicsk_backoff\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"n\"\u003e__u8\u003c/span\u003e              \u003cspan class=\"n\"\u003eicsk_syn_retries\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"n\"\u003e__u8\u003c/span\u003e              \u003cspan class=\"n\"\u003eicsk_probes_out\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"n\"\u003e__u16\u003c/span\u003e             \u003cspan class=\"n\"\u003eicsk_ext_hdr_len\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"k\"\u003estruct\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"n\"\u003e__u8\u003c/span\u003e           \u003cspan class=\"n\"\u003epending\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e     \u003cspan class=\"cm\"\u003e/* ACK is pending               */\u003c/span\u003e\n        \u003cspan class=\"n\"\u003e__u8\u003c/span\u003e           \u003cspan class=\"n\"\u003equick\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e     \u003cspan class=\"cm\"\u003e/* Scheduled number of quick acks       */\u003c/span\u003e\n        \u003cspan class=\"n\"\u003e__u8\u003c/span\u003e           \u003cspan class=\"n\"\u003epingpong\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e     \u003cspan class=\"cm\"\u003e/* The session is interactive           */\u003c/span\u003e\n        \u003cspan class=\"n\"\u003e__u8\u003c/span\u003e           \u003cspan class=\"n\"\u003eretry\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e     \u003cspan class=\"cm\"\u003e/* Number of attempts               */\u003c/span\u003e\n        \u003cspan class=\"n\"\u003e__u32\u003c/span\u003e          \u003cspan class=\"n\"\u003eato\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e         \u003cspan class=\"cm\"\u003e/* Predicted tick of soft clock       */\u003c/span\u003e\n        \u003cspan class=\"kt\"\u003eunsigned\u003c/span\u003e \u003cspan class=\"kt\"\u003elong\u003c/span\u003e  \u003cspan class=\"n\"\u003etimeout\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e     \u003cspan class=\"cm\"\u003e/* Currently scheduled timeout           */\u003c/span\u003e\n        \u003cspan class=\"n\"\u003e__u32\u003c/span\u003e          \u003cspan class=\"n\"\u003elrcvtime\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e     \u003cspan class=\"cm\"\u003e/* timestamp of last received data packet */\u003c/span\u003e\n        \u003cspan class=\"n\"\u003e__u16\u003c/span\u003e          \u003cspan class=\"n\"\u003elast_seg_size\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"cm\"\u003e/* Size of last incoming segment       */\u003c/span\u003e\n        \u003cspan class=\"n\"\u003e__u16\u003c/span\u003e          \u003cspan class=\"n\"\u003ercv_mss\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e     \u003cspan class=\"cm\"\u003e/* MSS used for delayed ACK decisions       */\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e}\u003c/span\u003e \u003cspan class=\"n\"\u003eicsk_ack\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"k\"\u003estruct\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"kt\"\u003eint\u003c/span\u003e          \u003cspan class=\"n\"\u003eenabled\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\n        \u003cspan class=\"cm\"\u003e/* Range of MTUs to search */\u003c/span\u003e\n        \u003cspan class=\"kt\"\u003eint\u003c/span\u003e          \u003cspan class=\"n\"\u003esearch_high\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n        \u003cspan class=\"kt\"\u003eint\u003c/span\u003e          \u003cspan class=\"n\"\u003esearch_low\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\n        \u003cspan class=\"cm\"\u003e/* Information on the current probe. */\u003c/span\u003e\n        \u003cspan class=\"kt\"\u003eint\u003c/span\u003e          \u003cspan class=\"n\"\u003eprobe_size\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n        \u003cspan class=\"n\"\u003eu32\u003c/span\u003e          \u003cspan class=\"n\"\u003eprobe_timestamp\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e}\u003c/span\u003e \u003cspan class=\"n\"\u003eicsk_mtup\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eu32\u003c/span\u003e              \u003cspan class=\"n\"\u003eicsk_probes_tstamp\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eu32\u003c/span\u003e              \u003cspan class=\"n\"\u003eicsk_user_timeout\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\n    \u003cspan class=\"n\"\u003eu64\u003c/span\u003e              \u003cspan class=\"n\"\u003eicsk_ca_priv\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e104\u003c/span\u003e \u003cspan class=\"o\"\u003e/\u003c/span\u003e \u003cspan class=\"k\"\u003esizeof\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eu64\u003c/span\u003e\u003cspan class=\"p\"\u003e)];\u003c/span\u003e\n\u003cspan class=\"p\"\u003e};\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003eThe comments say, accept queue is “FIFO of established children”, but this is not accurate enough:\nwith TFO enabled for the server side (default disabled), all incomplete connections (SYN_RECV state) will\nalso be inserted into the accept queue.\u003c/p\u003e\n\n\u003ch3 id=\"236-struct-tcp_sock-wraps-over-struct-inet_connection_sock\"\u003e2.3.6 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003estruct tcp_sock\u003c/code\u003e: wraps over \u003ccode class=\"language-plaintext highlighter-rouge\"\u003estruct inet_connection_sock\u003c/code\u003e\u003c/h3\u003e\n\n\u003cdiv class=\"language-c highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"c1\"\u003e// https://github.com/torvalds/linux/blob/v5.10/include/linux/tcp.h#L145\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003estruct\u003c/span\u003e \u003cspan class=\"n\"\u003etcp_sock\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003estruct\u003c/span\u003e \u003cspan class=\"n\"\u003einet_connection_sock\u003c/span\u003e    \u003cspan class=\"n\"\u003einet_conn\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eu16\u003c/span\u003e    \u003cspan class=\"n\"\u003etcp_header_len\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e        \u003cspan class=\"cm\"\u003e/* Bytes of tcp header to send        */\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eu16\u003c/span\u003e    \u003cspan class=\"n\"\u003egso_segs\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e              \u003cspan class=\"cm\"\u003e/* Max number of segs per GSO packet    */\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e...\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003ch2 id=\"24-summary\"\u003e2.4 Summary\u003c/h2\u003e\n\n\u003cp\u003eThis finishes our journey of socket related data structures, now take a look again\nand have a good memory in mind before we dive into the code:\u003c/p\u003e\n\n\u003cp align=\"center\"\u003e\u003cimg src=\"/assets/img/tcp-listen-a-tale-of-two-queues/socket-structs-scope.png\" width=\"80%\" height=\"80%\"/\u003e\u003c/p\u003e\n\u003cp align=\"center\"\u003eFig. Socket related data structures and their memory layouts\u003c/p\u003e\n\n\u003ch1 id=\"3-listen-system-call-explained\"\u003e3 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003elisten()\u003c/code\u003e system call explained\u003c/h1\u003e\n\n\u003cp\u003eNow let’s see what happens when a \u003ccode class=\"language-plaintext highlighter-rouge\"\u003elisten()\u003c/code\u003e system call is issued.\u003c/p\u003e\n\n\u003ch2 id=\"31-call-stack\"\u003e3.1 Call stack\u003c/h2\u003e\n\n\u003cdiv class=\"language-plaintext highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003eSYSCALL_DEFINE2(listen, int, fd, int, backlog)\n  |-__sys_listen(fd, backlog)\n      |-sock = sockfd_lookup_light(fd,...)\n      |-if backlog \u0026gt; somaxconn\n      |    backlog = somaxconn\n      |\n      |-sock-\u0026gt;ops-\u0026gt;listen(sock, backlog)\n      |       |-inet_stream_ops-\u0026gt;listen(sock, backlog)  ------+\n      |                                                      /\n      |-fput_light(sock-\u0026gt;file, fput_needed)                 /\n                                                           /\n                           /------------------------------/\n                          /\ninet_listen(sock, backlog)\n  |-WRITE_ONCE(sk-\u0026gt;sk_max_ack_backlog, backlog)\n  |\n  |-if old_state != TCP_LISTEN {\n      inet_csk_listen_start(sk, backlog);\n      tcp_call_bpf(sk, BPF_SOCK_OPS_TCP_LISTEN_CB, 0, NULL);\n    }\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003ch2 id=\"32-listen---__sys_listen---sock-ops-listen\"\u003e3.2 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003elisten() -\u0026gt; __sys_listen() -\u0026gt; sock-\u0026gt;ops-\u0026gt;listen()\u003c/code\u003e\u003c/h2\u003e\n\n\u003cp\u003e\u003cstrong\u003e\u003cmark\u003e\u003ccode\u003elisten(int fd, int backlog)\u003c/code\u003e\u003c/mark\u003e\u003c/strong\u003e system call accepts two parameters:\u003c/p\u003e\n\n\u003col\u003e\n  \u003cli\u003e\u003ccode class=\"language-plaintext highlighter-rouge\"\u003efd\u003c/code\u003e: file descriptor of the socket;\u003c/li\u003e\n  \u003cli\u003e\u003ccode class=\"language-plaintext highlighter-rouge\"\u003ebacklog\u003c/code\u003e: \u003cstrong\u003e\u003cmark\u003eaccept queue size\u003c/mark\u003e\u003c/strong\u003e (more on this later).\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003cp\u003eNote that these two parameters are all type \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eint\u003c/code\u003e, which indicates that\n\u003ccode class=\"language-plaintext highlighter-rouge\"\u003elisten()\u003c/code\u003e system call is rather high level \u0026amp; general interface, which\n\u003cstrong\u003e\u003cmark\u003edoesn\u0026#39;t distinguish protocol families (INET, UNIX, etc) and protocol types (TCP, UDP, etc)\u003c/mark\u003e\u003c/strong\u003e.\nIn the remaining of this post, we’ll focus on INET TCP over IPv4 sockets.\u003c/p\u003e\n\n\u003cp\u003e\u003cstrong\u003e\u003cmark\u003eThe implementation\u003c/mark\u003e\u003c/strong\u003e of \u003ccode class=\"language-plaintext highlighter-rouge\"\u003elisten()\u003c/code\u003e system call is \u003ccode class=\"language-plaintext highlighter-rouge\"\u003e__sys_listen()\u003c/code\u003e,\u003c/p\u003e\n\n\u003cdiv class=\"language-c highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"c1\"\u003e// net/socket.c\u003c/span\u003e\n\n\u003cspan class=\"c1\"\u003e// Perform a listen. Basically, we allow the protocol to do anything necessary for a listen,\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e// and if that works, we mark the socket as ready for listening.\u003c/span\u003e\n\u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"nf\"\u003e__sys_listen\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"n\"\u003efd\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"n\"\u003ebacklog\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"n\"\u003efput_needed\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"k\"\u003estruct\u003c/span\u003e \u003cspan class=\"n\"\u003esocket\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003esock\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003esockfd_lookup_light\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003efd\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e\u003cspan class=\"n\"\u003eerr\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e\u003cspan class=\"n\"\u003efput_needed\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003esock\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"n\"\u003esomaxconn\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003esock_net\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003esock\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003esk\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003ecore\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003esysctl_somaxconn\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n        \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ebacklog\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003esomaxconn\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"c1\"\u003e// backlog will be upper-limited by somaxconn\u003c/span\u003e\n            \u003cspan class=\"n\"\u003ebacklog\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003esomaxconn\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\n        \u003cspan class=\"n\"\u003esecurity_socket_listen\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003esock\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003ebacklog\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n        \u003cspan class=\"n\"\u003esock\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003eops\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003elisten\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003esock\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003ebacklog\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e \u003cspan class=\"c1\"\u003e// note that the parameter list is now `sock, backlog`\u003c/span\u003e\n\n        \u003cspan class=\"n\"\u003efput_light\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003esock\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003efile\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003efput_needed\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003eSteps:\u003c/p\u003e\n\n\u003col\u003e\n  \u003cli\u003e\n    \u003cp\u003eGet the previously created \u003cstrong\u003e\u003cmark\u003e\u003ccode\u003estruct socket\u003c/code\u003e\u003c/mark\u003e\u003c/strong\u003e object with file descriptor;\u003c/p\u003e\n\n    \u003cp\u003eThe “socket” representation here is the \u003cstrong\u003e\u003cmark\u003egeneral BSD socket\u003c/mark\u003e\u003c/strong\u003e that we’ve introduced before,\u003c/p\u003e\n\n    \u003cdiv class=\"language-c highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e \u003cspan class=\"c1\"\u003e// include/linux/net.h\u003c/span\u003e\n\n \u003cspan class=\"c1\"\u003e// struct socket - general BSD socket\u003c/span\u003e\n \u003cspan class=\"k\"\u003estruct\u003c/span\u003e \u003cspan class=\"n\"\u003esocket\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n     \u003cspan class=\"n\"\u003esocket_state\u003c/span\u003e            \u003cspan class=\"n\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"c1\"\u003e// e.g. SS_CONNECTED\u003c/span\u003e\n     \u003cspan class=\"kt\"\u003eshort\u003c/span\u003e                   \u003cspan class=\"n\"\u003etype\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e  \u003cspan class=\"c1\"\u003e// e.g. SOCK_STREAM\u003c/span\u003e\n     \u003cspan class=\"kt\"\u003eunsigned\u003c/span\u003e \u003cspan class=\"kt\"\u003elong\u003c/span\u003e           \u003cspan class=\"n\"\u003eflags\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"c1\"\u003e// e.g. SOCK_NOSPACE\u003c/span\u003e\n     \u003cspan class=\"k\"\u003estruct\u003c/span\u003e \u003cspan class=\"n\"\u003efile\u003c/span\u003e            \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003efile\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e  \u003cspan class=\"c1\"\u003e// File back pointer for gc\u003c/span\u003e\n     \u003cspan class=\"k\"\u003estruct\u003c/span\u003e \u003cspan class=\"n\"\u003esock\u003c/span\u003e            \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003esk\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e    \u003cspan class=\"c1\"\u003e// internal networking protocol agnostic socket representation\u003c/span\u003e\n     \u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"k\"\u003estruct\u003c/span\u003e \u003cspan class=\"n\"\u003eproto_ops\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003eops\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e   \u003cspan class=\"c1\"\u003e// proto specific handlers\u003c/span\u003e\n     \u003cspan class=\"k\"\u003estruct\u003c/span\u003e \u003cspan class=\"n\"\u003esocket_wq\u003c/span\u003e        \u003cspan class=\"n\"\u003ewq\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e    \u003cspan class=\"c1\"\u003e// wait queue for several uses\u003c/span\u003e\n \u003cspan class=\"p\"\u003e};\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e    \u003c/div\u003e\n  \u003c/li\u003e\n  \u003cli\u003e\n    \u003cp\u003eGet the sysctl setting \u003cstrong\u003e\u003cmark\u003e\u003ccode\u003enet.core.somaxconn\u003c/code\u003e\u003c/mark\u003e\u003c/strong\u003e of the system;\u003c/p\u003e\n\n    \u003cp\u003e\u003cstrong\u003e\u003cmark\u003eCap the user provided accept queue size\u003c/mark\u003e\u003c/strong\u003e \u003ccode class=\"language-plaintext highlighter-rouge\"\u003ebacklog\u003c/code\u003e with \u003ccode class=\"language-plaintext highlighter-rouge\"\u003esomaxconn\u003c/code\u003e,\n this \u003cstrong\u003e\u003cmark\u003eupper limits both \u0026#34;SYN queue\u0026#34; and accept queue\u003c/mark\u003e\u003c/strong\u003e. We’ll see this later.\u003c/p\u003e\n  \u003c/li\u003e\n  \u003cli\u003e\n    \u003cp\u003eExecute protocol specific \u003ccode class=\"language-plaintext highlighter-rouge\"\u003elisten()\u003c/code\u003e method by calling \u003cstrong\u003e\u003cmark\u003e\u003ccode\u003esock-\u0026gt;ops-\u0026gt;listen(sock, backlog)\u003c/code\u003e\u003c/mark\u003e\u003c/strong\u003e;\u003c/p\u003e\n\n    \u003cp\u003eFor TCP/IP, the type is \u003cstrong\u003e\u003cmark\u003e\u003ccode\u003eINET\u003c/code\u003e\u003c/mark\u003e\u003c/strong\u003e.\u003c/p\u003e\n\n    \u003cp\u003eAlso note that protocol specific listen() handler has a signature of\n \u003cstrong\u003e\u003cmark\u003e\u003ccode\u003e(struct socket *sock, backlog)\u003c/code\u003e\u003c/mark\u003e\u003c/strong\u003e, which is\n different from the \u003ccode class=\"language-plaintext highlighter-rouge\"\u003elisten(int fd, int backlog)\u003c/code\u003e system call.\u003c/p\u003e\n  \u003c/li\u003e\n\u003c/ol\u003e\n\n\u003cp\u003eNow let’s go to the implementation of INET socket \u003ccode class=\"language-plaintext highlighter-rouge\"\u003elisten()\u003c/code\u003e.\u003c/p\u003e\n\n\u003ch2 id=\"33-inet-tcpipv4-type-socket\"\u003e3.3 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eINET TCP/IPv4\u003c/code\u003e type socket\u003c/h2\u003e\n\n\u003cdiv class=\"language-c highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"c1\"\u003e// net/ipv4/af_inet.c\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"k\"\u003estruct\u003c/span\u003e \u003cspan class=\"n\"\u003eproto_ops\u003c/span\u003e \u003cspan class=\"n\"\u003einet_stream_ops\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003efamily\u003c/span\u003e        \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003ePF_INET\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ebind\u003c/span\u003e          \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003einet_bind\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003econnect\u003c/span\u003e       \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003einet_stream_connect\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003esocketpair\u003c/span\u003e    \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003esock_no_socketpair\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eaccept\u003c/span\u003e        \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003einet_accept\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e            \u003cspan class=\"c1\"\u003e// accept() handler, dequeue established conns from accept queue, handover to app\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003epoll\u003c/span\u003e          \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003etcp_poll\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eioctl\u003c/span\u003e         \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003einet_ioctl\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003egettstamp\u003c/span\u003e     \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003esock_gettstamp\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003elisten\u003c/span\u003e        \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003einet_listen\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e            \u003cspan class=\"c1\"\u003e// listen() handler\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003esetsockopt\u003c/span\u003e    \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003esock_common_setsockopt\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003egetsockopt\u003c/span\u003e    \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003esock_common_getsockopt\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003esendmsg\u003c/span\u003e       \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003einet_sendmsg\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003erecvmsg\u003c/span\u003e       \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003einet_recvmsg\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003emmap\u003c/span\u003e          \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003etcp_mmap\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003esendpage\u003c/span\u003e      \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003einet_sendpage\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003esplice_read\u003c/span\u003e   \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003etcp_splice_read\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e...\u003c/span\u003e\n\u003cspan class=\"p\"\u003e};\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003eThe handler for this socket type is \u003cstrong\u003e\u003cmark\u003e\u003ccode\u003einet_listen()\u003c/code\u003e\u003c/mark\u003e\u003c/strong\u003e。\u003c/p\u003e\n\n\u003ch3 id=\"331-inet_listen---inet_csk_listen_start\"\u003e3.3.1 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003einet_listen() -\u0026gt; inet_csk_listen_start()\u003c/code\u003e\u003c/h3\u003e\n\n\u003cp\u003e\u003ccode class=\"language-plaintext highlighter-rouge\"\u003einet_listen()\u003c/code\u003e \u003cstrong\u003e\u003cmark\u003emove a socket into listening state\u003c/mark\u003e\u003c/strong\u003e:\u003c/p\u003e\n\n\u003cdiv class=\"language-c highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"nf\"\u003einet_listen\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003estruct\u003c/span\u003e \u003cspan class=\"n\"\u003esocket\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003esock\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"n\"\u003ebacklog\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003estruct\u003c/span\u003e \u003cspan class=\"n\"\u003esock\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003esk\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003esock\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003esk\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"n\"\u003esock\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003estate\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"n\"\u003eSS_UNCONNECTED\u003c/span\u003e \u003cspan class=\"o\"\u003e||\u003c/span\u003e \u003cspan class=\"n\"\u003esock\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003etype\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"n\"\u003eSOCK_STREAM\u003c/span\u003e\n        \u003cspan class=\"k\"\u003egoto\u003c/span\u003e \u003cspan class=\"n\"\u003eout\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\n    \u003cspan class=\"kt\"\u003eunsigned\u003c/span\u003e \u003cspan class=\"kt\"\u003echar\u003c/span\u003e \u003cspan class=\"n\"\u003eold_state\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003esk\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003esk_state\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"o\"\u003e!\u003c/span\u003e\u003cspan class=\"p\"\u003e((\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e \u003cspan class=\"n\"\u003eold_state\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eTCPF_CLOSE\u003c/span\u003e \u003cspan class=\"o\"\u003e|\u003c/span\u003e \u003cspan class=\"n\"\u003eTCPF_LISTEN\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e\n        \u003cspan class=\"k\"\u003egoto\u003c/span\u003e \u003cspan class=\"n\"\u003eout\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\n    \u003cspan class=\"n\"\u003eWRITE_ONCE\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003esk\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003esk_max_ack_backlog\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003ebacklog\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e \u003cspan class=\"c1\"\u003e// Set \u0026#34;syn queue\u0026#34; \u0026amp; accept queue size\u003c/span\u003e\n\n    \u003cspan class=\"c1\"\u003e// Really, if the socket is already in listen state we can only allow the backlog to be adjusted.\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eold_state\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"n\"\u003eTCP_LISTEN\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"n\"\u003etcp_fastopen\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003esock_net\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003esk\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003eipv4\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003esysctl_tcp_fastopen\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"c1\"\u003e// default 0x01: enable client side only\u003c/span\u003e\n        \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003etcp_fastopen\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e \u003cspan class=\"n\"\u003eTFO_SERVER_WO_SOCKOPT1\u003c/span\u003e \u003cspan class=\"p\"\u003e...)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n            \u003cspan class=\"n\"\u003efastopen_queue_tune\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003esk\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003ebacklog\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e  \u003cspan class=\"c1\"\u003e// -\u0026gt; icsk_accept_queue.fastopenq.max_qlen = min(backlog, somaxconn)\u003c/span\u003e\n        \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n        \u003cspan class=\"n\"\u003einet_csk_listen_start\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003esk\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003ebacklog\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e    \u003cspan class=\"c1\"\u003e// start to listen\u003c/span\u003e\n        \u003cspan class=\"n\"\u003etcp_call_bpf\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003esk\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eBPF_SOCK_OPS_TCP_LISTEN_CB\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nb\"\u003eNULL\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003eThings done:\u003c/p\u003e\n\n\u003col\u003e\n  \u003cli\u003eValidation: socket must be in \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eSS_UNCONNECTED\u003c/code\u003e state, and type must be \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eSOCK_STREAM\u003c/code\u003e;\u003c/li\u003e\n  \u003cli\u003eExit if inner \u003ccode class=\"language-plaintext highlighter-rouge\"\u003esk\u003c/code\u003e already in CLOSE or LISTEN state;\u003c/li\u003e\n  \u003cli\u003eSet \u003cstrong\u003e\u003cmark\u003e\u003ccode\u003esk-\u0026gt;sk_max_ack_backlog = backlog\u003c/code\u003e\u003c/mark\u003e\u003c/strong\u003e, where \u003cstrong\u003e\u003cmark\u003e\u003ccode\u003ebacklog \u0026lt;= somaxconn\u003c/code\u003e\u003c/mark\u003e\u003c/strong\u003e;\u003c/li\u003e\n  \u003cli\u003e\n    \u003cp\u003eIf inner sk not in TCP_LISTEN state currently,\u003c/p\u003e\n\n    \u003col\u003e\n      \u003cli\u003ePrepare fastopen: \u003cstrong\u003e\u003cmark\u003efastopen defaults to 0x01, which means enable client side only\u003c/mark\u003e\u003c/strong\u003e\n   (server side fastopen disabled, so we skip the logic); more about TFO, see section 7;\u003c/li\u003e\n      \u003cli\u003eStart to listen by calling \u003cstrong\u003e\u003cmark\u003e\u003ccode\u003einet_csk_listen_start()\u003c/code\u003e\u003c/mark\u003e\u003c/strong\u003e;\u003c/li\u003e\n      \u003cli\u003eExecute BPF_SOCK_OPS_TCP_LISTEN_CB BPF program (if any).\u003c/li\u003e\n    \u003c/ol\u003e\n  \u003c/li\u003e\n\u003c/ol\u003e\n\n\u003ch3 id=\"332-inet_csk_listen_start\"\u003e3.3.2 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003einet_csk_listen_start()\u003c/code\u003e\u003c/h3\u003e\n\n\u003cp\u003eThis method will \u003cstrong\u003e\u003cmark\u003einit accpet queue, set sk_ack_backlog=0, set inner sk state to LISTEN\u003c/mark\u003e\u003c/strong\u003e, etc:\u003c/p\u003e\n\n\u003cblockquote\u003e\n  \u003cul\u003e\n    \u003cli\u003ecsk: Connection-oriented SocKet\u003c/li\u003e\n    \u003cli\u003eicsk: INET Connection-oriented SocKet\u003c/li\u003e\n  \u003c/ul\u003e\n\u003c/blockquote\u003e\n\n\u003cdiv class=\"language-c highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"c1\"\u003e// net/ipv4/inet_connection_sock.c\u003c/span\u003e\n\n\u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"nf\"\u003einet_csk_listen_start\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003estruct\u003c/span\u003e \u003cspan class=\"n\"\u003esock\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003esk\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"n\"\u003ebacklog\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003estruct\u003c/span\u003e \u003cspan class=\"n\"\u003einet_connection_sock\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003eicsk\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003einet_csk\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003esk\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e \u003cspan class=\"c1\"\u003e// icsk holds sk in its memory layout\u003c/span\u003e\n    \u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"n\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u003c/span\u003e\u003cspan class=\"n\"\u003eEADDRINUSE\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\n    \u003cspan class=\"n\"\u003ereqsk_queue_alloc\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e\u003cspan class=\"n\"\u003eicsk\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003eicsk_accept_queue\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e      \u003cspan class=\"c1\"\u003e// Init Accept Queue：head/tail, etc\u003c/span\u003e\n    \u003cspan class=\"n\"\u003esk\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003esk_ack_backlog\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e                           \u003cspan class=\"c1\"\u003e// Socket ACK (3rd pkt in 3WHS) backlog\u003c/span\u003e\n    \u003cspan class=\"n\"\u003einet_csk_delack_init\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003esk\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\n    \u003cspan class=\"n\"\u003einet_sk_state_store\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003esk\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eTCP_LISTEN\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e              \u003cspan class=\"c1\"\u003e// Mark sk as LISTEN state\u003c/span\u003e\n\n    \u003cspan class=\"k\"\u003estruct\u003c/span\u003e \u003cspan class=\"n\"\u003einet_sock\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003einet\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003einet_sk\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003esk\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e             \u003cspan class=\"c1\"\u003e// inet holds sk in its memory layout\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"o\"\u003e!\u003c/span\u003e\u003cspan class=\"n\"\u003esk\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003esk_prot\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003eget_port\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003esk\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003einet\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003einet_num\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"n\"\u003einet\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003einet_sport\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003ehtons\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003einet\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003einet_num\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\n        \u003cspan class=\"n\"\u003esk_dst_reset\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003esk\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n        \u003cspan class=\"n\"\u003esk\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003esk_prot\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003ehash\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003esk\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n        \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e                                     \u003cspan class=\"c1\"\u003e// listen successful\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n    \u003cspan class=\"c1\"\u003e// listen failed, enter CLOSE state\u003c/span\u003e\n    \u003cspan class=\"n\"\u003einet_sk_set_state\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003esk\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eTCP_CLOSE\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003eerr\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003eAs the name shows, \u003ccode class=\"language-plaintext highlighter-rouge\"\u003esk-\u0026gt;sk_ack_backlog\u003c/code\u003e is the \u003cstrong\u003e\u003cmark\u003enumber of ACKs\u003c/mark\u003e\u003c/strong\u003e\n(3rd pkt in 3WHS) that have been received (for SYN_RECV state connections) of\nthe listening socket, but this explanation is not that helpful; the\nmeaningful explanation of \u003ccode class=\"language-plaintext highlighter-rouge\"\u003esk_ack_backlog\u003c/code\u003e is: the\n\u003cstrong\u003e\u003cmark\u003enumber of ESTABLISHED connections in accept queue\u003c/mark\u003e\u003c/strong\u003e that’s waiting\nto be \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eaccpet()\u003c/code\u003e-ed by the listening application.\u003c/p\u003e\n\n\u003ch3 id=\"333-tcp_call_bpfsk-bpf_sock_ops_tcp_listen_cb\"\u003e3.3.3 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003etcp_call_bpf(sk, BPF_SOCK_OPS_TCP_LISTEN_CB)\u003c/code\u003e\u003c/h3\u003e\n\n\u003cp\u003eIf \u003cstrong\u003e\u003cmark\u003e\u003ccode\u003eBPF_SOCK_OPS_TCP_LISTEN_CB\u003c/code\u003e\u003c/mark\u003e\u003c/strong\u003e type BPF programs\nare attached in the right place, those programs will be executed, in which way\nyou can customize some TCP listen behaviors without modifying and re-compiling the kernel code.\u003c/p\u003e\n\n\u003cp\u003eRefer to our previous post [2] for such as a similar example (customizing TCP RTO).\u003c/p\u003e\n\n\u003ch2 id=\"34-summary\"\u003e3.4 Summary\u003c/h2\u003e\n\n\u003cp\u003eWith all the above steps succeed, the listening socket will be ready for serving\nclient connection requests (through 3WHS).\u003c/p\u003e\n\n\u003cp\u003eSo, in the next let’s dig into the 3WHS process in the server’s perspective,\nespecially where are the “SYN queue” and accept queue and how they work collaboratively.\u003c/p\u003e\n\n\u003ch1 id=\"4-3-way-handshake-explained-server-side-view\"\u003e4 3-way handshake explained: server side view\u003c/h1\u003e\n\n\u003ch2 id=\"41-server-received-a-syn-3whs-progress-13\"\u003e4.1 Server received a \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eSYN\u003c/code\u003e (3WHS progress: 1/3)\u003c/h2\u003e\n\n\u003ch3 id=\"411-call-stack\"\u003e4.1.1 Call stack\u003c/h3\u003e\n\n\u003cdiv class=\"language-plaintext highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003etcp_rcv_state_process\n |-if (th-\u0026gt;syn)\n     icsk-\u0026gt;icsk_af_ops-\u0026gt;conn_request(sk, skb)\n                                 /\n           /--------------------/\n          /\ntcp_v4_conn_request(struct sock *sk, struct sk_buff *skb) {\n  |-if dst == broadcast || multicast\n  |    listen_drop++\n  |\n  |-tcp_conn_request(\u0026amp;tcp_request_sock_ops, \u0026amp;tcp_request_sock_ipv4_ops, sk, skb);\n       |-if acceptq_full\n       |    listen_overflow++\n       |\n       |-struct request_sock *req = inet_reqsk_alloc(rsk_ops, sk)\n       |-tcp_openreq_init()\n       |-af_ops-\u0026gt;init_req()\n       |-af_ops-\u0026gt;route_req()\n       |-tcp_rsk(req)-\u0026gt;snt_isn = af_ops-\u0026gt;init_seq(skb)\n       |\n       |-if (fastopen_sk) { // disabled by default\n       |     ...\n       | } else {// normal 3WHS\n       |     inet_csk_reqsk_queue_hash_add(sk, req)\n       |       |-reqsk_queue_hash_req(req, timeout)\n       |       |   |-mod_timer(\u0026amp;req-\u0026gt;rsk_timer, jiffies+timeout)\n       |       |   |-inet_ehash_insert()          // insert into \u0026#34;SYN queue\u0026#34;\n       |       |   |-refcount_set(\u0026amp;req-\u0026gt;rsk_refcnt, 2+1)\n       |       |\n       |       |-inet_csk_reqsk_queue_added(sk)\n       |          |-reqsk_queue_added(\u0026amp;inet_csk(sk)-\u0026gt;icsk_accept_queue)\n       |              |-atomic_inc(\u0026amp;queue-\u0026gt;young) // Inc accept queue\u0026#39;s young\n       |              |-atomic_inc(\u0026amp;queue-\u0026gt;qlen)  // Inc accept queue\u0026#39;s qlen\n       |     af_ops-\u0026gt;send_synack()                // send SYN+ACK\n       | }\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003ch3 id=\"412-tcp_rcv_state_processsk-skb---conn_request\"\u003e4.1.2 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003etcp_rcv_state_process(sk, skb) -\u0026gt; conn_request()\u003c/code\u003e\u003c/h3\u003e\n\n\u003cp\u003e\u003ccode class=\"language-plaintext highlighter-rouge\"\u003etcp_rcv_state_process()\u003c/code\u003e implements the receiving procedure for all states\nexcept ESTABLISHED and TIME_WAIT,\u003c/p\u003e\n\n\u003cdiv class=\"language-c highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"nf\"\u003etcp_rcv_state_process\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003estruct\u003c/span\u003e \u003cspan class=\"n\"\u003esock\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003esk\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"k\"\u003estruct\u003c/span\u003e \u003cspan class=\"n\"\u003esk_buff\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003eskb\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003estruct\u003c/span\u003e \u003cspan class=\"n\"\u003einet_connection_sock\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003eicsk\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003einet_csk\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003esk\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"k\"\u003estruct\u003c/span\u003e \u003cspan class=\"n\"\u003etcphdr\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003eth\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003etcp_hdr\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eskb\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\n    \u003cspan class=\"k\"\u003eswitch\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003esk\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003esk_state\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ecase\u003c/span\u003e \u003cspan class=\"n\"\u003eTCP_CLOSE\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e   \u003cspan class=\"k\"\u003egoto\u003c/span\u003e \u003cspan class=\"n\"\u003ediscard\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ecase\u003c/span\u003e \u003cspan class=\"n\"\u003eTCP_LISTEN\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n        \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eth\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003eack\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n            \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n        \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eth\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003erst\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n            \u003cspan class=\"k\"\u003egoto\u003c/span\u003e \u003cspan class=\"n\"\u003ediscard\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\n        \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eth\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003esyn\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n            \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eth\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003efin\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n                \u003cspan class=\"k\"\u003egoto\u003c/span\u003e \u003cspan class=\"n\"\u003ediscard\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\n            \u003cspan class=\"n\"\u003eacceptable\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eicsk\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003eicsk_af_ops\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003econn_request\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003esk\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eskb\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026gt;=\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"c1\"\u003e// proto specific passive connecting handler\u003c/span\u003e\n            \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"o\"\u003e!\u003c/span\u003e\u003cspan class=\"n\"\u003eacceptable\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n                \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\n            \u003cspan class=\"n\"\u003econsume_skb\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eskb\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n            \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n        \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n        \u003cspan class=\"k\"\u003egoto\u003c/span\u003e \u003cspan class=\"n\"\u003ediscard\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\n    \u003cspan class=\"k\"\u003ecase\u003c/span\u003e \u003cspan class=\"n\"\u003eTCP_SYN_SENT\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n        \u003cspan class=\"p\"\u003e...\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e...\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003eFor INET TCP/IPv4, \u003ccode class=\"language-plaintext highlighter-rouge\"\u003econn_request()\u003c/code\u003e is \u003ccode class=\"language-plaintext highlighter-rouge\"\u003etcp_v4_conn_request()\u003c/code\u003e.\u003c/p\u003e\n\n\u003ch3 id=\"413-conn_request---tcp_v4_conn_request\"\u003e4.1.3 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003econn_request() -\u0026gt; tcp_v4_conn_request()\u003c/code\u003e\u003c/h3\u003e\n\n\u003cdiv class=\"language-c highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"c1\"\u003e// net/ipv4/tcp_ipv4.c\u003c/span\u003e\n\n\u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"nf\"\u003etcp_v4_conn_request\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003estruct\u003c/span\u003e \u003cspan class=\"n\"\u003esock\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003esk\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"k\"\u003estruct\u003c/span\u003e \u003cspan class=\"n\"\u003esk_buff\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003eskb\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"cm\"\u003e/* Never answer to SYNs send to broadcast or multicast */\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eskb_rtable\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eskb\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003ert_flags\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eRTCF_BROADCAST\u003c/span\u003e \u003cspan class=\"o\"\u003e|\u003c/span\u003e \u003cspan class=\"n\"\u003eRTCF_MULTICAST\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e\n        \u003cspan class=\"k\"\u003egoto\u003c/span\u003e \u003cspan class=\"n\"\u003edrop\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\n    \u003cspan class=\"c1\"\u003e// tcp_request_sock_ops and tcp_request_sock_ipv4_ops are static variables\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003etcp_conn_request\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e\u003cspan class=\"n\"\u003etcp_request_sock_ops\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e\u003cspan class=\"n\"\u003etcp_request_sock_ipv4_ops\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003esk\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eskb\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\n\u003cspan class=\"nl\"\u003edrop:\u003c/span\u003e\n    \u003cspan class=\"n\"\u003etcp_listendrop\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003esk\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e \u003cspan class=\"c1\"\u003e// Update listen drop stats\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003eTwo static variables used:\u003c/p\u003e\n\n\u003cdiv class=\"language-c highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"c1\"\u003e// net/ipv4/tcp_ipv4.c\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003estruct\u003c/span\u003e \u003cspan class=\"n\"\u003erequest_sock_ops\u003c/span\u003e \u003cspan class=\"n\"\u003etcp_request_sock_ops\u003c/span\u003e \u003cspan class=\"n\"\u003e__read_mostly\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003efamily\u003c/span\u003e          \u003cspan class=\"o\"\u003e=\u003c/span\u003e    \u003cspan class=\"n\"\u003ePF_INET\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eobj_size\u003c/span\u003e        \u003cspan class=\"o\"\u003e=\u003c/span\u003e    \u003cspan class=\"k\"\u003esizeof\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003estruct\u003c/span\u003e \u003cspan class=\"n\"\u003etcp_request_sock\u003c/span\u003e\u003cspan class=\"p\"\u003e),\u003c/span\u003e \u003cspan class=\"c1\"\u003e// size of each object\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ertx_syn_ack\u003c/span\u003e     \u003cspan class=\"o\"\u003e=\u003c/span\u003e    \u003cspan class=\"n\"\u003etcp_rtx_synack\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003esend_ack\u003c/span\u003e        \u003cspan class=\"o\"\u003e=\u003c/span\u003e    \u003cspan class=\"n\"\u003etcp_v4_reqsk_send_ack\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003edestructor\u003c/span\u003e      \u003cspan class=\"o\"\u003e=\u003c/span\u003e    \u003cspan class=\"n\"\u003etcp_v4_reqsk_destructor\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003esend_reset\u003c/span\u003e      \u003cspan class=\"o\"\u003e=\u003c/span\u003e    \u003cspan class=\"n\"\u003etcp_v4_send_reset\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003esyn_ack_timeout\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e    \u003cspan class=\"n\"\u003etcp_syn_ack_timeout\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003cspan class=\"p\"\u003e};\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"k\"\u003estruct\u003c/span\u003e \u003cspan class=\"n\"\u003etcp_request_sock_ops\u003c/span\u003e \u003cspan class=\"n\"\u003etcp_request_sock_ipv4_ops\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003emss_clamp\u003c/span\u003e       \u003cspan class=\"o\"\u003e=\u003c/span\u003e    \u003cspan class=\"n\"\u003eTCP_MSS_DEFAULT\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ereq_md5_lookup\u003c/span\u003e  \u003cspan class=\"o\"\u003e=\u003c/span\u003e    \u003cspan class=\"n\"\u003etcp_v4_md5_lookup\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ecalc_md5_hash\u003c/span\u003e   \u003cspan class=\"o\"\u003e=\u003c/span\u003e    \u003cspan class=\"n\"\u003etcp_v4_md5_hash_skb\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003einit_req\u003c/span\u003e        \u003cspan class=\"o\"\u003e=\u003c/span\u003e    \u003cspan class=\"n\"\u003etcp_v4_init_req\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ecookie_init_seq\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e    \u003cspan class=\"n\"\u003ecookie_v4_init_sequence\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eroute_req\u003c/span\u003e       \u003cspan class=\"o\"\u003e=\u003c/span\u003e    \u003cspan class=\"n\"\u003etcp_v4_route_req\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003einit_seq\u003c/span\u003e        \u003cspan class=\"o\"\u003e=\u003c/span\u003e    \u003cspan class=\"n\"\u003etcp_v4_init_seq\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003einit_ts_off\u003c/span\u003e     \u003cspan class=\"o\"\u003e=\u003c/span\u003e    \u003cspan class=\"n\"\u003etcp_v4_init_ts_off\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003esend_synack\u003c/span\u003e     \u003cspan class=\"o\"\u003e=\u003c/span\u003e    \u003cspan class=\"n\"\u003etcp_v4_send_synack\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003cspan class=\"p\"\u003e};\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003eA kernel memory area will be reserved, and when request socket objects are\nallocated later, the object size will be \u003ccode class=\"language-plaintext highlighter-rouge\"\u003esizeof(struct tcp_request_sock)\u003c/code\u003e.\u003c/p\u003e\n\n\u003ch3 id=\"414-tcp_conn_request\"\u003e4.1.4 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003etcp_conn_request()\u003c/code\u003e\u003c/h3\u003e\n\n\u003cp\u003eSYN cookie related stuffs will be omitted.\u003c/p\u003e\n\n\u003cp\u003eOn receiving a connection request:\u003c/p\u003e\n\n\u003cdiv class=\"language-c highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"nf\"\u003etcp_conn_request\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003estruct\u003c/span\u003e \u003cspan class=\"n\"\u003erequest_sock_ops\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003ersk_ops\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n             \u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"k\"\u003estruct\u003c/span\u003e \u003cspan class=\"n\"\u003etcp_request_sock_ops\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003eaf_ops\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"k\"\u003estruct\u003c/span\u003e \u003cspan class=\"n\"\u003esock\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003esk\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"k\"\u003estruct\u003c/span\u003e \u003cspan class=\"n\"\u003esk_buff\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003eskb\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003estruct\u003c/span\u003e \u003cspan class=\"n\"\u003etcp_sock\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003etp\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003etcp_sk\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003esk\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"k\"\u003estruct\u003c/span\u003e \u003cspan class=\"n\"\u003enet\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003enet\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003esock_net\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003esk\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"k\"\u003estruct\u003c/span\u003e \u003cspan class=\"n\"\u003eflowi\u003c/span\u003e \u003cspan class=\"n\"\u003efl\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\n    \u003cspan class=\"c1\"\u003e// tcp_syncookies default: 1\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"p\"\u003e((\u003c/span\u003e\u003cspan class=\"n\"\u003enet\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003eipv4\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003esysctl_tcp_syncookies\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"mi\"\u003e2\u003c/span\u003e \u003cspan class=\"o\"\u003e||\u003c/span\u003e \u003cspan class=\"n\"\u003einet_csk_reqsk_queue_is_full\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003esk\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u0026amp;\u003c/span\u003e \u003cspan class=\"o\"\u003e!\u003c/span\u003e\u003cspan class=\"n\"\u003eisn\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n        \u003cspan class=\"c1\"\u003e// syn flood processing\u003c/span\u003e\n\n    \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003esk_acceptq_is_full\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003esk\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e                               \u003cspan class=\"c1\"\u003e// if accept queue is full,\u003c/span\u003e\n        \u003cspan class=\"n\"\u003eNET_INC_STATS\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003esock_net\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003esk\u003c/span\u003e\u003cspan class=\"p\"\u003e),\u003c/span\u003e \u003cspan class=\"n\"\u003eLINUX_MIB_LISTENOVERFLOWS\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e \u003cspan class=\"c1\"\u003e// update listen overflow stats\u003c/span\u003e\n        \u003cspan class=\"k\"\u003egoto\u003c/span\u003e \u003cspan class=\"n\"\u003edrop\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n    \u003cspan class=\"k\"\u003estruct\u003c/span\u003e \u003cspan class=\"n\"\u003erequest_sock\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003ereq\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003einet_reqsk_alloc\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ersk_ops\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003esk\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e   \u003cspan class=\"c1\"\u003e// allocate memory for request_sock\u003c/span\u003e\n\n    \u003cspan class=\"n\"\u003etcp_openreq_init\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ereq\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e\u003cspan class=\"n\"\u003etmp_opt\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eskb\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003esk\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eaf_ops\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003einit_req\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ereq\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003esk\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eskb\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"k\"\u003estruct\u003c/span\u003e \u003cspan class=\"n\"\u003edst_entry\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003edst\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eaf_ops\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003eroute_req\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003esk\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e\u003cspan class=\"n\"\u003efl\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003ereq\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\n    \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"o\"\u003e!\u003c/span\u003e\u003cspan class=\"n\"\u003ewant_cookie\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u0026amp;\u003c/span\u003e \u003cspan class=\"o\"\u003e!\u003c/span\u003e\u003cspan class=\"n\"\u003eisn\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"n\"\u003eisn\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eaf_ops\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003einit_seq\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eskb\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n    \u003cspan class=\"n\"\u003etcp_rsk\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ereq\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003esnt_isn\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eisn\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"n\"\u003etcp_openreq_init_rwin\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ereq\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003esk\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003edst\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\n    \u003cspan class=\"k\"\u003estruct\u003c/span\u003e \u003cspan class=\"n\"\u003esock\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003efastopen_sk\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nb\"\u003eNULL\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"o\"\u003e!\u003c/span\u003e\u003cspan class=\"n\"\u003ewant_cookie\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"n\"\u003etcp_reqsk_record_syn\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003esk\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003ereq\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eskb\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e               \u003cspan class=\"c1\"\u003e// Save syn pkt if configured\u003c/span\u003e\n        \u003cspan class=\"n\"\u003efastopen_sk\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003etcp_try_fastopen\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003esk\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eskb\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003ereq\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e\u003cspan class=\"n\"\u003efoc\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003edst\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003efastopen_sk\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e                                    \u003cspan class=\"c1\"\u003e// NULL by default\u003c/span\u003e\n        \u003cspan class=\"n\"\u003eaf_ops\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003esend_synack\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ereq\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"p\"\u003e...,\u003c/span\u003e \u003cspan class=\"n\"\u003eskb\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e               \u003cspan class=\"c1\"\u003e// reply with SYN+ACK\u003c/span\u003e\n        \u003cspan class=\"n\"\u003einet_csk_reqsk_queue_add\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003esk\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003ereq\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003efastopen_sk\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e    \u003cspan class=\"c1\"\u003e// insert to accept queue\u003c/span\u003e\n        \u003cspan class=\"n\"\u003esk\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003esk_data_ready\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003esk\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e}\u003c/span\u003e \u003cspan class=\"k\"\u003eelse\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"c1\"\u003e// normal 3WHS\u003c/span\u003e\n        \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"o\"\u003e!\u003c/span\u003e\u003cspan class=\"n\"\u003ewant_cookie\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n            \u003cspan class=\"c1\"\u003e// Add to \u0026#34;SYN queue\u0026#34; (actually added to `ehash`, a shared hash table), update icsk_accept_queue.qlen\u003c/span\u003e\n            \u003cspan class=\"n\"\u003einet_csk_reqsk_queue_hash_add\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003esk\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003ereq\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003etcp_timeout_init\u003c/span\u003e\u003cspan class=\"p\"\u003e((\u003c/span\u003e\u003cspan class=\"k\"\u003estruct\u003c/span\u003e \u003cspan class=\"n\"\u003esock\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"n\"\u003ereq\u003c/span\u003e\u003cspan class=\"p\"\u003e));\u003c/span\u003e\n\n        \u003cspan class=\"n\"\u003eaf_ops\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003esend_synack\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003esk\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003edst\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e\u003cspan class=\"n\"\u003efl\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003ereq\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e\u003cspan class=\"n\"\u003efoc\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"o\"\u003e!\u003c/span\u003e\u003cspan class=\"n\"\u003ewant_cookie\u003c/span\u003e \u003cspan class=\"o\"\u003e?\u003c/span\u003e \u003cspan class=\"n\"\u003eTCP_SYNACK_NORMAL\u003c/span\u003e \u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003eTCP_SYNACK_COOKIE\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eskb\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n        \u003cspan class=\"p\"\u003e...\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n    \u003cspan class=\"n\"\u003ereqsk_put\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ereq\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\n\u003cspan class=\"nl\"\u003edrop:\u003c/span\u003e\n    \u003cspan class=\"n\"\u003etcp_listendrop\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003esk\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e \u003cspan class=\"c1\"\u003e// update listen drop stats\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003eStuffs done:\u003c/p\u003e\n\n\u003col\u003e\n  \u003cli\u003eUpdate listen overflow stats;\u003c/li\u003e\n  \u003cli\u003e\u003cstrong\u003e\u003cmark\u003eAllocate memory for this connection request\u003c/mark\u003e\u003c/strong\u003e;\u003c/li\u003e\n  \u003cli\u003e\u003cstrong\u003e\u003cmark\u003eReply client with SYN+ACK\u003c/mark\u003e\u003c/strong\u003e; 3WHS progress: 2/3;\u003c/li\u003e\n  \u003cli\u003eAdd request sock to  “SYN queue” or accept queue (according to TFO settings); update listen drop stats if add to queue failed;\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003cp\u003eNote that there are \u003cstrong\u003e\u003cmark\u003etwo types of listen errors\u003c/mark\u003e\u003c/strong\u003e:\u003c/p\u003e\n\n\u003col\u003e\n  \u003cli\u003eListen overflow: before request_sock is allocated;\u003c/li\u003e\n  \u003cli\u003eListen drop: after request_sock is allocated, but add to accept queue failed.\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003ch4 id=\"allocate-memory-for-request_sock-per-connection-memory\"\u003eAllocate memory for request_sock (per-connection memory)\u003c/h4\u003e\n\n\u003cdiv class=\"language-c highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"c1\"\u003e// net/ipv4/tcp_input.c\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003estruct\u003c/span\u003e \u003cspan class=\"n\"\u003erequest_sock\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"nf\"\u003einet_reqsk_alloc\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"k\"\u003estruct\u003c/span\u003e \u003cspan class=\"n\"\u003erequest_sock_ops\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003eops\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n                      \u003cspan class=\"k\"\u003estruct\u003c/span\u003e \u003cspan class=\"n\"\u003esock\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003esk_listener\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003ebool\u003c/span\u003e \u003cspan class=\"n\"\u003eattach_listener\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003estruct\u003c/span\u003e \u003cspan class=\"n\"\u003erequest_sock\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003ereq\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003ereqsk_alloc\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eops\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003esk_listener\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eattach_listener\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e \u003cspan class=\"c1\"\u003e// allocate kernel memory\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ereq\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"k\"\u003estruct\u003c/span\u003e \u003cspan class=\"n\"\u003einet_request_sock\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003eireq\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003einet_rsk\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ereq\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e \u003cspan class=\"c1\"\u003e// convert to inet type, init several inet related fields\u003c/span\u003e\n\n        \u003cspan class=\"n\"\u003eireq\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003eireq_opt\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nb\"\u003eNULL\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n        \u003cspan class=\"n\"\u003eatomic64_set\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e\u003cspan class=\"n\"\u003eireq\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003eir_cookie\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n        \u003cspan class=\"n\"\u003eireq\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003eireq_state\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eTCP_NEW_SYN_RECV\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e            \u003cspan class=\"c1\"\u003e// enter SYN_RECV state\u003c/span\u003e\n        \u003cspan class=\"n\"\u003ewrite_pnet\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e\u003cspan class=\"n\"\u003eireq\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003eireq_net\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003esock_net\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003esk_listener\u003c/span\u003e\u003cspan class=\"p\"\u003e));\u003c/span\u003e\n        \u003cspan class=\"n\"\u003eireq\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003eireq_family\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003esk_listener\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003esk_family\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003ereq\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e\u003cstrong\u003e\u003cmark\u003eSYN flood\u003c/mark\u003e\u003c/strong\u003e attack works by sending lots of SYNs to a server, the server will allocate a \nrequest_sock object for each connection request, occupying lots of kernel memory.\nThe \u003cstrong\u003e\u003cmark\u003ecost is just one SYN packet for the client\u003c/mark\u003e\u003c/strong\u003e (no memory allocation).\u003c/p\u003e\n\n\u003cp\u003eNote that the real object type is \u003ccode class=\"language-plaintext highlighter-rouge\"\u003estruct tcp_request_sock\u003c/code\u003e, but it returns the\ngeneral \u003ccode class=\"language-plaintext highlighter-rouge\"\u003estruct request_sock\u003c/code\u003e pointer, and the latter is added to the accept\nqueue.\u003c/p\u003e\n\n\u003ch4 id=\"add-to-syn-queue-if-tfo-off\"\u003eAdd to “SYN queue” (if TFO off)\u003c/h4\u003e\n\n\u003cp\u003eRe-depict the call flow:\u003c/p\u003e\n\n\u003cdiv class=\"language-plaintext highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003etcp_rcv_state_process\n |-if (th-\u0026gt;syn)\n     icsk-\u0026gt;icsk_af_ops-\u0026gt;conn_request(sk, skb)\n                                 /\n           /--------------------/\n          /\ntcp_v4_conn_request(struct sock *sk, struct sk_buff *skb) {\n  |-if dst == broadcast || multicast\n  |    listen_drop++\n  |\n  |-tcp_conn_request(\u0026amp;tcp_request_sock_ops, \u0026amp;tcp_request_sock_ipv4_ops, sk, skb);\n       |-if acceptq_full\n       |    listen_overflow++\n       |\n       |-struct request_sock *req = inet_reqsk_alloc(rsk_ops, sk)\n       |-tcp_openreq_init()\n       |-af_ops-\u0026gt;init_req()\n       |-af_ops-\u0026gt;route_req()\n       |-tcp_rsk(req)-\u0026gt;snt_isn = af_ops-\u0026gt;init_seq(skb)\n       |\n       |-if (fastopen_sk) { // disabled by default\n       |     ...\n       | } else {// normal 3WHS\n       |     inet_csk_reqsk_queue_hash_add(sk, req)\n       |       |-reqsk_queue_hash_req(req, timeout)\n       |       |   |-mod_timer(\u0026amp;req-\u0026gt;rsk_timer, jiffies+timeout)\n       |       |   |-inet_ehash_insert()\n       |       |   |-refcount_set(\u0026amp;req-\u0026gt;rsk_refcnt, 2+1)\n       |       |\n       |       |-inet_csk_reqsk_queue_added(sk)\n       |          |-reqsk_queue_added(\u0026amp;inet_csk(sk)-\u0026gt;icsk_accept_queue)\n       |              |-atomic_inc(\u0026amp;queue-\u0026gt;young) // Update accept queue\u0026#39;s young\n       |              |-atomic_inc(\u0026amp;queue-\u0026gt;qlen)  // Update accept queue\u0026#39;s qlen\n       |     af_ops-\u0026gt;send_synack()\n       | }\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003eNote that \u003cstrong\u003e\u003cmark\u003e\u0026#34;SYN queue\u0026#34; is not a real queue like the accept queue\u003c/mark\u003e\u003c/strong\u003e,\nbut only a counter plus a \u003cstrong\u003e\u003cmark\u003eshared hash table\u003c/mark\u003e\u003c/strong\u003e \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eehash\u003c/code\u003e:\u003c/p\u003e\n\n\u003cul\u003e\n  \u003cli\u003ethe current size of the “SYN queue” is tracked by the \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eqlen\u003c/code\u003e field in the accept queue;\u003c/li\u003e\n  \u003cli\u003e\n    \u003cp\u003ewhile the current size of the accept queue itself is tracked by\n the \u003ccode class=\"language-plaintext highlighter-rouge\"\u003esk_ack_backlog\u003c/code\u003e field in the listening socket.\u003c/p\u003e\n\n    \u003cdiv class=\"language-c highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e  \u003cspan class=\"k\"\u003estruct\u003c/span\u003e \u003cspan class=\"n\"\u003esock\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n      \u003cspan class=\"p\"\u003e...\u003c/span\u003e\n      \u003cspan class=\"n\"\u003eu32\u003c/span\u003e            \u003cspan class=\"n\"\u003esk_ack_backlog\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e     \u003cspan class=\"c1\"\u003e// number of ESTABLISHED conns in the accept queue\u003c/span\u003e\n      \u003cspan class=\"n\"\u003eu32\u003c/span\u003e            \u003cspan class=\"n\"\u003esk_max_ack_backlog\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"c1\"\u003e// max accept queue size\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e    \u003c/div\u003e\n  \u003c/li\u003e\n  \u003cli\u003eThe \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eehash\u003c/code\u003e hash table holds ESTABLISHED and SYN_RECV states connections, and\nit’s initialized during TCP protocol registration. We describe it in the next\nsection.\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch4 id=\"tcp-global-hash-tables-initialization\"\u003eTCP global hash tables initialization\u003c/h4\u003e\n\n\u003cdiv class=\"language-c highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"c1\"\u003e// Global variable\u003c/span\u003e\n\u003cspan class=\"k\"\u003estruct\u003c/span\u003e \u003cspan class=\"n\"\u003einet_hashinfo\u003c/span\u003e \u003cspan class=\"n\"\u003etcp_hashinfo\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cdiv class=\"language-c highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"c1\"\u003e// net/ipv4/tcp.c\u003c/span\u003e\n\n\u003cspan class=\"kt\"\u003evoid\u003c/span\u003e \u003cspan class=\"n\"\u003e__init\u003c/span\u003e \u003cspan class=\"nf\"\u003etcp_init\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"kt\"\u003evoid\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"n\"\u003epercpu_counter_init\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e\u003cspan class=\"n\"\u003etcp_sockets_allocated\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eGFP_KERNEL\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"n\"\u003epercpu_counter_init\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e\u003cspan class=\"n\"\u003etcp_orphan_count\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eGFP_KERNEL\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\n    \u003cspan class=\"n\"\u003einet_hashinfo_init\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e\u003cspan class=\"n\"\u003etcp_hashinfo\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\n    \u003cspan class=\"n\"\u003einet_hashinfo2_init\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e\u003cspan class=\"n\"\u003etcp_hashinfo\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;tcp_listen_portaddr_hash\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n                \u003cspan class=\"n\"\u003ethash_entries\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e21\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e  \u003cspan class=\"cm\"\u003e/* one slot per 2 MB*/\u003c/span\u003e\n                \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e64\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"mi\"\u003e1024\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"n\"\u003etcp_hashinfo\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ebind_bucket_cachep\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003ekmem_cache_create\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;tcp_bind_bucket\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n                  \u003cspan class=\"k\"\u003esizeof\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003estruct\u003c/span\u003e \u003cspan class=\"n\"\u003einet_bind_bucket\u003c/span\u003e\u003cspan class=\"p\"\u003e),\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n                  \u003cspan class=\"n\"\u003eSLAB_HWCACHE_ALIGN\u003c/span\u003e\u003cspan class=\"o\"\u003e|\u003c/span\u003e\u003cspan class=\"n\"\u003eSLAB_PANIC\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nb\"\u003eNULL\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\n    \u003cspan class=\"c1\"\u003e// Size and allocate the main established and bind bucket hash tables.\u003c/span\u003e\n    \u003cspan class=\"n\"\u003etcp_hashinfo\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eehash\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003ealloc_large_system_hash\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;TCP established\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n                    \u003cspan class=\"k\"\u003esizeof\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003estruct\u003c/span\u003e \u003cspan class=\"n\"\u003einet_ehash_bucket\u003c/span\u003e\u003cspan class=\"p\"\u003e),\u003c/span\u003e\n                    \u003cspan class=\"n\"\u003ethash_entries\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n                    \u003cspan class=\"mi\"\u003e17\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"cm\"\u003e/* one slot per 128 KB of memory */\u003c/span\u003e\n                    \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n                    \u003cspan class=\"nb\"\u003eNULL\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n                    \u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e\u003cspan class=\"n\"\u003etcp_hashinfo\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eehash_mask\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n                    \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n                    \u003cspan class=\"n\"\u003ethash_entries\u003c/span\u003e \u003cspan class=\"o\"\u003e?\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e \u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"mi\"\u003e512\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"mi\"\u003e1024\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ei\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"n\"\u003ei\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;=\u003c/span\u003e \u003cspan class=\"n\"\u003etcp_hashinfo\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eehash_mask\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"n\"\u003ei\u003c/span\u003e\u003cspan class=\"o\"\u003e++\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n        \u003cspan class=\"n\"\u003eINIT_HLIST_NULLS_HEAD\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e\u003cspan class=\"n\"\u003etcp_hashinfo\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eehash\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003ei\u003c/span\u003e\u003cspan class=\"p\"\u003e].\u003c/span\u003e\u003cspan class=\"n\"\u003echain\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003ei\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\n    \u003cspan class=\"n\"\u003einet_ehash_locks_alloc\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e\u003cspan class=\"n\"\u003etcp_hashinfo\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"n\"\u003etcp_hashinfo\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ebhash\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003ealloc_large_system_hash\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;TCP bind\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n                    \u003cspan class=\"k\"\u003esizeof\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003estruct\u003c/span\u003e \u003cspan class=\"n\"\u003einet_bind_hashbucket\u003c/span\u003e\u003cspan class=\"p\"\u003e),\u003c/span\u003e\n                    \u003cspan class=\"n\"\u003etcp_hashinfo\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eehash_mask\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n                    \u003cspan class=\"mi\"\u003e17\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"cm\"\u003e/* one slot per 128 KB of memory */\u003c/span\u003e\n                    \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n                    \u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e\u003cspan class=\"n\"\u003etcp_hashinfo\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ebhash_size\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n                    \u003cspan class=\"nb\"\u003eNULL\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n                    \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n                    \u003cspan class=\"mi\"\u003e64\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"mi\"\u003e1024\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"n\"\u003etcp_hashinfo\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ebhash_size\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e1U\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e \u003cspan class=\"n\"\u003etcp_hashinfo\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ebhash_size\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ei\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"n\"\u003ei\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"n\"\u003etcp_hashinfo\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ebhash_size\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"n\"\u003ei\u003c/span\u003e\u003cspan class=\"o\"\u003e++\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"n\"\u003eINIT_HLIST_HEAD\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e\u003cspan class=\"n\"\u003etcp_hashinfo\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ebhash\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003ei\u003c/span\u003e\u003cspan class=\"p\"\u003e].\u003c/span\u003e\u003cspan class=\"n\"\u003echain\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n    \u003cspan class=\"n\"\u003ecnt\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003etcp_hashinfo\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eehash_mask\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"n\"\u003esysctl_tcp_max_orphans\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003ecnt\u003c/span\u003e \u003cspan class=\"o\"\u003e/\u003c/span\u003e \u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\n    \u003cspan class=\"n\"\u003etcp_init_mem\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e\n\n    \u003cspan class=\"cm\"\u003e/* Set per-socket limits to no more than 1/128 the pressure threshold */\u003c/span\u003e\n    \u003cspan class=\"n\"\u003elimit\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003enr_free_buffer_pages\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ePAGE_SHIFT\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u003c/span\u003e \u003cspan class=\"mi\"\u003e7\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"n\"\u003emax_wshare\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003emin\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e4UL\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"mi\"\u003e1024\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"mi\"\u003e1024\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003elimit\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"n\"\u003emax_rshare\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003emin\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e6UL\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"mi\"\u003e1024\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"mi\"\u003e1024\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003elimit\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\n    \u003cspan class=\"n\"\u003einit_net\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eipv4\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003esysctl_tcp_wmem\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eSK_MEM_QUANTUM\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"n\"\u003einit_net\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eipv4\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003esysctl_tcp_wmem\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e16\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"mi\"\u003e1024\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"n\"\u003einit_net\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eipv4\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003esysctl_tcp_wmem\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003emax\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e64\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"mi\"\u003e1024\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003emax_wshare\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\n    \u003cspan class=\"n\"\u003einit_net\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eipv4\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003esysctl_tcp_rmem\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eSK_MEM_QUANTUM\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"n\"\u003einit_net\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eipv4\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003esysctl_tcp_rmem\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e131072\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"n\"\u003einit_net\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eipv4\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003esysctl_tcp_rmem\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003emax\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e131072\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003emax_rshare\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\n    \u003cspan class=\"n\"\u003epr_info\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;Hash tables configured (established %u bind %u)\u003c/span\u003e\u003cspan class=\"se\"\u003e\\n\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003etcp_hashinfo\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eehash_mask\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003etcp_hashinfo\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ebhash_size\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\n    \u003cspan class=\"n\"\u003etcp_v4_init\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e\n    \u003cspan class=\"n\"\u003etcp_metrics_init\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e\n    \u003cspan class=\"n\"\u003etcp_tasklet_init\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e\n    \u003cspan class=\"n\"\u003emptcp_init\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003eCheck the initialization outputs in kernel messages:\u003c/p\u003e\n\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"c\"\u003e# Log from alloc_large_system_hash()\u003c/span\u003e\n\u003cspan class=\"nv\"\u003e$ \u003c/span\u003edmesg \u003cspan class=\"nt\"\u003e-T\u003c/span\u003e | \u003cspan class=\"nb\"\u003egrep\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;hash table entries\u0026#34;\u003c/span\u003e | \u003cspan class=\"nb\"\u003egrep \u003c/span\u003eTCP\n\u003cspan class=\"o\"\u003e[\u003c/span\u003eThu Jul 28 15:37:26 2022] TCP established \u003cspan class=\"nb\"\u003ehash \u003c/span\u003etable entries: 524288 \u003cspan class=\"o\"\u003e(\u003c/span\u003eorder: 10, 4194304 bytes, vmalloc\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n\u003cspan class=\"o\"\u003e[\u003c/span\u003eThu Jul 28 15:37:26 2022] TCP \u003cspan class=\"nb\"\u003ebind hash \u003c/span\u003etable entries: 65536 \u003cspan class=\"o\"\u003e(\u003c/span\u003eorder: 8, 1048576 bytes, vmalloc\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n\n\u003cspan class=\"c\"\u003e# Log from tcp_init()\u003c/span\u003e\n\u003cspan class=\"nv\"\u003e$ \u003c/span\u003edmesg \u003cspan class=\"nt\"\u003e-T\u003c/span\u003e | \u003cspan class=\"nb\"\u003egrep\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;Hash tables configured\u0026#34;\u003c/span\u003e\n\u003cspan class=\"o\"\u003e[\u003c/span\u003eThu Jul 28 15:37:27 2022] TCP: Hash tables configured \u003cspan class=\"o\"\u003e(\u003c/span\u003eestablished 524288 \u003cspan class=\"nb\"\u003ebind \u003c/span\u003e65536\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003ch2 id=\"42-server-replied-a-synack-3whs-progress-23\"\u003e4.2 Server replied a \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eSYN+ACK\u003c/code\u003e (3WHS progress: 2/3)\u003c/h2\u003e\n\n\u003cp\u003eThe last step is to send a SYN+ACK to the client:\u003c/p\u003e\n\n\u003cdiv class=\"language-c highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e    \u003cspan class=\"p\"\u003e...\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eaf_ops\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003esend_synack\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003ch3 id=\"tcp_v4_send_synack\"\u003e\u003ccode class=\"language-plaintext highlighter-rouge\"\u003etcp_v4_send_synack()\u003c/code\u003e\u003c/h3\u003e\n\n\u003cdiv class=\"language-c highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"c1\"\u003e// net/ipv4/tcp_ipv4.c\u003c/span\u003e\n\n\u003cspan class=\"c1\"\u003e// Send a SYN-ACK after having received a SYN.\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e// This still operates on a request_sock only, not on a big socket.\u003c/span\u003e\n\u003cspan class=\"k\"\u003estatic\u003c/span\u003e \u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"nf\"\u003etcp_v4_send_synack\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"k\"\u003estruct\u003c/span\u003e \u003cspan class=\"n\"\u003esock\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003esk\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"k\"\u003estruct\u003c/span\u003e \u003cspan class=\"n\"\u003edst_entry\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003edst\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n                  \u003cspan class=\"k\"\u003estruct\u003c/span\u003e \u003cspan class=\"n\"\u003eflowi\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003efl\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n                  \u003cspan class=\"k\"\u003estruct\u003c/span\u003e \u003cspan class=\"n\"\u003erequest_sock\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003ereq\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n                  \u003cspan class=\"k\"\u003estruct\u003c/span\u003e \u003cspan class=\"n\"\u003etcp_fastopen_cookie\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003efoc\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n                  \u003cspan class=\"k\"\u003eenum\u003c/span\u003e \u003cspan class=\"n\"\u003etcp_synack_type\u003c/span\u003e \u003cspan class=\"n\"\u003esynack_type\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n                  \u003cspan class=\"k\"\u003estruct\u003c/span\u003e \u003cspan class=\"n\"\u003esk_buff\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003esyn_skb\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003estruct\u003c/span\u003e \u003cspan class=\"n\"\u003eflowi4\u003c/span\u003e \u003cspan class=\"n\"\u003efl4\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\n    \u003cspan class=\"cm\"\u003e/* First, grab a route. */\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"o\"\u003e!\u003c/span\u003e\u003cspan class=\"n\"\u003edst\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u0026amp;\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003edst\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003einet_csk_route_req\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003esk\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e\u003cspan class=\"n\"\u003efl4\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003ereq\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"nb\"\u003eNULL\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n        \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\n    \u003cspan class=\"k\"\u003estruct\u003c/span\u003e \u003cspan class=\"n\"\u003esk_buff\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003eskb\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003etcp_make_synack\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003esk\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003edst\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003ereq\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003efoc\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003esynack_type\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003esyn_skb\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\n    \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eskb\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"k\"\u003estruct\u003c/span\u003e \u003cspan class=\"n\"\u003einet_request_sock\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003eireq\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003einet_rsk\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ereq\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n        \u003cspan class=\"n\"\u003e__tcp_v4_send_check\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eskb\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eireq\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003eir_loc_addr\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eireq\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003eir_rmt_addr\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\n        \u003cspan class=\"n\"\u003eu8\u003c/span\u003e \u003cspan class=\"n\"\u003etos\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003esock_net\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003esk\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003eipv4\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003esysctl_tcp_reflect_tos\u003c/span\u003e \u003cspan class=\"o\"\u003e?\u003c/span\u003e\n                \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003etcp_rsk\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ereq\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003esyn_tos\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e \u003cspan class=\"o\"\u003e~\u003c/span\u003e\u003cspan class=\"n\"\u003eINET_ECN_MASK\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e|\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003einet_sk\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003esk\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003etos\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e \u003cspan class=\"n\"\u003eINET_ECN_MASK\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003einet_sk\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003esk\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003etos\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\n        \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"o\"\u003e!\u003c/span\u003e\u003cspan class=\"n\"\u003eINET_ECN_is_capable\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003etos\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u0026amp;\u003c/span\u003e \u003cspan class=\"n\"\u003etcp_bpf_ca_needs_ecn\u003c/span\u003e\u003cspan class=\"p\"\u003e((\u003c/span\u003e\u003cspan class=\"k\"\u003estruct\u003c/span\u003e \u003cspan class=\"n\"\u003esock\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"n\"\u003ereq\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e\n            \u003cspan class=\"n\"\u003etos\u003c/span\u003e \u003cspan class=\"o\"\u003e|=\u003c/span\u003e \u003cspan class=\"n\"\u003eINET_ECN_ECT_0\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\n        \u003cspan class=\"n\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eip_build_and_send_pkt\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eskb\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003esk\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eireq\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003eir_loc_addr\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eireq\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003eir_rmt_addr\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eireq\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003eireq_opt\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003etos\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n        \u003cspan class=\"n\"\u003enet_xmit_eval\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eerr\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003ch3 id=\"retransmit-synack\"\u003eRetransmit SYN+ACK\u003c/h3\u003e\n\n\u003cp\u003eIf SYN+ACK is lost, the server is responsible to retransmit it:\u003c/p\u003e\n\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003e$ \u003c/span\u003esysctl net.ipv4.tcp_synack_retries\nnet.ipv4.tcp_synack_retries \u003cspan class=\"o\"\u003e=\u003c/span\u003e 5\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cdiv class=\"language-plaintext highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e// https://github.com/torvalds/linux/blob/v5.10/Documentation/networking/ip-sysctl.rst\n\ntcp_synack_retries - INTEGER\n    Number of times SYNACKs for a passive TCP connection attempt will\n    be retransmitted. Should not be higher than 255. Default value\n    is 5, which corresponds to 31seconds till the last retransmission\n    with the current initial RTO of 1second. With this the final timeout\n    for a passive TCP connection will happen after 63seconds.\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003ch2 id=\"43-server-received-the-ack-3whs-progress-33\"\u003e4.3 Server received the \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eACK\u003c/code\u003e (3WHS progress: 3/3)\u003c/h2\u003e\n\n\u003ch3 id=\"431-call-stack\"\u003e4.3.1 Call stack\u003c/h3\u003e\n\n\u003cdiv class=\"language-plaintext highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003etcp_rcv_state_process\n |-tcp_check_req(sk, skb, req, true, \u0026amp;req_stolen))     // creates a full child socket\n |  |-child=icsk_af_ops-\u0026gt;syn_recv_sock()\n |  |                     |-tcp_v4_syn_recv_sock       // create a full (established) socket\n |  |                        |-newsk=tcp_create_openreq_child(sk, req, skb);\n |  |                        |        |-newsk = inet_csk_clone_lock(sk)\n |  |                        |-inet_ehash_nolisten(newsk, osk)\n |  |                           |-inet_ehash_insert(newsk, osk)\n |  |                              |-sk_nulls_del_node_init_rcu(osk)\n |  |                              |-__sk_nulls_add_node_rcu(newsk, list)\n |  |-if (!child)\n |  |     goto listen_overflow;\n |  |\n |  |-inet_csk_complete_hashdance(sk, child, req, own_req);\n |     |-inet_csk_reqsk_queue_drop(sk, req);          // Remove from \u0026#34;SYN queue\u0026#34; (`ehash`)\n |     |  |-unlinked = reqsk_queue_unlink(req)\n |     |  |             |-__sk_nulls_del_node_init_rcu\n |     |  |-if unlinked:\n |     |      reqsk_queue_removed(icsk_accept_queue, req)// Update \u0026#34;SYN queue\u0026#34; state: qlen--\n |     |\n |     |-reqsk_queue_removed(icsk_accept_queue, req)  // Update \u0026#34;SYN queue\u0026#34; state: qlen--\n |     |-inet_csk_reqsk_queue_add(sk, req, child)     // Insert to accept queue\n |\n |-switch (sk-\u0026gt;sk_state) {\n   case TCP_SYN_RECV:\n     tp-\u0026gt;delivered++\n     tcp_init_transfer(BPF_SOCK_OPS_PASSIVE_ESTABLISHED_CB) // BPF program\n     tcp_set_state(sk, TCP_ESTABLISHED)                     // Set state to ESTABLISHED\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003ch3 id=\"432-tcp_rcv_state_process---tcp_check_req\"\u003e4.3.2 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003etcp_rcv_state_process() -\u0026gt; tcp_check_req()\u003c/code\u003e\u003c/h3\u003e\n\n\u003cp\u003eAgain, start from the \u003ccode class=\"language-plaintext highlighter-rouge\"\u003etcp_rcv_state_process()\u003c/code\u003e, but this time from a different code block:\u003c/p\u003e\n\n\u003cdiv class=\"language-c highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"nf\"\u003etcp_rcv_state_process\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003estruct\u003c/span\u003e \u003cspan class=\"n\"\u003esock\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003esk\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"k\"\u003estruct\u003c/span\u003e \u003cspan class=\"n\"\u003esk_buff\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003eskb\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e...\u003c/span\u003e\n    \u003cspan class=\"n\"\u003ereq\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003ercu_dereference_protected\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003etp\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003efastopen_rsk\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003elockdep_sock_is_held\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003esk\u003c/span\u003e\u003cspan class=\"p\"\u003e));\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ereq\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"n\"\u003eWARN_ON_ONCE\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003esk\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003esk_state\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"n\"\u003eTCP_SYN_RECV\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u0026amp;\u003c/span\u003e \u003cspan class=\"n\"\u003esk\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003esk_state\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"n\"\u003eTCP_FIN_WAIT1\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\n        \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"o\"\u003e!\u003c/span\u003e\u003cspan class=\"n\"\u003etcp_check_req\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003esk\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eskb\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003ereq\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nb\"\u003etrue\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e\u003cspan class=\"n\"\u003ereq_stolen\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e \u003cspan class=\"c1\"\u003e//  creates a full child socket\u003c/span\u003e\n            \u003cspan class=\"k\"\u003egoto\u003c/span\u003e \u003cspan class=\"n\"\u003ediscard\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e...\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eswitch\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003esk\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003esk_state\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ecase\u003c/span\u003e \u003cspan class=\"n\"\u003eTCP_SYN_RECV\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n        \u003cspan class=\"n\"\u003etp\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003edelivered\u003c/span\u003e\u003cspan class=\"o\"\u003e++\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"cm\"\u003e/* SYN-ACK delivery isn\u0026#39;t tracked in tcp_ack */\u003c/span\u003e\n\n        \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ereq\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n            \u003cspan class=\"n\"\u003etcp_rcv_synrecv_state_fastopen\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003esk\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e \u003cspan class=\"c1\"\u003e// release ref to request_sock\u003c/span\u003e\n        \u003cspan class=\"p\"\u003e}\u003c/span\u003e \u003cspan class=\"k\"\u003eelse\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n            \u003cspan class=\"n\"\u003etcp_try_undo_spurious_syn\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003esk\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n            \u003cspan class=\"n\"\u003etp\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003eretrans_stamp\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n            \u003cspan class=\"n\"\u003etcp_init_transfer\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003esk\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eBPF_SOCK_OPS_PASSIVE_ESTABLISHED_CB\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eskb\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e \u003cspan class=\"c1\"\u003e// BPF program\u003c/span\u003e\n        \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n        \u003cspan class=\"n\"\u003etcp_set_state\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003esk\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eTCP_ESTABLISHED\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e     \u003cspan class=\"c1\"\u003e// Set state to ESTABLISHED\u003c/span\u003e\n        \u003cspan class=\"n\"\u003esk\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003esk_state_change\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003esk\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n        \u003cspan class=\"k\"\u003ebreak\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ecase\u003c/span\u003e \u003cspan class=\"n\"\u003eTCP_FIN_WAIT1\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ecase\u003c/span\u003e \u003cspan class=\"n\"\u003eTCP_CLOSING\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ecase\u003c/span\u003e \u003cspan class=\"n\"\u003eTCP_LAST_ACK\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n        \u003cspan class=\"p\"\u003e...\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003ch3 id=\"433-tcp_check_req---syn_recv_sock\"\u003e4.3.3 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003etcp_check_req() -\u0026gt; syn_recv_sock()\u003c/code\u003e\u003c/h3\u003e\n\n\u003cdiv class=\"language-c highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"c1\"\u003e// net/ipv4/tcp_minisocks.c\u003c/span\u003e\n\n\u003cspan class=\"cm\"\u003e/*\n * Process an incoming packet for SYN_RECV sockets represented as a\n * request_sock. Normally sk is the listener socket but for TFO it\n * points to the child socket.\n */\u003c/span\u003e\n\u003cspan class=\"k\"\u003estruct\u003c/span\u003e \u003cspan class=\"n\"\u003esock\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"nf\"\u003etcp_check_req\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003estruct\u003c/span\u003e \u003cspan class=\"n\"\u003esock\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003esk\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"k\"\u003estruct\u003c/span\u003e \u003cspan class=\"n\"\u003esk_buff\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003eskb\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"k\"\u003estruct\u003c/span\u003e \u003cspan class=\"n\"\u003erequest_sock\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003ereq\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003ebool\u003c/span\u003e \u003cspan class=\"n\"\u003efastopen\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003ebool\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003ereq_stolen\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"k\"\u003estruct\u003c/span\u003e \u003cspan class=\"n\"\u003etcphdr\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003eth\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003etcp_hdr\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eskb\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"n\"\u003e__be32\u003c/span\u003e \u003cspan class=\"n\"\u003eflg\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003etcp_flag_word\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eth\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eTCP_FLAG_RST\u003c/span\u003e\u003cspan class=\"o\"\u003e|\u003c/span\u003e\u003cspan class=\"n\"\u003eTCP_FLAG_SYN\u003c/span\u003e\u003cspan class=\"o\"\u003e|\u003c/span\u003e\u003cspan class=\"n\"\u003eTCP_FLAG_ACK\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\n    \u003cspan class=\"c1\"\u003e// For Fast Open no more processing is needed (sk is the child socket).\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003efastopen\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n        \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003esk\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\n    \u003cspan class=\"cm\"\u003e/* While TCP_DEFER_ACCEPT is active, drop bare ACK. */\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ereq\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003enum_timeout\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"n\"\u003einet_csk\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003esk\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003eicsk_accept_queue\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003erskq_defer_accept\u003c/span\u003e \u003cspan class=\"p\"\u003e...)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"n\"\u003e__NET_INC_STATS\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003esock_net\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003esk\u003c/span\u003e\u003cspan class=\"p\"\u003e),\u003c/span\u003e \u003cspan class=\"n\"\u003eLINUX_MIB_TCPDEFERACCEPTDROP\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n        \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nb\"\u003eNULL\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n    \u003cspan class=\"c1\"\u003e// OK, ACK is valid, create big socket and feed this segment to it. It will repeat all the tests.\u003c/span\u003e\n    \u003cspan class=\"c1\"\u003e// THIS SEGMENT MUST MOVE SOCKET TO ESTABLISHED STATE.\u003c/span\u003e\n    \u003cspan class=\"n\"\u003echild\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003einet_csk\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003esk\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003eicsk_af_ops\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003esyn_recv_sock\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003esk\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eskb\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003ereq\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nb\"\u003eNULL\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003ereq\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e\u003cspan class=\"n\"\u003eown_req\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"o\"\u003e!\u003c/span\u003e\u003cspan class=\"n\"\u003echild\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n        \u003cspan class=\"k\"\u003egoto\u003c/span\u003e \u003cspan class=\"n\"\u003elisten_overflow\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\n    \u003cspan class=\"n\"\u003esock_rps_save_rxhash\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003echild\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eskb\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"n\"\u003etcp_synack_rtt_meas\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003echild\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003ereq\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003ereq_stolen\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"o\"\u003e!\u003c/span\u003e\u003cspan class=\"n\"\u003eown_req\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003einet_csk_complete_hashdance\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003esk\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003echild\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003ereq\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eown_req\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\n\u003cspan class=\"nl\"\u003elisten_overflow:\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"o\"\u003e!\u003c/span\u003e\u003cspan class=\"n\"\u003esock_net\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003esk\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003eipv4\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003esysctl_tcp_abort_on_overflow\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nb\"\u003eNULL\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"nl\"\u003eembryonic_reset:\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"o\"\u003e!\u003c/span\u003e\u003cspan class=\"n\"\u003efastopen\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"n\"\u003ebool\u003c/span\u003e \u003cspan class=\"n\"\u003eunlinked\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003einet_csk_reqsk_queue_drop\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003esk\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003ereq\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n        \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eunlinked\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n            \u003cspan class=\"n\"\u003e__NET_INC_STATS\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003esock_net\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003esk\u003c/span\u003e\u003cspan class=\"p\"\u003e),\u003c/span\u003e \u003cspan class=\"n\"\u003eLINUX_MIB_EMBRYONICRSTS\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nb\"\u003eNULL\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003ch3 id=\"434-syn_recv_sock---tcp_v4_syn_recv_sock\"\u003e4.3.4 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003esyn_recv_sock() -\u0026gt; tcp_v4_syn_recv_sock()\u003c/code\u003e\u003c/h3\u003e\n\n\u003cp\u003eNote that the two parameters passed in: \u003ccode class=\"language-plaintext highlighter-rouge\"\u003ereq_unhash\u003c/code\u003e and \u003ccode class=\"language-plaintext highlighter-rouge\"\u003ereq\u003c/code\u003e, they are\nactually the same object, aka the request_sock,\u003c/p\u003e\n\n\u003cdiv class=\"language-c highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"c1\"\u003e// net/ipv4/tcp_minisocks.c\u003c/span\u003e\n\n\u003cspan class=\"c1\"\u003e// The three way handshake has completed - we got a valid synack - now create the new socket.\u003c/span\u003e\n\u003cspan class=\"k\"\u003estruct\u003c/span\u003e \u003cspan class=\"n\"\u003esock\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"nf\"\u003etcp_v4_syn_recv_sock\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"k\"\u003estruct\u003c/span\u003e \u003cspan class=\"n\"\u003esock\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003esk\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"k\"\u003estruct\u003c/span\u003e \u003cspan class=\"n\"\u003esk_buff\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003eskb\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n                  \u003cspan class=\"k\"\u003estruct\u003c/span\u003e \u003cspan class=\"n\"\u003erequest_sock\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003ereq\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"k\"\u003estruct\u003c/span\u003e \u003cspan class=\"n\"\u003edst_entry\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003edst\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"k\"\u003estruct\u003c/span\u003e \u003cspan class=\"n\"\u003erequest_sock\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003ereq_unhash\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003ebool\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003eown_req\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003esk_acceptq_is_full\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003esk\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e\n        \u003cspan class=\"k\"\u003egoto\u003c/span\u003e \u003cspan class=\"n\"\u003eexit_overflow\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\n    \u003cspan class=\"k\"\u003estruct\u003c/span\u003e \u003cspan class=\"n\"\u003esock\u003c/span\u003e              \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003enewsk\u003c/span\u003e   \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003etcp_create_openreq_child\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003esk\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003ereq\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eskb\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"k\"\u003estruct\u003c/span\u003e \u003cspan class=\"n\"\u003einet_sock\u003c/span\u003e         \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003enewinet\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003einet_sk\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003enewsk\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"k\"\u003estruct\u003c/span\u003e \u003cspan class=\"n\"\u003einet_request_sock\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003eireq\u003c/span\u003e    \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003einet_rsk\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ereq\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"n\"\u003esk_daddr_set\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003enewsk\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eireq\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003eir_rmt_addr\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"n\"\u003esk_rcv_saddr_set\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003enewsk\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eireq\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003eir_loc_addr\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"n\"\u003enewinet\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003einet_saddr\u003c/span\u003e   \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eireq\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003eir_loc_addr\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\n    \u003cspan class=\"k\"\u003estruct\u003c/span\u003e \u003cspan class=\"n\"\u003eip_options_rcu\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003einet_opt\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003ercu_dereference\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eireq\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003eireq_opt\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"n\"\u003enewinet\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003emc_index\u003c/span\u003e     \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003einet_iif\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eskb\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"n\"\u003enewinet\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003emc_ttl\u003c/span\u003e       \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eip_hdr\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eskb\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003ettl\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"n\"\u003enewinet\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003ercv_tos\u003c/span\u003e      \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eip_hdr\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eskb\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003etos\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"n\"\u003einet_csk\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003enewsk\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003eicsk_ext_hdr_len\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003einet_opt\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n        \u003cspan class=\"n\"\u003einet_csk\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003enewsk\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003eicsk_ext_hdr_len\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003einet_opt\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003eopt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eoptlen\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"n\"\u003enewinet\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003einet_id\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eprandom_u32\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e\n\n    \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003esock_net\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003esk\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003eipv4\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003esysctl_tcp_reflect_tos\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n        \u003cspan class=\"n\"\u003enewinet\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003etos\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003etcp_rsk\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ereq\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003esyn_tos\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e \u003cspan class=\"o\"\u003e~\u003c/span\u003e\u003cspan class=\"n\"\u003eINET_ECN_MASK\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\n    \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"o\"\u003e!\u003c/span\u003e\u003cspan class=\"n\"\u003edst\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"n\"\u003edst\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003einet_csk_route_child_sock\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003esk\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003enewsk\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003ereq\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n        \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"o\"\u003e!\u003c/span\u003e\u003cspan class=\"n\"\u003edst\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n            \u003cspan class=\"k\"\u003egoto\u003c/span\u003e \u003cspan class=\"n\"\u003eput_and_exit\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e}\u003c/span\u003e \u003cspan class=\"k\"\u003eelse\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"cm\"\u003e/* syncookie case : see end of cookie_v4_check() */\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n    \u003cspan class=\"n\"\u003esk_setup_caps\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003enewsk\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003edst\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"n\"\u003e__inet_inherit_port\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003esk\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003enewsk\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\n    \u003cspan class=\"c1\"\u003e// Insert `newsk` (will soon be set as ESTABLISHED) to `ehash`, delete original `struct request_sock req_unhash` (in SYN_RECV or TIME_WAIT state);\u003c/span\u003e\n    \u003cspan class=\"c1\"\u003e// Note: these two sock has the same hash key, as they have the same 5-tuple\u003c/span\u003e\n    \u003cspan class=\"n\"\u003ebool\u003c/span\u003e \u003cspan class=\"n\"\u003efound_dup_sk\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nb\"\u003efalse\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003eown_req\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003einet_ehash_nolisten\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003enewsk\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003ereq_to_sk\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ereq_unhash\u003c/span\u003e\u003cspan class=\"p\"\u003e),\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e\u003cspan class=\"n\"\u003efound_dup_sk\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003enewsk\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\n\u003cspan class=\"nl\"\u003eexit_overflow:\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eNET_INC_STATS\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003esock_net\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003esk\u003c/span\u003e\u003cspan class=\"p\"\u003e),\u003c/span\u003e \u003cspan class=\"n\"\u003eLINUX_MIB_LISTENOVERFLOWS\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003cspan class=\"nl\"\u003eexit:\u003c/span\u003e\n    \u003cspan class=\"n\"\u003etcp_listendrop\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003esk\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nb\"\u003eNULL\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"nl\"\u003eput_and_exit:\u003c/span\u003e\n    \u003cspan class=\"n\"\u003enewinet\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003einet_opt\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nb\"\u003eNULL\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"n\"\u003einet_csk_prepare_forced_close\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003enewsk\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"n\"\u003etcp_done\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003enewsk\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"k\"\u003egoto\u003c/span\u003e \u003cspan class=\"n\"\u003eexit\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003esyn_recv_sock() calls \u003ccode class=\"language-plaintext highlighter-rouge\"\u003einet_csk_complete_hashdance()\u003c/code\u003e in the end.\u003c/p\u003e\n\n\u003ch3 id=\"435-inet_csk_complete_hashdance\"\u003e4.3.5 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003einet_csk_complete_hashdance()\u003c/code\u003e\u003c/h3\u003e\n\n\u003cdiv class=\"language-c highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"c1\"\u003e// net/ipv4/inet_connection_sock.c\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003estruct\u003c/span\u003e \u003cspan class=\"n\"\u003esock\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"nf\"\u003einet_csk_complete_hashdance\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003estruct\u003c/span\u003e \u003cspan class=\"n\"\u003esock\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003esk\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"k\"\u003estruct\u003c/span\u003e \u003cspan class=\"n\"\u003esock\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003echild\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"k\"\u003estruct\u003c/span\u003e \u003cspan class=\"n\"\u003erequest_sock\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003ereq\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003ebool\u003c/span\u003e \u003cspan class=\"n\"\u003eown_req\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eown_req\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"n\"\u003einet_csk_reqsk_queue_drop\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003esk\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003ereq\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e           \u003cspan class=\"c1\"\u003e// Delete from \u0026#34;SYN queue\u0026#34;\u003c/span\u003e\n        \u003cspan class=\"n\"\u003ereqsk_queue_removed\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eicsk_accept_queue\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003ereq\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e  \u003cspan class=\"c1\"\u003e// Update \u0026#34;SYN queue\u0026#34; state: qlen--\u003c/span\u003e\n\n        \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003einet_csk_reqsk_queue_add\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003esk\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003ereq\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003echild\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e \u003cspan class=\"c1\"\u003e// Add to accept queue (established connections)\u003c/span\u003e\n            \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003echild\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n    \u003cspan class=\"cm\"\u003e/* Too bad, another child took ownership of the request, undo. */\u003c/span\u003e\n    \u003cspan class=\"n\"\u003esock_put\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003echild\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nb\"\u003eNULL\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003ch1 id=\"5-connections-accept-by-application\"\u003e5 Connections \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eaccept()\u003c/code\u003e by application\u003c/h1\u003e\n\n\u003cp\u003eWitht 3WHS succeeds, the connection will be \u003cstrong\u003e\u003cmark\u003ein ESTABLISHED state and in the accept queue\u003c/mark\u003e\u003c/strong\u003e,\nwaiting for the listening application to dequeue it by \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eaccept()\u003c/code\u003e system call.\u003c/p\u003e\n\n\u003ch2 id=\"51-inet_accept---sk-sk_prot-accpt---inet_csk_accept\"\u003e5.1 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003einet_accept() -\u0026gt; sk-\u0026gt;sk_prot-\u0026gt;accpt() -\u0026gt; inet_csk_accept()\u003c/code\u003e\u003c/h2\u003e\n\n\u003cdiv class=\"language-c highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"c1\"\u003e// net/ipv4/af_inet.c\u003c/span\u003e\n\n\u003cspan class=\"c1\"\u003e// Accept a pending connection. The TCP layer now gives BSD semantics.\u003c/span\u003e\n\u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"nf\"\u003einet_accept\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003estruct\u003c/span\u003e \u003cspan class=\"n\"\u003esocket\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003esock\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"k\"\u003estruct\u003c/span\u003e \u003cspan class=\"n\"\u003esocket\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003enewsock\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"n\"\u003eflags\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003ebool\u003c/span\u003e \u003cspan class=\"n\"\u003ekern\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003estruct\u003c/span\u003e \u003cspan class=\"n\"\u003esock\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003esk1\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003esock\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003esk\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"k\"\u003estruct\u003c/span\u003e \u003cspan class=\"n\"\u003esock\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003esk2\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003esk1\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003esk_prot\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003eaccept\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003esk1\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eflags\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e\u003cspan class=\"n\"\u003eerr\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003ekern\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e \u003cspan class=\"c1\"\u003e// sk2 == sk1 || sk2 == NULL\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"o\"\u003e!\u003c/span\u003e\u003cspan class=\"n\"\u003esk2\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n        \u003cspan class=\"k\"\u003egoto\u003c/span\u003e \u003cspan class=\"n\"\u003edo_err\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\n    \u003cspan class=\"n\"\u003eWARN_ON\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"o\"\u003e!\u003c/span\u003e\u003cspan class=\"p\"\u003e((\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e \u003cspan class=\"n\"\u003esk2\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003esk_state\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eTCPF_ESTABLISHED\u003c/span\u003e \u003cspan class=\"o\"\u003e|\u003c/span\u003e \u003cspan class=\"n\"\u003eTCPF_SYN_RECV\u003c/span\u003e \u003cspan class=\"o\"\u003e|\u003c/span\u003e \u003cspan class=\"n\"\u003eTCPF_CLOSE_WAIT\u003c/span\u003e \u003cspan class=\"o\"\u003e|\u003c/span\u003e \u003cspan class=\"n\"\u003eTCPF_CLOSE\u003c/span\u003e\u003cspan class=\"p\"\u003e)));\u003c/span\u003e\n\n    \u003cspan class=\"n\"\u003esock_graft\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003esk2\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003enewsock\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e \u003cspan class=\"c1\"\u003e// set sk2\u0026#39;s parent = newsock\u003c/span\u003e\n\n    \u003cspan class=\"n\"\u003enewsock\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003estate\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eSS_CONNECTED\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e\u003ccode class=\"language-plaintext highlighter-rouge\"\u003esk1-\u0026gt;sk_prot-\u0026gt;accept()\u003c/code\u003e points to protocol specific \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eaccept()\u003c/code\u003e handler.\u003c/p\u003e\n\n\u003ch2 id=\"52-inet_csk_accept---reqsk_queue_remove\"\u003e5.2 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003einet_csk_accept() -\u0026gt; reqsk_queue_remove()\u003c/code\u003e\u003c/h2\u003e\n\n\u003cdiv class=\"language-c highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"c1\"\u003e// net/ipv4/inet_connection_sock.c\u003c/span\u003e\n\n\u003cspan class=\"cm\"\u003e/*\n * This will accept the next outstanding connection.\n */\u003c/span\u003e\n\u003cspan class=\"k\"\u003estruct\u003c/span\u003e \u003cspan class=\"n\"\u003esock\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"nf\"\u003einet_csk_accept\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003estruct\u003c/span\u003e \u003cspan class=\"n\"\u003esock\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003esk\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"n\"\u003eflags\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003eerr\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003ebool\u003c/span\u003e \u003cspan class=\"n\"\u003ekern\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003estruct\u003c/span\u003e \u003cspan class=\"n\"\u003einet_connection_sock\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003eicsk\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003einet_csk\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003esk\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"k\"\u003estruct\u003c/span\u003e \u003cspan class=\"n\"\u003erequest_sock_queue\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003equeue\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e\u003cspan class=\"n\"\u003eicsk\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003eicsk_accept_queue\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\n    \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003esk\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003esk_state\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"n\"\u003eTCP_LISTEN\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n        \u003cspan class=\"k\"\u003egoto\u003c/span\u003e \u003cspan class=\"n\"\u003eout_err\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\n    \u003cspan class=\"c1\"\u003e// Find already established connection: wait until queue is not empty\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ereqsk_queue_empty\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003equeue\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e  \u003cspan class=\"c1\"\u003e// return READ_ONCE(queue-\u0026gt;rskq_accept_head) == NULL;\u003c/span\u003e\n        \u003cspan class=\"kt\"\u003elong\u003c/span\u003e \u003cspan class=\"n\"\u003etimeo\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003esock_rcvtimeo\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003esk\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eflags\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e \u003cspan class=\"n\"\u003eO_NONBLOCK\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n        \u003cspan class=\"n\"\u003einet_csk_wait_for_connect\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003esk\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003etimeo\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n    \u003cspan class=\"c1\"\u003e// accept queue it not empty when code reaches here\u003c/span\u003e\n    \u003cspan class=\"k\"\u003estruct\u003c/span\u003e \u003cspan class=\"n\"\u003erequest_sock\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003ereq\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003ereqsk_queue_remove\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003equeue\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003esk\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"k\"\u003estruct\u003c/span\u003e \u003cspan class=\"n\"\u003esock\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003enewsk\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003ereq\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003esk\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\n    \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003esk\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003esk_protocol\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"n\"\u003eIPPROTO_TCP\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u0026amp;\u003c/span\u003e \u003cspan class=\"n\"\u003etcp_rsk\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ereq\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003etfo_listener\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003etcp_rsk\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ereq\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003etfo_listener\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"c1\"\u003e// TFO: TCP Fast Open\u003c/span\u003e\n            \u003cspan class=\"c1\"\u003e//  We are still waiting for the final ACK from 3WHS so can\u0026#39;t free req now.\u003c/span\u003e\n            \u003cspan class=\"c1\"\u003e//  Instead, we set req-\u0026gt;sk to NULL to signify that the child socket is taken\u003c/span\u003e\n            \u003cspan class=\"c1\"\u003e//  so reqsk_fastopen_remove() will free the req when 3WHS finishes (or is aborted).\u003c/span\u003e\n            \u003cspan class=\"n\"\u003ereq\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003esk\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nb\"\u003eNULL\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n            \u003cspan class=\"n\"\u003ereq\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nb\"\u003eNULL\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n        \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"nl\"\u003eout:\u003c/span\u003e\n    \u003cspan class=\"n\"\u003erelease_sock\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003esk\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003enewsk\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u0026amp;\u003c/span\u003e \u003cspan class=\"n\"\u003emem_cgroup_sockets_enabled\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"cm\"\u003e/* atomically get the memory usage, set and charge the newsk-\u0026gt;sk_memcg.  */\u003c/span\u003e\n\n        \u003cspan class=\"cm\"\u003e/* The socket has not been accepted yet, no need to look at newsk-\u0026gt;sk_wmem_queued. */\u003c/span\u003e\n        \u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"n\"\u003eamt\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003esk_mem_pages\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003enewsk\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003esk_forward_alloc\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"n\"\u003eatomic_read\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e\u003cspan class=\"n\"\u003enewsk\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003esk_rmem_alloc\u003c/span\u003e\u003cspan class=\"p\"\u003e));\u003c/span\u003e\n        \u003cspan class=\"n\"\u003emem_cgroup_sk_alloc\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003enewsk\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n        \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003enewsk\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003esk_memcg\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u0026amp;\u003c/span\u003e \u003cspan class=\"n\"\u003eamt\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n            \u003cspan class=\"n\"\u003emem_cgroup_charge_skmem\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003enewsk\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003esk_memcg\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eamt\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ereq\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n        \u003cspan class=\"n\"\u003ereqsk_put\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ereq\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003enewsk\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\n\u003cspan class=\"nl\"\u003eout_err:\u003c/span\u003e\n    \u003cspan class=\"n\"\u003enewsk\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nb\"\u003eNULL\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"n\"\u003ereq\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nb\"\u003eNULL\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eerror\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"k\"\u003egoto\u003c/span\u003e \u003cspan class=\"n\"\u003eout\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003ch2 id=\"53-reqsk_queue_remove\"\u003e5.3 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003ereqsk_queue_remove()\u003c/code\u003e\u003c/h2\u003e\n\n\u003cp\u003eRemove request_sock from accept queue:\u003c/p\u003e\n\n\u003cdiv class=\"language-c highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"c1\"\u003e// include/net/request_sock.h\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003estatic\u003c/span\u003e \u003cspan class=\"kr\"\u003einline\u003c/span\u003e \u003cspan class=\"k\"\u003estruct\u003c/span\u003e \u003cspan class=\"n\"\u003erequest_sock\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"nf\"\u003ereqsk_queue_remove\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003estruct\u003c/span\u003e \u003cspan class=\"n\"\u003erequest_sock_queue\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003equeue\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"k\"\u003estruct\u003c/span\u003e \u003cspan class=\"n\"\u003esock\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003eparent\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003estruct\u003c/span\u003e \u003cspan class=\"n\"\u003erequest_sock\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003ereq\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003equeue\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003erskq_accept_head\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ereq\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"n\"\u003esk_acceptq_removed\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eparent\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n        \u003cspan class=\"n\"\u003eWRITE_ONCE\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003equeue\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003erskq_accept_head\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003ereq\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003edl_next\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n        \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003equeue\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003erskq_accept_head\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"nb\"\u003eNULL\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n            \u003cspan class=\"n\"\u003equeue\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003erskq_accept_tail\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nb\"\u003eNULL\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003ereq\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003eThis sets an end to our kenrel adventure.\nIn the next we’ll back to human world.\u003c/p\u003e\n\n\u003cp\u003e\u003ca name=\"section_6\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003ch1 id=\"6-a-tale-of-two-queues\"\u003e6 A tale of two queues\u003c/h1\u003e\n\n\u003cp\u003eCheck the man page of \u003ccode class=\"language-plaintext highlighter-rouge\"\u003elisten()\u003c/code\u003e system call again:\u003c/p\u003e\n\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003e$ \u003c/span\u003eman 2 listen\nSYNOPSIS\n       int listen\u003cspan class=\"o\"\u003e(\u003c/span\u003eint sockfd, int backlog\u003cspan class=\"o\"\u003e)\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\nDESCRIPTION\n       listen\u003cspan class=\"o\"\u003e()\u003c/span\u003e marks the socket referred to by sockfd as a passive socket, that is, as a socket that will be used to accept incoming connection requests using accept\u003cspan class=\"o\"\u003e(\u003c/span\u003e2\u003cspan class=\"o\"\u003e)\u003c/span\u003e\u003cspan class=\"nb\"\u003e.\u003c/span\u003e\n...\nNOTES\n  To accept connections, the following steps are performed:\n  1.  A socket is created with socket\u003cspan class=\"o\"\u003e(\u003c/span\u003e2\u003cspan class=\"o\"\u003e)\u003c/span\u003e\u003cspan class=\"nb\"\u003e.\u003c/span\u003e\n  2.  The socket is bound to a \u003cspan class=\"nb\"\u003elocal \u003c/span\u003eaddress using \u003cspan class=\"nb\"\u003ebind\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e2\u003cspan class=\"o\"\u003e)\u003c/span\u003e, so that other sockets may be connect\u003cspan class=\"o\"\u003e(\u003c/span\u003e2\u003cspan class=\"o\"\u003e)\u003c/span\u003eed to it.\n  3.  A willingness to accept incoming connections and a queue limit \u003cspan class=\"k\"\u003efor \u003c/span\u003eincoming connections are specified with listen\u003cspan class=\"o\"\u003e()\u003c/span\u003e\u003cspan class=\"nb\"\u003e.\u003c/span\u003e\n  4.  Connections are accepted with accept\u003cspan class=\"o\"\u003e(\u003c/span\u003e2\u003cspan class=\"o\"\u003e)\u003c/span\u003e\u003cspan class=\"nb\"\u003e.\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003eSome snippets from the \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eNOTE\u003c/code\u003e part:\u003c/p\u003e\n\n\u003col\u003e\n  \u003cli\u003e\n    \u003cp\u003e\u003ccode class=\"language-plaintext highlighter-rouge\"\u003ebacklog\u003c/code\u003e parameter specifies the queue length for \u003cstrong\u003e\u003cmark\u003ecompletely established sockets waiting to be accepted\u003c/mark\u003e\u003c/strong\u003e,\n instead of the number of \u003cstrong\u003e\u003cmark\u003eincomplete  connection requests\u003c/mark\u003e\u003c/strong\u003e;\u003c/p\u003e\n\n    \u003cul\u003e\n      \u003cli\u003eIf the backlog argument is greater than \u003cstrong\u003e\u003cmark\u003e\u003ccode\u003e/proc/sys/net/core/somaxconn\u003c/code\u003e\u003c/mark\u003e\u003c/strong\u003e, it is silently truncated to that value.\u003c/li\u003e\n      \u003cli\u003eSince Linux 5.4, the default of somaxconn is 4096; in earlier kernels, the default value is 128.\u003c/li\u003e\n    \u003c/ul\u003e\n  \u003c/li\u003e\n  \u003cli\u003e\n    \u003cp\u003eThe \u003cstrong\u003e\u003cmark\u003emax length of the queue for incomplete sockets\u003c/mark\u003e\u003c/strong\u003e can\nbe set using \u003cstrong\u003e\u003cmark\u003e\u003ccode\u003e/proc/sys/net/ipv4/tcp_max_syn_backlog\u003c/code\u003e\u003c/mark\u003e\u003c/strong\u003e.\u003c/p\u003e\n\n    \u003cul\u003e\n      \u003cli\u003eWhen syncookies are enabled there is no logical maximum length and this setting is ignored.  See tcp(7) for more information.\u003c/li\u003e\n    \u003c/ul\u003e\n  \u003c/li\u003e\n\u003c/ol\u003e\n\n\u003cp align=\"center\"\u003e\u003cimg src=\"/assets/img/tcp-listen-a-tale-of-two-queues/synq-acceptq.png\" width=\"70%\" height=\"70%\"/\u003e\u003c/p\u003e\n\u003cp align=\"center\"\u003eFig. The \u0026#34;SYN queue\u0026#34; and accept queue of a listening state TCP socket\u003c/p\u003e\n\n\u003cp\u003eNow let’s compare the two queue in many aspects.\u003c/p\u003e\n\n\u003ch2 id=\"61-syn-queue\"\u003e6.1 SYN Queue\u003c/h2\u003e\n\n\u003ch3 id=\"purpose-storing-syn_recv-state-connections\"\u003ePurpose: storing SYN_RECV state connections\u003c/h3\u003e\n\n\u003cp\u003eAlso named “incomplete queue”, stores SYN_RECV state connections - to be more accurate,\nit stores connection requests. The general representation of connection request is \u003ccode class=\"language-plaintext highlighter-rouge\"\u003estruct request_sock\u003c/code\u003e,\nbut for TCP, the real overhead for each request is \u003ccode class=\"language-plaintext highlighter-rouge\"\u003estruct tcp_request_sock\u003c/code\u003e.\u003c/p\u003e\n\n\u003ch3 id=\"queue-position--implementation\"\u003eQueue position \u0026amp; implementation\u003c/h3\u003e\n\n\u003cp\u003e“SYN queue” is not a real queue, but combines two pieces of information to serve as a queue:\u003c/p\u003e\n\n\u003cul\u003e\n  \u003cli\u003eThe \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eehash\u003c/code\u003e: this is a hash table holding all ESTABLISHED and SYN_RECV state connections;\u003c/li\u003e\n  \u003cli\u003eThe \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eqlen\u003c/code\u003e field in accept queue (\u003ccode class=\"language-plaintext highlighter-rouge\"\u003estruct request_sock_queue\u003c/code\u003e):\n\u003cstrong\u003e\u003cmark\u003ethe number of connections in \u0026#34;SYN queue\u0026#34;\u003c/mark\u003e\u003c/strong\u003e,\nactually is the number of SYN_RECV state connections in the \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eehash\u003c/code\u003e.\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cblockquote\u003e\n  \u003cp\u003e\u003ccode class=\"language-plaintext highlighter-rouge\"\u003esk_ack_backlog\u003c/code\u003e in \u003ccode class=\"language-plaintext highlighter-rouge\"\u003estruct sock\u003c/code\u003e of the listening socket holds the \u003cstrong\u003e\u003cmark\u003enumber of connections in the accept queue\u003c/mark\u003e\u003c/strong\u003e.\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eWhy this design? According to [4]:\u003c/p\u003e\n\n\u003cblockquote\u003e\n  \u003cp\u003eThe short answer is that SYN queues are dangerous. The reason is that by\nsending a single packet (SYN), the sender can get the receiver to commit\nresources (memory for the SYN queue entry). if you send enough such packets\nfast enough, possibly with a forged origination address, you will either cause\nthe receiver to exhaust its memory resources or to start refusing to accept\nlegitimate connections.\u003c/p\u003e\n\n  \u003cp\u003eFor this reasons modern operating systems do not have a SYN queue. Instead,\nthey will various techniques (the most common is called SYN cookies) that will\nallow them to only have a queue for connections that have already answered the\ninitial SYN ACK packet, and thus proved they have dedicated resources\nthemselves for this connection.\u003c/p\u003e\n\n  \u003cp\u003eThe ehash is where all the ESTABLISHED and TIMEWAIT sockets have been stored, and, more recently, where the SYN “queue” is stored.\u003c/p\u003e\n\n  \u003cp\u003eNote that there is actually no purpose in storing the arrived connection\nrequests in a proper queue. Their order is irrelevant (the final ACKs can\narrive in any order) and by moving them out of the listening socket, it is not\nnecessary to take a lock on the listening socket to process the final ACK.\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003ch3 id=\"kernel-code-checking-whether-the-queue-is-full\"\u003eKernel code checking whether the queue is full\u003c/h3\u003e\n\n\u003cp\u003eThe code for checking whether “SYN queue” is full:\u003c/p\u003e\n\n\u003cdiv class=\"language-c highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"c1\"\u003e// include/net/inet_connection_sock.h\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003estatic\u003c/span\u003e \u003cspan class=\"kr\"\u003einline\u003c/span\u003e \u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"nf\"\u003einet_csk_reqsk_queue_is_full\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"k\"\u003estruct\u003c/span\u003e \u003cspan class=\"n\"\u003esock\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003esk\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003einet_csk_reqsk_queue_len\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003esk\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026gt;=\u003c/span\u003e \u003cspan class=\"n\"\u003esk\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003esk_max_ack_backlog\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003estatic\u003c/span\u003e \u003cspan class=\"kr\"\u003einline\u003c/span\u003e \u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"nf\"\u003einet_csk_reqsk_queue_len\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"k\"\u003estruct\u003c/span\u003e \u003cspan class=\"n\"\u003esock\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003esk\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003ereqsk_queue_len\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e\u003cspan class=\"n\"\u003einet_csk\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003esk\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003eicsk_accept_queue\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e \u003cspan class=\"c1\"\u003e// sk-\u0026gt;icsk_accept_queue.qlen\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003ch3 id=\"queue-configurations\"\u003eQueue configurations\u003c/h3\u003e\n\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003e$ \u003c/span\u003eman 7 tcp\n...\ntcp_max_syn_backlog \u003cspan class=\"o\"\u003e(\u003c/span\u003einteger\u003cspan class=\"p\"\u003e;\u003c/span\u003e default: see below\u003cspan class=\"p\"\u003e;\u003c/span\u003e since Linux 2.2\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n   The  maximum  number of queued connection requests which have still not\n   received an acknowledgement from the connecting client.  If this number is\n   exceeded, the kernel will begin dropping requests.\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003e$ \u003c/span\u003esysctl net.ipv4.tcp_max_syn_backlog\nnet.ipv4.tcp_max_syn_backlog \u003cspan class=\"o\"\u003e=\u003c/span\u003e 4096\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003eBut the actual “SYN queue” size seems to be calculated with three parameters:\u003c/p\u003e\n\n\u003col\u003e\n  \u003cli\u003enet.core.somaxconn\u003c/li\u003e\n  \u003cli\u003enet.ipv4.tcp_max_syn_backlog\u003c/li\u003e\n  \u003cli\u003enet.ipv4.tcp_syncookies\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003cp\u003eSee [5] for a reference.\u003c/p\u003e\n\n\u003ch3 id=\"check-queue-status\"\u003eCheck queue status\u003c/h3\u003e\n\n\u003cp\u003eNo direct system metrics, but we can indirectly get the status by\n\u003cstrong\u003e\u003cmark\u003ecounting the number of sockets in SYN_RECV state\u003c/mark\u003e\u003c/strong\u003e for a listening socket:\u003c/p\u003e\n\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003e$ \u003c/span\u003e\u003cspan class=\"nb\"\u003esudo \u003c/span\u003enetstat \u003cspan class=\"nt\"\u003e-antp\u003c/span\u003e | \u003cspan class=\"nb\"\u003egrep \u003c/span\u003eSYN_RECV | \u003cspan class=\"nb\"\u003ewc\u003c/span\u003e \u003cspan class=\"nt\"\u003e-l\u003c/span\u003e\n102\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003e$ \u003c/span\u003ess \u003cspan class=\"nt\"\u003e-n\u003c/span\u003e state syn-recv sport :80 | \u003cspan class=\"nb\"\u003ewc\u003c/span\u003e \u003cspan class=\"nt\"\u003e-l\u003c/span\u003e\n119\n\u003cspan class=\"nv\"\u003e$ \u003c/span\u003ess \u003cspan class=\"nt\"\u003e-n\u003c/span\u003e state syn-recv sport :443 | \u003cspan class=\"nb\"\u003ewc\u003c/span\u003e \u003cspan class=\"nt\"\u003e-l\u003c/span\u003e\n78\n\n\u003cspan class=\"nv\"\u003e$ \u003c/span\u003enetstat \u003cspan class=\"nt\"\u003e-s\u003c/span\u003e | \u003cspan class=\"nb\"\u003egrep\u003c/span\u003e \u003cspan class=\"nt\"\u003e-i\u003c/span\u003e listen\n701 \u003cspan class=\"nb\"\u003etimes \u003c/span\u003ethe listen queue of a socket overflowed \u003cspan class=\"c\"\u003e# accept queue overflow\u003c/span\u003e\n1246 SYNs to LISTEN sockets dropped               \u003cspan class=\"c\"\u003e# SYN queue overflow\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003ch3 id=\"syn-queue-overflow-test-simple-syn-flood\"\u003e“SYN queue” overflow test: simple SYN flood\u003c/h3\u003e\n\n\u003cp\u003eClient:\u003c/p\u003e\n\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003e$ \u003c/span\u003e\u003cspan class=\"nb\"\u003esudo \u003c/span\u003ehping3 \u003cspan class=\"nt\"\u003e-S\u003c/span\u003e \u0026lt;server ip\u0026gt; \u003cspan class=\"nt\"\u003e-p\u003c/span\u003e \u0026lt;server port\u0026gt; \u003cspan class=\"nt\"\u003e--flood\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003eServer:\u003c/p\u003e\n\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003e$ \u003c/span\u003e\u003cspan class=\"nb\"\u003esudo \u003c/span\u003enetstat \u003cspan class=\"nt\"\u003e-antp\u003c/span\u003e | \u003cspan class=\"nb\"\u003egrep \u003c/span\u003eSYN_RECV | \u003cspan class=\"nb\"\u003ewc\u003c/span\u003e \u003cspan class=\"nt\"\u003e-l\u003c/span\u003e\n102\n\n\u003cspan class=\"nv\"\u003e$ \u003c/span\u003e\u003cspan class=\"nb\"\u003esudo \u003c/span\u003enetstat \u003cspan class=\"nt\"\u003e-antp\u003c/span\u003e | \u003cspan class=\"nb\"\u003egrep\u003c/span\u003e \u003cspan class=\"nt\"\u003e-i\u003c/span\u003e listen\nxx dropped\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003eSYN cookies can be used to alleviate the attack:\u003c/p\u003e\n\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003e$ \u003c/span\u003esysctl net.ipv4.tcp_syncookies\nnet.ipv4.tcp_syncookies \u003cspan class=\"o\"\u003e=\u003c/span\u003e 1\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003eSee [3] for more information.\u003c/p\u003e\n\n\u003ch2 id=\"62-accept-queue\"\u003e6.2 Accept Queue\u003c/h2\u003e\n\n\u003ch3 id=\"purpose-storing-established-but-havent-been-accept-ed-connections\"\u003ePurpose: storing ESTABLISHED but haven’t been \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eaccept()\u003c/code\u003e-ed connections\u003c/h3\u003e\n\n\u003cp\u003eAlso named complete queue, stores established connections that waiting to be dequeued by the application with \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eaccept()\u003c/code\u003e system call.\u003c/p\u003e\n\n\u003ch3 id=\"queue-position--implementation-1\"\u003eQueue position \u0026amp; implementation\u003c/h3\u003e\n\n\u003cp\u003eThis is a real queue - a FIFO queue to be specific.\u003c/p\u003e\n\n\u003cdiv class=\"language-c highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"c1\"\u003e// include/net/request_sock.h\u003c/span\u003e\n\n\u003cspan class=\"cm\"\u003e/** struct request_sock_queue - queue of request_socks\n *\n * @rskq_accept_head - FIFO head of established children\n * @rskq_accept_tail - FIFO tail of established children\n * @rskq_defer_accept - User waits for some data after accept()\n */\u003c/span\u003e\n\u003cspan class=\"k\"\u003estruct\u003c/span\u003e \u003cspan class=\"n\"\u003erequest_sock_queue\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"n\"\u003espinlock_t\u003c/span\u003e      \u003cspan class=\"n\"\u003erskq_lock\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eu8\u003c/span\u003e              \u003cspan class=\"n\"\u003erskq_defer_accept\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\n    \u003cspan class=\"n\"\u003eu32\u003c/span\u003e             \u003cspan class=\"n\"\u003esynflood_warned\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eatomic_t\u003c/span\u003e        \u003cspan class=\"n\"\u003eqlen\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e    \u003cspan class=\"c1\"\u003e// current \u0026#34;SYN queue\u0026#34; (a virtual queue in ehash) size\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eatomic_t\u003c/span\u003e        \u003cspan class=\"n\"\u003eyoung\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\n    \u003cspan class=\"k\"\u003estruct\u003c/span\u003e \u003cspan class=\"n\"\u003erequest_sock\u003c/span\u003e    \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003erskq_accept_head\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"k\"\u003estruct\u003c/span\u003e \u003cspan class=\"n\"\u003erequest_sock\u003c/span\u003e    \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003erskq_accept_tail\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"k\"\u003estruct\u003c/span\u003e \u003cspan class=\"n\"\u003efastopen_queue\u003c/span\u003e   \u003cspan class=\"n\"\u003efastopenq\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e  \u003cspan class=\"cm\"\u003e/* Check max_qlen != 0 to determine * if TFO is enabled.  */\u003c/span\u003e\n\u003cspan class=\"p\"\u003e};\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003ch3 id=\"kernel-code-checking-whether-the-queue-is-full-1\"\u003eKernel code checking whether the queue is full\u003c/h3\u003e\n\n\u003cdiv class=\"language-c highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"c1\"\u003e// include/net/sock.h\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003estatic\u003c/span\u003e \u003cspan class=\"kr\"\u003einline\u003c/span\u003e \u003cspan class=\"n\"\u003ebool\u003c/span\u003e \u003cspan class=\"nf\"\u003esk_acceptq_is_full\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"k\"\u003estruct\u003c/span\u003e \u003cspan class=\"n\"\u003esock\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003esk\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003eREAD_ONCE\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003esk\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003esk_ack_backlog\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003eREAD_ONCE\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003esk\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003esk_max_ack_backlog\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003estatic\u003c/span\u003e \u003cspan class=\"kr\"\u003einline\u003c/span\u003e \u003cspan class=\"kt\"\u003evoid\u003c/span\u003e \u003cspan class=\"nf\"\u003esk_acceptq_removed\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003estruct\u003c/span\u003e \u003cspan class=\"n\"\u003esock\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003esk\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eWRITE_ONCE\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003esk\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003esk_ack_backlog\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003esk\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003esk_ack_backlog\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003estatic\u003c/span\u003e \u003cspan class=\"kr\"\u003einline\u003c/span\u003e \u003cspan class=\"kt\"\u003evoid\u003c/span\u003e \u003cspan class=\"nf\"\u003esk_acceptq_added\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003estruct\u003c/span\u003e \u003cspan class=\"n\"\u003esock\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003esk\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eWRITE_ONCE\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003esk\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003esk_ack_backlog\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003esk\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003esk_ack_backlog\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003ch3 id=\"queue-configurations-1\"\u003eQueue configurations\u003c/h3\u003e\n\n\u003cp\u003eThe smaller one of the following two settings wins:\u003c/p\u003e\n\n\u003col\u003e\n  \u003cli\u003eUser provided \u003ccode class=\"language-plaintext highlighter-rouge\"\u003ebacklog\u003c/code\u003e value through \u003ccode class=\"language-plaintext highlighter-rouge\"\u003elisten(fd, backlog)\u003c/code\u003e system call;\u003c/li\u003e\n  \u003cli\u003eThe \u003ccode class=\"language-plaintext highlighter-rouge\"\u003esomaxconn\u003c/code\u003e setting of the system.\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003cblockquote\u003e\n  \u003cp\u003esomaxconn defaults to 4096 in kernel 5.10. Cloudflare says they set it to 16K for their servers [3]:\u003c/p\u003e\n\n  \u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003e$ \u003c/span\u003esysctl net.core.somaxconn\nnet.core.somaxconn \u003cspan class=\"o\"\u003e=\u003c/span\u003e 16384\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e  \u003c/div\u003e\n\u003c/blockquote\u003e\n\n\u003ch3 id=\"check-queue-status-1\"\u003eCheck queue status\u003c/h3\u003e\n\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"c\"\u003e# -l: show listen state sockets\u003c/span\u003e\n\u003cspan class=\"c\"\u003e# -t: show tcp sockets\u003c/span\u003e\n\u003cspan class=\"c\"\u003e# -n: numeric output\u003c/span\u003e\n\u003cspan class=\"nv\"\u003e$ \u003c/span\u003ess \u003cspan class=\"nt\"\u003e-ntl\u003c/span\u003e | \u003cspan class=\"nb\"\u003ehead\n\u003c/span\u003eState      Recv-Q Send-Q Local Address:Port               Peer Address:Port\nLISTEN     0      128          \u003cspan class=\"k\"\u003e*\u003c/span\u003e:22                       \u003cspan class=\"k\"\u003e*\u003c/span\u003e:\u003cspan class=\"k\"\u003e*\u003c/span\u003e\nLISTEN     0      100    127.0.0.1:25                       \u003cspan class=\"k\"\u003e*\u003c/span\u003e:\u003cspan class=\"k\"\u003e*\u003c/span\u003e\nLISTEN     0      4096   127.0.0.1:20256                    \u003cspan class=\"k\"\u003e*\u003c/span\u003e:\u003cspan class=\"k\"\u003e*\u003c/span\u003e\nLISTEN     0      4096   127.0.0.1:9890                     \u003cspan class=\"k\"\u003e*\u003c/span\u003e:\u003cspan class=\"k\"\u003e*\u003c/span\u003e\nLISTEN     0      4096   127.0.0.1:10248                    \u003cspan class=\"k\"\u003e*\u003c/span\u003e:\u003cspan class=\"k\"\u003e*\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003eMeanings of the Recv-Q/Send-Q columns: depending on the socket states, the meanings can be different,\u003c/p\u003e\n\n\u003cul\u003e\n  \u003cli\u003eFor LISTEN sockets: the \u003cstrong\u003e\u003cmark\u003ecurrent \u0026amp; max size of the accept queue\u003c/mark\u003e\u003c/strong\u003e;\u003c/li\u003e\n  \u003cli\u003eFor non-LISTEN sockets: bytes of backlog data to be received by the application, and bytes have been sent out but haven’t been ACK-ed.\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eCode that collects those metrics:\u003c/p\u003e\n\n\u003cdiv class=\"language-c highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"c1\"\u003e// https://github.com/torvalds/linux/blob/v5.10/net/ipv4/tcp_diag.c\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003estatic\u003c/span\u003e \u003cspan class=\"kt\"\u003evoid\u003c/span\u003e \u003cspan class=\"nf\"\u003etcp_diag_get_info\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003estruct\u003c/span\u003e \u003cspan class=\"n\"\u003esock\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003esk\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"k\"\u003estruct\u003c/span\u003e \u003cspan class=\"n\"\u003einet_diag_msg\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003er\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"kt\"\u003evoid\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003e_info\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e...\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003ch1 id=\"7-more-discussions\"\u003e7 More discussions\u003c/h1\u003e\n\n\u003ch2 id=\"71-tfo-tcp-fast-open\"\u003e7.1 TFO (TCP Fast Open)\u003c/h2\u003e\n\n\u003cblockquote\u003e\n  \u003cp\u003eIn computer networking, TCP Fast Open (TFO) is an extension to speed up the\nopening of successive Transmission Control Protocol (TCP) connections between\ntwo endpoints. It works by using a TFO cookie (a TCP option), which is a\ncryptographic cookie stored on the client and set upon the initial connection\nwith the server.[1] When the client later reconnects, it sends the initial\nSYN packet along with the TFO cookie data to authenticate itself. If\nsuccessful, the server may start sending data to the client even before the\nreception of the final ACK packet of the three-way handshake, thus skipping a\nround-trip delay and lowering the latency in the start of data transmission.\u003c/p\u003e\n\n  \u003cp\u003ehttps://en.wikipedia.org/wiki/TCP_Fast_Open\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003e$ \u003c/span\u003esysctl net.ipv4.tcp_fastopen\n1\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003eNote that this is \u003cstrong\u003e\u003cmark\u003enot a bool option, but int\u003c/mark\u003e\u003c/strong\u003e:\u003c/p\u003e\n\n\u003cul\u003e\n  \u003cli\u003e\u003ccode class=\"language-plaintext highlighter-rouge\"\u003e1\u003c/code\u003e：enable client support (default)\u003c/li\u003e\n  \u003cli\u003e\u003ccode class=\"language-plaintext highlighter-rouge\"\u003e2\u003c/code\u003e：enable server support\u003c/li\u003e\n  \u003cli\u003e\u003ccode class=\"language-plaintext highlighter-rouge\"\u003e3\u003c/code\u003e: enable client \u0026amp; server\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eWith TFO enabled,\u003c/p\u003e\n\n\u003cul\u003e\n  \u003cli\u003eClients use \u003ccode class=\"language-plaintext highlighter-rouge\"\u003esendto()\u003c/code\u003e instead of \u003ccode class=\"language-plaintext highlighter-rouge\"\u003econnect()\u003c/code\u003e;\u003c/li\u003e\n  \u003cli\u003eSYN packets carry data directly.\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch1 id=\"references\"\u003eReferences\u003c/h1\u003e\n\n\u003col\u003e\n  \u003cli\u003e\u003ca href=\"https://veithen.io/2014/01/01/how-tcp-backlog-works-in-linux.html\"\u003eHow TCP backlog works in Linux\u003c/a\u003e, 2015\u003c/li\u003e\n  \u003cli\u003e\u003ca href=\"/blog/customize-tcp-initial-rto-with-bpf/\"\u003eCustomize TCP initial RTO (retransmission timeout) with BPF\u003c/a\u003e, 2021\u003c/li\u003e\n  \u003cli\u003e\u003ca href=\"https://blog.cloudflare.com/syn-packet-handling-in-the-wild/\"\u003eSYN packet handling in the wild\u003c/a\u003e, Cloudflare, 2018\u003c/li\u003e\n  \u003cli\u003e\u003ca href=\"https://find-error.com/questions/63232891/confusion-about-syn-queue-and-accept-queue\"\u003eConfusion about syn queue and accept queue\u003c/a\u003e, 2020\u003c/li\u003e\n  \u003cli\u003e\u003ca href=\"TCP SYN Queue and Accept Queue Overflow Explained\"\u003eTCP SYN Queue and Accept Queue Overflow Explained\u003c/a\u003e, \u003ca href=\"https://developer.aliyun.com/article/804896\"\u003e中文版\u003c/a\u003e, alibabacloud, 2021\u003c/li\u003e\n\u003c/ol\u003e\n\n\n  \u003c!-- POST NAVIGATION --\u003e\n  \u003cdiv class=\"postNav clearfix\"\u003e\n     \n      \u003ca class=\"prev\" href=\"/blog/the-mysterious-container-somaxconn/\"\u003e\u003cspan\u003e« The Mysterious Container \u003ccode\u003enet.core.somaxconn\u003c/code\u003e (2022)\u003c/span\u003e\n      \n    \u003c/a\u003e\n      \n      \n      \u003ca class=\"next\" href=\"/blog/bpf-advanced-notes-5-zh/\"\u003e\u003cspan\u003eBPF 进阶笔记（五）：几种 TCP 相关的 BPF（sockops、struct_ops、header options） »\u003c/span\u003e\n       \n      \u003c/a\u003e\n     \n  \u003c/div\u003e\n\u003c/div\u003e",
  "Date": "2022-08-28T00:00:00Z",
  "Author": "Arthur Chiao"
}