{
  "Source": "arthurchiao.art",
  "Title": "Cilium Code Walk Through: Agent CIDR Init",
  "Link": "https://arthurchiao.art/blog/cilium-code-agent-cidr-init/",
  "Content": "\u003cdiv class=\"post\"\u003e\n  \n  \u003ch1 class=\"postTitle\"\u003eCilium Code Walk Through: Agent CIDR Init\u003c/h1\u003e\n  \u003cp class=\"meta\"\u003ePublished at 2019-05-13 | Last Update 2021-03-15\u003c/p\u003e\n  \n  \u003cp\u003eThis post walks you through the CIDR selection process during Cilium agent\ninitialization. Code based on Cilium \u003ccode class=\"language-plaintext highlighter-rouge\"\u003e1.8.4\u003c/code\u003e/\u003ccode class=\"language-plaintext highlighter-rouge\"\u003e1.5.0\u003c/code\u003e.\u003c/p\u003e\n\n\u003cp\u003eThis post is included in\n\u003ca href=\"/blog/cilium-code-series/\"\u003eCilium Code Walk Through Series\u003c/a\u003e.\u003c/p\u003e\n\n\u003chr/\u003e\n\n\u003cul id=\"markdown-toc\"\u003e\n  \u003cli\u003e\u003ca href=\"#1-daemon-start\" id=\"markdown-toc-1-daemon-start\"\u003e1 Daemon Start\u003c/a\u003e\u003c/li\u003e\n  \u003cli\u003e\u003ca href=\"#2-configure-pkgk8s\" id=\"markdown-toc-2-configure-pkgk8s\"\u003e2 Configure \u003ccode class=\"language-plaintext highlighter-rouge\"\u003epkg/k8s/\u003c/code\u003e\u003c/a\u003e\u003c/li\u003e\n  \u003cli\u003e\u003ca href=\"#3-init-pkgk8s\" id=\"markdown-toc-3-init-pkgk8s\"\u003e3 Init \u003ccode class=\"language-plaintext highlighter-rouge\"\u003epkg/k8s/\u003c/code\u003e\u003c/a\u003e    \u003cul\u003e\n      \u003cli\u003e\u003ca href=\"#31-waitfornodeinformation\" id=\"markdown-toc-31-waitfornodeinformation\"\u003e3.1 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003ewaitForNodeInformation\u003c/code\u003e\u003c/a\u003e\u003c/li\u003e\n      \u003cli\u003e\u003ca href=\"#32-parsenode\" id=\"markdown-toc-32-parsenode\"\u003e3.2 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eParseNode\u003c/code\u003e\u003c/a\u003e\u003c/li\u003e\n      \u003cli\u003e\u003ca href=\"#33-usenodecidrn\" id=\"markdown-toc-33-usenodecidrn\"\u003e3.3 useNodeCIDR(n)\u003c/a\u003e\u003c/li\u003e\n    \u003c/ul\u003e\n  \u003c/li\u003e\n  \u003cli\u003e\u003ca href=\"#4-k8sclientannotatenodecidr-\" id=\"markdown-toc-4-k8sclientannotatenodecidr-\"\u003e4 k8s.Client().AnnotateNode(cidr …)\u003c/a\u003e\u003c/li\u003e\n  \u003cli\u003e\u003ca href=\"#5-specify-node-cidr-via-k8s-node-annotations\" id=\"markdown-toc-5-specify-node-cidr-via-k8s-node-annotations\"\u003e5 Specify Node CIDR via K8S Node Annotations\u003c/a\u003e\u003c/li\u003e\n  \u003cli\u003e\u003ca href=\"#references\" id=\"markdown-toc-references\"\u003eReferences\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003chr/\u003e\n\n\u003cp\u003eCilium agent also acts as the local IPAM, responsible for IP allocations within\nthe node, so it needs a CIDR. There are several ways to specify the CIDR that\ncilium agent should use:\u003c/p\u003e\n\n\u003col\u003e\n  \u003cli\u003evia \u003cstrong\u003ek8s controller manager\u003c/strong\u003e [1]: \u003ccode class=\"language-plaintext highlighter-rouge\"\u003e--allocate-node-cidrs \u0026lt;CIDR\u0026gt;\u003c/code\u003e specify a\nlarge CIDR, and each cilium agent will request a small CIDR from it upon\nstart up\u003c/li\u003e\n  \u003cli\u003evia \u003cstrong\u003ek8s annotations\u003c/strong\u003e: add \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eio.cilium.network.ipv4-pod-cidr=\u0026lt;CIDR\u0026gt;\u003c/code\u003e to the\nspecific node\u003c/li\u003e\n  \u003cli\u003eother ways, e.g. Cilium CLI?\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003cp\u003eOverall steps of Cilium agent CIDR initialization:\u003c/p\u003e\n\n\u003col\u003e\n  \u003cli\u003eSpawn Cilium agent (daemon), starting initialization\u003c/li\u003e\n  \u003cli\u003eInit Cilium \u003ccode class=\"language-plaintext highlighter-rouge\"\u003epkt/k8s\u003c/code\u003e submodule\u003c/li\u003e\n  \u003cli\u003eGet CIDR info from k8s controller manager and node annotations\u003c/li\u003e\n  \u003cli\u003eSelect the CIDR this node should use according to specific priorities\u003c/li\u003e\n  \u003cli\u003eWrite CIDR info back to k8s annotations\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003cp\u003eCall flows：\u003c/p\u003e\n\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003erunDaemon                                                // daemon/daemon_main.go\n  |-k8s.Init                                             // pkg/k8s/init.go\n  |-NewDaemon                                            // daemon/daemon.go\n    |-GetNodeSpec\n    |  |-node :\u003cspan class=\"o\"\u003e=\u003c/span\u003e waitForNodeInformation\n    |  |         |-retrieveNodeInformation\n    |  |           |-GetNode                             // pkg/k8s/node.go\n    |  |           | |-c.CoreV1\u003cspan class=\"o\"\u003e()\u003c/span\u003e.Nodes\u003cspan class=\"o\"\u003e()\u003c/span\u003e.Get\u003cspan class=\"o\"\u003e(\u003c/span\u003enodeName\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n    |  |           |-ParseNode                           // pkg/k8s/node.go\n    |  |             |- cidr.ParseCIDR\n    |  |-if node \u003cspan class=\"o\"\u003e!=\u003c/span\u003e nil\n    |  |   useNodeCIDR                                   // pkg/k8s/init.go\n    |  |     |-node.SetIPv4AllocRange\u003cspan class=\"o\"\u003e(\u003c/span\u003en.IPv4AllocCIDR\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n    |  |         |-ipv4AllocRange \u003cspan class=\"o\"\u003e=\u003c/span\u003e cidr                 // pkg/node/address.go\n    |  |-else\n    |  |    \u003cspan class=\"k\"\u003eif \u003c/span\u003eoption.Config.K8sRequireIPv4PodCIDR\n    |  |        log.Fatal\u003cspan class=\"o\"\u003e()\u003c/span\u003e\n    |  |\n    |-bootstrapIPAM                                      // daemon/cmd/ipam.go\n    |  |-if option.Config.IPv4Range \u003cspan class=\"o\"\u003e!=\u003c/span\u003e AutoCIDR\n    |  |   allocCIDR :\u003cspan class=\"o\"\u003e=\u003c/span\u003e cidr.ParseCIDR\u003cspan class=\"o\"\u003e(\u003c/span\u003eoption.Config.IPv4Range\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n    |  |   \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"o\"\u003e!\u003c/span\u003eallocCIDR:\n    |  |      log.Fatal\u003cspan class=\"o\"\u003e()\u003c/span\u003e\n    |  |\n    |  |   node.SetIPv4AllocRange\u003cspan class=\"o\"\u003e(\u003c/span\u003eallocCIDR\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n    |  |         |-ipv4AllocRange \u003cspan class=\"o\"\u003e=\u003c/span\u003e cidr                 // pkg/node/address.go\n    |  |-AutoComplete                                    // pkg/node/address.go\n    |  |  |-InitDefaultPrefix\u003cspan class=\"o\"\u003e(\u003c/span\u003eoption.Config.DirectRoutingDevice\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n    |  |     \u003cspan class=\"k\"\u003eif \u003c/span\u003eipv4AllocRange \u003cspan class=\"o\"\u003e==\u003c/span\u003e nil\n    |  |       ipv4AllocRange \u003cspan class=\"o\"\u003e=\u003c/span\u003e cidr.NewCIDR\u003cspan class=\"o\"\u003e(\u003c/span\u003eip4net\u003cspan class=\"o\"\u003e)\u003c/span\u003e // Using autogenerated IPv4 allocation range\n    |  |-d.ipam \u003cspan class=\"o\"\u003e=\u003c/span\u003e ipam.NewIPAM\n    |\n    |-k8s.Client\u003cspan class=\"o\"\u003e()\u003c/span\u003e.AnnotateNode\u003cspan class=\"o\"\u003e(\u003c/span\u003ecidr ...\u003cspan class=\"o\"\u003e)\u003c/span\u003e       // daemon/daemon.go\n    | |-updateNodeAnnotation                    // pkg/k8s/annotate.go\n    |   |-c.CoreV1\u003cspan class=\"o\"\u003e()\u003c/span\u003e.Nodes\u003cspan class=\"o\"\u003e()\u003c/span\u003e.Update\u003cspan class=\"o\"\u003e(\u003c/span\u003enode\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003ch2 id=\"1-daemon-start\"\u003e1 Daemon Start\u003c/h2\u003e\n\n\u003cp\u003eStart from \u003ccode class=\"language-plaintext highlighter-rouge\"\u003edaemon/daemon_main.go\u003c/code\u003e:\u003c/p\u003e\n\n\u003cp\u003eWhen Cilium CLI \u003ccode class=\"language-plaintext highlighter-rouge\"\u003ecilium-agent \u0026lt;options\u0026gt;\u003c/code\u003e is executed, function \u003ccode class=\"language-plaintext highlighter-rouge\"\u003erunDaemon()\u003c/code\u003e\nwill be called, and it will further call \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eNewDaemon()\u003c/code\u003e (\u003ccode class=\"language-plaintext highlighter-rouge\"\u003edaemon/daemon.go\u003c/code\u003e)\nto spawn the daemon process:\u003c/p\u003e\n\n\u003cdiv class=\"language-go highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003eimport\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\n    \u003cspan class=\"s\"\u003e\u0026#34;github.com/cilium/cilium/pkg/k8s\u0026#34;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\n\u003cspan class=\"c\"\u003e// NewDaemon creates and returns a new Daemon with the parameters set in c.\u003c/span\u003e\n\u003cspan class=\"k\"\u003efunc\u003c/span\u003e \u003cspan class=\"n\"\u003eNewDaemon\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003edp\u003c/span\u003e \u003cspan class=\"n\"\u003edatapath\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eDatapath\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003eDaemon\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003eendpointRestoreState\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"kt\"\u003eerror\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"o\"\u003e...\u003c/span\u003e\n    \u003cspan class=\"n\"\u003ek8s\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eConfigure\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eoption\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eConfig\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eK8sAPIServer\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eoption\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eConfig\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eK8sKubeConfigPath\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n    \u003cspan class=\"o\"\u003e...\u003c/span\u003e\n\n    \u003cspan class=\"n\"\u003ek8s\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eInit\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\n    \u003cspan class=\"c\"\u003e// Annotation of the k8s node must happen after discovery of the\u003c/span\u003e\n    \u003cspan class=\"c\"\u003e// PodCIDR range and allocation of the health IPs.\u003c/span\u003e\n    \u003cspan class=\"n\"\u003ek8s\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eClient\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eAnnotateNode\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003enode\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eGetName\u003c/span\u003e\u003cspan class=\"p\"\u003e(),\u003c/span\u003e \u003cspan class=\"n\"\u003enode\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eGetIPv4AllocRange\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"o\"\u003e...\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003eAs the above code shown, \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eNewDaemon\u003c/code\u003e will init the \u003ccode class=\"language-plaintext highlighter-rouge\"\u003ek8s\u003c/code\u003e\n(\u003ccode class=\"language-plaintext highlighter-rouge\"\u003epkg/k8s/\u003c/code\u003e) module and call some module functions:\u003c/p\u003e\n\n\u003col\u003e\n  \u003cli\u003e\u003ccode class=\"language-plaintext highlighter-rouge\"\u003ek8s.Configure\u003c/code\u003e will configure the K8S cluster info, e.g. \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eapiserver\u003c/code\u003e address\u003c/li\u003e\n  \u003cli\u003e\u003ccode class=\"language-plaintext highlighter-rouge\"\u003ek8s.Init\u003c/code\u003e will connect the K8S cluster and get the node info, which including\nthe CIDR info; then it will \u003cstrong\u003edecide the CIDR this node will use\u003c/strong\u003e\u003c/li\u003e\n  \u003cli\u003e\u003ccode class=\"language-plaintext highlighter-rouge\"\u003ek8s.Client\u003c/code\u003e will \u003cstrong\u003eupdate node info back to K8S annotations\u003c/strong\u003e, among which\nincludes the CIDR info\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003ch2 id=\"2-configure-pkgk8s\"\u003e2 Configure \u003ccode class=\"language-plaintext highlighter-rouge\"\u003epkg/k8s/\u003c/code\u003e\u003c/h2\u003e\n\n\u003cp\u003e\u003ccode class=\"language-plaintext highlighter-rouge\"\u003epkg/k8s/config.go\u003c/code\u003e\u003c/p\u003e\n\n\u003cdiv class=\"language-go highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003efunc\u003c/span\u003e \u003cspan class=\"n\"\u003eConfigure\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eapiServer\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003ekubeconfigPath\u003c/span\u003e \u003cspan class=\"kt\"\u003estring\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"n\"\u003econfig\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eAPIServer\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eapiServer\u003c/span\u003e\n        \u003cspan class=\"n\"\u003econfig\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eKubeconfigPath\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003ekubeconfigPath\u003c/span\u003e\n\n        \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"n\"\u003eIsEnabled\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u0026amp;\u003c/span\u003e\n                \u003cspan class=\"n\"\u003econfig\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eAPIServer\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;\u0026#34;\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u0026amp;\u003c/span\u003e\n                \u003cspan class=\"o\"\u003e!\u003c/span\u003e\u003cspan class=\"n\"\u003estrings\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eHasPrefix\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eapiServer\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;http\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n                \u003cspan class=\"n\"\u003econfig\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eAPIServer\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;http://\u0026#34;\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"n\"\u003eapiServer\u003c/span\u003e\n        \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003ch2 id=\"3-init-pkgk8s\"\u003e3 Init \u003ccode class=\"language-plaintext highlighter-rouge\"\u003epkg/k8s/\u003c/code\u003e\u003c/h2\u003e\n\n\u003cdiv class=\"language-go highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"c\"\u003e// Init initializes the Kubernetes package. It is required to call Configure()\u003c/span\u003e\n\u003cspan class=\"c\"\u003e// beforehand.\u003c/span\u003e\n\u003cspan class=\"k\"\u003efunc\u003c/span\u003e \u003cspan class=\"n\"\u003eInit\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"kt\"\u003eerror\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"n\"\u003enodeName\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"n\"\u003eos\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eGetenv\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eEnvNodeNameSpec\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e \u003cspan class=\"n\"\u003enodeName\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;\u0026#34;\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"n\"\u003en\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"n\"\u003ewaitForNodeInformation\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003enodeName\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e \u003cspan class=\"n\"\u003en\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"no\"\u003enil\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n            \u003cspan class=\"n\"\u003enodeIP4\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"n\"\u003en\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eGetNodeIP\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"no\"\u003efalse\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n            \u003cspan class=\"n\"\u003eInfo\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;Received own node information from API server\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\n            \u003cspan class=\"n\"\u003euseNodeCIDR\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003en\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\n        \u003cspan class=\"p\"\u003e}\u003c/span\u003e \u003cspan class=\"k\"\u003eelse\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n            \u003cspan class=\"c\"\u003e// if node resource could not be received, fail if\u003c/span\u003e\n            \u003cspan class=\"c\"\u003e// PodCIDR requirement has been requested\u003c/span\u003e\n            \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"n\"\u003eoption\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eConfig\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eK8sRequireIPv4PodCIDR\u003c/span\u003e \u003cspan class=\"o\"\u003e||\u003c/span\u003e \u003cspan class=\"n\"\u003eoption\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eConfig\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eK8sRequireIPv6PodCIDR\u003c/span\u003e\n                \u003cspan class=\"n\"\u003elog\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eFatal\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;Unable to derive PodCIDR from Kubernetes node resource, giving up\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n        \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n        \u003cspan class=\"c\"\u003e// Annotate addresses will occur later since the user might\u003c/span\u003e\n        \u003cspan class=\"c\"\u003e// want to specify them manually\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e}\u003c/span\u003e \u003cspan class=\"k\"\u003eelse\u003c/span\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"n\"\u003eoption\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eConfig\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eK8sRequireIPv4PodCIDR\u003c/span\u003e \u003cspan class=\"o\"\u003e||\u003c/span\u003e \u003cspan class=\"n\"\u003eoption\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eConfig\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eK8sRequireIPv6PodCIDR\u003c/span\u003e\n        \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003efmt\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eErrorf\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;node name must be specified via environment variable\n                \u0026#39;%s\u0026#39; to retrieve Kubernetes PodCIDR range\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eEnvNodeNameSpec\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"no\"\u003enil\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003eNote the following comment lines:\u003c/p\u003e\n\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e// Annotate addresses will occur later since the user might\n// want to specify them manually\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003ch3 id=\"31-waitfornodeinformation\"\u003e3.1 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003ewaitForNodeInformation\u003c/code\u003e\u003c/h3\u003e\n\n\u003cp\u003eThis function will try to get node info via K8S API, will auto-try until it\nsucceeds (\u003ccode class=\"language-plaintext highlighter-rouge\"\u003epkg/k8s/init.go\u003c/code\u003e). Call flow:\u003c/p\u003e\n\n\u003cp\u003e\u003ccode class=\"language-plaintext highlighter-rouge\"\u003ewaitForNodeInformation -\u0026gt; retrieveNodeInformation -\u0026gt; GetNode()\u003c/code\u003e\u003c/p\u003e\n\n\u003cp\u003e\u003ccode class=\"language-plaintext highlighter-rouge\"\u003eGetNode\u003c/code\u003e will call K8S API to retrieve node info, including the CIDR (\u003ccode class=\"language-plaintext highlighter-rouge\"\u003epkg/k8s/node.go\u003c/code\u003e):\u003c/p\u003e\n\n\u003cp\u003e\u003ccode class=\"language-plaintext highlighter-rouge\"\u003eGetNode -\u0026gt; c.CoreV1().Nodes().Get(nodeName, metav1.GetOptions{})\u003c/code\u003e\u003c/p\u003e\n\n\u003cp\u003eThe function returns a \u003ccode class=\"language-plaintext highlighter-rouge\"\u003e*v1.Node\u003c/code\u003e instance.\u003c/p\u003e\n\n\u003ch3 id=\"32-parsenode\"\u003e3.2 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eParseNode\u003c/code\u003e\u003c/h3\u003e\n\n\u003cp\u003eThis function will parse the returned node info.\u003c/p\u003e\n\n\u003cdiv class=\"language-go highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"c\"\u003e// ParseNode parses a kubernetes node to a cilium node\u003c/span\u003e\n\u003cspan class=\"k\"\u003efunc\u003c/span\u003e \u003cspan class=\"n\"\u003eParseNode\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ek8sNode\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003etypes\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eNode\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003esource\u003c/span\u003e \u003cspan class=\"n\"\u003enode\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eSource\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003enode\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eNode\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"n\"\u003enewNode\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e\u003cspan class=\"n\"\u003enode\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eNode\u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"n\"\u003eName\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e        \u003cspan class=\"n\"\u003ek8sNode\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eName\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n    \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nb\"\u003elen\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ek8sNode\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eSpecPodCIDR\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"m\"\u003e0\u003c/span\u003e\n        \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"n\"\u003eallocCIDR\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"n\"\u003ecidr\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eParseCIDR\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ek8sNode\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eSpecPodCIDR\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e \u003cspan class=\"n\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"no\"\u003enil\u003c/span\u003e\n            \u003cspan class=\"n\"\u003escopedLog\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eWithError\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eerr\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eWarn\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;Invalid PodCIDR value for node\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n        \u003cspan class=\"k\"\u003eelse\u003c/span\u003e\n            \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"n\"\u003eallocCIDR\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eIP\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eTo4\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"no\"\u003enil\u003c/span\u003e\n                \u003cspan class=\"n\"\u003enewNode\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eIPv4AllocCIDR\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eallocCIDR\u003c/span\u003e\n            \u003cspan class=\"k\"\u003eelse\u003c/span\u003e\n                \u003cspan class=\"n\"\u003enewNode\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eIPv6AllocCIDR\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eallocCIDR\u003c/span\u003e\n\n    \u003cspan class=\"c\"\u003e// Spec.PodCIDR takes precedence since it\u0026#39;s\u003c/span\u003e\n    \u003cspan class=\"c\"\u003e// the CIDR assigned by k8s controller manager\u003c/span\u003e\n    \u003cspan class=\"c\"\u003e// In case it\u0026#39;s invalid or empty then we fall back to our annotations.\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"n\"\u003enewNode\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eIPv4AllocCIDR\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"no\"\u003enil\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"n\"\u003eipv4CIDR\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eok\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"n\"\u003ek8sNode\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eAnnotations\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003eannotation\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eV4CIDRName\u003c/span\u003e\u003cspan class=\"p\"\u003e];\u003c/span\u003e \u003cspan class=\"o\"\u003e!\u003c/span\u003e\u003cspan class=\"n\"\u003eok\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n            \u003cspan class=\"n\"\u003escopedLog\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eDebug\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;Empty IPv4 CIDR annotation in node\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n        \u003cspan class=\"k\"\u003eelse\u003c/span\u003e\n            \u003cspan class=\"n\"\u003eallocCIDR\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"n\"\u003ecidr\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eParseCIDR\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eipv4CIDR\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n            \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"n\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"no\"\u003enil\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n                \u003cspan class=\"n\"\u003escopedLog\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eWithError\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eerr\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eError\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;BUG, invalid IPv4 annotation CIDR in node\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n            \u003cspan class=\"k\"\u003eelse\u003c/span\u003e\n                \u003cspan class=\"n\"\u003enewNode\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eIPv4AllocCIDR\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eallocCIDR\u003c/span\u003e\n\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003enewNode\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003eNote the \u003cstrong\u003eCIDR priority\u003c/strong\u003e here:\u003c/p\u003e\n\n\u003col\u003e\n  \u003cli\u003eIf SpecPodCIDR is found, use it; this info is provided by \u003cstrong\u003ek8s controller\nmanager\u003c/strong\u003e\u003c/li\u003e\n  \u003cli\u003eIf SpecPodCIDR not found, try to retrieve CIDR from \u003cstrong\u003enode annotations\u003c/strong\u003e\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003cp\u003eThat is to say: \u003cstrong\u003eCIDR configured via controller manager has higher priority\nthan that via node annotations\u003c/strong\u003e.\u003c/p\u003e\n\n\u003ch3 id=\"33-usenodecidrn\"\u003e3.3 useNodeCIDR(n)\u003c/h3\u003e\n\n\u003cdiv class=\"language-go highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"c\"\u003e// useNodeCIDR sets the ipv4-range and ipv6-range values values from the\u003c/span\u003e\n\u003cspan class=\"c\"\u003e// addresses defined in the given node.\u003c/span\u003e\n\u003cspan class=\"k\"\u003efunc\u003c/span\u003e \u003cspan class=\"n\"\u003euseNodeCIDR\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003en\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003enode\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eNode\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"n\"\u003enode\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eSetIPv4AllocRange\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003en\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eIPv4AllocCIDR\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e\u003ccode class=\"language-plaintext highlighter-rouge\"\u003epkg/node/node_address.go\u003c/code\u003e\u003c/p\u003e\n\n\u003cdiv class=\"language-go highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"c\"\u003e// SetIPv4AllocRange sets the IPv4 address pool to use when allocating\u003c/span\u003e\n\u003cspan class=\"c\"\u003e// addresses for local endpoints\u003c/span\u003e\n\u003cspan class=\"k\"\u003efunc\u003c/span\u003e \u003cspan class=\"n\"\u003eSetIPv4AllocRange\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003enet\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003ecidr\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eCIDR\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eipv4AllocRange\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003enet\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003ch2 id=\"4-k8sclientannotatenodecidr-\"\u003e4 k8s.Client().AnnotateNode(cidr …)\u003c/h2\u003e\n\n\u003cp\u003e\u003ccode class=\"language-plaintext highlighter-rouge\"\u003edaemon/daemon.go\u003c/code\u003e\u003c/p\u003e\n\n\u003cp\u003eWrite node info back to node annotations, among which including the CIDR info.\u003c/p\u003e\n\n\u003ch2 id=\"5-specify-node-cidr-via-k8s-node-annotations\"\u003e5 Specify Node CIDR via K8S Node Annotations\u003c/h2\u003e\n\n\u003cp\u003eSteps:\u003c/p\u003e\n\n\u003col\u003e\n  \u003cli\u003eOn K8S master: remove \u003ccode class=\"language-plaintext highlighter-rouge\"\u003e--allocate-node-cidrs\u003c/code\u003e configuration from controller manager\u003c/li\u003e\n  \u003cli\u003eOn K8S mater: annotate node: \u003ccode class=\"language-plaintext highlighter-rouge\"\u003ekubectl annotate node \u0026lt;NODE_NAME\u0026gt; --overwrite io.cilium.network.ipv4-pod-cidr=\u0026lt;CIDR\u0026gt;\u003c/code\u003e\u003c/li\u003e\n  \u003cli\u003eOn K8S node: restart Cilium agent: \u003ccode class=\"language-plaintext highlighter-rouge\"\u003edocker restart \u0026lt;Container ID\u0026gt;\u003c/code\u003e\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003cp\u003eCheck it works as expected:\u003c/p\u003e\n\n\u003col\u003e\n  \u003cli\u003eOn k8s master: \u003ccode class=\"language-plaintext highlighter-rouge\"\u003ekubectl describe node \u0026lt;NODE_NAME\u0026gt; | grep cilium\u003c/code\u003e\n\u003ccode class=\"language-plaintext highlighter-rouge\"\u003eio.cilium.network.ipv4-pod-cidr\u003c/code\u003e should be the specified CIDR\u003c/li\u003e\n  \u003cli\u003eOn k8s node: \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eifconfig cilium_host\u003c/code\u003e: the IP address (CIDR Gateway) should be\nallocated from the specified CIDR\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003ch2 id=\"references\"\u003eReferences\u003c/h2\u003e\n\n\u003col\u003e\n  \u003cli\u003e\u003ca href=\"http://docs.cilium.io/en/v1.5/kubernetes/requirements/?highlight=controller%20manager#enable-automatic-node-cidr-allocation-recommended\"\u003eCilium Doc: Enable automatic node CIDR allocation\u003c/a\u003e\u003c/li\u003e\n\u003c/ol\u003e\n\n\n  \u003c!-- POST NAVIGATION --\u003e\n  \u003cdiv class=\"postNav clearfix\"\u003e\n     \n      \u003ca class=\"prev\" href=\"/blog/awesome-bpf/\"\u003e\u003cspan\u003e« Awesome BPF Resources\u003c/span\u003e\n      \n    \u003c/a\u003e\n      \n      \n      \u003ca class=\"next\" href=\"/blog/cilium-code-restore-endpoints/\"\u003e\u003cspan\u003eCilium Code Walk Through: Restore Endpoints and Identities »\u003c/span\u003e\n       \n      \u003c/a\u003e\n     \n  \u003c/div\u003e\n\u003c/div\u003e",
  "Date": "2019-05-13T00:00:00Z",
  "Author": "Arthur Chiao"
}