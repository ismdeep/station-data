{
  "Source": "arthurchiao.art",
  "Title": "[译] BPF 对象（BPF objects）的生命周期（Facebook，2018）",
  "Link": "https://arthurchiao.art/blog/lifetime-of-bpf-objects-zh/",
  "Content": "\u003cdiv class=\"post\"\u003e\n  \n  \u003ch1 class=\"postTitle\"\u003e[译] BPF 对象（BPF objects）的生命周期（Facebook，2018）\u003c/h1\u003e\n  \u003cp class=\"meta\"\u003ePublished at 2021-05-07 | Last Update 2022-04-18\u003c/p\u003e\n  \n  \u003ch3 id=\"译者序\"\u003e译者序\u003c/h3\u003e\n\n\u003cp\u003e本文翻译自 2018 年 Facebook 的一篇博客：\n\u003ca href=\"https://facebookmicrosites.github.io/bpf/blog/2018/08/31/object-lifetime.html\"\u003eLifetime of BPF objects\u003c/a\u003e，\n作者 Alexei Starovoitov。\u003c/p\u003e\n\n\u003cp\u003e译文调整了一些内容顺序，并附录了一些内核（\u003ccode class=\"language-plaintext highlighter-rouge\"\u003e4.19\u003c/code\u003e）代码片段，方便在实现层面理解文中提到的一些东西。\u003c/p\u003e\n\n\u003cp\u003e\u003cstrong\u003e由于译者水平有限，本文不免存在遗漏或错误之处。如有疑问，请查阅原文。\u003c/strong\u003e\u003c/p\u003e\n\n\u003cp\u003e以下是译文。\u003c/p\u003e\n\n\u003chr/\u003e\n\n\u003cul id=\"markdown-toc\"\u003e\n  \u003cli\u003e\u003ca href=\"#译者序\" id=\"markdown-toc-译者序\"\u003e译者序\u003c/a\u003e\u003c/li\u003e\n  \u003cli\u003e\u003ca href=\"#1-引言\" id=\"markdown-toc-1-引言\"\u003e1 引言\u003c/a\u003e    \u003cul\u003e\n      \u003cli\u003e\u003ca href=\"#11-文件描述符fd和引用计数refcnt\" id=\"markdown-toc-11-文件描述符fd和引用计数refcnt\"\u003e1.1 文件描述符（FD）和引用计数（refcnt）\u003c/a\u003e\u003c/li\u003e\n      \u003cli\u003e\u003ca href=\"#12-举例创建-bpf-maprefcnt1\" id=\"markdown-toc-12-举例创建-bpf-maprefcnt1\"\u003e1.2 举例：创建 BPF map：\u003ccode class=\"language-plaintext highlighter-rouge\"\u003erefcnt=1\u003c/code\u003e\u003c/a\u003e\u003c/li\u003e\n      \u003cli\u003e\u003ca href=\"#13-举例加载-bpf-progprogrefcnt1-maprefcnt\" id=\"markdown-toc-13-举例加载-bpf-progprogrefcnt1-maprefcnt\"\u003e1.3 举例：加载 BPF prog：\u003ccode class=\"language-plaintext highlighter-rouge\"\u003eprog.refcnt=1, map.refcnt++\u003c/code\u003e\u003c/a\u003e\u003c/li\u003e\n      \u003cli\u003e\u003ca href=\"#14-bpf-对象的生命周期\" id=\"markdown-toc-14-bpf-对象的生命周期\"\u003e1.4 BPF 对象的生命周期\u003c/a\u003e\u003c/li\u003e\n    \u003c/ul\u003e\n  \u003c/li\u003e\n  \u003cli\u003e\u003ca href=\"#2-生命周期相关操作attachdetachreplace-bpf-程序\" id=\"markdown-toc-2-生命周期相关操作attachdetachreplace-bpf-程序\"\u003e2 生命周期相关操作：attach/detach/replace BPF 程序\u003c/a\u003e    \u003cul\u003e\n      \u003cli\u003e\u003ca href=\"#21-attachrefcnt\" id=\"markdown-toc-21-attachrefcnt\"\u003e2.1 Attach：\u003ccode class=\"language-plaintext highlighter-rouge\"\u003erefcnt++\u003c/code\u003e\u003c/a\u003e        \u003cul\u003e\n          \u003cli\u003e\u003ca href=\"#211-global-类型tcxdplwtcgroup\" id=\"markdown-toc-211-global-类型tcxdplwtcgroup\"\u003e2.1.1 Global 类型（tc/xdp/lwt/cgroup/…）\u003c/a\u003e\u003c/li\u003e\n          \u003cli\u003e\u003ca href=\"#212-local-类型kprobeuprobetracepoint\" id=\"markdown-toc-212-local-类型kprobeuprobetracepoint\"\u003e2.1.2 Local 类型（kprobe/uprobe/tracepoint/…）\u003c/a\u003e\u003c/li\u003e\n          \u003cli\u003e\u003ca href=\"#213-优缺点比较\" id=\"markdown-toc-213-优缺点比较\"\u003e2.1.3 优缺点比较\u003c/a\u003e\u003c/li\u003e\n        \u003c/ul\u003e\n      \u003c/li\u003e\n      \u003cli\u003e\u003ca href=\"#21-detachrefcnt--\" id=\"markdown-toc-21-detachrefcnt--\"\u003e2.1 Detach：\u003ccode class=\"language-plaintext highlighter-rouge\"\u003erefcnt--\u003c/code\u003e\u003c/a\u003e\u003c/li\u003e\n      \u003cli\u003e\u003ca href=\"#23-replacerefcnt-不变\" id=\"markdown-toc-23-replacerefcnt-不变\"\u003e2.3 Replace：\u003ccode class=\"language-plaintext highlighter-rouge\"\u003erefcnt\u003c/code\u003e 不变\u003c/a\u003e\u003c/li\u003e\n    \u003c/ul\u003e\n  \u003c/li\u003e\n  \u003cli\u003e\u003ca href=\"#3-生命周期相关操作bpf-文件系统-pinunpin\" id=\"markdown-toc-3-生命周期相关操作bpf-文件系统-pinunpin\"\u003e3 生命周期相关操作：BPF 文件系统 pin/unpin\u003c/a\u003e    \u003cul\u003e\n      \u003cli\u003e\u003ca href=\"#31-pinrefcnt\" id=\"markdown-toc-31-pinrefcnt\"\u003e3.1 Pin：\u003ccode class=\"language-plaintext highlighter-rouge\"\u003erefcnt++\u003c/code\u003e\u003c/a\u003e\u003c/li\u003e\n      \u003cli\u003e\u003ca href=\"#32-unpinrefcnt--\" id=\"markdown-toc-32-unpinrefcnt--\"\u003e3.2 Unpin：\u003ccode class=\"language-plaintext highlighter-rouge\"\u003erefcnt--\u003c/code\u003e\u003c/a\u003e\u003c/li\u003e\n    \u003c/ul\u003e\n  \u003c/li\u003e\n  \u003cli\u003e\u003ca href=\"#4-小结对象操作与-refcnt-变化\" id=\"markdown-toc-4-小结对象操作与-refcnt-变化\"\u003e4 小结：对象操作与 refcnt 变化\u003c/a\u003e\u003c/li\u003e\n  \u003cli\u003e\u003ca href=\"#译文附录一些相关的-bpf-内核实现\" id=\"markdown-toc-译文附录一些相关的-bpf-内核实现\"\u003e译文附录：一些相关的 BPF 内核实现\u003c/a\u003e    \u003cul\u003e\n      \u003cli\u003e\u003ca href=\"#附录一创建-bpf-map\" id=\"markdown-toc-附录一创建-bpf-map\"\u003e附录一：创建 BPF map\u003c/a\u003e        \u003cul\u003e\n          \u003cli\u003e\u003ca href=\"#bpf_create_map---bpf_create_map_xattr---sys_bpf---syscall_define3bpf-系统调用\" id=\"markdown-toc-bpf_create_map---bpf_create_map_xattr---sys_bpf---syscall_define3bpf-系统调用\"\u003e\u003ccode class=\"language-plaintext highlighter-rouge\"\u003ebpf_create_map() -\u0026gt; bpf_create_map_xattr() -\u0026gt; sys_bpf() -\u0026gt; SYSCALL_DEFINE3(bpf, ...)\u003c/code\u003e：系统调用\u003c/a\u003e\u003c/li\u003e\n          \u003cli\u003e\u003ca href=\"#case-bpf_map_create---map_create创建-map\" id=\"markdown-toc-case-bpf_map_create---map_create创建-map\"\u003e\u003ccode class=\"language-plaintext highlighter-rouge\"\u003ecase BPF_MAP_CREATE -\u0026gt; map_create()\u003c/code\u003e：创建 map\u003c/a\u003e\u003c/li\u003e\n        \u003c/ul\u003e\n      \u003c/li\u003e\n      \u003cli\u003e\u003ca href=\"#附录二加载-bpf-程序\" id=\"markdown-toc-附录二加载-bpf-程序\"\u003e附录二：加载 BPF 程序\u003c/a\u003e        \u003cul\u003e\n          \u003cli\u003e\u003ca href=\"#bpfbpf_prog_load---sys_bpf---syscall_define3bpf-系统调用\" id=\"markdown-toc-bpfbpf_prog_load---sys_bpf---syscall_define3bpf-系统调用\"\u003e\u003ccode class=\"language-plaintext highlighter-rouge\"\u003ebpf(BPF_PROG_LOAD) -\u0026gt; sys_bpf() -\u0026gt; SYSCALL_DEFINE3(bpf, ...)\u003c/code\u003e：系统调用\u003c/a\u003e\u003c/li\u003e\n          \u003cli\u003e\u003ca href=\"#case-bpf_prog_load---bpf_prog_load加载逻辑\" id=\"markdown-toc-case-bpf_prog_load---bpf_prog_load加载逻辑\"\u003e\u003ccode class=\"language-plaintext highlighter-rouge\"\u003ecase BPF_PROG_LOAD -\u0026gt; bpf_prog_load()\u003c/code\u003e：加载逻辑\u003c/a\u003e\u003c/li\u003e\n          \u003cli\u003e\u003ca href=\"#bpf_check执行内核校验\" id=\"markdown-toc-bpf_check执行内核校验\"\u003e\u003ccode class=\"language-plaintext highlighter-rouge\"\u003ebpf_check()\u003c/code\u003e：执行内核校验\u003c/a\u003e\u003c/li\u003e\n          \u003cli\u003e\u003ca href=\"#replace_map_fd_with_map_ptr---bpf_map_inc更新-map-refcnt\" id=\"markdown-toc-replace_map_fd_with_map_ptr---bpf_map_inc更新-map-refcnt\"\u003e\u003ccode class=\"language-plaintext highlighter-rouge\"\u003ereplace_map_fd_with_map_ptr() -\u0026gt; bpf_map_inc()\u003c/code\u003e：更新 map refcnt\u003c/a\u003e\u003c/li\u003e\n        \u003c/ul\u003e\n      \u003c/li\u003e\n    \u003c/ul\u003e\n  \u003c/li\u003e\n\u003c/ul\u003e\n\n\u003chr/\u003e\n\n\u003cp\u003eBPF 校验器（verifier）保证了内核能安全地执行 BPF 程序，但要想更安全地使用 BPF，\n还需要理解 \u003cstrong\u003e\u003cmark\u003eBPF 对象（objects）的生命周期\u003c/mark\u003e\u003c/strong\u003e。本文就这一主题展开深入讨论。\u003c/p\u003e\n\n\u003ch1 id=\"1-引言\"\u003e1 引言\u003c/h1\u003e\n\n\u003ch2 id=\"11-文件描述符fd和引用计数refcnt\"\u003e1.1 文件描述符（FD）和引用计数（refcnt）\u003c/h2\u003e\n\n\u003cp\u003e\u003cstrong\u003eBPF 对象（objects）包括\u003c/strong\u003e：\u003c/p\u003e\n\n\u003cul\u003e\n  \u003cli\u003eprogs（BPF 程序）\u003c/li\u003e\n  \u003cli\u003emaps（kv 存储）\u003c/li\u003e\n  \u003cli\u003edebug info（调试信息）\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003e\u003cstrong\u003e\u003cmark\u003e每个对象都有自己的 refcnt\u003c/mark\u003e\u003c/strong\u003e，用户空间程序可以通过\u003cstrong\u003e文件描述符\u003c/strong\u003e（FD）访问这些对象。\u003c/p\u003e\n\n\u003ch2 id=\"12-举例创建-bpf-maprefcnt1\"\u003e1.2 举例：创建 BPF map：\u003ccode class=\"language-plaintext highlighter-rouge\"\u003erefcnt=1\u003c/code\u003e\u003c/h2\u003e\n\n\u003cp\u003e调用 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003ebpf_create_map()\u003c/code\u003e 创建一个 map 时，内核会\u003c/p\u003e\n\n\u003col\u003e\n  \u003cli\u003e分配一个 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003estruct bpf_map\u003c/code\u003e 对象，\u003c/li\u003e\n  \u003cli\u003e设置该对象的 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003erefcnt=1\u003c/code\u003e（\u003cstrong\u003e内核实现\u003c/strong\u003e见 \u003ca href=\"#appendix_1\"\u003e附录\u003c/a\u003e），\u003c/li\u003e\n  \u003cli\u003e返回一个 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003efd\u003c/code\u003e 给用户空间进程。\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003cp\u003e\u003cstrong\u003e如果进程退出或者 crash 了\u003c/strong\u003e，这个 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003efd\u003c/code\u003e 将被关闭，相应 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003erefcnt--\u003c/code\u003e。\n如果 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003erefcnt--\u003c/code\u003e 之后变成 0，那过了 \u003cstrong\u003e\u003cmark\u003eRCU grace period\u003c/mark\u003e\u003c/strong\u003e\n之后，就会触发释放内存（memory free）操作。\u003c/p\u003e\n\n\u003ch2 id=\"13-举例加载-bpf-progprogrefcnt1-maprefcnt\"\u003e1.3 举例：加载 BPF prog：\u003ccode class=\"language-plaintext highlighter-rouge\"\u003eprog.refcnt=1, map.refcnt++\u003c/code\u003e\u003c/h2\u003e\n\n\u003cp\u003e用到了 BPF map 的 BPF 程序，加载（load）过程分为两个阶段：\u003c/p\u003e\n\n\u003col\u003e\n  \u003cli\u003e\n    \u003cp\u003e\u003cstrong\u003e\u003cmark\u003e创建 map\u003c/mark\u003e\u003c/strong\u003e。\u003c/p\u003e\n\n    \u003cp\u003e这些 \u003cstrong\u003emap 的 FD\u003c/strong\u003e 稍后将放到 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eBPF_LD_IMM64\u003c/code\u003e 指令的 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eimm\u003c/code\u003e 字段中，\u003cstrong\u003e作为 BPF 程序的一部分\u003c/strong\u003e。\u003c/p\u003e\n\n    \u003cp\u003e（附录中会看到校验器在对 BPF 程序进行校验时，如何从 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eimm\u003c/code\u003e 中加载 FD。）\u003c/p\u003e\n  \u003c/li\u003e\n  \u003cli\u003e\n    \u003cp\u003e内核\u003cstrong\u003e\u003cmark\u003e对 BPF 程序进行校验\u003c/mark\u003e\u003c/strong\u003e，校验器会\u003c/p\u003e\n\n    \u003cul\u003e\n      \u003cli\u003e将该程序用到的\u003cstrong\u003e\u003cmark\u003e每个 map 的 refcnt++\u003c/mark\u003e\u003c/strong\u003e（\u003cstrong\u003e内核实现\u003c/strong\u003e见 \u003ca href=\"#appendix_2\"\u003e附录\u003c/a\u003e），\u003c/li\u003e\n      \u003cli\u003e设置\u003cstrong\u003e\u003cmark\u003e该程序本身的 refcnt=1\u003c/mark\u003e\u003c/strong\u003e。\u003c/li\u003e\n    \u003c/ul\u003e\n  \u003c/li\u003e\n\u003c/ol\u003e\n\n\u003cp\u003e此后，\u003c/p\u003e\n\n\u003cul\u003e\n  \u003cli\u003e\n    \u003cp\u003e用户空间\u003cstrong\u003e\u003cmark\u003e关闭 map FD 时，map 并不会消失\u003c/mark\u003e\u003c/strong\u003e，\n因为 BPF 程序还在“使用”它们（虽然此时程序还没有 attach 到任何地方）；\u003c/p\u003e\n  \u003c/li\u003e\n  \u003cli\u003e\n    \u003cp\u003e当 \u003cstrong\u003e\u003cmark\u003eBPF 程序的 FD 关闭时\u003c/mark\u003e\u003c/strong\u003e，如果 BPF 程序的 refcnt 变成 0，\n销毁逻辑会\u003cstrong\u003e遍历该程序用到的所有 map\u003c/strong\u003e，并将它们的 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003erefcnt--\u003c/code\u003e。\u003c/p\u003e\n  \u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003e这种方式使单个 BPF map 能同时被多个 BPF 程序（甚至是\u003cstrong\u003e\u003cmark\u003e不同类型的 BPF 程序\u003c/mark\u003e\u003c/strong\u003e\n）使用。例如，某个 tracing 类型的 BPF 程序将收集到的数据写入一个 BPF map，\n另一个 networking 类型的 BPF 程序读取其中的数据，用来做转发决策。\u003c/p\u003e\n\n\u003ch2 id=\"14-bpf-对象的生命周期\"\u003e1.4 BPF 对象的生命周期\u003c/h2\u003e\n\n\u003cp\u003e根据 BPF 对象（prog/map）的引用计数来判断：\u003c/p\u003e\n\n\u003col\u003e\n  \u003cli\u003e\u003ccode class=\"language-plaintext highlighter-rouge\"\u003erefcnt \u0026gt; 0\u003c/code\u003e 时，这个对象是正常可用的（kernel will keep it alive）；\u003c/li\u003e\n  \u003cli\u003e\u003ccode class=\"language-plaintext highlighter-rouge\"\u003erefcnt == 0\u003c/code\u003e 时，再经过一段 \u003cstrong\u003e\u003cmark\u003eRCU grace period\u003c/mark\u003e\u003c/strong\u003e，对象就会被内核释放（memory free）。\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003ch1 id=\"2-生命周期相关操作attachdetachreplace-bpf-程序\"\u003e2 生命周期相关操作：attach/detach/replace BPF 程序\u003c/h1\u003e\n\n\u003ch2 id=\"21-attachrefcnt\"\u003e2.1 Attach：\u003ccode class=\"language-plaintext highlighter-rouge\"\u003erefcnt++\u003c/code\u003e\u003c/h2\u003e\n\n\u003cp\u003e\u003cstrong\u003e\u003cmark\u003eBPF 程序 attach 到某个 hook 之后，refcnt 就会加 1\u003c/mark\u003e\u003c/strong\u003e。\n创建、加载和 attach BPF 程序的用户空间程序，此时就可以退出了。用户空间程序退出后\n，内核空间的 BPF map 和 BPF 程序（map+program）还是 alive 的，因为程序的 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003erefcnt \u0026gt; 0\u003c/code\u003e。\u003c/p\u003e\n\n\u003cp\u003e但不是所有 attach 到 hook 点的 BPF prog/map 的生命周期都是这样的，\n\u003cstrong\u003e\u003cmark\u003eattach/hook 也是分类型的\u003c/mark\u003e\u003c/strong\u003e，下面具体来看。\u003c/p\u003e\n\n\u003ch3 id=\"211-global-类型tcxdplwtcgroup\"\u003e2.1.1 Global 类型（tc/xdp/lwt/cgroup/…）\u003c/h3\u003e\n\n\u003cp\u003e这种 attach 类型的 BPF 对象是全局可访问的，包括：\u003c/p\u003e\n\n\u003cul\u003e\n  \u003cli\u003exdp\u003c/li\u003e\n  \u003cli\u003etc clsact\u003c/li\u003e\n  \u003cli\u003elwt\u003c/li\u003e\n  \u003cli\u003ecgroup-based hooks\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003e这种类型中，\u003cstrong\u003e\u003cmark\u003e只要 BPF 对象还活着（alive），BPF 程序就会保持 attach 状态\u003c/mark\u003e\u003c/strong\u003e。\n例如，tc \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eclsact\u003c/code\u003e 程序会 attach 到网络设备的 ingress 或 egress qdisc。只要不执行\n\u003ccode class=\"language-plaintext highlighter-rouge\"\u003etc qdisc del\u003c/code\u003e 之类的操作，这些程序就会一直在 qdisc 上处理包 —— 即使用户空间进程已经退出了。\u003c/p\u003e\n\n\u003ch3 id=\"212-local-类型kprobeuprobetracepoint\"\u003e2.1.2 Local 类型（kprobe/uprobe/tracepoint/…）\u003c/h3\u003e\n\n\u003cp\u003e这种类型只能通过 local FD 访问，包括：\u003c/p\u003e\n\n\u003cul\u003e\n  \u003cli\u003ekprobe\u003c/li\u003e\n  \u003cli\u003euprobe\u003c/li\u003e\n  \u003cli\u003etracepoint\u003c/li\u003e\n  \u003cli\u003eperf_event\u003c/li\u003e\n  \u003cli\u003eraw_tracepoint\u003c/li\u003e\n  \u003cli\u003esocket filters\u003c/li\u003e\n  \u003cli\u003eso_reuseport hooks\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003e这种类型的程序\u003cstrong\u003e\u003cmark\u003e通过 FD 访问，因此其生命周期限制在持有 FD 的进程\u003c/mark\u003e\u003c/strong\u003e\n（the process that holds FD to tracing event）\u003cstrong\u003e\u003cmark\u003e生命周期内\u003c/mark\u003e\u003c/strong\u003e。\n例如对于 tracing 场景，\u003c/p\u003e\n\n\u003col\u003e\n  \u003cli\u003e程序首先调用 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003efd = perf_event_open()\u003c/code\u003e（\u003ccode class=\"language-plaintext highlighter-rouge\"\u003efd = bpf_raw_tracepoint_open(“tracepoint_name”, bpf_prog_fd))\u003c/code\u003e ）\n  获取跟踪事件用的文件描述符，\u003c/li\u003e\n  \u003cli\u003e然后执行 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eioctl(fd, IOC_SET_BPF, bpf_prog_fd)\u003c/code\u003e。\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003cp\u003e由于这个 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003efd\u003c/code\u003e 限制在进程范围内（local to the process），因此如果进程挂了，\u003ccode class=\"language-plaintext highlighter-rouge\"\u003efd\u003c/code\u003e 将被关闭。\n在这种场景中，\u003cstrong\u003e\u003cmark\u003e内核会 detach 相应的 BPF 程序，并执行 refcnt--\u003c/mark\u003e\u003c/strong\u003e。\u003c/p\u003e\n\n\u003cblockquote\u003e\n  \u003cp\u003e\u003cstrong\u003e\u003cmark\u003ecgroup object 目前是 global 方式\u003c/mark\u003e\u003c/strong\u003e，但人们正在尝试引入一种基于\nFD 的 cgroup object（即 local 方式），因此将在 cgroup object 可能既是 global\n的又是 local 的。\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003ch3 id=\"213-优缺点比较\"\u003e2.1.3 优缺点比较\u003c/h3\u003e\n\n\u003cp\u003eLocal 类型（基于 FD）主要优势：\u003cstrong\u003e\u003cmark\u003e自动清理\u003c/mark\u003e\u003c/strong\u003e（auto cleaning），这意\n味着一旦用户空间进程异常，内核会自动清理所有的对象。\u003c/p\u003e\n\n\u003cp\u003e最初的 kprobe/uprobe 都是 global 的，但大家很快发现，在生产环境部署\nkprobe/uprobe + bpf 时，这种方式非常笨重。因此在内核中又引入了基于 FD 的\nkprobe/uprobe API。\u003c/p\u003e\n\n\u003cp\u003ecgroup 接下来也可能会有一组类似的基于 FD 的 API。这样进程就能通过 FD 来持有某个\ncgroup object，然后指定 FD（object）来 attach BPF 程序，而非现在的全局 cgroup\nentity 方式。\u003c/p\u003e\n\n\u003cp\u003e基于 FD 的 API 对于网络处理（networking）同样友好。前段时间，某个 Facebook\nWidely Deployed Binary (WDB) 中存在一个忘记清理 tc clsact BPF 程序的 bug，导致的后果\n是：\u003cstrong\u003e当守护进程多次重启之后，网络设备的 egress hook 上累积了几千个（但其实是同一\n个）BPF 程序\u003c/strong\u003e，其中只有一个是真正干活的，其他的都是在浪费 CPU 时间。最终系统性能\n逐渐下降之后，这个问题才被发现。使用基于 FD 的网络 API 能避免这种问题。目前已经\n有相关工作在进行，引入一个类似 tc clsact 的 API，在网络设备的 ingress 和 egress\n路径上添加相应的hook，但实际上并不是基于 tc，而是基于 FD 的、带自动清理特性的\nAPI。\u003c/p\u003e\n\n\u003ch2 id=\"21-detachrefcnt--\"\u003e2.1 Detach：\u003ccode class=\"language-plaintext highlighter-rouge\"\u003erefcnt--\u003c/code\u003e\u003c/h2\u003e\n\n\u003cp\u003eDetach 是 BPF 程序生命周期中的重要步骤。\u003c/p\u003e\n\n\u003cp\u003e将 BPF 程序从 hook 点 detach 之后，\u003cstrong\u003e\u003cmark\u003e接下来再有相应事件发生时，不会再触发\n该 BPF 程序的执行\u003c/mark\u003e\u003c/strong\u003e。\u003c/p\u003e\n\n\u003cp\u003e但是，\u003cstrong\u003e如果 detach 时 BPF 程序正在执行\u003c/strong\u003e，那 detach 操作会先返回，BPF 程序会完成此次执行。\u003c/p\u003e\n\n\u003ch2 id=\"23-replacerefcnt-不变\"\u003e2.3 Replace：\u003ccode class=\"language-plaintext highlighter-rouge\"\u003erefcnt\u003c/code\u003e 不变\u003c/h2\u003e\n\n\u003cp\u003eReplace 是 BPF 程序生命周期中的另一重要步骤。\u003c/p\u003e\n\n\u003cp\u003e\u003cstrong\u003e\u003cmark\u003ecgroup-bpf hooks 支持 BPF 程序的替换（replace）操作\u003c/mark\u003e\u003c/strong\u003e。\n内核保证所有事件（events）都会得到 BPF 程序的处理 —— 但\u003cstrong\u003e中间存在一个窗口\u003c/strong\u003e，\n例如，在某个时刻，可能 CPU 1 上执行的是老程序，CPU 2 上执行的是新程序 ——\n\u003cstrong\u003e\u003cmark\u003e没有“原子”替换操作\u003c/mark\u003e\u003c/strong\u003e（“atomic” replacement）。\u003c/p\u003e\n\n\u003cp\u003e一些 BPF 开发者用下面的方式避免这个问题：\n新程序仍然使用老程序的 BPF map —— 因此在替换过程中数据只有一份，\n只是程序被替换了。这种替换方式是安全的，不管新老程序是否同时在不同 CPU 上运行。\n但这种方式\u003cstrong\u003e仅适用于新/老程序比较相似，没有引入新数据结构的情况\u003c/strong\u003e。\n例如，新老程序的区别仅仅是编译时 debug 开关 on/off 的区别。\u003c/p\u003e\n\n\u003ch1 id=\"3-生命周期相关操作bpf-文件系统-pinunpin\"\u003e3 生命周期相关操作：BPF 文件系统 pin/unpin\u003c/h1\u003e\n\n\u003cp\u003e另一种\u003cstrong\u003e\u003cmark\u003e保持 BPF 程序和 BPF map alive 的方式\u003c/mark\u003e\u003c/strong\u003e是 BPFFS（BPF 文件系统）。\u003c/p\u003e\n\n\u003ch2 id=\"31-pinrefcnt\"\u003e3.1 Pin：\u003ccode class=\"language-plaintext highlighter-rouge\"\u003erefcnt++\u003c/code\u003e\u003c/h2\u003e\n\n\u003cp\u003e用户空间进程可以将一个 BPF 程序或 BPF map “pin”（固定）到 BPFFS。\n\u003cstrong\u003e\u003cmark\u003ePin 操作会使 BPF object 的 refcnt++\u003c/mark\u003e\u003c/strong\u003e，因此即使 BPF 程序接下来没有\nattach 到任何地方，或者 BPF map 没有在任何地方被使用，这个 object 还是会保持 alive\n状态。\u003c/p\u003e\n\n\u003cp\u003e典型场景是网络处理：\u003c/p\u003e\n\n\u003cul\u003e\n  \u003cli\u003e技术背景：attach 到网络设备上的 BPF 程序在处理数据包，并状态数据存储到 BPF map 中（没有用户空间 daemon 进程）。\u003c/li\u003e\n  \u003cli\u003e技术需求：\u003cstrong\u003e管理员希望能时不时登录到机器，查看处理状态\u003c/strong\u003e。\u003c/li\u003e\n  \u003cli\u003e解决方式：管理员用 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003ebpf_obj_get(obj_path_in_bpffs)\u003c/code\u003e 直接从 BPFFS 获取 object（返回一个新的 FD 及指向该对象的 handle）。\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2 id=\"32-unpinrefcnt--\"\u003e3.2 Unpin：\u003ccode class=\"language-plaintext highlighter-rouge\"\u003erefcnt--\u003c/code\u003e\u003c/h2\u003e\n\n\u003cp\u003e\u003cstrong\u003e\u003cmark\u003e要 unpin 某个 object\u003c/mark\u003e\u003c/strong\u003e，\u003cstrong\u003e只需要调用 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eunlink()\u003c/code\u003e 将文件从 BPFS 中\n删除\u003c/strong\u003e，\u003cstrong\u003e\u003cmark\u003e内核将对相应对象执行 refcnt--\u003c/mark\u003e\u003c/strong\u003e。\u003c/p\u003e\n\n\u003ch1 id=\"4-小结对象操作与-refcnt-变化\"\u003e4 小结：对象操作与 refcnt 变化\u003c/h1\u003e\n\n\u003cul\u003e\n  \u003cli\u003e\u003ccode class=\"language-plaintext highlighter-rouge\"\u003ecreate  -\u0026gt; refcnt=1\u003c/code\u003e\u003c/li\u003e\n  \u003cli\u003e\u003ccode class=\"language-plaintext highlighter-rouge\"\u003eattach  -\u0026gt; refcnt++\u003c/code\u003e\u003c/li\u003e\n  \u003cli\u003e\u003ccode class=\"language-plaintext highlighter-rouge\"\u003edetach  -\u0026gt; refcnt--\u003c/code\u003e\u003c/li\u003e\n  \u003cli\u003e\u003ccode class=\"language-plaintext highlighter-rouge\"\u003epin     -\u0026gt; refcnt++\u003c/code\u003e\u003c/li\u003e\n  \u003cli\u003e\u003ccode class=\"language-plaintext highlighter-rouge\"\u003eunpin   -\u0026gt; refcnt--\u003c/code\u003e\u003c/li\u003e\n  \u003cli\u003e\u003ccode class=\"language-plaintext highlighter-rouge\"\u003eunlink  -\u0026gt; refcnt--\u003c/code\u003e\u003c/li\u003e\n  \u003cli\u003e\u003ccode class=\"language-plaintext highlighter-rouge\"\u003eclose   -\u0026gt; refcnt--\u003c/code\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch1 id=\"译文附录一些相关的-bpf-内核实现\"\u003e译文附录：一些相关的 BPF 内核实现\u003c/h1\u003e\n\n\u003cp\u003e\u003ca name=\"appendix_1\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003ch2 id=\"附录一创建-bpf-map\"\u003e附录一：创建 BPF map\u003c/h2\u003e\n\n\u003cp\u003e下面是创建一个 BPF map 的调用过程，尤其展示 \u003cstrong\u003e\u003cmark\u003emap 的引用计数（refcnt）是在哪里更新的\u003c/mark\u003e\u003c/strong\u003e：\u003c/p\u003e\n\n\u003ch3 id=\"bpf_create_map---bpf_create_map_xattr---sys_bpf---syscall_define3bpf-系统调用\"\u003e\u003ccode class=\"language-plaintext highlighter-rouge\"\u003ebpf_create_map() -\u0026gt; bpf_create_map_xattr() -\u0026gt; sys_bpf() -\u0026gt; SYSCALL_DEFINE3(bpf, ...)\u003c/code\u003e：系统调用\u003c/h3\u003e\n\n\u003cdiv class=\"language-c highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"c1\"\u003e// tools/lib/bpf/bpf.c\u003c/span\u003e\n\n\u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"nf\"\u003ebpf_create_map\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003eenum\u003c/span\u003e \u003cspan class=\"n\"\u003ebpf_map_type\u003c/span\u003e \u003cspan class=\"n\"\u003emap_type\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"n\"\u003ekey_size\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n           \u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"n\"\u003evalue_size\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"n\"\u003emax_entries\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003e__u32\u003c/span\u003e \u003cspan class=\"n\"\u003emap_flags\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003estruct\u003c/span\u003e \u003cspan class=\"n\"\u003ebpf_create_map_attr\u003c/span\u003e \u003cspan class=\"n\"\u003emap_attr\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e{};\u003c/span\u003e\n\n    \u003cspan class=\"n\"\u003emap_attr\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003emap_type\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003emap_type\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"n\"\u003emap_attr\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003emap_flags\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003emap_flags\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"n\"\u003emap_attr\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ekey_size\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003ekey_size\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"n\"\u003emap_attr\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003evalue_size\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003evalue_size\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"n\"\u003emap_attr\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003emax_entries\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003emax_entries\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003ebpf_create_map_xattr\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e\u003cspan class=\"n\"\u003emap_attr\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"nf\"\u003ebpf_create_map_xattr\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"k\"\u003estruct\u003c/span\u003e \u003cspan class=\"n\"\u003ebpf_create_map_attr\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003ecreate_attr\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eunion\u003c/span\u003e \u003cspan class=\"n\"\u003ebpf_attr\u003c/span\u003e \u003cspan class=\"n\"\u003eattr\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"n\"\u003ememset\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e\u003cspan class=\"n\"\u003eattr\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"sc\"\u003e\u0026#39;\\0\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"k\"\u003esizeof\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eattr\u003c/span\u003e\u003cspan class=\"p\"\u003e));\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eattr\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003exx\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003ecreate_attr\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003exx\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"c1\"\u003e// convert: \u0026#39;struct bpf_create_map_attr -\u0026gt; struct bpf_attr\u0026#39;\u003c/span\u003e\n\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003esys_bpf\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eBPF_MAP_CREATE\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e\u003cspan class=\"n\"\u003eattr\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"k\"\u003esizeof\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eattr\u003c/span\u003e\u003cspan class=\"p\"\u003e));\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003ch3 id=\"case-bpf_map_create---map_create创建-map\"\u003e\u003ccode class=\"language-plaintext highlighter-rouge\"\u003ecase BPF_MAP_CREATE -\u0026gt; map_create()\u003c/code\u003e：创建 map\u003c/h3\u003e\n\n\u003cp\u003e\u003ccode class=\"language-plaintext highlighter-rouge\"\u003ebpf()\u003c/code\u003e 系统调用：\u003c/p\u003e\n\n\u003cdiv class=\"language-c highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"c1\"\u003e// kernel/bpf/syscall.c\u003c/span\u003e\n\n\u003cspan class=\"n\"\u003eSYSCALL_DEFINE3\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ebpf\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"kt\"\u003eint\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003ecmd\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"k\"\u003eunion\u003c/span\u003e \u003cspan class=\"n\"\u003ebpf_attr\u003c/span\u003e \u003cspan class=\"n\"\u003e__user\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003euattr\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"kt\"\u003eunsigned\u003c/span\u003e \u003cspan class=\"kt\"\u003eint\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003esize\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eswitch\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ecmd\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ecase\u003c/span\u003e \u003cspan class=\"n\"\u003eBPF_MAP_CREATE\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n        \u003cspan class=\"n\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003emap_create\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e\u003cspan class=\"n\"\u003eattr\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n        \u003cspan class=\"k\"\u003ebreak\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ecase\u003c/span\u003e \u003cspan class=\"n\"\u003eBPF_PROG_LOAD\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"c1\"\u003e// 加载 BPF 程序\u003c/span\u003e\n        \u003cspan class=\"n\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003ebpf_prog_load\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e\u003cspan class=\"n\"\u003eattr\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n        \u003cspan class=\"k\"\u003ebreak\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e...\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003eerr\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003estatic\u003c/span\u003e \u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"nf\"\u003emap_create\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003eunion\u003c/span\u003e \u003cspan class=\"n\"\u003ebpf_attr\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003eattr\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e...\u003c/span\u003e\n    \u003cspan class=\"n\"\u003emap\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003efind_and_alloc_map\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eattr\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\n    \u003cspan class=\"n\"\u003eatomic_set\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e\u003cspan class=\"n\"\u003emap\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003erefcnt\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e  \u003cspan class=\"c1\"\u003e// 设置引用计数\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eatomic_set\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e\u003cspan class=\"n\"\u003emap\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003eusercnt\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e \u003cspan class=\"c1\"\u003e// 设置引用计数\u003c/span\u003e\n\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003eerr\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e\u003ca name=\"appendix_2\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003ch2 id=\"附录二加载-bpf-程序\"\u003e附录二：加载 BPF 程序\u003c/h2\u003e\n\n\u003ch3 id=\"bpfbpf_prog_load---sys_bpf---syscall_define3bpf-系统调用\"\u003e\u003ccode class=\"language-plaintext highlighter-rouge\"\u003ebpf(BPF_PROG_LOAD) -\u0026gt; sys_bpf() -\u0026gt; SYSCALL_DEFINE3(bpf, ...)\u003c/code\u003e：系统调用\u003c/h3\u003e\n\n\u003ch3 id=\"case-bpf_prog_load---bpf_prog_load加载逻辑\"\u003e\u003ccode class=\"language-plaintext highlighter-rouge\"\u003ecase BPF_PROG_LOAD -\u0026gt; bpf_prog_load()\u003c/code\u003e：加载逻辑\u003c/h3\u003e\n\n\u003cp\u003e通过 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003ebpf(BPF_PROG_LOAD)\u003c/code\u003e 系统调用加载程序时，会调用到下面的函数：\u003c/p\u003e\n\n\u003cdiv class=\"language-c highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"c1\"\u003e// kernel/bpf/syscall.c\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003estatic\u003c/span\u003e \u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"nf\"\u003ebpf_prog_load\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003eunion\u003c/span\u003e \u003cspan class=\"n\"\u003ebpf_attr\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003eattr\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eenum\u003c/span\u003e \u003cspan class=\"n\"\u003ebpf_prog_type\u003c/span\u003e \u003cspan class=\"n\"\u003etype\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eattr\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003eprog_type\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"k\"\u003estruct\u003c/span\u003e \u003cspan class=\"n\"\u003ebpf_prog\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003eprog\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\n    \u003cspan class=\"n\"\u003ebpf_prog_load_fixup_attach_type\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eattr\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ebpf_prog_load_check_attach_type\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003etype\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eattr\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003eexpected_attach_type\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e\n        \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u003c/span\u003e\u003cspan class=\"n\"\u003eEINVAL\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\n    \u003cspan class=\"cm\"\u003e/* plain bpf_prog allocation */\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eprog\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003ebpf_prog_alloc\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ebpf_prog_size\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eattr\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003einsn_cnt\u003c/span\u003e\u003cspan class=\"p\"\u003e),\u003c/span\u003e \u003cspan class=\"n\"\u003eGFP_USER\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eprog\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003eexpected_attach_type\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eattr\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003eexpected_attach_type\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eprog\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003eaux\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003eoffload_requested\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"o\"\u003e!!\u003c/span\u003e\u003cspan class=\"n\"\u003eattr\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003eprog_ifindex\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eprog\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003elen\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eattr\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003einsn_cnt\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\n    \u003cspan class=\"n\"\u003ecopy_from_user\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eprog\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003einsns\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eu64_to_user_ptr\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eattr\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003einsns\u003c/span\u003e\u003cspan class=\"p\"\u003e),\u003c/span\u003e \u003cspan class=\"n\"\u003ebpf_prog_insn_size\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eprog\u003c/span\u003e\u003cspan class=\"p\"\u003e));\u003c/span\u003e\n\n    \u003cspan class=\"n\"\u003eprog\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003eorig_prog\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nb\"\u003eNULL\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eprog\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003ejited\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\n    \u003cspan class=\"n\"\u003eatomic_set\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e\u003cspan class=\"n\"\u003eprog\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003eaux\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003erefcnt\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e \u003cspan class=\"c1\"\u003e// 引用计数置 1\u003c/span\u003e\n\n    \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ebpf_prog_is_dev_bound\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eprog\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003eaux\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"n\"\u003ebpf_prog_offload_init\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eprog\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eattr\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n    \u003cspan class=\"cm\"\u003e/* find program type: socket_filter vs tracing_filter */\u003c/span\u003e\n    \u003cspan class=\"n\"\u003efind_prog_type\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003etype\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eprog\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\n    \u003cspan class=\"n\"\u003eprog\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003eaux\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003eload_time\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003ektime_get_boot_ns\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e\n    \u003cspan class=\"n\"\u003ebpf_obj_name_cpy\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eprog\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003eaux\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003ename\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eattr\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003eprog_name\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\n    \u003cspan class=\"cm\"\u003e/* run eBPF verifier */\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003ebpf_check\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e\u003cspan class=\"n\"\u003eprog\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eattr\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e \u003cspan class=\"c1\"\u003e// 执行 BPF 校验器\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n        \u003cspan class=\"k\"\u003egoto\u003c/span\u003e \u003cspan class=\"n\"\u003efree_used_maps\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\n    \u003cspan class=\"n\"\u003eprog\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003ebpf_prog_select_runtime\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eprog\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e\u003cspan class=\"n\"\u003eerr\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"n\"\u003ebpf_prog_alloc_id\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eprog\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\n    \u003cspan class=\"n\"\u003ebpf_prog_new_fd\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eprog\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"n\"\u003ebpf_prog_kallsyms_add\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eprog\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003eerr\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cblockquote\u003e\n  \u003cp\u003e通过 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003ebpf(BPF_OBJ_GET)\u003c/code\u003e 获取某个 BPF object 时，也会增加该 BPF object 的引用计数，调用路径：\u003c/p\u003e\n\n  \u003cp\u003ebpf() -\u0026gt; SYSCALL_DEFINE3(bpf, …) -\u0026gt; bpf_obj_get() -\u0026gt; bpf_obj_get_user() -\u0026gt; bpf_any_get() -\u0026gt; bpf_prog_inc()\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003ch3 id=\"bpf_check执行内核校验\"\u003e\u003ccode class=\"language-plaintext highlighter-rouge\"\u003ebpf_check()\u003c/code\u003e：执行内核校验\u003c/h3\u003e\n\n\u003cp\u003e校验器逻辑（忽略错误处理）：\u003c/p\u003e\n\n\u003cdiv class=\"language-c highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"c1\"\u003e// kernel/bpf/verifier.c\u003c/span\u003e\n\n\u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"nf\"\u003ebpf_check\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003estruct\u003c/span\u003e \u003cspan class=\"n\"\u003ebpf_prog\u003c/span\u003e \u003cspan class=\"o\"\u003e**\u003c/span\u003e\u003cspan class=\"n\"\u003eprog\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"k\"\u003eunion\u003c/span\u003e \u003cspan class=\"n\"\u003ebpf_attr\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003eattr\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003estruct\u003c/span\u003e \u003cspan class=\"n\"\u003ebpf_verifier_env\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003eenv\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"k\"\u003estruct\u003c/span\u003e \u003cspan class=\"n\"\u003ebpf_verifier_log\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003elog\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\n    \u003cspan class=\"n\"\u003eenv\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003ekzalloc\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003esizeof\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003estruct\u003c/span\u003e \u003cspan class=\"n\"\u003ebpf_verifier_env\u003c/span\u003e\u003cspan class=\"p\"\u003e),\u003c/span\u003e \u003cspan class=\"n\"\u003eGFP_KERNEL\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"n\"\u003elog\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e\u003cspan class=\"n\"\u003eenv\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003elog\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\n    \u003cspan class=\"n\"\u003eenv\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003einsn_aux_data\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003evzalloc\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003earray_size\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003esizeof\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003estruct\u003c/span\u003e \u003cspan class=\"n\"\u003ebpf_insn_aux_data\u003c/span\u003e\u003cspan class=\"p\"\u003e),\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003eprog\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003elen\u003c/span\u003e\u003cspan class=\"p\"\u003e));\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eenv\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003eprog\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003eprog\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eenv\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003eops\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003ebpf_verifier_ops\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003eenv\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003eprog\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003etype\u003c/span\u003e\u003cspan class=\"p\"\u003e];\u003c/span\u003e\n\n    \u003cspan class=\"cm\"\u003e/* grab the mutex to protect few globals used by verifier */\u003c/span\u003e\n    \u003cspan class=\"n\"\u003emutex_lock\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e\u003cspan class=\"n\"\u003ebpf_verifier_lock\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\n    \u003cspan class=\"n\"\u003ereplace_map_fd_with_map_ptr\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eenv\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e \u003cspan class=\"c1\"\u003e// 对程序用到的 map 进行处理\u003c/span\u003e\n\n    \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ebpf_prog_is_dev_bound\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eenv\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003eprog\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003eaux\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"n\"\u003ebpf_prog_offload_verifier_prep\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eenv\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n    \u003cspan class=\"n\"\u003eenv\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003eexplored_states\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003ekcalloc\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eenv\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003eprog\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003elen\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"k\"\u003esizeof\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003estruct\u003c/span\u003e \u003cspan class=\"n\"\u003ebpf_verifier_state_list\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"p\"\u003e),\u003c/span\u003e \u003cspan class=\"n\"\u003eGFP_USER\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eret\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u003c/span\u003e\u003cspan class=\"n\"\u003eENOMEM\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"o\"\u003e!\u003c/span\u003e\u003cspan class=\"n\"\u003eenv\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003eexplored_states\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n        \u003cspan class=\"k\"\u003egoto\u003c/span\u003e \u003cspan class=\"n\"\u003eskip_full_check\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\n    \u003cspan class=\"n\"\u003eenv\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003eallow_ptr_leaks\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003ecapable\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eCAP_SYS_ADMIN\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\n    \u003cspan class=\"n\"\u003eret\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003echeck_cfg\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eenv\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eret\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n        \u003cspan class=\"k\"\u003egoto\u003c/span\u003e \u003cspan class=\"n\"\u003eskip_full_check\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\n    \u003cspan class=\"n\"\u003eret\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003edo_check\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eenv\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eenv\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003ecur_state\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"n\"\u003efree_verifier_state\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eenv\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003ecur_state\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nb\"\u003etrue\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n        \u003cspan class=\"n\"\u003eenv\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003ecur_state\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nb\"\u003eNULL\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"nl\"\u003eskip_full_check:\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ewhile\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"o\"\u003e!\u003c/span\u003e\u003cspan class=\"n\"\u003epop_stack\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eenv\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nb\"\u003eNULL\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nb\"\u003eNULL\u003c/span\u003e\u003cspan class=\"p\"\u003e));\u003c/span\u003e\n    \u003cspan class=\"n\"\u003efree_states\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eenv\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e...\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003eret\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003ch3 id=\"replace_map_fd_with_map_ptr---bpf_map_inc更新-map-refcnt\"\u003e\u003ccode class=\"language-plaintext highlighter-rouge\"\u003ereplace_map_fd_with_map_ptr() -\u0026gt; bpf_map_inc()\u003c/code\u003e：更新 map refcnt\u003c/h3\u003e\n\n\u003cp\u003e\u003ccode class=\"language-plaintext highlighter-rouge\"\u003ereplace_map_fd_with_map_ptr(env)\u003c/code\u003e 会更新这个程序用到的 BPF map 的引用计数：\u003c/p\u003e\n\n\u003cdiv class=\"language-c highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"c1\"\u003e// kernel/bpf/verifier.c\u003c/span\u003e\n\n\u003cspan class=\"cm\"\u003e/* look for pseudo eBPF instructions that access map FDs and\n * replace them with actual map pointers */\u003c/span\u003e\n\u003cspan class=\"k\"\u003estatic\u003c/span\u003e \u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"nf\"\u003ereplace_map_fd_with_map_ptr\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003estruct\u003c/span\u003e \u003cspan class=\"n\"\u003ebpf_verifier_env\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003eenv\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003estruct\u003c/span\u003e \u003cspan class=\"n\"\u003ebpf_insn\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003einsn\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eenv\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003eprog\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003einsnsi\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"kt\"\u003eint\u003c/span\u003e          \u003cspan class=\"n\"\u003einsn_cnt\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eenv\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003eprog\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003elen\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\n    \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ei\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"n\"\u003ei\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"n\"\u003einsn_cnt\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"n\"\u003ei\u003c/span\u003e\u003cspan class=\"o\"\u003e++\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003einsn\u003c/span\u003e\u003cspan class=\"o\"\u003e++\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003einsn\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e].\u003c/span\u003e\u003cspan class=\"n\"\u003ecode\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eBPF_LD\u003c/span\u003e \u003cspan class=\"o\"\u003e|\u003c/span\u003e \u003cspan class=\"n\"\u003eBPF_IMM\u003c/span\u003e \u003cspan class=\"o\"\u003e|\u003c/span\u003e \u003cspan class=\"n\"\u003eBPF_DW\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n            \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003einsn\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003esrc_reg\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"n\"\u003eBPF_PSEUDO_MAP_FD\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n                \u003cspan class=\"n\"\u003everbose\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eenv\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;unrecognized bpf_ld_imm64 insn\u003c/span\u003e\u003cspan class=\"se\"\u003e\\n\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n                \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u003c/span\u003e\u003cspan class=\"n\"\u003eEINVAL\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n            \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n            \u003cspan class=\"k\"\u003estruct\u003c/span\u003e \u003cspan class=\"n\"\u003efd\u003c/span\u003e \u003cspan class=\"n\"\u003ef\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003efdget\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003einsn\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003eimm\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n            \u003cspan class=\"k\"\u003estruct\u003c/span\u003e \u003cspan class=\"n\"\u003ebpf_map\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003emap\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003e__bpf_map_get\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ef\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\n            \u003cspan class=\"cm\"\u003e/* store map pointer inside BPF_LD_IMM64 instruction */\u003c/span\u003e\n            \u003cspan class=\"n\"\u003einsn\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e].\u003c/span\u003e\u003cspan class=\"n\"\u003eimm\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eu32\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"kt\"\u003eunsigned\u003c/span\u003e \u003cspan class=\"kt\"\u003elong\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"n\"\u003emap\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n            \u003cspan class=\"n\"\u003einsn\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e].\u003c/span\u003e\u003cspan class=\"n\"\u003eimm\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e((\u003c/span\u003e\u003cspan class=\"n\"\u003eu64\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"kt\"\u003eunsigned\u003c/span\u003e \u003cspan class=\"kt\"\u003elong\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"n\"\u003emap\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026gt;\u0026gt;\u003c/span\u003e \u003cspan class=\"mi\"\u003e32\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\n            \u003cspan class=\"cm\"\u003e/* hold the map. If program rejected by verifier, the map will be released by release_maps() or will\n             * be used by the valid program until it\u0026#39;s unloaded and all maps are released in free_used_maps() */\u003c/span\u003e\n            \u003cspan class=\"n\"\u003emap\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003ebpf_map_inc\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003emap\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nb\"\u003efalse\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e             \u003cspan class=\"c1\"\u003e// 增加引用计数\u003c/span\u003e\n            \u003cspan class=\"n\"\u003eenv\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003eused_maps\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003eenv\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003eused_map_cnt\u003c/span\u003e\u003cspan class=\"o\"\u003e++\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003emap\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"c1\"\u003e// 记录这个程序用到的 map\u003c/span\u003e\n\n\u003cspan class=\"nl\"\u003enext_insn:\u003c/span\u003e\n            \u003cspan class=\"n\"\u003einsn\u003c/span\u003e\u003cspan class=\"o\"\u003e++\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"n\"\u003ei\u003c/span\u003e\u003cspan class=\"o\"\u003e++\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n            \u003cspan class=\"k\"\u003econtinue\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n        \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n    \u003cspan class=\"cm\"\u003e/* now all pseudo BPF_LD_IMM64 instructions load valid\n     * \u0026#39;struct bpf_map *\u0026#39; into a register instead of user map_fd.\n     * These pointers will be used later by verifier to validate map access.  */\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cdiv class=\"language-c highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"c1\"\u003e// kernel/bpf/syscall.c\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003estruct\u003c/span\u003e \u003cspan class=\"n\"\u003ebpf_map\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"nf\"\u003ebpf_map_inc\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003estruct\u003c/span\u003e \u003cspan class=\"n\"\u003ebpf_map\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003emap\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003ebool\u003c/span\u003e \u003cspan class=\"n\"\u003euref\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003euref\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n        \u003cspan class=\"n\"\u003eatomic_inc\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e\u003cspan class=\"n\"\u003emap\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003eusercnt\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003emap\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"n\"\u003eEXPORT_SYMBOL_GPL\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ebpf_map_inc\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\n  \u003c!-- POST NAVIGATION --\u003e\n  \u003cdiv class=\"postNav clearfix\"\u003e\n     \n      \u003ca class=\"prev\" href=\"/blog/customize-tcp-initial-rto-with-bpf/\"\u003e\u003cspan\u003e« Customize TCP initial RTO (retransmission timeout) with BPF\u003c/span\u003e\n      \n    \u003c/a\u003e\n      \n      \n      \u003ca class=\"next\" href=\"/blog/what-happens-when-k8s-creates-pods-1-zh/\"\u003e\u003cspan\u003e源码解析：K8s 创建 pod 时，背后发生了什么（一）（2021） »\u003c/span\u003e\n       \n      \u003c/a\u003e\n     \n  \u003c/div\u003e\n\u003c/div\u003e",
  "Date": "2021-05-07T00:00:00Z",
  "Author": "Arthur Chiao"
}