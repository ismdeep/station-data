{
  "Source": "arthurchiao.art",
  "Title": "[笔记] 《Internet Routing Architecture》(Cisco Press, 2000)",
  "Link": "https://arthurchiao.art/blog/internet-routing-architecture-zh/",
  "Content": "\u003cdiv class=\"post\"\u003e\n  \n  \u003ch1 class=\"postTitle\"\u003e[笔记] 《Internet Routing Architecture》(Cisco Press, 2000)\u003c/h1\u003e\n  \u003cp class=\"meta\"\u003ePublished at 2019-04-08 | Last Update 2023-02-21\u003c/p\u003e\n  \n  \u003cp\u003e本文是阅读 \u003ca href=\"https://www.amazon.com/Internet-Routing-Architectures-2nd-Halabi/dp/157870233X\"\u003eInternet Routing Architecture, 2nd Edition\u003c/a\u003e （\nCisco Press, 2000）（直译为\u003cstrong\u003e“互联网路由架构”\u003c/strong\u003e）时所做的笔记。\u003c/p\u003e\n\n\u003cp\u003e注意这本书是 2000 年写的，因此有些内容可能已经过时，比如说到“当前大型网络都是使\n用 xxx 协议”的时候，说的是距今 20 年前的情况，现在则并不一定。\u003c/p\u003e\n\n\u003cp\u003e本书致力于\u003cstrong\u003e解决实际问题\u003c/strong\u003e，书中包含大量的架构图、拓扑图和真实场景示例，内容全面\n且易于上手，是不可多得的良心之作。本书目的是使读者成为\u003cstrong\u003e将自有网络集成到全球互联网\u003c/strong\u003e\n（integrating your network into the global Internet）领域的专家。\u003c/p\u003e\n\n\u003cp\u003e以下是笔记内容。\u003c/p\u003e\n\n\u003chr/\u003e\n\n\u003cul id=\"markdown-toc\"\u003e\n  \u003cli\u003e\u003ca href=\"#引言\" id=\"markdown-toc-引言\"\u003e引言\u003c/a\u003e    \u003cul\u003e\n      \u003cli\u003e\u003ca href=\"#目标\" id=\"markdown-toc-目标\"\u003e目标\u003c/a\u003e\u003c/li\u003e\n      \u003cli\u003e\u003ca href=\"#目标读者\" id=\"markdown-toc-目标读者\"\u003e目标读者\u003c/a\u003e\u003c/li\u003e\n    \u003c/ul\u003e\n  \u003c/li\u003e\n  \u003cli\u003e\u003ca href=\"#i-当代互联网the-contemporary-internet\" id=\"markdown-toc-i-当代互联网the-contemporary-internet\"\u003eI: 当代互联网（The Contemporary Internet）\u003c/a\u003e\u003c/li\u003e\n  \u003cli\u003e\u003ca href=\"#1-互联网的演进\" id=\"markdown-toc-1-互联网的演进\"\u003e1 互联网的演进\u003c/a\u003e    \u003cul\u003e\n      \u003cli\u003e\u003ca href=\"#11-互联网起源及近史\" id=\"markdown-toc-11-互联网起源及近史\"\u003e1.1 互联网：起源及近史\u003c/a\u003e        \u003cul\u003e\n          \u003cli\u003e\u003ca href=\"#arpanet\" id=\"markdown-toc-arpanet\"\u003eARPANET\u003c/a\u003e\u003c/li\u003e\n          \u003cli\u003e\u003ca href=\"#nsfnet\" id=\"markdown-toc-nsfnet\"\u003eNSFNET\u003c/a\u003e\u003c/li\u003e\n          \u003cli\u003e\u003ca href=\"#the-internet-today\" id=\"markdown-toc-the-internet-today\"\u003eThe Internet Today\u003c/a\u003e\u003c/li\u003e\n        \u003c/ul\u003e\n      \u003c/li\u003e\n    \u003c/ul\u003e\n  \u003c/li\u003e\n  \u003cli\u003e\u003ca href=\"#2-isp-服务和特点\" id=\"markdown-toc-2-isp-服务和特点\"\u003e2 ISP 服务和特点\u003c/a\u003e    \u003cul\u003e\n      \u003cli\u003e\u003ca href=\"#21-isp-services\" id=\"markdown-toc-21-isp-services\"\u003e2.1 ISP Services\u003c/a\u003e\u003c/li\u003e\n    \u003c/ul\u003e\n  \u003c/li\u003e\n  \u003cli\u003e\u003ca href=\"#3-ip-寻址和分配\" id=\"markdown-toc-3-ip-寻址和分配\"\u003e3 IP 寻址和分配\u003c/a\u003e    \u003cul\u003e\n      \u003cli\u003e\u003ca href=\"#31-history-of-internet-addressing\" id=\"markdown-toc-31-history-of-internet-addressing\"\u003e3.1 History of Internet Addressing\u003c/a\u003e\u003c/li\u003e\n      \u003cli\u003e\u003ca href=\"#32-ip-address-space-depletion\" id=\"markdown-toc-32-ip-address-space-depletion\"\u003e3.2 IP Address Space Depletion\u003c/a\u003e        \u003cul\u003e\n          \u003cli\u003e\u003ca href=\"#将自己聚合的路由指向黑洞\" id=\"markdown-toc-将自己聚合的路由指向黑洞\"\u003e将自己聚合的路由指向黑洞\u003c/a\u003e\u003c/li\u003e\n        \u003c/ul\u003e\n      \u003c/li\u003e\n    \u003c/ul\u003e\n  \u003c/li\u003e\n  \u003cli\u003e\u003ca href=\"#ii-路由协议基础routing-protocol-basics\" id=\"markdown-toc-ii-路由协议基础routing-protocol-basics\"\u003eII: 路由协议基础（Routing Protocol Basics）\u003c/a\u003e\u003c/li\u003e\n  \u003cli\u003e\u003ca href=\"#4-域间路由基础\" id=\"markdown-toc-4-域间路由基础\"\u003e4 域间路由基础\u003c/a\u003e    \u003cul\u003e\n      \u003cli\u003e\u003ca href=\"#41-路由器和路由routers-and-routing\" id=\"markdown-toc-41-路由器和路由routers-and-routing\"\u003e4.1 路由器和路由（Routers and Routing）\u003c/a\u003e\u003c/li\u003e\n      \u003cli\u003e\u003ca href=\"#42-路由协议\" id=\"markdown-toc-42-路由协议\"\u003e4.2 路由协议\u003c/a\u003e        \u003cul\u003e\n          \u003cli\u003e\u003ca href=\"#距离矢量算法\" id=\"markdown-toc-距离矢量算法\"\u003e距离矢量算法\u003c/a\u003e\u003c/li\u003e\n          \u003cli\u003e\u003ca href=\"#链路状态算法\" id=\"markdown-toc-链路状态算法\"\u003e链路状态算法\u003c/a\u003e\u003c/li\u003e\n        \u003c/ul\u003e\n      \u003c/li\u003e\n      \u003cli\u003e\u003ca href=\"#43-将互联网分割为自治系统as\" id=\"markdown-toc-43-将互联网分割为自治系统as\"\u003e4.3 将互联网分割为自治系统（AS）\u003c/a\u003e        \u003cul\u003e\n          \u003cli\u003e\u003ca href=\"#autonomous-systems\" id=\"markdown-toc-autonomous-systems\"\u003eAutonomous Systems\u003c/a\u003e\u003c/li\u003e\n          \u003cli\u003e\u003ca href=\"#三种-as-类型\" id=\"markdown-toc-三种-as-类型\"\u003e三种 AS 类型\u003c/a\u003e\u003c/li\u003e\n        \u003c/ul\u003e\n      \u003c/li\u003e\n      \u003cli\u003e\u003ca href=\"#45-faq\" id=\"markdown-toc-45-faq\"\u003e4.5 FAQ\u003c/a\u003e        \u003cul\u003e\n          \u003cli\u003e\u003ca href=\"#domain-和-as-有什么区别\" id=\"markdown-toc-domain-和-as-有什么区别\"\u003eDomain 和 AS 有什么区别？\u003c/a\u003e\u003c/li\u003e\n          \u003cli\u003e\u003ca href=\"#bgp-是用于-as-之间的那用于-as-内的-bgp-又是什么\" id=\"markdown-toc-bgp-是用于-as-之间的那用于-as-内的-bgp-又是什么\"\u003eBGP 是用于 AS 之间的。那用于 AS 内的 BGP 又是什么？\u003c/a\u003e\u003c/li\u003e\n        \u003c/ul\u003e\n      \u003c/li\u003e\n    \u003c/ul\u003e\n  \u003c/li\u003e\n  \u003cli\u003e\u003ca href=\"#5-边界网关协议第-4-版bgp-4\" id=\"markdown-toc-5-边界网关协议第-4-版bgp-4\"\u003e5 边界网关协议第 4 版（BGP-4）\u003c/a\u003e    \u003cul\u003e\n      \u003cli\u003e\u003ca href=\"#51-bgp-工作原理\" id=\"markdown-toc-51-bgp-工作原理\"\u003e5.1 BGP 工作原理\u003c/a\u003e        \u003cul\u003e\n          \u003cli\u003e\u003ca href=\"#bgp-消息头格式\" id=\"markdown-toc-bgp-消息头格式\"\u003eBGP 消息头格式\u003c/a\u003e\u003c/li\u003e\n        \u003c/ul\u003e\n      \u003c/li\u003e\n      \u003cli\u003e\u003ca href=\"#52-bgp-功能协商\" id=\"markdown-toc-52-bgp-功能协商\"\u003e5.2 BGP 功能协商\u003c/a\u003e        \u003cul\u003e\n          \u003cli\u003e\u003ca href=\"#update-message-and-routing-information\" id=\"markdown-toc-update-message-and-routing-information\"\u003eUPDATE Message and Routing Information\u003c/a\u003e\u003c/li\u003e\n        \u003c/ul\u003e\n      \u003c/li\u003e\n      \u003cli\u003e\u003ca href=\"#53-多协议扩展multiprotocol-extensions-for-bgp-mp-bgp\" id=\"markdown-toc-53-多协议扩展multiprotocol-extensions-for-bgp-mp-bgp\"\u003e5.3 多协议扩展（Multiprotocol Extensions for BGP, MP-BGP）\u003c/a\u003e\u003c/li\u003e\n      \u003cli\u003e\u003ca href=\"#54-tcp-md5-signature-option\" id=\"markdown-toc-54-tcp-md5-signature-option\"\u003e5.4 TCP MD5 Signature Option\u003c/a\u003e\u003c/li\u003e\n      \u003cli\u003e\u003ca href=\"#55-looking-ahead\" id=\"markdown-toc-55-looking-ahead\"\u003e5.5 Looking Ahead\u003c/a\u003e\u003c/li\u003e\n      \u003cli\u003e\u003ca href=\"#56-frequently-asked-questions\" id=\"markdown-toc-56-frequently-asked-questions\"\u003e5.6 Frequently Asked Questions\u003c/a\u003e        \u003cul\u003e\n          \u003cli\u003e\u003ca href=\"#bgp-是否像-rip-一样定期发布路由更新消息\" id=\"markdown-toc-bgp-是否像-rip-一样定期发布路由更新消息\"\u003eBGP 是否像 RIP 一样定期发布路由更新消息？\u003c/a\u003e\u003c/li\u003e\n          \u003cli\u003e\u003ca href=\"#asn-在-bgp-消息中的什么地方\" id=\"markdown-toc-asn-在-bgp-消息中的什么地方\"\u003eASN 在 BGP 消息中的什么地方？\u003c/a\u003e\u003c/li\u003e\n        \u003c/ul\u003e\n      \u003c/li\u003e\n    \u003c/ul\u003e\n  \u003c/li\u003e\n  \u003cli\u003e\u003ca href=\"#iii-effective-internet-routing-designs\" id=\"markdown-toc-iii-effective-internet-routing-designs\"\u003eIII: Effective Internet Routing Designs\u003c/a\u003e\u003c/li\u003e\n  \u003cli\u003e\u003ca href=\"#6-bgp-capabilities-调优\" id=\"markdown-toc-6-bgp-capabilities-调优\"\u003e6 BGP Capabilities 调优\u003c/a\u003e    \u003cul\u003e\n      \u003cli\u003e\u003ca href=\"#61-building-peer-sessions\" id=\"markdown-toc-61-building-peer-sessions\"\u003e6.1 Building Peer Sessions\u003c/a\u003e        \u003cul\u003e\n          \u003cli\u003e\u003ca href=\"#物理和逻辑连接\" id=\"markdown-toc-物理和逻辑连接\"\u003e物理和逻辑连接\u003c/a\u003e\u003c/li\u003e\n          \u003cli\u003e\u003ca href=\"#synchronization-within-an-as\" id=\"markdown-toc-synchronization-within-an-as\"\u003eSynchronization Within an AS\u003c/a\u003e\u003c/li\u003e\n        \u003c/ul\u003e\n      \u003c/li\u003e\n      \u003cli\u003e\u003ca href=\"#62-路由更新方式\" id=\"markdown-toc-62-路由更新方式\"\u003e6.2 路由更新方式\u003c/a\u003e        \u003cul\u003e\n          \u003cli\u003e\u003ca href=\"#bgp-动态注入\" id=\"markdown-toc-bgp-动态注入\"\u003eBGP 动态注入\u003c/a\u003e\u003c/li\u003e\n          \u003cli\u003e\u003ca href=\"#bgp-静态注入\" id=\"markdown-toc-bgp-静态注入\"\u003eBGP 静态注入\u003c/a\u003e\u003c/li\u003e\n          \u003cli\u003e\u003ca href=\"#静态路由和动态路由例子移动网络\" id=\"markdown-toc-静态路由和动态路由例子移动网络\"\u003e静态路由和动态路由例子：移动网络\u003c/a\u003e\u003c/li\u003e\n        \u003c/ul\u003e\n      \u003c/li\u003e\n      \u003cli\u003e\u003ca href=\"#63-重叠的协议后门overlapping-protocols-backdoors\" id=\"markdown-toc-63-重叠的协议后门overlapping-protocols-backdoors\"\u003e6.3 重叠的协议：后门（Overlapping Protocols: Backdoors）\u003c/a\u003e\u003c/li\u003e\n      \u003cli\u003e\u003ca href=\"#64-bgp-路由过程\" id=\"markdown-toc-64-bgp-路由过程\"\u003e6.4 BGP 路由过程\u003c/a\u003e        \u003cul\u003e\n          \u003cli\u003e\u003ca href=\"#bgp-路由通告和存储\" id=\"markdown-toc-bgp-路由通告和存储\"\u003eBGP 路由：通告和存储\u003c/a\u003e\u003c/li\u003e\n          \u003cli\u003e\u003ca href=\"#bgp-决策过程总结\" id=\"markdown-toc-bgp-决策过程总结\"\u003eBGP 决策过程总结\u003c/a\u003e\u003c/li\u003e\n        \u003c/ul\u003e\n      \u003c/li\u003e\n      \u003cli\u003e\u003ca href=\"#65-controlling-bgp-routes\" id=\"markdown-toc-65-controlling-bgp-routes\"\u003e6.5 Controlling BGP Routes\u003c/a\u003e        \u003cul\u003e\n          \u003cli\u003e\u003ca href=\"#origintype-code-1\" id=\"markdown-toc-origintype-code-1\"\u003eORIGIN（type code 1)\u003c/a\u003e\u003c/li\u003e\n          \u003cli\u003e\u003ca href=\"#as_path\" id=\"markdown-toc-as_path\"\u003eAS_PATH\u003c/a\u003e\u003c/li\u003e\n          \u003cli\u003e\u003ca href=\"#next_hop\" id=\"markdown-toc-next_hop\"\u003eNEXT_HOP\u003c/a\u003e\u003c/li\u003e\n        \u003c/ul\u003e\n      \u003c/li\u003e\n      \u003cli\u003e\u003ca href=\"#66-route-filtering-and-attribute-manipulation\" id=\"markdown-toc-66-route-filtering-and-attribute-manipulation\"\u003e6.6 Route Filtering and Attribute Manipulation\u003c/a\u003e\u003c/li\u003e\n      \u003cli\u003e\u003ca href=\"#67-bgp-4-aggregation\" id=\"markdown-toc-67-bgp-4-aggregation\"\u003e6.7 BGP-4 Aggregation\u003c/a\u003e\u003c/li\u003e\n      \u003cli\u003e\u003ca href=\"#68-looking-ahead\" id=\"markdown-toc-68-looking-ahead\"\u003e6.8 Looking Ahead\u003c/a\u003e\u003c/li\u003e\n      \u003cli\u003e\u003ca href=\"#69-frequently-asked-questions\" id=\"markdown-toc-69-frequently-asked-questions\"\u003e6.9 Frequently Asked Questions\u003c/a\u003e        \u003cul\u003e\n          \u003cli\u003e\u003ca href=\"#是否应该将-bgp-路由注入-igp\" id=\"markdown-toc-是否应该将-bgp-路由注入-igp\"\u003e是否应该将 BGP 路由注入 IGP？\u003c/a\u003e\u003c/li\u003e\n        \u003c/ul\u003e\n      \u003c/li\u003e\n      \u003cli\u003e\u003ca href=\"#61-references\" id=\"markdown-toc-61-references\"\u003e6.1 References\u003c/a\u003e\u003c/li\u003e\n    \u003c/ul\u003e\n  \u003c/li\u003e\n  \u003cli\u003e\u003ca href=\"#7-冗余对称和负载均衡\" id=\"markdown-toc-7-冗余对称和负载均衡\"\u003e7 冗余、对称和负载均衡\u003c/a\u003e    \u003cul\u003e\n      \u003cli\u003e\u003ca href=\"#71-冗余\" id=\"markdown-toc-71-冗余\"\u003e7.1 冗余\u003c/a\u003e        \u003cul\u003e\n          \u003cli\u003e\u003ca href=\"#设置默认路由\" id=\"markdown-toc-设置默认路由\"\u003e设置默认路由\u003c/a\u003e            \u003cul\u003e\n              \u003cli\u003e\u003ca href=\"#动态学习默认路由\" id=\"markdown-toc-动态学习默认路由\"\u003e动态学习默认路由\u003c/a\u003e\u003c/li\u003e\n              \u003cli\u003e\u003ca href=\"#静态配置默认路由\" id=\"markdown-toc-静态配置默认路由\"\u003e静态配置默认路由\u003c/a\u003e\u003c/li\u003e\n            \u003c/ul\u003e\n          \u003c/li\u003e\n        \u003c/ul\u003e\n      \u003c/li\u003e\n      \u003cli\u003e\u003ca href=\"#72-对称\" id=\"markdown-toc-72-对称\"\u003e7.2 对称\u003c/a\u003e\u003c/li\u003e\n      \u003cli\u003e\u003ca href=\"#73-非对称路由\" id=\"markdown-toc-73-非对称路由\"\u003e7.3 非对称路由\u003c/a\u003e\u003c/li\u003e\n      \u003cli\u003e\u003ca href=\"#74-不同场景下对三者的权衡\" id=\"markdown-toc-74-不同场景下对三者的权衡\"\u003e7.4 不同场景下对三者的权衡\u003c/a\u003e\u003c/li\u003e\n      \u003cli\u003e\u003ca href=\"#75-looking-ahead\" id=\"markdown-toc-75-looking-ahead\"\u003e7.5 Looking Ahead\u003c/a\u003e\u003c/li\u003e\n      \u003cli\u003e\u003ca href=\"#76-frequently-asked-questions\" id=\"markdown-toc-76-frequently-asked-questions\"\u003e7.6 Frequently Asked Questions\u003c/a\u003e\u003c/li\u003e\n    \u003c/ul\u003e\n  \u003c/li\u003e\n  \u003cli\u003e\u003ca href=\"#8-as-内部路由控制\" id=\"markdown-toc-8-as-内部路由控制\"\u003e8 AS 内部路由控制\u003c/a\u003e    \u003cul\u003e\n      \u003cli\u003e\u003ca href=\"#81-非-bgp-路由器和-bgp-路由器的交互\" id=\"markdown-toc-81-非-bgp-路由器和-bgp-路由器的交互\"\u003e8.1 非 BGP 路由器和 BGP 路由器的交互\u003c/a\u003e        \u003cul\u003e\n          \u003cli\u003e\u003ca href=\"#811-bgp-注入-igp\" id=\"markdown-toc-811-bgp-注入-igp\"\u003e8.1.1 BGP 注入 IGP\u003c/a\u003e\u003c/li\u003e\n          \u003cli\u003e\u003ca href=\"#812-静态配置默认路由\" id=\"markdown-toc-812-静态配置默认路由\"\u003e8.1.2 静态配置默认路由\u003c/a\u003e\u003c/li\u003e\n        \u003c/ul\u003e\n      \u003c/li\u003e\n      \u003cli\u003e\u003ca href=\"#82-bgp-policies-conflicting-with-internal-defaults\" id=\"markdown-toc-82-bgp-policies-conflicting-with-internal-defaults\"\u003e8.2 BGP Policies Conflicting with Internal Defaults\u003c/a\u003e        \u003cul\u003e\n          \u003cli\u003e\u003ca href=\"#821-例子主备-bgp-策略和-igp-默认行为冲突导致环路\" id=\"markdown-toc-821-例子主备-bgp-策略和-igp-默认行为冲突导致环路\"\u003e8.2.1 例子：主备 BGP 策略和 IGP 默认行为冲突导致环路\u003c/a\u003e            \u003cul\u003e\n              \u003cli\u003e\u003ca href=\"#方案-1-修改-igp-metric\" id=\"markdown-toc-方案-1-修改-igp-metric\"\u003e方案 1: 修改 IGP Metric\u003c/a\u003e\u003c/li\u003e\n              \u003cli\u003e\u003ca href=\"#方案-2-直连-rtc-和-rtd\" id=\"markdown-toc-方案-2-直连-rtc-和-rtd\"\u003e方案 2: 直连 RTC 和 RTD\u003c/a\u003e\u003c/li\u003e\n              \u003cli\u003e\u003ca href=\"#方案-3-transit-routers-都跑-bgp\" id=\"markdown-toc-方案-3-transit-routers-都跑-bgp\"\u003e方案 3: Transit Routers 都跑 BGP\u003c/a\u003e\u003c/li\u003e\n              \u003cli\u003e\u003ca href=\"#方案-4-控制默认路由自动注入\" id=\"markdown-toc-方案-4-控制默认路由自动注入\"\u003e方案 4: 控制默认路由自动注入\u003c/a\u003e\u003c/li\u003e\n            \u003c/ul\u003e\n          \u003c/li\u003e\n          \u003cli\u003e\u003ca href=\"#822-defaults-inside-the-as-other-bgp-policies\" id=\"markdown-toc-822-defaults-inside-the-as-other-bgp-policies\"\u003e8.2.2 Defaults Inside the AS: Other BGP Policies\u003c/a\u003e\u003c/li\u003e\n        \u003c/ul\u003e\n      \u003c/li\u003e\n      \u003cli\u003e\u003ca href=\"#83-策略路由policy-routing\" id=\"markdown-toc-83-策略路由policy-routing\"\u003e8.3 策略路由（Policy Routing）\u003c/a\u003e\u003c/li\u003e\n      \u003cli\u003e\u003ca href=\"#84-looking-ahead\" id=\"markdown-toc-84-looking-ahead\"\u003e8.4 Looking Ahead\u003c/a\u003e\u003c/li\u003e\n      \u003cli\u003e\u003ca href=\"#85-frequently-asked-questions\" id=\"markdown-toc-85-frequently-asked-questions\"\u003e8.5 Frequently Asked Questions\u003c/a\u003e\u003c/li\u003e\n    \u003c/ul\u003e\n  \u003c/li\u003e\n  \u003cli\u003e\u003ca href=\"#9-大型-as-控制管理\" id=\"markdown-toc-9-大型-as-控制管理\"\u003e9 大型 AS 控制管理\u003c/a\u003e\u003c/li\u003e\n  \u003cli\u003e\u003ca href=\"#91-路由反射器route-reflectors\" id=\"markdown-toc-91-路由反射器route-reflectors\"\u003e9.1 路由反射器（Route Reflectors）\u003c/a\u003e    \u003cul\u003e\n      \u003cli\u003e\u003ca href=\"#911-没有-rr-的拓扑full-mesh\" id=\"markdown-toc-911-没有-rr-的拓扑full-mesh\"\u003e9.1.1 没有 RR 的拓扑：full-mesh\u003c/a\u003e\u003c/li\u003e\n      \u003cli\u003e\u003ca href=\"#912-有-rr-的拓扑\" id=\"markdown-toc-912-有-rr-的拓扑\"\u003e9.1.2 有 RR 的拓扑\u003c/a\u003e\u003c/li\u003e\n      \u003cli\u003e\u003ca href=\"#913-路由反射原则\" id=\"markdown-toc-913-路由反射原则\"\u003e9.1.3 路由反射原则\u003c/a\u003e\u003c/li\u003e\n      \u003cli\u003e\u003ca href=\"#914-rr-高可用\" id=\"markdown-toc-914-rr-高可用\"\u003e9.1.4 RR 高可用\u003c/a\u003e\u003c/li\u003e\n      \u003cli\u003e\u003ca href=\"#915-rr-拓扑\" id=\"markdown-toc-915-rr-拓扑\"\u003e9.1.5 RR 拓扑\u003c/a\u003e\u003c/li\u003e\n    \u003c/ul\u003e\n  \u003c/li\u003e\n  \u003cli\u003e\u003ca href=\"#10-设计稳定的因特网\" id=\"markdown-toc-10-设计稳定的因特网\"\u003e10 设计稳定的因特网\u003c/a\u003e    \u003cul\u003e\n      \u003cli\u003e\u003ca href=\"#101-因特网路由的不稳定性\" id=\"markdown-toc-101-因特网路由的不稳定性\"\u003e10.1 因特网路由的不稳定性\u003c/a\u003e\u003c/li\u003e\n      \u003cli\u003e\u003ca href=\"#102-bgp-stability-features\" id=\"markdown-toc-102-bgp-stability-features\"\u003e10.2 BGP Stability Features\u003c/a\u003e\u003c/li\u003e\n    \u003c/ul\u003e\n  \u003c/li\u003e\n  \u003cli\u003e\u003ca href=\"#iv-internet-routing-device-configuration\" id=\"markdown-toc-iv-internet-routing-device-configuration\"\u003eIV: Internet Routing Device Configuration\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003chr/\u003e\n\n\u003ch1 id=\"引言\"\u003e引言\u003c/h1\u003e\n\n\u003cp\u003e互联网（Internet）起源于 20 世纪 60 年代（\u003ccode class=\"language-plaintext highlighter-rouge\"\u003e1960s\u003c/code\u003e）的一个学术实验。\u003c/p\u003e\n\n\u003cp\u003e\u003cstrong\u003e\u003cmark\u003e一些人惊讶于网络会发生故障，另外一些人则惊讶于网络竟然会长时间良好地运行\u003c/mark\u003e\u003c/strong\u003e。\u003c/p\u003e\n\n\u003ch2 id=\"目标\"\u003e目标\u003c/h2\u003e\n\n\u003cp\u003e本书致力于使读者成为\u003cstrong\u003e将自有网络集成到全球互联网\u003c/strong\u003e（integrating your network\ninto the global Internet）领域的专家。\u003c/p\u003e\n\n\u003cp\u003e本书致力于解决实际问题，书中包含大量的架构图、拓扑图和真实场景示例，内容全面而且\n易于上手（comprehensive and accessible）。\u003c/p\u003e\n\n\u003ch2 id=\"目标读者\"\u003e目标读者\u003c/h2\u003e\n\n\u003cp\u003e需要将自有网络接入互联网的公司的网络管理员、集成者、架构师。\u003c/p\u003e\n\n\u003cp\u003e不需要太多 TCP/IP 基础。\u003c/p\u003e\n\n\u003ch1 id=\"i-当代互联网the-contemporary-internet\"\u003eI: 当代互联网（The Contemporary Internet）\u003c/h1\u003e\n\n\u003cp\u003e路由问题和解决方案（routing problems and solutions）的复杂性和当代互联网的增长与\n演进密切相关。\u003c/p\u003e\n\n\u003cp\u003e因此，在深入到路由协议细节之前，先了解互联网的发展历史，会对理解问题非常有帮助。\u003c/p\u003e\n\n\u003cp\u003e\u003ca name=\"chap_1\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003ch1 id=\"1-互联网的演进\"\u003e1 互联网的演进\u003c/h1\u003e\n\n\u003cp\u003e介绍互联网的发展历史，主要组件，理解互联网现在面临的挑战，以及如何构建可扩展互连网络（internetworks）。\u003c/p\u003e\n\n\u003cp\u003e\u003ca name=\"chap_1.1\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003ch2 id=\"11-互联网起源及近史\"\u003e1.1 互联网：起源及近史\u003c/h2\u003e\n\n\u003ch3 id=\"arpanet\"\u003eARPANET\u003c/h3\u003e\n\n\u003cp\u003e\u003cstrong\u003e1969 年 12 月\u003c/strong\u003e，四个节点、通过 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003e56kbps\u003c/code\u003e 电路连接的试验网络 ARPANET。\u003c/p\u003e\n\n\u003cp\u003e这项技术大获成功，随后几千个大型组织和政府机构将他们的私有网络连接到了 ARPANET。\u003c/p\u003e\n\n\u003cp align=\"center\"\u003e\u003cimg src=\"/assets/img/internet-routing-arch/1-1.PNG\" width=\"60%\" height=\"60%\"/\u003e\u003c/p\u003e\n\u003cp align=\"center\"\u003e图 1-1 ARPANET Architecture, 1969-12 \u003c/p\u003e\n\n\u003cp align=\"center\"\u003e\u003cimg src=\"/assets/img/internet-routing-arch/1-2.PNG\" width=\"60%\" height=\"60%\"/\u003e\u003c/p\u003e\n\u003cp align=\"center\"\u003e图 1-2 ARPANET Architecture, 1976-07 \u003c/p\u003e\n\n\u003cp\u003e\u003cstrong\u003e\u003cmark\u003e这就是互联网（Internet）的前身\u003c/mark\u003e\u003c/strong\u003e。\u003c/p\u003e\n\n\u003cp\u003eARPANET \u003cstrong\u003e\u003cmark\u003e禁止用于商业目的\u003c/mark\u003e\u003c/strong\u003e，不过大量的接入还是导致了扩展性和链路拥塞问题，\n因此 NSF 开始研究 NSFNET。\u003c/p\u003e\n\n\u003ch3 id=\"nsfnet\"\u003eNSFNET\u003c/h3\u003e\n\n\u003cp\u003eNSFNET 是为了解决 ARPANET 的拥塞问题。设计：\u003c/p\u003e\n\n\u003col\u003e\n  \u003cli\u003e多个区域网络（regional networks）和对等网络（peer networks），\u003c/li\u003e\n  \u003cli\u003e骨干网（backbone）：NSFNET 的核心\u003c/li\u003e\n  \u003cli\u003eregional networks 和 peer networks 都接入骨干网\u003c/li\u003e\n  \u003cli\u003e带宽升级到 T1（1.544 Mbps，1988），后来又到 T3（45 Mbps，1991）\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003cp align=\"center\"\u003e\u003cimg src=\"/assets/img/internet-routing-arch/1-3.PNG\" width=\"60%\" height=\"60%\"/\u003e\u003c/p\u003e\n\u003cp align=\"center\"\u003e图 1-3 The NSFNET-Based Internet Environment \u003c/p\u003e\n\n\u003cul\u003e\n  \u003cli\u003e1990 年左右，NSFNET 仍然是用于科研和学术目的。之后，开始出现 ISP 产业。\u003c/li\u003e\n  \u003cli\u003e1990 年之后，这张网络开始连接到欧洲和亚洲。\u003c/li\u003e\n  \u003cli\u003e\u003cstrong\u003e\u003cmark\u003e1995 年，这张网络完成了自己的历史使命\u003c/mark\u003e\u003c/strong\u003e。\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch3 id=\"the-internet-today\"\u003eThe Internet Today\u003c/h3\u003e\n\n\u003cp\u003e今天的互联网是从一个\u003cstrong\u003e\u003cmark\u003e核心网络\u003c/mark\u003e\u003c/strong\u003e（core network，也就是 NSFNET）\n转变成的由\u003cstrong\u003e\u003cmark\u003e商业提供商\u003c/mark\u003e\u003c/strong\u003e运营的分布式网络，这些供应商网络通过主要的\n网络交换节点或直连而连接到一起。\u003c/p\u003e\n\n\u003cp align=\"center\"\u003e\u003cimg src=\"/assets/img/internet-routing-arch/1-4.PNG\" width=\"60%\" height=\"60%\"/\u003e\u003c/p\u003e\n\u003cp align=\"center\"\u003e图 1-4 The General Structure of Today\u0026#39;s Internet\u003c/p\u003e\n\n\u003cp\u003eISP 在多个 region 都提供连接接入点，称为 \u003cstrong\u003e\u003cmark\u003ePOP\u003c/mark\u003e\u003c/strong\u003e（Points of Presence）。\u003c/p\u003e\n\n\u003cp\u003e\u003ca name=\"chap_2\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003ch1 id=\"2-isp-服务和特点\"\u003e2 ISP 服务和特点\u003c/h1\u003e\n\n\u003cp\u003e\u003ca name=\"chap_2.1\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003ch2 id=\"21-isp-services\"\u003e2.1 ISP Services\u003c/h2\u003e\n\n\u003cp\u003e想了解更多关于交换机、VLAN、广播域等知识，推荐下面的书：\u003c/p\u003e\n\n\u003cul\u003e\n  \u003cli\u003e\u003cstrong\u003e\u003cem\u003eInterconnections: Bridges, Routers, Switches, and Internetworking Protocols\u003c/em\u003e\u003c/strong\u003e,\n  Second Edition (Addison-Wesley, 1999) by Radia Perlman\u003c/li\u003e\n  \u003cli\u003e\u003cstrong\u003e\u003cem\u003eCisco LAN Switching\u003c/em\u003e\u003c/strong\u003e (Cisco Press, 1999) by Kennedy Clark and Kevin Hamilton.\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003e\u003ca name=\"chap_3\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003ch1 id=\"3-ip-寻址和分配\"\u003e3 IP 寻址和分配\u003c/h1\u003e\n\n\u003ch2 id=\"31-history-of-internet-addressing\"\u003e3.1 History of Internet Addressing\u003c/h2\u003e\n\n\u003ch2 id=\"32-ip-address-space-depletion\"\u003e3.2 IP Address Space Depletion\u003c/h2\u003e\n\n\u003cp\u003eCIDR: Classless Inter-domain Routing\u003c/p\u003e\n\n\u003cp\u003e路由条目越多，所需的处理能力和内存空间就越多。\u003c/p\u003e\n\n\u003cp\u003e\u003cstrong\u003e\u003cmark\u003e路由表规模在 1991~1995 年期间每 10 个月就翻一番\u003c/mark\u003e\u003c/strong\u003e：\u003c/p\u003e\n\n\u003cp align=\"center\"\u003e\u003cimg src=\"/assets/img/internet-routing-arch/3-9.PNG\" width=\"60%\" height=\"60%\"/\u003e\u003c/p\u003e\n\u003cp align=\"center\"\u003e图 3-9 The Growth of Internet Routing Tables \u003c/p\u003e\n\n\u003cp\u003e\u003cstrong\u003e\u003cmark\u003eCIDR\u003c/mark\u003e\u003c/strong\u003e 相比于之前的有类别 IP 地址（classful IP addresses），是革命性的一步。\n通过 prefix 做路由聚合，\u003cstrong\u003e\u003cmark\u003e大大减小路由表的规模\u003c/mark\u003e\u003c/strong\u003e。\u003c/p\u003e\n\n\u003cp align=\"center\"\u003e\u003cimg src=\"/assets/img/internet-routing-arch/3-11.PNG\" width=\"60%\" height=\"60%\"/\u003e\u003c/p\u003e\n\u003cp align=\"center\"\u003e图 3-11 Classful Addressing Versus CIDR-Based Addressing\u003c/p\u003e\n\n\u003cp\u003e按照\u003cstrong\u003e最长前缀匹配算法（LPM）\u003c/strong\u003e选择路由。\u003c/p\u003e\n\n\u003cp align=\"center\"\u003e\u003cimg src=\"/assets/img/internet-routing-arch/3-12.PNG\" width=\"60%\" height=\"60%\"/\u003e\u003c/p\u003e\n\u003cp align=\"center\"\u003e图 3-12 Longest Match\u003c/p\u003e\n\n\u003cp\u003e如图 3-12，如果因为一些原因 path 1 路由失效了，那会用到下一个最长匹配，在图中就\n是 path 2。\u003c/p\u003e\n\n\u003ch3 id=\"将自己聚合的路由指向黑洞\"\u003e将自己聚合的路由指向黑洞\u003c/h3\u003e\n\n\u003cp\u003e每个路由器会对外通告自己聚合的路由，表明自己到这些路由是可达的。\u003c/p\u003e\n\n\u003cp\u003e但是，\u003cstrong\u003e为避免出现路由环路，每个路由器在内部，要将自己聚合的路由指向黑洞\u003c/strong\u003e，即\n，\u003cstrong\u003e在路由器内部，丢弃所有到自己聚合的路由的包\u003c/strong\u003e。来看个具体的例子。\u003c/p\u003e\n\n\u003cp align=\"center\"\u003e\u003cimg src=\"/assets/img/internet-routing-arch/3-13.PNG\" width=\"60%\" height=\"60%\"/\u003e\u003c/p\u003e\n\u003cp align=\"center\"\u003e图 3-13 Following Less-Specific Routes of a Network\u0026#39;s Own Aggregate Causes Loops\u003c/p\u003e\n\n\u003cp\u003eISP1 的配置：\u003c/p\u003e\n\n\u003col\u003e\n  \u003cli\u003e默认路由指向 ISP2\u003c/li\u003e\n  \u003cli\u003eISP1 到 Foonet 网络 198.32.1.0/24 可达\u003c/li\u003e\n  \u003cli\u003eISP1 经过路由聚合，对外通告自己到 198.32.0.0/13 可达\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003cp\u003e则，当 ISP1 和 Foonet 的网络发生故障之后，目的是 198.32.1.1 的流量从 ISP2 到达\nISP1 时，会匹配到默认路由，流量会绕回 ISP2，形成环路。\u003c/p\u003e\n\n\u003cp\u003e解决办法是：在 ISP1 的路由表内添加一条到 198.32.0.0/13 的 null 路由，将所有流量\n丢弃。这样网络正常时，流量会匹配 198.32.1.0/24 这条路由；网络异常导致这条路由失\n效后，流量匹配到 198.32.0.0/13，丢弃所有流量。\u003c/p\u003e\n\n\u003ch1 id=\"ii-路由协议基础routing-protocol-basics\"\u003eII: 路由协议基础（Routing Protocol Basics）\u003c/h1\u003e\n\n\u003cp\u003e本书主要介绍\u003cstrong\u003e\u003cmark\u003e外部网关协议\u003c/mark\u003e\u003c/strong\u003e（exterior gateway protocols），即\n\u003cstrong\u003e\u003cmark\u003e不同自治系统（AS）之间的路由\u003c/mark\u003e\u003c/strong\u003e。但先了解一下内部网关协议（internal gateway protocols）\n会非常有帮助。\u003c/p\u003e\n\n\u003cp\u003e\u003ca name=\"chap_4\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003ch1 id=\"4-域间路由基础\"\u003e4 域间路由基础\u003c/h1\u003e\n\n\u003cp\u003e\u003cstrong\u003e\u003cmark\u003e互联网是由自治系统（AS）组成的\u003c/mark\u003e\u003c/strong\u003e，这些 AS 由\u003cstrong\u003e\u003cmark\u003e不同组织\u003c/mark\u003e\u003c/strong\u003e\n（organization）管理，拥有不同的\u003cstrong\u003e\u003cmark\u003e路由策略\u003c/mark\u003e\u003c/strong\u003e。\u003c/p\u003e\n\n\u003cp\u003e\u003ca name=\"chap_4.1\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003ch2 id=\"41-路由器和路由routers-and-routing\"\u003e4.1 路由器和路由（Routers and Routing）\u003c/h2\u003e\n\n\u003cp\u003e内部网关协议（IGP）是为\u003cstrong\u003e\u003cmark\u003e企业网\u003c/mark\u003e\u003c/strong\u003e（enterprise）设计的，\n\u003cstrong\u003e\u003cmark\u003e不适用于大型网络\u003c/mark\u003e\u003c/strong\u003e，例如上千个节点、有上万条路由的网络。\n因此引入了外部网关协议（EGP），例如\u003cstrong\u003e边界网关协议\u003c/strong\u003e（BGP）。\u003c/p\u003e\n\n\u003cp\u003e本章介绍 IGP 基础。\u003c/p\u003e\n\n\u003ch2 id=\"42-路由协议\"\u003e4.2 路由协议\u003c/h2\u003e\n\n\u003cp\u003e大部分路由协议都可以归为两类分布式路由算法：\u003c/p\u003e\n\n\u003col\u003e\n  \u003cli\u003e链路-状态（link-state）\u003c/li\u003e\n  \u003cli\u003e距离矢量（distance vector）：\u003cstrong\u003e\u003cmark\u003e跳数\u003c/mark\u003e\u003c/strong\u003e\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003ch3 id=\"距离矢量算法\"\u003e距离矢量算法\u003c/h3\u003e\n\n\u003cp\u003e为每条路由维护一个\u003cstrong\u003e距离矢量\u003c/strong\u003e（vector of distances），其中“距离”用跳数（hops）或类似指标衡量。\u003c/p\u003e\n\n\u003cp\u003e每个节点独立计算最短路径，因此是分布式算法。\u003c/p\u003e\n\n\u003cp\u003e每个节点向邻居通告自己已知的最短路径，邻居根据收到的消息判断是否有更短路径，\n如果有就更新自己的路由信息，然后再次对外通告最短路径。如此反复，直到整个网络收敛到一致状态。\u003c/p\u003e\n\n\u003cp\u003e\u003cstrong\u003e\u003cmark\u003e早期 IGP 代表\u003c/mark\u003e\u003c/strong\u003e：RIP（Routing Information Protocol）\u003c/p\u003e\n\n\u003cp\u003e早期 IGP 缺点：\u003c/p\u003e\n\n\u003col\u003e\n  \u003cli\u003e早期协议（RIP-1）\u003cstrong\u003e\u003cmark\u003e只计算跳数\u003c/mark\u003e\u003c/strong\u003e（相当于每跳权重一样），没有优先级和权重，而\u003cstrong\u003e\u003cmark\u003e跳数最少的路径不一定最优\u003c/mark\u003e\u003c/strong\u003e\u003c/li\u003e\n  \u003cli\u003e早期协议（RIP-1）\u003cstrong\u003e\u003cmark\u003e规定了最大跳数\u003c/mark\u003e\u003c/strong\u003e（一般是 15），因此\u003cstrong\u003e\u003cmark\u003e限制了网络的规模\u003c/mark\u003e\u003c/strong\u003e（但解决了 count to infinity 问题）\u003c/li\u003e\n  \u003cli\u003e早期协议（RIP-1）\u003cstrong\u003e\u003cmark\u003e靠定时器触发路由通告\u003c/mark\u003e\u003c/strong\u003e（没有事件触发机制），因此路由发生变动时，\u003cstrong\u003e\u003cmark\u003e收敛比较慢\u003c/mark\u003e\u003c/strong\u003e\u003c/li\u003e\n  \u003cli\u003e第一代协议\u003cstrong\u003e\u003cmark\u003e不支持 CIDR\u003c/mark\u003e\u003c/strong\u003e\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003cp\u003e\u003cstrong\u003e\u003cmark\u003e新 IGP 解决了以上问题\u003c/mark\u003e\u003c/strong\u003e，协议代表：\u003c/p\u003e\n\n\u003col\u003e\n  \u003cli\u003eRIP-2\u003c/li\u003e\n  \u003cli\u003eEIGRP\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003cp\u003e\u003cstrong\u003e距离矢量协议的优点\u003c/strong\u003e：\u003c/p\u003e\n\n\u003col\u003e\n  \u003cli\u003e简单\u003c/li\u003e\n  \u003cli\u003e成熟\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003cp\u003e\u003cstrong\u003e\u003cmark\u003eBGP 也是距离矢量协议\u003c/mark\u003e\u003c/strong\u003e，但它是通过引入路径矢量（path vector）解决 count to\ninfinity 问题。path vector 包含了路径上的 ASN，相同 ASN 的路径只会接受一条，\n因此消除了路由环路。BGP 还支持基于域的策略（domain-based policies）。后面会详细介绍 BGP。\u003c/p\u003e\n\n\u003ch3 id=\"链路状态算法\"\u003e链路状态算法\u003c/h3\u003e\n\n\u003cul\u003e\n  \u003cli\u003e距离矢量算法：交换路由表信息\u003c/li\u003e\n  \u003cli\u003e链路状态算法：\u003cstrong\u003e\u003cmark\u003e交换邻居的链路状态信息\u003c/mark\u003e\u003c/strong\u003e，比距离矢量算法\u003cstrong\u003e\u003cmark\u003e复杂\u003c/mark\u003e\u003c/strong\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003e分布式数据库（replicated distributed database），存储链路状态（link state）。\u003c/p\u003e\n\n\u003cp\u003e代表：\u003c/p\u003e\n\n\u003col\u003e\n  \u003cli\u003e\u003cstrong\u003e\u003cmark\u003eOSFP\u003c/mark\u003e\u003c/strong\u003e\u003c/li\u003e\n  \u003cli\u003e\u003cstrong\u003e\u003cmark\u003eIS-IS\u003c/mark\u003e\u003c/strong\u003e\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003cp\u003e\u003cstrong\u003e\u003cmark\u003e路由可扩展性和收敛速度都有改善，可以支持更大的网络\u003c/mark\u003e\u003c/strong\u003e，但仍然\n\u003cstrong\u003e\u003cmark\u003e只适用于域内路由\u003c/mark\u003e\u003c/strong\u003e（interior routing）。\u003c/p\u003e\n\n\u003cp\u003e大部分大型服务供应商在域内（intra-domain）都使用 link-state 协议，主要是看中它的\n\u003cstrong\u003e\u003cmark\u003e快速收敛\u003c/mark\u003e\u003c/strong\u003e特性。\u003c/p\u003e\n\n\u003ch2 id=\"43-将互联网分割为自治系统as\"\u003e4.3 将互联网分割为自治系统（AS）\u003c/h2\u003e\n\n\u003cp\u003e\u003cstrong\u003e\u003cmark\u003e外部路由协议\u003c/mark\u003e\u003c/strong\u003e（Exterior routing protocol）的提出是为了\u003cstrong\u003e\u003cmark\u003e解决两个问题\u003c/mark\u003e\u003c/strong\u003e：\u003c/p\u003e\n\n\u003col\u003e\n  \u003cli\u003e\u003cstrong\u003e\u003cmark\u003e控制路由表的膨胀\u003c/mark\u003e\u003c/strong\u003e\u003c/li\u003e\n  \u003cli\u003e提供结构化的互联网视图\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003cp\u003e将路由域划分为独立的管理单元，称为\u003cstrong\u003e\u003cmark\u003e自治系统\u003c/mark\u003e\u003c/strong\u003e（autonomous systems，AS）。\n每个 AS 有自己\u003cstrong\u003e\u003cmark\u003e独立的路由策略和 IGP\u003c/mark\u003e\u003c/strong\u003e。\u003c/p\u003e\n\n\u003cp\u003e当前域间路由的事实标准：\u003cstrong\u003e\u003cmark\u003eBGP-4\u003c/mark\u003e\u003c/strong\u003e。\u003c/p\u003e\n\n\u003cblockquote\u003e\n  \u003cp\u003eintra-domain 和 inter-domain routing 的主要区别\u003c/p\u003e\n\n  \u003cul\u003e\n    \u003cli\u003eintra-domain 主要解决\u003cstrong\u003e\u003cmark\u003e技术需求\u003c/mark\u003e\u003c/strong\u003e\u003c/li\u003e\n    \u003cli\u003einter-domain 主要\u003cstrong\u003e\u003cmark\u003e反映网络和公司的政治与商业关系\u003c/mark\u003e\u003c/strong\u003e\u003c/li\u003e\n  \u003c/ul\u003e\n\u003c/blockquote\u003e\n\n\u003ch4 id=\"autonomous-systems\"\u003eAutonomous Systems\u003c/h4\u003e\n\n\u003cp\u003e一个 \u003cstrong\u003eAS 是拥有如下特点的一组路由器\u003c/strong\u003e：\u003c/p\u003e\n\n\u003col\u003e\n  \u003cli\u003e共享\u003cstrong\u003e\u003cmark\u003e相同的路由策略\u003c/mark\u003e\u003c/strong\u003e\u003c/li\u003e\n  \u003cli\u003e被作为一个整体进行\u003cstrong\u003e管理\u003c/strong\u003e\u003c/li\u003e\n  \u003cli\u003e通常路由器之间运行\u003cstrong\u003e\u003cmark\u003e同一种 IGP 协议\u003c/mark\u003e\u003c/strong\u003e\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003cp\u003e每个 AS 有一个编号，称为 ASN。AS 之间通过 BGP 交换路由。\u003c/p\u003e\n\n\u003cp align=\"center\"\u003e\u003cimg src=\"/assets/img/internet-routing-arch/4-2.PNG\" width=\"60%\" height=\"60%\"/\u003e\u003c/p\u003e\n\u003cp align=\"center\"\u003e图 4-2 AS 之间的路由交换\u003c/p\u003e\n\n\u003ch3 id=\"三种-as-类型\"\u003e三种 AS 类型\u003c/h3\u003e\n\n\u003col\u003e\n  \u003cli\u003estub AS：末梢 AS，只有一条默认出口，因此不需要同步路由信息\u003c/li\u003e\n  \u003cli\u003enon-transient AS：只通告自己的路由，不传播学习到的路由\u003c/li\u003e\n  \u003cli\u003etransit AS：既通告自己的路由，又传播学习到的路由\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003cp align=\"center\"\u003e\u003cimg src=\"/assets/img/internet-routing-arch/4-3.PNG\" width=\"60%\" height=\"60%\"/\u003e\u003c/p\u003e\n\u003cp align=\"center\"\u003e图 4-3 Single-Homed (Stub) AS\u003c/p\u003e\n\n\u003cp align=\"center\"\u003e\u003cimg src=\"/assets/img/internet-routing-arch/4-5.PNG\" width=\"60%\" height=\"60%\"/\u003e\u003c/p\u003e\n\u003cp align=\"center\"\u003e图 4-5 Multihomed Nontransit AS Example\u003c/p\u003e\n\n\u003cp align=\"center\"\u003e\u003cimg src=\"/assets/img/internet-routing-arch/4-6.PNG\" width=\"60%\" height=\"60%\"/\u003e\u003c/p\u003e\n\u003cp align=\"center\"\u003e图 4-6 Multihomed Transit AS Using BGP Internally and Externally\u003c/p\u003e\n\n\u003ch2 id=\"45-faq\"\u003e4.5 FAQ\u003c/h2\u003e\n\n\u003ch3 id=\"domain-和-as-有什么区别\"\u003eDomain 和 AS 有什么区别？\u003c/h3\u003e\n\n\u003cp\u003e两者都是指\u003cstrong\u003e\u003cmark\u003e满足某些条件的一组路由器\u003c/mark\u003e\u003c/strong\u003e。\u003c/p\u003e\n\n\u003cul\u003e\n  \u003cli\u003eDomain 一般指\u003cstrong\u003e\u003cmark\u003e运行相同路由协议\u003c/mark\u003e\u003c/strong\u003e的一组路由器，例如一个 RIP domain 或一个 OSFP domain。\u003c/li\u003e\n  \u003cli\u003eAS 是\u003cstrong\u003e\u003cmark\u003e管理概念\u003c/mark\u003e\u003c/strong\u003e，\u003cstrong\u003e作为整体统一管理的、有相同路由策略\u003c/strong\u003e的一组路由器是一个 AS。\n\u003cstrong\u003e\u003cmark\u003e一个 AS 可能包含一个或多个 domain\u003c/mark\u003e\u003c/strong\u003e。\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch3 id=\"bgp-是用于-as-之间的那用于-as-内的-bgp-又是什么\"\u003eBGP 是用于 AS 之间的。那用于 AS 内的 BGP 又是什么？\u003c/h3\u003e\n\n\u003cp\u003eAS 内的 BGP 是 iBGP。\u003c/p\u003e\n\n\u003cp\u003e如果 AS 是 transit AS，那 iBGP 可以保护这个 AS 内的 nontransit routers，\n不会被大量的 AS 外路由撑爆路由表。另外，即使不是 transit AS，iBGP 也可以提供更强的控制能力，\n例如本书后面会看到的选择 exit and entrance points。\u003c/p\u003e\n\n\u003cp\u003e\u003ca name=\"chap_5\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003ch1 id=\"5-边界网关协议第-4-版bgp-4\"\u003e5 边界网关协议第 4 版（BGP-4）\u003c/h1\u003e\n\n\u003cp\u003eBGP-4 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003e1993\u003c/code\u003e 年开始部署，是第一个支持路由聚合的 BGP 版本。\u003c/p\u003e\n\n\u003ch2 id=\"51-bgp-工作原理\"\u003e5.1 BGP 工作原理\u003c/h2\u003e\n\n\u003cp\u003eBGP 是一种\u003cstrong\u003e\u003cmark\u003e路径矢量协议\u003c/mark\u003e\u003c/strong\u003e（path vector protocol）。\u003c/p\u003e\n\n\u003cp\u003e\u003cstrong\u003e\u003cem\u003ePath vector\u003c/em\u003e\u003c/strong\u003e 是一条路由（network prefix）经过的所有 AS 组成的路径。\n目的是防止出现\u003cstrong\u003e\u003cmark\u003e路由环路\u003c/mark\u003e\u003c/strong\u003e。\u003c/p\u003e\n\n\u003cul\u003e\n  \u003cli\u003eBGP 使用 \u003cstrong\u003e\u003cmark\u003e\u003ccode\u003eTCP\u003c/code\u003e\u003c/mark\u003e\u003c/strong\u003e 协议，运行在 \u003cstrong\u003e\u003cmark\u003e\u003ccode\u003e179\u003c/code\u003e\u003c/mark\u003e\u003c/strong\u003e 端口。\u003c/li\u003e\n  \u003cli\u003epeer 之间建立连接之后交换全部路由，之后只交换更新的路由（\u003cstrong\u003e\u003cmark\u003e增量更新\u003c/mark\u003e\u003c/strong\u003e）\u003c/li\u003e\n  \u003cli\u003e交换路由是 \u003cstrong\u003e\u003cmark\u003e\u003ccode\u003eUPDATE\u003c/code\u003e\u003c/mark\u003e\u003c/strong\u003e 消息\u003c/li\u003e\n  \u003cli\u003e维护\u003cstrong\u003e\u003cmark\u003e路由表的版本号\u003c/mark\u003e\u003c/strong\u003e，每次路由表有更新，版本号都会递增\u003c/li\u003e\n  \u003cli\u003e通过 UPDATE 消息通告和撤回路由\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch3 id=\"bgp-消息头格式\"\u003eBGP 消息头格式\u003c/h3\u003e\n\n\u003cp align=\"center\"\u003e\u003cimg src=\"/assets/img/internet-routing-arch/5-6.PNG\" width=\"60%\" height=\"60%\"/\u003e\u003c/p\u003e\n\u003cp align=\"center\"\u003e图 5-6 BGP Message Header Format\u003c/p\u003e\n\n\u003cp\u003e字段：\u003c/p\u003e\n\n\u003col\u003e\n  \u003cli\u003eMarker：16 字节，用于 BGP 消息认证及检测 peer 是否同步\u003c/li\u003e\n  \u003cli\u003eLength: 2 字节，BGP 消息总长度，包括 header。总长度在 19~4096 字节之间。\u003c/li\u003e\n  \u003cli\u003eType: 2 字节，四种类型：\n    \u003cul\u003e\n      \u003cli\u003e\u003ccode class=\"language-plaintext highlighter-rouge\"\u003eOPEN\u003c/code\u003e\u003c/li\u003e\n      \u003cli\u003e\u003ccode class=\"language-plaintext highlighter-rouge\"\u003eUPDATE\u003c/code\u003e\u003c/li\u003e\n      \u003cli\u003e\u003ccode class=\"language-plaintext highlighter-rouge\"\u003eNOTIFICATION\u003c/code\u003e\u003c/li\u003e\n      \u003cli\u003e\u003ccode class=\"language-plaintext highlighter-rouge\"\u003eKEEPALIVE\u003c/code\u003e\u003c/li\u003e\n    \u003c/ul\u003e\n  \u003c/li\u003e\n\u003c/ol\u003e\n\n\u003ch2 id=\"52-bgp-功能协商\"\u003e5.2 BGP 功能协商\u003c/h2\u003e\n\n\u003cp\u003e检测到错误时会发送 NOTIFICATION 消息，然后关闭 peer 连接。\u003c/p\u003e\n\n\u003ch3 id=\"update-message-and-routing-information\"\u003eUPDATE Message and Routing Information\u003c/h3\u003e\n\n\u003cp\u003eUPDATE 消息:\u003c/p\u003e\n\n\u003cul\u003e\n  \u003cli\u003eNetwork Layer Reachability Information (\u003cstrong\u003e\u003cmark\u003e\u003ccode\u003eNLRI\u003c/code\u003e\u003c/mark\u003e\u003c/strong\u003e)\u003c/li\u003e\n  \u003cli\u003ePath Attributes\u003c/li\u003e\n  \u003cli\u003eUnfeasible Routes\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp align=\"center\"\u003e\u003cimg src=\"/assets/img/internet-routing-arch/5-10.PNG\" width=\"60%\" height=\"60%\"/\u003e\u003c/p\u003e\n\u003cp align=\"center\"\u003e图 5-10 BGP UPDATE Message\u003c/p\u003e\n\n\u003cp align=\"center\"\u003e\u003cimg src=\"/assets/img/internet-routing-arch/5-11.PNG\" width=\"60%\" height=\"60%\"/\u003e\u003c/p\u003e\n\u003cp align=\"center\"\u003e图 5-11 BGP Routing Update Example\u003c/p\u003e\n\n\u003ch2 id=\"53-多协议扩展multiprotocol-extensions-for-bgp-mp-bgp\"\u003e5.3 多协议扩展（Multiprotocol Extensions for BGP, MP-BGP）\u003c/h2\u003e\n\n\u003cp\u003e对 BGP-4 的兼容性扩展，支持除了 IPv4 之外的\u003cstrong\u003e\u003cmark\u003e其他协议\u003c/mark\u003e\u003c/strong\u003e（所以叫多协议），例如 IPv6。\u003c/p\u003e\n\n\u003ch2 id=\"54-tcp-md5-signature-option\"\u003e5.4 TCP MD5 Signature Option\u003c/h2\u003e\n\n\u003ch2 id=\"55-looking-ahead\"\u003e5.5 Looking Ahead\u003c/h2\u003e\n\n\u003ch2 id=\"56-frequently-asked-questions\"\u003e5.6 Frequently Asked Questions\u003c/h2\u003e\n\n\u003ch3 id=\"bgp-是否像-rip-一样定期发布路由更新消息\"\u003eBGP 是否像 RIP 一样定期发布路由更新消息？\u003c/h3\u003e\n\n\u003cp\u003e不是。只有\u003cstrong\u003e\u003cmark\u003e路由有变动时\u003c/mark\u003e\u003c/strong\u003e，才会通告，而且只通告变动的路由。\u003c/p\u003e\n\n\u003ch3 id=\"asn-在-bgp-消息中的什么地方\"\u003eASN 在 BGP 消息中的什么地方？\u003c/h3\u003e\n\n\u003cp\u003eUPDATE 消息的 AS_PATH 属性中。\u003c/p\u003e\n\n\u003ch1 id=\"iii-effective-internet-routing-designs\"\u003eIII: Effective Internet Routing Designs\u003c/h1\u003e\n\n\u003cp\u003e接下来用前面学到的知识解决实际问题。\u003c/p\u003e\n\n\u003cp\u003e\u003ca name=\"chap_6\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003ch1 id=\"6-bgp-capabilities-调优\"\u003e6 BGP Capabilities 调优\u003c/h1\u003e\n\n\u003cp\u003e从本章开始，内容从理论转向 BGP 实现。\u003c/p\u003e\n\n\u003ch2 id=\"61-building-peer-sessions\"\u003e6.1 Building Peer Sessions\u003c/h2\u003e\n\n\u003cp\u003e虽然 BGP 大部分情况都是用于 AS 之间，但是，它也可以用在 AS 内部，为 AS 内部的路\n由器提供外部路由可达信息（external destination reachability information）。\u003c/p\u003e\n\n\u003cp\u003eAS 内部的 BGP 称为 iBGP；AS 之间的 BGP 称为 eBGP。\u003c/p\u003e\n\n\u003cp align=\"center\"\u003e\u003cimg src=\"/assets/img/internet-routing-arch/6-1.PNG\" width=\"60%\" height=\"60%\"/\u003e\u003c/p\u003e\n\u003cp align=\"center\"\u003e图 6-1 iBGP 和 eBGP\u003c/p\u003e\n\n\u003cp\u003e邻居之间建立连接，然后通过 OPEN 消息进行协商，在这个过程中，peer routers 之间会\n比较 ASN 来判断他们是否属于同一个 AS。\u003c/p\u003e\n\n\u003cp\u003e\u003cstrong\u003e\u003cmark\u003eiBGP 和 eBGP 的区别\u003c/mark\u003e\u003c/strong\u003e：\u003c/p\u003e\n\n\u003col\u003e\n  \u003cli\u003e对收到的 UPDATE 消息的处理不同\u003c/li\u003e\n  \u003cli\u003e消息携带的属性不同\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003ch3 id=\"物理和逻辑连接\"\u003e物理和逻辑连接\u003c/h3\u003e\n\n\u003cp\u003eeBGP 要求邻居之间必须是物理直连的，但是有些情况下两个 AS 之间的 BGP peer 无法满足直连的要求，\n例如经过了一些非 BGP 路由器。这种情况下，需要对 BGP 做特殊配置。\u003c/p\u003e\n\n\u003cp align=\"center\"\u003e\u003cimg src=\"/assets/img/internet-routing-arch/6-2.PNG\" width=\"60%\" height=\"60%\"/\u003e\u003c/p\u003e\n\u003cp align=\"center\"\u003e图 6-2 External BGP Multihop Environment\u003c/p\u003e\n\n\u003cp\u003eiBGP 对于 peer 之间是否直连没有要求，只要 peer 之间 IP 通即可。\u003c/p\u003e\n\n\u003ch3 id=\"synchronization-within-an-as\"\u003eSynchronization Within an AS\u003c/h3\u003e\n\n\u003cp\u003eBGP 的默认行为是，只有 iBGP 收敛之后，才将 AS 内部的路由通告给其他 AS。\u003c/p\u003e\n\n\u003cp\u003e否则，会出现问题。来看个例子。\u003c/p\u003e\n\n\u003cp align=\"center\"\u003e\u003cimg src=\"/assets/img/internet-routing-arch/6-4.PNG\" width=\"60%\" height=\"60%\"/\u003e\u003c/p\u003e\n\u003cp align=\"center\"\u003e图 6-4 BGP Route Synchronization\u003c/p\u003e\n\n\u003cp\u003eISP3 里面只有 RTA 和 RTC 运行 BGP 协议。当 ISP1 将 192.213.1.0/24 通告给 ISP3 的\nRTA 之后，RTA 进一步将消息通告给 RTC。RTC 再通告给 ISP2。当 ISP2 向这个路由发送\n流量时，RTC 会将流量转发给 RTB，而 RTB 没有这个路由信息，会将流量丢弃。\u003c/p\u003e\n\n\u003cp\u003e因此，BGP 规定，从 iBGP 邻居学习到的路由不应该通告给其他 AS，除非这条路由通告 IGP\n也能访问到（The BGP rule states that a BGP router should not advertise to\nexternal neighbors destinations learned from IBGP neighbors unless those\ndestinations are also known via an IGP.）。这就是所谓的同步。如果 IGP 可达，那说\n明这条路由在 AS 内部是可达的。\u003c/p\u003e\n\n\u003cp\u003e\u003cstrong\u003e将 BGP 路由注入 IGP 路由是有代价的。\u003c/strong\u003e\u003c/p\u003e\n\n\u003cp\u003e首先，这会\u003cstrong\u003e给 IGP 节点带来额外的计算开销\u003c/strong\u003e。前面已经提到，IGP 并不是为处理大规\n模路由设计的（IGPs are not designed to handle that many routes）。\u003c/p\u003e\n\n\u003cp\u003e其次，\u003cstrong\u003e没有必要将所有外部路由都同步到所有内部节点\u003c/strong\u003e。更简单的方式通常是，AS 内\n分成 non-BGP 路由器和 BGP 路由器，non-BGP 路由器的默认路由指向 BGP 路由器。这样可\n能会导致路径并不是最优的，但是跟在 AS 内维护上千条外部路由相比，代价要小的多。\u003c/p\u003e\n\n\u003cp\u003e除了 BGP+IGP 方式之外，解决这个问题的另一个办法是，AS 内部的非边界路由器之间做\niBGP full-mesh，这样路由可以\u003cstrong\u003e通过 iBGP 保证同步\u003c/strong\u003e。向 IGP 内部插入成千上万条路\n由太恐怖了。\u003c/p\u003e\n\n\u003cp\u003e因此，一些 BGP 的实现里允许关掉同步，例如 Cisco 的 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eno synchronization\u003c/code\u003e 命令，这\n是当前的常见配置（disable BGP synchronization and rely on a full mesh of IBGP\nrouters）。\u003c/p\u003e\n\n\u003ch2 id=\"62-路由更新方式\"\u003e6.2 路由更新方式\u003c/h2\u003e\n\n\u003cp\u003e对于像互联网这样复杂的网络来说，\u003cstrong\u003e路由稳定性\u003c/strong\u003e（route stability）是一个很大的问题。\n这和链路的稳定性，以及路由的注入方式（动态/静态）有关系。\u003c/p\u003e\n\n\u003ch3 id=\"bgp-动态注入\"\u003eBGP 动态注入\u003c/h3\u003e\n\n\u003cp\u003e可以进一步分为：\u003c/p\u003e\n\n\u003cul\u003e\n  \u003cli\u003e纯动态注入：所有从 IGP 学习到的路由都注入到 BGP（通过 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eredistribute\u003c/code\u003e 命令）\u003c/li\u003e\n  \u003cli\u003e半动态注入：部分从 IGP 学习到的路由注入到 BGP（通过 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003enetwork\u003c/code\u003e 命令）\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003e动态注入：\u003c/p\u003e\n\n\u003cul\u003e\n  \u003cli\u003e优点\n    \u003cul\u003e\n      \u003cli\u003e配置简单，IGP 路由自动注入 BGP，不管是具体哪种 IGP 类型（RIP、OSPF、IS-IS 等等）\u003c/li\u003e\n    \u003c/ul\u003e\n  \u003c/li\u003e\n  \u003cli\u003e缺点\n    \u003cul\u003e\n      \u003cli\u003e可能会泄露内网路由到公网，造成安全问题\u003c/li\u003e\n      \u003cli\u003eIGP 路由抖动会影响到 BGP，想象一下几百个 AS 同时有 IGP 路由抖动给 BGP 造成\n的影响\u003c/li\u003e\n    \u003c/ul\u003e\n  \u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003e为了防止因特网的路由抖动，提出了一些技术，第十章会介绍到，一个叫 route dampening\n的进程会对抖动的路由进行惩罚，抑制它进入 BGP 的时间。\u003c/p\u003e\n\n\u003cp\u003e保证路由稳定性是一项很难的工作，因为很多因素都是不受控的，例如硬件故障。减少路由\n不稳定的一种方式是路由聚合，可以在 AS 边界做，也可以在因特网边界做。\u003c/p\u003e\n\n\u003cp\u003e最后，另一种解决路由不稳定的方式是静态注入路由。\u003c/p\u003e\n\n\u003ch3 id=\"bgp-静态注入\"\u003eBGP 静态注入\u003c/h3\u003e\n\n\u003cp\u003e静态注入的路由会一直存在于路由表，一直会被通告。\u003c/p\u003e\n\n\u003cp\u003e可以解决路由不稳定的问题，但是会导致失效的路由无法自动从路由表删除，而且静态配置\n相当繁琐，配置不当还容易产生环路。因此只在特定的场景下使用。\u003c/p\u003e\n\n\u003ch3 id=\"静态路由和动态路由例子移动网络\"\u003e静态路由和动态路由例子：移动网络\u003c/h3\u003e\n\n\u003cp\u003e移动网络中分配 IP 地址的问题。\u003c/p\u003e\n\n\u003cp\u003e移动设备希望在从一个 AS 移动到另一个 AS 的过程中，需要切换 IP 地址。因此，静态路\n由的方式不合适，只能通过动态注入 BGP 的方式。具体到实现，一种方式就是将 IGP 注入\nBGP。这会带来一些问题，前面已经分析过，例如需要对路由做过滤。\u003c/p\u003e\n\n\u003cp\u003e另一种实现方式是通过 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003enetwork\u003c/code\u003e 命令，在所有位置的边界路由器定义这些网络。\u003c/p\u003e\n\n\u003ch2 id=\"63-重叠的协议后门overlapping-protocols-backdoors\"\u003e6.3 重叠的协议：后门（Overlapping Protocols: Backdoors）\u003c/h2\u003e\n\n\u003cp\u003e路由可以通过多种协议学习，选择不同的协议会影响流量的路径。例如，如果选择一条 RIP\n路由，可能会走某链路；而选择一条 eBGP 路由，则可能会走另一条链路。\u003c/p\u003e\n\n\u003cp\u003e后门链路（backdoor link）提供了一种 IGP 路径的备选方式，可以用来替代 eBGP 路径。\n可以通过后门链路到达的 IGP 路由称作后门路由。\u003c/p\u003e\n\n\u003cp\u003e有了这种后门路由，就需要一种机制，能够使得一种协议的优先级比另一种更高。例如，\nCisco 提供的 \u003cstrong\u003e\u003cem\u003eadministrative distance\u003c/em\u003e\u003c/strong\u003e 就是这个功能。\u003c/p\u003e\n\n\u003cp\u003e通过设置不同协议的路由的优先级，使得后门路由被选中作为最优路由。\n或者，前面介绍过，通过 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003edistance\u003c/code\u003e BGP 命令也可以设置优先级。\u003c/p\u003e\n\n\u003ch2 id=\"64-bgp-路由过程\"\u003e6.4 BGP 路由过程\u003c/h2\u003e\n\n\u003cp\u003e简要查看完整的 BGP 路由处理过程。\u003c/p\u003e\n\n\u003cp\u003eBGP 是一种相当简单的协议，这也是它为什么这么灵活的原因。BGP peer 之间通过 UPDATE\n消息交换路由。BGP 路由器收到 UPDATE 消息后，运行一些策略或者对消息进行过滤，\n然后将路由转发给其他 BGP peers。\u003c/p\u003e\n\n\u003cp\u003eBGP 实现需要\u003cstrong\u003e\u003cmark\u003e维护一张 BGP 路由表\u003c/mark\u003e\u003c/strong\u003e，这张表独立于 IP 路由表的。\n如果到同一目的地有多条路由，BGP 并不会将所有这些路由都转发给 peer；而是选出最优路由，\n然后将最优路由转发给 peer。除了传递从 peer 来的 eBGP 路由，或从路由反射器客户端（RR client）\n来的 iBGP 路由之外，BGP 路由器还可以主动发起路由更新，通告它所在 AS 内的内部网络。\u003c/p\u003e\n\n\u003cp\u003e来源是本 AS 的合法的本地路由，以及从 BGP peer 学习到的最优路由，会被添加到 IP\n路由表。IP 路由表是最终的路由决策表，用于操控转发表。\u003c/p\u003e\n\n\u003cp align=\"center\"\u003e\u003cimg src=\"/assets/img/internet-routing-arch/6-8.PNG\" width=\"60%\" height=\"60%\"/\u003e\u003c/p\u003e\n\u003cp align=\"center\"\u003e图 6-8 Routing Process Overview\u003c/p\u003e\n\n\u003ch3 id=\"bgp-路由通告和存储\"\u003eBGP 路由：通告和存储\u003c/h3\u003e\n\n\u003cp\u003e根据 RFC 1771，BGP 协议中路由（route）的定义是：一条路由是\u003cstrong\u003e一个目标及其到达这个目\n标的一条路径的属性\u003c/strong\u003e组成的信息单元（a route is defined as a unit of information that pairs a destination with the attributes of a path to that destination）。\u003c/p\u003e\n\n\u003cp\u003e路由在 BGP peer 之间通过 UPDATE 消息进行通告：目标是 NLRI 字段，路径是 path 属性\n字段。\u003c/p\u003e\n\n\u003cp\u003e路由存储在 RIB（Routing Information Bases）。\u003c/p\u003e\n\n\u003cp\u003eBGP speaker 选择通告一条路由的时候，可能会修改路由的 path 属性。\u003c/p\u003e\n\n\u003cp align=\"center\"\u003e\u003cimg src=\"/assets/img/internet-routing-arch/6-9.PNG\" width=\"60%\" height=\"60%\"/\u003e\u003c/p\u003e\n\u003cp align=\"center\"\u003e图 6-9 BGP 路由表的逻辑表示\u003c/p\u003e\n\n\u003cul\u003e\n  \u003cli\u003e一个 Adj-RIB-In 逻辑上对应一个 peer，存储从 peer 学习到的路由\u003c/li\u003e\n  \u003cli\u003eLoc-RIB 存储最优路由\u003c/li\u003e\n  \u003cli\u003e一个 Adj-RIB-Out 逻辑上对应一个 peer，存储准备从这个路由器发送给对应 peer 的路由\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003e这里的逻辑图是将过程分成了三部分，每部分都有自己的存储，但实现不一定这样，事实上\n大部分实现都是共享一份路由表，以节省内存。\u003c/p\u003e\n\n\u003cp align=\"center\"\u003e\u003cimg src=\"/assets/img/internet-routing-arch/6-10.PNG\" width=\"60%\" height=\"60%\"/\u003e\u003c/p\u003e\n\u003cp align=\"center\"\u003e图 6-10 Sample Routing Environment\u003c/p\u003e\n\n\u003ch3 id=\"bgp-决策过程总结\"\u003eBGP 决策过程总结\u003c/h3\u003e\n\n\u003col\u003e\n  \u003cli\u003e如果下一跳不可达，则忽略此路由（这就是为什么有一条 IGP 路由作为下一跳如此重要\n的原因）\u003c/li\u003e\n  \u003cli\u003e选择权重最大的一条路径\u003c/li\u003e\n  \u003cli\u003e如果权重相同，选择本地偏向（local preference）最大的一条路由\u003c/li\u003e\n  \u003cli\u003e如果没有源自本地的路由（locally originated routes），并且 local preference 相\n同，则选择 AS_PATH 最短的路由\u003c/li\u003e\n  \u003cli\u003e如果 AS_PATH 相同，选择 origin type 最低（\u003ccode class=\"language-plaintext highlighter-rouge\"\u003eIGP \u0026lt; EGP \u0026lt; INCOMPLETE\u003c/code\u003e）的路由\u003c/li\u003e\n  \u003cli\u003e如果 origin type 相同，选择 MED 最低的，如果这些路由都是从同一个 AS 收到的\u003c/li\u003e\n  \u003cli\u003e如果 MED 相同，优先选择 eBGP（相比于 iBGP）\u003c/li\u003e\n  \u003cli\u003e如果前面所有条件都相同，选择经过最近的 IGP 邻居的路由——也就是选择 AS 内部最短\n的到达目的的路径\u003c/li\u003e\n  \u003cli\u003e如果内部路径也相同，那就依靠 BGP ROUTE_ID 来选择了。选择从 RID 最小的 BGP 路\n由器来的路由。对 Cisco 路由器来说，RID 就是路由器的 loopback 地址。\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003ch2 id=\"65-controlling-bgp-routes\"\u003e6.5 Controlling BGP Routes\u003c/h2\u003e\n\n\u003cp\u003e介绍路由的每个属性。\u003c/p\u003e\n\n\u003ch3 id=\"origintype-code-1\"\u003eORIGIN（type code 1)\u003c/h3\u003e\n\n\u003cul\u003e\n  \u003cli\u003e0: \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eIGP\u003c/code\u003e, NLRI that is inteior to the originating AS\u003c/li\u003e\n  \u003cli\u003e1: \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eEGP\u003c/code\u003e, NLRI learned via EGP\u003c/li\u003e\n  \u003cli\u003e2: \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eINCOMPLETE\u003c/code\u003e, NLRI learned by some means\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch3 id=\"as_path\"\u003eAS_PATH\u003c/h3\u003e\n\n\u003cp\u003eBGP 依靠这个字段实现路由无环路。里面存储了路径上的 ASN。\u003c/p\u003e\n\n\u003cp align=\"center\"\u003e\u003cimg src=\"/assets/img/internet-routing-arch/6-11.PNG\" width=\"60%\" height=\"60%\"/\u003e\u003c/p\u003e\n\u003cp align=\"center\"\u003e图 6-11 Sample Loop Condition Addressed by the AS_PATH Attribute\u003c/p\u003e\n\n\u003ch3 id=\"next_hop\"\u003eNEXT_HOP\u003c/h3\u003e\n\n\u003cp align=\"center\"\u003e\u003cimg src=\"/assets/img/internet-routing-arch/6-12.PNG\" width=\"60%\" height=\"60%\"/\u003e\u003c/p\u003e\n\u003cp align=\"center\"\u003e图 6-12 BGP NEXT_HOP Example\u003c/p\u003e\n\n\u003ch2 id=\"66-route-filtering-and-attribute-manipulation\"\u003e6.6 Route Filtering and Attribute Manipulation\u003c/h2\u003e\n\n\u003ch2 id=\"67-bgp-4-aggregation\"\u003e6.7 BGP-4 Aggregation\u003c/h2\u003e\n\n\u003ch2 id=\"68-looking-ahead\"\u003e6.8 Looking Ahead\u003c/h2\u003e\n\n\u003ch2 id=\"69-frequently-asked-questions\"\u003e6.9 Frequently Asked Questions\u003c/h2\u003e\n\n\u003ch3 id=\"是否应该将-bgp-路由注入-igp\"\u003e是否应该将 BGP 路由注入 IGP？\u003c/h3\u003e\n\n\u003cp\u003e不。不推荐将 BGP 路由注入 IGP。应该关闭 BGP synchronization。\u003c/p\u003e\n\n\u003ch2 id=\"61-references\"\u003e6.1 References\u003c/h2\u003e\n\n\u003cp\u003e\u003ca name=\"chap_7\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003ch1 id=\"7-冗余对称和负载均衡\"\u003e7 冗余、对称和负载均衡\u003c/h1\u003e\n\n\u003cul\u003e\n  \u003cli\u003e冗余：发生链路故障时，有备用路由\u003c/li\u003e\n  \u003cli\u003e对称：流量在相同的点进出 AS（enters and exits an AS at the same point）\u003c/li\u003e\n  \u003cli\u003e负载均衡：在多条链路之间均衡地分发流量\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2 id=\"71-冗余\"\u003e7.1 冗余\u003c/h2\u003e\n\n\u003cp\u003e\u003cstrong\u003e\u003cmark\u003e冗余和对称\u003c/mark\u003e\u003c/strong\u003e这两个目标是有冲突的：一个网络提供的\u003cstrong\u003e\u003cmark\u003e冗余越多\u003c/mark\u003e\u003c/strong\u003e，\n\u003cstrong\u003e\u003cmark\u003e对称性越难保证\u003c/mark\u003e\u003c/strong\u003e。\u003c/p\u003e\n\n\u003cp\u003e\u003cstrong\u003e冗余最终会以路由的形式落到路由表\u003c/strong\u003e。为了避免路由表过于复杂，通常的冗余实现方式\n就是默认路由（default routing）。\u003c/p\u003e\n\n\u003ch3 id=\"设置默认路由\"\u003e设置默认路由\u003c/h3\u003e\n\n\u003cp\u003e默认路由是\u003cstrong\u003e优先级最低的路由\u003c/strong\u003e，因此是最后的选择（gateway of the last resort）。分为两种：\u003c/p\u003e\n\n\u003cul\u003e\n  \u003cli\u003e动态学习\u003c/li\u003e\n  \u003cli\u003e静态配置\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch4 id=\"动态学习默认路由\"\u003e动态学习默认路由\u003c/h4\u003e\n\n\u003cp\u003e\u003cstrong\u003e\u003cmark\u003e\u003ccode\u003e0.0.0.0/0.0.0.0\u003c/code\u003e\u003c/mark\u003e\u003c/strong\u003e 是全网约定的默认路由，并且可以动态通告给其他路由器。\n通告此路由的系统表示它可以\u003cstrong\u003e作为其他系统最后尝试的网关\u003c/strong\u003e（represents itself as a gateway of\nlast resort for other systems）。\u003c/p\u003e\n\n\u003cp\u003e动态默认路由可以通过 BGP 或 IGP 学习。出于冗余目的，应该设置允许从多个源学习默认\n路由。在 BGP 中，可以通过设置 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003elocal reference\u003c/code\u003e 给默认路由设置优先级。如果高优先\n级的默认路由发生故障，低优先级的可以补上。\u003c/p\u003e\n\n\u003ch4 id=\"静态配置默认路由\"\u003e静态配置默认路由\u003c/h4\u003e\n\n\u003cp\u003e动态学习到的默认路由可能不是我们想要的，因此一些管理员会选择静态配置默认路由。\u003c/p\u003e\n\n\u003cp\u003e静态默认路由也可以设置多条，用优先级区分。\u003c/p\u003e\n\n\u003ch2 id=\"72-对称\"\u003e7.2 对称\u003c/h2\u003e\n\n\u003cp\u003e流量从 AS 的哪个点出去的，也通过哪个点进来。\u003c/p\u003e\n\n\u003cp\u003e大部分情况下都应该是对称的，但是特定的一些场景下也会有非对称的情况，与设计有关。\u003c/p\u003e\n\n\u003cblockquote\u003e\n  \u003cp\u003e实际上非对称路由在现实中并不少见（more often than not），而且也没有造成太大问\n题。\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003ch2 id=\"73-非对称路由\"\u003e7.3 非对称路由\u003c/h2\u003e\n\n\u003cp\u003e流量要根据 inbound 和 outbound 分开考虑。\n例如，如果网络和 ISP1 之间的带宽被打爆了，那你肯定是先问：是 inbound 还是\noutbound 被打爆了？\u003c/p\u003e\n\n\u003cp\u003e路由行为影响因素：\u003c/p\u003e\n\n\u003cul\u003e\n  \u003cli\u003e\u003ccode class=\"language-plaintext highlighter-rouge\"\u003einbound traffic\u003c/code\u003e 受\u003cstrong\u003e本 AS 通告出去的路由\u003c/strong\u003e的影响\u003c/li\u003e\n  \u003cli\u003e\u003ccode class=\"language-plaintext highlighter-rouge\"\u003eoutbound traffic\u003c/code\u003e 受\u003cstrong\u003e本 AS 从其他 AS 学习到的路由\u003c/strong\u003e的影响\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003e因此，要调整 inbound 流量，就需要调整从本 AS 通告出去的路由；而要调整 outbound，\n就需要控制本 AS 如何学习邻居通告的路由。\u003c/p\u003e\n\n\u003ch2 id=\"74-不同场景下对三者的权衡\"\u003e7.4 不同场景下对三者的权衡\u003c/h2\u003e\n\n\u003cp\u003e可以看出，冗余、对称和负载均衡之间是有联系的，并且存在一些冲突。\u003c/p\u003e\n\n\u003cp\u003e第六章介绍的路由属性（routing attributes）是实现这三个目标的工具。\u003c/p\u003e\n\n\u003ch2 id=\"75-looking-ahead\"\u003e7.5 Looking Ahead\u003c/h2\u003e\n\n\u003ch2 id=\"76-frequently-asked-questions\"\u003e7.6 Frequently Asked Questions\u003c/h2\u003e\n\n\u003cp\u003e\u003cstrong\u003eBGP 本身不考虑链路速度和流量特性\u003c/strong\u003e，因此需要管理员通过策略配置达到所期望的目的。\u003c/p\u003e\n\n\u003cp\u003e\u003ca name=\"chap_8\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003ch1 id=\"8-as-内部路由控制\"\u003e8 AS 内部路由控制\u003c/h1\u003e\n\n\u003ch2 id=\"81-非-bgp-路由器和-bgp-路由器的交互\"\u003e8.1 非 BGP 路由器和 BGP 路由器的交互\u003c/h2\u003e\n\n\u003cp\u003e非 BGP 路由器如何连接到外部网络：\u003c/p\u003e\n\n\u003col\u003e\n  \u003cli\u003e将 BGP 注入到 IGP（即，将外部路由注入到 AS 内部）\u003c/li\u003e\n  \u003cli\u003e静态配置 AS 内的默认路由到外网\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003ch3 id=\"811-bgp-注入-igp\"\u003e8.1.1 BGP 注入 IGP\u003c/h3\u003e\n\n\u003cp\u003e\u003cstrong\u003e不推荐将全部 BGP 路由注入到 IGP\u003c/strong\u003e，这会给 IGP 路由增加很大的负担。IGP 路由是针\n对 AS 内路由和很小的网络设计的，不适用于大规模网络。但可以将部分 BGP 路由注入 IGP。\u003c/p\u003e\n\n\u003cp\u003e需要考虑的因素：\u003c/p\u003e\n\n\u003col\u003e\n  \u003cli\u003e计算路径和处理路由更新所需的内存、CPU\u003c/li\u003e\n  \u003cli\u003elink utilization from routing control traffic\u003c/li\u003e\n  \u003cli\u003e对收敛的影响\u003c/li\u003e\n  \u003cli\u003eIGP 的限制\u003c/li\u003e\n  \u003cli\u003e网络拓扑\u003c/li\u003e\n  \u003cli\u003e其他\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003cp\u003e缺点：\u003c/p\u003e\n\n\u003col\u003e\n  \u003cli\u003e如果 IGP 非常老，例如 RIP-1，不支持 CIDR，那 BGP 过来的 CIDR 路由都会丢失\u003c/li\u003e\n  \u003cli\u003eBGP 路由的抖动会引起 IGP 的抖动，很多 IGP 挂掉都是这个原因\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003ch3 id=\"812-静态配置默认路由\"\u003e8.1.2 静态配置默认路由\u003c/h3\u003e\n\n\u003cp\u003e在每个 AS 的边界路由器上添加一条默认路由。\u003c/p\u003e\n\n\u003ch2 id=\"82-bgp-policies-conflicting-with-internal-defaults\"\u003e8.2 BGP Policies Conflicting with Internal Defaults\u003c/h2\u003e\n\n\u003cp\u003e\u003cstrong\u003eBGP 路由策略和 IGP 的默认行为有冲突会导致出现路由环路\u003c/strong\u003e，来看 图 8-2 这个例子\n。\u003c/p\u003e\n\n\u003ch3 id=\"821-例子主备-bgp-策略和-igp-默认行为冲突导致环路\"\u003e8.2.1 例子：主备 BGP 策略和 IGP 默认行为冲突导致环路\u003c/h3\u003e\n\n\u003cp\u003e考虑图 8-2。RTC 和 RTD 和外面的 AS 运行 eBGP；在 AS 内部，它们两个之间运行 iBGP\n。但是，他们不是直连的，要经过 RTA 和 RTB 两个非 BGP 路由器。RTA 和 RTB 会和 AS\n内的所有路由器运行 IGP 协议，因此它们看不到所有的外部路由（BGP 路由）。\u003c/p\u003e\n\n\u003cp\u003e如果 BGP 策略是 RTD 做主，RTC 做备，那 RTC 收到流量时，会转发给 RTD，但因为 RTC\n和 RTD 不是直连的，因此它会先转发给 RTA。RTA 根据 IGP 学习到的默认路由是 RTC，因\n此它又会将流量转发回 RTC，形成了路由环路。\u003c/p\u003e\n\n\u003cp\u003eRTC 和 RTD 之间出现环路：\u003c/p\u003e\n\n\u003cp align=\"center\"\u003e\u003cimg src=\"/assets/img/internet-routing-arch/8-2.PNG\" width=\"60%\" height=\"60%\"/\u003e\u003c/p\u003e\n\u003cp align=\"center\"\u003e图 8-2 Following Defaults: Loop Situation\u003c/p\u003e\n\n\u003cp\u003e解决这个问题的办法有如下几种。\u003c/p\u003e\n\n\u003ch4 id=\"方案-1-修改-igp-metric\"\u003e方案 1: 修改 IGP Metric\u003c/h4\u003e\n\n\u003cp\u003e\u003cstrong\u003e将 RTA 的默认路由从指向 RTC 改为指向 RTD\u003c/strong\u003e。\u003c/p\u003e\n\n\u003cp\u003e具体地，将 RTC 的默认路由 0/0 的 metric 设置的非常大。这样 RTD 的路径相比之下很\n短，RTA 就会将 RTA-RTB-RTD 作为最优路径。\u003c/p\u003e\n\n\u003ch4 id=\"方案-2-直连-rtc-和-rtd\"\u003e方案 2: 直连 RTC 和 RTD\u003c/h4\u003e\n\n\u003cp\u003e\u003cstrong\u003e直连 RTC 和 RTD，使得二者之间的最优路径不需要经过 RTA。\u003c/strong\u003e\u003c/p\u003e\n\n\u003cp\u003eRTC-RTD 是 iBGP 路径，RTC-RTA-RTB-RTD 是 IGP 路径。\u003c/p\u003e\n\n\u003ch4 id=\"方案-3-transit-routers-都跑-bgp\"\u003e方案 3: Transit Routers 都跑 BGP\u003c/h4\u003e\n\n\u003cp\u003eTransit routers 都跑 BGP，在图 8-2 中就是 RTA 和 RTB。\u003c/p\u003e\n\n\u003ch4 id=\"方案-4-控制默认路由自动注入\"\u003e方案 4: 控制默认路由自动注入\u003c/h4\u003e\n\n\u003cp\u003eRTD 和 RTC 只有一个注入默认路由，另一个不注入。\u003c/p\u003e\n\n\u003cp\u003e缺点：在对 primary/backup 模式有用，而且 primary 挂掉之后，backup 用不了，因为它\n没有注入默认路由。\u003c/p\u003e\n\n\u003ch3 id=\"822-defaults-inside-the-as-other-bgp-policies\"\u003e8.2.2 Defaults Inside the AS: Other BGP Policies\u003c/h3\u003e\n\n\u003cp\u003eIGP 默认配置和 BGP policy 冲突产生的环路。\u003c/p\u003e\n\n\u003ch2 id=\"83-策略路由policy-routing\"\u003e8.3 策略路由（Policy Routing）\u003c/h2\u003e\n\n\u003cp\u003e通常所说的路由，都是根据\u003cstrong\u003e目的地址\u003c/strong\u003e做转发。\u003c/p\u003e\n\n\u003cp\u003e而策略路由是根据\u003cstrong\u003e源地址\u003c/strong\u003e，或\u003cstrong\u003e源地址+目的地址\u003c/strong\u003e做转发。可以做更高级的路由控制。\u003c/p\u003e\n\n\u003ch2 id=\"84-looking-ahead\"\u003e8.4 Looking Ahead\u003c/h2\u003e\n\n\u003ch2 id=\"85-frequently-asked-questions\"\u003e8.5 Frequently Asked Questions\u003c/h2\u003e\n\n\u003cp\u003e\u003ca name=\"chap_9\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003ch1 id=\"9-大型-as-控制管理\"\u003e9 大型 AS 控制管理\u003c/h1\u003e\n\n\u003cp\u003e网络节点超过几百个之后，会带来很大的管理问题。\u003c/p\u003e\n\n\u003ch1 id=\"91-路由反射器route-reflectors\"\u003e9.1 路由反射器（Route Reflectors）\u003c/h1\u003e\n\n\u003cp\u003eBGP 之间通过 full-mesh 做 peering，当节点多了之后，BGP mesh 非常复杂。\u003c/p\u003e\n\n\u003cp\u003e引入路由反射器（Route Reflector，RR）。RR 带来的好处：\u003c/p\u003e\n\n\u003col\u003e\n  \u003cli\u003e向多个 peer 发送 UPDATE 时效率更高\u003c/li\u003e\n  \u003cli\u003e路由器只需要和 local RR 做 peer，大大减少 BGP session 的数量\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003cp\u003e只有 BGP mesh 比较大之后才推荐 RR。因为 \u003cstrong\u003eRR 也是有代价的\u003c/strong\u003e：\u003c/p\u003e\n\n\u003col\u003e\n  \u003cli\u003e增加额外计算开销\u003c/li\u003e\n  \u003cli\u003e如果配置不正常会引起路由环路和路由不稳定\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003ch3 id=\"911-没有-rr-的拓扑full-mesh\"\u003e9.1.1 没有 RR 的拓扑：full-mesh\u003c/h3\u003e\n\n\u003cp align=\"center\"\u003e\u003cimg src=\"/assets/img/internet-routing-arch/9-1.PNG\" width=\"60%\" height=\"60%\"/\u003e\u003c/p\u003e\n\u003cp align=\"center\"\u003e图 9-1 Internal Peers in a Normal Full-Mesh Environment\u003c/p\u003e\n\n\u003cp\u003e没有 RR 的情况下，同一 AS 内的 BGP speaker 之间形成一个 \u003cstrong\u003elogical\u003c/strong\u003e full-mesh。\n如图 9-1 所示，虽然 RTA-RTC 之间没有物理链路，但仍然有一条逻辑 peer 链路。\u003c/p\u003e\n\n\u003cp\u003e\u003cstrong\u003eRTB 从 RTA 收到的 UPDATE 消息并不会发送给 RTC\u003c/strong\u003e，因为：\u003c/p\u003e\n\n\u003col\u003e\n  \u003cli\u003eRTC 是内部节点（同一个 AS）\u003c/li\u003e\n  \u003cli\u003e这条 UPDATE 消息也是从内部节点发来的（RTA）\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003cp\u003e因此，如果 RTA-RTC 之间没有做 peer，RTC 就收不到 RTA 的消息；所以没有 RR 的情况\n下必须得用 full-mesh。\u003c/p\u003e\n\n\u003ch3 id=\"912-有-rr-的拓扑\"\u003e9.1.2 有 RR 的拓扑\u003c/h3\u003e\n\n\u003cp\u003e再来看有 RR 的情况，如图 9-2 所示。\u003c/p\u003e\n\n\u003cp align=\"center\"\u003e\u003cimg src=\"/assets/img/internet-routing-arch/9-2.PNG\" width=\"60%\" height=\"60%\"/\u003e\u003c/p\u003e\n\u003cp align=\"center\"\u003e图 9-2 Internal Peers Using a Route Reflector\u003c/p\u003e\n\n\u003cp\u003e引入 RR 之后，其他路由器称为客户端。客户端和 RR 之间做 peer，RR 再将消息转发给其\n他 IBGP 或 eBGP peers。\u003c/p\u003e\n\n\u003cp\u003eRR 大大减少了 BGP session 数量，使得网络更具扩展性。\u003c/p\u003e\n\n\u003ch3 id=\"913-路由反射原则\"\u003e9.1.3 路由反射原则\u003c/h3\u003e\n\n\u003cp\u003e所有设备分为三类：\u003c/p\u003e\n\n\u003col\u003e\n  \u003cli\u003e路由反射器\u003c/li\u003e\n  \u003cli\u003e路由反射器的客户端，简称客户端\u003c/li\u003e\n  \u003cli\u003e非路由反射器的客户端，简称非客户端\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003cp align=\"center\"\u003e\u003cimg src=\"/assets/img/internet-routing-arch/9-3.PNG\" width=\"60%\" height=\"60%\"/\u003e\u003c/p\u003e\n\u003cp align=\"center\"\u003e图 9-3 Route Reflection Process Components\u003c/p\u003e\n\n\u003cp\u003e\u003cstrong\u003e路由反射原则\u003c/strong\u003e：\u003c/p\u003e\n\n\u003col\u003e\n  \u003cli\u003e从 nonclient peer 来的路由，只反射给 clients（无须反射给 nonclients 是因为\nnonclients 之间有 full-mesh）\u003c/li\u003e\n  \u003cli\u003e从 client peer 来的路由，反射给 clients 及 nonclients\u003c/li\u003e\n  \u003cli\u003e从 eBGP peer 来的路由，反射给 clients 及 nonclients\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003cp\u003eRR 只用于 AS 内部，因此 AS 边界的外部路由节点（eBGP）也当作 nonclients 对待。\u003c/p\u003e\n\n\u003ch3 id=\"914-rr-高可用\"\u003e9.1.4 RR 高可用\u003c/h3\u003e\n\n\u003cp\u003eRR 是集中式节点，因此非常重要，需要做冗余。\u003c/p\u003e\n\n\u003cp\u003e但是，如果本身物理拓扑就没有冗余，那 RR 做冗余也是无用的，如下图。\u003c/p\u003e\n\n\u003cp align=\"center\"\u003e\u003cimg src=\"/assets/img/internet-routing-arch/9-4.PNG\" width=\"60%\" height=\"60%\"/\u003e\u003c/p\u003e\n\u003cp align=\"center\"\u003e图 9-4 Comparison of Logical and Physical Redundancy Solutions\u003c/p\u003e\n\n\u003ch3 id=\"915-rr-拓扑\"\u003e9.1.5 RR 拓扑\u003c/h3\u003e\n\n\u003cp\u003eRR 拓扑主要取决于物理网络拓扑，事实上每个路由器都可以配置成 RR。\u003c/p\u003e\n\n\u003cp align=\"center\"\u003e\u003cimg src=\"/assets/img/internet-routing-arch/9-5.PNG\" width=\"60%\" height=\"60%\"/\u003e\u003c/p\u003e\n\u003cp align=\"center\"\u003e图 9-5 Complex Multiple Route Reflector Environment\u003c/p\u003e\n\n\u003cp\u003e\u003cstrong\u003eRR 不会修改路由消息的属性\u003c/strong\u003e（UPDATE attributes，例如 NEXT_HOP），但是一些实现\n会允许 RR 做一些过滤工作。\u003c/p\u003e\n\n\u003cp align=\"center\"\u003e\u003cimg src=\"/assets/img/internet-routing-arch/9-7.PNG\" width=\"60%\" height=\"60%\"/\u003e\u003c/p\u003e\n\u003cp align=\"center\"\u003e图 9-7 Typical BGP Route Reflection Topology\u003c/p\u003e\n\n\u003cp align=\"center\"\u003e\u003cimg src=\"/assets/img/internet-routing-arch/9-8.PNG\" width=\"60%\" height=\"60%\"/\u003e\u003c/p\u003e\n\u003cp align=\"center\"\u003e图 9-8 Full-Mesh BGP Topology\u003c/p\u003e\n\n\u003cp\u003e\u003ca name=\"chap_10\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003ch1 id=\"10-设计稳定的因特网\"\u003e10 设计稳定的因特网\u003c/h1\u003e\n\n\u003ch2 id=\"101-因特网路由的不稳定性\"\u003e10.1 因特网路由的不稳定性\u003c/h2\u003e\n\n\u003cp\u003e最常见的现象：路由抖动（flapping），BGP 频繁 UPDATE 和 WITHDRAWN 路由。\u003c/p\u003e\n\n\u003cp\u003e一些影响因特网路由稳定性的因素：\u003c/p\u003e\n\n\u003col\u003e\n  \u003cli\u003eIGP 不稳定\u003c/li\u003e\n  \u003cli\u003e硬件错误\u003c/li\u003e\n  \u003cli\u003e软件问题\u003c/li\u003e\n  \u003cli\u003eCPU、内存等资源不足\u003c/li\u003e\n  \u003cli\u003e网络升级和例行维护\u003c/li\u003e\n  \u003cli\u003e人为错误\u003c/li\u003e\n  \u003cli\u003e链路拥塞\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003ch2 id=\"102-bgp-stability-features\"\u003e10.2 BGP Stability Features\u003c/h2\u003e\n\n\u003ch1 id=\"iv-internet-routing-device-configuration\"\u003eIV: Internet Routing Device Configuration\u003c/h1\u003e\n\n\n  \u003c!-- POST NAVIGATION --\u003e\n  \u003cdiv class=\"postNav clearfix\"\u003e\n     \n      \u003ca class=\"prev\" href=\"/blog/bgp-in-data-center-zh/\"\u003e\u003cspan\u003e« [笔记]《BGP in the Data Center》 (O\u0026#39;Reilly 2017)\u003c/span\u003e\n      \n    \u003c/a\u003e\n      \n      \n      \u003ca class=\"next\" href=\"/blog/how-to-make-linux-microservice-aware-with-cilium-zh/\"\u003e\u003cspan\u003e[译] 如何基于 Cilium 和 eBPF 打造可感知微服务的 Linux（InfoQ, 2019） »\u003c/span\u003e\n       \n      \u003c/a\u003e\n     \n  \u003c/div\u003e\n\u003c/div\u003e",
  "Date": "2019-04-08T00:00:00Z",
  "Author": "Arthur Chiao"
}