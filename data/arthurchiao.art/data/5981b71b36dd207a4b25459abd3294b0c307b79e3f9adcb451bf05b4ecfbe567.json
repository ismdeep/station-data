{
  "Source": "arthurchiao.art",
  "Title": "直观解读 JuiceFS 的数据和元数据设计（三）：看山还是山（2024）",
  "Link": "https://arthurchiao.art/blog/juicefs-data-metadata-design-illustrative-guide-3-zh/",
  "Content": "\u003cdiv class=\"post\"\u003e\n  \n  \u003ch1 class=\"postTitle\"\u003e直观解读 JuiceFS 的数据和元数据设计（三）：看山还是山（2024）\u003c/h1\u003e\n  \u003cp class=\"meta\"\u003ePublished at 2024-10-27 | Last Update 2024-10-27\u003c/p\u003e\n  \n  \u003cp\u003e本系列分为三篇文章，试图通过简单的实地环境来\u003cstrong\u003e\u003cmark\u003e直观理解\u003c/mark\u003e\u003c/strong\u003e JuiceFS\n的\u003cstrong\u003e\u003cmark\u003e数据（data）和元数据（metadata）\u003c/mark\u003e\u003c/strong\u003e设计。\u003c/p\u003e\n\n\u003cp align=\"center\"\u003e\u003cimg src=\"/assets/img/juicefs-data-metadata-design/juicefs-obj-naming.png\" width=\"100%\"/\u003e\u003c/p\u003e\n\u003cp align=\"center\"\u003eFig. JuiceFS object key naming and the objects in MinIO.\u003c/p\u003e\n\n\u003cp\u003e水平及维护精力所限，文中不免存在错误或过时之处，请酌情参考。\n\u003cstrong\u003e\u003cmark\u003e传播知识，尊重劳动，年满十八周岁，转载请注明\u003ca href=\"https://arthurchiao.art\"\u003e出处\u003c/a\u003e\u003c/mark\u003e\u003c/strong\u003e。\u003c/p\u003e\n\n\u003cul\u003e\n  \u003cli\u003e\u003ca href=\"/blog/juicefs-data-metadata-design-illustrative-guide-1-zh/\"\u003e直观解读 JuiceFS 的数据和元数据设计（一）：看山是山（2024）\u003c/a\u003e\u003c/li\u003e\n  \u003cli\u003e\u003ca href=\"/blog/juicefs-data-metadata-design-illustrative-guide-2-zh/\"\u003e直观解读 JuiceFS 的数据和元数据设计（二）：看山不是山（2024）\u003c/a\u003e\u003c/li\u003e\n  \u003cli\u003e\u003ca href=\"/blog/juicefs-data-metadata-design-illustrative-guide-3-zh/\"\u003e直观解读 JuiceFS 的数据和元数据设计（三）：看山还是山（2024）\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003chr/\u003e\n\n\u003cul id=\"markdown-toc\"\u003e\n  \u003cli\u003e\u003ca href=\"#1-如何从数据和元数据中恢复文件\" id=\"markdown-toc-1-如何从数据和元数据中恢复文件\"\u003e1 如何从数据和元数据中恢复文件\u003c/a\u003e    \u003cul\u003e\n      \u003cli\u003e\u003ca href=\"#12-理论步骤\" id=\"markdown-toc-12-理论步骤\"\u003e1.2 理论步骤\u003c/a\u003e\u003c/li\u003e\n      \u003cli\u003e\u003ca href=\"#12-juicefs-info-查看文件-chunksliceblock-信息\" id=\"markdown-toc-12-juicefs-info-查看文件-chunksliceblock-信息\"\u003e1.2 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003ejuicefs info\u003c/code\u003e 查看文件 chunk/slice/block 信息\u003c/a\u003e\u003c/li\u003e\n    \u003c/ul\u003e\n  \u003c/li\u003e\n  \u003cli\u003e\u003ca href=\"#2-如何判断-volumechunks-中的数据是否是合法\" id=\"markdown-toc-2-如何判断-volumechunks-中的数据是否是合法\"\u003e2 如何判断 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003e{volume}/chunks/\u003c/code\u003e 中的数据是否是合法\u003c/a\u003e    \u003cul\u003e\n      \u003cli\u003e\u003ca href=\"#21-原理\" id=\"markdown-toc-21-原理\"\u003e2.1 原理\u003c/a\u003e\u003c/li\u003e\n      \u003cli\u003e\u003ca href=\"#22-改进pending-delete-slices\" id=\"markdown-toc-22-改进pending-delete-slices\"\u003e2.2 改进：pending delete slices\u003c/a\u003e\u003c/li\u003e\n      \u003cli\u003e\u003ca href=\"#23-工具juicefs-gc\" id=\"markdown-toc-23-工具juicefs-gc\"\u003e2.3 工具：\u003ccode class=\"language-plaintext highlighter-rouge\"\u003ejuicefs gc\u003c/code\u003e\u003c/a\u003e        \u003cul\u003e\n          \u003cli\u003e\u003ca href=\"#231-核心代码\" id=\"markdown-toc-231-核心代码\"\u003e2.3.1 核心代码\u003c/a\u003e            \u003cul\u003e\n              \u003cli\u003e\u003ca href=\"#从元数据引擎-list-所有-slice-信息\" id=\"markdown-toc-从元数据引擎-list-所有-slice-信息\"\u003e从元数据引擎 list 所有 slice 信息\u003c/a\u003e\u003c/li\u003e\n              \u003cli\u003e\u003ca href=\"#从对象存储-list-所有-objects-信息\" id=\"markdown-toc-从对象存储-list-所有-objects-信息\"\u003e从对象存储 list 所有 objects 信息\u003c/a\u003e\u003c/li\u003e\n              \u003cli\u003e\u003ca href=\"#遍历所有-objects跟元数据引擎中的-slice-信息比对\" id=\"markdown-toc-遍历所有-objects跟元数据引擎中的-slice-信息比对\"\u003e遍历所有 objects，跟元数据引擎中的 slice 信息比对\u003c/a\u003e\u003c/li\u003e\n            \u003c/ul\u003e\n          \u003c/li\u003e\n          \u003cli\u003e\u003ca href=\"#232-使用方式\" id=\"markdown-toc-232-使用方式\"\u003e2.3.2 使用方式\u003c/a\u003e\u003c/li\u003e\n        \u003c/ul\u003e\n      \u003c/li\u003e\n    \u003c/ul\u003e\n  \u003c/li\u003e\n  \u003cli\u003e\u003ca href=\"#3-问题讨论\" id=\"markdown-toc-3-问题讨论\"\u003e3 问题讨论\u003c/a\u003e    \u003cul\u003e\n      \u003cli\u003e\u003ca href=\"#31-chunk-id-和-slice-id-的分配\" id=\"markdown-toc-31-chunk-id-和-slice-id-的分配\"\u003e3.1 chunk id 和 slice id 的分配\u003c/a\u003e\u003c/li\u003e\n      \u003cli\u003e\u003ca href=\"#32-juicefs-pending-delete-slices-和-background-job\" id=\"markdown-toc-32-juicefs-pending-delete-slices-和-background-job\"\u003e3.2 JuiceFS pending delete slices 和 background job\u003c/a\u003e        \u003cul\u003e\n          \u003cli\u003e\u003ca href=\"#321-设计初衷\" id=\"markdown-toc-321-设计初衷\"\u003e3.2.1 设计初衷\u003c/a\u003e\u003c/li\u003e\n          \u003cli\u003e\u003ca href=\"#322-代码\" id=\"markdown-toc-322-代码\"\u003e3.2.2 代码\u003c/a\u003e\u003c/li\u003e\n          \u003cli\u003e\u003ca href=\"#323-潜在的问题\" id=\"markdown-toc-323-潜在的问题\"\u003e3.2.3 潜在的问题\u003c/a\u003e\u003c/li\u003e\n        \u003c/ul\u003e\n      \u003c/li\u003e\n      \u003cli\u003e\u003ca href=\"#33-juicefs-支持的单个最大文件-128pib-是怎么来的\" id=\"markdown-toc-33-juicefs-支持的单个最大文件-128pib-是怎么来的\"\u003e3.3 JuiceFS 支持的单个最大文件 128PiB 是怎么来的\u003c/a\u003e\u003c/li\u003e\n      \u003cli\u003e\u003ca href=\"#34-为什么-juicefs-写入对象存储的文件不能通过对象存储直接读取\" id=\"markdown-toc-34-为什么-juicefs-写入对象存储的文件不能通过对象存储直接读取\"\u003e3.4 为什么 JuiceFS 写入对象存储的文件，不能通过对象存储直接读取？\u003c/a\u003e\u003c/li\u003e\n      \u003cli\u003e\u003ca href=\"#35-juicefs-不会对文件进行合并\" id=\"markdown-toc-35-juicefs-不会对文件进行合并\"\u003e3.5 JuiceFS 不会对文件进行合并\u003c/a\u003e\u003c/li\u003e\n    \u003c/ul\u003e\n  \u003c/li\u003e\n  \u003cli\u003e\u003ca href=\"#4-总结\" id=\"markdown-toc-4-总结\"\u003e4 总结\u003c/a\u003e\u003c/li\u003e\n  \u003cli\u003e\u003ca href=\"#参考资料\" id=\"markdown-toc-参考资料\"\u003e参考资料\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003chr/\u003e\n\n\u003ch1 id=\"1-如何从数据和元数据中恢复文件\"\u003e1 如何从数据和元数据中恢复文件\u003c/h1\u003e\n\n\u003ch2 id=\"12-理论步骤\"\u003e1.2 理论步骤\u003c/h2\u003e\n\n\u003cp\u003e对于一个给定的 JuiceFS 文件，我们在上一篇中已经看到两个正向的过程：\u003c/p\u003e\n\n\u003col\u003e\n  \u003cli\u003e\u003cstrong\u003e\u003cmark\u003e文件本身\u003c/mark\u003e\u003c/strong\u003e被切分成 Chunk、Slice、Block，然后写入对象存储；\u003c/li\u003e\n  \u003cli\u003e\u003cstrong\u003e\u003cmark\u003e文件的元数据\u003c/mark\u003e\u003c/strong\u003e以 inode、slice、block 等信息组织，写入元数据引擎。\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003cp\u003e有了对正向过程的理解，我们反过来就能从对象存储和元数据引擎中恢复文件：\n对于一个给定的 JuiceFS 文件，\u003c/p\u003e\n\n\u003col\u003e\n  \u003cli\u003e首先扫描元数据引擎，通过文件名、inode、slice 等等信息，拼凑出文件的大小、位置、权限等等信息；\u003c/li\u003e\n  \u003cli\u003e然后根据 slice_id/block_id/block_size 拼凑出对象存储中的 object key；\u003c/li\u003e\n  \u003cli\u003e依次去对象存储中根据这些 keys 读取数据拼到一起，得到的就是这个文件，然后写到本地、设置文件权限等等。\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003cp\u003e但这个恢复过程不是本文重点。本文主要看几个相关的问题，以加深对 JuiceFS 数据/元数据 设计的理解。\n更多信息见官方文档 [2]。\u003c/p\u003e\n\n\u003ch2 id=\"12-juicefs-info-查看文件-chunksliceblock-信息\"\u003e1.2 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003ejuicefs info\u003c/code\u003e 查看文件 chunk/slice/block 信息\u003c/h2\u003e\n\n\u003cp\u003eJuiceFS 已经提供了一个命令行选项，能直接查看文件的 chunk/slice/block 信息，例如：\u003c/p\u003e\n\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003e$ \u003c/span\u003e./juicefs info foo-dev/file2_5MB\nfoo-dev/file2_5MB :\n  inode: 3\n  files: 1\n   \u003cspan class=\"nb\"\u003edirs\u003c/span\u003e: 0\n length: 5.00 MiB \u003cspan class=\"o\"\u003e(\u003c/span\u003e5242880 Bytes\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n   size: 5.00 MiB \u003cspan class=\"o\"\u003e(\u003c/span\u003e5242880 Bytes\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n   path: /file2_5MB\n objects:\n+------------+--------------------------------+---------+--------+---------+\n| chunkIndex |           objectName           |   size  | offset |  length |\n+------------+--------------------------------+---------+--------+---------+\n|          0 | foo-dev/chunks/0/0/3_0_4194304 | 4194304 |      0 | 4194304 |\n|          0 | foo-dev/chunks/0/0/3_1_1048576 | 1048576 |      0 | 1048576 |\n+------------+--------------------------------+---------+--------+---------+\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e和我们在 MinIO 中看到的一致。\u003c/p\u003e\n\n\u003ch1 id=\"2-如何判断-volumechunks-中的数据是否是合法\"\u003e2 如何判断 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003e{volume}/chunks/\u003c/code\u003e 中的数据是否是合法\u003c/h1\u003e\n\n\u003cp\u003ebucket 中的数据是 JuiceFS 写入的，还是其他应用写入的呢？\n另外即使是 JuiceFS 写入的，也可能有一些数据是无效的，比如 size 为 0 的 block、超出所属 slice 范围的 block 等等。\n我们来看看基于哪些规则，能对这些非法数据进行判断。\u003c/p\u003e\n\n\u003ch2 id=\"21-原理\"\u003e2.1 原理\u003c/h2\u003e\n\n\u003cp\u003e准备工作：\u003c/p\u003e\n\n\u003col\u003e\n  \u003cli\u003e从 JuiceFS 的元数据引擎中读取所有 slice size，这对应的是\u003cstrong\u003e\u003cmark\u003e元数据信息\u003c/mark\u003e\u003c/strong\u003e；\u003c/li\u003e\n  \u003cli\u003e从 object storage 中读取所有 object key，这对应的\u003cstrong\u003e\u003cmark\u003e数据信息\u003c/mark\u003e\u003c/strong\u003e。\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003cp\u003e接下来，根据几条标准，判断 bucket 中 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003e{volume}/chunks/\u003c/code\u003e 内的数据是否是合法的 JuiceFS 数据：\u003c/p\u003e\n\n\u003col\u003e\n  \u003cli\u003e如果 object 不符合命名规范\n  \u003ccode class=\"language-plaintext highlighter-rouge\"\u003e{volume}/chunks/{slice_id/1000/1000}/{slice_id/1000}/{slice_id}_{block_id}_{block_size}\u003c/code\u003e，\n  那么这个 object 就不是 JuiceFS 写入的；\u003c/li\u003e\n  \u003cli\u003e如果符合以上命名规范，，那么这个 object 就是 JuiceFS 写入的，接下来，\n    \u003col\u003e\n      \u003cli\u003e如果 object 大小为零，那可以清理掉，因为这种 object 留着没意义；\u003c/li\u003e\n      \u003cli\u003e如果 object 大小不为零，根据元数据内记录的 slice/block 信息计算这个 block 应该是多大，\n        \u003col\u003e\n          \u003cli\u003e如果大小跟 object 一致，那这个 object 就是一个合法的 JuiceFS 数据（Block）；\u003c/li\u003e\n          \u003cli\u003e否则，说明这个 object 有问题。\u003c/li\u003e\n        \u003c/ol\u003e\n      \u003c/li\u003e\n    \u003c/ol\u003e\n  \u003c/li\u003e\n\u003c/ol\u003e\n\n\u003cp\u003e这个过程是没问题的，但需要对所有 object 和所有元数据进行遍历和比对，效率比较低。\n有没有更快的方法呢？\u003c/p\u003e\n\n\u003ch2 id=\"22-改进pending-delete-slices\"\u003e2.2 改进：pending delete slices\u003c/h2\u003e\n\n\u003cp\u003e回忆上一篇，在元数据引擎中其实已经记录了\u003cstrong\u003e\u003cmark\u003e待删除的 slice/block 信息\u003c/mark\u003e\u003c/strong\u003e，\n这里“待删除”的意思是 JuiceFS 中已经把文件删掉了（\u003cstrong\u003e\u003cmark\u003e用户看不到了，volume usage 统计也不显示了\u003c/mark\u003e\u003c/strong\u003e），\n但还没有从对象存储中删掉，\u003c/p\u003e\n\n\u003cul\u003e\n  \u003cli\u003e\u003ccode class=\"language-plaintext highlighter-rouge\"\u003eD\u003c/code\u003e 开头的记录：\u003cstrong\u003e\u003cmark\u003e\u003ccode\u003ed\u003c/code\u003e\u003c/mark\u003e\u003c/strong\u003eeleted inodes\u003c/li\u003e\n  \u003cli\u003e格式：\u003ccode class=\"language-plaintext highlighter-rouge\"\u003eD{8bit-inode}{8bit-length}\u003c/code\u003e，\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003e这种记录是 JuiceFS 在从 object storage 删除文件之前插入到元数据引擎中的，\n所以扫描所有 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eD\u003c/code\u003e 开头的记录，可以找到所有待删除的 slice/block 信息。\u003c/p\u003e\n\n\u003ch2 id=\"23-工具juicefs-gc\"\u003e2.3 工具：\u003ccode class=\"language-plaintext highlighter-rouge\"\u003ejuicefs gc\u003c/code\u003e\u003c/h2\u003e\n\n\u003cp\u003e结合 2.1 \u0026amp; 2.2，就可以快速判断 bucket 中的数据是否是 JuiceFS 合法数据，不是就删掉；\n基于 juicefs 已有的代码库，就可以写一个工具 —— 但用不着自己写 —— JuiceFS 已经提供了。\u003c/p\u003e\n\n\u003ch3 id=\"231-核心代码\"\u003e2.3.1 核心代码\u003c/h3\u003e\n\n\u003cp\u003e完整代码见 \u003ca href=\"\"\u003epkg/cmd/gc.go\u003c/a\u003e。\u003c/p\u003e\n\n\u003ch4 id=\"从元数据引擎-list-所有-slice-信息\"\u003e从元数据引擎 list 所有 slice 信息\u003c/h4\u003e\n\n\u003cdiv class=\"language-go highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003efunc\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003em\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003ekvMeta\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"n\"\u003eListSlices\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ectx\u003c/span\u003e \u003cspan class=\"n\"\u003eContext\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eslices\u003c/span\u003e \u003cspan class=\"k\"\u003emap\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003eIno\u003c/span\u003e\u003cspan class=\"p\"\u003e][]\u003c/span\u003e\u003cspan class=\"n\"\u003eSlice\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nb\"\u003edelete\u003c/span\u003e \u003cspan class=\"kt\"\u003ebool\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eshowProgress\u003c/span\u003e \u003cspan class=\"k\"\u003efunc\u003c/span\u003e\u003cspan class=\"p\"\u003e())\u003c/span\u003e \u003cspan class=\"n\"\u003esyscall\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eErrno\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nb\"\u003edelete\u003c/span\u003e\n        \u003cspan class=\"n\"\u003em\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003edoCleanupSlices\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\n    \u003cspan class=\"c\"\u003e// 格式：A{8digit-inode}C{4digit-blockID}   file chunks\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eklen\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"m\"\u003e1\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"m\"\u003e8\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"m\"\u003e1\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"m\"\u003e4\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eresult\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"n\"\u003em\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003escanValues\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003em\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003efmtKey\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;A\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e),\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u003c/span\u003e\u003cspan class=\"m\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"k\"\u003efunc\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ek\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003ev\u003c/span\u003e \u003cspan class=\"p\"\u003e[]\u003c/span\u003e\u003cspan class=\"kt\"\u003ebyte\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"kt\"\u003ebool\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nb\"\u003elen\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ek\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"n\"\u003eklen\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u0026amp;\u003c/span\u003e \u003cspan class=\"n\"\u003ek\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"m\"\u003e1\u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e\u003cspan class=\"m\"\u003e8\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"sc\"\u003e\u0026#39;C\u0026#39;\u003c/span\u003e \u003cspan class=\"p\"\u003e})\u003c/span\u003e\n\n    \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"n\"\u003ekey\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003evalue\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"k\"\u003erange\u003c/span\u003e \u003cspan class=\"n\"\u003eresult\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"n\"\u003einode\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"n\"\u003em\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003edecodeInode\u003c/span\u003e\u003cspan class=\"p\"\u003e([]\u003c/span\u003e\u003cspan class=\"kt\"\u003ebyte\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ekey\u003c/span\u003e\u003cspan class=\"p\"\u003e)[\u003c/span\u003e\u003cspan class=\"m\"\u003e1\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e\u003cspan class=\"m\"\u003e9\u003c/span\u003e\u003cspan class=\"p\"\u003e])\u003c/span\u003e\n        \u003cspan class=\"n\"\u003ess\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"n\"\u003ereadSliceBuf\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003evalue\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"c\"\u003e// slice list\u003c/span\u003e\n        \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"n\"\u003e_\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003es\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"k\"\u003erange\u003c/span\u003e \u003cspan class=\"n\"\u003ess\u003c/span\u003e\n            \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"n\"\u003es\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eid\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"m\"\u003e0\u003c/span\u003e\n                \u003cspan class=\"n\"\u003eslices\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003einode\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nb\"\u003eappend\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eslices\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003einode\u003c/span\u003e\u003cspan class=\"p\"\u003e],\u003c/span\u003e \u003cspan class=\"n\"\u003eSlice\u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"n\"\u003eId\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003es\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eid\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eSize\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003es\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003esize\u003c/span\u003e\u003cspan class=\"p\"\u003e})\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n    \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"n\"\u003em\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003egetFormat\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eTrashDays\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"m\"\u003e0\u003c/span\u003e\n        \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"m\"\u003e0\u003c/span\u003e\n\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003eerrno\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003em\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003escanTrashSlices\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ectx\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"k\"\u003efunc\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ess\u003c/span\u003e \u003cspan class=\"p\"\u003e[]\u003c/span\u003e\u003cspan class=\"n\"\u003eSlice\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003e_\u003c/span\u003e \u003cspan class=\"kt\"\u003eint64\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"kt\"\u003ebool\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"kt\"\u003eerror\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"n\"\u003eslices\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"m\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nb\"\u003eappend\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eslices\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"m\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e],\u003c/span\u003e \u003cspan class=\"n\"\u003ess\u003c/span\u003e\u003cspan class=\"o\"\u003e...\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n        \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"n\"\u003eshowProgress\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"no\"\u003enil\u003c/span\u003e\n            \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"k\"\u003erange\u003c/span\u003e \u003cspan class=\"n\"\u003ess\u003c/span\u003e\n                \u003cspan class=\"n\"\u003eshowProgress\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n        \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"no\"\u003efalse\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"no\"\u003enil\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e}))\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003ch4 id=\"从对象存储-list-所有-objects-信息\"\u003e从对象存储 list 所有 objects 信息\u003c/h4\u003e\n\n\u003cdiv class=\"language-go highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e    \u003cspan class=\"c\"\u003e// Scan all objects to find leaked ones\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eblob\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eobject\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eWithPrefix\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eblob\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;chunks/\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eobjs\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"n\"\u003eosync\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eListAll\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eblob\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"no\"\u003etrue\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"c\"\u003e// List {vol_name}/chunks/ 下面所有对象\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003ch4 id=\"遍历所有-objects跟元数据引擎中的-slice-信息比对\"\u003e遍历所有 objects，跟元数据引擎中的 slice 信息比对\u003c/h4\u003e\n\n\u003cdiv class=\"language-go highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e    \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"n\"\u003eobj\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"k\"\u003erange\u003c/span\u003e \u003cspan class=\"n\"\u003eobjs\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"c\"\u003e// key 格式：{slice_id/1000/1000}/{slice_id/1000}/{slice_id}_{index}_{size}\u003c/span\u003e\n        \u003cspan class=\"n\"\u003eparts\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"n\"\u003estrings\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eSplit\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eobj\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eKey\u003c/span\u003e\u003cspan class=\"p\"\u003e(),\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;/\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e     \u003cspan class=\"c\"\u003e// len(parts) == 3\u003c/span\u003e\n        \u003cspan class=\"n\"\u003eparts\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003estrings\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eSplit\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eparts\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"m\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e],\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;_\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e       \u003cspan class=\"c\"\u003e// len(parts) == 3\u003c/span\u003e\n\n        \u003cspan class=\"n\"\u003esliceID\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003e_\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"n\"\u003estrconv\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eAtoi\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eparts\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"m\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e])\u003c/span\u003e       \u003cspan class=\"c\"\u003e// slice id, JuiceFS globally unique\u003c/span\u003e\n        \u003cspan class=\"n\"\u003eblockID\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003e_\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"n\"\u003estrconv\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eAtoi\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eparts\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"m\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e])\u003c/span\u003e       \u003cspan class=\"c\"\u003e// blockID in this slice\u003c/span\u003e\n        \u003cspan class=\"n\"\u003eblockSize\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003e_\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"n\"\u003estrconv\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eAtoi\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eparts\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"m\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e])\u003c/span\u003e     \u003cspan class=\"c\"\u003e// block size, \u0026lt;= 4MB\u003c/span\u003e\n        \u003cspan class=\"n\"\u003esliceSizeFromMetaEngine\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"n\"\u003esliceSizesFromMetaEngine\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"kt\"\u003euint64\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003esliceID\u003c/span\u003e\u003cspan class=\"p\"\u003e)]\u003c/span\u003e       \u003cspan class=\"c\"\u003e// tikv 中记录的 slice size\u003c/span\u003e\n\n        \u003cspan class=\"k\"\u003evar\u003c/span\u003e \u003cspan class=\"n\"\u003eisEmptySize\u003c/span\u003e \u003cspan class=\"kt\"\u003ebool\u003c/span\u003e\n        \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"n\"\u003esliceSizeFromMetaEngine\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"m\"\u003e0\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n            \u003cspan class=\"n\"\u003esliceSizeFromMetaEngine\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003esliceSizesFromTrash\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"kt\"\u003euint64\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003esliceID\u003c/span\u003e\u003cspan class=\"p\"\u003e)]\u003c/span\u003e\n            \u003cspan class=\"n\"\u003eisEmptySize\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"no\"\u003etrue\u003c/span\u003e\n        \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n        \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"n\"\u003esliceSizeFromMetaEngine\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"m\"\u003e0\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n            \u003cspan class=\"n\"\u003efoundLeaked\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eobj\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n            \u003cspan class=\"k\"\u003econtinue\u003c/span\u003e\n        \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n        \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"n\"\u003eblockSize\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"n\"\u003echunkConf\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eBlockSize\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"c\"\u003e// exactly 4MB\u003c/span\u003e\n            \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eblockID\u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e\u003cspan class=\"m\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003eblockSize\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003esliceSizeFromMetaEngine\u003c/span\u003e\n                \u003cspan class=\"n\"\u003efoundLeaked\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eobj\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n        \u003cspan class=\"p\"\u003e}\u003c/span\u003e \u003cspan class=\"k\"\u003eelse\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e                              \u003cspan class=\"c\"\u003e// \u0026lt; 4MB\u003c/span\u003e\n            \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"n\"\u003eblockID\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003echunkConf\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eBlockSize\u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e\u003cspan class=\"n\"\u003eblockSize\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"n\"\u003esliceSizeFromMetaEngine\u003c/span\u003e \n                \u003cspan class=\"n\"\u003efoundLeaked\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eobj\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n        \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003col\u003e\n  \u003cli\u003eslice size 为 0，说明这个 slice 在元数据引擎中被 compact 过了；\u003c/li\u003e\n  \u003cli\u003eslice size 非零，\n    \u003cul\u003e\n      \u003cli\u003eblock size == 4MB，可能是也可能不是最后一个 block；\u003c/li\u003e\n      \u003cli\u003eblock size != 4MB，说明这个 block 是最后一个 block；\u003c/li\u003e\n    \u003c/ul\u003e\n  \u003c/li\u003e\n\u003c/ol\u003e\n\n\u003ch3 id=\"232-使用方式\"\u003e2.3.2 使用方式\u003c/h3\u003e\n\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003e$ \u003c/span\u003e./juicefs gc \u003cspan class=\"nt\"\u003e-h\u003c/span\u003e\nNAME:\n   juicefs gc - Garbage collector of objects \u003cspan class=\"k\"\u003ein \u003c/span\u003edata storage\n\nUSAGE:\n   juicefs gc \u003cspan class=\"o\"\u003e[\u003c/span\u003e\u003cspan class=\"nb\"\u003ecommand \u003c/span\u003eoptions] META-URL\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e大致效果：\u003c/p\u003e\n\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003e$ \u003c/span\u003e./juicefs gc tikv://192.168.1.1:2379,192.168.1.2:2379,192.168.1.3:2379/foo-dev\n\u0026lt;INFO\u0026gt;: TiKV gc interval is \u003cspan class=\"nb\"\u003eset \u003c/span\u003eto 3h0m0s \u003cspan class=\"o\"\u003e[\u003c/span\u003etkv_tikv.go:138]\n\u0026lt;INFO\u0026gt;: Data use minio://localhost:9000/juicefs-bucket/foo-dev/ \u003cspan class=\"o\"\u003e[\u003c/span\u003egc.go:101]\n\nPending deleted files: 0                             0.0/s\n Pending deleted data: 0.0 b     \u003cspan class=\"o\"\u003e(\u003c/span\u003e0 Bytes\u003cspan class=\"o\"\u003e)\u003c/span\u003e           0.0 b/s\nCleaned pending files: 0                             0.0/s\n Cleaned pending data: 0.0 b     \u003cspan class=\"o\"\u003e(\u003c/span\u003e0 Bytes\u003cspan class=\"o\"\u003e)\u003c/span\u003e           0.0 b/s\n        Listed slices: 6                             327.3/s\n         Trash slices: 0                             0.0/s\n           Trash data: 0.0 b     \u003cspan class=\"o\"\u003e(\u003c/span\u003e0 Bytes\u003cspan class=\"o\"\u003e)\u003c/span\u003e           0.0 b/s\n Cleaned trash slices: 0                             0.0/s\n   Cleaned trash data: 0.0 b     \u003cspan class=\"o\"\u003e(\u003c/span\u003e0 Bytes\u003cspan class=\"o\"\u003e)\u003c/span\u003e           0.0 b/s\n      Scanned objects: 37/37 \u003cspan class=\"o\"\u003e[=================================]\u003c/span\u003e  8775.9/s used: 4.268971ms\n        Valid objects: 37                            11416.0/s\n           Valid data: 134.0 MiB \u003cspan class=\"o\"\u003e(\u003c/span\u003e140509216 Bytes\u003cspan class=\"o\"\u003e)\u003c/span\u003e   41.0 GiB/s\n    Compacted objects: 0                             0.0/s\n       Compacted data: 0.0 b     \u003cspan class=\"o\"\u003e(\u003c/span\u003e0 Bytes\u003cspan class=\"o\"\u003e)\u003c/span\u003e           0.0 b/s\n       Leaked objects: 0                             0.0/s\n          Leaked data: 0.0 b     \u003cspan class=\"o\"\u003e(\u003c/span\u003e0 Bytes\u003cspan class=\"o\"\u003e)\u003c/span\u003e           0.0 b/s\n      Skipped objects: 0                             0.0/s\n         Skipped data: 0.0 b     \u003cspan class=\"o\"\u003e(\u003c/span\u003e0 Bytes\u003cspan class=\"o\"\u003e)\u003c/span\u003e           0.0 b/s\n\n\u0026lt;INFO\u0026gt;: scanned 37 objects, 37 valid, 0 compacted \u003cspan class=\"o\"\u003e(\u003c/span\u003e0 bytes\u003cspan class=\"o\"\u003e)\u003c/span\u003e, 0 leaked \u003cspan class=\"o\"\u003e(\u003c/span\u003e0 bytes\u003cspan class=\"o\"\u003e)\u003c/span\u003e, 0 delslices \u003cspan class=\"o\"\u003e(\u003c/span\u003e0 bytes\u003cspan class=\"o\"\u003e)\u003c/span\u003e, 0 delfiles \u003cspan class=\"o\"\u003e(\u003c/span\u003e0 bytes\u003cspan class=\"o\"\u003e)\u003c/span\u003e, 0 skipped \u003cspan class=\"o\"\u003e(\u003c/span\u003e0 bytes\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e[\u003c/span\u003egc.go:379]\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003ch1 id=\"3-问题讨论\"\u003e3 问题讨论\u003c/h1\u003e\n\n\u003ch2 id=\"31-chunk-id-和-slice-id-的分配\"\u003e3.1 chunk id 和 slice id 的分配\u003c/h2\u003e\n\n\u003col\u003e\n  \u003cli\u003e每个文件都是从 chunk0 开始的；\u003c/li\u003e\n  \u003cli\u003e实际上没有 chunk id 的概念，只是在查找文件的过程中\u003cstrong\u003e\u003cmark\u003e动态使用\u003c/mark\u003e\u003c/strong\u003e，并没有存储到数据和元数据中；\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003cp\u003e代码里就是直接根据 64MB 计算下一个 chunk id，接下来的读写都是 slice 维度的，\nslice id 是全局唯一的，会存储到数据（object key）和元数据（tikv keys/values）中。\u003c/p\u003e\n\n\u003cp\u003e下一个可用的 sliceID 和 inodeID 记录在 global unique 变量中，初始化：\u003c/p\u003e\n\n\u003cdiv class=\"language-plaintext highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003eRegister(\u0026#34;tikv\u0026#34;, newKVMeta)                  // pkg/meta/tkv_tikv.go\n                 |-newBaseMeta(addr, conf)   // pkg/meta/tkv.go\n                   |-newBaseMeta(addr, conf) // pkg/meta/base.go\n                     |-.freeInodes // initialized as default value of type `freeID`\n                     |-.freeSlices // initialized as default value of type `freeID`\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e然后，以写文件为例，调用栈：\u003c/p\u003e\n\n\u003cdiv class=\"language-plaintext highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003eWrite(off uint64, data)\n  |-if f.totalSlices() \u0026gt;= 1000 {\n  |     wait a while\n  | }\n  |-chunkID := uint32(off / meta.ChunkSize) // chunk index, or chunk id\n  |-pos := uint32(off % meta.ChunkSize)     // position inside the chunk for writing\n  |-for len(data) \u0026gt; 0 {\n  |   |-writeChunk\n  |       |-c := f.findChunk(chunkID)\n  |       |-s := c.findWritableSlice(off, uint32(len(data)))\n  |       |-if no wriatable slice {\n  |       |     s = \u0026amp;sliceWriter{chunk: c, off: off, }\n  |       |     go s.prepareID(meta.Background, false) // pkg/vfs/writer.go\n  |       |           |-NewSlice\n  |       |               |-*id = m.freeSlices.next    // globally unique ID\n  |       |\n  |       |     c.slices = append(c.slices, s)\n  |       |     if len(c.slices) == 1 {\n  |       |         f.refs++\n  |       |         go c.commitThread()\n  |       |     }\n  |       |-}\n  |       |-return s.write(ctx, off-s.off, data)\n  |         NewSlice // pkg/meta/base.go\n  |-}\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003ch2 id=\"32-juicefs-pending-delete-slices-和-background-job\"\u003e3.2 JuiceFS pending delete slices 和 background job\u003c/h2\u003e\n\n\u003ch3 id=\"321-设计初衷\"\u003e3.2.1 设计初衷\u003c/h3\u003e\n\n\u003cp\u003e引入 pending delete slices 主要是\u003cstrong\u003e\u003cmark\u003e大批量删除场景的性能优化\u003c/mark\u003e\u003c/strong\u003e：\u003c/p\u003e\n\n\u003col\u003e\n  \u003cli\u003e每个 JuiceFS 客户端只允许并发 100 的删除操作；\u003c/li\u003e\n  \u003cli\u003e超过 100 时，自动放入后台队列，由 background job 异步删除；\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003ch3 id=\"322-代码\"\u003e3.2.2 代码\u003c/h3\u003e\n\n\u003cdiv class=\"language-go highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"c\"\u003e// pkg/meta/base.go\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003efunc\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003em\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003ebaseMeta\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"n\"\u003efileDeleted\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eopened\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eforce\u003c/span\u003e \u003cspan class=\"kt\"\u003ebool\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003einode\u003c/span\u003e \u003cspan class=\"n\"\u003eIno\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003elength\u003c/span\u003e \u003cspan class=\"kt\"\u003euint64\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"n\"\u003eopened\u003c/span\u003e\n        \u003cspan class=\"n\"\u003em\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eremovedFiles\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003einode\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"no\"\u003etrue\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eelse\u003c/span\u003e\n        \u003cspan class=\"n\"\u003em\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003etryDeleteFileData\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003einode\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003elength\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eforce\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003efunc\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003em\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003ebaseMeta\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"n\"\u003etryDeleteFileData\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003einode\u003c/span\u003e \u003cspan class=\"n\"\u003eIno\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003elength\u003c/span\u003e \u003cspan class=\"kt\"\u003euint64\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eforce\u003c/span\u003e \u003cspan class=\"kt\"\u003ebool\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"n\"\u003eforce\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"n\"\u003em\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003emaxDeleting\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;-\u003c/span\u003e \u003cspan class=\"k\"\u003estruct\u003c/span\u003e\u003cspan class=\"p\"\u003e{}{}\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e}\u003c/span\u003e \u003cspan class=\"k\"\u003eelse\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"k\"\u003eselect\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"k\"\u003ecase\u003c/span\u003e \u003cspan class=\"n\"\u003em\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003emaxDeleting\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;-\u003c/span\u003e \u003cspan class=\"k\"\u003estruct\u003c/span\u003e\u003cspan class=\"p\"\u003e{}{}\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"c\"\u003e// maxDeleting 没满，直接删\u003c/span\u003e\n        \u003cspan class=\"k\"\u003edefault\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e                          \u003cspan class=\"c\"\u003e// maxDeleting 满了之后走到这里，直接返回，靠后台任务删\u003c/span\u003e\n            \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"c\"\u003e// will be cleanup later\u003c/span\u003e\n        \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n    \u003cspan class=\"k\"\u003ego\u003c/span\u003e \u003cspan class=\"k\"\u003efunc\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"n\"\u003em\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003een\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003edoDeleteFileData\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003einode\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003elength\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n        \u003cspan class=\"o\"\u003e\u0026lt;-\u003c/span\u003e\u003cspan class=\"n\"\u003em\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003emaxDeleting\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e}()\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e这个 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003emaxDeleting\u003c/code\u003e 初始为一个 100 的 buffered channel，每次删除文件时，会尝试往里面放一个元素，\u003c/p\u003e\n\n\u003cdiv class=\"language-go highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"c\"\u003e// pkg/meta/base.go\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003efunc\u003c/span\u003e \u003cspan class=\"n\"\u003enewBaseMeta\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eaddr\u003c/span\u003e \u003cspan class=\"kt\"\u003estring\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003econf\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003eConfig\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003ebaseMeta\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e\u003cspan class=\"n\"\u003ebaseMeta\u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"n\"\u003esid\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e          \u003cspan class=\"n\"\u003econf\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eSid\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n        \u003cspan class=\"n\"\u003eremovedFiles\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"nb\"\u003emake\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003emap\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003eIno\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\u003cspan class=\"kt\"\u003ebool\u003c/span\u003e\u003cspan class=\"p\"\u003e),\u003c/span\u003e\n        \u003cspan class=\"n\"\u003ecompacting\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e   \u003cspan class=\"nb\"\u003emake\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003emap\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"kt\"\u003euint64\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\u003cspan class=\"kt\"\u003ebool\u003c/span\u003e\u003cspan class=\"p\"\u003e),\u003c/span\u003e\n        \u003cspan class=\"n\"\u003emaxDeleting\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e  \u003cspan class=\"nb\"\u003emake\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003echan\u003c/span\u003e \u003cspan class=\"k\"\u003estruct\u003c/span\u003e\u003cspan class=\"p\"\u003e{},\u003c/span\u003e \u003cspan class=\"m\"\u003e100\u003c/span\u003e\u003cspan class=\"p\"\u003e),\u003c/span\u003e \u003cspan class=\"c\"\u003e// 代码里写死了 100\u003c/span\u003e\n        \u003cspan class=\"o\"\u003e...\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003ch3 id=\"323-潜在的问题\"\u003e3.2.3 潜在的问题\u003c/h3\u003e\n\n\u003cp\u003e后台删除是 JuiceFS client 中的 background job 做的，这个 background job 的开关是可配置的，\u003c/p\u003e\n\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003e$ \u003c/span\u003e./juicefs mount \u003cspan class=\"nt\"\u003e--no-bgjob\u003c/span\u003e ... \u003cspan class=\"c\"\u003e# 关闭 background job\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e这个开关的控制有点 tricky：\u003c/p\u003e\n\n\u003col\u003e\n  \u003cli\u003e打开：如果一个 volume 的客户端太多，大家都会去做后台清理，都获取文件锁，对元数据引擎的压力非常大；\u003c/li\u003e\n  \u003cli\u003e关闭：没有客户端去做后台清理，导致这些文件一直存在于对象存在中，也可以称为\u003cstrong\u003e\u003cmark\u003e文件泄露\u003c/mark\u003e\u003c/strong\u003e，使用成本上升。\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003cp\u003e一种折中的做法：\u003c/p\u003e\n\n\u003cul\u003e\n  \u003cli\u003e客户端不太多的 volumes：默认启用 bgjob；\u003c/li\u003e\n  \u003cli\u003e客户端太多的 volumes，默认关闭 bgjob，然后指定特定的 client 开启 bgjob，代表这个 volume 的所有客户端执行清理操作。\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2 id=\"33-juicefs-支持的单个最大文件-128pib-是怎么来的\"\u003e3.3 JuiceFS 支持的单个最大文件 128PiB 是怎么来的\u003c/h2\u003e\n\n\u003cp\u003e从以上定义可以看到，理论上 JuiceFS 支持的单个文件大小是 maxSliceID (int64) * maxChunkSize，\n以默认的 maxChunkSize=64MB（2^26 Byte）为例，\u003c/p\u003e\n\n\u003cul\u003e\n  \u003cli\u003e理论上限：\u003ccode class=\"language-plaintext highlighter-rouge\"\u003e2^63 * 2^26 = 2^(63+26) Byte\u003c/code\u003e。\u003c/li\u003e\n  \u003cli\u003e实际上限：\u003ccode class=\"language-plaintext highlighter-rouge\"\u003e2^31 * 2^26 = 2^(31+26) Byte\u003c/code\u003e \u003cstrong\u003e\u003cmark\u003e\u003ccode\u003e= 128PiB\u003c/code\u003e\u003c/mark\u003e\u003c/strong\u003e，这个数字来自\u003ca href=\"https://juicefs.com/docs/cloud/reference/spec_limits/\"\u003e官方文档\u003c/a\u003e。\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003e实际上限是 128PiB 的原因也很简单，在\u003cstrong\u003e\u003cmark\u003e代码里写死了\u003c/mark\u003e\u003c/strong\u003e，\u003c/p\u003e\n\n\u003cdiv class=\"language-go highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"c\"\u003e// pkg/vfs/vfs.go\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\n    \u003cspan class=\"n\"\u003emaxFileSize\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003emeta\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eChunkSize\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e \u003cspan class=\"m\"\u003e31\u003c/span\u003e\n\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003ch2 id=\"34-为什么-juicefs-写入对象存储的文件不能通过对象存储直接读取\"\u003e3.4 为什么 JuiceFS 写入对象存储的文件，不能通过对象存储直接读取？\u003c/h2\u003e\n\n\u003cp\u003e这里说的“不能读取”，是指不能直接\u003cstrong\u003e\u003cmark\u003e读出原文件给到用户\u003c/mark\u003e\u003c/strong\u003e，而不是说不能读取 objects。\u003c/p\u003e\n\n\u003cp\u003e看过本文应该很清楚了，JuiceFS 写入对象存储的文件是按照 Chunk、Slice、Block 进行切分的，\n只有数据内容，且保护重复数据，还没有文件信息元信息（文件名等）。\u003c/p\u003e\n\n\u003cp\u003e所以，以对象的存储的方式只能读这些 objects，是无法恢复出原文件给到用户的。\u003c/p\u003e\n\n\u003ch2 id=\"35-juicefs-不会对文件进行合并\"\u003e3.5 JuiceFS 不会对文件进行合并\u003c/h2\u003e\n\n\u003cp\u003eHighlight：JuiceFS \u003cstrong\u003e\u003cmark\u003e不会文件进行合并\u003c/mark\u003e\u003c/strong\u003e写入对象存储，\n这是为了\u003cstrong\u003e\u003cmark\u003e避免读放大\u003c/mark\u003e\u003c/strong\u003e。\u003c/p\u003e\n\n\u003ch1 id=\"4-总结\"\u003e4 总结\u003c/h1\u003e\n\n\u003cp\u003e至此，我们对 JuiceFS 数据和元数据设计的探索学习就告一段落了。希望有了这些知识，\n用户和工程师在日常的使用和维护 JuiceFS 过程中，看问题和解决问题能更加得心应手。\u003c/p\u003e\n\n\u003ch1 id=\"参考资料\"\u003e参考资料\u003c/h1\u003e\n\n\u003col\u003e\n  \u003cli\u003e官方文档：\u003ca href=\"https://juicefs.com/docs/zh/community/architecture/#how-juicefs-store-files\"\u003eJuiceFS 如何存储文件\u003c/a\u003e, juicefs.com\u003c/li\u003e\n  \u003cli\u003e官方文档：\u003ca href=\"https://juicefs.com/docs/zh/community/internals/#4-%E6%96%87%E4%BB%B6%E6%95%B0%E6%8D%AE%E6%A0%BC%E5%BC%8F\"\u003e文件数据格式\u003c/a\u003e, juicefs.com\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003chr/\u003e\n\n\u003cp\u003e\u003ca href=\"https://notbyai.fyi\"\u003e\u003cimg src=\"/assets/img/Written-By-Human-Not-By-AI-Badge-white.svg\" alt=\"Written by Human, Not by AI\"/\u003e\u003c/a\u003e\n\u003ca href=\"https://notbyai.fyi\"\u003e\u003cimg src=\"/assets/img/Written-By-Human-Not-By-AI-Badge-black.svg\" alt=\"Written by Human, Not by AI\"/\u003e\u003c/a\u003e\u003c/p\u003e\n\n\n  \u003c!-- POST NAVIGATION --\u003e\n  \u003cdiv class=\"postNav clearfix\"\u003e\n     \n      \u003ca class=\"prev\" href=\"/blog/juicefs-data-metadata-design-illustrative-guide-2-zh/\"\u003e\u003cspan\u003e« 直观解读 JuiceFS 的数据和元数据设计（二）：看山不是山（2024）\u003c/span\u003e\n      \n    \u003c/a\u003e\n      \n     \n  \u003c/div\u003e\n\u003c/div\u003e",
  "Date": "2024-10-27T00:00:00Z",
  "Author": "Arthur Chiao"
}