{
  "Source": "arthurchiao.art",
  "Title": "JuiceFS 元数据引擎初探：高层架构、引擎选型、读写工作流（2024）",
  "Link": "https://arthurchiao.art/blog/juicefs-metadata-deep-dive-1-zh/",
  "Content": "\u003cdiv class=\"post\"\u003e\n  \n  \u003ch1 class=\"postTitle\"\u003eJuiceFS 元数据引擎初探：高层架构、引擎选型、读写工作流（2024）\u003c/h1\u003e\n  \u003cp class=\"meta\"\u003ePublished at 2024-09-12 | Last Update 2024-10-16\u003c/p\u003e\n  \n  \u003cp align=\"center\"\u003e\u003cimg src=\"/assets/img/juicefs-metadata-deep-dive/juicefs-tikv-cluster.png\" width=\"90%\"/\u003e\u003c/p\u003e\n\u003cp align=\"center\"\u003eFig. JuiceFS cluster initialization, and how POSIX file operations are handled by JuiceFS.\u003c/p\u003e\n\n\u003cul\u003e\n  \u003cli\u003e\u003ca href=\"/blog/juicefs-metadata-deep-dive-1-zh/\"\u003eJuiceFS 元数据引擎初探：高层架构、引擎选型、读写工作流（2024）\u003c/a\u003e\u003c/li\u003e\n  \u003cli\u003e\u003ca href=\"/blog/juicefs-metadata-deep-dive-2-zh/\"\u003eJuiceFS 元数据引擎再探：开箱解读 TiKV 中的 JuiceFS 元数据（2024）\u003c/a\u003e\u003c/li\u003e\n  \u003cli\u003e\u003ca href=\"/blog/juicefs-metadata-deep-dive-3-zh/\"\u003eJuiceFS 元数据引擎三探：从实践中学习 TiKV 的 MVCC 和 GC（2024）\u003c/a\u003e\u003c/li\u003e\n  \u003cli\u003e\u003ca href=\"/blog/juicefs-metadata-deep-dive-4-zh/\"\u003eJuiceFS 元数据引擎四探：元数据大小评估、限流与限速的设计思考（2024）\u003c/a\u003e\u003c/li\u003e\n  \u003cli\u003e\u003ca href=\"/blog/juicefs-metadata-deep-dive-5-zh/\"\u003eJuiceFS 元数据引擎五探：元数据备份与恢复（2024）\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003e水平及维护精力所限，文中不免存在错误或过时之处，请酌情参考。\n\u003cstrong\u003e\u003cmark\u003e传播知识，尊重劳动，年满十八周岁，转载请注明\u003ca href=\"https://arthurchiao.art\"\u003e出处\u003c/a\u003e\u003c/mark\u003e\u003c/strong\u003e。\u003c/p\u003e\n\n\u003chr/\u003e\n\n\u003cul id=\"markdown-toc\"\u003e\n  \u003cli\u003e\u003ca href=\"#1-juicefs-高层架构与组件\" id=\"markdown-toc-1-juicefs-高层架构与组件\"\u003e1 JuiceFS 高层架构与组件\u003c/a\u003e    \u003cul\u003e\n      \u003cli\u003e\u003ca href=\"#11-juicefs-client\" id=\"markdown-toc-11-juicefs-client\"\u003e1.1 JuiceFS client\u003c/a\u003e\u003c/li\u003e\n      \u003cli\u003e\u003ca href=\"#12-metatdata-engine元数据引擎\" id=\"markdown-toc-12-metatdata-engine元数据引擎\"\u003e1.2 Metatdata engine（元数据引擎）\u003c/a\u003e\u003c/li\u003e\n      \u003cli\u003e\u003ca href=\"#13-object-store\" id=\"markdown-toc-13-object-store\"\u003e1.3. Object store\u003c/a\u003e\u003c/li\u003e\n    \u003c/ul\u003e\n  \u003c/li\u003e\n  \u003cli\u003e\u003ca href=\"#2-juicefs-元数据存储引擎对比tikv-vs-etcd\" id=\"markdown-toc-2-juicefs-元数据存储引擎对比tikv-vs-etcd\"\u003e2 JuiceFS 元数据存储引擎对比：\u003ccode class=\"language-plaintext highlighter-rouge\"\u003etikv vs. etcd\u003c/code\u003e\u003c/a\u003e    \u003cul\u003e\n      \u003cli\u003e\u003ca href=\"#21-设计与优缺点对比\" id=\"markdown-toc-21-设计与优缺点对比\"\u003e2.1 设计与优缺点对比\u003c/a\u003e\u003c/li\u003e\n      \u003cli\u003e\u003ca href=\"#22-几点解释\" id=\"markdown-toc-22-几点解释\"\u003e2.2 几点解释\u003c/a\u003e\u003c/li\u003e\n      \u003cli\u003e\u003ca href=\"#23-例子tikv-集群-engine-size-和内存使用监控\" id=\"markdown-toc-23-例子tikv-集群-engine-size-和内存使用监控\"\u003e2.3 例子：TiKV 集群 engine size 和内存使用监控\u003c/a\u003e\u003c/li\u003e\n    \u003c/ul\u003e\n  \u003c/li\u003e\n  \u003cli\u003e\u003ca href=\"#3-juicefs--tikv集群启动和宏观读写流程\" id=\"markdown-toc-3-juicefs--tikv集群启动和宏观读写流程\"\u003e3 JuiceFS + TiKV：集群启动和宏观读写流程\u003c/a\u003e    \u003cul\u003e\n      \u003cli\u003e\u003ca href=\"#31-架构\" id=\"markdown-toc-31-架构\"\u003e3.1 架构\u003c/a\u003e\u003c/li\u003e\n      \u003cli\u003e\u003ca href=\"#32-tikv-集群启动\" id=\"markdown-toc-32-tikv-集群启动\"\u003e3.2 TiKV 集群启动\u003c/a\u003e        \u003cul\u003e\n          \u003cli\u003e\u003ca href=\"#321-tikv--pd-配置差异\" id=\"markdown-toc-321-tikv--pd-配置差异\"\u003e3.2.1 TiKV \u0026amp; PD 配置差异\u003c/a\u003e\u003c/li\u003e\n          \u003cli\u003e\u003ca href=\"#322-服务启动\" id=\"markdown-toc-322-服务启动\"\u003e3.2.2 服务启动\u003c/a\u003e\u003c/li\u003e\n        \u003c/ul\u003e\n      \u003c/li\u003e\n      \u003cli\u003e\u003ca href=\"#33-宏观读写流程\" id=\"markdown-toc-33-宏观读写流程\"\u003e3.3 宏观读写流程\u003c/a\u003e\u003c/li\u003e\n    \u003c/ul\u003e\n  \u003c/li\u003e\n  \u003cli\u003e\u003ca href=\"#4-tikv-内部数据初探\" id=\"markdown-toc-4-tikv-内部数据初探\"\u003e4 TiKV 内部数据初探\u003c/a\u003e    \u003cul\u003e\n      \u003cli\u003e\u003ca href=\"#41-简单脚本-tikv-ctlshpd-ctlsh\" id=\"markdown-toc-41-简单脚本-tikv-ctlshpd-ctlsh\"\u003e4.1 简单脚本 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003etikv-ctl.sh/pd-ctl.sh\u003c/code\u003e\u003c/a\u003e\u003c/li\u003e\n      \u003cli\u003e\u003ca href=\"#42-tikv-ctl-scan-扫描-keyvalue\" id=\"markdown-toc-42-tikv-ctl-scan-扫描-keyvalue\"\u003e4.2 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003etikv-ctl scan\u003c/code\u003e 扫描 key/value\u003c/a\u003e\u003c/li\u003e\n      \u003cli\u003e\u003ca href=\"#43-tikv-ctl-mvcc-查看给定-key-对应的-value\" id=\"markdown-toc-43-tikv-ctl-mvcc-查看给定-key-对应的-value\"\u003e4.3 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003etikv-ctl mvcc\u003c/code\u003e 查看给定 key 对应的 value\u003c/a\u003e\u003c/li\u003e\n      \u003cli\u003e\u003ca href=\"#44-tikv-ctl---decode-key-解除字符转义\" id=\"markdown-toc-44-tikv-ctl---decode-key-解除字符转义\"\u003e4.4 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003etikv-ctl --decode \u0026lt;key\u0026gt;\u003c/code\u003e 解除字符转义\u003c/a\u003e\u003c/li\u003e\n      \u003cli\u003e\u003ca href=\"#45-tikv-ctl---to-hex转义表示---十六进制表示\" id=\"markdown-toc-45-tikv-ctl---to-hex转义表示---十六进制表示\"\u003e4.5 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003etikv-ctl --to-hex\u003c/code\u003e：转义表示 -\u0026gt; 十六进制表示\u003c/a\u003e\u003c/li\u003e\n      \u003cli\u003e\u003ca href=\"#46-tikv-ctl---to-escaped-value十六进制-value---带转义的字符串\" id=\"markdown-toc-46-tikv-ctl---to-escaped-value十六进制-value---带转义的字符串\"\u003e4.6 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003etikv-ctl --to-escaped \u0026lt;value\u0026gt;\u003c/code\u003e：十六进制 value -\u0026gt; 带转义的字符串\u003c/a\u003e\u003c/li\u003e\n    \u003c/ul\u003e\n  \u003c/li\u003e\n  \u003cli\u003e\u003ca href=\"#5-总结\" id=\"markdown-toc-5-总结\"\u003e5 总结\u003c/a\u003e\u003c/li\u003e\n  \u003cli\u003e\u003ca href=\"#参考资料\" id=\"markdown-toc-参考资料\"\u003e参考资料\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003chr/\u003e\n\n\u003ch1 id=\"1-juicefs-高层架构与组件\"\u003e1 JuiceFS 高层架构与组件\u003c/h1\u003e\n\n\u003cp align=\"center\"\u003e\u003cimg src=\"/assets/img/juicefs-metadata-deep-dive/juicefs-components-1.png\" width=\"70%\"/\u003e\u003c/p\u003e\n\u003cp align=\"center\"\u003eFig. JuiceFS components and architecutre.\u003c/p\u003e\n\n\u003cp\u003e如图，最粗的粒度上可以分为三个组件。\u003c/p\u003e\n\n\u003ch2 id=\"11-juicefs-client\"\u003e1.1 JuiceFS client\u003c/h2\u003e\n\n\u003cul\u003e\n  \u003cli\u003e\u003ccode class=\"language-plaintext highlighter-rouge\"\u003ejuicefs format ...\u003c/code\u003e 可以创建一个 volume；\u003c/li\u003e\n  \u003cli\u003e\u003ccode class=\"language-plaintext highlighter-rouge\"\u003ejuicefs config ...\u003c/code\u003e 可以修改一个 volume 的配置；\u003c/li\u003e\n  \u003cli\u003e\u003ccode class=\"language-plaintext highlighter-rouge\"\u003ejuicefs mount ...\u003c/code\u003e 可以把一个 volume 挂载到机器上，然后用户就可以在里面读写文件了；\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2 id=\"12-metatdata-engine元数据引擎\"\u003e1.2 Metatdata engine（元数据引擎）\u003c/h2\u003e\n\n\u003cul\u003e\n  \u003cli\u003e用于\u003cstrong\u003e\u003cmark\u003e存储 JuiceFS 的元数据\u003c/mark\u003e\u003c/strong\u003e，例如每个文件的文件名、最后修改时间等等；\u003c/li\u003e\n  \u003cli\u003e可选择 etcd、TiKV 等等；\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2 id=\"13-object-store\"\u003e1.3. Object store\u003c/h2\u003e\n\n\u003cp\u003e实际的对象存储，例如 S3、Ceph、阿里云 OSS 等等，存放 JuiceFS volume 内的数据。\u003c/p\u003e\n\n\u003ch1 id=\"2-juicefs-元数据存储引擎对比tikv-vs-etcd\"\u003e2 JuiceFS 元数据存储引擎对比：\u003ccode class=\"language-plaintext highlighter-rouge\"\u003etikv vs. etcd\u003c/code\u003e\u003c/h1\u003e\n\n\u003ch2 id=\"21-设计与优缺点对比\"\u003e2.1 设计与优缺点对比\u003c/h2\u003e\n\n\u003ctable\u003e\n  \u003cthead\u003e\n    \u003ctr\u003e\n      \u003cth style=\"text-align: left\"\u003e \u003c/th\u003e\n      \u003cth style=\"text-align: left\"\u003eTiKV as metadata engine\u003c/th\u003e\n      \u003cth style=\"text-align: left\"\u003eetcd as metadata engine\u003c/th\u003e\n    \u003c/tr\u003e\n  \u003c/thead\u003e\n  \u003ctbody\u003e\n    \u003ctr\u003e\n      \u003ctd style=\"text-align: left\"\u003e\u003cstrong\u003e\u003cmark\u003e管理节点\u003c/mark\u003e\u003c/strong\u003e（e.g. leader election）\u003c/td\u003e\n      \u003ctd style=\"text-align: left\"\u003ePD (TiKV cluster manager)\u003c/td\u003e\n      \u003ctd style=\"text-align: left\"\u003eetcd server\u003c/td\u003e\n    \u003c/tr\u003e\n    \u003ctr\u003e\n      \u003ctd style=\"text-align: left\"\u003e\u003cstrong\u003e\u003cmark\u003e数据节点\u003c/mark\u003e\u003c/strong\u003e（存储 juicefs metadata）\u003c/td\u003e\n      \u003ctd style=\"text-align: left\"\u003eTiKV server\u003c/td\u003e\n      \u003ctd style=\"text-align: left\"\u003eetcd server\u003c/td\u003e\n    \u003c/tr\u003e\n    \u003ctr\u003e\n      \u003ctd style=\"text-align: left\"\u003e\u003cstrong\u003e\u003cmark\u003e数据节点对等\u003c/mark\u003e\u003c/strong\u003e\u003c/td\u003e\n      \u003ctd style=\"text-align: left\"\u003e无要求\u003c/td\u003e\n      \u003ctd style=\"text-align: left\"\u003e\u003cstrong\u003e\u003cmark\u003e完全对等\u003c/mark\u003e\u003c/strong\u003e\u003c/td\u003e\n    \u003c/tr\u003e\n    \u003ctr\u003e\n      \u003ctd style=\"text-align: left\"\u003e\u003cstrong\u003e\u003cmark\u003e数据一致性粒度\u003c/mark\u003e\u003c/strong\u003e\u003c/td\u003e\n      \u003ctd style=\"text-align: left\"\u003eregion-level (TiKV 的概念，\u003ccode class=\"language-plaintext highlighter-rouge\"\u003eregion \u0026lt; node\u003c/code\u003e)\u003c/td\u003e\n      \u003ctd style=\"text-align: left\"\u003enode-level\u003c/td\u003e\n    \u003c/tr\u003e\n    \u003ctr\u003e\n      \u003ctd style=\"text-align: left\"\u003e\u003cstrong\u003e\u003cmark\u003eRaft 粒度\u003c/mark\u003e\u003c/strong\u003e\u003c/td\u003e\n      \u003ctd style=\"text-align: left\"\u003eregion-level (multi-raft，TiKV 的概念)\u003c/td\u003e\n      \u003ctd style=\"text-align: left\"\u003enode-level\u003c/td\u003e\n    \u003c/tr\u003e\n    \u003ctr\u003e\n      \u003ctd style=\"text-align: left\"\u003e\u003cstrong\u003e\u003cmark\u003e缓存多少磁盘数据在内存中\u003c/mark\u003e\u003c/strong\u003e\u003c/td\u003e\n      \u003ctd style=\"text-align: left\"\u003e一部分\u003c/td\u003e\n      \u003ctd style=\"text-align: left\"\u003e\u003cstrong\u003e\u003cmark\u003e所有\u003c/mark\u003e\u003c/strong\u003e\u003c/td\u003e\n    \u003c/tr\u003e\n    \u003ctr\u003e\n      \u003ctd style=\"text-align: left\"\u003e\u003cstrong\u003e\u003cmark\u003e集群支持的最大数据量\u003c/mark\u003e\u003c/strong\u003e\u003c/td\u003e\n      \u003ctd style=\"text-align: left\"\u003e\u003cstrong\u003e\u003cmark\u003e\u003ccode\u003ePB\u003c/code\u003e\u003c/mark\u003e\u003c/strong\u003e 级别\u003c/td\u003e\n      \u003ctd style=\"text-align: left\"\u003e几十 GB 级别\u003c/td\u003e\n    \u003c/tr\u003e\n    \u003ctr\u003e\n      \u003ctd style=\"text-align: left\"\u003e\u003cstrong\u003e\u003cmark\u003e性能\u003c/mark\u003e\u003c/strong\u003e（JuiceFS 场景）\u003c/td\u003e\n      \u003ctd style=\"text-align: left\"\u003e高（猜测是因为 raft 粒度更细，并发读写高）\u003c/td\u003e\n      \u003ctd style=\"text-align: left\"\u003e\u003cstrong\u003e\u003cmark\u003e低\u003c/mark\u003e\u003c/strong\u003e\u003c/td\u003e\n    \u003c/tr\u003e\n    \u003ctr\u003e\n      \u003ctd style=\"text-align: left\"\u003e维护和二次开发门槛\u003c/td\u003e\n      \u003ctd style=\"text-align: left\"\u003e高（相比 etcd）\u003c/td\u003e\n      \u003ctd style=\"text-align: left\"\u003e低\u003c/td\u003e\n    \u003c/tr\u003e\n    \u003ctr\u003e\n      \u003ctd style=\"text-align: left\"\u003e流行度 \u0026amp; 社区活跃度\u003c/td\u003e\n      \u003ctd style=\"text-align: left\"\u003e低（相比 etcd）\u003c/td\u003e\n      \u003ctd style=\"text-align: left\"\u003e高\u003c/td\u003e\n    \u003c/tr\u003e\n    \u003ctr\u003e\n      \u003ctd style=\"text-align: left\"\u003e适用场景\u003c/td\u003e\n      \u003ctd style=\"text-align: left\"\u003e\u003cstrong\u003e\u003cmark\u003e大和超大 JuiceFS 集群\u003c/mark\u003e\u003c/strong\u003e\u003c/td\u003e\n      \u003ctd style=\"text-align: left\"\u003e中小 JuiceFS 集群\u003c/td\u003e\n    \u003c/tr\u003e\n  \u003c/tbody\u003e\n\u003c/table\u003e\n\n\u003ch2 id=\"22-几点解释\"\u003e2.2 几点解释\u003c/h2\u003e\n\n\u003cp\u003eetcd 集群，\u003c/p\u003e\n\n\u003cul\u003e\n  \u003cli\u003e每个节点完全对等，既负责管理又负责存储数据；\u003c/li\u003e\n  \u003cli\u003e所有数据\u003cstrong\u003e\u003cmark\u003e全部缓存在内存中\u003c/mark\u003e\u003c/strong\u003e，每个节点的数据完全一致。\n 这一点限制了 etcd 集群支持的最大数据量和扩展性，\n 例如现在官网还是建议不要超过 8GB（实际上较新的版本在技术上已经没有这个限制了，\n 但仍受限于机器的内存）。\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eTiKV 方案可以可以理解成把管理和数据存储分开了，\u003c/p\u003e\n\n\u003cul\u003e\n  \u003cli\u003ePD 可以理解为 \u003cstrong\u003e\u003cmark\u003e\u003ccode\u003eTiKV cluster manager\u003c/code\u003e\u003c/mark\u003e\u003c/strong\u003e，负责 leader 选举、multi-raft、元数据到 region 的映射等等；\u003c/li\u003e\n  \u003cli\u003e节点之间也\u003cstrong\u003e\u003cmark\u003e不要求对等\u003c/mark\u003e\u003c/strong\u003e，PD 按照 region（比如 96MB）为单位，将 N（默认 3）个副本放到 N 个 TiKV node 上，而实际上 TiKV 的 node 数量是 M，\u003ccode class=\"language-plaintext highlighter-rouge\"\u003eM \u0026gt;= N\u003c/code\u003e；\u003c/li\u003e\n  \u003cli\u003e数据放在 TiKV 节点的磁盘，内存中\u003cstrong\u003e\u003cmark\u003e只缓存一部分\u003c/mark\u003e\u003c/strong\u003e（默认是用机器 45% 的内存，可控制）。\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2 id=\"23-例子tikv-集群-engine-size-和内存使用监控\"\u003e2.3 例子：TiKV 集群 engine size 和内存使用监控\u003c/h2\u003e\n\n\u003cp\u003eTiKV 作为存储引擎，总结成一句话就是：\u003cstrong\u003e\u003cmark\u003e根据硬件配置干活，能者多劳\u003c/mark\u003e\u003c/strong\u003e ——\n内存大、磁盘大就多干活，反之就少干活。\u003c/p\u003e\n\n\u003cp\u003e下面的监控展示是 7 台 TiKV node 组成的一个集群，各 \u003cstrong\u003e\u003cmark\u003enode 内存不完全一致\u003c/mark\u003e\u003c/strong\u003e：\n3 台 256GB 的，2 台 128GB 的，2 台 64GB 的，\n可以看到每个 TiKV server 确实只用了各自所在 node 一半左右的内存：\u003c/p\u003e\n\n\u003cp align=\"center\"\u003e\u003cimg src=\"/assets/img/juicefs-metadata-deep-dive/tikv-engine-size.png\" width=\"100%\"/\u003e\u003c/p\u003e\n\u003cp align=\"center\"\u003eFig. TiKV engine size and memory usage of a 7-node (with various RAMs) cluster.\u003c/p\u003e\n\n\u003ch1 id=\"3-juicefs--tikv集群启动和宏观读写流程\"\u003e3 JuiceFS + TiKV：集群启动和宏观读写流程\u003c/h1\u003e\n\n\u003ch2 id=\"31-架构\"\u003e3.1 架构\u003c/h2\u003e\n\n\u003cp\u003e用 TiKV 作为元数据引擎，架构如下（先忽略其中的细节信息，稍后会介绍）：\u003c/p\u003e\n\n\u003cp align=\"center\"\u003e\u003cimg src=\"/assets/img/juicefs-metadata-deep-dive/juicefs-tikv-cluster.png\" width=\"90%\"/\u003e\u003c/p\u003e\n\u003cp align=\"center\"\u003eFig. JuiceFS cluster initialization, and how POSIX file operations are handled by JuiceFS.\u003c/p\u003e\n\n\u003ch2 id=\"32-tikv-集群启动\"\u003e3.2 TiKV 集群启动\u003c/h2\u003e\n\n\u003ch3 id=\"321-tikv--pd-配置差异\"\u003e3.2.1 TiKV \u0026amp; PD 配置差异\u003c/h3\u003e\n\n\u003cp\u003e两个组件的几个核心配置项，\u003c/p\u003e\n\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003e$ \u003c/span\u003e\u003cspan class=\"nb\"\u003ecat\u003c/span\u003e /etc/tikv/pd-config.toml\nname \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;pd-node1\u0026#34;\u003c/span\u003e\ndata-dir \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;/var/data/pd\u0026#34;\u003c/span\u003e\n\nclient-urls \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;https://192.168.1.1:2379\u0026#34;\u003c/span\u003e \u003cspan class=\"c\"\u003e# 客户端（例如 JuiceFS）访问 PD 时，连接这个地址\u003c/span\u003e\npeer-urls   \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;https://192.168.1.1:2380\u0026#34;\u003c/span\u003e \u003cspan class=\"c\"\u003e# 其他 PD 节点访问这个 PD 时，连接这个地址，也就是集群内互相通信的地址\u003c/span\u003e\n\n\u003cspan class=\"c\"\u003e# 创建集群时的首批 PD\u003c/span\u003e\ninitial-cluster-token \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;\u0026lt;anything you like\u0026gt;\u0026#34;\u003c/span\u003e\ninitial-cluster \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;pd-node1=https://192.168.1.3:2380,pd-node2=https://192.168.1.2:2380,pd-node3=https://192.168.1.1:2380\u0026#34;\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e可以看到，\u003cstrong\u003e\u003cmark\u003ePD 的配置和 etcd 就比较类似，需要指定其他 PD 节点地址\u003c/mark\u003e\u003c/strong\u003e，它们之间互相通信。\u003c/p\u003e\n\n\u003cp\u003eTiKV 节点（tikv-server）的配置就不一样了，\u003c/p\u003e\n\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003e$ \u003c/span\u003e\u003cspan class=\"nb\"\u003ecat\u003c/span\u003e /etc/tikv/tikv-config.toml\n\u003cspan class=\"o\"\u003e[\u003c/span\u003epd]\nendpoints \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"o\"\u003e[\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;https://192.168.1.1:2379\u0026#34;\u003c/span\u003e, \u003cspan class=\"s2\"\u003e\u0026#34;https://192.168.1.2:2379\u0026#34;\u003c/span\u003e, \u003cspan class=\"s2\"\u003e\u0026#34;https://192.168.1.3:2379\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e]\u003c/span\u003e\n\n\u003cspan class=\"o\"\u003e[\u003c/span\u003eserver]\naddr \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;192.168.1.1:20160\u0026#34;\u003c/span\u003e        \u003cspan class=\"c\"\u003e# 服务地址，JuiceFS client 会直接访问这个地址读写数据\u003c/span\u003e\nstatus-addr \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;192.168.1.1:20180\u0026#34;\u003c/span\u003e \u003cspan class=\"c\"\u003e# prometheus \u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e可以看到，\u003c/p\u003e\n\n\u003col\u003e\n  \u003cli\u003eTiKV 会配置所有 PD 节点的地址，以便自己注册到 PD 作为一个数据节点（存储JuiceFS 元数据）；\u003c/li\u003e\n  \u003cli\u003eTiKV 还会配置一个地址的 server 地址，这个读写本节点所管理的 region 内的数据用的；\n正常流程是 JuiceFS client 先访问 PD，拿到 region 和 tikv-server 信息，\n然后再到 tikv-server 来读写数据（对应 JuiceFS 的元数据）；\u003c/li\u003e\n  \u003cli\u003eTiKV \u003cstrong\u003e\u003cmark\u003e不会配置其他 TiKV 节点的地址\u003c/mark\u003e\u003c/strong\u003e，也就是说 TiKV 节点之间不会 peer-to-peer 互连。\n  属于同一个 raft group 的多个 region 通信，也是先通过 PD 协调的，最后 region leader 才发送数据给 region follower。\n  详见 [1]。\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003ch3 id=\"322-服务启动\"\u003e3.2.2 服务启动\u003c/h3\u003e\n\n\u003cp align=\"center\"\u003e\u003cimg src=\"/assets/img/juicefs-metadata-deep-dive/juicefs-tikv-cluster.png\" width=\"90%\"/\u003e\u003c/p\u003e\n\u003cp align=\"center\"\u003eFig. JuiceFS cluster initialization, and how POSIX file operations are handled by JuiceFS.\u003c/p\u003e\n\n\u003cp\u003e对应图中 step 1 \u0026amp; 2：\u003c/p\u003e\n\n\u003cul\u003e\n  \u003cli\u003estep 1. PD 集群启动，选主；\u003c/li\u003e\n  \u003cli\u003estep 2. TiKV 节点启动，向 PD 注册；每个 TiKV 节点称为一个 store，也就是元数据仓库。\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2 id=\"33-宏观读写流程\"\u003e3.3 宏观读写流程\u003c/h2\u003e\n\n\u003cp\u003e对应图中 step 3~5：\u003c/p\u003e\n\n\u003cul\u003e\n  \u003cli\u003e\n    \u003cp\u003estep 3. JuiceFS 客户端连接到 PD；发出读写文件请求；\u003c/p\u003e\n\n    \u003cul\u003e\n      \u003cli\u003eJuiceFS 客户端中会初始化一个 TiKV 的 transaction kv client，这里面又会初始化一个 PD client，\u003c/li\u003e\n      \u003cli\u003e简单来说，此时 JuiceFS 客户端就有了 PD 集群的信息，例如哪个文件对应到哪个 region，这个 region 分布在哪个 TiKV 节点上，TiKV 服务端连接地址是多少等等；\u003c/li\u003e\n    \u003c/ul\u003e\n  \u003c/li\u003e\n  \u003cli\u003estep 4. JuiceFS （内部的 TiKV 客户端）直接向 TiKV 节点（准确说是 region leader）发起读写请求；\u003c/li\u003e\n  \u003cli\u003estep 5. 元数据处理完成，JuiceFS 客户端开始往对象存储里读写文件。\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch1 id=\"4-tikv-内部数据初探\"\u003e4 TiKV 内部数据初探\u003c/h1\u003e\n\n\u003cp\u003eTiKV 内部存储的都是 JuiceFS 的元数据。具体来说又分为两种：\u003c/p\u003e\n\n\u003col\u003e\n  \u003cli\u003e用户文件的元数据：例如用户创建了一个 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003efoo.txt\u003c/code\u003e，在 TiKV 里面就会对应一条或多条元数据来描述这个文件的信息；\u003c/li\u003e\n  \u003cli\u003eJuiceFS 系统元数据：例如每个 volume 的配置信息，这些对用户是不可见的。\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003cp\u003eTiKV 是扁平的 KV 存储，所以以上两类文件都放在同一个扁平空间，通过 key 访问。\n本文先简单通过命令看看里面的元数据长什么样，下一篇再结合具体 JuiceFS 操作来深入解读这些元数据。\u003c/p\u003e\n\n\u003ch2 id=\"41-简单脚本-tikv-ctlshpd-ctlsh\"\u003e4.1 简单脚本 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003etikv-ctl.sh/pd-ctl.sh\u003c/code\u003e\u003c/h2\u003e\n\n\u003cp\u003e简单封装一下对应的命令行工具，使用更方便，\u003c/p\u003e\n\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003e$ \u003c/span\u003e\u003cspan class=\"nb\"\u003ecat \u003c/span\u003epd-ctl.sh\ntikv-ctl \u003cspan class=\"se\"\u003e\\\u003c/span\u003e\n        \u003cspan class=\"nt\"\u003e--ca-path\u003c/span\u003e /etc/tikv/pki/root.crt \u003cspan class=\"nt\"\u003e--cert-path\u003c/span\u003e /etc/tikv/pki/tikv.crt \u003cspan class=\"nt\"\u003e--key-path\u003c/span\u003e /etc/tikv/pki/tikv.key \u003cspan class=\"se\"\u003e\\\u003c/span\u003e\n        \u003cspan class=\"nt\"\u003e--host\u003c/span\u003e 192.168.1.1:20160 \u003cspan class=\"se\"\u003e\\\u003c/span\u003e\n        \u003cspan class=\"s2\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"nv\"\u003e$@\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;\u003c/span\u003e\n\n\u003cspan class=\"nv\"\u003e$ \u003c/span\u003e\u003cspan class=\"nb\"\u003ecat \u003c/span\u003epd-ctl.sh\npd-ctl \u003cspan class=\"se\"\u003e\\\u003c/span\u003e\n        \u003cspan class=\"nt\"\u003e--cacert\u003c/span\u003e /etc/tikv/pki/root.crt \u003cspan class=\"nt\"\u003e--cert\u003c/span\u003e /etc/tikv/pki/pd.crt \u003cspan class=\"nt\"\u003e--key\u003c/span\u003e /etc/tikv/pki/pd.key \u003cspan class=\"se\"\u003e\\\u003c/span\u003e\n        \u003cspan class=\"nt\"\u003e--pd\u003c/span\u003e https://192.168.1.1:2379  \u003cspan class=\"se\"\u003e\\\u003c/span\u003e\n        \u003cspan class=\"s2\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"nv\"\u003e$@\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003ch2 id=\"42-tikv-ctl-scan-扫描-keyvalue\"\u003e4.2 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003etikv-ctl scan\u003c/code\u003e 扫描 key/value\u003c/h2\u003e\n\n\u003cp\u003etikv-ctl \u003cstrong\u003e\u003cmark\u003e不支持只列出所有 keys\u003c/mark\u003e\u003c/strong\u003e，所以只能 key 和 value 一起打印（扫描）。\u003c/p\u003e\n\n\u003cp\u003e扫描前缀是 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003efoo\u003c/code\u003e 开头的所有 key：\u003c/p\u003e\n\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003e$ \u003c/span\u003e./tikv-ctl.sh scan \u003cspan class=\"nt\"\u003e--from\u003c/span\u003e \u003cspan class=\"s1\"\u003e\u0026#39;zfoo\u0026#39;\u003c/span\u003e \u003cspan class=\"nt\"\u003e--to\u003c/span\u003e \u003cspan class=\"s1\"\u003e\u0026#39;zfop\u0026#39;\u003c/span\u003e \u003cspan class=\"nt\"\u003e--limit\u003c/span\u003e 100\n...\nkey: zfoo-dev\u003cspan class=\"se\"\u003e\\3\u003c/span\u003e75\u003cspan class=\"se\"\u003e\\3\u003c/span\u003e77A\u003cspan class=\"se\"\u003e\\0\u003c/span\u003e01\u003cspan class=\"se\"\u003e\\0\u003c/span\u003e00\u003cspan class=\"se\"\u003e\\0\u003c/span\u003e00\u003cspan class=\"se\"\u003e\\0\u003c/span\u003e00\u003cspan class=\"se\"\u003e\\0\u003c/span\u003e00\u003cspan class=\"se\"\u003e\\0\u003c/span\u003e00\u003cspan class=\"se\"\u003e\\0\u003c/span\u003e00\u003cspan class=\"se\"\u003e\\3\u003c/span\u003e77\u003cspan class=\"se\"\u003e\\0\u003c/span\u003e00Dfile3.\u003cspan class=\"se\"\u003e\\3\u003c/span\u003e77txt\u003cspan class=\"se\"\u003e\\0\u003c/span\u003e00\u003cspan class=\"se\"\u003e\\0\u003c/span\u003e00\u003cspan class=\"se\"\u003e\\0\u003c/span\u003e00\u003cspan class=\"se\"\u003e\\0\u003c/span\u003e00\u003cspan class=\"se\"\u003e\\0\u003c/span\u003e00\u003cspan class=\"se\"\u003e\\3\u003c/span\u003e72\nkey: zfoo-dev\u003cspan class=\"se\"\u003e\\3\u003c/span\u003e75\u003cspan class=\"se\"\u003e\\3\u003c/span\u003e77A\u003cspan class=\"se\"\u003e\\0\u003c/span\u003e01\u003cspan class=\"se\"\u003e\\0\u003c/span\u003e00\u003cspan class=\"se\"\u003e\\0\u003c/span\u003e00\u003cspan class=\"se\"\u003e\\0\u003c/span\u003e00\u003cspan class=\"se\"\u003e\\0\u003c/span\u003e00\u003cspan class=\"se\"\u003e\\0\u003c/span\u003e00\u003cspan class=\"se\"\u003e\\0\u003c/span\u003e00\u003cspan class=\"se\"\u003e\\3\u003c/span\u003e77\u003cspan class=\"se\"\u003e\\0\u003c/span\u003e00Dfile4.\u003cspan class=\"se\"\u003e\\3\u003c/span\u003e77txt\u003cspan class=\"se\"\u003e\\0\u003c/span\u003e00\u003cspan class=\"se\"\u003e\\0\u003c/span\u003e00\u003cspan class=\"se\"\u003e\\0\u003c/span\u003e00\u003cspan class=\"se\"\u003e\\0\u003c/span\u003e00\u003cspan class=\"se\"\u003e\\0\u003c/span\u003e00\u003cspan class=\"se\"\u003e\\3\u003c/span\u003e72\n...\nkey: zfoo-dev\u003cspan class=\"se\"\u003e\\3\u003c/span\u003e75\u003cspan class=\"se\"\u003e\\3\u003c/span\u003e77setting\u003cspan class=\"se\"\u003e\\0\u003c/span\u003e00\u003cspan class=\"se\"\u003e\\3\u003c/span\u003e76\n        default cf value: start_ts: 452330324173520898 value: 7B0A22...\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e扫描的时候一定要在 key 前面加一个 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003ez\u003c/code\u003e 前缀，这是 TiKV 的一个\u003ca href=\"https://tikv.org/docs/3.0/reference/tools/tikv-ctl/\"\u003e设计\u003c/a\u003e，\u003c/p\u003e\n\n\u003cblockquote\u003e\n  \u003cp\u003eThe raw-scan command scans directly from the RocksDB. Note that to scan data keys you need to add a ‘z’ prefix to keys.\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003e代码出处 \u003ca href=\"https://github.com/tikv/tikv/blob/v5.0.0/components/keys/src/lib.rs#L29\"\u003ecomponents/keys/src/lib.rs\u003c/a\u003e。\n但对用户来说不是太友好，暴露了太多内部细节，没有 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eetcdctl\u003c/code\u003e 方便直接。\u003c/p\u003e\n\n\u003ch2 id=\"43-tikv-ctl-mvcc-查看给定-key-对应的-value\"\u003e4.3 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003etikv-ctl mvcc\u003c/code\u003e 查看给定 key 对应的 value\u003c/h2\u003e\n\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003e$ \u003c/span\u003e./tikv-ctl.sh mvcc \u003cspan class=\"nt\"\u003e-k\u003c/span\u003e \u003cspan class=\"s1\"\u003e\u0026#39;zfoo-dev\\375\\377A\\001\\000\\000\\000\\000\\000\\000\\377\\000Dfile1.\\377txt\\000\\000\\000\\000\\000\\372\u0026#39;\u003c/span\u003e \u003cspan class=\"nt\"\u003e--show-cf\u003c/span\u003e default,lock,write\nkey: zfoo-dev\u003cspan class=\"se\"\u003e\\3\u003c/span\u003e75\u003cspan class=\"se\"\u003e\\3\u003c/span\u003e77A\u003cspan class=\"se\"\u003e\\0\u003c/span\u003e01\u003cspan class=\"se\"\u003e\\0\u003c/span\u003e00\u003cspan class=\"se\"\u003e\\0\u003c/span\u003e00\u003cspan class=\"se\"\u003e\\0\u003c/span\u003e00\u003cspan class=\"se\"\u003e\\0\u003c/span\u003e00\u003cspan class=\"se\"\u003e\\0\u003c/span\u003e00\u003cspan class=\"se\"\u003e\\0\u003c/span\u003e00\u003cspan class=\"se\"\u003e\\3\u003c/span\u003e77\u003cspan class=\"se\"\u003e\\0\u003c/span\u003e00Dfile1.\u003cspan class=\"se\"\u003e\\3\u003c/span\u003e77txt\u003cspan class=\"se\"\u003e\\0\u003c/span\u003e00\u003cspan class=\"se\"\u003e\\0\u003c/span\u003e00\u003cspan class=\"se\"\u003e\\0\u003c/span\u003e00\u003cspan class=\"se\"\u003e\\0\u003c/span\u003e00\u003cspan class=\"se\"\u003e\\0\u003c/span\u003e00\u003cspan class=\"se\"\u003e\\3\u003c/span\u003e72\n         write cf value: start_ts: 452330816414416901 commit_ts: 452330816414416903 short_value: 010000000000000002\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003eCF 是 \u003cstrong\u003e\u003cmark\u003e\u003ccode\u003ecolumn family\u003c/code\u003e\u003c/mark\u003e\u003c/strong\u003e 的缩写，进一步了解，可参考\nGoogle bigtable 中关于 CF 的定义\n\u003ca href=\"/blog/google-bigtable-zh/\"\u003e 译 | Bigtable: A Distributed Storage System for Structured Data (OSDI, 2006)\u003c/a\u003e。\u003c/p\u003e\n\n\u003ch2 id=\"44-tikv-ctl---decode-key-解除字符转义\"\u003e4.4 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003etikv-ctl --decode \u0026lt;key\u0026gt;\u003c/code\u003e 解除字符转义\u003c/h2\u003e\n\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"c\"\u003e# tikv escaped format -\u0026gt; raw format\u003c/span\u003e\n./tikv-ctl.sh \u003cspan class=\"nt\"\u003e--decode\u003c/span\u003e \u003cspan class=\"s1\"\u003e\u0026#39;foo-dev\\375\\377A\\001\\000\\000\\000\\000\\000\\000\\377\\000Dfile4.\\377txt\\000\\000\\000\\000\\000\\372\u0026#39;\u003c/span\u003e\nfoo-dev\u003cspan class=\"se\"\u003e\\3\u003c/span\u003e75A\u003cspan class=\"se\"\u003e\\0\u003c/span\u003e01\u003cspan class=\"se\"\u003e\\0\u003c/span\u003e00\u003cspan class=\"se\"\u003e\\0\u003c/span\u003e00\u003cspan class=\"se\"\u003e\\0\u003c/span\u003e00\u003cspan class=\"se\"\u003e\\0\u003c/span\u003e00\u003cspan class=\"se\"\u003e\\0\u003c/span\u003e00\u003cspan class=\"se\"\u003e\\0\u003c/span\u003e00\u003cspan class=\"se\"\u003e\\0\u003c/span\u003e00Dfile4.txt\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003ch2 id=\"45-tikv-ctl---to-hex转义表示---十六进制表示\"\u003e4.5 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003etikv-ctl --to-hex\u003c/code\u003e：转义表示 -\u0026gt; 十六进制表示\u003c/h2\u003e\n\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003e$ \u003c/span\u003e./tikv-ctl.sh \u003cspan class=\"nt\"\u003e--to-hex\u003c/span\u003e \u003cspan class=\"s1\"\u003e\u0026#39;\\375\u0026#39;\u003c/span\u003e\nFD\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003ch2 id=\"46-tikv-ctl---to-escaped-value十六进制-value---带转义的字符串\"\u003e4.6 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003etikv-ctl --to-escaped \u0026lt;value\u0026gt;\u003c/code\u003e：十六进制 value -\u0026gt; 带转义的字符串\u003c/h2\u003e\n\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e./tikv-ctl.sh scan \u003cspan class=\"nt\"\u003e--from\u003c/span\u003e \u003cspan class=\"s1\"\u003e\u0026#39;zfoo\u0026#39;\u003c/span\u003e \u003cspan class=\"nt\"\u003e--to\u003c/span\u003e \u003cspan class=\"s1\"\u003e\u0026#39;zfop\u0026#39;\u003c/span\u003e \u003cspan class=\"nt\"\u003e--limit\u003c/span\u003e 100\nkey: zfoo-dev\u003cspan class=\"se\"\u003e\\3\u003c/span\u003e75\u003cspan class=\"se\"\u003e\\3\u003c/span\u003e77setting\u003cspan class=\"se\"\u003e\\0\u003c/span\u003e00\u003cspan class=\"se\"\u003e\\3\u003c/span\u003e76\n        default cf value: start_ts: 452330324173520898 value: 7B0A22...\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e其中的 value 是可以解码出来的，\u003c/p\u003e\n\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"c\"\u003e# hex -\u0026gt; escaped string\u003c/span\u003e\n\u003cspan class=\"nv\"\u003e$ \u003c/span\u003e./tikv-ctl.sh \u003cspan class=\"nt\"\u003e--to-escaped\u003c/span\u003e \u003cspan class=\"s1\"\u003e\u0026#39;7B0A22...\u0026#39;\u003c/span\u003e\n\u003cspan class=\"o\"\u003e{\u003c/span\u003e\u003cspan class=\"se\"\u003e\\n\\\u0026#34;\u003c/span\u003eName\u003cspan class=\"se\"\u003e\\\u0026#34;\u003c/span\u003e: \u003cspan class=\"se\"\u003e\\\u0026#34;\u003c/span\u003e...\u003cspan class=\"se\"\u003e\\\u0026#34;\u003c/span\u003e,\u003cspan class=\"se\"\u003e\\n\\\u0026#34;\u003c/span\u003eUUID\u003cspan class=\"se\"\u003e\\\u0026#34;\u003c/span\u003e: \u003cspan class=\"se\"\u003e\\\u0026#34;\u003c/span\u003e8cd1ac73\u003cspan class=\"se\"\u003e\\\u0026#34;\u003c/span\u003e,\u003cspan class=\"se\"\u003e\\n\\\u0026#34;\u003c/span\u003eStorage\u003cspan class=\"se\"\u003e\\\u0026#34;\u003c/span\u003e: \u003cspan class=\"se\"\u003e\\\u0026#34;\u003c/span\u003eS3\u003cspan class=\"se\"\u003e\\\u0026#34;\u003c/span\u003e,\u003cspan class=\"se\"\u003e\\n\\\u0026#34;\u003c/span\u003eBucket\u003cspan class=\"se\"\u003e\\\u0026#34;\u003c/span\u003e: \u003cspan class=\"se\"\u003e\\\u0026#34;\u003c/span\u003ehttp://xxx\u003cspan class=\"se\"\u003e\\\u0026#34;\u003c/span\u003e,\u003cspan class=\"se\"\u003e\\n\\\u0026#34;\u003c/span\u003eAccessKey\u003cspan class=\"se\"\u003e\\\u0026#34;\u003c/span\u003e: \u003cspan class=\"se\"\u003e\\\u0026#34;\u003c/span\u003e...\u003cspan class=\"se\"\u003e\\\u0026#34;\u003c/span\u003e,\u003cspan class=\"se\"\u003e\\n\\\u0026#34;\u003c/span\u003eBlockSize\u003cspan class=\"se\"\u003e\\\u0026#34;\u003c/span\u003e: 4096,\u003cspan class=\"se\"\u003e\\n\\\u0026#34;\u003c/span\u003eCompression\u003cspan class=\"se\"\u003e\\\u0026#34;\u003c/span\u003e: \u003cspan class=\"se\"\u003e\\\u0026#34;\u003c/span\u003enone\u003cspan class=\"se\"\u003e\\\u0026#34;\u003c/span\u003e,\u003cspan class=\"se\"\u003e\\n\\\u0026#34;\u003c/span\u003eKeyEncrypted\u003cspan class=\"se\"\u003e\\\u0026#34;\u003c/span\u003e: \u003cspan class=\"nb\"\u003etrue\u003c/span\u003e,\u003cspan class=\"se\"\u003e\\n\\\u0026#34;\u003c/span\u003eMetaVersion\u003cspan class=\"se\"\u003e\\\u0026#34;\u003c/span\u003e: 1,\u003cspan class=\"se\"\u003e\\n\\\u0026#34;\u003c/span\u003eUploadLimit\u003cspan class=\"se\"\u003e\\\u0026#34;\u003c/span\u003e: 0,\u003cspan class=\"se\"\u003e\\n\\\u0026#34;\u003c/span\u003eDownloadLimit\u003cspan class=\"se\"\u003e\\\u0026#34;\u003c/span\u003e: 0,\u003cspan class=\"se\"\u003e\\n\\\u0026#34;\\\u0026#34;\u003c/span\u003e: \u003cspan class=\"se\"\u003e\\\u0026#34;\\\u0026#34;\\n\u003c/span\u003e\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003ch1 id=\"5-总结\"\u003e5 总结\u003c/h1\u003e\n\n\u003cp\u003e本文介绍了一些 JuiceFS 元数据引擎相关的内容。\u003c/p\u003e\n\n\u003ch1 id=\"参考资料\"\u003e参考资料\u003c/h1\u003e\n\n\u003col\u003e\n  \u003cli\u003e\u003ca href=\"https://www.pingcap.com/blog/deep-dive-into-tikv/\"\u003eA Deep Dive into TiKV\u003c/a\u003e, 2016, pincap.com\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003chr/\u003e\n\n\u003cp\u003e\u003ca href=\"https://notbyai.fyi\"\u003e\u003cimg src=\"/assets/img/Written-By-Human-Not-By-AI-Badge-white.svg\" alt=\"Written by Human, Not by AI\"/\u003e\u003c/a\u003e\n\u003ca href=\"https://notbyai.fyi\"\u003e\u003cimg src=\"/assets/img/Written-By-Human-Not-By-AI-Badge-black.svg\" alt=\"Written by Human, Not by AI\"/\u003e\u003c/a\u003e\u003c/p\u003e\n\n\n  \u003c!-- POST NAVIGATION --\u003e\n  \u003cdiv class=\"postNav clearfix\"\u003e\n     \n      \u003ca class=\"prev\" href=\"/blog/gpu-advanced-notes-4-zh/\"\u003e\u003cspan\u003e« GPU 进阶笔记（四）：NVIDIA GH200 芯片、服务器及集群组网（2024）\u003c/span\u003e\n      \n    \u003c/a\u003e\n      \n      \n      \u003ca class=\"next\" href=\"/blog/juicefs-metadata-deep-dive-2-zh/\"\u003e\u003cspan\u003eJuiceFS 元数据引擎再探：开箱解读 TiKV 中的 JuiceFS 元数据（2024） »\u003c/span\u003e\n       \n      \u003c/a\u003e\n     \n  \u003c/div\u003e\n\u003c/div\u003e",
  "Date": "2024-09-12T00:00:00Z",
  "Author": "Arthur Chiao"
}