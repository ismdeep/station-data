{
  "Source": "arthurchiao.art",
  "Title": "Cracking Kubernetes RBAC Authorization (AuthZ) Model (2022)",
  "Link": "https://arthurchiao.art/blog/cracking-k8s-authz-rbac/",
  "Content": "\u003cdiv class=\"post\"\u003e\n  \n  \u003ch1 class=\"postTitle\"\u003eCracking Kubernetes RBAC Authorization (AuthZ) Model (2022)\u003c/h1\u003e\n  \u003cp class=\"meta\"\u003ePublished at 2022-04-17 | Last Update 2022-05-10\u003c/p\u003e\n  \n  \u003cp\u003eThis post first appeared as \u003ca href=\"https://learnk8s.io/rbac-kubernetes\"\u003eLimiting access to Kubernetes resources with RBAC\u003c/a\u003e,\nwhich was kindly edited, re-illustrated and exemplified by \u003ca href=\"https://learnk8s.io/\"\u003elearnk8s.io\u003c/a\u003e, and\nvery friendly to beginners.\u003c/p\u003e\n\n\u003cp\u003eThe version posted here in contrast has a biased focus on the design and\nimplementation, as well as in-depth discussions.\u003c/p\u003e\n\n\u003cp\u003eRelated posts:\u003c/p\u003e\n\n\u003col\u003e\n  \u003cli\u003e\u003ca href=\"/blog/cracking-k8s-node-proxy/\"\u003eCracking Kubernetes Node Proxy (aka kube-proxy)\u003c/a\u003e\u003c/li\u003e\n  \u003cli\u003e\u003ca href=\"/blog/cracking-k8s-network-policy/\"\u003eCracking Kubernetes Network Policy\u003c/a\u003e\u003c/li\u003e\n  \u003cli\u003e\u003ca href=\"/blog/cracking-k8s-authn/\"\u003eCracking Kubernetes Authentication (AuthN) Model\u003c/a\u003e\u003c/li\u003e\n  \u003cli\u003e\u003ca href=\"/blog/cracking-k8s-authz-rbac/\"\u003eCracking Kubernetes RBAC Authorization (AuthZ) Model\u003c/a\u003e\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003ch2 id=\"tl-dr\"\u003eTL; DR\u003c/h2\u003e\n\n\u003cp\u003eThis post digs into the Kubernetes RBAC authorization (AuthZ) model.\u003c/p\u003e\n\n\u003cp\u003eSpecifically, given technical requirements of \u003cstrong\u003e\u003cmark\u003egranting proper\npermissions to an application\u003c/mark\u003e\u003c/strong\u003e to access \u003ccode class=\"language-plaintext highlighter-rouge\"\u003ekube-apiserver\u003c/code\u003e,\nwe’ll introduce concepts like \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eUser\u003c/code\u003e, \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eServiceAccount\u003c/code\u003e, \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eSubject\u003c/code\u003e,\n\u003ccode class=\"language-plaintext highlighter-rouge\"\u003eResource\u003c/code\u003e, \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eVerb\u003c/code\u003e, \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eAPIGroup\u003c/code\u003e, \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eRule\u003c/code\u003e, \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eRole\u003c/code\u003e, \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eRoleBinding\u003c/code\u003e etc step by step, and\neventually build a RBAC authorization model by our own.\u003c/p\u003e\n\n\u003cp\u003eHope that after reading this post, readers will have a deeper understanding on\nthe access control (AuthZ) of \u003ccode class=\"language-plaintext highlighter-rouge\"\u003ekube-apiserver\u003c/code\u003e.\u003c/p\u003e\n\n\u003chr/\u003e\n\n\u003cul id=\"markdown-toc\"\u003e\n  \u003cli\u003e\u003ca href=\"#tl-dr\" id=\"markdown-toc-tl-dr\"\u003eTL; DR\u003c/a\u003e\u003c/li\u003e\n  \u003cli\u003e\u003ca href=\"#1-introduction\" id=\"markdown-toc-1-introduction\"\u003e1 Introduction\u003c/a\u003e    \u003cul\u003e\n      \u003cli\u003e\u003ca href=\"#11-authentication-authn-and-authorization-authz\" id=\"markdown-toc-11-authentication-authn-and-authorization-authz\"\u003e1.1 Authentication (AuthN) and authorization (AuthZ)\u003c/a\u003e\u003c/li\u003e\n      \u003cli\u003e\u003ca href=\"#12-rbac-for-authz\" id=\"markdown-toc-12-rbac-for-authz\"\u003e1.2 RBAC for AuthZ\u003c/a\u003e\u003c/li\u003e\n      \u003cli\u003e\u003ca href=\"#13-rbac-in-kubernetes\" id=\"markdown-toc-13-rbac-in-kubernetes\"\u003e1.3 RBAC in Kubernetes\u003c/a\u003e\u003c/li\u003e\n      \u003cli\u003e\u003ca href=\"#14-purpose-of-this-pose\" id=\"markdown-toc-14-purpose-of-this-pose\"\u003e1.4 Purpose of this pose\u003c/a\u003e\u003c/li\u003e\n    \u003c/ul\u003e\n  \u003c/li\u003e\n  \u003cli\u003e\u003ca href=\"#2-rbac-modeling\" id=\"markdown-toc-2-rbac-modeling\"\u003e2 RBAC modeling\u003c/a\u003e    \u003cul\u003e\n      \u003cli\u003e\u003ca href=\"#21-client-side-modeling\" id=\"markdown-toc-21-client-side-modeling\"\u003e2.1 Client side modeling\u003c/a\u003e        \u003cul\u003e\n          \u003cli\u003e\u003ca href=\"#211-identify-out-of-cluster-usersprograms-introducing-user\" id=\"markdown-toc-211-identify-out-of-cluster-usersprograms-introducing-user\"\u003e2.1.1 Identify out-of-cluster users/programs: introducing \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eUser\u003c/code\u003e\u003c/a\u003e\u003c/li\u003e\n          \u003cli\u003e\u003ca href=\"#212-identify-in-cluster-program-clients-introducing-serviceaccount\" id=\"markdown-toc-212-identify-in-cluster-program-clients-introducing-serviceaccount\"\u003e2.1.2 Identify in-cluster program clients: introducing \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eServiceAccount\u003c/code\u003e\u003c/a\u003e\u003c/li\u003e\n          \u003cli\u003e\u003ca href=\"#213-identify-multiple-clients-introducing-group\" id=\"markdown-toc-213-identify-multiple-clients-introducing-group\"\u003e2.1.3 Identify multiple clients: introducing \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eGroup\u003c/code\u003e\u003c/a\u003e\u003c/li\u003e\n          \u003cli\u003e\u003ca href=\"#214-general-client-referring-introducing-subject\" id=\"markdown-toc-214-general-client-referring-introducing-subject\"\u003e2.1.4 General client referring: introducing \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eSubject\u003c/code\u003e\u003c/a\u003e\u003c/li\u003e\n        \u003c/ul\u003e\n      \u003c/li\u003e\n      \u003cli\u003e\u003ca href=\"#22-server-side-modeling\" id=\"markdown-toc-22-server-side-modeling\"\u003e2.2 Server side modeling\u003c/a\u003e        \u003cul\u003e\n          \u003cli\u003e\u003ca href=\"#221-identify-apisurls-introducing-resource\" id=\"markdown-toc-221-identify-apisurls-introducing-resource\"\u003e2.2.1 Identify APIs/URLs: introducing \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eResource\u003c/code\u003e\u003c/a\u003e\u003c/li\u003e\n          \u003cli\u003e\u003ca href=\"#222-identify-operations-on-resource-introducing-verb\" id=\"markdown-toc-222-identify-operations-on-resource-introducing-verb\"\u003e2.2.2 Identify operations on \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eResource\u003c/code\u003e: introducing \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eVerb\u003c/code\u003e\u003c/a\u003e\u003c/li\u003e\n          \u003cli\u003e\u003ca href=\"#223-distinguish-resources-from-different-api-providers-introducing-apigroup\" id=\"markdown-toc-223-distinguish-resources-from-different-api-providers-introducing-apigroup\"\u003e2.2.3 Distinguish \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eResource\u003c/code\u003es from different API providers: introducing \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eAPIGroup\u003c/code\u003e\u003c/a\u003e\u003c/li\u003e\n        \u003c/ul\u003e\n      \u003c/li\u003e\n      \u003cli\u003e\u003ca href=\"#23-combine-verb-apigroup-and-resource-introducing-rule\" id=\"markdown-toc-23-combine-verb-apigroup-and-resource-introducing-rule\"\u003e2.3 Combine \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eVerb\u003c/code\u003e, \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eAPIGroup\u003c/code\u003e and \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eResource\u003c/code\u003e: introducing \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eRule\u003c/code\u003e\u003c/a\u003e\u003c/li\u003e\n      \u003cli\u003e\u003ca href=\"#24-who-has-the-permissions-described-by-a-rule-introducing-role\" id=\"markdown-toc-24-who-has-the-permissions-described-by-a-rule-introducing-role\"\u003e2.4 Who has the permissions described by a \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eRule\u003c/code\u003e: introducing \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eRole\u003c/code\u003e\u003c/a\u003e\u003c/li\u003e\n      \u003cli\u003e\u003ca href=\"#25-grant-permissions-to-target-clients-introducing-rolebinding\" id=\"markdown-toc-25-grant-permissions-to-target-clients-introducing-rolebinding\"\u003e2.5 Grant permissions to target clients: introducing \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eRoleBinding\u003c/code\u003e\u003c/a\u003e\u003c/li\u003e\n      \u003cli\u003e\u003ca href=\"#26-example-an-end-to-end-workflow\" id=\"markdown-toc-26-example-an-end-to-end-workflow\"\u003e2.6 Example: an end-to-end workflow\u003c/a\u003e\u003c/li\u003e\n      \u003cli\u003e\u003ca href=\"#27-summary\" id=\"markdown-toc-27-summary\"\u003e2.7 Summary\u003c/a\u003e\u003c/li\u003e\n    \u003c/ul\u003e\n  \u003c/li\u003e\n  \u003cli\u003e\u003ca href=\"#3-implemention\" id=\"markdown-toc-3-implemention\"\u003e3 Implemention\u003c/a\u003e    \u003cul\u003e\n      \u003cli\u003e\u003ca href=\"#31-data-structures\" id=\"markdown-toc-31-data-structures\"\u003e3.1 Data structures\u003c/a\u003e\u003c/li\u003e\n      \u003cli\u003e\u003ca href=\"#32-bootstrap-policies\" id=\"markdown-toc-32-bootstrap-policies\"\u003e3.2 Bootstrap policies\u003c/a\u003e\u003c/li\u003e\n    \u003c/ul\u003e\n  \u003c/li\u003e\n  \u003cli\u003e\u003ca href=\"#4-discussions\" id=\"markdown-toc-4-discussions\"\u003e4 Discussions\u003c/a\u003e    \u003cul\u003e\n      \u003cli\u003e\u003ca href=\"#41-namespaceless-rolerolebinding-clusterroleclusterrolebinding\" id=\"markdown-toc-41-namespaceless-rolerolebinding-clusterroleclusterrolebinding\"\u003e4.1 Namespaceless \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eRole\u003c/code\u003e/\u003ccode class=\"language-plaintext highlighter-rouge\"\u003eRoleBinding\u003c/code\u003e: \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eClusterRole\u003c/code\u003e/\u003ccode class=\"language-plaintext highlighter-rouge\"\u003eClusterRoleBinding\u003c/code\u003e\u003c/a\u003e\u003c/li\u003e\n      \u003cli\u003e\u003ca href=\"#42-default-roles-and-clusterroles-in-kubernetes\" id=\"markdown-toc-42-default-roles-and-clusterroles-in-kubernetes\"\u003e4.2 Default roles and clusterroles in Kubernetes\u003c/a\u003e\u003c/li\u003e\n      \u003cli\u003e\u003ca href=\"#43-embed-service-account-info-into-pods\" id=\"markdown-toc-43-embed-service-account-info-into-pods\"\u003e4.3 Embed service account info into pods\u003c/a\u003e\u003c/li\u003e\n      \u003cli\u003e\u003ca href=\"#44-internals-of-authz-process\" id=\"markdown-toc-44-internals-of-authz-process\"\u003e4.4 Internals of AuthZ process\u003c/a\u003e\u003c/li\u003e\n      \u003cli\u003e\u003ca href=\"#45-authn-rationals-of-differentiating-user-and-serviceaccount\" id=\"markdown-toc-45-authn-rationals-of-differentiating-user-and-serviceaccount\"\u003e4.5 AuthN: rationals of differentiating \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eUser\u003c/code\u003e and \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eServiceAccount\u003c/code\u003e\u003c/a\u003e        \u003cul\u003e\n          \u003cli\u003e\u003ca href=\"#451-normal-users\" id=\"markdown-toc-451-normal-users\"\u003e4.5.1 Normal users\u003c/a\u003e\u003c/li\u003e\n          \u003cli\u003e\u003ca href=\"#452-serviceaccount-users\" id=\"markdown-toc-452-serviceaccount-users\"\u003e4.5.2 ServiceAccount users\u003c/a\u003e\u003c/li\u003e\n        \u003c/ul\u003e\n      \u003c/li\u003e\n      \u003cli\u003e\u003ca href=\"#46-related-configurations-of-kube-apiserver\" id=\"markdown-toc-46-related-configurations-of-kube-apiserver\"\u003e4.6 Related configurations of kube-apiserver\u003c/a\u003e\u003c/li\u003e\n      \u003cli\u003e\u003ca href=\"#47-make-authz-yaml-policies-more-concise\" id=\"markdown-toc-47-make-authz-yaml-policies-more-concise\"\u003e4.7 Make AuthZ YAML policies more concise\u003c/a\u003e\u003c/li\u003e\n      \u003cli\u003e\u003ca href=\"#48-some-subject-examples\" id=\"markdown-toc-48-some-subject-examples\"\u003e4.8 Some subject examples\u003c/a\u003e\u003c/li\u003e\n      \u003cli\u003e\u003ca href=\"#49-virtual-resource-types\" id=\"markdown-toc-49-virtual-resource-types\"\u003e4.9 Virtual \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eresource\u003c/code\u003e types\u003c/a\u003e\u003c/li\u003e\n    \u003c/ul\u003e\n  \u003c/li\u003e\n  \u003cli\u003e\u003ca href=\"#references\" id=\"markdown-toc-references\"\u003eReferences\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003chr/\u003e\n\n\u003ch1 id=\"1-introduction\"\u003e1 Introduction\u003c/h1\u003e\n\n\u003ch2 id=\"11-authentication-authn-and-authorization-authz\"\u003e1.1 Authentication (AuthN) and authorization (AuthZ)\u003c/h2\u003e\n\n\u003cp\u003eThese two spelling-alike but conceptially-different terms have confused\npeople for quite a while. In short,\u003c/p\u003e\n\n\u003cul\u003e\n  \u003cli\u003e\u003cstrong\u003e\u003cmark\u003eAuthN\u003c/mark\u003e\u003c/strong\u003e examines \u003cstrong\u003e\u003cmark\u003ewho you are\u003c/mark\u003e\u003c/strong\u003e (e.g. whether you’re a valid user);\u003c/li\u003e\n  \u003cli\u003e\u003cstrong\u003e\u003cmark\u003eAuthZ\u003c/mark\u003e\u003c/strong\u003e comes after AuthN, and checks \u003cstrong\u003e\u003cmark\u003ewhether you have the permissions\u003c/mark\u003e\u003c/strong\u003e\nto perform the actions you claimed (e.g. writing to a spcific database).\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eFor example, Bob issues a \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eGET /api/databases?user=alice\u003c/code\u003e request to a server,\nintending to get the database list of Alice,\u003c/p\u003e\n\n\u003cp align=\"center\"\u003e\u003cimg src=\"/assets/img/cracking-k8s-authz-rbac/authn-authz.png\" width=\"80%\" height=\"80%\"/\u003e\u003c/p\u003e\n\u003cp align=\"center\"\u003eFig 1-1. AuthN and AuthZ when processing a client request\u003c/p\u003e\n\n\u003cp\u003ethen the server would perform following operations sequentially:\u003c/p\u003e\n\n\u003col\u003e\n  \u003cli\u003e\n    \u003cp\u003eAuthN: on receving the request, authenticate if Bob is a valid user,\u003c/p\u003e\n\n    \u003col\u003e\n      \u003cli\u003eOn validation failure: reject the request by returning \u003ccode class=\"language-plaintext highlighter-rouge\"\u003e401 Unauthorized\u003c/code\u003e\n    (\u003ca href=\"https://stackoverflow.com/a/6937030/4747193\"\u003ea long-standing misnomer\u003c/a\u003e,\n    \u003cstrong\u003e\u003cmark\u003e\u0026#34;401 Unauthenticated\u0026#34; would be more appropriate\u003c/mark\u003e\u003c/strong\u003e);\u003c/li\u003e\n      \u003cli\u003eOtherwise (\u003cstrong\u003e\u003cmark\u003eauthenticated\u003c/mark\u003e\u003c/strong\u003e): enter the next stage (AuthZ).\u003c/li\u003e\n    \u003c/ol\u003e\n  \u003c/li\u003e\n  \u003cli\u003e\n    \u003cp\u003eAuthZ: check if Bob has the permission to list Alice’s databases,\u003c/p\u003e\n\n    \u003col\u003e\n      \u003cli\u003eIf no permission granted, reject the request by returning \u003ccode class=\"language-plaintext highlighter-rouge\"\u003e403 Forbidden\u003c/code\u003e;\u003c/li\u003e\n      \u003cli\u003eOtherwise (\u003cstrong\u003e\u003cmark\u003eauthorized\u003c/mark\u003e\u003c/strong\u003e), go to the real processing logic.\u003c/li\u003e\n    \u003c/ol\u003e\n  \u003c/li\u003e\n  \u003cli\u003e\n    \u003cp\u003eApplication processing logic: return \u003ccode class=\"language-plaintext highlighter-rouge\"\u003e2xx\u003c/code\u003e on success or \u003ccode class=\"language-plaintext highlighter-rouge\"\u003e5xx\u003c/code\u003e on internal server errors.\u003c/p\u003e\n  \u003c/li\u003e\n\u003c/ol\u003e\n\n\u003cp\u003e\u003cstrong\u003e\u003cmark\u003eThis post will focus on authorization (AuthZ)\u003c/mark\u003e\u003c/strong\u003e. Actually,\nthere are already many models designed for AuthZ, among them is RBAC\n(Role-Based Access Control).\u003c/p\u003e\n\n\u003ch2 id=\"12-rbac-for-authz\"\u003e1.2 RBAC for AuthZ\u003c/h2\u003e\n\n\u003cp\u003eRBAC is a method of regulating access to server-side resources based on\nthe roles of individual users within an organization.\nThe general idea is that instead of directly binding resource accessing\npermissions to users with \u003ccode class=\"language-plaintext highlighter-rouge\"\u003e(User,Permission,Resource)\u003c/code\u003e as shown below,\u003c/p\u003e\n\n\u003cp align=\"center\"\u003e\u003cimg src=\"/assets/img/cracking-k8s-authz-rbac/access-directly.png\" width=\"60%\" height=\"60%\"/\u003e\u003c/p\u003e\n\u003cp align=\"center\"\u003eFig 1-2. Non role-based access control model: granting permissions directly to end users\u003c/p\u003e\n\n\u003cp\u003eRBAC introduces the \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eRole\u003c/code\u003e and \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eRoleBinding\u003c/code\u003e concepts, described with \n\u003ccode\u003e(User,RoleBinding,Role,Permission,Resource)\u003c/code\u003e,\nand facilitates security administration in large organizations with lots of\nusers permissions:\u003c/p\u003e\n\n\u003cp align=\"center\"\u003e\u003cimg src=\"/assets/img/cracking-k8s-authz-rbac/access-with-role.png\" width=\"60%\" height=\"60%\"/\u003e\u003c/p\u003e\n\u003cp align=\"center\"\u003eFig 1-3. Role based access control model\u003c/p\u003e\n\n\u003cp\u003eRBAC is not a recent invention, but can date back to couples of years ago. In fact,\nit is an approach for implementing mandatory access control (\u003cstrong\u003e\u003cmark\u003eMAC\u003c/mark\u003e\u003c/strong\u003e)\nand discretionary access control (\u003cstrong\u003e\u003cmark\u003eDAC\u003c/mark\u003e\u003c/strong\u003e),\nrefer to [2,3] for more information.\u003c/p\u003e\n\n\u003ch2 id=\"13-rbac-in-kubernetes\"\u003e1.3 RBAC in Kubernetes\u003c/h2\u003e\n\n\u003cp\u003eK8s implements a RBAC model (as welll as several other models) for protecting\nresources in the cluster. In more plain words, it manages the permissions to kube-apiserver’s API.\nWith properly configured RBAC policies, we can control which user (human or programs) can access\nwhich resource (pods/services/endpoints/…) with which operation (get/list/delete/…).\u003c/p\u003e\n\n\u003cblockquote\u003e\n  \u003cp\u003eConfigure authorization mode for the cluster by passing\n\u003cstrong\u003e\u003cmark\u003e\u003ccode\u003e--authorization-mode=MODE_LIST\u003c/code\u003e\u003c/mark\u003e\u003c/strong\u003e to \u003ccode class=\"language-plaintext highlighter-rouge\"\u003ekube-apiserver\u003c/code\u003e,\nwhere \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eMODE_LIST\u003c/code\u003e is a comma separated list with the following valid values:\n\u003cstrong\u003e\u003cmark\u003e\u003ccode\u003eRBAC/ABAC/Node/AlwaysDeny/AlwaysAllow\u003c/code\u003e\u003c/mark\u003e\u003c/strong\u003e.\u003c/p\u003e\n\n  \u003cp\u003eRefer to Kubernetes Documentation \u003ca href=\"https://kubernetes.io/docs/reference/access-authn-authz/authorization/\"\u003eAuthorization Overview\u003c/a\u003e [1]\nfor more information.\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eAs an example, if you’ve played around for a while with Kubernetes, you’d have\nseen things like this:\u003c/p\u003e\n\n\u003cdiv class=\"language-yaml highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"na\"\u003eapiVersion\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003ev1\u003c/span\u003e\n\u003cspan class=\"na\"\u003ekind\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003eServiceAccount\u003c/span\u003e\n\u003cspan class=\"na\"\u003emetadata\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e\n  \u003cspan class=\"na\"\u003ename\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003eserviceaccount:app1\u003c/span\u003e\n  \u003cspan class=\"na\"\u003enamespace\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003edemo-namespace\u003c/span\u003e\n\u003cspan class=\"s\"\u003e----\u003c/span\u003e\n\u003cspan class=\"na\"\u003eapiVersion\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003erbac.authorization.k8s.io/v1\u003c/span\u003e\n\u003cspan class=\"na\"\u003ekind\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003eRole\u003c/span\u003e\n\u003cspan class=\"na\"\u003emetadata\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e\n  \u003cspan class=\"na\"\u003ename\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003erole:viewer\u003c/span\u003e\n  \u003cspan class=\"na\"\u003enamespace\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003edemo-namespace\u003c/span\u003e\n\u003cspan class=\"na\"\u003erules\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e        \u003cspan class=\"c1\"\u003e# Authorization rules for this role\u003c/span\u003e\n\u003cspan class=\"pi\"\u003e-\u003c/span\u003e \u003cspan class=\"na\"\u003eapiGroups\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e  \u003cspan class=\"c1\"\u003e# 1st API group\u003c/span\u003e\n  \u003cspan class=\"pi\"\u003e-\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;\u003c/span\u003e        \u003cspan class=\"c1\"\u003e# An empty string designates the core API group.\u003c/span\u003e\n  \u003cspan class=\"na\"\u003eresources\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e\n  \u003cspan class=\"pi\"\u003e-\u003c/span\u003e \u003cspan class=\"s\"\u003eservices\u003c/span\u003e\n  \u003cspan class=\"pi\"\u003e-\u003c/span\u003e \u003cspan class=\"s\"\u003eendpoints\u003c/span\u003e\n  \u003cspan class=\"pi\"\u003e-\u003c/span\u003e \u003cspan class=\"s\"\u003enamespaces\u003c/span\u003e\n  \u003cspan class=\"na\"\u003everbs\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e\n  \u003cspan class=\"pi\"\u003e-\u003c/span\u003e \u003cspan class=\"s\"\u003eget\u003c/span\u003e\n  \u003cspan class=\"pi\"\u003e-\u003c/span\u003e \u003cspan class=\"s\"\u003elist\u003c/span\u003e\n  \u003cspan class=\"pi\"\u003e-\u003c/span\u003e \u003cspan class=\"s\"\u003ewatch\u003c/span\u003e\n\u003cspan class=\"pi\"\u003e-\u003c/span\u003e \u003cspan class=\"na\"\u003eapiGroups\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e  \u003cspan class=\"c1\"\u003e# 2nd API group\u003c/span\u003e\n  \u003cspan class=\"pi\"\u003e-\u003c/span\u003e \u003cspan class=\"s\"\u003eapiextensions.k8s.io\u003c/span\u003e\n  \u003cspan class=\"na\"\u003eresources\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e\n  \u003cspan class=\"pi\"\u003e-\u003c/span\u003e \u003cspan class=\"s\"\u003ecustomresourcedefinitions\u003c/span\u003e\n  \u003cspan class=\"na\"\u003everbs\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e\n  \u003cspan class=\"pi\"\u003e-\u003c/span\u003e \u003cspan class=\"s\"\u003eget\u003c/span\u003e\n  \u003cspan class=\"pi\"\u003e-\u003c/span\u003e \u003cspan class=\"s\"\u003elist\u003c/span\u003e\n  \u003cspan class=\"pi\"\u003e-\u003c/span\u003e \u003cspan class=\"s\"\u003ewatch\u003c/span\u003e\n\u003cspan class=\"pi\"\u003e-\u003c/span\u003e \u003cspan class=\"na\"\u003eapiGroups\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e  \u003cspan class=\"c1\"\u003e# 3rd API group\u003c/span\u003e\n  \u003cspan class=\"pi\"\u003e-\u003c/span\u003e \u003cspan class=\"s\"\u003ecilium.io\u003c/span\u003e\n  \u003cspan class=\"na\"\u003eresources\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e\n  \u003cspan class=\"pi\"\u003e-\u003c/span\u003e \u003cspan class=\"s\"\u003eciliumnetworkpolicies\u003c/span\u003e\n  \u003cspan class=\"pi\"\u003e-\u003c/span\u003e \u003cspan class=\"s\"\u003eciliumnetworkpolicies/status\u003c/span\u003e\n  \u003cspan class=\"na\"\u003everbs\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e\n  \u003cspan class=\"pi\"\u003e-\u003c/span\u003e \u003cspan class=\"s\"\u003eget\u003c/span\u003e\n  \u003cspan class=\"pi\"\u003e-\u003c/span\u003e \u003cspan class=\"s\"\u003elist\u003c/span\u003e\n  \u003cspan class=\"pi\"\u003e-\u003c/span\u003e \u003cspan class=\"s\"\u003ewatch\u003c/span\u003e\n\u003cspan class=\"s\"\u003e----\u003c/span\u003e\n\u003cspan class=\"na\"\u003eapiVersion\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003erbac.authorization.k8s.io/v1\u003c/span\u003e\n\u003cspan class=\"na\"\u003ekind\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003eRoleBinding\u003c/span\u003e\n\u003cspan class=\"na\"\u003emetadata\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e\n  \u003cspan class=\"na\"\u003ename\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003erolebinding:app1-viewer\u003c/span\u003e\n  \u003cspan class=\"na\"\u003enamespace\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003edemo-namespace\u003c/span\u003e\n\u003cspan class=\"na\"\u003eroleRef\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e\n  \u003cspan class=\"na\"\u003eapiGroup\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003erbac.authorization.k8s.io\u003c/span\u003e\n  \u003cspan class=\"na\"\u003ekind\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003eRole\u003c/span\u003e\n  \u003cspan class=\"na\"\u003ename\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003erole:viewer\u003c/span\u003e\n\u003cspan class=\"na\"\u003esubjects\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e\n\u003cspan class=\"pi\"\u003e-\u003c/span\u003e \u003cspan class=\"na\"\u003ekind\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003eServiceAccount\u003c/span\u003e\n  \u003cspan class=\"na\"\u003ename\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003eserviceaccount:app1\u003c/span\u003e\n  \u003cspan class=\"na\"\u003enamespace\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003edemo-namespace\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003eThis is just a permission declaration in Kubernetes’ RBAC language, after\napplied, it will create:\u003c/p\u003e\n\n\u003col\u003e\n  \u003cli\u003eAn account for a service (program),\u003c/li\u003e\n  \u003cli\u003eA role and the permission it has, and\u003c/li\u003e\n  \u003cli\u003eA role-binding to bind the account to that role, so the program from that\nservice could access the resources (e.g. list namespaces) of the\n\u003ccode class=\"language-plaintext highlighter-rouge\"\u003ekube-apiserver\u003c/code\u003e.\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003ch2 id=\"14-purpose-of-this-pose\"\u003e1.4 Purpose of this pose\u003c/h2\u003e\n\n\u003cp\u003eThis post will digs into the RBAC model in Kubernetes by \u003cstrong\u003e\u003cmark\u003edesigning it by ourselves\u003c/mark\u003e\u003c/strong\u003e.\u003c/p\u003e\n\n\u003cp\u003eSpecifically, given the following requirements: granting read\n(\u003ccode class=\"language-plaintext highlighter-rouge\"\u003eget/list/watch\u003c/code\u003e) permissions of the following APIs in \u003ccode class=\"language-plaintext highlighter-rouge\"\u003ekube-apiserver\u003c/code\u003e to an\napplication (\u003ccode class=\"language-plaintext highlighter-rouge\"\u003eapp1\u003c/code\u003e) in the cluster:\u003c/p\u003e\n\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"c\"\u003e# 1. Kubernetes builtin resources\u003c/span\u003e\n/api/v1/namespaces/\u003cspan class=\"o\"\u003e{\u003c/span\u003enamespace\u003cspan class=\"o\"\u003e}\u003c/span\u003e/services\n/api/v1/namespaces/\u003cspan class=\"o\"\u003e{\u003c/span\u003enamespace\u003cspan class=\"o\"\u003e}\u003c/span\u003e/endpoints\n/api/v1/namespaces/\u003cspan class=\"o\"\u003e{\u003c/span\u003enamespace\u003cspan class=\"o\"\u003e}\u003c/span\u003e/namespaces\n\n\u003cspan class=\"c\"\u003e# 2. A specific API extention provided by cilium.io\u003c/span\u003e\n/apis/cilium.io/v2/namespaces/\u003cspan class=\"o\"\u003e{\u003c/span\u003enamespace\u003cspan class=\"o\"\u003e}\u003c/span\u003e/ciliumnetworkpolicies\n/apis/cilium.io/v2/namespaces/\u003cspan class=\"o\"\u003e{\u003c/span\u003enamespace\u003cspan class=\"o\"\u003e}\u003c/span\u003e/ciliumnetworkpolicies/status\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003eLet’s see how we could design a toy model to fulfill the requirements.\u003c/p\u003e\n\n\u003ch1 id=\"2-rbac-modeling\"\u003e2 RBAC modeling\u003c/h1\u003e\n\n\u003cp\u003eIn Kubernetes, authorization is a server side privilege-checking procedure\nagainst the incoming requests from an authenticated client.  In the remaining of\nthis section, we will split our modeling work into several parts:\u003c/p\u003e\n\n\u003col\u003e\n  \u003cli\u003eThe client side: client identification and representation;\u003c/li\u003e\n  \u003cli\u003eThe server side: resources (APIs) representation and organization;\u003c/li\u003e\n  \u003cli\u003ePermission organization and management.\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003ch2 id=\"21-client-side-modeling\"\u003e2.1 Client side modeling\u003c/h2\u003e\n\n\u003cp\u003eLet’s start from the simplest case, then gradually go through the complex ones.\u003c/p\u003e\n\n\u003ch3 id=\"211-identify-out-of-cluster-usersprograms-introducing-user\"\u003e2.1.1 Identify out-of-cluster users/programs: introducing \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eUser\u003c/code\u003e\u003c/h3\u003e\n\n\u003cp\u003eThe first case: suppose your new colleague would like to log in the Kubernetes\ndashboard, or to use the CLI.  For this scenario, we should have a concept in the model to\ndenote what’s \u003cstrong\u003e\u003cmark\u003ean \u0026#34;account\u0026#34; or a \u0026#34;user\u0026#34;\u003c/mark\u003e\u003c/strong\u003e, with each of them having a unique name or ID\n(such as email address), as shown below:\u003c/p\u003e\n\n\u003cp align=\"center\"\u003e\u003cimg src=\"/assets/img/cracking-k8s-authz-rbac/rbac-user.png\" width=\"60%\" height=\"60%\"/\u003e\u003c/p\u003e\n\u003cp align=\"center\"\u003eFig 2-1. Introdecing User: identify human users and other accounts outside of the cluster\u003c/p\u003e\n\n\u003cdiv class=\"language-go highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003etype\u003c/span\u003e \u003cspan class=\"n\"\u003eUser\u003c/span\u003e \u003cspan class=\"k\"\u003estruct\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"n\"\u003ename\u003c/span\u003e \u003cspan class=\"kt\"\u003estring\u003c/span\u003e   \u003cspan class=\"c\"\u003e// unique for each user\u003c/span\u003e\n    \u003cspan class=\"o\"\u003e...\u003c/span\u003e           \u003cspan class=\"c\"\u003e// other fields\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003eThen we can \u003cstrong\u003e\u003cmark\u003erefer to a user\u003c/mark\u003e\u003c/strong\u003e with something like the following in a YAML file:\u003c/p\u003e\n\n\u003cdiv class=\"language-yaml highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"pi\"\u003e-\u003c/span\u003e \u003cspan class=\"na\"\u003ekind\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003eUser\u003c/span\u003e\n  \u003cspan class=\"na\"\u003ename\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"s\"\u003ealice@example.com\u0026#34;\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cblockquote\u003e\n  \u003cp\u003eNote that the \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eUser\u003c/code\u003e concept introduced here is used for\n\u003cstrong\u003e\u003cmark\u003ehuman or processes outside of the cluster\u003c/mark\u003e\u003c/strong\u003e (as opposed to\nthe \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eServiceAccount\u003c/code\u003e concept that will described in the next, which identifies\naccounts created and managed by Kubernetes itself). For example, the user\naccount may come from the LDAP in your organization, so \u003cstrong\u003e\u003cmark\u003eAuthN of the user\u003c/mark\u003e\u003c/strong\u003e\nmay be done through something like OAuth2, TLS certificates, tokens;\nthe subsequent \u003cstrong\u003e\u003cmark\u003eAuthZ\u003c/mark\u003e\u003c/strong\u003e process will be the same as ServiceAccount clients.\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003ch3 id=\"212-identify-in-cluster-program-clients-introducing-serviceaccount\"\u003e2.1.2 Identify in-cluster program clients: introducing \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eServiceAccount\u003c/code\u003e\u003c/h3\u003e\n\n\u003cp\u003eMost of the time, it is applications inside the Kubernetes cluster instead of human users\nthat are accessing the kube-apiserver, such as\u003c/p\u003e\n\n\u003cul\u003e\n  \u003cli\u003e\u003ccode class=\"language-plaintext highlighter-rouge\"\u003ecilium-agent\u003c/code\u003e as a networking agent (deployed as daemonset) would like to list all pod resources on a specific node,\u003c/li\u003e\n  \u003cli\u003e\u003ccode class=\"language-plaintext highlighter-rouge\"\u003eingress-nginx-controller\u003c/code\u003e as a L7 gateway would like to list all the backend endpoints of a specific service,\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eAs those applications are created and managed by Kubernetes, we’re responsible\nfor their identities. So we introduce ServiceAccount (SA),\na namespaced \u003cstrong\u003e\u003cmark\u003eaccount for an application in a Kubernetes cluster\u003c/mark\u003e\u003c/strong\u003e,\njust like a human account for an employee in a corp.\u003c/p\u003e\n\n\u003cp align=\"center\"\u003e\u003cimg src=\"/assets/img/cracking-k8s-authz-rbac/rbac-sa.png\" width=\"70%\" height=\"70%\"/\u003e\u003c/p\u003e\n\u003cp align=\"center\"\u003eFig 2-2. Introducing ServiceAccount: identify applications inside the Kubernetes cluster\u003c/p\u003e\n\n\u003cp\u003eAs SA is an application level account, all pods of an application share the SA,\nthus have exactly the same permissions. SA is introduced and will be stored in\nKubernetes, so we can define a ServiceAccount with the following YAML specification:\u003c/p\u003e\n\n\u003cdiv class=\"language-yaml highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"na\"\u003eapiVersion\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003ev1\u003c/span\u003e\n\u003cspan class=\"na\"\u003ekind\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003eServiceAccount\u003c/span\u003e\n\u003cspan class=\"na\"\u003emetadata\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e\n  \u003cspan class=\"na\"\u003ename\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003esa:app1\u003c/span\u003e             \u003cspan class=\"c1\"\u003e# arbitrary but unique string\u003c/span\u003e\n  \u003cspan class=\"na\"\u003enamespace\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003edemo-namespace\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cblockquote\u003e\n  \u003cp\u003eWe can not \u003cstrong\u003e\u003cmark\u003edefine\u003c/mark\u003e\u003c/strong\u003e a \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eUser\u003c/code\u003e as they are managed by external systems outside of\nKubernetes, such as LDAP or AD. Instead, we can only \u003cstrong\u003e\u003cmark\u003erefer to\u003c/mark\u003e\u003c/strong\u003e \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eUser\u003c/code\u003es.\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eThen refer it with:\u003c/p\u003e\n\n\u003cdiv class=\"language-yaml highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"pi\"\u003e-\u003c/span\u003e \u003cspan class=\"na\"\u003ekind\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003eServiceAccount\u003c/span\u003e\n  \u003cspan class=\"na\"\u003ename\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003esa:app1\u003c/span\u003e\n  \u003cspan class=\"na\"\u003enamespace\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003edemo-namespace\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003ch3 id=\"213-identify-multiple-clients-introducing-group\"\u003e2.1.3 Identify multiple clients: introducing \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eGroup\u003c/code\u003e\u003c/h3\u003e\n\n\u003cp\u003eTo facilitate Kubernetes administration,\nwe’d better also to support a group of \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eUser\u003c/code\u003es or \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eServiceAccount\u003c/code\u003es,\u003c/p\u003e\n\n\u003cp align=\"center\"\u003e\u003cimg src=\"/assets/img/cracking-k8s-authz-rbac/rbac-subject-group.png\" width=\"70%\" height=\"70%\"/\u003e\u003c/p\u003e\n\u003cp align=\"center\"\u003eFig 2-3. Introducing Group: a collection of Users or ServiceAccounts\u003c/p\u003e\n\n\u003cp\u003eFor example, with this capability, we could refer \u003cstrong\u003e\u003cmark\u003eall ServiceAccounts in a specific namespace\u003c/mark\u003e\u003c/strong\u003e:\u003c/p\u003e\n\n\u003cdiv class=\"language-yaml highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"pi\"\u003e-\u003c/span\u003e \u003cspan class=\"na\"\u003ekind\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003eGroup\u003c/span\u003e\n  \u003cspan class=\"na\"\u003ename\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003esystem:serviceaccounts\u003c/span\u003e\n  \u003cspan class=\"na\"\u003enamespace\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003edemo-namespace\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003ch3 id=\"214-general-client-referring-introducing-subject\"\u003e2.1.4 General client referring: introducing \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eSubject\u003c/code\u003e\u003c/h3\u003e\n\n\u003cp\u003eWith several client types being introduced, we’re now ready to introduce a general\ncontainer for them: \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eSubject\u003c/code\u003e. A subject list could contain different kinds of\nclient types, such as\u003c/p\u003e\n\n\u003cdiv class=\"language-yaml highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"na\"\u003esubjects\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e\n\u003cspan class=\"pi\"\u003e-\u003c/span\u003e \u003cspan class=\"na\"\u003ekind\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003eUser\u003c/span\u003e\n  \u003cspan class=\"na\"\u003ename\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"s\"\u003ealice@example.com\u0026#34;\u003c/span\u003e\n\u003cspan class=\"pi\"\u003e-\u003c/span\u003e \u003cspan class=\"na\"\u003ekind\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003eServiceAccount\u003c/span\u003e\n  \u003cspan class=\"na\"\u003ename\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003edefault\u003c/span\u003e\n  \u003cspan class=\"na\"\u003enamespace\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003ekube-system\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp align=\"center\"\u003e\u003cimg src=\"/assets/img/cracking-k8s-authz-rbac/rbac-subjects.png\" width=\"70%\" height=\"70%\"/\u003e\u003c/p\u003e\n\u003cp align=\"center\"\u003eFig 2-4. Introducing Subject: a general representation of all kinds of clients and client groups\u003c/p\u003e\n\n\u003cp\u003eThis makes our policy more expressive and powerful.\u003c/p\u003e\n\n\u003cp\u003eWith the client side identification accomplished, let’s see the server side.\u003c/p\u003e\n\n\u003ch2 id=\"22-server-side-modeling\"\u003e2.2 Server side modeling\u003c/h2\u003e\n\n\u003cp\u003eThe server side part is more complex, as this is where we will have to handle the authorization and authentication.\u003c/p\u003e\n\n\u003cp\u003eAgain, we start from the smallest unit.\u003c/p\u003e\n\n\u003ch3 id=\"221-identify-apisurls-introducing-resource\"\u003e2.2.1 Identify APIs/URLs: introducing \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eResource\u003c/code\u003e\u003c/h3\u003e\n\n\u003cp\u003eObjects like pods, endpoints, services in a Kubernetes cluster are exposed\nvia built-in APIs/URIs, such as,\u003c/p\u003e\n\n\u003cdiv class=\"language-plaintext highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e/api/v1/namespaces/{namespace}/pods/{name}\n/api/v1/namespaces/{namespace}/pods/{name}/log\n/api/v1/namespaces/{namespace}/serviceaccounts/{name}\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003eThese URIs are too long to be concisely described in an AuthZ policy specification,\nso we \u003cstrong\u003e\u003cmark\u003eintroduce a short representation\u003c/mark\u003e\u003c/strong\u003e: \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eResource\u003c/code\u003e. With\n\u003ccode class=\"language-plaintext highlighter-rouge\"\u003eResource\u003c/code\u003e denotation, the above APIs can be referred by:\u003c/p\u003e\n\n\u003cdiv class=\"language-yaml highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e  \u003cspan class=\"na\"\u003eresources\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e\n  \u003cspan class=\"pi\"\u003e-\u003c/span\u003e \u003cspan class=\"s\"\u003epods\u003c/span\u003e\n  \u003cspan class=\"pi\"\u003e-\u003c/span\u003e \u003cspan class=\"s\"\u003epods/log\u003c/span\u003e\n  \u003cspan class=\"pi\"\u003e-\u003c/span\u003e \u003cspan class=\"s\"\u003eserviceaccounts\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003ch3 id=\"222-identify-operations-on-resource-introducing-verb\"\u003e2.2.2 Identify operations on \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eResource\u003c/code\u003e: introducing \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eVerb\u003c/code\u003e\u003c/h3\u003e\n\n\u003cp\u003eTo describe the \u003cstrong\u003e\u003cmark\u003epermitted operations\u003c/mark\u003e\u003c/strong\u003e on a given \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eResource\u003c/code\u003e,\ne.g. whether read-only (\u003ccode class=\"language-plaintext highlighter-rouge\"\u003eget/list/watch\u003c/code\u003e) or write-update-delete\n(\u003ccode class=\"language-plaintext highlighter-rouge\"\u003ecreate/patch/delete\u003c/code\u003e), we introduce a \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eVerb\u003c/code\u003e concept:\u003c/p\u003e\n\n\u003cdiv class=\"language-yaml highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e  \u003cspan class=\"na\"\u003eresources\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e\n  \u003cspan class=\"pi\"\u003e-\u003c/span\u003e \u003cspan class=\"s\"\u003eciliumnetworkpolicies\u003c/span\u003e\n  \u003cspan class=\"pi\"\u003e-\u003c/span\u003e \u003cspan class=\"s\"\u003eciliumnetworkpolicies/status\u003c/span\u003e\n  \u003cspan class=\"na\"\u003everbs\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e\n  \u003cspan class=\"pi\"\u003e-\u003c/span\u003e \u003cspan class=\"s\"\u003eget\u003c/span\u003e\n  \u003cspan class=\"pi\"\u003e-\u003c/span\u003e \u003cspan class=\"s\"\u003elist\u003c/span\u003e\n  \u003cspan class=\"pi\"\u003e-\u003c/span\u003e \u003cspan class=\"s\"\u003ewatch\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp align=\"center\"\u003e\u003cimg src=\"/assets/img/cracking-k8s-authz-rbac/rbac-verb-resource.png\" width=\"45%\" height=\"45%\"/\u003e\u003c/p\u003e\n\u003cp align=\"center\"\u003eFig 2-5. Introducing Verb and Resource: express specific actions on specific APIs\u003c/p\u003e\n\n\u003ch3 id=\"223-distinguish-resources-from-different-api-providers-introducing-apigroup\"\u003e2.2.3 Distinguish \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eResource\u003c/code\u003es from different API providers: introducing \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eAPIGroup\u003c/code\u003e\u003c/h3\u003e\n\n\u003cp\u003eOne thing we have intentionally skipped discussing during the \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eResource\u003c/code\u003e section:\napart from APIs for built-in objects (pods, endpoints, services, etc), Kubernetes\nalso supports \u003cstrong\u003e\u003cmark\u003eAPI extensions\u003c/mark\u003e\u003c/strong\u003e. Such as, if using Cilium as networking solution,\nit will create “ciliumendpoint” custom resources (CRs) in the cluster,\u003c/p\u003e\n\n\u003cdiv class=\"language-yaml highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"na\"\u003eapiVersion\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003eapiextensions.k8s.io/v1\u003c/span\u003e\n\u003cspan class=\"na\"\u003ekind\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003eCustomResourceDefinition\u003c/span\u003e\n\u003cspan class=\"na\"\u003emetadata\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e\n  \u003cspan class=\"na\"\u003ename\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003eciliumendpoints.cilium.io\u003c/span\u003e\n\u003cspan class=\"na\"\u003espec\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e\n  \u003cspan class=\"na\"\u003egroup\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003ecilium.io\u003c/span\u003e\n  \u003cspan class=\"na\"\u003enames\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e\n    \u003cspan class=\"na\"\u003ekind\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003eCiliumEndpoint\u003c/span\u003e\n  \u003cspan class=\"na\"\u003escope\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003eNamespaced\u003c/span\u003e\n  \u003cspan class=\"s\"\u003e...\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003eCheck the related objects already in the cluster:\u003c/p\u003e\n\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003e$ \u003c/span\u003ek get ciliumendpoints.cilium.io \u003cspan class=\"nt\"\u003e-n\u003c/span\u003e demo-namespace\nNAME   ENDPOINT ID   IDENTITY ID   INGRESS ENFORCE  EGRESS ENFORCE VISIBILITY POLICY   ENDPOINT STATE   IPV4\napp1   2773          1628124                                                           ready            10.6.7.54\napp2   3568          1624494                                                           ready            10.6.7.94\napp3   3934          1575701                                                           ready            10.6.4.24\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003eThese custom resource objects \u003cstrong\u003e\u003cmark\u003ecan be accessed in a similar URI format as the built-int objects\u003c/mark\u003e\u003c/strong\u003e,\u003c/p\u003e\n\n\u003cdiv class=\"language-plaintext highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e/apis/cilium.io/v2/namespaces/{namespace}/ciliumendpoints\n/apis/cilium.io/v2/namespaces/{namespace}/ciliumendpoints/{name}\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003eSo, \u003cstrong\u003e\u003cmark\u003eto make our short format resource denotation more general\u003c/mark\u003e\u003c/strong\u003e,\nwe need to support this scenario, too. Enter \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eAPIGroup\u003c/code\u003e.\nAs the name tells, \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eAPIGroup\u003c/code\u003e split APIs (resources) into groups. In our design,\nwe just put resources and related verbs into an \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eapiGroups\u003c/code\u003e section:\u003c/p\u003e\n\n\u003cdiv class=\"language-yaml highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"pi\"\u003e-\u003c/span\u003e \u003cspan class=\"na\"\u003eapiGroups\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e\n  \u003cspan class=\"pi\"\u003e-\u003c/span\u003e \u003cspan class=\"s\"\u003ecilium.io\u003c/span\u003e     \u003cspan class=\"c1\"\u003e# APIGroup name\u003c/span\u003e\n  \u003cspan class=\"na\"\u003eresources\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e\n  \u003cspan class=\"pi\"\u003e-\u003c/span\u003e \u003cspan class=\"s\"\u003eciliumnetworkpolicies\u003c/span\u003e\n  \u003cspan class=\"pi\"\u003e-\u003c/span\u003e \u003cspan class=\"s\"\u003eciliumnetworkpolicies/status\u003c/span\u003e\n  \u003cspan class=\"na\"\u003everbs\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e\n  \u003cspan class=\"pi\"\u003e-\u003c/span\u003e \u003cspan class=\"s\"\u003eget\u003c/span\u003e\n  \u003cspan class=\"pi\"\u003e-\u003c/span\u003e \u003cspan class=\"s\"\u003elist\u003c/span\u003e\n  \u003cspan class=\"pi\"\u003e-\u003c/span\u003e \u003cspan class=\"s\"\u003ewatch\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e\u003cstrong\u003e\u003cmark\u003eDepending on the \u0026#34;name\u0026#34; of an APIGroup\u003c/mark\u003e\u003c/strong\u003e,\u003c/p\u003e\n\n\u003cul\u003e\n  \u003cli\u003eIf it is empty \u003ccode class=\"language-plaintext highlighter-rouge\"\u003e\u0026#34;\u0026#34;\u003c/code\u003e, we expand the resources to \u003ccode class=\"language-plaintext highlighter-rouge\"\u003e/api/v1/xxx\u003c/code\u003e;\u003c/li\u003e\n  \u003cli\u003eOtherwise, we expand the resources to \u003ccode class=\"language-plaintext highlighter-rouge\"\u003e/apis/{apigroup_name}/{apigroup_version}/xxx\u003c/code\u003e;\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eas illustrated below:\u003c/p\u003e\n\n\u003cp align=\"center\"\u003e\u003cimg src=\"/assets/img/cracking-k8s-authz-rbac/rbac-apigroup.png\" width=\"70%\" height=\"70%\"/\u003e\u003c/p\u003e\n\u003cp align=\"center\"\u003eFig 2-6. Introducing APIGroup, and how APIGroup+Resource are expanded in the behind\u003c/p\u003e\n\n\u003ch2 id=\"23-combine-verb-apigroup-and-resource-introducing-rule\"\u003e2.3 Combine \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eVerb\u003c/code\u003e, \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eAPIGroup\u003c/code\u003e and \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eResource\u003c/code\u003e: introducing \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eRule\u003c/code\u003e\u003c/h2\u003e\n\n\u003cp\u003eWith \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eAPIGroups\u003c/code\u003e as the last piece introduced, we can \u003cstrong\u003e\u003cmark\u003efinally describe what\u0026#39;s an AuthZ \u003ccode\u003eRule\u003c/code\u003e\u003c/mark\u003e\u003c/strong\u003e:\nactually it’s \u003cstrong\u003e\u003cmark\u003enothing more than an apiGroup list\u003c/mark\u003e\u003c/strong\u003e that are allowed to be accessed,\u003c/p\u003e\n\n\u003cdiv class=\"language-yaml highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"na\"\u003erules\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e        \u003cspan class=\"c1\"\u003e# Authorization rules\u003c/span\u003e\n\u003cspan class=\"pi\"\u003e-\u003c/span\u003e \u003cspan class=\"na\"\u003eapiGroups\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e  \u003cspan class=\"c1\"\u003e# 1st API group\u003c/span\u003e\n  \u003cspan class=\"pi\"\u003e-\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;\u003c/span\u003e        \u003cspan class=\"c1\"\u003e# An empty string designates the core API group.\u003c/span\u003e\n  \u003cspan class=\"na\"\u003eresources\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e\n  \u003cspan class=\"pi\"\u003e-\u003c/span\u003e \u003cspan class=\"s\"\u003eservices\u003c/span\u003e\n  \u003cspan class=\"pi\"\u003e-\u003c/span\u003e \u003cspan class=\"s\"\u003eendpoints\u003c/span\u003e\n  \u003cspan class=\"pi\"\u003e-\u003c/span\u003e \u003cspan class=\"s\"\u003enamespaces\u003c/span\u003e\n  \u003cspan class=\"na\"\u003everbs\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e\n  \u003cspan class=\"pi\"\u003e-\u003c/span\u003e \u003cspan class=\"s\"\u003eget\u003c/span\u003e\n  \u003cspan class=\"pi\"\u003e-\u003c/span\u003e \u003cspan class=\"s\"\u003elist\u003c/span\u003e\n  \u003cspan class=\"pi\"\u003e-\u003c/span\u003e \u003cspan class=\"s\"\u003ewatch\u003c/span\u003e\n\u003cspan class=\"pi\"\u003e-\u003c/span\u003e \u003cspan class=\"na\"\u003eapiGroups\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e  \u003cspan class=\"c1\"\u003e# another API group\u003c/span\u003e\n  \u003cspan class=\"pi\"\u003e-\u003c/span\u003e \u003cspan class=\"s\"\u003ecilium.io\u003c/span\u003e \u003cspan class=\"c1\"\u003e# Custom APIGroup\u003c/span\u003e\n  \u003cspan class=\"na\"\u003eresources\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e\n  \u003cspan class=\"pi\"\u003e-\u003c/span\u003e \u003cspan class=\"s\"\u003eciliumnetworkpolicies\u003c/span\u003e\n  \u003cspan class=\"pi\"\u003e-\u003c/span\u003e \u003cspan class=\"s\"\u003eciliumnetworkpolicies/status\u003c/span\u003e\n  \u003cspan class=\"na\"\u003everbs\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e\n  \u003cspan class=\"pi\"\u003e-\u003c/span\u003e \u003cspan class=\"s\"\u003eget\u003c/span\u003e\n  \u003cspan class=\"pi\"\u003e-\u003c/span\u003e \u003cspan class=\"s\"\u003elist\u003c/span\u003e\n  \u003cspan class=\"pi\"\u003e-\u003c/span\u003e \u003cspan class=\"s\"\u003ewatch\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003eas illustrated below:\u003c/p\u003e\n\n\u003cp align=\"center\"\u003e\u003cimg src=\"/assets/img/cracking-k8s-authz-rbac/rbac-rule.png\" width=\"75%\" height=\"75%\"/\u003e\u003c/p\u003e\n\u003cp align=\"center\"\u003eFig 2-7. Introducing Rule: a list of allowed APIGroups\u003c/p\u003e\n\n\u003ch2 id=\"24-who-has-the-permissions-described-by-a-rule-introducing-role\"\u003e2.4 Who has the permissions described by a \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eRule\u003c/code\u003e: introducing \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eRole\u003c/code\u003e\u003c/h2\u003e\n\n\u003cp\u003eWith Rules and Subjects ready, we can assign Rules to Subjects, then clients\ndescribed subjects will have the permissions to access the resources described in the rules.\nBut as has been said, RBAC characterizes itself by \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eRoles\u003c/code\u003e, which\n\u003cstrong\u003e\u003cmark\u003edecouples individual users from individual rules\u003c/mark\u003e\u003c/strong\u003e, and makes\nprivilege sharing and granting more powerful and managable.\u003c/p\u003e\n\n\u003cp\u003eSo, instead of directly inserting rules into a Subject (Account/ServiceAccount),\nwe insert it into a Role:\u003c/p\u003e\n\n\u003cdiv class=\"language-yaml highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"na\"\u003eapiVersion\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003erbac.authorization.k8s.io/v1\u003c/span\u003e\n\u003cspan class=\"na\"\u003ekind\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003eRole\u003c/span\u003e\n\u003cspan class=\"na\"\u003emetadata\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e\n  \u003cspan class=\"na\"\u003ename\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003eviewer\u003c/span\u003e\n\u003cspan class=\"na\"\u003erules\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e\n\u003cspan class=\"pi\"\u003e-\u003c/span\u003e \u003cspan class=\"na\"\u003eapiGroups\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e  \u003cspan class=\"c1\"\u003e# 1st API group\u003c/span\u003e\n  \u003cspan class=\"pi\"\u003e-\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;\u003c/span\u003e        \u003cspan class=\"c1\"\u003e# An empty string designates the core API group.\u003c/span\u003e\n  \u003cspan class=\"na\"\u003eresources\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e\n  \u003cspan class=\"pi\"\u003e-\u003c/span\u003e \u003cspan class=\"s\"\u003epods\u003c/span\u003e\n  \u003cspan class=\"na\"\u003everbs\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e\n  \u003cspan class=\"pi\"\u003e-\u003c/span\u003e \u003cspan class=\"s\"\u003eget\u003c/span\u003e\n  \u003cspan class=\"pi\"\u003e-\u003c/span\u003e \u003cspan class=\"s\"\u003elist\u003c/span\u003e\n  \u003cspan class=\"pi\"\u003e-\u003c/span\u003e \u003cspan class=\"s\"\u003ewatch\u003c/span\u003e\n  \u003cspan class=\"pi\"\u003e-\u003c/span\u003e \u003cspan class=\"s\"\u003edelete\u003c/span\u003e\n\u003cspan class=\"pi\"\u003e-\u003c/span\u003e \u003cspan class=\"na\"\u003eapiGroups\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e\n  \u003cspan class=\"s\"\u003e...\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp align=\"center\"\u003e\u003cimg src=\"/assets/img/cracking-k8s-authz-rbac/rbac-role.png\" width=\"75%\" height=\"75%\"/\u003e\u003c/p\u003e\n\u003cp align=\"center\"\u003eFig 2-8. Introducing Role: a list of allowed rules\u003c/p\u003e\n\n\u003cp\u003eNote that we introduce \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eRole\u003c/code\u003e as a kind of resource in Kubernetes, so here we have an\n\u003ccode class=\"language-plaintext highlighter-rouge\"\u003eapiVersion\u003c/code\u003e field in the yaml, while \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eResource\u003c/code\u003e, \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eAPIGroup\u003c/code\u003e, \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eVerb\u003c/code\u003e are just\ninternal concepts (and data structures).\u003c/p\u003e\n\n\u003ch2 id=\"25-grant-permissions-to-target-clients-introducing-rolebinding\"\u003e2.5 Grant permissions to target clients: introducing \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eRoleBinding\u003c/code\u003e\u003c/h2\u003e\n\n\u003cp\u003eNow we have \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eSubject\u003c/code\u003e to referring to all kinds of clients, \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eRule\u003c/code\u003e for describing allowed resources,\nand also \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eRole\u003c/code\u003e to describe who different kinds of rules, the last thing for us\nis to \u003cstrong\u003e\u003cmark\u003ebind target clients to specific roles\u003c/mark\u003e\u003c/strong\u003e. Enter \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eRoleBinding\u003c/code\u003e.\u003c/p\u003e\n\n\u003cp\u003eA role binding grants the permissions described in a \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eRole\u003c/code\u003e to one or multiple clients.\nIt holds a list of \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eSubject\u003c/code\u003es (users, groups, or service accounts), and a\nreference to the role being granted.\u003c/p\u003e\n\n\u003cp\u003eFor example, to bind the \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eviewer\u003c/code\u003e role\nto Subject \u003ccode class=\"language-plaintext highlighter-rouge\"\u003ekind=ServiceAccount,name=sa-for-app1,namespace=demo-namespace\u003c/code\u003e,\u003c/p\u003e\n\n\u003cdiv class=\"language-yaml highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"na\"\u003eapiVersion\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003erbac.authorization.k8s.io/v1\u003c/span\u003e\n\u003cspan class=\"na\"\u003ekind\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003eRoleBinding\u003c/span\u003e\n\u003cspan class=\"na\"\u003emetadata\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e\n  \u003cspan class=\"na\"\u003ename\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003erole-binding-for-app1\u003c/span\u003e               \u003cspan class=\"c1\"\u003e# RoleBinding name\u003c/span\u003e\n\u003cspan class=\"na\"\u003eroleRef\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e\n  \u003cspan class=\"na\"\u003eapiGroup\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003erbac.authorization.k8s.io\u003c/span\u003e\n  \u003cspan class=\"na\"\u003ekind\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003eRole\u003c/span\u003e\n  \u003cspan class=\"na\"\u003ename\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003eviewer\u003c/span\u003e                              \u003cspan class=\"c1\"\u003e# Role to be referred\u003c/span\u003e\n\u003cspan class=\"na\"\u003esubjects\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e                                   \u003cspan class=\"c1\"\u003e# Clients that will be binded to the above Role\u003c/span\u003e\n\u003cspan class=\"pi\"\u003e-\u003c/span\u003e \u003cspan class=\"na\"\u003ekind\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003eServiceAccount\u003c/span\u003e\n  \u003cspan class=\"na\"\u003ename\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003esa-for-app1\u003c/span\u003e\n  \u003cspan class=\"na\"\u003enamespace\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003ekube-system\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003eNote that \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eRoleBinding\u003c/code\u003e is also introduced as a kind of Kubernetes resource, so it has \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eapiVersion\u003c/code\u003e field.\u003c/p\u003e\n\n\u003ch2 id=\"26-example-an-end-to-end-workflow\"\u003e2.6 Example: an end-to-end workflow\u003c/h2\u003e\n\n\u003cp\u003e\u003cstrong\u003e\u003cmark\u003eNow our RBAC modeling finished\u003c/mark\u003e\u003c/strong\u003e, let’s see an end-to-end workflow:\nhow to setup Kubernetes RBAC stuffs to\n\u003cstrong\u003e\u003cmark\u003eallow an application to list \u003ccode\u003eciliumnetworkpolicies\u003c/code\u003e resources\u003c/mark\u003e\u003c/strong\u003e in the cluster.\u003c/p\u003e\n\n\u003cp align=\"center\"\u003e\u003cimg src=\"/assets/img/cracking-k8s-authz-rbac/workflow.png\" width=\"90%\" height=\"90%\"/\u003e\u003c/p\u003e\n\u003cp align=\"center\"\u003eFig 2-9. \u003c/p\u003e\n\n\u003col\u003e\n  \u003cli\u003eCluster administrator: \u003cstrong\u003e\u003cmark\u003ecreate a ServiceAccount\u003c/mark\u003e\u003c/strong\u003e for application \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eapp1\u003c/code\u003e;\u003c/li\u003e\n  \u003cli\u003eCluster administrator: \u003cstrong\u003e\u003cmark\u003ecreate a Role\u003c/mark\u003e\u003c/strong\u003e to describe\npermissions allowed on specific resources;\u003c/li\u003e\n  \u003cli\u003eCluster administrator: \u003cstrong\u003e\u003cmark\u003ecreate a RoleBinding\u003c/mark\u003e\u003c/strong\u003e to bind the service account to the role;\u003c/li\u003e\n  \u003cli\u003eClient: \u003cstrong\u003e\u003cmark\u003esend a request to kube-apiserver\u003c/mark\u003e\u003c/strong\u003e, e.g. to list all\nthe \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eciliumnetworkpolicies\u003c/code\u003e in a specific namespace;\u003c/li\u003e\n  \u003cli\u003e\u003ccode class=\"language-plaintext highlighter-rouge\"\u003ekube-apiserver\u003c/code\u003e \u003cstrong\u003e\u003cmark\u003eAuthN: validate user\u003c/mark\u003e\u003c/strong\u003e; on authenticated, \u003cstrong\u003e\u003cmark\u003eassociate service account to Role\u003c/mark\u003e\u003c/strong\u003e, go to 6;\u003c/li\u003e\n  \u003cli\u003e\u003ccode class=\"language-plaintext highlighter-rouge\"\u003ekube-apiserver\u003c/code\u003e \u003cstrong\u003e\u003cmark\u003eAuthZ: check permissions (described in Role-\u0026gt;Rule-\u0026gt;APIGroups)\u003c/mark\u003e\u003c/strong\u003e; on authorized, go to 7;\u003c/li\u003e\n  \u003cli\u003e\u003ccode class=\"language-plaintext highlighter-rouge\"\u003ekube-apiserver\u003c/code\u003e: process request, retrieve all \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eciliumnetworkpolicies\u003c/code\u003e in the given namespace;\u003c/li\u003e\n  \u003cli\u003e\u003ccode class=\"language-plaintext highlighter-rouge\"\u003ekube-apiserver\u003c/code\u003e: return results to the client.\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003cp\u003eNote that if AuthN or AuthZ failed, kube-apiserver will return directly with a proper error message.\nBesides, we’ve also drawn a human user in the subject list when perform RoleBinding,\nwhich is the case when the client is an out-of-cluster user or program.\u003c/p\u003e\n\n\u003ch2 id=\"27-summary\"\u003e2.7 Summary\u003c/h2\u003e\n\n\u003cp\u003eWith no surprises, the RBAC model we’ve designed is a simplified\nversion of the one shipped with Kubernetes (\u003cstrong\u003e\u003cmark\u003e\u003ccode\u003erbac.authorization.k8s.io\u003c/code\u003e\u003c/mark\u003e\u003c/strong\u003e API).\nHope that through this bottom-up\napproach, you’ve had a better understanding of the RBAC model and related concepts.\u003c/p\u003e\n\n\u003cp\u003eIn the next section, we’ll have a quick glimpse of the RBAC implementations in Kubernetes.\u003c/p\u003e\n\n\u003ch1 id=\"3-implemention\"\u003e3 Implemention\u003c/h1\u003e\n\n\u003ch2 id=\"31-data-structures\"\u003e3.1 Data structures\u003c/h2\u003e\n\n\u003cp\u003eWithout make this post too long, we just point to some of the key data structures:\u003c/p\u003e\n\n\u003cdiv class=\"language-go highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"c\"\u003e// https://github.com/kubernetes/kubernetes/blob/v1.23.4/pkg/apis/rbac/types.go\u003c/span\u003e\n\n\u003cspan class=\"c\"\u003e// PolicyRule holds information that describes a policy rule, but does not contain information\u003c/span\u003e\n\u003cspan class=\"c\"\u003e// about who the rule applies to or which namespace the rule applies to.\u003c/span\u003e\n\u003cspan class=\"k\"\u003etype\u003c/span\u003e \u003cspan class=\"n\"\u003ePolicyRule\u003c/span\u003e \u003cspan class=\"k\"\u003estruct\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eVerbs\u003c/span\u003e     \u003cspan class=\"p\"\u003e[]\u003c/span\u003e\u003cspan class=\"kt\"\u003estring\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eAPIGroups\u003c/span\u003e \u003cspan class=\"p\"\u003e[]\u003c/span\u003e\u003cspan class=\"kt\"\u003estring\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eResources\u003c/span\u003e \u003cspan class=\"p\"\u003e[]\u003c/span\u003e\u003cspan class=\"kt\"\u003estring\u003c/span\u003e\n\n    \u003cspan class=\"c\"\u003e// Following types not covered in this post\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eResourceNames\u003c/span\u003e   \u003cspan class=\"p\"\u003e[]\u003c/span\u003e\u003cspan class=\"kt\"\u003estring\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eNonResourceURLs\u003c/span\u003e \u003cspan class=\"p\"\u003e[]\u003c/span\u003e\u003cspan class=\"kt\"\u003estring\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"c\"\u003e// Subject contains a reference to the object or user identities a role binding applies to.  This can either hold a direct API object reference,\u003c/span\u003e\n\u003cspan class=\"c\"\u003e// or a value for non-objects such as user and group names.\u003c/span\u003e\n\u003cspan class=\"k\"\u003etype\u003c/span\u003e \u003cspan class=\"n\"\u003eSubject\u003c/span\u003e \u003cspan class=\"k\"\u003estruct\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eKind\u003c/span\u003e \u003cspan class=\"kt\"\u003estring\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eAPIGroup\u003c/span\u003e \u003cspan class=\"kt\"\u003estring\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eNamespace\u003c/span\u003e \u003cspan class=\"kt\"\u003estring\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"c\"\u003e// RoleRef contains information that points to the role being used\u003c/span\u003e\n\u003cspan class=\"k\"\u003etype\u003c/span\u003e \u003cspan class=\"n\"\u003eRoleRef\u003c/span\u003e \u003cspan class=\"k\"\u003estruct\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eAPIGroup\u003c/span\u003e \u003cspan class=\"kt\"\u003estring\u003c/span\u003e \u003cspan class=\"c\"\u003e// APIGroup is the group for the resource being referenced\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eKind\u003c/span\u003e \u003cspan class=\"kt\"\u003estring\u003c/span\u003e \u003cspan class=\"c\"\u003e// Kind is the type of resource being referenced\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eName\u003c/span\u003e \u003cspan class=\"kt\"\u003estring\u003c/span\u003e \u003cspan class=\"c\"\u003e// Name is the name of resource being referenced\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\n\u003cspan class=\"c\"\u003e// Role is a namespaced, logical grouping of PolicyRules that can be referenced as a unit by a RoleBinding.\u003c/span\u003e\n\u003cspan class=\"k\"\u003etype\u003c/span\u003e \u003cspan class=\"n\"\u003eRole\u003c/span\u003e \u003cspan class=\"k\"\u003estruct\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eRules\u003c/span\u003e \u003cspan class=\"p\"\u003e[]\u003c/span\u003e\u003cspan class=\"n\"\u003ePolicyRule\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"c\"\u003e// RoleBinding references a role, but does not contain it.  It can reference a Role in the same namespace or a ClusterRole in the global namespace.\u003c/span\u003e\n\u003cspan class=\"c\"\u003e// It adds who information via Subjects and namespace information by which namespace it exists in.  RoleBindings in a given\u003c/span\u003e\n\u003cspan class=\"c\"\u003e// namespace only have effect in that namespace.\u003c/span\u003e\n\u003cspan class=\"k\"\u003etype\u003c/span\u003e \u003cspan class=\"n\"\u003eRoleBinding\u003c/span\u003e \u003cspan class=\"k\"\u003estruct\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eSubjects\u003c/span\u003e \u003cspan class=\"p\"\u003e[]\u003c/span\u003e\u003cspan class=\"n\"\u003eSubject\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eRoleRef\u003c/span\u003e \u003cspan class=\"n\"\u003eRoleRef\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003ch2 id=\"32-bootstrap-policies\"\u003e3.2 Bootstrap policies\u003c/h2\u003e\n\n\u003cp\u003eSome builtin roles, rules, etc:\u003c/p\u003e\n\n\u003cdiv class=\"language-go highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"c\"\u003e// https://github.com/kubernetes/kubernetes/blob/v1.23.4/plugin/pkg/auth/authorizer/rbac/bootstrappolicy/policy.go\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003ch1 id=\"4-discussions\"\u003e4 Discussions\u003c/h1\u003e\n\n\u003ch2 id=\"41-namespaceless-rolerolebinding-clusterroleclusterrolebinding\"\u003e4.1 Namespaceless \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eRole\u003c/code\u003e/\u003ccode class=\"language-plaintext highlighter-rouge\"\u003eRoleBinding\u003c/code\u003e: \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eClusterRole\u003c/code\u003e/\u003ccode class=\"language-plaintext highlighter-rouge\"\u003eClusterRoleBinding\u003c/code\u003e\u003c/h2\u003e\n\n\u003cp\u003eA \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eRole\u003c/code\u003e sets permissions within a particular namespace. If you’d like to set\nnamespaceless roles, you can use \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eClusterRole\u003c/code\u003e (and the corresponding\n\u003ccode class=\"language-plaintext highlighter-rouge\"\u003eClusterRoleBinding\u003c/code\u003e).\u003c/p\u003e\n\n\u003cblockquote\u003e\n  \u003cp\u003eIn perticular, \u003cstrong\u003e\u003cmark\u003esome Kubernetes resources are not namespace-scoped, such as Persistent Volumes and Nodes\u003c/mark\u003e\u003c/strong\u003e.\u003c/p\u003e\n\n  \u003cdiv class=\"language-plaintext highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e/api/v1/nodes/{name}\n/api/v1/persistentvolume/{name}\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e  \u003c/div\u003e\n\u003c/blockquote\u003e\n\n\u003ctable\u003e\n  \u003cthead\u003e\n    \u003ctr\u003e\n      \u003cth style=\"text-align: left\"\u003eNamespaced\u003c/th\u003e\n      \u003cth style=\"text-align: left\"\u003eNamespaceless (Cluster wide)\u003c/th\u003e\n    \u003c/tr\u003e\n  \u003c/thead\u003e\n  \u003ctbody\u003e\n    \u003ctr\u003e\n      \u003ctd style=\"text-align: left\"\u003eRole\u003c/td\u003e\n      \u003ctd style=\"text-align: left\"\u003eClusterRole\u003c/td\u003e\n    \u003c/tr\u003e\n    \u003ctr\u003e\n      \u003ctd style=\"text-align: left\"\u003eRoleBinding\u003c/td\u003e\n      \u003ctd style=\"text-align: left\"\u003eClusterRoleBinding\u003c/td\u003e\n    \u003c/tr\u003e\n  \u003c/tbody\u003e\n\u003c/table\u003e\n\n\u003cp\u003e\u003ccode class=\"language-plaintext highlighter-rouge\"\u003ekube-apiserver\u003c/code\u003e creates \u003cstrong\u003e\u003cmark\u003ea set of default ClusterRole/ClusterRoleBinding\u003c/mark\u003e\u003c/strong\u003e objects,\u003c/p\u003e\n\n\u003cul\u003e\n  \u003cli\u003emany of these are \u003cstrong\u003e\u003cmark\u003e\u003ccode\u003esystem:\u003c/code\u003e\u003c/mark\u003e\u003c/strong\u003e prefixed, which\nindicates that the resource is directly managed by the cluster control plane;\u003c/li\u003e\n  \u003cli\u003eall of the default ClusterRoles and ClusterRoleBindings are labeled with\n\u003cstrong\u003e\u003cmark\u003e\u003ccode\u003ekubernetes.io/bootstrapping=rbac-defaults\u003c/code\u003e\u003c/mark\u003e\u003c/strong\u003e.\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2 id=\"42-default-roles-and-clusterroles-in-kubernetes\"\u003e4.2 Default roles and clusterroles in Kubernetes\u003c/h2\u003e\n\n\u003cp\u003eDefault roles:\u003c/p\u003e\n\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003e$ \u003c/span\u003ek get roles \u003cspan class=\"nt\"\u003e-n\u003c/span\u003e kube-system | \u003cspan class=\"nb\"\u003egrep\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;^system:\u0026#34;\u003c/span\u003e\nNAME                                             CREATED AT\nsystem::leader-locking-kube-controller-manager   2021-05-10T08:52:46Z\nsystem::leader-locking-kube-scheduler            2021-05-10T08:52:46Z\nsystem:controller:bootstrap-signer               2021-05-10T08:52:45Z\nsystem:controller:cloud-provider                 2021-05-10T08:52:45Z\nsystem:controller:token-cleaner                  2021-05-10T08:52:45Z\n...\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003eDefault clusterroles:\u003c/p\u003e\n\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003e$ \u003c/span\u003ekubectl get clusterroles \u003cspan class=\"nt\"\u003e-n\u003c/span\u003e kube-system | \u003cspan class=\"nb\"\u003egrep\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;^system:\u0026#34;\u003c/span\u003e\nsystem:aggregate-to-admin                               2021-05-10T08:52:44Z\nsystem:aggregate-to-edit                                2021-05-10T08:52:44Z\nsystem:aggregate-to-view                                2021-05-10T08:52:44Z\nsystem:discovery                                        2021-05-10T08:52:44Z\nsystem:kube-apiserver                                   2021-05-10T08:57:10Z\nsystem:kube-controller-manager                          2021-05-10T08:52:44Z\nsystem:kube-dns                                         2021-05-10T08:52:44Z\nsystem:kube-scheduler                                   2021-05-10T08:52:44Z\n...\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003eTo see the detailed permissions in each role/clusterrole,\u003c/p\u003e\n\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003e$ \u003c/span\u003ekubectl get role \u0026lt;role\u0026gt; \u003cspan class=\"nt\"\u003e-n\u003c/span\u003e kube-system \u003cspan class=\"nt\"\u003e-o\u003c/span\u003e yaml\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003ch2 id=\"43-embed-service-account-info-into-pods\"\u003e4.3 Embed service account info into pods\u003c/h2\u003e\n\n\u003cp\u003eService accounts are usually created automatically by the API server and\nassociated with pods running in the cluster. Three separate components\ncooperate to implement the automation:\u003c/p\u003e\n\n\u003col\u003e\n  \u003cli\u003e\n    \u003cp\u003eA \u003cstrong\u003e\u003cmark\u003eServiceAccount admission controller\u003c/mark\u003e\u003c/strong\u003e,\n  \u003ca href=\"https://github.com/kubernetes/kubernetes/blob/v1.23.1/plugin/pkg/admission/serviceaccount/admission.go\"\u003eimplementation\u003c/a\u003e\u003c/p\u003e\n\n    \u003cp\u003eAdmission Control modules can modify or reject requests. In addition to the\n attributes available to Authorization modules, they can access the contents\n of the object that is being created or modified, e.g. injecting access\n token to pods.\u003c/p\u003e\n  \u003c/li\u003e\n  \u003cli\u003eA \u003cstrong\u003e\u003cmark\u003eToken controller\u003c/mark\u003e\u003c/strong\u003e\u003c/li\u003e\n  \u003cli\u003eA \u003cstrong\u003e\u003cmark\u003eServiceAccount controller\u003c/mark\u003e\u003c/strong\u003e\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003cp\u003eService account bearer tokens are perfectly valid to use outside the cluster\nand can be used to create identities for long standing jobs that wish to talk\nto the Kubernetes API. To manually create a service account,\u003c/p\u003e\n\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003e$ \u003c/span\u003ekubectl create serviceaccount demo-sa\nserviceaccount/demo-sa created\n\n\u003cspan class=\"nv\"\u003e$ \u003c/span\u003ek get serviceaccounts demo-sa \u003cspan class=\"nt\"\u003e-o\u003c/span\u003e yaml\napiVersion: v1\nkind: ServiceAccount\nmetadata:\n  name: demo-sa\n  namespace: default\n  resourceVersion: \u003cspan class=\"s2\"\u003e\u0026#34;1985126654\u0026#34;\u003c/span\u003e\n  selfLink: /api/v1/namespaces/default/serviceaccounts/demo-sa\n  uid: 01b2a3f9-a373-6e74-b3ae-d89f6c0e321f\nsecrets:\n- name: demo-sa-token-hrfq2\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003eThe created secret holds the public CA of the API server and a signed JSON Web Token (JWT).\u003c/p\u003e\n\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003e$ \u003c/span\u003ekubectl get secret demo-sa-token-hrfq2 \u003cspan class=\"nt\"\u003e-o\u003c/span\u003e yaml\napiVersion: v1\ndata:\n  ca.crt: \u003cspan class=\"o\"\u003e(\u003c/span\u003eAPISERVER CA BASE64 ENCODED\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n  namespace: \u003cspan class=\"nv\"\u003eZGVmYXVsdA\u003c/span\u003e\u003cspan class=\"o\"\u003e==\u003c/span\u003e\n  token: \u003cspan class=\"o\"\u003e(\u003c/span\u003eBEARER TOKEN BASE64 ENCODED\u003cspan class=\"o\"\u003e)\u003c/span\u003e\nkind: Secret\nmetadata:\n  \u003cspan class=\"c\"\u003e# ...\u003c/span\u003e\n\u003cspan class=\"nb\"\u003etype\u003c/span\u003e: kubernetes.io/service-account-token\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003eThe signed JWT can be used as a bearer token to authenticate as the given\nservice account, and is included in request headers. Normally\nthese \u003cstrong\u003e\u003cmark\u003esecrets are mounted into pods\u003c/mark\u003e\u003c/strong\u003e for in-cluster access to the API server,\nbut can be used from outside the cluster as well.\u003c/p\u003e\n\n\u003cp\u003eService accounts authenticate with the username\n\u003cstrong\u003e\u003cmark\u003e\u003ccode\u003esystem:serviceaccount:NAMESPACE:SERVICEACCOUNT\u003c/code\u003e\u003c/mark\u003e\u003c/strong\u003e,\nand are assigned to the groups \u003cstrong\u003e\u003cmark\u003e\u003ccode\u003esystem:serviceaccounts\u003c/code\u003e\u003c/mark\u003e\u003c/strong\u003e\nand \u003cstrong\u003e\u003cmark\u003e\u003ccode\u003esystem:serviceaccounts:NAMESPACE\u003c/code\u003e\u003c/mark\u003e\u003c/strong\u003e.\u003c/p\u003e\n\n\u003ch2 id=\"44-internals-of-authz-process\"\u003e4.4 Internals of AuthZ process\u003c/h2\u003e\n\n\u003cp\u003eMore information on the authorization process, refer to Kubernetes documentation\n\u003ca href=\"https://kubernetes.io/docs/reference/access-authn-authz/authorization/#review-your-request-attributes\"\u003e\u003cmark\u003eAuthorization Overview\u003c/mark\u003e\u003c/a\u003e.\u003c/p\u003e\n\n\u003ch2 id=\"45-authn-rationals-of-differentiating-user-and-serviceaccount\"\u003e4.5 AuthN: rationals of differentiating \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eUser\u003c/code\u003e and \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eServiceAccount\u003c/code\u003e\u003c/h2\u003e\n\n\u003cp\u003eA Kubernetes cluster has two categories of users [4]:\u003c/p\u003e\n\n\u003col\u003e\n  \u003cli\u003eService accounts: \u003cstrong\u003e\u003cmark\u003emanaged by Kubernetes\u003c/mark\u003e\u003c/strong\u003e,\u003c/li\u003e\n  \u003cli\u003e\n    \u003cp\u003eNormal users: usually \u003cstrong\u003e\u003cmark\u003emanaged by a cluster-independent service\u003c/mark\u003e\u003c/strong\u003e in the following ways:\u003c/p\u003e\n\n    \u003cul\u003e\n      \u003cli\u003ean administrator distributing private keys\u003c/li\u003e\n      \u003cli\u003ea user store like Keystone or Google Accounts\u003c/li\u003e\n      \u003cli\u003ea file with a list of usernames and passwords\u003c/li\u003e\n    \u003c/ul\u003e\n  \u003c/li\u003e\n\u003c/ol\u003e\n\n\u003ch3 id=\"451-normal-users\"\u003e4.5.1 Normal users\u003c/h3\u003e\n\n\u003cp\u003eIn this regard, \u003cstrong\u003e\u003cmark\u003eKubernetes does not have objects which represent normal user accounts\u003c/mark\u003e\u003c/strong\u003e.\nNormal users cannot be added to a cluster through an API call.\nBut, \u003cstrong\u003e\u003cmark\u003eany user that presents a valid credential\u003c/mark\u003e\u003c/strong\u003e is considered authenticated.\u003c/p\u003e\n\n\u003cp\u003eFor more details, refer to the normal users topic in \n\u003ca href=\"https://kubernetes.io/docs/reference/access-authn-authz/certificate-signing-requests/#normal-user\"\u003ecertificate request\u003c/a\u003e\nfor more details about this.\u003c/p\u003e\n\n\u003ch3 id=\"452-serviceaccount-users\"\u003e4.5.2 ServiceAccount users\u003c/h3\u003e\n\n\u003cp\u003eIn contrast, \u003cstrong\u003e\u003cmark\u003eservice accounts are users managed by the Kubernetes API\u003c/mark\u003e\u003c/strong\u003e.\nThey are,\u003c/p\u003e\n\n\u003cul\u003e\n  \u003cli\u003eCreated automatically by the API server or manually through API calls.\u003c/li\u003e\n  \u003cli\u003eTied to a set of credentials stored as \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eSecrets\u003c/code\u003e, which are mounted into pods\nallowing in-cluster processes to talk to the Kubernetes API.\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eMore rationals behind the scene, see Kubernetes documentation\n\u003ca href=\"https://kubernetes.io/docs/reference/access-authn-authz/service-accounts-admin/\"\u003eUser accounts versus service accounts\u003c/a\u003e.\u003c/p\u003e\n\n\u003ch2 id=\"46-related-configurations-of-kube-apiserver\"\u003e4.6 Related configurations of kube-apiserver\u003c/h2\u003e\n\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003e$ \u003c/span\u003e\u003cspan class=\"nb\"\u003ecat\u003c/span\u003e /etc/kubernetes/apiserver.config\n \u003cspan class=\"nt\"\u003e--authorization-mode\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003eNode,RBAC \u003cspan class=\"se\"\u003e\\\u003c/span\u003e\n \u003cspan class=\"nt\"\u003e--kubelet-certificate-authority\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e/etc/kubernetes/pki/ca.crt \u003cspan class=\"se\"\u003e\\\u003c/span\u003e\n \u003cspan class=\"nt\"\u003e--service-account-key-file\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e/etc/kubernetes/pki/sa.pub        \u003cspan class=\"c\"\u003e# bearer tokens. If unspecified, the API server\u0026#39;s TLS private key will be used.\u003c/span\u003e\n ...\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003ch2 id=\"47-make-authz-yaml-policies-more-concise\"\u003e4.7 Make AuthZ YAML policies more concise\u003c/h2\u003e\n\n\u003cp\u003eA normal specification:\u003c/p\u003e\n\n\u003cdiv class=\"language-yaml highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"na\"\u003erules\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e\n\u003cspan class=\"pi\"\u003e-\u003c/span\u003e \u003cspan class=\"na\"\u003eapiGroups\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e\n  \u003cspan class=\"pi\"\u003e-\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;\u003c/span\u003e\n  \u003cspan class=\"na\"\u003eresources\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e\n  \u003cspan class=\"pi\"\u003e-\u003c/span\u003e \u003cspan class=\"s\"\u003epods\u003c/span\u003e\n  \u003cspan class=\"pi\"\u003e-\u003c/span\u003e \u003cspan class=\"s\"\u003eendpoints\u003c/span\u003e\n  \u003cspan class=\"pi\"\u003e-\u003c/span\u003e \u003cspan class=\"s\"\u003enamespaces\u003c/span\u003e\n  \u003cspan class=\"na\"\u003everbs\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e\n  \u003cspan class=\"pi\"\u003e-\u003c/span\u003e \u003cspan class=\"s\"\u003eget\u003c/span\u003e\n  \u003cspan class=\"pi\"\u003e-\u003c/span\u003e \u003cspan class=\"s\"\u003ewatch\u003c/span\u003e\n  \u003cspan class=\"pi\"\u003e-\u003c/span\u003e \u003cspan class=\"s\"\u003elist\u003c/span\u003e\n  \u003cspan class=\"pi\"\u003e-\u003c/span\u003e \u003cspan class=\"s\"\u003ecreate\u003c/span\u003e\n  \u003cspan class=\"pi\"\u003e-\u003c/span\u003e \u003cspan class=\"s\"\u003edelete\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003eThe above specification can be re-write in the following format:\u003c/p\u003e\n\n\u003cdiv class=\"language-yaml highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"pi\"\u003e-\u003c/span\u003e \u003cspan class=\"na\"\u003eapiGroups\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"pi\"\u003e[\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"pi\"\u003e]\u003c/span\u003e\n  \u003cspan class=\"na\"\u003eresources\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"pi\"\u003e[\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"s\"\u003eservices\u0026#34;\u003c/span\u003e\u003cspan class=\"pi\"\u003e,\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"s\"\u003eendpoints\u0026#34;\u003c/span\u003e\u003cspan class=\"pi\"\u003e,\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"s\"\u003enamespaces\u0026#34;\u003c/span\u003e\u003cspan class=\"pi\"\u003e]\u003c/span\u003e\n  \u003cspan class=\"na\"\u003everbs\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e     \u003cspan class=\"pi\"\u003e[\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"s\"\u003eget\u0026#34;\u003c/span\u003e\u003cspan class=\"pi\"\u003e,\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"s\"\u003elist\u0026#34;\u003c/span\u003e\u003cspan class=\"pi\"\u003e,\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"s\"\u003ewatch\u0026#34;\u003c/span\u003e\u003cspan class=\"pi\"\u003e,\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"s\"\u003ecreate\u0026#34;\u003c/span\u003e\u003cspan class=\"pi\"\u003e,\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"s\"\u003edelete\u0026#34;\u003c/span\u003e\u003cspan class=\"pi\"\u003e]\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003ewhich reduces lines significantly, and is more concise.\nBut Kubernetes internally still manages the content with long-format:\u003c/p\u003e\n\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003e$ \u003c/span\u003ekubectl get role pod-reader \u003cspan class=\"nt\"\u003e-o\u003c/span\u003e yaml\napiVersion: rbac.authorization.k8s.io/v1\nkind: Role\nrules:\n- apiGroups:\n  - \u003cspan class=\"s2\"\u003e\u0026#34;\u0026#34;\u003c/span\u003e\n  resources:\n  - pods\n...\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003ch2 id=\"48-some-subject-examples\"\u003e4.8 Some subject examples\u003c/h2\u003e\n\n\u003cdiv class=\"language-yaml highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"na\"\u003esubjects\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e\n\u003cspan class=\"pi\"\u003e-\u003c/span\u003e \u003cspan class=\"na\"\u003ekind\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003eGroup\u003c/span\u003e\n  \u003cspan class=\"na\"\u003ename\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003esystem:serviceaccounts:qa\u003c/span\u003e\n  \u003cspan class=\"na\"\u003eapiGroup\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003erbac.authorization.k8s.io\u003c/span\u003e\n\n\u003cspan class=\"na\"\u003esubjects\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e\n\u003cspan class=\"pi\"\u003e-\u003c/span\u003e \u003cspan class=\"na\"\u003ekind\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003eGroup\u003c/span\u003e\n  \u003cspan class=\"na\"\u003ename\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003esystem:serviceaccounts\u003c/span\u003e         \u003cspan class=\"c1\"\u003e# when namespace field is no specified: all service accounts in any namespace\u003c/span\u003e\n  \u003cspan class=\"na\"\u003eapiGroup\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003erbac.authorization.k8s.io\u003c/span\u003e\n\n\u003cspan class=\"na\"\u003esubjects\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e\n\u003cspan class=\"pi\"\u003e-\u003c/span\u003e \u003cspan class=\"na\"\u003ekind\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003eGroup\u003c/span\u003e\n  \u003cspan class=\"na\"\u003ename\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003esystem:authenticated\u003c/span\u003e           \u003cspan class=\"c1\"\u003e# for all authenticated users\u003c/span\u003e\n  \u003cspan class=\"na\"\u003eapiGroup\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003erbac.authorization.k8s.io\u003c/span\u003e\n\u003cspan class=\"pi\"\u003e-\u003c/span\u003e \u003cspan class=\"na\"\u003ekind\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003eGroup\u003c/span\u003e\n  \u003cspan class=\"na\"\u003ename\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003esystem:unauthenticated\u003c/span\u003e         \u003cspan class=\"c1\"\u003e# for all unauthenticated users\u003c/span\u003e\n  \u003cspan class=\"na\"\u003eapiGroup\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003erbac.authorization.k8s.io\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003ch2 id=\"49-virtual-resource-types\"\u003e4.9 Virtual \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eresource\u003c/code\u003e types\u003c/h2\u003e\n\n\u003cp\u003eFrom the \u003ca href=\"https://kubernetes.io/docs/reference/using-api/api-concepts/#standard-api-terminology\"\u003edocumentation\u003c/a\u003e,\nin Kubernetes,\u003c/p\u003e\n\n\u003cul\u003e\n  \u003cli\u003e\n    \u003cp\u003eMost resource types are\n\u003ca href=\"https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/#kubernetes-objects\"\u003eobjects\u003c/a\u003e:\nthey represent a \u003cstrong\u003e\u003cmark\u003econcrete instance of a concept on the cluster\u003c/mark\u003e\u003c/strong\u003e, such as\u003c/p\u003e\n\n    \u003col\u003e\n      \u003cli\u003ea \u003ccode class=\"language-plaintext highlighter-rouge\"\u003epod\u003c/code\u003e,\u003c/li\u003e\n      \u003cli\u003ea \u003ccode class=\"language-plaintext highlighter-rouge\"\u003enamespace\u003c/code\u003e.\u003c/li\u003e\n    \u003c/ol\u003e\n  \u003c/li\u003e\n  \u003cli\u003e\n    \u003cp\u003eA smaller number of API resource types are \u003cstrong\u003e\u003cmark\u003evirtual\u003c/mark\u003e\u003c/strong\u003e, in that\nthey often \u003cstrong\u003e\u003cmark\u003erepresent operations on objects\u003c/mark\u003e\u003c/strong\u003e, rather than\nobjects themsellves, such as\u003c/p\u003e\n\n    \u003col\u003e\n      \u003cli\u003e\u003cstrong\u003e\u003cmark\u003ea permission check\u003c/mark\u003e\u003c/strong\u003e (use a POST with a JSON-encoded body of \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eSubjectAccessReview\u003c/code\u003e to the \u003ccode class=\"language-plaintext highlighter-rouge\"\u003esubjectaccessreviews\u003c/code\u003e resource),\u003c/li\u003e\n      \u003cli\u003ethe \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eeviction\u003c/code\u003e sub-resource of a Pod (used to trigger API-initiated eviction).\u003c/li\u003e\n    \u003c/ol\u003e\n  \u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch1 id=\"references\"\u003eReferences\u003c/h1\u003e\n\n\u003col\u003e\n  \u003cli\u003e\u003ca href=\"https://kubernetes.io/docs/reference/access-authn-authz/authorization/\"\u003eKubernetes Doc: Authorization Overview\u003c/a\u003e\u003c/li\u003e\n  \u003cli\u003e\u003ca href=\"https://en.wikipedia.org/wiki/Role-based_access_control\"\u003eWikipedia: RBAC\u003c/a\u003e\u003c/li\u003e\n  \u003cli\u003e\u003ca href=\"https://tailscale.com/blog/rbac-like-it-was-meant-to-be/\"\u003eRBAC as it meant to be\u003c/a\u003e\u003c/li\u003e\n  \u003cli\u003e\u003ca href=\"https://kubernetes.io/docs/reference/access-authn-authz/authentication/\"\u003eKubernetes Doc: Authentication Overview\u003c/a\u003e\u003c/li\u003e\n\u003c/ol\u003e\n\n\n  \u003c!-- POST NAVIGATION --\u003e\n  \u003cdiv class=\"postNav clearfix\"\u003e\n     \n      \u003ca class=\"prev\" href=\"/blog/raft-paper-zh/\"\u003e\u003cspan\u003e« [译] [论文] Raft 共识算法（及 etcd/raft 源码解析）（USENIX, 2014）\u003c/span\u003e\n      \n    \u003c/a\u003e\n      \n      \n      \u003ca class=\"next\" href=\"/blog/bpf-ringbuf-zh/\"\u003e\u003cspan\u003e[译] BPF ring buffer：使用场景、核心设计及程序示例（2020） »\u003c/span\u003e\n       \n      \u003c/a\u003e\n     \n  \u003c/div\u003e\n\u003c/div\u003e",
  "Date": "2022-04-17T00:00:00Z",
  "Author": "Arthur Chiao"
}