{
  "Source": "arthurchiao.art",
  "Title": "Cracking Kubernetes Node Proxy (aka kube-proxy)",
  "Link": "https://arthurchiao.art/blog/cracking-k8s-node-proxy/",
  "Content": "\u003cdiv class=\"post\"\u003e\n  \n  \u003ch1 class=\"postTitle\"\u003eCracking Kubernetes Node Proxy (aka kube-proxy)\u003c/h1\u003e\n  \u003cp class=\"meta\"\u003ePublished at 2019-11-30 | Last Update 2021-02-03\u003c/p\u003e\n  \n  \u003ch2 id=\"tl-dr\"\u003eTL; DR\u003c/h2\u003e\n\n\u003cp\u003eThis post analyzes the Kubernetes node proxy model, and provides 5 \ndemo implementations (within couples of lines of code) of the model based on\ndifferent kernel infrastructures (\u003cstrong\u003e\u003cmark\u003e\u003ccode\u003euserspace/iptables/ipvs/tc-ebpf/sock-ebpf\u003c/code\u003e\u003c/mark\u003e\u003c/strong\u003e).\u003c/p\u003e\n\n\u003cp\u003eRelated posts:\u003c/p\u003e\n\n\u003col\u003e\n  \u003cli\u003e\u003ca href=\"/blog/cracking-k8s-node-proxy/\"\u003eCracking Kubernetes Node Proxy (aka kube-proxy)\u003c/a\u003e\u003c/li\u003e\n  \u003cli\u003e\u003ca href=\"/blog/cracking-k8s-network-policy/\"\u003eCracking Kubernetes Network Policy\u003c/a\u003e\u003c/li\u003e\n  \u003cli\u003e\u003ca href=\"/blog/cracking-k8s-authn/\"\u003eCracking Kubernetes Authentication (AuthN) Model\u003c/a\u003e\u003c/li\u003e\n  \u003cli\u003e\u003ca href=\"/blog/cracking-k8s-authz-rbac/\"\u003eCracking Kubernetes RBAC Authorization (AuthZ) Model\u003c/a\u003e\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003chr/\u003e\n\n\u003cul id=\"markdown-toc\"\u003e\n  \u003cli\u003e\u003ca href=\"#tl-dr\" id=\"markdown-toc-tl-dr\"\u003eTL; DR\u003c/a\u003e\u003c/li\u003e\n  \u003cli\u003e\u003ca href=\"#1-background-knowledge\" id=\"markdown-toc-1-background-knowledge\"\u003e1. Background knowledge\u003c/a\u003e    \u003cul\u003e\n      \u003cli\u003e\u003ca href=\"#11-netfilter\" id=\"markdown-toc-11-netfilter\"\u003e1.1 Netfilter\u003c/a\u003e\u003c/li\u003e\n      \u003cli\u003e\u003ca href=\"#12-ebpf\" id=\"markdown-toc-12-ebpf\"\u003e1.2 eBPF\u003c/a\u003e\u003c/li\u003e\n      \u003cli\u003e\u003ca href=\"#13-vip-and-load-balancing-lb\" id=\"markdown-toc-13-vip-and-load-balancing-lb\"\u003e1.3 VIP and load balancing (LB)\u003c/a\u003e\u003c/li\u003e\n      \u003cli\u003e\u003ca href=\"#14-cross-host-networking-model\" id=\"markdown-toc-14-cross-host-networking-model\"\u003e1.4 Cross-host networking model\u003c/a\u003e\u003c/li\u003e\n    \u003c/ul\u003e\n  \u003c/li\u003e\n  \u003cli\u003e\u003ca href=\"#2-kubernetes-node-proxy-model\" id=\"markdown-toc-2-kubernetes-node-proxy-model\"\u003e2. Kubernetes node proxy model\u003c/a\u003e    \u003cul\u003e\n      \u003cli\u003e\u003ca href=\"#21-service-types\" id=\"markdown-toc-21-service-types\"\u003e2.1 Service types\u003c/a\u003e\u003c/li\u003e\n      \u003cli\u003e\u003ca href=\"#22-serviceproxy-model\" id=\"markdown-toc-22-serviceproxy-model\"\u003e2.2 Service/proxy model\u003c/a\u003e\u003c/li\u003e\n      \u003cli\u003e\u003ca href=\"#23-role-of-the-node-proxy-reverse-proxy\" id=\"markdown-toc-23-role-of-the-node-proxy-reverse-proxy\"\u003e2.3 Role of the node proxy: reverse proxy\u003c/a\u003e\u003c/li\u003e\n      \u003cli\u003e\u003ca href=\"#24-performance-issues\" id=\"markdown-toc-24-performance-issues\"\u003e2.4 Performance issues\u003c/a\u003e\u003c/li\u003e\n    \u003c/ul\u003e\n  \u003c/li\u003e\n  \u003cli\u003e\u003ca href=\"#3-test-environment\" id=\"markdown-toc-3-test-environment\"\u003e3. Test environment\u003c/a\u003e    \u003cul\u003e\n      \u003cli\u003e\u003ca href=\"#31-cluster-topology-and-test-environment\" id=\"markdown-toc-31-cluster-topology-and-test-environment\"\u003e3.1 Cluster topology and test environment\u003c/a\u003e\u003c/li\u003e\n      \u003cli\u003e\u003ca href=\"#32-create-a-service\" id=\"markdown-toc-32-create-a-service\"\u003e3.2 Create a Service\u003c/a\u003e\u003c/li\u003e\n      \u003cli\u003e\u003ca href=\"#33-reachability-test\" id=\"markdown-toc-33-reachability-test\"\u003e3.3 Reachability test\u003c/a\u003e\u003c/li\u003e\n    \u003c/ul\u003e\n  \u003c/li\u003e\n  \u003cli\u003e\u003ca href=\"#4-implementation-1-proxy-via-userspace-socket\" id=\"markdown-toc-4-implementation-1-proxy-via-userspace-socket\"\u003e4. Implementation 1: proxy via userspace socket\u003c/a\u003e    \u003cul\u003e\n      \u003cli\u003e\u003ca href=\"#41-the-middleman-model\" id=\"markdown-toc-41-the-middleman-model\"\u003e4.1 The middleman model\u003c/a\u003e\u003c/li\u003e\n      \u003cli\u003e\u003ca href=\"#42-implementation\" id=\"markdown-toc-42-implementation\"\u003e4.2 Implementation\u003c/a\u003e        \u003cul\u003e\n          \u003cli\u003e\u003ca href=\"#421-code\" id=\"markdown-toc-421-code\"\u003e4.2.1 Code\u003c/a\u003e\u003c/li\u003e\n          \u003cli\u003e\u003ca href=\"#422-some-explanations\" id=\"markdown-toc-422-some-explanations\"\u003e4.2.2 Some explanations\u003c/a\u003e            \u003cul\u003e\n              \u003cli\u003e\u003ca href=\"#1-traffic-interception\" id=\"markdown-toc-1-traffic-interception\"\u003e1. Traffic interception\u003c/a\u003e\u003c/li\u003e\n              \u003cli\u003e\u003ca href=\"#2-create-proxy\" id=\"markdown-toc-2-create-proxy\"\u003e2. Create proxy\u003c/a\u003e\u003c/li\u003e\n            \u003c/ul\u003e\n          \u003c/li\u003e\n          \u003cli\u003e\u003ca href=\"#43-reachability-test\" id=\"markdown-toc-43-reachability-test\"\u003e4.3 Reachability test\u003c/a\u003e\u003c/li\u003e\n        \u003c/ul\u003e\n      \u003c/li\u003e\n      \u003cli\u003e\u003ca href=\"#43-clean-up\" id=\"markdown-toc-43-clean-up\"\u003e4.3 Clean up\u003c/a\u003e\u003c/li\u003e\n      \u003cli\u003e\u003ca href=\"#44-improvements\" id=\"markdown-toc-44-improvements\"\u003e4.4 Improvements\u003c/a\u003e\u003c/li\u003e\n      \u003cli\u003e\u003ca href=\"#45-pros-and-cons\" id=\"markdown-toc-45-pros-and-cons\"\u003e4.5 Pros and Cons\u003c/a\u003e\u003c/li\u003e\n    \u003c/ul\u003e\n  \u003c/li\u003e\n  \u003cli\u003e\u003ca href=\"#5-implementation-2-proxy-via-iptables\" id=\"markdown-toc-5-implementation-2-proxy-via-iptables\"\u003e5. Implementation 2: proxy via iptables\u003c/a\u003e    \u003cul\u003e\n      \u003cli\u003e\u003ca href=\"#51-host---clusterip-single-backend\" id=\"markdown-toc-51-host---clusterip-single-backend\"\u003e5.1 Host -\u0026gt; ClusterIP (single backend)\u003c/a\u003e        \u003cul\u003e\n          \u003cli\u003e\u003ca href=\"#511-where-to-perform-the-dnat\" id=\"markdown-toc-511-where-to-perform-the-dnat\"\u003e5.1.1 Where to perform the DNAT\u003c/a\u003e\u003c/li\u003e\n          \u003cli\u003e\u003ca href=\"#512-check-current-nat-rules\" id=\"markdown-toc-512-check-current-nat-rules\"\u003e5.1.2 Check current NAT rules\u003c/a\u003e\u003c/li\u003e\n          \u003cli\u003e\u003ca href=\"#513-add-dnat-rules\" id=\"markdown-toc-513-add-dnat-rules\"\u003e5.1.3 Add DNAT rules\u003c/a\u003e\u003c/li\u003e\n          \u003cli\u003e\u003ca href=\"#514-test-reachability\" id=\"markdown-toc-514-test-reachability\"\u003e5.1.4 Test reachability\u003c/a\u003e\u003c/li\u003e\n          \u003cli\u003e\u003ca href=\"#515-cleanup\" id=\"markdown-toc-515-cleanup\"\u003e5.1.5 Cleanup\u003c/a\u003e\u003c/li\u003e\n        \u003c/ul\u003e\n      \u003c/li\u003e\n      \u003cli\u003e\u003ca href=\"#52-host---clusterip-multiple-backends\" id=\"markdown-toc-52-host---clusterip-multiple-backends\"\u003e5.2 Host -\u0026gt; ClusterIP (multiple backends)\u003c/a\u003e        \u003cul\u003e\n          \u003cli\u003e\u003ca href=\"#521-scale-up-webapp\" id=\"markdown-toc-521-scale-up-webapp\"\u003e5.2.1 Scale up webapp\u003c/a\u003e\u003c/li\u003e\n          \u003cli\u003e\u003ca href=\"#522-add-dnat-rules-with-load-balancing\" id=\"markdown-toc-522-add-dnat-rules-with-load-balancing\"\u003e5.2.2 Add DNAT rules with load balancing\u003c/a\u003e\u003c/li\u003e\n          \u003cli\u003e\u003ca href=\"#523-verify-load-balancing\" id=\"markdown-toc-523-verify-load-balancing\"\u003e5.2.3 Verify load balancing\u003c/a\u003e\u003c/li\u003e\n          \u003cli\u003e\u003ca href=\"#524-cleanup\" id=\"markdown-toc-524-cleanup\"\u003e5.2.4 Cleanup\u003c/a\u003e\u003c/li\u003e\n        \u003c/ul\u003e\n      \u003c/li\u003e\n      \u003cli\u003e\u003ca href=\"#53-pod-app-a---clusterip-app-b\" id=\"markdown-toc-53-pod-app-a---clusterip-app-b\"\u003e5.3 Pod (app A) -\u0026gt; ClusterIP (app B)\u003c/a\u003e\u003c/li\u003e\n      \u003cli\u003e\u003ca href=\"#54-re-structure-the-iptables-rules\" id=\"markdown-toc-54-re-structure-the-iptables-rules\"\u003e5.4 Re-structure the iptables rules\u003c/a\u003e\u003c/li\u003e\n      \u003cli\u003e\u003ca href=\"#55-further-re-structure-the-iptables-rules\" id=\"markdown-toc-55-further-re-structure-the-iptables-rules\"\u003e5.5 Further Re-structure the iptables rules\u003c/a\u003e\u003c/li\u003e\n    \u003c/ul\u003e\n  \u003c/li\u003e\n  \u003cli\u003e\u003ca href=\"#6-implementation-3-proxy-via-ipvs\" id=\"markdown-toc-6-implementation-3-proxy-via-ipvs\"\u003e6. Implementation 3: proxy via IPVS\u003c/a\u003e    \u003cul\u003e\n      \u003cli\u003e\u003ca href=\"#61-install-ipvs\" id=\"markdown-toc-61-install-ipvs\"\u003e6.1 Install IPVS\u003c/a\u003e\u003c/li\u003e\n      \u003cli\u003e\u003ca href=\"#62-add-virtualreal-servers\" id=\"markdown-toc-62-add-virtualreal-servers\"\u003e6.2 Add virtual/real servers\u003c/a\u003e\u003c/li\u003e\n      \u003cli\u003e\u003ca href=\"#63-verify\" id=\"markdown-toc-63-verify\"\u003e6.3 Verify\u003c/a\u003e\u003c/li\u003e\n      \u003cli\u003e\u003ca href=\"#64-clean-up\" id=\"markdown-toc-64-clean-up\"\u003e6.4 Clean up\u003c/a\u003e\u003c/li\u003e\n    \u003c/ul\u003e\n  \u003c/li\u003e\n  \u003cli\u003e\u003ca href=\"#7-implementation-4-proxy-via-tc-level-ebpf\" id=\"markdown-toc-7-implementation-4-proxy-via-tc-level-ebpf\"\u003e7. Implementation 4: proxy via tc-level ebpf\u003c/a\u003e    \u003cul\u003e\n      \u003cli\u003e\u003ca href=\"#71-prerequisites\" id=\"markdown-toc-71-prerequisites\"\u003e7.1 Prerequisites\u003c/a\u003e\u003c/li\u003e\n      \u003cli\u003e\u003ca href=\"#72-implementation\" id=\"markdown-toc-72-implementation\"\u003e7.2 Implementation\u003c/a\u003e\u003c/li\u003e\n      \u003cli\u003e\u003ca href=\"#73-compile-and-load-into-kernel\" id=\"markdown-toc-73-compile-and-load-into-kernel\"\u003e7.3 Compile and load into kernel\u003c/a\u003e\u003c/li\u003e\n      \u003cli\u003e\u003ca href=\"#74-verify\" id=\"markdown-toc-74-verify\"\u003e7.4 Verify\u003c/a\u003e\u003c/li\u003e\n      \u003cli\u003e\u003ca href=\"#75-cleanup\" id=\"markdown-toc-75-cleanup\"\u003e7.5 Cleanup\u003c/a\u003e\u003c/li\u003e\n      \u003cli\u003e\u003ca href=\"#76-explanations\" id=\"markdown-toc-76-explanations\"\u003e7.6 Explanations\u003c/a\u003e\u003c/li\u003e\n      \u003cli\u003e\u003ca href=\"#77-improvements\" id=\"markdown-toc-77-improvements\"\u003e7.7 Improvements\u003c/a\u003e\u003c/li\u003e\n    \u003c/ul\u003e\n  \u003c/li\u003e\n  \u003cli\u003e\u003ca href=\"#8-implementation-5-proxy-via-socket-level-ebpf\" id=\"markdown-toc-8-implementation-5-proxy-via-socket-level-ebpf\"\u003e8. Implementation 5: proxy via socket-level ebpf\u003c/a\u003e    \u003cul\u003e\n      \u003cli\u003e\u003ca href=\"#81-hook-earlier\" id=\"markdown-toc-81-hook-earlier\"\u003e8.1 Hook earlier\u003c/a\u003e\u003c/li\u003e\n      \u003cli\u003e\u003ca href=\"#82-implementation\" id=\"markdown-toc-82-implementation\"\u003e8.2 Implementation\u003c/a\u003e\u003c/li\u003e\n      \u003cli\u003e\u003ca href=\"#83-compile-load-and-attach-bpf-code\" id=\"markdown-toc-83-compile-load-and-attach-bpf-code\"\u003e8.3 Compile, load and attach BPF code\u003c/a\u003e\u003c/li\u003e\n      \u003cli\u003e\u003ca href=\"#83-verify\" id=\"markdown-toc-83-verify\"\u003e8.3 Verify\u003c/a\u003e\u003c/li\u003e\n      \u003cli\u003e\u003ca href=\"#84-clean-up\" id=\"markdown-toc-84-clean-up\"\u003e8.4 Clean up\u003c/a\u003e\u003c/li\u003e\n      \u003cli\u003e\u003ca href=\"#85-performance-comparison\" id=\"markdown-toc-85-performance-comparison\"\u003e8.5 Performance comparison\u003c/a\u003e\u003c/li\u003e\n      \u003cli\u003e\u003ca href=\"#86-other-explanations\" id=\"markdown-toc-86-other-explanations\"\u003e8.6 Other explanations\u003c/a\u003e\u003c/li\u003e\n    \u003c/ul\u003e\n  \u003c/li\u003e\n  \u003cli\u003e\u003ca href=\"#9-summary\" id=\"markdown-toc-9-summary\"\u003e9. Summary\u003c/a\u003e\u003c/li\u003e\n  \u003cli\u003e\u003ca href=\"#references\" id=\"markdown-toc-references\"\u003eReferences\u003c/a\u003e\u003c/li\u003e\n  \u003cli\u003e\u003ca href=\"#appendix\" id=\"markdown-toc-appendix\"\u003eAppendix\u003c/a\u003e    \u003cul\u003e\n      \u003cli\u003e\u003ca href=\"#a1-webappyaml\" id=\"markdown-toc-a1-webappyaml\"\u003eA1. \u003ccode class=\"language-plaintext highlighter-rouge\"\u003ewebapp.yaml\u003c/code\u003e\u003c/a\u003e\u003c/li\u003e\n      \u003cli\u003e\u003ca href=\"#a2-service-struct-definition-in-kubernetes\" id=\"markdown-toc-a2-service-struct-definition-in-kubernetes\"\u003eA2. \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eService\u003c/code\u003e struct definition in Kubernetes\u003c/a\u003e\u003c/li\u003e\n    \u003c/ul\u003e\n  \u003c/li\u003e\n\u003c/ul\u003e\n\n\u003chr/\u003e\n\n\u003cp\u003eThere are \u003ca href=\"https://kubernetes.io/docs/concepts/cluster-administration/proxies/\"\u003eseveral types of proxies\u003c/a\u003e in\nKubernetes, and among them is the \u003cmark\u003enode proxier\u003c/mark\u003e, or\n\u003ca href=\"https://kubernetes.io/docs/reference/command-line-tools-reference/kube-proxy/\"\u003e\u003ccode class=\"language-plaintext highlighter-rouge\"\u003ekube-proxy\u003c/code\u003e\u003c/a\u003e,\nwhich reflects services defined in Kubernetes API on each node and performs simple\nTCP/UDP/SCTP stream forwarding across a set of backends [1].\u003c/p\u003e\n\n\u003cp\u003eThis post first analyzes the design behind the node proxier model,\nthen \u003cmark\u003eimplements our own versions of the proxy\u003c/mark\u003e with different means;\nalthough just toy programs, they work theoretically the same way as\nthe vanilla \u003ccode class=\"language-plaintext highlighter-rouge\"\u003ekube-proxy\u003c/code\u003e running inside your K8S cluster - in terms of\n\u003cstrong\u003etransparent traffic intercepting, forwarding, load balancing\u003c/strong\u003e, etc.\u003c/p\u003e\n\n\u003cp\u003eWith our toy proxiers, applications (whether it’s a host app, or an app\nrunning inside a VM/container) on a non-k8s-node (thus not in K8S cluster) can also\naccess K8S services with \u003cstrong\u003eClusterIP\u003c/strong\u003e - note that in Kubernetes’s design,\n\u003cmark\u003eClusterIP is only accessible within K8S cluster nodes\u003c/mark\u003e.\n(In some sense, our toy proxier turns non-k8s-nodes into K8S nodes.)\u003c/p\u003e\n\n\u003cp\u003e\u003cstrong\u003eCode and scripts used in this post\u003c/strong\u003e: \u003ca href=\"https://github.com/ArthurChiao/arthurchiao.github.io/tree/master/assets/code/cracking-k8s-node-proxy\"\u003eGithub\u003c/a\u003e.\u003c/p\u003e\n\n\u003cp\u003e\u003ca name=\"ch_1\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003ch1 id=\"1-background-knowledge\"\u003e1. Background knowledge\u003c/h1\u003e\n\n\u003cp\u003eCertain background knowledge is needed to understand traffic interception and proxy in Linux kernel.\u003c/p\u003e\n\n\u003ch2 id=\"11-netfilter\"\u003e1.1 Netfilter\u003c/h2\u003e\n\n\u003cp\u003eNetfilter is a \u003cstrong\u003epacket filtering and processing framework\u003c/strong\u003e inside Linux\nkernel. Refer to \u003ca href=\"https://www.digitalocean.com/community/tutorials/a-deep-dive-into-iptables-and-netfilter-architecture\"\u003eA Deep Dive into Iptables and Netfilter Architecture\u003c/a\u003e if you are not familar with it.\u003c/p\u003e\n\n\u003cp\u003eSome key points:\u003c/p\u003e\n\n\u003cul\u003e\n  \u003cli\u003eAll host traffic goes through netfilter framework.\u003c/li\u003e\n  \u003cli\u003eNetfilter ships with \u003cstrong\u003e5 hooking points\u003c/strong\u003e: \u003ccode class=\"language-plaintext highlighter-rouge\"\u003ePRE_ROUTING\u003c/code\u003e、\u003ccode class=\"language-plaintext highlighter-rouge\"\u003eINPUT\u003c/code\u003e、\u003ccode class=\"language-plaintext highlighter-rouge\"\u003eFORWARD\u003c/code\u003e、\u003ccode class=\"language-plaintext highlighter-rouge\"\u003eOUTPUT\u003c/code\u003e、\u003ccode class=\"language-plaintext highlighter-rouge\"\u003ePOST_ROUTING\u003c/code\u003e.\u003c/li\u003e\n  \u003cli\u003eCommand line tool \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eiptables\u003c/code\u003e can be used to \u003cstrong\u003edynamically insert filtering rules into hooking points\u003c/strong\u003e.\u003c/li\u003e\n  \u003cli\u003eOne can \u003cstrong\u003emanipulate packets\u003c/strong\u003e (accept/redirect/drop/modify, etc) by combining various \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eiptables\u003c/code\u003e rules.\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp align=\"center\"\u003e\u003cimg src=\"/assets/img/cracking-k8s-node-proxy/hooks.png\" width=\"50%\" height=\"50%\"/\u003e\u003c/p\u003e\n\u003cp align=\"center\"\u003e Fig. Five hooking points in the netfilter framework\u003c/p\u003e\n\n\u003cp\u003eThese hooking points also work collaborativelly with other kernel\nnetworking facilities, e.g. kernel routing subsystem.\u003c/p\u003e\n\n\u003cp\u003eIn each hooking point, \u003cmark\u003erules are organized into different chains\u003c/mark\u003e, each\nwith pre-defined priority. \u003cmark\u003eTo manage chains by their purposes\u003c/mark\u003e, chains are\nfurther \u003cmark\u003eorganized into tables\u003c/mark\u003e. There are 5 tables now:\u003c/p\u003e\n\n\u003cul\u003e\n  \u003cli\u003e\u003ccode class=\"language-plaintext highlighter-rouge\"\u003efilter\u003c/code\u003e: common filtering, e.g. accept, reject/drop, jump.\u003c/li\u003e\n  \u003cli\u003e\u003ccode class=\"language-plaintext highlighter-rouge\"\u003enat\u003c/code\u003e: network address translation, including SNAT (source NAT) and DNAT (destination NAT).\u003c/li\u003e\n  \u003cli\u003e\u003ccode class=\"language-plaintext highlighter-rouge\"\u003emangle\u003c/code\u003e: modify packet attributes, e.g. TTL.\u003c/li\u003e\n  \u003cli\u003e\u003ccode class=\"language-plaintext highlighter-rouge\"\u003eraw\u003c/code\u003e: earliest processing point, special processing before kernel connection tracking\n(\u003ccode class=\"language-plaintext highlighter-rouge\"\u003econntrack\u003c/code\u003e or \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eCT\u003c/code\u003e, also included in the below figure, but this is NOT a chain).\u003c/li\u003e\n  \u003cli\u003e\u003ccode class=\"language-plaintext highlighter-rouge\"\u003esecurity\u003c/code\u003e: not covered in this post.\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003e\u003cmark\u003eWith tables/chains depicted\u003c/mark\u003e, we get a more fine-grained view:\u003c/p\u003e\n\n\u003cp align=\"center\"\u003e\u003cimg src=\"/assets/img/cracking-k8s-node-proxy/hooks-and-tables.png\" width=\"80%\" height=\"80%\"/\u003e\u003c/p\u003e\n\u003cp align=\"center\"\u003e Fig. iptables table/chains inside hook points\u003c/p\u003e\n\n\u003ch2 id=\"12-ebpf\"\u003e1.2 eBPF\u003c/h2\u003e\n\n\u003cp\u003eeBPF is another traffic hooking/filtering framework inside Linux kernel.\nIt is more powerful than Netfilter, and is likely to replace the former in the (long long) future.\u003c/p\u003e\n\n\u003cp\u003eRefer to \u003ca href=\"https://www.infoq.com/presentations/linux-cilium-ebpf\"\u003eHow to Make Linux Microservice-Aware with Cilium and eBPF\u003c/a\u003e\nfor an introduction.\u003c/p\u003e\n\n\u003ch2 id=\"13-vip-and-load-balancing-lb\"\u003e1.3 VIP and load balancing (LB)\u003c/h2\u003e\n\n\u003cp\u003eVirtual IP (IP) hides all backend IPs to a client, decouples the client\nfrom backend instances. In this way, \u003cmark\u003ebackend activities, such as scaling\nup/down, pulling in/out, will totally be transparent to clients\u003c/mark\u003e.\u003c/p\u003e\n\n\u003cp\u003eVIP always comes with load balancing as it’s responsible for distributing\ntraffic among different backends:\u003c/p\u003e\n\n\u003cp align=\"center\"\u003e\u003cimg src=\"/assets/img/cracking-k8s-node-proxy/vip-and-lb.png\" width=\"40%\" height=\"40%\"/\u003e\u003c/p\u003e\n\u003cp align=\"center\"\u003e Fig. VIP and load balancing\u003c/p\u003e\n\n\u003ch2 id=\"14-cross-host-networking-model\"\u003e1.4 Cross-host networking model\u003c/h2\u003e\n\n\u003cp\u003eHow would an instance (container, VM, etc) on host A communicate with another\ninstance on host B? Solution candidates:\u003c/p\u003e\n\n\u003cul\u003e\n  \u003cli\u003eDirect routing: BGP, etc\u003c/li\u003e\n  \u003cli\u003eTunneling: VxLAN, IPIP, GRE, etc\u003c/li\u003e\n  \u003cli\u003eNAT: e.g. docker’s bridge network mode\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003e\u003ca name=\"ch_2\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003ch1 id=\"2-kubernetes-node-proxy-model\"\u003e2. Kubernetes node proxy model\u003c/h1\u003e\n\n\u003cp\u003eIn Kubernetes, you can define an application to be a \u003ca href=\"https://kubernetes.io/docs/concepts/services-networking/service/\"\u003eService\u003c/a\u003e.\nA Service is \u003cmark\u003ean abstraction\u003c/mark\u003e which defines \u003cmark\u003ea logical set of Pods\u003c/mark\u003e\nand a policy by which to access them.\u003c/p\u003e\n\n\u003ch2 id=\"21-service-types\"\u003e2.1 Service types\u003c/h2\u003e\n\n\u003cp\u003eThere are 4 types of \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eService\u003c/code\u003es in K8S:\u003c/p\u003e\n\n\u003col\u003e\n  \u003cli\u003eClusterIP: access a \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eService\u003c/code\u003e via a VIP, but this VIP \u003cstrong\u003ecould only be accessed within this cluster\u003c/strong\u003e.\u003c/li\u003e\n  \u003cli\u003eNodePort: access a \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eService\u003c/code\u003e via \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eNodeIP:NodePort\u003c/code\u003e, this means the port will be reserved on all nodes inside the cluster.\u003c/li\u003e\n  \u003cli\u003eExternalIP: same as ClusterIP, but this VIP is \u003cstrong\u003eaccessible from outside of\nthis cluster\u003c/strong\u003e. externalIPs are provided by cloud vendors, thus are out of\nKubernetes’s control (\u003cmark\u003euntrusted model\u003c/mark\u003e).\u003c/li\u003e\n  \u003cli\u003eLoadBalancer: works much the same as ExternalIP service, but the externalIPs\nare within Kubernetes’s control (\u003cmark\u003etrusted model\u003c/mark\u003e).\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003cp\u003e\u003cstrong\u003eThis post will focus on \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eClusterIP\u003c/code\u003e\u003c/strong\u003e, but other 3 types are much similar in the\nunderlying implementation in terms of traffic interception and forwarding.\u003c/p\u003e\n\n\u003ch2 id=\"22-serviceproxy-model\"\u003e2.2 Service/proxy model\u003c/h2\u003e\n\n\u003cul\u003e\n  \u003cli\u003eAn application can be declared as a Service.\u003c/li\u003e\n  \u003cli\u003eA Service has a VIP (ClusterIP in this post) and multiple endpoints (backend pods).\u003c/li\u003e\n  \u003cli\u003eEach pod can access an application directly by its VIP.\u003c/li\u003e\n  \u003cli\u003eThe node itself can access an application directly by its VIP.\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eTo make this possible, \u003cmark\u003ea proxier is needed to run on each node\u003c/mark\u003e.\nwhich is able to \u003cstrong\u003etransparently intercept traffic\u003c/strong\u003e destinated for any \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eClusterIP:Port\u003c/code\u003e [NOTE 1],\nthen \u003cstrong\u003eredistributes it to backend pods\u003c/strong\u003e.\u003c/p\u003e\n\n\u003cp align=\"center\"\u003e\u003cimg src=\"/assets/img/cracking-k8s-node-proxy/k8s-proxier-model.png\" width=\"95%\" height=\"95%\"/\u003e\u003c/p\u003e\n\u003cp align=\"center\"\u003e Fig. Kubernetes proxier model\u003c/p\u003e\n\n\u003cblockquote\u003e\n  \u003cp\u003eNOTE 1\u003c/p\u003e\n\n  \u003cp\u003eA common misunderstaning on ClusterIP is that \u003cstrong\u003eClusterIPs are ping-able\u003c/strong\u003e - they\nare not by definition. If you ping a ClusterIP, most likely it will fail.\u003c/p\u003e\n\n  \u003cp\u003eBy definition, a \u003cstrong\u003e\u003ccode class=\"language-plaintext highlighter-rouge\"\u003e\u0026lt;Protocol,ClusterIP,Port\u0026gt;\u003c/code\u003e\u003c/strong\u003e tuple uniquelly defines\na Service (and thus an interception rule). For example, if a Service is\ndefined as \u003ccode class=\"language-plaintext highlighter-rouge\"\u003e\u0026lt;tcp,10.7.0.100,80\u0026gt;\u003c/code\u003e, then the node proxy is only responsible for handling traffic of\n\u003ccode class=\"language-plaintext highlighter-rouge\"\u003etcp:10.7.0.100:80\u003c/code\u003e, other traffics, eg. \u003ccode class=\"language-plaintext highlighter-rouge\"\u003etcp:10.7.0.100:8080\u003c/code\u003e,\n\u003ccode class=\"language-plaintext highlighter-rouge\"\u003eudp:10.7.0.100:80\u003c/code\u003e are out of its duties. Thus the ClusterIP would not be\nreachable (ping traffic is ICMP).\u003c/p\u003e\n\n  \u003cp\u003eBut if you are using kube-proxy with IPVS mode, the ClusterIP is indeed\nreachable via ping. This is because the IPVS mode implementation does more\nthan what is asked. You will see the differences in the following sections.\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003ch2 id=\"23-role-of-the-node-proxy-reverse-proxy\"\u003e2.3 Role of the node proxy: reverse proxy\u003c/h2\u003e\n\n\u003cp\u003eThink about the role of the node proxy: it actually acts as a \u003cstrong\u003ereverse proxy\u003c/strong\u003e\nin the K8S network model. That is, on each node, it will:\u003c/p\u003e\n\n\u003col\u003e\n  \u003cli\u003eHide all backend Pods to all clients\u003c/li\u003e\n  \u003cli\u003eFilter all egress traffic (requests to backends)\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003cp\u003eFor ingress traffic, it does nothing.\u003c/p\u003e\n\n\u003ch2 id=\"24-performance-issues\"\u003e2.4 Performance issues\u003c/h2\u003e\n\n\u003cp\u003eSuppose we have an application on a host, and there are 1K Services\nin the K8S cluster, then \u003cmark\u003ewe could never guess which Service the app is\ngoing to access in the next moment\u003c/mark\u003e (ignore network policy here).\u003c/p\u003e\n\n\u003cp\u003eThe result is: \u003cmark\u003ewe have to make all Services be accessible to the app\u003c/mark\u003e,\nand this requires us to apply all the proxy rules for all the Services in the\ncluster to the node. Expand this idea to the entire cluster, we conclude:\u003c/p\u003e\n\n\u003cp\u003e\u003cmark\u003eProxy rules for all Services in the cluster should be applied to all nodes.\u003c/mark\u003e\u003c/p\u003e\n\n\u003cp\u003eIn some sense, this is a fully distributed proxy model, as any node has all\nthe rules of all the Services in the cluster.\u003c/p\u003e\n\n\u003cp\u003eThis leads to severe performance issues when the cluster grows large, as there\ncan be hundreds of thousands of rules on each node [6,7].\u003c/p\u003e\n\n\u003cp\u003e\u003ca name=\"ch_3\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003ch1 id=\"3-test-environment\"\u003e3. Test environment\u003c/h1\u003e\n\n\u003ch2 id=\"31-cluster-topology-and-test-environment\"\u003e3.1 Cluster topology and test environment\u003c/h2\u003e\n\n\u003cp\u003eWe will use following environment for developing and testing our toy proxies:\u003c/p\u003e\n\n\u003cul\u003e\n  \u003cli\u003eA K8S cluster\n    \u003cul\u003e\n      \u003cli\u003eone master node\u003c/li\u003e\n      \u003cli\u003eone worker node\u003c/li\u003e\n      \u003cli\u003enetwork solution: direct routing (PodIP directly routable)\u003c/li\u003e\n    \u003c/ul\u003e\n  \u003c/li\u003e\n  \u003cli\u003eA non-k8s-node, but it can reach the worker node and Pod (thanks to the direct\nrouting networking scheme)\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp align=\"center\"\u003e\u003cimg src=\"/assets/img/cracking-k8s-node-proxy/test-env.png\" width=\"70%\" height=\"70%\"/\u003e\u003c/p\u003e\n\n\u003cp\u003eWe will deploy Pods on the worker node, and access the applications in the Pods\nvia ClusterIP from test node.\u003c/p\u003e\n\n\u003ch2 id=\"32-create-a-service\"\u003e3.2 Create a Service\u003c/h2\u003e\n\n\u003cp\u003eCreate a simple \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eStatefulset\u003c/code\u003e, which includes a \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eService\u003c/code\u003e, and the \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eService\u003c/code\u003e\nwill have one or more backend Pods:\u003c/p\u003e\n\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"c\"\u003e# See appendix for webapp.yaml\u003c/span\u003e\n\u003cspan class=\"nv\"\u003e$ \u003c/span\u003ekubectl create \u003cspan class=\"nt\"\u003e-f\u003c/span\u003e webapp.yaml\n\n\u003cspan class=\"nv\"\u003e$ \u003c/span\u003ekubectl get svc \u003cspan class=\"nt\"\u003e-o\u003c/span\u003e wide webapp\nNAME     TYPE        CLUSTER-IP     EXTERNAL-IP   PORT\u003cspan class=\"o\"\u003e(\u003c/span\u003eS\u003cspan class=\"o\"\u003e)\u003c/span\u003e   AGE     SELECTOR\nwebapp   ClusterIP   10.7.111.132   \u0026lt;none\u0026gt;        80/TCP    2m11s   \u003cspan class=\"nv\"\u003eapp\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003ewebapp\n\n\u003cspan class=\"nv\"\u003e$ \u003c/span\u003ekubectl get pod \u003cspan class=\"nt\"\u003e-o\u003c/span\u003e wide | \u003cspan class=\"nb\"\u003egrep \u003c/span\u003ewebapp\nwebapp-0    2/2     Running   0    2m12s 10.5.41.204    node1    \u0026lt;none\u0026gt;  \u0026lt;none\u0026gt;\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003eThe application runs at port \u003ccode class=\"language-plaintext highlighter-rouge\"\u003e80\u003c/code\u003e with \u003ccode class=\"language-plaintext highlighter-rouge\"\u003etcp\u003c/code\u003e protocol.\u003c/p\u003e\n\n\u003ch2 id=\"33-reachability-test\"\u003e3.3 Reachability test\u003c/h2\u003e\n\n\u003cp\u003eFirst curl PodIP+Port:\u003c/p\u003e\n\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003e$ \u003c/span\u003ecurl 10.5.41.204:80\n\u0026lt;\u003cspan class=\"o\"\u003e!\u003c/span\u003eDOCTYPE html\u0026gt;\n...\n\u0026lt;/html\u0026gt;\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003eSuccessful! Then replace PodIP with ClusterIP and have another try:\u003c/p\u003e\n\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003e$ \u003c/span\u003ecurl 10.7.111.132:80\n^C\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003eAs expected, it is unreachable!\u003c/p\u003e\n\n\u003cp\u003eIn the next sections, we will investigate how to make the ClusterIP reachable\nwith different means.\u003c/p\u003e\n\n\u003cp\u003e\u003ca name=\"ch_4\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003ch1 id=\"4-implementation-1-proxy-via-userspace-socket\"\u003e4. Implementation 1: proxy via userspace socket\u003c/h1\u003e\n\n\u003ch2 id=\"41-the-middleman-model\"\u003e4.1 The middleman model\u003c/h2\u003e\n\n\u003cp\u003eThe easiest realization of the node proxy model is: inserting our \u003ccode class=\"language-plaintext highlighter-rouge\"\u003etoy-proxy\u003c/code\u003e\nas \u003cstrong\u003ea middleman in the traffic path on this host\u003c/strong\u003e. For each\nconnection from a local client to a ClusterIP:Port, we \u003cstrong\u003eintercept the connection\nand split it into two separate connections\u003c/strong\u003e:\u003c/p\u003e\n\n\u003cul\u003e\n  \u003cli\u003econnection 1: local client \u003ccode class=\"language-plaintext highlighter-rouge\"\u003e\u0026lt;---\u0026gt;\u003c/code\u003e \u003ccode class=\"language-plaintext highlighter-rouge\"\u003etoy-proxy\u003c/code\u003e\u003c/li\u003e\n  \u003cli\u003econnection 2: \u003ccode class=\"language-plaintext highlighter-rouge\"\u003etoy-proxy\u003c/code\u003e \u003ccode class=\"language-plaintext highlighter-rouge\"\u003e\u0026lt;---\u0026gt;\u003c/code\u003e backend pods\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eThe easiest way to achieve this is to \u003cstrong\u003eimplement it in userspace\u003c/strong\u003e:\u003c/p\u003e\n\n\u003col\u003e\n  \u003cli\u003e\u003cstrong\u003eListen to resources\u003c/strong\u003e: start a daemon process, listen to K8S apiserver, watch Service (ClusterIP) and Endpoint (Pod) changes\u003c/li\u003e\n  \u003cli\u003e\u003cstrong\u003eProxy traffic\u003c/strong\u003e: for each connecting request from a local client to a Service (ClusterIP), intercepting the request by acting as a middleman\u003c/li\u003e\n  \u003cli\u003e\u003cstrong\u003eDynamically apply proxy rules\u003c/strong\u003e: for any Service/Endpoint updates, change \u003ccode class=\"language-plaintext highlighter-rouge\"\u003etoy-proxy\u003c/code\u003e connection settings accordingly\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003cp\u003eFor our above test application \u003ccode class=\"language-plaintext highlighter-rouge\"\u003ewebapp\u003c/code\u003e, following picture depicts the data flow:\u003c/p\u003e\n\n\u003cp align=\"center\"\u003e\u003cimg src=\"/assets/img/cracking-k8s-node-proxy/userspace-proxier.png\" width=\"50%\" height=\"50%\"/\u003e\u003c/p\u003e\n\n\u003ch2 id=\"42-implementation\"\u003e4.2 Implementation\u003c/h2\u003e\n\n\u003cp\u003eLet’s see a proof-of-concept implementation for the above picture.\u003c/p\u003e\n\n\u003ch3 id=\"421-code\"\u003e4.2.1 Code\u003c/h3\u003e\n\n\u003cp\u003eOmit error handling code for ease-of-reading:\u003c/p\u003e\n\n\u003cdiv class=\"language-go highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003efunc\u003c/span\u003e \u003cspan class=\"n\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\t\u003cspan class=\"n\"\u003eclusterIP\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;10.7.111.132\u0026#34;\u003c/span\u003e\n\t\u003cspan class=\"n\"\u003epodIP\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;10.5.41.204\u0026#34;\u003c/span\u003e\n\t\u003cspan class=\"n\"\u003eport\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"m\"\u003e80\u003c/span\u003e\n\t\u003cspan class=\"n\"\u003eproto\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;tcp\u0026#34;\u003c/span\u003e\n\n\t\u003cspan class=\"n\"\u003eaddRedirectRules\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eclusterIP\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eport\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eproto\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\t\u003cspan class=\"n\"\u003ecreateProxy\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003epodIP\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eport\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eproto\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003efunc\u003c/span\u003e \u003cspan class=\"n\"\u003eaddRedirectRules\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eclusterIP\u003c/span\u003e \u003cspan class=\"kt\"\u003estring\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eport\u003c/span\u003e \u003cspan class=\"kt\"\u003eint\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eproto\u003c/span\u003e \u003cspan class=\"kt\"\u003estring\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"kt\"\u003eerror\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\t\u003cspan class=\"n\"\u003ep\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"n\"\u003estrconv\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eItoa\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eport\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\t\u003cspan class=\"n\"\u003ecmd\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"n\"\u003eexec\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eCommand\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;iptables\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;-t\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;nat\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;-A\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;OUTPUT\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;-p\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;tcp\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\t\t\u003cspan class=\"s\"\u003e\u0026#34;-d\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eclusterIP\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;--dport\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003ep\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;-j\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;REDIRECT\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;--to-port\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003ep\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\t\u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003ecmd\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eRun\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003efunc\u003c/span\u003e \u003cspan class=\"n\"\u003ecreateProxy\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003epodIP\u003c/span\u003e \u003cspan class=\"kt\"\u003estring\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eport\u003c/span\u003e \u003cspan class=\"kt\"\u003eint\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eproto\u003c/span\u003e \u003cspan class=\"kt\"\u003estring\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\t\u003cspan class=\"n\"\u003ehost\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;\u0026#34;\u003c/span\u003e\n\t\u003cspan class=\"n\"\u003elistener\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"n\"\u003enet\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eListen\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eproto\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003enet\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eJoinHostPort\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ehost\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003estrconv\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eItoa\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eport\u003c/span\u003e\u003cspan class=\"p\"\u003e)))\u003c/span\u003e\n\n\t\u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\t\t\u003cspan class=\"n\"\u003einConn\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"n\"\u003elistener\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eAccept\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\t\t\u003cspan class=\"n\"\u003eoutConn\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"n\"\u003enet\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eDial\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eproto\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003enet\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eJoinHostPort\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003epodIP\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003estrconv\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eItoa\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eport\u003c/span\u003e\u003cspan class=\"p\"\u003e)))\u003c/span\u003e\n\n\t\t\u003cspan class=\"k\"\u003ego\u003c/span\u003e \u003cspan class=\"k\"\u003efunc\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ein\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eout\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003enet\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eTCPConn\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\t\t\t\u003cspan class=\"k\"\u003evar\u003c/span\u003e \u003cspan class=\"n\"\u003ewg\u003c/span\u003e \u003cspan class=\"n\"\u003esync\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eWaitGroup\u003c/span\u003e\n\t\t\t\u003cspan class=\"n\"\u003ewg\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eAdd\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"m\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\t\t\t\u003cspan class=\"n\"\u003efmt\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ePrintf\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;Proxying %v \u0026lt;-\u0026gt; %v \u0026lt;-\u0026gt; %v \u0026lt;-\u0026gt; %v\u003c/span\u003e\u003cspan class=\"se\"\u003e\\n\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\t\t\t\t\u003cspan class=\"n\"\u003ein\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eRemoteAddr\u003c/span\u003e\u003cspan class=\"p\"\u003e(),\u003c/span\u003e \u003cspan class=\"n\"\u003ein\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eLocalAddr\u003c/span\u003e\u003cspan class=\"p\"\u003e(),\u003c/span\u003e \u003cspan class=\"n\"\u003eout\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eLocalAddr\u003c/span\u003e\u003cspan class=\"p\"\u003e(),\u003c/span\u003e \u003cspan class=\"n\"\u003eout\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eRemoteAddr\u003c/span\u003e\u003cspan class=\"p\"\u003e())\u003c/span\u003e\n\t\t\t\u003cspan class=\"k\"\u003ego\u003c/span\u003e \u003cspan class=\"n\"\u003ecopyBytes\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ein\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eout\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e\u003cspan class=\"n\"\u003ewg\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\t\t\t\u003cspan class=\"k\"\u003ego\u003c/span\u003e \u003cspan class=\"n\"\u003ecopyBytes\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eout\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003ein\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e\u003cspan class=\"n\"\u003ewg\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\t\t\t\u003cspan class=\"n\"\u003ewg\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eWait\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\t\t\u003cspan class=\"p\"\u003e}(\u003c/span\u003e\u003cspan class=\"n\"\u003einConn\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003enet\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eTCPConn\u003c/span\u003e\u003cspan class=\"p\"\u003e),\u003c/span\u003e \u003cspan class=\"n\"\u003eoutConn\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003enet\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eTCPConn\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e\n\t\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\t\u003cspan class=\"n\"\u003elistener\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eClose\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003efunc\u003c/span\u003e \u003cspan class=\"n\"\u003ecopyBytes\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003edst\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003esrc\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003enet\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eTCPConn\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003ewg\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003esync\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eWaitGroup\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\t\u003cspan class=\"k\"\u003edefer\u003c/span\u003e \u003cspan class=\"n\"\u003ewg\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eDone\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\t\u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"n\"\u003e_\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"n\"\u003eio\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eCopy\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003edst\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003esrc\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e \u003cspan class=\"n\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"no\"\u003enil\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\t\t\u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"o\"\u003e!\u003c/span\u003e\u003cspan class=\"n\"\u003estrings\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eHasSuffix\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eerr\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eError\u003c/span\u003e\u003cspan class=\"p\"\u003e(),\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;use of closed network connection\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\t\t\t\u003cspan class=\"n\"\u003efmt\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ePrintf\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;io.Copy error: %v\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eerr\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\t\t\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\t\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\t\u003cspan class=\"n\"\u003edst\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eClose\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\t\u003cspan class=\"n\"\u003esrc\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eClose\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003ch3 id=\"422-some-explanations\"\u003e4.2.2 Some explanations\u003c/h3\u003e\n\n\u003ch4 id=\"1-traffic-interception\"\u003e1. Traffic interception\u003c/h4\u003e\n\n\u003cp\u003eWe need to intercept all traffic destinated for \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eClusterIP:Port\u003c/code\u003e, but one question is:\n\u003ccode class=\"language-plaintext highlighter-rouge\"\u003eClusterIP\u003c/code\u003e \u003cmark\u003edidn\u0026#39;t reside on on any network device of this node\u003c/mark\u003e,\nwhich means we could not do something like \u003ccode class=\"language-plaintext highlighter-rouge\"\u003elisten(ClusterIP, Port)\u003c/code\u003e.\u003c/p\u003e\n\n\u003cp\u003eThen, \u003cstrong\u003ehow could we perform the interception\u003c/strong\u003e? The\nanswer is: \u003cstrong\u003eusing the \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eREDIRECT\u003c/code\u003e ability\u003c/strong\u003e provided by iptables/netfilter.\u003c/p\u003e\n\n\u003cp\u003eThe following command will \u003cmark\u003edirect all traffic that originally destinated\nfor \u003ccode\u003eClusterIP:Port\u003c/code\u003e to \u003ccode\u003elocalhost:Port\u003c/code\u003e \u003c/mark\u003e:\u003c/p\u003e\n\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003e$ \u003c/span\u003e\u003cspan class=\"nb\"\u003esudo \u003c/span\u003eiptables \u003cspan class=\"nt\"\u003e-t\u003c/span\u003e nat \u003cspan class=\"nt\"\u003e-A\u003c/span\u003e OUTPUT \u003cspan class=\"nt\"\u003e-p\u003c/span\u003e tcp \u003cspan class=\"nt\"\u003e-d\u003c/span\u003e \u003cspan class=\"nv\"\u003e$CLUSTER_IP\u003c/span\u003e \u003cspan class=\"nt\"\u003e--dport\u003c/span\u003e \u003cspan class=\"nv\"\u003e$PORT\u003c/span\u003e \u003cspan class=\"nt\"\u003e-j\u003c/span\u003e REDIRECT \u003cspan class=\"nt\"\u003e--to-port\u003c/span\u003e \u003cspan class=\"nv\"\u003e$PORT\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003eDon’t be afraid if you can’t understanding this at present. We will cover this\nlater.\u003c/p\u003e\n\n\u003cp\u003eVerify this by seeing the following output:\u003c/p\u003e\n\n\u003cdiv class=\"language-plaintext highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e$ iptables -t nat -L -n\n...\nChain OUTPUT (policy ACCEPT)\ntarget     prot opt source      destination\nREDIRECT   tcp  --  0.0.0.0/0   10.7.111.132         tcp dpt:80 redir ports 80\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003eIn our golang code, \u003ccode class=\"language-plaintext highlighter-rouge\"\u003efunc addRedirectRules()\u003c/code\u003e wraps the above procedure.\u003c/p\u003e\n\n\u003ch4 id=\"2-create-proxy\"\u003e2. Create proxy\u003c/h4\u003e\n\n\u003cp\u003e\u003ccode class=\"language-plaintext highlighter-rouge\"\u003efunc createProxy()\u003c/code\u003e creates the userspace proxy, and maintains bi-directional forwarding.\u003c/p\u003e\n\n\u003ch3 id=\"43-reachability-test\"\u003e4.3 Reachability test\u003c/h3\u003e\n\n\u003cp\u003eBuild the code and run the binary:\u003c/p\u003e\n\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003e$ \u003c/span\u003ego build toy-proxy-userspace.go\n\u003cspan class=\"nv\"\u003e$ \u003c/span\u003e\u003cspan class=\"nb\"\u003esudo\u003c/span\u003e ./toy-proxy-userspace\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003eNow test accessing:\u003c/p\u003e\n\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003e$ \u003c/span\u003ecurl \u003cspan class=\"nv\"\u003e$CLUSTER_IP\u003c/span\u003e:\u003cspan class=\"nv\"\u003e$PORT\u003c/span\u003e\n\u0026lt;\u003cspan class=\"o\"\u003e!\u003c/span\u003eDOCTYPE html\u0026gt;\n...\n\u0026lt;/html\u0026gt;\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003eSuccessful! And our proxier’s message:\u003c/p\u003e\n\n\u003cdiv class=\"language-plaintext highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e$ sudo ./toy-proxy-userspace\nCreating proxy between \u0026lt;host ip\u0026gt;:53912 \u0026lt;-\u0026gt; 127.0.0.1:80 \u0026lt;-\u0026gt; \u0026lt;host ip\u0026gt;:40194 \u0026lt;-\u0026gt; 10.5.41.204:80\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003eIt says, for original connecting attempt of \u003ccode class=\"language-plaintext highlighter-rouge\"\u003e\u0026lt;host ip\u0026gt;:53912 \u0026lt;-\u0026gt;\n10.7.111.132:80\u003c/code\u003e, we splitted it into two connections:\u003c/p\u003e\n\n\u003col\u003e\n  \u003cli\u003e\u003ccode class=\"language-plaintext highlighter-rouge\"\u003e\u0026lt;host ip\u0026gt;:53912 \u0026lt;-\u0026gt; 127.0.0.1:80\u003c/code\u003e\u003c/li\u003e\n  \u003cli\u003e\u003ccode class=\"language-plaintext highlighter-rouge\"\u003e\u0026lt;host ip\u0026gt;:40194 \u0026lt;-\u0026gt; 10.5.41.204:80\u003c/code\u003e\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003ch2 id=\"43-clean-up\"\u003e4.3 Clean up\u003c/h2\u003e\n\n\u003cp\u003eDelete iptables rule:\u003c/p\u003e\n\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003e$ \u003c/span\u003eiptables \u003cspan class=\"nt\"\u003e-t\u003c/span\u003e nat \u003cspan class=\"nt\"\u003e-L\u003c/span\u003e \u003cspan class=\"nt\"\u003e-n\u003c/span\u003e \u003cspan class=\"nt\"\u003e--line-numbers\u003c/span\u003e\n...\nChain OUTPUT \u003cspan class=\"o\"\u003e(\u003c/span\u003epolicy ACCEPT\u003cspan class=\"o\"\u003e)\u003c/span\u003e\nnum  target     prot opt \u003cspan class=\"nb\"\u003esource               \u003c/span\u003edestination\n2    REDIRECT   tcp  \u003cspan class=\"nt\"\u003e--\u003c/span\u003e  0.0.0.0/0   10.7.111.132         tcp dpt:80 redir ports 80\n\n\u003cspan class=\"c\"\u003e# iptables -t nat -D OUTPUT \u0026lt;num\u0026gt;\u003c/span\u003e\n\u003cspan class=\"nv\"\u003e$ \u003c/span\u003eiptables \u003cspan class=\"nt\"\u003e-t\u003c/span\u003e nat \u003cspan class=\"nt\"\u003e-D\u003c/span\u003e OUTPUT 2\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003eor delete (flush) all rules if you get things messy:\u003c/p\u003e\n\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003e$ \u003c/span\u003eiptables \u003cspan class=\"nt\"\u003e-t\u003c/span\u003e nat \u003cspan class=\"nt\"\u003e-F\u003c/span\u003e \u003cspan class=\"c\"\u003e# delete all rules\u003c/span\u003e\n\u003cspan class=\"nv\"\u003e$ \u003c/span\u003eiptables \u003cspan class=\"nt\"\u003e-t\u003c/span\u003e nat \u003cspan class=\"nt\"\u003e-X\u003c/span\u003e \u003cspan class=\"c\"\u003e# delete all custom chains\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003ch2 id=\"44-improvements\"\u003e4.4 Improvements\u003c/h2\u003e\n\n\u003cp\u003eIn this toy implementation, we hijacked \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eClusterIP:80\u003c/code\u003e to \u003ccode class=\"language-plaintext highlighter-rouge\"\u003elocalhost:80\u003c/code\u003e,\nbut\u003c/p\u003e\n\n\u003col\u003e\n  \u003cli\u003e\n    \u003cp\u003e\u003cmark\u003ewhat if a native application on this host also wants to use\n\u003ccode\u003elocalhost:80\u003c/code\u003e\u003c/mark\u003e?  Further, what if multiple Services were\nexposing the same port number \u003ccode class=\"language-plaintext highlighter-rouge\"\u003e80\u003c/code\u003e?\u003c/p\u003e\n\n    \u003cp\u003eApparently we need to distinguish these applications or Services. One way to fix this:\n \u003cstrong\u003efor each proxy, allocate an unused temporary port \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eTmpPort\u003c/code\u003e, hijack\n \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eClusterIP:Port\u003c/code\u003e to \u003ccode class=\"language-plaintext highlighter-rouge\"\u003elocalhost:TmpPort\u003c/code\u003e\u003c/strong\u003e, e.g. app1 using \u003ccode class=\"language-plaintext highlighter-rouge\"\u003e10001\u003c/code\u003e, app2 using\n \u003ccode class=\"language-plaintext highlighter-rouge\"\u003e10002\u003c/code\u003e.\u003c/p\u003e\n  \u003c/li\u003e\n  \u003cli\u003e\n    \u003cp\u003eThe above code only handles one backend, what if there were multiple backend\npods?\u003c/p\u003e\n\n    \u003cp\u003eWe need to distribute connections to different backend pods by load balancing algorithms.\u003c/p\u003e\n  \u003c/li\u003e\n\u003c/ol\u003e\n\n\u003cp\u003eCombining 1 \u0026amp; 2, the more general proxy should work like the following:\u003c/p\u003e\n\n\u003cp align=\"center\"\u003e\u003cimg src=\"/assets/img/cracking-k8s-node-proxy/userspace-proxier-2.png\" width=\"50%\" height=\"50%\"/\u003e\u003c/p\u003e\n\n\u003ch2 id=\"45-pros-and-cons\"\u003e4.5 Pros and Cons\u003c/h2\u003e\n\n\u003cp\u003eThis method is fairly easy for understanding and implementation, but it would\ndefinitly suffer from bad performance, as it has to \u003cstrong\u003ecopy bytes between the\ntwo side\u003c/strong\u003e, as well as \u003cstrong\u003ebetween kernel and userspace\u003c/strong\u003e.\u003c/p\u003e\n\n\u003cp\u003eWe won’t spend much time on this, see \u003cstrong\u003ethe \u003ca href=\"https://github.com/kubernetes/kubernetes/tree/master/pkg/proxy/userspace\"\u003evanilla implementation of userspace kube-proxy\u003c/a\u003e\u003c/strong\u003e\nif you are interested.\u003c/p\u003e\n\n\u003cp\u003e\u003ca name=\"ch_5\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003ch1 id=\"5-implementation-2-proxy-via-iptables\"\u003e5. Implementation 2: proxy via iptables\u003c/h1\u003e\n\n\u003cp\u003eLet’s see another way to do the proxy task.\u003c/p\u003e\n\n\u003cp\u003eThe main bottleneck of userspace proxier comes from the \u003cstrong\u003ekernel-userspace\nswitching and data copying\u003c/strong\u003e. If we can \u003cmark\u003eimplement a proxy entirely in\nkernel space\u003c/mark\u003e, it will beat the userspace one greatly. \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eiptables\u003c/code\u003e can be\nused to achieve this goal.\u003c/p\u003e\n\n\u003cp\u003eBefore we start, let’s first figure out the traffic path when we do \u003ccode class=\"language-plaintext highlighter-rouge\"\u003ecurl\nClusterIP:Port\u003c/code\u003e, then we will investigate how to make it reachable with iptables\nrules.\u003c/p\u003e\n\n\u003ch2 id=\"51-host---clusterip-single-backend\"\u003e5.1 Host -\u0026gt; ClusterIP (single backend)\u003c/h2\u003e\n\n\u003cp\u003eAs ClusterIP doesn’t reside on any network device, in order to let our packets\nfinally reach the backend Pods, we need to convert the ClusterIP to PodIP (routable), namely:\u003c/p\u003e\n\n\u003cul\u003e\n  \u003cli\u003e\u003cstrong\u003eCondition\u003c/strong\u003e: if packets has \u003ccode class=\"language-plaintext highlighter-rouge\"\u003edst=ClusterIP,proto=tcp,dport=80\u003c/code\u003e\u003c/li\u003e\n  \u003cli\u003e\u003cstrong\u003eAction\u003c/strong\u003e: replace \u003ccode class=\"language-plaintext highlighter-rouge\"\u003edst=ClusterIP\u003c/code\u003e with \u003ccode class=\"language-plaintext highlighter-rouge\"\u003edst=PodIP\u003c/code\u003e in IP header of the packets\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eIn network terminology, this is a \u003cmark\u003enetwork address translation (NAT)\u003c/mark\u003e process.\u003c/p\u003e\n\n\u003ch3 id=\"511-where-to-perform-the-dnat\"\u003e5.1.1 Where to perform the DNAT\u003c/h3\u003e\n\n\u003cp\u003eLook at the egress path of our \u003ccode class=\"language-plaintext highlighter-rouge\"\u003ecurl\u003c/code\u003e process:\u003c/p\u003e\n\n\u003cp align=\"center\"\u003e\u003cimg src=\"/assets/img/cracking-k8s-node-proxy/host-to-clusterip-dnat.png\" width=\"85%\" height=\"85%\"/\u003e\u003c/p\u003e\n\n\u003cp\u003e\u003cmark\u003e\u003ccode\u003e curl -\u0026gt; raw -\u0026gt; CT -\u0026gt; mangle -\u0026gt; dnat -\u0026gt; filter -\u0026gt; security -\u0026gt; snat -\u0026gt; ROUTING -\u0026gt; mangle -\u0026gt; snat -\u0026gt; NIC \u003c/code\u003e\u003c/mark\u003e\u003c/p\u003e\n\n\u003cp\u003ethere is \u003cstrong\u003eonly one \u003ccode class=\"language-plaintext highlighter-rouge\"\u003ednat\u003c/code\u003e (chain)\u003c/strong\u003e - which is in the \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eOUTPUT\u003c/code\u003e hook - \u003cmark\u003ewhere we could do DNAT\u003c/mark\u003e.\u003c/p\u003e\n\n\u003cp\u003eLet’s see how to realize it.\u003c/p\u003e\n\n\u003ch3 id=\"512-check-current-nat-rules\"\u003e5.1.2 Check current NAT rules\u003c/h3\u003e\n\n\u003cp\u003eNAT rules are organized into \u003ccode class=\"language-plaintext highlighter-rouge\"\u003enat\u003c/code\u003e table. Check the current rules in \u003ccode class=\"language-plaintext highlighter-rouge\"\u003enat\u003c/code\u003e table:\u003c/p\u003e\n\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"c\"\u003e# -t \u0026lt;table\u0026gt;\u003c/span\u003e\n\u003cspan class=\"c\"\u003e# -L list rules\u003c/span\u003e\n\u003cspan class=\"c\"\u003e# -n numeric output\u003c/span\u003e\n\u003cspan class=\"nv\"\u003e$ \u003c/span\u003eiptables \u003cspan class=\"nt\"\u003e-t\u003c/span\u003e nat \u003cspan class=\"nt\"\u003e-L\u003c/span\u003e \u003cspan class=\"nt\"\u003e-n\u003c/span\u003e\nChain PREROUTING \u003cspan class=\"o\"\u003e(\u003c/span\u003epolicy ACCEPT\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n\nChain INPUT \u003cspan class=\"o\"\u003e(\u003c/span\u003epolicy ACCEPT\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n\nChain OUTPUT \u003cspan class=\"o\"\u003e(\u003c/span\u003epolicy ACCEPT\u003cspan class=\"o\"\u003e)\u003c/span\u003e\nDOCKER     all  \u003cspan class=\"nt\"\u003e--\u003c/span\u003e  0.0.0.0/0    \u003cspan class=\"o\"\u003e!\u003c/span\u003e127.0.0.0/8   ADDRTYPE match dst-type LOCAL\n\nChain POSTROUTING \u003cspan class=\"o\"\u003e(\u003c/span\u003epolicy ACCEPT\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003eThe output shows that there are no rules except DOCKER related ones. Those\n\u003ccode class=\"language-plaintext highlighter-rouge\"\u003eDOCKER\u003c/code\u003e rules are inserted by \u003ccode class=\"language-plaintext highlighter-rouge\"\u003edocker\u003c/code\u003e upon installation, but they won’t affect\nour experiments in this post. So we just ignore them.\u003c/p\u003e\n\n\u003ch3 id=\"513-add-dnat-rules\"\u003e5.1.3 Add DNAT rules\u003c/h3\u003e\n\n\u003cp\u003eFor ease-of-viewing, we no longer wrap shell commands with go code,\nbut directly present the commands themselves in the next.\u003c/p\u003e\n\n\u003cblockquote\u003e\n  \u003cp\u003eNOTE: Before proceed on, make sure you have deleted all the rules that added in\nthe previous section.\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003e\u003cmark\u003eConfirm that the ClusterIP is not reachable at present\u003c/mark\u003e:\u003c/p\u003e\n\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003e$ \u003c/span\u003ecurl \u003cspan class=\"nv\"\u003e$CLUSTER_IP\u003c/span\u003e:\u003cspan class=\"nv\"\u003e$PORT\u003c/span\u003e\n^C\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e\u003cmark\u003eNow add our egress NAT rule\u003c/mark\u003e:\u003c/p\u003e\n\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003e$ \u003c/span\u003e\u003cspan class=\"nb\"\u003ecat \u003c/span\u003eENV\n\u003cspan class=\"nv\"\u003eCLUSTER_IP\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e10.7.111.132\n\u003cspan class=\"nv\"\u003ePOD_IP\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e10.5.41.204\n\u003cspan class=\"nv\"\u003ePORT\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e80\n\u003cspan class=\"nv\"\u003ePROTO\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003etcp\n\n\u003cspan class=\"c\"\u003e# -p               \u0026lt;protocol\u0026gt;\u003c/span\u003e\n\u003cspan class=\"c\"\u003e# -A               add rule\u003c/span\u003e\n\u003cspan class=\"c\"\u003e# --dport          \u0026lt;dst port\u0026gt;\u003c/span\u003e\n\u003cspan class=\"c\"\u003e# -d               \u0026lt;dst ip\u0026gt;\u003c/span\u003e\n\u003cspan class=\"c\"\u003e# -j               jump to\u003c/span\u003e\n\u003cspan class=\"c\"\u003e# --to-destination \u0026lt;ip\u0026gt;:\u0026lt;port\u0026gt;\u003c/span\u003e\n\u003cspan class=\"nv\"\u003e$ \u003c/span\u003eiptables \u003cspan class=\"nt\"\u003e-t\u003c/span\u003e nat \u003cspan class=\"nt\"\u003e-A\u003c/span\u003e OUTPUT \u003cspan class=\"nt\"\u003e-p\u003c/span\u003e \u003cspan class=\"nv\"\u003e$PROTO\u003c/span\u003e \u003cspan class=\"nt\"\u003e--dport\u003c/span\u003e \u003cspan class=\"nv\"\u003e$PORT\u003c/span\u003e \u003cspan class=\"nt\"\u003e-d\u003c/span\u003e \u003cspan class=\"nv\"\u003e$CLUSTER_IP\u003c/span\u003e \u003cspan class=\"nt\"\u003e-j\u003c/span\u003e DNAT \u003cspan class=\"nt\"\u003e--to-destination\u003c/span\u003e \u003cspan class=\"nv\"\u003e$POD_IP\u003c/span\u003e:\u003cspan class=\"nv\"\u003e$PORT\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e\u003cmark\u003eCheck the table again\u003c/mark\u003e:\u003c/p\u003e\n\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003e$ \u003c/span\u003eiptables \u003cspan class=\"nt\"\u003e-t\u003c/span\u003e nat \u003cspan class=\"nt\"\u003e-L\u003c/span\u003e \u003cspan class=\"nt\"\u003e-n\u003c/span\u003e\n\nChain OUTPUT \u003cspan class=\"o\"\u003e(\u003c/span\u003epolicy ACCEPT\u003cspan class=\"o\"\u003e)\u003c/span\u003e\ntarget     prot opt \u003cspan class=\"nb\"\u003esource      \u003c/span\u003edestination\nDNAT       tcp  \u003cspan class=\"nt\"\u003e--\u003c/span\u003e  0.0.0.0/0   10.7.111.132   tcp dpt:80 to:10.5.41.204:80\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003eAs can be seen, the rule is added.\u003c/p\u003e\n\n\u003ch3 id=\"514-test-reachability\"\u003e5.1.4 Test reachability\u003c/h3\u003e\n\n\u003cp\u003eNow curl again:\u003c/p\u003e\n\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003e$ \u003c/span\u003ecurl \u003cspan class=\"nv\"\u003e$CLUSTER_IP\u003c/span\u003e:\u003cspan class=\"nv\"\u003e$PORT\u003c/span\u003e\n\u0026lt;\u003cspan class=\"o\"\u003e!\u003c/span\u003eDOCTYPE html\u0026gt;\n...\n\u0026lt;/html\u0026gt;\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003eThat’s it, \u003cstrong\u003eDNAT successful!\u003c/strong\u003e\u003c/p\u003e\n\n\u003cp\u003eBut wait! The fact that \u003cstrong\u003eegress traffic be NATed\u003c/strong\u003e meets our expectation, but \u003cstrong\u003ewe haven’t\nadded any rules in the reverse (namely, ingress) path, how could the traffic be OK on both\ndirections?\u003c/strong\u003e It turns out that when you add a NAT rule for one direction,\nkernel would automatically add the reserve rules on the other direction! This\nworks collaboratively with the \u003ccode class=\"language-plaintext highlighter-rouge\"\u003econntrack\u003c/code\u003e (CT, connection tracking) module.\u003c/p\u003e\n\n\u003cp align=\"center\"\u003e\u003cimg src=\"/assets/img/cracking-k8s-node-proxy/host-to-clusterip-dnat-ct.png\" width=\"85%\" height=\"85%\"/\u003e\u003c/p\u003e\n\n\u003ch3 id=\"515-cleanup\"\u003e5.1.5 Cleanup\u003c/h3\u003e\n\n\u003cp\u003eDelete this rule:\u003c/p\u003e\n\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003e$ \u003c/span\u003eiptables \u003cspan class=\"nt\"\u003e-t\u003c/span\u003e nat \u003cspan class=\"nt\"\u003e-L\u003c/span\u003e \u003cspan class=\"nt\"\u003e-n\u003c/span\u003e \u003cspan class=\"nt\"\u003e--line-numbers\u003c/span\u003e\n...\nChain OUTPUT \u003cspan class=\"o\"\u003e(\u003c/span\u003epolicy ACCEPT\u003cspan class=\"o\"\u003e)\u003c/span\u003e\nnum  target     prot opt \u003cspan class=\"nb\"\u003esource               \u003c/span\u003edestination\n2    DNAT       tcp  \u003cspan class=\"nt\"\u003e--\u003c/span\u003e  0.0.0.0/0   10.7.111.132   tcp dpt:80 to:10.5.41.204:80\n\n\u003cspan class=\"c\"\u003e# iptables -t \u0026lt;table\u0026gt; -D \u0026lt;chain\u0026gt; \u0026lt;num\u0026gt;\u003c/span\u003e\n\u003cspan class=\"nv\"\u003e$ \u003c/span\u003eiptables \u003cspan class=\"nt\"\u003e-t\u003c/span\u003e nat \u003cspan class=\"nt\"\u003e-D\u003c/span\u003e OUTPUT 2\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003ch2 id=\"52-host---clusterip-multiple-backends\"\u003e5.2 Host -\u0026gt; ClusterIP (multiple backends)\u003c/h2\u003e\n\n\u003cp\u003eNow let’s see the multiple-backend case.\u003c/p\u003e\n\n\u003cblockquote\u003e\n  \u003cp\u003eNOTE: Before proceed on, make sure you have deleted all the rules you added in\nprevious section.\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003ch3 id=\"521-scale-up-webapp\"\u003e5.2.1 Scale up webapp\u003c/h3\u003e\n\n\u003cp\u003eFirst scale up our Service to 2 backend pods:\u003c/p\u003e\n\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003e$ \u003c/span\u003ekubectl scale sts webapp \u003cspan class=\"nt\"\u003e--replicas\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e2\nstatefulset.apps/webapp scaled\nstatefulset.apps/webapp scaled\n\n\u003cspan class=\"nv\"\u003e$ \u003c/span\u003ekubectl get pod \u003cspan class=\"nt\"\u003e-o\u003c/span\u003e wide | \u003cspan class=\"nb\"\u003egrep \u003c/span\u003ewebapp\nwebapp-0   2/2     Running   0   1h24m   10.5.41.204    node1    \u0026lt;none\u0026gt; \u0026lt;none\u0026gt;\nwebapp-1   2/2     Running   0   11s     10.5.41.5      node1    \u0026lt;none\u0026gt; \u0026lt;none\u0026gt;\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003ch3 id=\"522-add-dnat-rules-with-load-balancing\"\u003e5.2.2 Add DNAT rules with load balancing\u003c/h3\u003e\n\n\u003cp\u003eWe use the \u003ccode class=\"language-plaintext highlighter-rouge\"\u003estatistic\u003c/code\u003e module in iptables to \u003cmark\u003edistribute requests to\nbackend Pods with probability\u003c/mark\u003e, in this way we would achieve the load balancing\neffect:\u003c/p\u003e\n\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"c\"\u003e# -m \u0026lt;module\u0026gt;\u003c/span\u003e\n\u003cspan class=\"nv\"\u003e$ \u003c/span\u003eiptables \u003cspan class=\"nt\"\u003e-t\u003c/span\u003e nat \u003cspan class=\"nt\"\u003e-A\u003c/span\u003e OUTPUT \u003cspan class=\"nt\"\u003e-p\u003c/span\u003e \u003cspan class=\"nv\"\u003e$PROTO\u003c/span\u003e \u003cspan class=\"nt\"\u003e--dport\u003c/span\u003e \u003cspan class=\"nv\"\u003e$PORT\u003c/span\u003e \u003cspan class=\"nt\"\u003e-d\u003c/span\u003e \u003cspan class=\"nv\"\u003e$CLUSTER_IP\u003c/span\u003e \u003cspan class=\"se\"\u003e\\\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e-m\u003c/span\u003e statistic \u003cspan class=\"nt\"\u003e--mode\u003c/span\u003e random \u003cspan class=\"nt\"\u003e--probability\u003c/span\u003e 0.5  \u003cspan class=\"se\"\u003e\\\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e-j\u003c/span\u003e DNAT \u003cspan class=\"nt\"\u003e--to-destination\u003c/span\u003e \u003cspan class=\"nv\"\u003e$POD1_IP\u003c/span\u003e:\u003cspan class=\"nv\"\u003e$PORT\u003c/span\u003e\n\u003cspan class=\"nv\"\u003e$ \u003c/span\u003eiptables \u003cspan class=\"nt\"\u003e-t\u003c/span\u003e nat \u003cspan class=\"nt\"\u003e-A\u003c/span\u003e OUTPUT \u003cspan class=\"nt\"\u003e-p\u003c/span\u003e \u003cspan class=\"nv\"\u003e$PROTO\u003c/span\u003e \u003cspan class=\"nt\"\u003e--dport\u003c/span\u003e \u003cspan class=\"nv\"\u003e$PORT\u003c/span\u003e \u003cspan class=\"nt\"\u003e-d\u003c/span\u003e \u003cspan class=\"nv\"\u003e$CLUSTER_IP\u003c/span\u003e \u003cspan class=\"se\"\u003e\\\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e-m\u003c/span\u003e statistic \u003cspan class=\"nt\"\u003e--mode\u003c/span\u003e random \u003cspan class=\"nt\"\u003e--probability\u003c/span\u003e 1.0  \u003cspan class=\"se\"\u003e\\\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e-j\u003c/span\u003e DNAT \u003cspan class=\"nt\"\u003e--to-destination\u003c/span\u003e \u003cspan class=\"nv\"\u003e$POD2_IP\u003c/span\u003e:\u003cspan class=\"nv\"\u003e$PORT\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003eThe above commands distribute requests among two Pods randomly, each with \u003ccode class=\"language-plaintext highlighter-rouge\"\u003e50%\u003c/code\u003e probability.\u003c/p\u003e\n\n\u003cp\u003eNow check the rules:\u003c/p\u003e\n\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003e$ \u003c/span\u003eiptables \u003cspan class=\"nt\"\u003e-t\u003c/span\u003e nat \u003cspan class=\"nt\"\u003e-L\u003c/span\u003e \u003cspan class=\"nt\"\u003e-n\u003c/span\u003e\n...\nChain OUTPUT \u003cspan class=\"o\"\u003e(\u003c/span\u003epolicy ACCEPT\u003cspan class=\"o\"\u003e)\u003c/span\u003e\ntarget  prot opt \u003cspan class=\"nb\"\u003esource      \u003c/span\u003edestination\nDNAT    tcp  \u003cspan class=\"nt\"\u003e--\u003c/span\u003e  0.0.0.0/0   10.7.111.132  tcp dpt:80 statistic mode random probability 0.50000000000 to:10.5.41.204:80\nDNAT    tcp  \u003cspan class=\"nt\"\u003e--\u003c/span\u003e  0.0.0.0/0   10.7.111.132  tcp dpt:80 statistic mode random probability 1.00000000000 to:10.5.41.5:80\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp align=\"center\"\u003e\u003cimg src=\"/assets/img/cracking-k8s-node-proxy/host-to-clusterip-lb-ct.png\" width=\"85%\" height=\"85%\"/\u003e\u003c/p\u003e\n\n\u003ch3 id=\"523-verify-load-balancing\"\u003e5.2.3 Verify load balancing\u003c/h3\u003e\n\n\u003cp\u003eNow let’s ensure the load balancing actually works. We make 8 requests, and capture the\nreal PodIPs this host communicates with.\u003c/p\u003e\n\n\u003cp\u003eOpen a shell on test node:\u003c/p\u003e\n\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003e$ \u003c/span\u003e\u003cspan class=\"k\"\u003efor \u003c/span\u003ei \u003cspan class=\"k\"\u003ein\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e1..8\u003cspan class=\"o\"\u003e}\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"k\"\u003edo \u003c/span\u003ecurl \u003cspan class=\"nv\"\u003e$CLUSTER_IP\u003c/span\u003e:\u003cspan class=\"nv\"\u003e$PORT\u003c/span\u003e 2\u0026gt;\u0026amp;1 \u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e/dev/null\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"nb\"\u003esleep \u003c/span\u003e1\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"k\"\u003edone\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003eanother shell window on test node:\u003c/p\u003e\n\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003e$ \u003c/span\u003etcpdump \u003cspan class=\"nt\"\u003e-nn\u003c/span\u003e \u003cspan class=\"nt\"\u003e-i\u003c/span\u003e eth0 port \u003cspan class=\"nv\"\u003e$PORT\u003c/span\u003e | \u003cspan class=\"nb\"\u003egrep\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;GET /\u0026#34;\u003c/span\u003e\n10.21.0.7.48306 \u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e 10.5.41.5.80:   ... HTTP: GET / HTTP/1.1\n10.21.0.7.48308 \u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e 10.5.41.204.80: ... HTTP: GET / HTTP/1.1\n10.21.0.7.48310 \u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e 10.5.41.204.80: ... HTTP: GET / HTTP/1.1\n10.21.0.7.48312 \u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e 10.5.41.5.80:   ... HTTP: GET / HTTP/1.1\n10.21.0.7.48314 \u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e 10.5.41.5.80:   ... HTTP: GET / HTTP/1.1\n10.21.0.7.48316 \u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e 10.5.41.204.80: ... HTTP: GET / HTTP/1.1\n10.21.0.7.48318 \u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e 10.5.41.5.80:   ... HTTP: GET / HTTP/1.1\n10.21.0.7.48320 \u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e 10.5.41.204.80: ... HTTP: GET / HTTP/1.1\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e4 times with Pod1 and 4 times with Pod2, 50% with each pod, exactly what’s expected.\u003c/p\u003e\n\n\u003ch3 id=\"524-cleanup\"\u003e5.2.4 Cleanup\u003c/h3\u003e\n\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003e$ \u003c/span\u003eiptables \u003cspan class=\"nt\"\u003e-t\u003c/span\u003e nat \u003cspan class=\"nt\"\u003e-L\u003c/span\u003e \u003cspan class=\"nt\"\u003e-n\u003c/span\u003e \u003cspan class=\"nt\"\u003e--line-numbers\u003c/span\u003e\n...\nChain OUTPUT \u003cspan class=\"o\"\u003e(\u003c/span\u003epolicy ACCEPT\u003cspan class=\"o\"\u003e)\u003c/span\u003e\nnum  target     prot opt \u003cspan class=\"nb\"\u003esource               \u003c/span\u003edestination\n2    DNAT    tcp  \u003cspan class=\"nt\"\u003e--\u003c/span\u003e  0.0.0.0/0   10.7.111.132  tcp dpt:80 statistic mode random probability 0.50000000000 to:10.5.41.204:80\n3    DNAT    tcp  \u003cspan class=\"nt\"\u003e--\u003c/span\u003e  0.0.0.0/0   10.7.111.132  tcp dpt:80 statistic mode random probability 1.00000000000 to:10.5.41.5:80\n\n\u003cspan class=\"nv\"\u003e$ \u003c/span\u003eiptables \u003cspan class=\"nt\"\u003e-t\u003c/span\u003e nat \u003cspan class=\"nt\"\u003e-D\u003c/span\u003e OUTPUT 2\n\u003cspan class=\"nv\"\u003e$ \u003c/span\u003eiptables \u003cspan class=\"nt\"\u003e-t\u003c/span\u003e nat \u003cspan class=\"nt\"\u003e-D\u003c/span\u003e OUTPUT 3\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003ch2 id=\"53-pod-app-a---clusterip-app-b\"\u003e5.3 Pod (app A) -\u0026gt; ClusterIP (app B)\u003c/h2\u003e\n\n\u003cp\u003eWhat should we do in the following case: \u003cstrong\u003e\u003ccode class=\"language-plaintext highlighter-rouge\"\u003eappA\u003c/code\u003e in \u003ccode class=\"language-plaintext highlighter-rouge\"\u003epodA@hostA\u003c/code\u003e would like to\n\u003ccode class=\"language-plaintext highlighter-rouge\"\u003eclusterIpB\u003c/code\u003e\u003c/strong\u003e, where \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eclusterIpB\u003c/code\u003e’s backend pod is \u003cstrong\u003e\u003ccode class=\"language-plaintext highlighter-rouge\"\u003epodB\u003c/code\u003e\u003c/strong\u003e, and the latter \u003cstrong\u003eresides on\n\u003ccode class=\"language-plaintext highlighter-rouge\"\u003ehostB\u003c/code\u003e\u003c/strong\u003e?\u003c/p\u003e\n\n\u003cp\u003eActually this is much the same as \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eHost --\u0026gt; ClusterIP\u003c/code\u003e case, but with one more\nthing: \u003cstrong\u003eafter DNAT is performed, the source node (hostA) must send the\npacket to the destination node (hostB) on which the destination Pod\nresides\u003c/strong\u003e. Depending on the \u003cmark\u003ecross-host networking choices\u003c/mark\u003e, this varies a\nlot, that’s why so many networking solutions take place:\u003c/p\u003e\n\n\u003col\u003e\n  \u003cli\u003eDirect routing: the host just needs to send the packets out, as the \u003cstrong\u003ePodIP is routable\u003c/strong\u003e. Solutions include:\n    \u003cul\u003e\n      \u003cli\u003eCalico + bird\u003c/li\u003e\n      \u003cli\u003eCilium + kube-router (Cilium’s default solution for BGP)\u003c/li\u003e\n      \u003cli\u003eCilium + bird (actually this is just our test env networking solutions here)\u003c/li\u003e\n    \u003c/ul\u003e\n  \u003c/li\u003e\n  \u003cli\u003eTunneling: must place an agent on each host, which \u003cstrong\u003eperforms encap after DNAT, and decap before SNAT\u003c/strong\u003e. Solutions include:\n    \u003cul\u003e\n      \u003cli\u003eCalico + VxLAN mode\u003c/li\u003e\n      \u003cli\u003eFlannel + IPIP mode\u003c/li\u003e\n      \u003cli\u003eFlannel + VxLAN mode\u003c/li\u003e\n      \u003cli\u003eCilium + VxLAN mode\u003c/li\u003e\n    \u003c/ul\u003e\n  \u003c/li\u003e\n  \u003cli\u003eAWS-like ENI mode: similar as direct routing, but BGP agent is not needed.\n    \u003cul\u003e\n      \u003cli\u003eCilium + ENI mode\u003c/li\u003e\n    \u003c/ul\u003e\n  \u003c/li\u003e\n\u003c/ol\u003e\n\n\u003cp\u003eBelow shows the tunneling case:\u003c/p\u003e\n\n\u003cp align=\"center\"\u003e\u003cimg src=\"/assets/img/cracking-k8s-node-proxy/tunneling.png\" width=\"85%\" height=\"85%\"/\u003e\u003c/p\u003e\n\n\u003cp\u003eThe tunneling related responsibilities of the agent including:\u003c/p\u003e\n\n\u003col\u003e\n  \u003cli\u003e\u003cstrong\u003eSync tunnel information between all nodes\u003c/strong\u003e, e.g. info describing which instance is on which node.\u003c/li\u003e\n  \u003cli\u003e\u003cstrong\u003ePerform encapsulation after DNAT for pod traffic\u003c/strong\u003e: for all egress traffic,\ne.g. from \u003ccode class=\"language-plaintext highlighter-rouge\"\u003ehostA\u003c/code\u003e with \u003ccode class=\"language-plaintext highlighter-rouge\"\u003edst=PodIP\u003c/code\u003e, where \u003ccode class=\"language-plaintext highlighter-rouge\"\u003ePodIP\u003c/code\u003e is on \u003ccode class=\"language-plaintext highlighter-rouge\"\u003ehostB\u003c/code\u003e,\nencapsulate packets by add another header, e.g. VxLAN header, where the\nencapsulation header has \u003ccode class=\"language-plaintext highlighter-rouge\"\u003esrc=hostA_IP,dst=hostB_IP\u003c/code\u003e.\u003c/li\u003e\n  \u003cli\u003e\u003cstrong\u003ePerform decapsulation before SNAT for pod traffic\u003c/strong\u003e: decapsulate each\ningress encasulated packet: remove outer layer (e.g. VxLAN header).\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003cp\u003eAlso, the host needs to decide:\u003c/p\u003e\n\n\u003col\u003e\n  \u003cli\u003eWhich packets should go to decapsulator (pod traffic), which shouldn’t (e.g. host traffic)\u003c/li\u003e\n  \u003cli\u003eWhich packets should go to encapsulator (pod traffic), which shouldn’t (e.g. host traffic)\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003ch2 id=\"54-re-structure-the-iptables-rules\"\u003e5.4 Re-structure the iptables rules\u003c/h2\u003e\n\n\u003cblockquote\u003e\n  \u003cp\u003eNOTE: Before proceed on, make sure you have deleted all the rules you added in\nprevious section.\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eWhen you have plentiful Services, the iptables rules on each node will be fairly\ncomplicated, thus you need some structural work to organize those rules.\u003c/p\u003e\n\n\u003cp\u003eIn this section, we will create several dedicated iptables \u003ccode class=\"language-plaintext highlighter-rouge\"\u003echain\u003c/code\u003es in \u003ccode class=\"language-plaintext highlighter-rouge\"\u003enat\u003c/code\u003e\ntable, specifically:\u003c/p\u003e\n\n\u003cul\u003e\n  \u003cli\u003echain \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eKUBE-SERVICES\u003c/code\u003e: intercept all egress traffic in \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eOUTPUT\u003c/code\u003e chain of \u003ccode class=\"language-plaintext highlighter-rouge\"\u003enat\u003c/code\u003e\ntable to this chain, do DNAT if they are destinated for a ClusterIP\u003c/li\u003e\n  \u003cli\u003echain \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eKUBE-SVC-WEBAPP\u003c/code\u003e: intercept all traffic in \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eKUBE-SERVICES\u003c/code\u003e to this\nchain if \u003ccode class=\"language-plaintext highlighter-rouge\"\u003edst\u003c/code\u003e, \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eproto\u003c/code\u003e and \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eport\u003c/code\u003e match\u003c/li\u003e\n  \u003cli\u003echain \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eKUBE-SEP-WEBAPP1\u003c/code\u003e: intercept 50% of the traffic in \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eKUBE-SVC-WEBAPP\u003c/code\u003e to\nhere\u003c/li\u003e\n  \u003cli\u003echain \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eKUBE-SEP-WEBAPP2\u003c/code\u003e: intercept 50% of the traffic in \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eKUBE-SVC-WEBAPP\u003c/code\u003e to\nhere\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eThe DNAT path now will be:\u003c/p\u003e\n\n\u003cdiv class=\"language-plaintext highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003eOUTPUT -\u0026gt; KUBE-SERVICES -\u0026gt; KUBE-SVC-WEBAPP --\u0026gt; KUBE-SEP-WEBAPP1\n                                         \\\n                                          \\--\u0026gt; KUBE-SEP-WEBAPP2\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003eIf you have multiple services, the DNAT path would be like:\u003c/p\u003e\n\n\u003cdiv class=\"language-plaintext highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003eOUTPUT -\u0026gt; KUBE-SERVICES -\u0026gt; KUBE-SVC-A --\u0026gt; KUBE-SEP-A1\n                      |              \\--\u0026gt; KUBE-SEP-A2\n                      |\n                      |--\u0026gt; KUBE-SVC-B --\u0026gt; KUBE-SEP-B1\n                      |              \\--\u0026gt; KUBE-SEP-B2\n                      |\n                      |--\u0026gt; KUBE-SVC-C --\u0026gt; KUBE-SEP-C1\n                                     \\--\u0026gt; KUBE-SEP-C2\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003eiptables commands:\u003c/p\u003e\n\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003e$ \u003c/span\u003e\u003cspan class=\"nb\"\u003ecat \u003c/span\u003eadd-dnat-structured.sh\n\u003cspan class=\"nb\"\u003esource\u003c/span\u003e ../ENV\n\n\u003cspan class=\"nb\"\u003eset\u003c/span\u003e \u003cspan class=\"nt\"\u003e-x\u003c/span\u003e\n\n\u003cspan class=\"nv\"\u003eKUBE_SVCS\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;KUBE-SERVICES\u0026#34;\u003c/span\u003e        \u003cspan class=\"c\"\u003e# chain that serves as kubernetes service portal\u003c/span\u003e\n\u003cspan class=\"nv\"\u003eSVC_WEBAPP\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;KUBE-SVC-WEBAPP\u0026#34;\u003c/span\u003e     \u003cspan class=\"c\"\u003e# chain that serves as DNAT entrypoint for webapp\u003c/span\u003e\n\u003cspan class=\"nv\"\u003eWEBAPP_EP1\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;KUBE-SEP-WEBAPP1\u0026#34;\u003c/span\u003e    \u003cspan class=\"c\"\u003e# chain that performs dnat to pod1\u003c/span\u003e\n\u003cspan class=\"nv\"\u003eWEBAPP_EP2\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;KUBE-SEP-WEBAPP2\u0026#34;\u003c/span\u003e    \u003cspan class=\"c\"\u003e# chain that performs dnat to pod2\u003c/span\u003e\n\n\u003cspan class=\"c\"\u003e# OUTPUT -\u0026gt; KUBE-SERVICES\u003c/span\u003e\n\u003cspan class=\"nb\"\u003esudo \u003c/span\u003eiptables \u003cspan class=\"nt\"\u003e-t\u003c/span\u003e nat \u003cspan class=\"nt\"\u003e-N\u003c/span\u003e \u003cspan class=\"nv\"\u003e$KUBE_SVCS\u003c/span\u003e\n\u003cspan class=\"nb\"\u003esudo \u003c/span\u003eiptables \u003cspan class=\"nt\"\u003e-t\u003c/span\u003e nat \u003cspan class=\"nt\"\u003e-A\u003c/span\u003e OUTPUT \u003cspan class=\"nt\"\u003e-p\u003c/span\u003e all \u003cspan class=\"nt\"\u003e-s\u003c/span\u003e 0.0.0.0/0 \u003cspan class=\"nt\"\u003e-d\u003c/span\u003e 0.0.0.0/0 \u003cspan class=\"nt\"\u003e-j\u003c/span\u003e \u003cspan class=\"nv\"\u003e$KUBE_SVCS\u003c/span\u003e\n\n\u003cspan class=\"c\"\u003e# KUBE-SERVICES -\u0026gt; KUBE-SVC-WEBAPP\u003c/span\u003e\n\u003cspan class=\"nb\"\u003esudo \u003c/span\u003eiptables \u003cspan class=\"nt\"\u003e-t\u003c/span\u003e nat \u003cspan class=\"nt\"\u003e-N\u003c/span\u003e \u003cspan class=\"nv\"\u003e$SVC_WEBAPP\u003c/span\u003e\n\u003cspan class=\"nb\"\u003esudo \u003c/span\u003eiptables \u003cspan class=\"nt\"\u003e-t\u003c/span\u003e nat \u003cspan class=\"nt\"\u003e-A\u003c/span\u003e \u003cspan class=\"nv\"\u003e$KUBE_SVCS\u003c/span\u003e \u003cspan class=\"nt\"\u003e-p\u003c/span\u003e \u003cspan class=\"nv\"\u003e$PROTO\u003c/span\u003e \u003cspan class=\"nt\"\u003e-s\u003c/span\u003e 0.0.0.0/0 \u003cspan class=\"nt\"\u003e-d\u003c/span\u003e \u003cspan class=\"nv\"\u003e$CLUSTER_IP\u003c/span\u003e \u003cspan class=\"nt\"\u003e--dport\u003c/span\u003e \u003cspan class=\"nv\"\u003e$PORT\u003c/span\u003e \u003cspan class=\"nt\"\u003e-j\u003c/span\u003e \u003cspan class=\"nv\"\u003e$SVC_WEBAPP\u003c/span\u003e\n\n\u003cspan class=\"c\"\u003e# KUBE-SVC-WEBAPP -\u0026gt; KUBE-SEP-WEBAPP*\u003c/span\u003e\n\u003cspan class=\"nb\"\u003esudo \u003c/span\u003eiptables \u003cspan class=\"nt\"\u003e-t\u003c/span\u003e nat \u003cspan class=\"nt\"\u003e-N\u003c/span\u003e \u003cspan class=\"nv\"\u003e$WEBAPP_EP1\u003c/span\u003e\n\u003cspan class=\"nb\"\u003esudo \u003c/span\u003eiptables \u003cspan class=\"nt\"\u003e-t\u003c/span\u003e nat \u003cspan class=\"nt\"\u003e-N\u003c/span\u003e \u003cspan class=\"nv\"\u003e$WEBAPP_EP2\u003c/span\u003e\n\u003cspan class=\"nb\"\u003esudo \u003c/span\u003eiptables \u003cspan class=\"nt\"\u003e-t\u003c/span\u003e nat \u003cspan class=\"nt\"\u003e-A\u003c/span\u003e \u003cspan class=\"nv\"\u003e$WEBAPP_EP1\u003c/span\u003e \u003cspan class=\"nt\"\u003e-p\u003c/span\u003e \u003cspan class=\"nv\"\u003e$PROTO\u003c/span\u003e \u003cspan class=\"nt\"\u003e-s\u003c/span\u003e 0.0.0.0/0 \u003cspan class=\"nt\"\u003e-d\u003c/span\u003e 0.0.0.0/0 \u003cspan class=\"nt\"\u003e--dport\u003c/span\u003e \u003cspan class=\"nv\"\u003e$PORT\u003c/span\u003e \u003cspan class=\"nt\"\u003e-j\u003c/span\u003e DNAT \u003cspan class=\"nt\"\u003e--to-destination\u003c/span\u003e \u003cspan class=\"nv\"\u003e$POD1_IP\u003c/span\u003e:\u003cspan class=\"nv\"\u003e$PORT\u003c/span\u003e\n\u003cspan class=\"nb\"\u003esudo \u003c/span\u003eiptables \u003cspan class=\"nt\"\u003e-t\u003c/span\u003e nat \u003cspan class=\"nt\"\u003e-A\u003c/span\u003e \u003cspan class=\"nv\"\u003e$WEBAPP_EP2\u003c/span\u003e \u003cspan class=\"nt\"\u003e-p\u003c/span\u003e \u003cspan class=\"nv\"\u003e$PROTO\u003c/span\u003e \u003cspan class=\"nt\"\u003e-s\u003c/span\u003e 0.0.0.0/0 \u003cspan class=\"nt\"\u003e-d\u003c/span\u003e 0.0.0.0/0 \u003cspan class=\"nt\"\u003e--dport\u003c/span\u003e \u003cspan class=\"nv\"\u003e$PORT\u003c/span\u003e \u003cspan class=\"nt\"\u003e-j\u003c/span\u003e DNAT \u003cspan class=\"nt\"\u003e--to-destination\u003c/span\u003e \u003cspan class=\"nv\"\u003e$POD2_IP\u003c/span\u003e:\u003cspan class=\"nv\"\u003e$PORT\u003c/span\u003e\n\u003cspan class=\"nb\"\u003esudo \u003c/span\u003eiptables \u003cspan class=\"nt\"\u003e-t\u003c/span\u003e nat \u003cspan class=\"nt\"\u003e-A\u003c/span\u003e \u003cspan class=\"nv\"\u003e$SVC_WEBAPP\u003c/span\u003e \u003cspan class=\"nt\"\u003e-p\u003c/span\u003e \u003cspan class=\"nv\"\u003e$PROTO\u003c/span\u003e \u003cspan class=\"nt\"\u003e-s\u003c/span\u003e 0.0.0.0/0 \u003cspan class=\"nt\"\u003e-d\u003c/span\u003e 0.0.0.0/0 \u003cspan class=\"nt\"\u003e-m\u003c/span\u003e statistic \u003cspan class=\"nt\"\u003e--mode\u003c/span\u003e random \u003cspan class=\"nt\"\u003e--probability\u003c/span\u003e 0.5  \u003cspan class=\"nt\"\u003e-j\u003c/span\u003e \u003cspan class=\"nv\"\u003e$WEBAPP_EP1\u003c/span\u003e\n\u003cspan class=\"nb\"\u003esudo \u003c/span\u003eiptables \u003cspan class=\"nt\"\u003e-t\u003c/span\u003e nat \u003cspan class=\"nt\"\u003e-A\u003c/span\u003e \u003cspan class=\"nv\"\u003e$SVC_WEBAPP\u003c/span\u003e \u003cspan class=\"nt\"\u003e-p\u003c/span\u003e \u003cspan class=\"nv\"\u003e$PROTO\u003c/span\u003e \u003cspan class=\"nt\"\u003e-s\u003c/span\u003e 0.0.0.0/0 \u003cspan class=\"nt\"\u003e-d\u003c/span\u003e 0.0.0.0/0 \u003cspan class=\"nt\"\u003e-m\u003c/span\u003e statistic \u003cspan class=\"nt\"\u003e--mode\u003c/span\u003e random \u003cspan class=\"nt\"\u003e--probability\u003c/span\u003e 1.0  \u003cspan class=\"nt\"\u003e-j\u003c/span\u003e \u003cspan class=\"nv\"\u003e$WEBAPP_EP2\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003eNow test our design:\u003c/p\u003e\n\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003e$ \u003c/span\u003e./add-dnat-structured.sh\n++ \u003cspan class=\"nv\"\u003eKUBE_SVCS\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003eKUBE-SERVICES\n++ \u003cspan class=\"nv\"\u003eSVC_WEBAPP\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003eKUBE-SVC-WEBAPP\n++ \u003cspan class=\"nv\"\u003eWEBAPP_EP1\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003eKUBE-SEP-WEBAPP1\n++ \u003cspan class=\"nv\"\u003eWEBAPP_EP2\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003eKUBE-SEP-WEBAPP2\n++ \u003cspan class=\"nb\"\u003esudo \u003c/span\u003eiptables \u003cspan class=\"nt\"\u003e-t\u003c/span\u003e nat \u003cspan class=\"nt\"\u003e-N\u003c/span\u003e KUBE-SERVICES\n++ \u003cspan class=\"nb\"\u003esudo \u003c/span\u003eiptables \u003cspan class=\"nt\"\u003e-t\u003c/span\u003e nat \u003cspan class=\"nt\"\u003e-A\u003c/span\u003e OUTPUT \u003cspan class=\"nt\"\u003e-p\u003c/span\u003e all \u003cspan class=\"nt\"\u003e-s\u003c/span\u003e 0.0.0.0/0 \u003cspan class=\"nt\"\u003e-d\u003c/span\u003e 0.0.0.0/0 \u003cspan class=\"nt\"\u003e-j\u003c/span\u003e KUBE-SERVICES\n++ \u003cspan class=\"nb\"\u003esudo \u003c/span\u003eiptables \u003cspan class=\"nt\"\u003e-t\u003c/span\u003e nat \u003cspan class=\"nt\"\u003e-N\u003c/span\u003e KUBE-SVC-WEBAPP\n++ \u003cspan class=\"nb\"\u003esudo \u003c/span\u003eiptables \u003cspan class=\"nt\"\u003e-t\u003c/span\u003e nat \u003cspan class=\"nt\"\u003e-A\u003c/span\u003e KUBE-SERVICES \u003cspan class=\"nt\"\u003e-p\u003c/span\u003e tcp \u003cspan class=\"nt\"\u003e-s\u003c/span\u003e 0.0.0.0/0 \u003cspan class=\"nt\"\u003e-d\u003c/span\u003e 10.7.111.132 \u003cspan class=\"nt\"\u003e--dport\u003c/span\u003e 80 \u003cspan class=\"nt\"\u003e-j\u003c/span\u003e KUBE-SVC-WEBAPP\n++ \u003cspan class=\"nb\"\u003esudo \u003c/span\u003eiptables \u003cspan class=\"nt\"\u003e-t\u003c/span\u003e nat \u003cspan class=\"nt\"\u003e-N\u003c/span\u003e KUBE-SEP-WEBAPP1\n++ \u003cspan class=\"nb\"\u003esudo \u003c/span\u003eiptables \u003cspan class=\"nt\"\u003e-t\u003c/span\u003e nat \u003cspan class=\"nt\"\u003e-N\u003c/span\u003e KUBE-SEP-WEBAPP2\n++ \u003cspan class=\"nb\"\u003esudo \u003c/span\u003eiptables \u003cspan class=\"nt\"\u003e-t\u003c/span\u003e nat \u003cspan class=\"nt\"\u003e-A\u003c/span\u003e KUBE-SEP-WEBAPP1 \u003cspan class=\"nt\"\u003e-p\u003c/span\u003e tcp \u003cspan class=\"nt\"\u003e-s\u003c/span\u003e 0.0.0.0/0 \u003cspan class=\"nt\"\u003e-d\u003c/span\u003e 0.0.0.0/0 \u003cspan class=\"nt\"\u003e--dport\u003c/span\u003e 80 \u003cspan class=\"nt\"\u003e-j\u003c/span\u003e DNAT \u003cspan class=\"nt\"\u003e--to-destination\u003c/span\u003e 10.5.41.204:80\n++ \u003cspan class=\"nb\"\u003esudo \u003c/span\u003eiptables \u003cspan class=\"nt\"\u003e-t\u003c/span\u003e nat \u003cspan class=\"nt\"\u003e-A\u003c/span\u003e KUBE-SEP-WEBAPP2 \u003cspan class=\"nt\"\u003e-p\u003c/span\u003e tcp \u003cspan class=\"nt\"\u003e-s\u003c/span\u003e 0.0.0.0/0 \u003cspan class=\"nt\"\u003e-d\u003c/span\u003e 0.0.0.0/0 \u003cspan class=\"nt\"\u003e--dport\u003c/span\u003e 80 \u003cspan class=\"nt\"\u003e-j\u003c/span\u003e DNAT \u003cspan class=\"nt\"\u003e--to-destination\u003c/span\u003e 10.5.41.5:80\n++ \u003cspan class=\"nb\"\u003esudo \u003c/span\u003eiptables \u003cspan class=\"nt\"\u003e-t\u003c/span\u003e nat \u003cspan class=\"nt\"\u003e-A\u003c/span\u003e KUBE-SVC-WEBAPP \u003cspan class=\"nt\"\u003e-p\u003c/span\u003e tcp \u003cspan class=\"nt\"\u003e-s\u003c/span\u003e 0.0.0.0/0 \u003cspan class=\"nt\"\u003e-d\u003c/span\u003e 0.0.0.0/0 \u003cspan class=\"nt\"\u003e-m\u003c/span\u003e statistic \u003cspan class=\"nt\"\u003e--mode\u003c/span\u003e random \u003cspan class=\"nt\"\u003e--probability\u003c/span\u003e 0.5 \u003cspan class=\"nt\"\u003e-j\u003c/span\u003e KUBE-SEP-WEBAPP1\n++ \u003cspan class=\"nb\"\u003esudo \u003c/span\u003eiptables \u003cspan class=\"nt\"\u003e-t\u003c/span\u003e nat \u003cspan class=\"nt\"\u003e-A\u003c/span\u003e KUBE-SVC-WEBAPP \u003cspan class=\"nt\"\u003e-p\u003c/span\u003e tcp \u003cspan class=\"nt\"\u003e-s\u003c/span\u003e 0.0.0.0/0 \u003cspan class=\"nt\"\u003e-d\u003c/span\u003e 0.0.0.0/0 \u003cspan class=\"nt\"\u003e-m\u003c/span\u003e statistic \u003cspan class=\"nt\"\u003e--mode\u003c/span\u003e random \u003cspan class=\"nt\"\u003e--probability\u003c/span\u003e 1.0 \u003cspan class=\"nt\"\u003e-j\u003c/span\u003e KUBE-SEP-WEBAPP2\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003eCheck the rules:\u003c/p\u003e\n\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003e$ \u003c/span\u003e\u003cspan class=\"nb\"\u003esudo \u003c/span\u003eiptables \u003cspan class=\"nt\"\u003e-t\u003c/span\u003e nat \u003cspan class=\"nt\"\u003e-L\u003c/span\u003e \u003cspan class=\"nt\"\u003e-n\u003c/span\u003e\n...\nChain OUTPUT \u003cspan class=\"o\"\u003e(\u003c/span\u003epolicy ACCEPT\u003cspan class=\"o\"\u003e)\u003c/span\u003e\ntarget     prot opt \u003cspan class=\"nb\"\u003esource               \u003c/span\u003edestination\nKUBE-SERVICES  all  \u003cspan class=\"nt\"\u003e--\u003c/span\u003e  0.0.0.0/0            0.0.0.0/0\n\nChain KUBE-SEP-WEBAPP1 \u003cspan class=\"o\"\u003e(\u003c/span\u003e1 references\u003cspan class=\"o\"\u003e)\u003c/span\u003e\ntarget     prot opt \u003cspan class=\"nb\"\u003esource               \u003c/span\u003edestination\nDNAT       tcp  \u003cspan class=\"nt\"\u003e--\u003c/span\u003e  0.0.0.0/0            0.0.0.0/0            tcp dpt:80 to:10.5.41.204:80\n\nChain KUBE-SEP-WEBAPP2 \u003cspan class=\"o\"\u003e(\u003c/span\u003e1 references\u003cspan class=\"o\"\u003e)\u003c/span\u003e\ntarget     prot opt \u003cspan class=\"nb\"\u003esource               \u003c/span\u003edestination\nDNAT       tcp  \u003cspan class=\"nt\"\u003e--\u003c/span\u003e  0.0.0.0/0            0.0.0.0/0            tcp dpt:80 to:10.5.41.5:80\n\nChain KUBE-SERVICES \u003cspan class=\"o\"\u003e(\u003c/span\u003e1 references\u003cspan class=\"o\"\u003e)\u003c/span\u003e\ntarget     prot opt \u003cspan class=\"nb\"\u003esource               \u003c/span\u003edestination\nKUBE-SVC-WEBAPP  tcp  \u003cspan class=\"nt\"\u003e--\u003c/span\u003e  0.0.0.0/0            10.7.111.132         tcp dpt:80\n\nChain KUBE-SVC-WEBAPP \u003cspan class=\"o\"\u003e(\u003c/span\u003e1 references\u003cspan class=\"o\"\u003e)\u003c/span\u003e\ntarget     prot opt \u003cspan class=\"nb\"\u003esource               \u003c/span\u003edestination\nKUBE-SEP-WEBAPP1  tcp  \u003cspan class=\"nt\"\u003e--\u003c/span\u003e  0.0.0.0/0            0.0.0.0/0            statistic mode random probability 0.50000000000\nKUBE-SEP-WEBAPP2  tcp  \u003cspan class=\"nt\"\u003e--\u003c/span\u003e  0.0.0.0/0            0.0.0.0/0            statistic mode random probability 1.00000000000\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003e$ \u003c/span\u003ecurl \u003cspan class=\"nv\"\u003e$CLUSTER_IP\u003c/span\u003e:\u003cspan class=\"nv\"\u003e$PORT\u003c/span\u003e\n\u0026lt;\u003cspan class=\"o\"\u003e!\u003c/span\u003eDOCTYPE html\u0026gt;\n...\n\u0026lt;/html\u0026gt;\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003eSuccessful!\u003c/p\u003e\n\n\u003cp\u003eIf \u003cmark\u003ecomparing the above output with vanilla kube-proxy ones\u003c/mark\u003e,\nyou’ll find that they are much the same. For example, below is taken from a kube-proxy enabled node:\u003c/p\u003e\n\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003eChain OUTPUT \u003cspan class=\"o\"\u003e(\u003c/span\u003epolicy ACCEPT\u003cspan class=\"o\"\u003e)\u003c/span\u003e\ntarget         prot opt \u003cspan class=\"nb\"\u003esource               \u003c/span\u003edestination\nKUBE-SERVICES  all  \u003cspan class=\"nt\"\u003e--\u003c/span\u003e  0.0.0.0/0            0.0.0.0/0            /\u003cspan class=\"k\"\u003e*\u003c/span\u003e kubernetes service portals \u003cspan class=\"k\"\u003e*\u003c/span\u003e/\n\nChain KUBE-SERVICES \u003cspan class=\"o\"\u003e(\u003c/span\u003e2 references\u003cspan class=\"o\"\u003e)\u003c/span\u003e\ntarget                     prot opt \u003cspan class=\"nb\"\u003esource               \u003c/span\u003edestination\nKUBE-SVC-YK2SNH4V42VSDWIJ  tcp  \u003cspan class=\"nt\"\u003e--\u003c/span\u003e  0.0.0.0/0            10.7.22.18           /\u003cspan class=\"k\"\u003e*\u003c/span\u003e default/nginx:web cluster IP \u003cspan class=\"k\"\u003e*\u003c/span\u003e/ tcp dpt:80\n\nChain KUBE-SVC-YK2SNH4V42VSDWIJ \u003cspan class=\"o\"\u003e(\u003c/span\u003e1 references\u003cspan class=\"o\"\u003e)\u003c/span\u003e\ntarget                     prot opt \u003cspan class=\"nb\"\u003esource               \u003c/span\u003edestination\nKUBE-SEP-GL2BLSI2B4ICU6WH  all  \u003cspan class=\"nt\"\u003e--\u003c/span\u003e  0.0.0.0/0            0.0.0.0/0            /\u003cspan class=\"k\"\u003e*\u003c/span\u003e default/nginx:web \u003cspan class=\"k\"\u003e*\u003c/span\u003e/ statistic mode random probability 0.33332999982\nKUBE-SEP-AIRRSG3CIF42U3PX  all  \u003cspan class=\"nt\"\u003e--\u003c/span\u003e  0.0.0.0/0            0.0.0.0/0            /\u003cspan class=\"k\"\u003e*\u003c/span\u003e default/nginx:web \u003cspan class=\"k\"\u003e*\u003c/span\u003e/\n\nChain KUBE-SEP-GL2BLSI2B4ICU6WH \u003cspan class=\"o\"\u003e(\u003c/span\u003e1 references\u003cspan class=\"o\"\u003e)\u003c/span\u003e\ntarget          prot opt \u003cspan class=\"nb\"\u003esource               \u003c/span\u003edestination\nDNAT            tcp  \u003cspan class=\"nt\"\u003e--\u003c/span\u003e  0.0.0.0/0            0.0.0.0/0            /\u003cspan class=\"k\"\u003e*\u003c/span\u003e default/nginx:web \u003cspan class=\"k\"\u003e*\u003c/span\u003e/ tcp to:10.244.3.181:80\n\nChain KUBE-SEP-AIRRSG3CIF42U3PX \u003cspan class=\"o\"\u003e(\u003c/span\u003e1 references\u003cspan class=\"o\"\u003e)\u003c/span\u003e\ntarget          prot opt \u003cspan class=\"nb\"\u003esource               \u003c/span\u003edestination\nDNAT            tcp  \u003cspan class=\"nt\"\u003e--\u003c/span\u003e  0.0.0.0/0            0.0.0.0/0            /\u003cspan class=\"k\"\u003e*\u003c/span\u003e default/nginx:web \u003cspan class=\"k\"\u003e*\u003c/span\u003e/ tcp to:10.244.3.182:80\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003ch2 id=\"55-further-re-structure-the-iptables-rules\"\u003e5.5 Further Re-structure the iptables rules\u003c/h2\u003e\n\n\u003cp\u003eTODO: add rules for traffic coming from outside of cluster.\u003c/p\u003e\n\n\u003cp\u003e\u003ca name=\"ch_6\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003ch1 id=\"6-implementation-3-proxy-via-ipvs\"\u003e6. Implementation 3: proxy via IPVS\u003c/h1\u003e\n\n\u003cp\u003eAlthough iptables-based proxy beats userspace-based one with great performance\ngain, it still suffers from severe performance degrades when the cluster has\ntoo much Services [6,7].\u003c/p\u003e\n\n\u003cp\u003eEssentially this is because \u003cmark\u003eiptables verdicts are chain-based, it is a linear\nalgorithm with \u003ccode\u003eO(n)\u003c/code\u003e complexity\u003c/mark\u003e. A good alternative to iptables is\n\u003ca href=\"http://www.linuxvirtualserver.org/software/ipvs.html\"\u003e\u003cstrong\u003eIPVS\u003c/strong\u003e\u003c/a\u003e - an in-kernel\nL4 load balancer, which uses ipset in the underlying (hash implementation), thus\nhas a \u003cstrong\u003ecomplexity of \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eO(1)\u003c/code\u003e\u003c/strong\u003e.\u003c/p\u003e\n\n\u003cp\u003eLet’s see how to achieve the same goal with IPVS.\u003c/p\u003e\n\n\u003cblockquote\u003e\n  \u003cp\u003eNOTE: Before proceed on, make sure you have deleted all the rules you added in\nprevious section.\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003ch2 id=\"61-install-ipvs\"\u003e6.1 Install IPVS\u003c/h2\u003e\n\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003e$ \u003c/span\u003eyum \u003cspan class=\"nb\"\u003einstall\u003c/span\u003e \u003cspan class=\"nt\"\u003e-y\u003c/span\u003e ipvsadm\n\n\u003cspan class=\"c\"\u003e# -l  list load balancing status\u003c/span\u003e\n\u003cspan class=\"c\"\u003e# -n  numeric output\u003c/span\u003e\n\u003cspan class=\"nv\"\u003e$ \u003c/span\u003eipvsadm \u003cspan class=\"nt\"\u003e-ln\u003c/span\u003e\nProt LocalAddress:Port Scheduler Flags\n  -\u0026gt; RemoteAddress:Port           Forward Weight ActiveConn InActConn\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003eNo rules by default.\u003c/p\u003e\n\n\u003ch2 id=\"62-add-virtualreal-servers\"\u003e6.2 Add virtual/real servers\u003c/h2\u003e\n\n\u003cp\u003eAchieve load balancing with IPVS:\u003c/p\u003e\n\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"c\"\u003e# -A/--add-service           add service\u003c/span\u003e\n\u003cspan class=\"c\"\u003e# -t/--tcp-service \u0026lt;address\u0026gt; VIP + Port\u003c/span\u003e\n\u003cspan class=\"c\"\u003e# -s \u0026lt;method\u0026gt;                scheduling-method\u003c/span\u003e\n\u003cspan class=\"c\"\u003e# -r/--real-server \u0026lt;address\u0026gt; real backend IP + Port\u003c/span\u003e\n\u003cspan class=\"c\"\u003e# -m                         masquerading (NAT)\u003c/span\u003e\n\u003cspan class=\"nv\"\u003e$ \u003c/span\u003eipvsadm \u003cspan class=\"nt\"\u003e-A\u003c/span\u003e \u003cspan class=\"nt\"\u003e-t\u003c/span\u003e \u003cspan class=\"nv\"\u003e$CLUSTER_IP\u003c/span\u003e:\u003cspan class=\"nv\"\u003e$PORT\u003c/span\u003e \u003cspan class=\"nt\"\u003e-s\u003c/span\u003e rr\n\u003cspan class=\"nv\"\u003e$ \u003c/span\u003eipvsadm \u003cspan class=\"nt\"\u003e-a\u003c/span\u003e \u003cspan class=\"nt\"\u003e-t\u003c/span\u003e \u003cspan class=\"nv\"\u003e$CLUSTER_IP\u003c/span\u003e:\u003cspan class=\"nv\"\u003e$PORT\u003c/span\u003e \u003cspan class=\"nt\"\u003e-r\u003c/span\u003e \u003cspan class=\"nv\"\u003e$POD1_IP\u003c/span\u003e \u003cspan class=\"nt\"\u003e-m\u003c/span\u003e\n\u003cspan class=\"nv\"\u003e$ \u003c/span\u003eipvsadm \u003cspan class=\"nt\"\u003e-a\u003c/span\u003e \u003cspan class=\"nt\"\u003e-t\u003c/span\u003e \u003cspan class=\"nv\"\u003e$CLUSTER_IP\u003c/span\u003e:\u003cspan class=\"nv\"\u003e$PORT\u003c/span\u003e \u003cspan class=\"nt\"\u003e-r\u003c/span\u003e \u003cspan class=\"nv\"\u003e$POD2_IP\u003c/span\u003e \u003cspan class=\"nt\"\u003e-m\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003eor use my script:\u003c/p\u003e\n\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003e$ \u003c/span\u003e./ipvs-add-server.sh\nAdding virtual server CLUSTER_IP:PORT\u003cspan class=\"o\"\u003e=\u003c/span\u003e10.7.111.132:80 ...\nAdding real servers ...\n10.7.111.132:80 -\u0026gt; 10.5.41.204\n10.7.111.132:80 -\u0026gt; 10.5.41.5\nDone\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003eCheck status again:\u003c/p\u003e\n\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003e$ \u003c/span\u003eipvsadm \u003cspan class=\"nt\"\u003e-ln\u003c/span\u003e\nProt LocalAddress:Port Scheduler Flags\n  -\u0026gt; RemoteAddress:Port           Forward Weight ActiveConn InActConn\nTCP  10.7.111.132:80 rr\n  -\u0026gt; 10.5.41.5:80                 Masq    1      0          0\n  -\u0026gt; 10.5.41.204:80               Masq    1      0          0\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003eSome explanations:\u003c/p\u003e\n\n\u003cul\u003e\n  \u003cli\u003eFor all traffic destinated for \u003ccode class=\"language-plaintext highlighter-rouge\"\u003e10.7.111.132:80\u003c/code\u003e, load-balancing it to\n\u003ccode class=\"language-plaintext highlighter-rouge\"\u003e10.5.41.5:80\u003c/code\u003e and \u003ccode class=\"language-plaintext highlighter-rouge\"\u003e10.5.41.204:80\u003c/code\u003e.\u003c/li\u003e\n  \u003cli\u003eUse round-robin (rr) algorithm for load balancing.\u003c/li\u003e\n  \u003cli\u003eTwo backends each with weight \u003ccode class=\"language-plaintext highlighter-rouge\"\u003e1\u003c/code\u003e (50% of each).\u003c/li\u003e\n  \u003cli\u003eUse MASQ (enhanced SNAT) for traffic forwarding between VIP and RealIPs.\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2 id=\"63-verify\"\u003e6.3 Verify\u003c/h2\u003e\n\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003e$ \u003c/span\u003e\u003cspan class=\"k\"\u003efor \u003c/span\u003ei \u003cspan class=\"k\"\u003ein\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e1..8\u003cspan class=\"o\"\u003e}\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"k\"\u003edo \u003c/span\u003ecurl \u003cspan class=\"nv\"\u003e$CLUSTER_IP\u003c/span\u003e:\u003cspan class=\"nv\"\u003e$PORT\u003c/span\u003e 2\u0026gt;\u0026amp;1 \u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e/dev/null\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"nb\"\u003esleep \u003c/span\u003e1\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"k\"\u003edone\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003e$ \u003c/span\u003etcpdump \u003cspan class=\"nt\"\u003e-nn\u003c/span\u003e \u003cspan class=\"nt\"\u003e-i\u003c/span\u003e eth0 port \u003cspan class=\"nv\"\u003e$PORT\u003c/span\u003e | \u003cspan class=\"nb\"\u003egrep\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;HTTP: GET\u0026#34;\u003c/span\u003e\nIP 10.21.0.7.49556 \u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e 10.5.41.204.80: ... HTTP: GET / HTTP/1.1\nIP 10.21.0.7.49558 \u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e 10.5.41.5.80  : ... HTTP: GET / HTTP/1.1\nIP 10.21.0.7.49560 \u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e 10.5.41.204.80: ... HTTP: GET / HTTP/1.1\nIP 10.21.0.7.49562 \u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e 10.5.41.5.80  : ... HTTP: GET / HTTP/1.1\nIP 10.21.0.7.49566 \u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e 10.5.41.204.80: ... HTTP: GET / HTTP/1.1\nIP 10.21.0.7.49568 \u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e 10.5.41.5.80  : ... HTTP: GET / HTTP/1.1\nIP 10.21.0.7.49570 \u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e 10.5.41.204.80: ... HTTP: GET / HTTP/1.1\nIP 10.21.0.7.49572 \u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e 10.5.41.5.80  : ... HTTP: GET / HTTP/1.1\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003ePerfect!\u003c/p\u003e\n\n\u003ch2 id=\"64-clean-up\"\u003e6.4 Clean up\u003c/h2\u003e\n\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003e$ \u003c/span\u003e./ipvs-del-server.sh\nDeleting real servers ...\n10.7.111.132:80 -\u0026gt; 10.5.41.204\n10.7.111.132:80 -\u0026gt; 10.5.41.5\nDeleting virtual server CLUSTER_IP:PORT\u003cspan class=\"o\"\u003e=\u003c/span\u003e10.7.111.132:80 ...\nDone\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e\u003ca name=\"ch_7\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003ch1 id=\"7-implementation-4-proxy-via-tc-level-ebpf\"\u003e7. Implementation 4: proxy via tc-level ebpf\u003c/h1\u003e\n\n\u003cp\u003eThis is also an \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eO(1)\u003c/code\u003e proxy, but has even higher performance compared with IPVS.\u003c/p\u003e\n\n\u003cp\u003eLet’s see how to implement the proxy function with eBPF in \u003cstrong\u003eless than 100 lines of C code\u003c/strong\u003e.\u003c/p\u003e\n\n\u003ch2 id=\"71-prerequisites\"\u003e7.1 Prerequisites\u003c/h2\u003e\n\n\u003cp\u003eIf you have enough time and interests to eBPF/BPF, consider reading through\n\u003ca href=\"https://docs.cilium.io/en/v1.9/bpf/\"\u003e\u003cstrong\u003eCilium: BPF and XDP Reference Guide\u003c/strong\u003e\u003c/a\u003e,\nit’s a perfect documentation for developers.\u003c/p\u003e\n\n\u003ch2 id=\"72-implementation\"\u003e7.2 Implementation\u003c/h2\u003e\n\n\u003cp\u003eFor the egress part, basic idea:\u003c/p\u003e\n\n\u003col\u003e\n  \u003cli\u003eFor all traffic, if \u003ccode class=\"language-plaintext highlighter-rouge\"\u003edst=CLUSTER_IP \u0026amp;\u0026amp; proto==TCP \u0026amp;\u0026amp; dport==80\u003c/code\u003e,\u003c/li\u003e\n  \u003cli\u003eChange destination IP: \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eCLUSTER_IP -\u0026gt; POD_IP\u003c/code\u003e.\u003c/li\u003e\n  \u003cli\u003eUpdate checksum filelds in IP and TCP headers (otherwise the packets will be dropped).\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003cdiv class=\"language-c highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"n\"\u003e__section\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;egress\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"nf\"\u003etc_egress\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003estruct\u003c/span\u003e \u003cspan class=\"n\"\u003e__sk_buff\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003eskb\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"n\"\u003e__be32\u003c/span\u003e \u003cspan class=\"n\"\u003ecluster_ip\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mh\"\u003e0x846F070A\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"c1\"\u003e// 10.7.111.132\u003c/span\u003e\n    \u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"n\"\u003e__be32\u003c/span\u003e \u003cspan class=\"n\"\u003epod_ip\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mh\"\u003e0x0529050A\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e     \u003cspan class=\"c1\"\u003e// 10.5.41.5\u003c/span\u003e\n\n    \u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"n\"\u003el3_off\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eETH_HLEN\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e    \u003cspan class=\"c1\"\u003e// IP header offset\u003c/span\u003e\n    \u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"n\"\u003el4_off\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003el3_off\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"mi\"\u003e20\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"c1\"\u003e// TCP header offset: l3_off + sizeof(struct iphdr)\u003c/span\u003e\n    \u003cspan class=\"n\"\u003e__be32\u003c/span\u003e \u003cspan class=\"n\"\u003esum\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e                     \u003cspan class=\"c1\"\u003e// IP checksum\u003c/span\u003e\n\n    \u003cspan class=\"kt\"\u003evoid\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003edata\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"kt\"\u003evoid\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"p\"\u003e)(\u003c/span\u003e\u003cspan class=\"kt\"\u003elong\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"n\"\u003eskb\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003edata\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"kt\"\u003evoid\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003edata_end\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"kt\"\u003evoid\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"p\"\u003e)(\u003c/span\u003e\u003cspan class=\"kt\"\u003elong\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"n\"\u003eskb\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003edata_end\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003edata_end\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"n\"\u003edata\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"n\"\u003el4_off\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"c1\"\u003e// not our packet\u003c/span\u003e\n        \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003eTC_ACT_OK\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n    \u003cspan class=\"k\"\u003estruct\u003c/span\u003e \u003cspan class=\"n\"\u003eiphdr\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003eip4\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003estruct\u003c/span\u003e \u003cspan class=\"n\"\u003eiphdr\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"p\"\u003e)(\u003c/span\u003e\u003cspan class=\"n\"\u003edata\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"n\"\u003el3_off\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eip4\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003edaddr\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"n\"\u003ecluster_ip\u003c/span\u003e \u003cspan class=\"o\"\u003e||\u003c/span\u003e \u003cspan class=\"n\"\u003eip4\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003eprotocol\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"n\"\u003eIPPROTO_TCP\u003c/span\u003e \u003cspan class=\"cm\"\u003e/* || tcp-\u0026gt;dport == 80 */\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003eTC_ACT_OK\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n    \u003cspan class=\"c1\"\u003e// DNAT: cluster_ip -\u0026gt; pod_ip, then update L3 and L4 checksum\u003c/span\u003e\n    \u003cspan class=\"n\"\u003esum\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003ecsum_diff\u003c/span\u003e\u003cspan class=\"p\"\u003e((\u003c/span\u003e\u003cspan class=\"kt\"\u003evoid\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e\u003cspan class=\"n\"\u003eip4\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003edaddr\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e4\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"kt\"\u003evoid\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e\u003cspan class=\"n\"\u003epod_ip\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e4\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eskb_store_bytes\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eskb\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003el3_off\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"n\"\u003eoffsetof\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003estruct\u003c/span\u003e \u003cspan class=\"n\"\u003eiphdr\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003edaddr\u003c/span\u003e\u003cspan class=\"p\"\u003e),\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"kt\"\u003evoid\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e\u003cspan class=\"n\"\u003epod_ip\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e4\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"n\"\u003el3_csum_replace\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eskb\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003el3_off\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"n\"\u003eoffsetof\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003estruct\u003c/span\u003e \u003cspan class=\"n\"\u003eiphdr\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003echeck\u003c/span\u003e\u003cspan class=\"p\"\u003e),\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003esum\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\t\u003cspan class=\"n\"\u003el4_csum_replace\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eskb\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003el4_off\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"n\"\u003eoffsetof\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003estruct\u003c/span\u003e \u003cspan class=\"n\"\u003etcphdr\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003echeck\u003c/span\u003e\u003cspan class=\"p\"\u003e),\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003esum\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eBPF_F_PSEUDO_HDR\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003eTC_ACT_OK\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003eand the ingress part, quite similar to the egress one:\u003c/p\u003e\n\n\u003cdiv class=\"language-c highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"n\"\u003e__section\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;ingress\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"nf\"\u003etc_ingress\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003estruct\u003c/span\u003e \u003cspan class=\"n\"\u003e__sk_buff\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003eskb\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"n\"\u003e__be32\u003c/span\u003e \u003cspan class=\"n\"\u003ecluster_ip\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mh\"\u003e0x846F070A\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"c1\"\u003e// 10.7.111.132\u003c/span\u003e\n    \u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"n\"\u003e__be32\u003c/span\u003e \u003cspan class=\"n\"\u003epod_ip\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mh\"\u003e0x0529050A\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e     \u003cspan class=\"c1\"\u003e// 10.5.41.5\u003c/span\u003e\n\n    \u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"n\"\u003el3_off\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eETH_HLEN\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e    \u003cspan class=\"c1\"\u003e// IP header offset\u003c/span\u003e\n    \u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"n\"\u003el4_off\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003el3_off\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"mi\"\u003e20\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"c1\"\u003e// TCP header offset: l3_off + sizeof(struct iphdr)\u003c/span\u003e\n    \u003cspan class=\"n\"\u003e__be32\u003c/span\u003e \u003cspan class=\"n\"\u003esum\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e                     \u003cspan class=\"c1\"\u003e// IP checksum\u003c/span\u003e\n\n    \u003cspan class=\"kt\"\u003evoid\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003edata\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"kt\"\u003evoid\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"p\"\u003e)(\u003c/span\u003e\u003cspan class=\"kt\"\u003elong\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"n\"\u003eskb\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003edata\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"kt\"\u003evoid\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003edata_end\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"kt\"\u003evoid\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"p\"\u003e)(\u003c/span\u003e\u003cspan class=\"kt\"\u003elong\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"n\"\u003eskb\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003edata_end\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003edata_end\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"n\"\u003edata\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"n\"\u003el4_off\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"c1\"\u003e// not our packet\u003c/span\u003e\n        \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003eTC_ACT_OK\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n    \u003cspan class=\"k\"\u003estruct\u003c/span\u003e \u003cspan class=\"n\"\u003eiphdr\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003eip4\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003estruct\u003c/span\u003e \u003cspan class=\"n\"\u003eiphdr\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"p\"\u003e)(\u003c/span\u003e\u003cspan class=\"n\"\u003edata\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"n\"\u003el3_off\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eip4\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003esaddr\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"n\"\u003epod_ip\u003c/span\u003e \u003cspan class=\"o\"\u003e||\u003c/span\u003e \u003cspan class=\"n\"\u003eip4\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003eprotocol\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"n\"\u003eIPPROTO_TCP\u003c/span\u003e \u003cspan class=\"cm\"\u003e/* || tcp-\u0026gt;dport == 80 */\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003eTC_ACT_OK\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n    \u003cspan class=\"c1\"\u003e// SNAT: pod_ip -\u0026gt; cluster_ip, then update L3 and L4 header\u003c/span\u003e\n    \u003cspan class=\"n\"\u003esum\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003ecsum_diff\u003c/span\u003e\u003cspan class=\"p\"\u003e((\u003c/span\u003e\u003cspan class=\"kt\"\u003evoid\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e\u003cspan class=\"n\"\u003eip4\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003esaddr\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e4\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"kt\"\u003evoid\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e\u003cspan class=\"n\"\u003ecluster_ip\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e4\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eskb_store_bytes\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eskb\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003el3_off\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"n\"\u003eoffsetof\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003estruct\u003c/span\u003e \u003cspan class=\"n\"\u003eiphdr\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003esaddr\u003c/span\u003e\u003cspan class=\"p\"\u003e),\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"kt\"\u003evoid\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e\u003cspan class=\"n\"\u003ecluster_ip\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e4\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"n\"\u003el3_csum_replace\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eskb\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003el3_off\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"n\"\u003eoffsetof\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003estruct\u003c/span\u003e \u003cspan class=\"n\"\u003eiphdr\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003echeck\u003c/span\u003e\u003cspan class=\"p\"\u003e),\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003esum\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\t\u003cspan class=\"n\"\u003el4_csum_replace\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eskb\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003el4_off\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"n\"\u003eoffsetof\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003estruct\u003c/span\u003e \u003cspan class=\"n\"\u003etcphdr\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003echeck\u003c/span\u003e\u003cspan class=\"p\"\u003e),\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003esum\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eBPF_F_PSEUDO_HDR\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003eTC_ACT_OK\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"kt\"\u003echar\u003c/span\u003e \u003cspan class=\"n\"\u003e__license\u003c/span\u003e\u003cspan class=\"p\"\u003e[]\u003c/span\u003e \u003cspan class=\"n\"\u003e__section\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;license\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;GPL\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003ch2 id=\"73-compile-and-load-into-kernel\"\u003e7.3 Compile and load into kernel\u003c/h2\u003e\n\n\u003cp\u003eNow use my tiny script for compiling and loading into kernel:\u003c/p\u003e\n\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003e$ \u003c/span\u003e./compile-and-load.sh\n...\n++ \u003cspan class=\"nb\"\u003esudo \u003c/span\u003etc filter show dev eth0 egress\nfilter protocol all pref 49152 bpf chain 0\nfilter protocol all pref 49152 bpf chain 0 handle 0x1 toy-proxy-bpf.o:[egress] direct-action not_in_hw \u003cspan class=\"nb\"\u003eid \u003c/span\u003e18 tag f5f39a21730006aa jited\n\n++ \u003cspan class=\"nb\"\u003esudo \u003c/span\u003etc filter show dev eth0 ingress\nfilter protocol all pref 49152 bpf chain 0\nfilter protocol all pref 49152 bpf chain 0 handle 0x1 toy-proxy-bpf.o:[ingress] direct-action not_in_hw \u003cspan class=\"nb\"\u003eid \u003c/span\u003e19 tag b41159c5873bcbc9 jited\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003ewhere the script looks like:\u003c/p\u003e\n\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003e$ \u003c/span\u003e\u003cspan class=\"nb\"\u003ecat \u003c/span\u003ecompile-and-load.sh\n\u003cspan class=\"nb\"\u003eset\u003c/span\u003e \u003cspan class=\"nt\"\u003e-x\u003c/span\u003e\n\n\u003cspan class=\"nv\"\u003eNIC\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003eeth0\n\n\u003cspan class=\"c\"\u003e# compile c code into bpf code\u003c/span\u003e\nclang \u003cspan class=\"nt\"\u003e-O2\u003c/span\u003e \u003cspan class=\"nt\"\u003e-Wall\u003c/span\u003e \u003cspan class=\"nt\"\u003e-c\u003c/span\u003e toy-proxy-bpf.c \u003cspan class=\"nt\"\u003e-target\u003c/span\u003e bpf \u003cspan class=\"nt\"\u003e-o\u003c/span\u003e toy-proxy-bpf.o\n\n\u003cspan class=\"c\"\u003e# add tc queuing discipline (egress and ingress buffer)\u003c/span\u003e\n\u003cspan class=\"nb\"\u003esudo \u003c/span\u003etc qdisc del dev \u003cspan class=\"nv\"\u003e$NIC\u003c/span\u003e clsact 2\u0026gt;\u0026amp;1 \u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e/dev/null\n\u003cspan class=\"nb\"\u003esudo \u003c/span\u003etc qdisc add dev \u003cspan class=\"nv\"\u003e$NIC\u003c/span\u003e clsact\n\n\u003cspan class=\"c\"\u003e# load bpf code into the tc egress and ingress hook respectively\u003c/span\u003e\n\u003cspan class=\"nb\"\u003esudo \u003c/span\u003etc filter add dev \u003cspan class=\"nv\"\u003e$NIC\u003c/span\u003e egress bpf da obj toy-proxy-bpf.o sec egress\n\u003cspan class=\"nb\"\u003esudo \u003c/span\u003etc filter add dev \u003cspan class=\"nv\"\u003e$NIC\u003c/span\u003e ingress bpf da obj toy-proxy-bpf.o sec ingress\n\n\u003cspan class=\"c\"\u003e# show info\u003c/span\u003e\n\u003cspan class=\"nb\"\u003esudo \u003c/span\u003etc filter show dev \u003cspan class=\"nv\"\u003e$NIC\u003c/span\u003e egress\n\u003cspan class=\"nb\"\u003esudo \u003c/span\u003etc filter show dev \u003cspan class=\"nv\"\u003e$NIC\u003c/span\u003e ingress\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003ch2 id=\"74-verify\"\u003e7.4 Verify\u003c/h2\u003e\n\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003e$ \u003c/span\u003ecurl \u003cspan class=\"nv\"\u003e$CLUSTER_IP\u003c/span\u003e:\u003cspan class=\"nv\"\u003e$PORT\u003c/span\u003e\n\u0026lt;\u003cspan class=\"o\"\u003e!\u003c/span\u003eDOCTYPE html\u0026gt;\n...\n\u0026lt;/html\u0026gt;\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003ePerfect!\u003c/p\u003e\n\n\u003ch2 id=\"75-cleanup\"\u003e7.5 Cleanup\u003c/h2\u003e\n\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003e$ \u003c/span\u003e\u003cspan class=\"nb\"\u003esudo \u003c/span\u003etc qdisc del dev \u003cspan class=\"nv\"\u003e$NIC\u003c/span\u003e clsact 2\u0026gt;\u0026amp;1 \u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e/dev/null\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003ch2 id=\"76-explanations\"\u003e7.6 Explanations\u003c/h2\u003e\n\n\u003cp\u003eTODO.\u003c/p\u003e\n\n\u003cp\u003eSee some of my previous posts for bpf/cilium.\u003c/p\u003e\n\n\u003ch2 id=\"77-improvements\"\u003e7.7 Improvements\u003c/h2\u003e\n\n\u003cp\u003eAnd one problem of our tc-ebpf based proxy: this is \u003cmark\u003epacket-level NAT scheme\u003c/mark\u003e,\nwhich means, we \u003cmark\u003ehave to perform NAT on every single packet\u003c/mark\u003e.\u003c/p\u003e\n\n\u003cp\u003eCan we do it better? Of course!\u003c/p\u003e\n\n\u003cp\u003e\u003ca name=\"ch_8\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003ch1 id=\"8-implementation-5-proxy-via-socket-level-ebpf\"\u003e8. Implementation 5: proxy via socket-level ebpf\u003c/h1\u003e\n\n\u003ch2 id=\"81-hook-earlier\"\u003e8.1 Hook earlier\u003c/h2\u003e\n\n\u003cp\u003eeBPF code can be attached at different places (levels) in the kernel:\u003c/p\u003e\n\n\u003cp align=\"center\"\u003e\u003cimg src=\"/assets/img/socket-acceleration-with-ebpf/bpf-kernel-hooks.png\" width=\"50%\" height=\"50%\"/\u003e\u003c/p\u003e\n\u003cp align=\"center\"\u003eImage from \u003ca href=\"https://cyral.com/blog/how-to-ebpf-accelerating-cloud-native/\"\u003ehere\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eBy hooking connections at socket-level, the packet-level NAT would be bypassed:\n\u003cmark\u003efor each connection, we just need to perform NAT once!\u003c/mark\u003e (for TCP).\u003c/p\u003e\n\n\u003cp\u003eWhat’s more, such a functionality can be implemented in \u003cstrong\u003eless than 30 lines of C (ebpf) code\u003c/strong\u003e.\u003c/p\u003e\n\n\u003ch2 id=\"82-implementation\"\u003e8.2 Implementation\u003c/h2\u003e\n\n\u003cdiv class=\"language-c highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003estatic\u003c/span\u003e \u003cspan class=\"kt\"\u003eint\u003c/span\u003e\n\u003cspan class=\"nf\"\u003e__sock4_xlate_fwd\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003estruct\u003c/span\u003e \u003cspan class=\"n\"\u003ebpf_sock_addr\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003ectx\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"n\"\u003e__be32\u003c/span\u003e \u003cspan class=\"n\"\u003ecluster_ip\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mh\"\u003e0x846F070A\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"c1\"\u003e// 10.7.111.132\u003c/span\u003e\n    \u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"n\"\u003e__be32\u003c/span\u003e \u003cspan class=\"n\"\u003epod_ip\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mh\"\u003e0x0529050A\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e     \u003cspan class=\"c1\"\u003e// 10.5.41.5\u003c/span\u003e\n\n    \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ectx\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003euser_ip4\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"n\"\u003ecluster_ip\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n    \u003cspan class=\"n\"\u003ectx\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003euser_ip4\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003epod_ip\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"n\"\u003e__section\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;connect4\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"nf\"\u003esock4_connect\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003estruct\u003c/span\u003e \u003cspan class=\"n\"\u003ebpf_sock_addr\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003ectx\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"n\"\u003e__sock4_xlate_fwd\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ectx\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003eSYS_PROCEED\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e\u003ccode class=\"language-plaintext highlighter-rouge\"\u003econnect4\u003c/code\u003e indicates that \u003cmark\u003ethis piece of code will be triggered when there are\nIPv4 socket connection events\u003c/mark\u003e (\u003ccode class=\"language-plaintext highlighter-rouge\"\u003econnect()\u003c/code\u003e system call). And when it happens,\nthe code will modify the socket metadata, replacing destination IP (ClusterIP) with PodIP\nthen return (continue connecting process, but with new destination IP).\u003c/p\u003e\n\n\u003cp\u003e\u003cmark\u003eThis hooking operates so early (socket-level, above TCP/IP stack in the\nkernel) that even packets (skb) are not generated at this point\u003c/mark\u003e. Later, all\npackets (including TCP handshakes) will directly use PodIP as destination IP, so\nno packet-level NAT will be involved.\u003c/p\u003e\n\n\u003ch2 id=\"83-compile-load-and-attach-bpf-code\"\u003e8.3 Compile, load and attach BPF code\u003c/h2\u003e\n\n\u003cp\u003eMount cgroupv2:\u003c/p\u003e\n\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003e$ \u003c/span\u003e\u003cspan class=\"nb\"\u003esudo mkdir\u003c/span\u003e \u003cspan class=\"nt\"\u003e-p\u003c/span\u003e /var/run/toy-proxy/cgroupv2\n\u003cspan class=\"nv\"\u003e$ \u003c/span\u003e\u003cspan class=\"nb\"\u003esudo \u003c/span\u003emount \u003cspan class=\"nt\"\u003e-t\u003c/span\u003e cgroup2 none /var/run/toy-proxy/cgroupv2\n\u003cspan class=\"nv\"\u003e$ \u003c/span\u003emount  | \u003cspan class=\"nb\"\u003egrep \u003c/span\u003ecgroupv2\nnone on /var/run/toy-proxy/cgroupv2 \u003cspan class=\"nb\"\u003etype \u003c/span\u003ecgroup2 \u003cspan class=\"o\"\u003e(\u003c/span\u003erw,relatime\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003eCompile:\u003c/p\u003e\n\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003e$ \u003c/span\u003eclang \u003cspan class=\"nt\"\u003e-O2\u003c/span\u003e \u003cspan class=\"nt\"\u003e-target\u003c/span\u003e bpf \u003cspan class=\"nt\"\u003e-c\u003c/span\u003e toy-proxy-bpf-sock.c \u003cspan class=\"nt\"\u003e-o\u003c/span\u003e toy-proxy-bpf-sock.o\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003eLoad object file into kernel:\u003c/p\u003e\n\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003e$ \u003c/span\u003etc \u003cspan class=\"nb\"\u003eexec \u003c/span\u003ebpf pin /sys/fs/bpf/tc/globals/toy_proxy_cgroups_connect4 obj toy-proxy-bpf-sock.o \u003cspan class=\"nb\"\u003etype \u003c/span\u003esockaddr attach_type connect4 sec connect4\n\u003cspan class=\"nv\"\u003e$ \u003c/span\u003ebpftool prog show\n...\n25: cgroup_sock_addr  tag 19d89e13b1d289f1\n        loaded_at 2021-02-03T06:45:40+0000  uid 0\n        xlated 80B  jited 77B  memlock 4096B\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003eAttach to cgroup:\u003c/p\u003e\n\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003e$ \u003c/span\u003ebpftool cgroup attach /var/run/toy-proxy/cgroupv2 connect4 pinned /sys/fs/bpf/tc/globals/toy_proxy_cgroups_connect4\n\u003cspan class=\"nv\"\u003e$ \u003c/span\u003ebpftool cgroup show /var/run/toy-proxy/cgroupv2\nID       AttachType      AttachFlags     Name\n24       connect4\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003ch2 id=\"83-verify\"\u003e8.3 Verify\u003c/h2\u003e\n\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003e$ \u003c/span\u003ecurl \u003cspan class=\"nv\"\u003e$CLUSTER_IP\u003c/span\u003e:\u003cspan class=\"nv\"\u003e$PORT\u003c/span\u003e\n\u0026lt;\u003cspan class=\"o\"\u003e!\u003c/span\u003eDOCTYPE html\u0026gt;\n...\n\u0026lt;/html\u0026gt;\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003eand the capture:\u003c/p\u003e\n\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003e$ \u003c/span\u003etcpdump \u003cspan class=\"nt\"\u003e-nn\u003c/span\u003e \u003cspan class=\"nt\"\u003e-i\u003c/span\u003e eth0 port \u003cspan class=\"nv\"\u003e$PORT\u003c/span\u003e\n10.21.0.7.34270 \u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e 10.5.41.5.80: Flags \u003cspan class=\"o\"\u003e[\u003c/span\u003eS], \u003cspan class=\"nb\"\u003eseq \u003c/span\u003e597121430, ..          \u003cspan class=\"c\"\u003e# TCP handshake with PodIP\u003c/span\u003e\n10.5.41.5.80 \u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e 10.21.0.7.34270: Flags \u003cspan class=\"o\"\u003e[\u003c/span\u003eS.], \u003cspan class=\"nb\"\u003eseq \u003c/span\u003e466419201, ..\n10.21.0.7.34270 \u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e 10.5.41.5.80: Flags \u003cspan class=\"o\"\u003e[\u003c/span\u003e.], ack 1\n\n10.21.0.7.34270 \u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e 10.5.41.5.80: Flags \u003cspan class=\"o\"\u003e[\u003c/span\u003eP.], \u003cspan class=\"nb\"\u003eseq \u003c/span\u003e1:7, ack 1: HTTP      \u003cspan class=\"c\"\u003e# TCP GET request/response\u003c/span\u003e\n10.5.41.5.80 \u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e 10.21.0.7.34270: Flags \u003cspan class=\"o\"\u003e[\u003c/span\u003e.], ack 7\n10.5.41.5.80 \u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e 10.21.0.7.34270: Flags \u003cspan class=\"o\"\u003e[\u003c/span\u003eP.], \u003cspan class=\"nb\"\u003eseq \u003c/span\u003e1:496, ack 7: HTTP\n10.21.0.7.34270 \u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e 10.5.41.5.80: Flags \u003cspan class=\"o\"\u003e[\u003c/span\u003e.], ack 496\n\n10.5.41.5.80 \u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e 10.21.0.7.34270: Flags \u003cspan class=\"o\"\u003e[\u003c/span\u003eF.], \u003cspan class=\"nb\"\u003eseq \u003c/span\u003e496, ack 7            \u003cspan class=\"c\"\u003e# TCP waving hands\u003c/span\u003e\n10.21.0.7.34270 \u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e 10.5.41.5.80: Flags \u003cspan class=\"o\"\u003e[\u003c/span\u003eF.], \u003cspan class=\"nb\"\u003eseq \u003c/span\u003e7, ack 497\n10.5.41.5.80 \u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e 10.21.0.7.34270: Flags \u003cspan class=\"o\"\u003e[\u003c/span\u003e.], ack 8\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003ch2 id=\"84-clean-up\"\u003e8.4 Clean up\u003c/h2\u003e\n\n\u003cp\u003eDetach BPF from cgroup:\u003c/p\u003e\n\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"c\"\u003e# bpftool cgroup detach \u0026lt;cgroup root\u0026gt; \u0026lt;hook\u0026gt; id \u0026lt;id\u0026gt;\u003c/span\u003e\n\u003cspan class=\"nv\"\u003e$ \u003c/span\u003ebpftool cgroup detach /var/run/toy-proxy/cgroupv2 connect4 \u003cspan class=\"nb\"\u003eid \u003c/span\u003e24 \n\n\u003cspan class=\"nv\"\u003e$ \u003c/span\u003ebpftool cgroup show /var/run/toy-proxy/cgroupv2\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003eDetach/remove bpf object file:\u003c/p\u003e\n\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003e$ \u003c/span\u003e\u003cspan class=\"nb\"\u003erm\u003c/span\u003e /sys/fs/bpf/ip/globals/toy_proxy_cgroups_connect4\n\n\u003cspan class=\"nv\"\u003e$ \u003c/span\u003ebpftool prog show \u003cspan class=\"c\"\u003e# our program should have gone\u003c/span\u003e\n...\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003ch2 id=\"85-performance-comparison\"\u003e8.5 Performance comparison\u003c/h2\u003e\n\n\u003cp\u003eI haven’t tested them,\nbut you can take a glimpse at \u003ca href=\"https://cyral.com/blog/how-to-ebpf-accelerating-cloud-native/\"\u003eHow to use eBPF for accelerating Cloud Native\napplications\u003c/a\u003e.\u003c/p\u003e\n\n\u003ch2 id=\"86-other-explanations\"\u003e8.6 Other explanations\u003c/h2\u003e\n\n\u003cp\u003eBPF code is borrowed from Cilium, and \u003cstrong\u003ecredits go to it!\u003c/strong\u003e\u003c/p\u003e\n\n\u003cp\u003eLoad and run the above code relies on certain versions of \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eclang\u003c/code\u003e, \u003ccode class=\"language-plaintext highlighter-rouge\"\u003etc\u003c/code\u003e, \u003ccode class=\"language-plaintext highlighter-rouge\"\u003ebpftool\u003c/code\u003e.\nIf you’d like to repeat the process, maybe start a container from cilium image\nis a good idea. For example:\u003c/p\u003e\n\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003e$ \u003c/span\u003edocker run \u003cspan class=\"nt\"\u003e-d\u003c/span\u003e \u003cspan class=\"nt\"\u003e--privileged\u003c/span\u003e \u003cspan class=\"nt\"\u003e--name\u003c/span\u003e dev-ctn \u003cspan class=\"se\"\u003e\\\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e-v\u003c/span\u003e /home/xx/path-to-source-code/:/toy-proxy \u003cspan class=\"se\"\u003e\\\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e-v\u003c/span\u003e /var/run/toy-proxy/cgroupv2/:/var/run/toy-proxy/cgroupv2 \u003cspan class=\"se\"\u003e\\\u003c/span\u003e\n    cilium:v1.8.4 \u003cspan class=\"nb\"\u003esleep \u003c/span\u003e60d\n\n\u003cspan class=\"nv\"\u003e$ \u003c/span\u003edocker \u003cspan class=\"nb\"\u003eexec\u003c/span\u003e \u003cspan class=\"nt\"\u003e-it\u003c/span\u003e dev-ctn bash\n\u003cspan class=\"c\"\u003e# then compile, load, and attach bpf program in this container\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003ch1 id=\"9-summary\"\u003e9. Summary\u003c/h1\u003e\n\n\u003cp\u003eIn this post, we manually realized the core functionalities of \u003ccode class=\"language-plaintext highlighter-rouge\"\u003ekube-proxy\u003c/code\u003e with\ndifferent means. Hope now you have a better understanding about kubernetes node\nproxy, and some other aspects about networking.\u003c/p\u003e\n\n\u003cp\u003e\u003cstrong\u003eCode and scripts used in this post\u003c/strong\u003e: \u003ca href=\"https://github.com/ArthurChiao/arthurchiao.github.io/tree/master/assets/code/cracking-k8s-node-proxy\"\u003ehere\u003c/a\u003e.\u003c/p\u003e\n\n\u003cp\u003e\u003ca name=\"references\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003ch1 id=\"references\"\u003eReferences\u003c/h1\u003e\n\n\u003col\u003e\n  \u003cli\u003e\u003ca href=\"https://kubernetes.io/docs/reference/command-line-tools-reference/kube-proxy/\"\u003eKubernetes Doc: CLI - kube-proxy\u003c/a\u003e\u003c/li\u003e\n  \u003cli\u003e\u003ca href=\"https://github.com/kubernetes/enhancements/blob/master/keps/sig-network/0011-ipvs-proxier.md\"\u003ekubernetes/enhancements: enhancements/0011-ipvs-proxier.md\u003c/a\u003e\u003c/li\u003e\n  \u003cli\u003e\u003ca href=\"https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types\"\u003eKubernetes Doc: Service types\u003c/a\u003e\u003c/li\u003e\n  \u003cli\u003e\u003ca href=\"https://kubernetes.io/docs/concepts/cluster-administration/proxies/\"\u003eProxies in Kubernetes - Kubernetes\u003c/a\u003e\u003c/li\u003e\n  \u003cli\u003e\u003ca href=\"https://medium.com/@benmeier_/a-quick-minimal-ipvs-load-balancer-demo-d5cc42d0deb4\"\u003eA minimal IPVS Load Balancer demo\u003c/a\u003e\u003c/li\u003e\n  \u003cli\u003e\u003ca href=\"https://docs.google.com/presentation/d/1BaIAywY2qqeHtyGZtlyAp89JIZs59MZLKcFLxKE6LyM/edit#slide=id.p3\"\u003eScaling Kubernetes to Support 50,000 Services\u003c/a\u003e\u003c/li\u003e\n  \u003cli\u003e\u003ca href=\"https://zhuanlan.zhihu.com/p/37230013\"\u003e华为云在 K8S 大规模场景下的 Service 性能优化实践\u003c/a\u003e\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003cp\u003e\u003ca name=\"appendix\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003ch1 id=\"appendix\"\u003eAppendix\u003c/h1\u003e\n\n\u003ch2 id=\"a1-webappyaml\"\u003eA1. \u003ccode class=\"language-plaintext highlighter-rouge\"\u003ewebapp.yaml\u003c/code\u003e\u003c/h2\u003e\n\n\u003cdiv class=\"language-yaml highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"na\"\u003eapiVersion\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003ev1\u003c/span\u003e\n\u003cspan class=\"na\"\u003ekind\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003eService\u003c/span\u003e\n\u003cspan class=\"na\"\u003emetadata\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e\n  \u003cspan class=\"na\"\u003ename\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003ewebapp\u003c/span\u003e\n  \u003cspan class=\"na\"\u003elabels\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e\n    \u003cspan class=\"na\"\u003eapp\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003ewebapp\u003c/span\u003e\n\u003cspan class=\"na\"\u003espec\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e\n  \u003cspan class=\"na\"\u003eports\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e\n  \u003cspan class=\"pi\"\u003e-\u003c/span\u003e \u003cspan class=\"na\"\u003eport\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"m\"\u003e80\u003c/span\u003e\n    \u003cspan class=\"na\"\u003ename\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003eweb\u003c/span\u003e\n  \u003cspan class=\"na\"\u003eselector\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e\n    \u003cspan class=\"na\"\u003eapp\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003ewebapp\u003c/span\u003e\n\u003cspan class=\"nn\"\u003e---\u003c/span\u003e\n\u003cspan class=\"na\"\u003eapiVersion\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003eapps/v1\u003c/span\u003e\n\u003cspan class=\"na\"\u003ekind\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003eStatefulSet\u003c/span\u003e\n\u003cspan class=\"na\"\u003emetadata\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e\n  \u003cspan class=\"na\"\u003ename\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003ewebapp\u003c/span\u003e\n\u003cspan class=\"na\"\u003espec\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e\n  \u003cspan class=\"na\"\u003eserviceName\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"s\"\u003ewebapp\u0026#34;\u003c/span\u003e\n  \u003cspan class=\"na\"\u003ereplicas\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"m\"\u003e1\u003c/span\u003e\n  \u003cspan class=\"na\"\u003eselector\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e\n    \u003cspan class=\"na\"\u003ematchLabels\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e\n      \u003cspan class=\"na\"\u003eapp\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003ewebapp\u003c/span\u003e\n  \u003cspan class=\"na\"\u003etemplate\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e\n    \u003cspan class=\"na\"\u003emetadata\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e\n      \u003cspan class=\"na\"\u003elabels\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e\n        \u003cspan class=\"na\"\u003eapp\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003ewebapp\u003c/span\u003e\n    \u003cspan class=\"na\"\u003espec\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e\n      \u003cspan class=\"c1\"\u003e# affinity:\u003c/span\u003e\n      \u003cspan class=\"c1\"\u003e#   nodeAffinity:\u003c/span\u003e\n      \u003cspan class=\"c1\"\u003e#     requiredDuringSchedulingIgnoredDuringExecution:\u003c/span\u003e\n      \u003cspan class=\"c1\"\u003e#       nodeSelectorTerms:\u003c/span\u003e\n      \u003cspan class=\"c1\"\u003e#       - matchExpressions:\u003c/span\u003e\n      \u003cspan class=\"c1\"\u003e#         - key: kubernetes.io/hostname\u003c/span\u003e\n      \u003cspan class=\"c1\"\u003e#           operator: In\u003c/span\u003e\n      \u003cspan class=\"c1\"\u003e#           values:\u003c/span\u003e\n      \u003cspan class=\"c1\"\u003e#           - node1\u003c/span\u003e\n      \u003cspan class=\"na\"\u003etolerations\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e\n      \u003cspan class=\"pi\"\u003e-\u003c/span\u003e \u003cspan class=\"na\"\u003eeffect\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003eNoSchedule\u003c/span\u003e\n        \u003cspan class=\"na\"\u003eoperator\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003eExists\u003c/span\u003e   \u003cspan class=\"c1\"\u003e# this will effectively tolerate any taint\u003c/span\u003e\n      \u003cspan class=\"na\"\u003econtainers\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e\n      \u003cspan class=\"pi\"\u003e-\u003c/span\u003e \u003cspan class=\"na\"\u003ename\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003ewebapp\u003c/span\u003e\n        \u003cspan class=\"na\"\u003eimage\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003enginx-slim:0.8\u003c/span\u003e\n        \u003cspan class=\"na\"\u003eports\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e\n        \u003cspan class=\"pi\"\u003e-\u003c/span\u003e \u003cspan class=\"na\"\u003econtainerPort\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"m\"\u003e80\u003c/span\u003e\n          \u003cspan class=\"na\"\u003ename\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003eweb\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003ch2 id=\"a2-service-struct-definition-in-kubernetes\"\u003eA2. \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eService\u003c/code\u003e struct definition in Kubernetes\u003c/h2\u003e\n\n\u003cdiv class=\"language-go highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"c\"\u003e// https://github.com/kubernetes/kubernetes/blob/v1.24.0/pkg/apis/core/types.go#L3960\u003c/span\u003e\n\n\u003cspan class=\"c\"\u003e// Service is a named abstraction of software service (for example, mysql) consisting of local port\u003c/span\u003e\n\u003cspan class=\"c\"\u003e// (for example 3306) that the proxy listens on, and the selector that determines which pods\u003c/span\u003e\n\u003cspan class=\"c\"\u003e// will answer requests sent through the proxy.\u003c/span\u003e\n\u003cspan class=\"k\"\u003etype\u003c/span\u003e \u003cspan class=\"n\"\u003eService\u003c/span\u003e \u003cspan class=\"k\"\u003estruct\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\t\u003cspan class=\"n\"\u003emetav1\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eTypeMeta\u003c/span\u003e\n\t\u003cspan class=\"c\"\u003e// +optional\u003c/span\u003e\n\t\u003cspan class=\"n\"\u003emetav1\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eObjectMeta\u003c/span\u003e\n\n\t\u003cspan class=\"c\"\u003e// Spec defines the behavior of a service.\u003c/span\u003e\n\t\u003cspan class=\"c\"\u003e// +optional\u003c/span\u003e\n\t\u003cspan class=\"n\"\u003eSpec\u003c/span\u003e \u003cspan class=\"n\"\u003eServiceSpec\u003c/span\u003e\n\n\t\u003cspan class=\"c\"\u003e// Status represents the current status of a service.\u003c/span\u003e\n\t\u003cspan class=\"c\"\u003e// +optional\u003c/span\u003e\n\t\u003cspan class=\"n\"\u003eStatus\u003c/span\u003e \u003cspan class=\"n\"\u003eServiceStatus\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e\u003ccode class=\"language-plaintext highlighter-rouge\"\u003eServiceSpec\u003c/code\u003e and \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eServiceStatus\u003c/code\u003e are also defined in that file:\u003c/p\u003e\n\n\u003cdiv class=\"language-go highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"c\"\u003e// https://github.com/kubernetes/kubernetes/blob/v1.24.0/pkg/apis/core/types.go#L3675\u003c/span\u003e\n\n\u003cspan class=\"c\"\u003e// ServiceStatus represents the current status of a service\u003c/span\u003e\n\u003cspan class=\"k\"\u003etype\u003c/span\u003e \u003cspan class=\"n\"\u003eServiceStatus\u003c/span\u003e \u003cspan class=\"k\"\u003estruct\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\t\u003cspan class=\"c\"\u003e// LoadBalancer contains the current status of the load-balancer, if one is present.\u003c/span\u003e\n\t\u003cspan class=\"c\"\u003e// +optional\u003c/span\u003e\n\t\u003cspan class=\"n\"\u003eLoadBalancer\u003c/span\u003e \u003cspan class=\"n\"\u003eLoadBalancerStatus\u003c/span\u003e\n\n\t\u003cspan class=\"c\"\u003e// Current service condition\u003c/span\u003e\n\t\u003cspan class=\"c\"\u003e// +optional\u003c/span\u003e\n\t\u003cspan class=\"n\"\u003eConditions\u003c/span\u003e \u003cspan class=\"p\"\u003e[]\u003c/span\u003e\u003cspan class=\"n\"\u003emetav1\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eCondition\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"c\"\u003e// ServiceSpec describes the attributes that a user creates on a service\u003c/span\u003e\n\u003cspan class=\"k\"\u003etype\u003c/span\u003e \u003cspan class=\"n\"\u003eServiceSpec\u003c/span\u003e \u003cspan class=\"k\"\u003estruct\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\t\u003cspan class=\"n\"\u003eType\u003c/span\u003e \u003cspan class=\"n\"\u003eServiceType\u003c/span\u003e\n\t\u003cspan class=\"n\"\u003ePorts\u003c/span\u003e \u003cspan class=\"p\"\u003e[]\u003c/span\u003e\u003cspan class=\"n\"\u003eServicePort\u003c/span\u003e\n\t\u003cspan class=\"n\"\u003eSelector\u003c/span\u003e \u003cspan class=\"k\"\u003emap\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"kt\"\u003estring\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\u003cspan class=\"kt\"\u003estring\u003c/span\u003e\n\t\u003cspan class=\"n\"\u003eClusterIP\u003c/span\u003e \u003cspan class=\"kt\"\u003estring\u003c/span\u003e\n\t\u003cspan class=\"n\"\u003eClusterIPs\u003c/span\u003e \u003cspan class=\"p\"\u003e[]\u003c/span\u003e\u003cspan class=\"kt\"\u003estring\u003c/span\u003e\n\t\u003cspan class=\"n\"\u003eIPFamilies\u003c/span\u003e \u003cspan class=\"p\"\u003e[]\u003c/span\u003e\u003cspan class=\"n\"\u003eIPFamily\u003c/span\u003e\n\t\u003cspan class=\"n\"\u003eIPFamilyPolicy\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003eIPFamilyPolicyType\u003c/span\u003e\n\t\u003cspan class=\"n\"\u003eExternalName\u003c/span\u003e \u003cspan class=\"kt\"\u003estring\u003c/span\u003e\n\t\u003cspan class=\"n\"\u003eExternalIPs\u003c/span\u003e \u003cspan class=\"p\"\u003e[]\u003c/span\u003e\u003cspan class=\"kt\"\u003estring\u003c/span\u003e\n\t\u003cspan class=\"n\"\u003eLoadBalancerIP\u003c/span\u003e \u003cspan class=\"kt\"\u003estring\u003c/span\u003e\n\t\u003cspan class=\"n\"\u003eSessionAffinity\u003c/span\u003e \u003cspan class=\"n\"\u003eServiceAffinity\u003c/span\u003e\n\t\u003cspan class=\"n\"\u003eSessionAffinityConfig\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003eSessionAffinityConfig\u003c/span\u003e\n\t\u003cspan class=\"n\"\u003eLoadBalancerSourceRanges\u003c/span\u003e \u003cspan class=\"p\"\u003e[]\u003c/span\u003e\u003cspan class=\"kt\"\u003estring\u003c/span\u003e\n\t\u003cspan class=\"n\"\u003eExternalTrafficPolicy\u003c/span\u003e \u003cspan class=\"n\"\u003eServiceExternalTrafficPolicyType\u003c/span\u003e\n\t\u003cspan class=\"n\"\u003eHealthCheckNodePort\u003c/span\u003e \u003cspan class=\"kt\"\u003eint32\u003c/span\u003e\n\t\u003cspan class=\"n\"\u003ePublishNotReadyAddresses\u003c/span\u003e \u003cspan class=\"kt\"\u003ebool\u003c/span\u003e\n\t\u003cspan class=\"n\"\u003eAllocateLoadBalancerNodePorts\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"kt\"\u003ebool\u003c/span\u003e\n\t\u003cspan class=\"n\"\u003eLoadBalancerClass\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"kt\"\u003estring\u003c/span\u003e\n\t\u003cspan class=\"n\"\u003eInternalTrafficPolicy\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003eServiceInternalTrafficPolicyType\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\n\n  \u003c!-- POST NAVIGATION --\u003e\n  \u003cdiv class=\"postNav clearfix\"\u003e\n     \n      \u003ca class=\"prev\" href=\"/blog/birth-of-standard-error-zh/\"\u003e\u003cspan\u003e« [译] 标准错误 stderr 的诞生（2013）\u003c/span\u003e\n      \n    \u003c/a\u003e\n      \n      \n      \u003ca class=\"next\" href=\"/blog/tty-demystified-zh/\"\u003e\u003cspan\u003e[译] TTY 的前世今生（2008） »\u003c/span\u003e\n       \n      \u003c/a\u003e\n     \n  \u003c/div\u003e\n\u003c/div\u003e",
  "Date": "2019-11-30T00:00:00Z",
  "Author": "Arthur Chiao"
}