{
  "Source": "arthurchiao.art",
  "Title": "JuiceFS 元数据引擎三探：从实践中学习 TiKV 的 MVCC 和 GC（2024）",
  "Link": "https://arthurchiao.art/blog/juicefs-metadata-deep-dive-3-zh/",
  "Content": "\u003cdiv class=\"post\"\u003e\n  \n  \u003ch1 class=\"postTitle\"\u003eJuiceFS 元数据引擎三探：从实践中学习 TiKV 的 MVCC 和 GC（2024）\u003c/h1\u003e\n  \u003cp class=\"meta\"\u003ePublished at 2024-09-22 | Last Update 2024-10-10\u003c/p\u003e\n  \n  \u003cp align=\"center\"\u003e\u003cimg src=\"/assets/img/juicefs-metadata-deep-dive/tikv-mvcc-gc-mechanisms.png\" width=\"70%\"/\u003e\u003c/p\u003e\n\u003cp align=\"center\"\u003eFig. TiKV MVCC GC mechanisms.\u003c/p\u003e\n\n\u003cul\u003e\n  \u003cli\u003e\u003ca href=\"/blog/juicefs-metadata-deep-dive-1-zh/\"\u003eJuiceFS 元数据引擎初探：高层架构、引擎选型、读写工作流（2024）\u003c/a\u003e\u003c/li\u003e\n  \u003cli\u003e\u003ca href=\"/blog/juicefs-metadata-deep-dive-2-zh/\"\u003eJuiceFS 元数据引擎再探：开箱解读 TiKV 中的 JuiceFS 元数据（2024）\u003c/a\u003e\u003c/li\u003e\n  \u003cli\u003e\u003ca href=\"/blog/juicefs-metadata-deep-dive-3-zh/\"\u003eJuiceFS 元数据引擎三探：从实践中学习 TiKV 的 MVCC 和 GC（2024）\u003c/a\u003e\u003c/li\u003e\n  \u003cli\u003e\u003ca href=\"/blog/juicefs-metadata-deep-dive-4-zh/\"\u003eJuiceFS 元数据引擎四探：元数据大小评估、限流与限速的设计思考（2024）\u003c/a\u003e\u003c/li\u003e\n  \u003cli\u003e\u003ca href=\"/blog/juicefs-metadata-deep-dive-5-zh/\"\u003eJuiceFS 元数据引擎五探：元数据备份与恢复（2024）\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003e水平及维护精力所限，文中不免存在错误或过时之处，请酌情参考。\n\u003cstrong\u003e\u003cmark\u003e传播知识，尊重劳动，年满十八周岁，转载请注明\u003ca href=\"https://arthurchiao.art\"\u003e出处\u003c/a\u003e\u003c/mark\u003e\u003c/strong\u003e。\u003c/p\u003e\n\n\u003chr/\u003e\n\n\u003cul id=\"markdown-toc\"\u003e\n  \u003cli\u003e\u003ca href=\"#1-概念与实测\" id=\"markdown-toc-1-概念与实测\"\u003e1 概念与实测\u003c/a\u003e    \u003cul\u003e\n      \u003cli\u003e\u003ca href=\"#11-mvcc多版本并发控制\" id=\"markdown-toc-11-mvcc多版本并发控制\"\u003e1.1 MVCC（多版本并发控制）\u003c/a\u003e        \u003cul\u003e\n          \u003cli\u003e\u003ca href=\"#112-tikv-mvcc-测试\" id=\"markdown-toc-112-tikv-mvcc-测试\"\u003e1.1.2 TiKV MVCC 测试\u003c/a\u003e\u003c/li\u003e\n          \u003cli\u003e\u003ca href=\"#112-juicefs-client-日志\" id=\"markdown-toc-112-juicefs-client-日志\"\u003e1.1.2 JuiceFS client 日志\u003c/a\u003e\u003c/li\u003e\n          \u003cli\u003e\u003ca href=\"#113-小结\" id=\"markdown-toc-113-小结\"\u003e1.1.3 小结\u003c/a\u003e\u003c/li\u003e\n        \u003c/ul\u003e\n      \u003c/li\u003e\n      \u003cli\u003e\u003ca href=\"#12-gc垃圾回收\" id=\"markdown-toc-12-gc垃圾回收\"\u003e1.2 GC（垃圾回收）\u003c/a\u003e\u003c/li\u003e\n      \u003cli\u003e\u003ca href=\"#13-safepoint可安全删除这个时间戳之前的版本\" id=\"markdown-toc-13-safepoint可安全删除这个时间戳之前的版本\"\u003e1.3 Safepoint（可安全删除这个时间戳之前的版本）\u003c/a\u003e\u003c/li\u003e\n    \u003c/ul\u003e\n  \u003c/li\u003e\n  \u003cli\u003e\u003ca href=\"#2-tikv-mvcc-gc\" id=\"markdown-toc-2-tikv-mvcc-gc\"\u003e2 TiKV MVCC GC\u003c/a\u003e    \u003cul\u003e\n      \u003cli\u003e\u003ca href=\"#21-历史从-tidb-里面拆分出来功能不完整\" id=\"markdown-toc-21-历史从-tidb-里面拆分出来功能不完整\"\u003e2.1 历史：从 TiDB 里面拆分出来，功能不完整\u003c/a\u003e\u003c/li\u003e\n      \u003cli\u003e\u003ca href=\"#22-tikv-gc-设计和配置项\" id=\"markdown-toc-22-tikv-gc-设计和配置项\"\u003e2.2 TiKV GC 设计和配置项\u003c/a\u003e        \u003cul\u003e\n          \u003cli\u003e\u003ca href=\"#221-设计两种-gc-触发方式\" id=\"markdown-toc-221-设计两种-gc-触发方式\"\u003e2.2.1 设计：两种 GC 触发方式\u003c/a\u003e\u003c/li\u003e\n          \u003cli\u003e\u003ca href=\"#222-tikv-server-启动日志中的-gc-配置信息\" id=\"markdown-toc-222-tikv-server-启动日志中的-gc-配置信息\"\u003e2.2.2 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003etikv-server\u003c/code\u003e 启动日志中的 GC 配置信息\u003c/a\u003e\u003c/li\u003e\n          \u003cli\u003e\u003ca href=\"#223-tikv-ctl-compactcompact-cluster-触发被动-gc-例子\" id=\"markdown-toc-223-tikv-ctl-compactcompact-cluster-触发被动-gc-例子\"\u003e2.2.3 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003etikv-ctl compact/compact-cluster\u003c/code\u003e 触发被动 GC 例子\u003c/a\u003e\u003c/li\u003e\n          \u003cli\u003e\u003ca href=\"#224-小结\" id=\"markdown-toc-224-小结\"\u003e2.2.4 小结\u003c/a\u003e\u003c/li\u003e\n        \u003c/ul\u003e\n      \u003c/li\u003e\n      \u003cli\u003e\u003ca href=\"#23-tidb-中触发-tikv-gc-的方式\" id=\"markdown-toc-23-tidb-中触发-tikv-gc-的方式\"\u003e2.3 TiDB 中触发 TiKV GC 的方式\u003c/a\u003e\u003c/li\u003e\n      \u003cli\u003e\u003ca href=\"#24-juicefs-触发-tikv-gc-的方式\" id=\"markdown-toc-24-juicefs-触发-tikv-gc-的方式\"\u003e2.4 JuiceFS 触发 TiKV GC 的方式\u003c/a\u003e        \u003cul\u003e\n          \u003cli\u003e\u003ca href=\"#241-定期更新-gc-safepoint-的代码\" id=\"markdown-toc-241-定期更新-gc-safepoint-的代码\"\u003e2.4.1 定期更新 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003egc safepoint\u003c/code\u003e 的代码\u003c/a\u003e\u003c/li\u003e\n          \u003cli\u003e\u003ca href=\"#242-配置meta-url-gc-interval1h\" id=\"markdown-toc-242-配置meta-url-gc-interval1h\"\u003e2.4.2 配置：META URL \u003ccode class=\"language-plaintext highlighter-rouge\"\u003e\\?gc-interval=1h\u003c/code\u003e\u003c/a\u003e\u003c/li\u003e\n          \u003cli\u003e\u003ca href=\"#243-juicefs-gc-手动触发-tikv-gc\" id=\"markdown-toc-243-juicefs-gc-手动触发-tikv-gc\"\u003e2.4.3 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003ejuicefs gc\u003c/code\u003e 手动触发 TiKV GC\u003c/a\u003e\u003c/li\u003e\n        \u003c/ul\u003e\n      \u003c/li\u003e\n      \u003cli\u003e\u003ca href=\"#25-外挂组件-githubcomtikvmigrationgc-worker\" id=\"markdown-toc-25-外挂组件-githubcomtikvmigrationgc-worker\"\u003e2.5 外挂组件 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003egithub.com/tikv/migration/gc-worker\u003c/code\u003e\u003c/a\u003e\u003c/li\u003e\n    \u003c/ul\u003e\n  \u003c/li\u003e\n  \u003cli\u003e\u003ca href=\"#3-gc-不及时导致的问题一例\" id=\"markdown-toc-3-gc-不及时导致的问题一例\"\u003e3 GC 不及时导致的问题一例\u003c/a\u003e    \u003cul\u003e\n      \u003cli\u003e\u003ca href=\"#31-问题现象\" id=\"markdown-toc-31-问题现象\"\u003e3.1 问题现象\u003c/a\u003e        \u003cul\u003e\n          \u003cli\u003e\u003ca href=\"#311-监控tikv-db-size-暴增磁盘空间不断减小\" id=\"markdown-toc-311-监控tikv-db-size-暴增磁盘空间不断减小\"\u003e3.1.1 监控：TiKV db size 暴增，磁盘空间不断减小\u003c/a\u003e\u003c/li\u003e\n          \u003cli\u003e\u003ca href=\"#312-tikv-server-错误日志failed-to-split-region\" id=\"markdown-toc-312-tikv-server-错误日志failed-to-split-region\"\u003e3.1.2 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003etikv-server\u003c/code\u003e 错误日志：failed to split region\u003c/a\u003e\u003c/li\u003e\n        \u003c/ul\u003e\n      \u003c/li\u003e\n      \u003cli\u003e\u003ca href=\"#32-问题排查\" id=\"markdown-toc-32-问题排查\"\u003e3.2 问题排查\u003c/a\u003e\u003c/li\u003e\n      \u003cli\u003e\u003ca href=\"#33-问题根因\" id=\"markdown-toc-33-问题根因\"\u003e3.3 问题根因\u003c/a\u003e\u003c/li\u003e\n      \u003cli\u003e\u003ca href=\"#34-解决方式\" id=\"markdown-toc-34-解决方式\"\u003e3.4 解决方式\u003c/a\u003e\u003c/li\u003e\n      \u003cli\u003e\u003ca href=\"#35-问题小结\" id=\"markdown-toc-35-问题小结\"\u003e3.5 问题小结\u003c/a\u003e\u003c/li\u003e\n    \u003c/ul\u003e\n  \u003c/li\u003e\n  \u003cli\u003e\u003ca href=\"#4-问题讨论\" id=\"markdown-toc-4-问题讨论\"\u003e4 问题讨论\u003c/a\u003e    \u003cul\u003e\n      \u003cli\u003e\u003ca href=\"#41-允许的最小-gc-间隔太大\" id=\"markdown-toc-41-允许的最小-gc-间隔太大\"\u003e4.1 允许的\u003cstrong\u003e\u003cmark\u003e最小 GC 间隔\u003c/mark\u003e\u003c/strong\u003e太大\u003c/a\u003e\u003c/li\u003e\n      \u003cli\u003e\u003ca href=\"#42-gc-配置放在客户端增加了用户的认知负担和学习成本\" id=\"markdown-toc-42-gc-配置放在客户端增加了用户的认知负担和学习成本\"\u003e4.2 GC 配置放在客户端，增加了用户的认知负担和学习成本\u003c/a\u003e\u003c/li\u003e\n      \u003cli\u003e\u003ca href=\"#43-管理员运维困境\" id=\"markdown-toc-43-管理员运维困境\"\u003e4.3 管理员运维困境\u003c/a\u003e\u003c/li\u003e\n      \u003cli\u003e\u003ca href=\"#44-小结\" id=\"markdown-toc-44-小结\"\u003e4.4 小结\u003c/a\u003e\u003c/li\u003e\n    \u003c/ul\u003e\n  \u003c/li\u003e\n  \u003cli\u003e\u003ca href=\"#参考资料\" id=\"markdown-toc-参考资料\"\u003e参考资料\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003chr/\u003e\n\n\u003ch1 id=\"1-概念与实测\"\u003e1 概念与实测\u003c/h1\u003e\n\n\u003ch2 id=\"11-mvcc多版本并发控制\"\u003e1.1 MVCC（多版本并发控制）\u003c/h2\u003e\n\n\u003cp\u003e来自 \u003ca href=\"https://en.wikipedia.org/wiki/Multiversion_concurrency_control\"\u003ewikipedia 的定义\u003c/a\u003e，\u003c/p\u003e\n\n\u003cblockquote\u003e\n  \u003cp\u003eMultiversion concurrency control (MCC or MVCC), is a \u003cstrong\u003e\u003cmark\u003e\u003ccode\u003enon-locking\u003c/code\u003e\u003c/mark\u003e\u003c/strong\u003e concurrency\ncontrol method commonly used by database management systems to provide\n\u003cstrong\u003e\u003cmark\u003e\u003ccode\u003econcurrent access\u003c/code\u003e\u003c/mark\u003e\u003c/strong\u003e to the database and in programming languages to implement\n\u003cstrong\u003e\u003cmark\u003e\u003ccode\u003etransactional\u003c/code\u003e\u003c/mark\u003e\u003c/strong\u003e memory.\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eTiKV 支持 MVCC，当更新数据时，旧的数据不会被立即删掉，而是新老同时保留，以时间戳来区分版本。\n官方有几篇很不错的博客 [1,3]。\u003c/p\u003e\n\n\u003cp\u003e下面进行一个简单测试来对 MVCC 有一个初步的直观认识。\u003c/p\u003e\n\n\u003ch3 id=\"112-tikv-mvcc-测试\"\u003e1.1.2 TiKV MVCC 测试\u003c/h3\u003e\n\n\u003cp\u003e参考上一篇，新创建一个新 volume，里面什么文件都没有，有 \u003cstrong\u003e\u003cmark\u003e8 条记录\u003c/mark\u003e\u003c/strong\u003e，\u003c/p\u003e\n\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003e$ \u003c/span\u003etikv-ctl.sh scan \u003cspan class=\"nt\"\u003e--from\u003c/span\u003e \u003cspan class=\"s1\"\u003e\u0026#39;zfoo\u0026#39;\u003c/span\u003e \u003cspan class=\"nt\"\u003e--to\u003c/span\u003e \u003cspan class=\"s1\"\u003e\u0026#39;zfop\u0026#39;\u003c/span\u003e | \u003cspan class=\"nb\"\u003egrep\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;key:\u0026#34;\u003c/span\u003e | \u003cspan class=\"nb\"\u003ewc\u003c/span\u003e \u003cspan class=\"nt\"\u003e-l\u003c/span\u003e\n8\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e然后进入这个 volume 的挂载目录，在里面\u003cstrong\u003e\u003cmark\u003e创建一个文件\u003c/mark\u003e\u003c/strong\u003e，\u003c/p\u003e\n\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003e$ \u003c/span\u003e\u003cspan class=\"nb\"\u003ecd\u003c/span\u003e \u0026lt;mount \u003cspan class=\"nb\"\u003edir\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e\n\u003cspan class=\"nv\"\u003e$ \u003c/span\u003e\u003cspan class=\"nb\"\u003eecho \u003c/span\u003e1 \u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e foo.txt\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e再次扫描这个 volume 对应的所有 keys，\u003c/p\u003e\n\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003e$ \u003c/span\u003etikv-ctl.sh scan \u003cspan class=\"nt\"\u003e--from\u003c/span\u003e \u003cspan class=\"s1\"\u003e\u0026#39;zfoo\u0026#39;\u003c/span\u003e \u003cspan class=\"nt\"\u003e--to\u003c/span\u003e \u003cspan class=\"s1\"\u003e\u0026#39;zfop\u0026#39;\u003c/span\u003e | \u003cspan class=\"nb\"\u003egrep\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;key:\u0026#34;\u003c/span\u003e | \u003cspan class=\"nb\"\u003ewc\u003c/span\u003e \u003cspan class=\"nt\"\u003e-l\u003c/span\u003e\n16\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e可以看到变成 16 条记录，比之前\u003cstrong\u003e\u003cmark\u003e多了 8 条\u003c/mark\u003e\u003c/strong\u003e。内容如下，依稀能看出大部分条目的用途\n（\u003cstrong\u003e\u003cmark\u003e行末的注释\u003c/mark\u003e\u003c/strong\u003e是本文加的），\u003c/p\u003e\n\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003ekey: zfoo-dev\u003cspan class=\"se\"\u003e\\3\u003c/span\u003e75\u003cspan class=\"se\"\u003e\\3\u003c/span\u003e77A\u003cspan class=\"se\"\u003e\\0\u003c/span\u003e01\u003cspan class=\"se\"\u003e\\0\u003c/span\u003e00\u003cspan class=\"se\"\u003e\\0\u003c/span\u003e00\u003cspan class=\"se\"\u003e\\0\u003c/span\u003e00\u003cspan class=\"se\"\u003e\\0\u003c/span\u003e00\u003cspan class=\"se\"\u003e\\0\u003c/span\u003e00\u003cspan class=\"se\"\u003e\\0\u003c/span\u003e00\u003cspan class=\"se\"\u003e\\3\u003c/span\u003e77\u003cspan class=\"se\"\u003e\\0\u003c/span\u003e00Dfoo.tx\u003cspan class=\"se\"\u003e\\3\u003c/span\u003e77t\u003cspan class=\"se\"\u003e\\0\u003c/span\u003e00\u003cspan class=\"se\"\u003e\\0\u003c/span\u003e00\u003cspan class=\"se\"\u003e\\0\u003c/span\u003e00\u003cspan class=\"se\"\u003e\\0\u003c/span\u003e00\u003cspan class=\"se\"\u003e\\0\u003c/span\u003e00\u003cspan class=\"se\"\u003e\\0\u003c/span\u003e00\u003cspan class=\"se\"\u003e\\0\u003c/span\u003e00\u003cspan class=\"se\"\u003e\\3\u003c/span\u003e70 \u003cspan class=\"c\"\u003e# foo.txt\u003c/span\u003e\nkey: zfoo-dev\u003cspan class=\"se\"\u003e\\3\u003c/span\u003e75\u003cspan class=\"se\"\u003e\\3\u003c/span\u003e77A\u003cspan class=\"se\"\u003e\\0\u003c/span\u003e02\u003cspan class=\"se\"\u003e\\0\u003c/span\u003e00\u003cspan class=\"se\"\u003e\\0\u003c/span\u003e00\u003cspan class=\"se\"\u003e\\0\u003c/span\u003e00\u003cspan class=\"se\"\u003e\\0\u003c/span\u003e00\u003cspan class=\"se\"\u003e\\0\u003c/span\u003e00\u003cspan class=\"se\"\u003e\\0\u003c/span\u003e00\u003cspan class=\"se\"\u003e\\3\u003c/span\u003e77\u003cspan class=\"se\"\u003e\\0\u003c/span\u003e00C\u003cspan class=\"se\"\u003e\\0\u003c/span\u003e00\u003cspan class=\"se\"\u003e\\0\u003c/span\u003e00\u003cspan class=\"se\"\u003e\\0\u003c/span\u003e00\u003cspan class=\"se\"\u003e\\0\u003c/span\u003e00\u003cspan class=\"se\"\u003e\\0\u003c/span\u003e00\u003cspan class=\"se\"\u003e\\0\u003c/span\u003e00\u003cspan class=\"se\"\u003e\\3\u003c/span\u003e75\nkey: zfoo-dev\u003cspan class=\"se\"\u003e\\3\u003c/span\u003e75\u003cspan class=\"se\"\u003e\\3\u003c/span\u003e77A\u003cspan class=\"se\"\u003e\\0\u003c/span\u003e02\u003cspan class=\"se\"\u003e\\0\u003c/span\u003e00\u003cspan class=\"se\"\u003e\\0\u003c/span\u003e00\u003cspan class=\"se\"\u003e\\0\u003c/span\u003e00\u003cspan class=\"se\"\u003e\\0\u003c/span\u003e00\u003cspan class=\"se\"\u003e\\0\u003c/span\u003e00\u003cspan class=\"se\"\u003e\\0\u003c/span\u003e00\u003cspan class=\"se\"\u003e\\3\u003c/span\u003e77\u003cspan class=\"se\"\u003e\\0\u003c/span\u003e00I\u003cspan class=\"se\"\u003e\\0\u003c/span\u003e00\u003cspan class=\"se\"\u003e\\0\u003c/span\u003e00\u003cspan class=\"se\"\u003e\\0\u003c/span\u003e00\u003cspan class=\"se\"\u003e\\0\u003c/span\u003e00\u003cspan class=\"se\"\u003e\\0\u003c/span\u003e00\u003cspan class=\"se\"\u003e\\0\u003c/span\u003e00\u003cspan class=\"se\"\u003e\\3\u003c/span\u003e71\nkey: zfoo-dev\u003cspan class=\"se\"\u003e\\3\u003c/span\u003e75\u003cspan class=\"se\"\u003e\\3\u003c/span\u003e77ClastCle\u003cspan class=\"se\"\u003e\\3\u003c/span\u003e77anupFile\u003cspan class=\"se\"\u003e\\3\u003c/span\u003e77s\u003cspan class=\"se\"\u003e\\0\u003c/span\u003e00\u003cspan class=\"se\"\u003e\\0\u003c/span\u003e00\u003cspan class=\"se\"\u003e\\0\u003c/span\u003e00\u003cspan class=\"se\"\u003e\\0\u003c/span\u003e00\u003cspan class=\"se\"\u003e\\0\u003c/span\u003e00\u003cspan class=\"se\"\u003e\\0\u003c/span\u003e00\u003cspan class=\"se\"\u003e\\0\u003c/span\u003e00\u003cspan class=\"se\"\u003e\\3\u003c/span\u003e70                         \u003cspan class=\"c\"\u003e# lastCleanupFile\u003c/span\u003e\nkey: zfoo-dev\u003cspan class=\"se\"\u003e\\3\u003c/span\u003e75\u003cspan class=\"se\"\u003e\\3\u003c/span\u003e77ClastCle\u003cspan class=\"se\"\u003e\\3\u003c/span\u003e77anupSess\u003cspan class=\"se\"\u003e\\3\u003c/span\u003e77ions\u003cspan class=\"se\"\u003e\\0\u003c/span\u003e00\u003cspan class=\"se\"\u003e\\0\u003c/span\u003e00\u003cspan class=\"se\"\u003e\\0\u003c/span\u003e00\u003cspan class=\"se\"\u003e\\0\u003c/span\u003e00\u003cspan class=\"se\"\u003e\\3\u003c/span\u003e73                                  \u003cspan class=\"c\"\u003e# lastCleanupSessions\u003c/span\u003e\nkey: zfoo-dev\u003cspan class=\"se\"\u003e\\3\u003c/span\u003e75\u003cspan class=\"se\"\u003e\\3\u003c/span\u003e77CtotalIn\u003cspan class=\"se\"\u003e\\3\u003c/span\u003e77odes\u003cspan class=\"se\"\u003e\\0\u003c/span\u003e00\u003cspan class=\"se\"\u003e\\0\u003c/span\u003e00\u003cspan class=\"se\"\u003e\\0\u003c/span\u003e00\u003cspan class=\"se\"\u003e\\0\u003c/span\u003e00\u003cspan class=\"se\"\u003e\\3\u003c/span\u003e73                                              \u003cspan class=\"c\"\u003e# totalInodes\u003c/span\u003e\nkey: zfoo-dev\u003cspan class=\"se\"\u003e\\3\u003c/span\u003e75\u003cspan class=\"se\"\u003e\\3\u003c/span\u003e77CusedSpa\u003cspan class=\"se\"\u003e\\3\u003c/span\u003e77ce\u003cspan class=\"se\"\u003e\\0\u003c/span\u003e00\u003cspan class=\"se\"\u003e\\0\u003c/span\u003e00\u003cspan class=\"se\"\u003e\\0\u003c/span\u003e00\u003cspan class=\"se\"\u003e\\0\u003c/span\u003e00\u003cspan class=\"se\"\u003e\\0\u003c/span\u003e00\u003cspan class=\"se\"\u003e\\0\u003c/span\u003e00\u003cspan class=\"se\"\u003e\\3\u003c/span\u003e71                                        \u003cspan class=\"c\"\u003e# UsedSpace\u003c/span\u003e\nkey: zfoo-dev\u003cspan class=\"se\"\u003e\\3\u003c/span\u003e75\u003cspan class=\"se\"\u003e\\3\u003c/span\u003e77U\u003cspan class=\"se\"\u003e\\0\u003c/span\u003e01\u003cspan class=\"se\"\u003e\\0\u003c/span\u003e00\u003cspan class=\"se\"\u003e\\0\u003c/span\u003e00\u003cspan class=\"se\"\u003e\\0\u003c/span\u003e00\u003cspan class=\"se\"\u003e\\0\u003c/span\u003e00\u003cspan class=\"se\"\u003e\\0\u003c/span\u003e00\u003cspan class=\"se\"\u003e\\0\u003c/span\u003e00\u003cspan class=\"se\"\u003e\\3\u003c/span\u003e77\u003cspan class=\"se\"\u003e\\0\u003c/span\u003e00\u003cspan class=\"se\"\u003e\\0\u003c/span\u003e00\u003cspan class=\"se\"\u003e\\0\u003c/span\u003e00\u003cspan class=\"se\"\u003e\\0\u003c/span\u003e00\u003cspan class=\"se\"\u003e\\0\u003c/span\u003e00\u003cspan class=\"se\"\u003e\\0\u003c/span\u003e00\u003cspan class=\"se\"\u003e\\0\u003c/span\u003e00\u003cspan class=\"se\"\u003e\\0\u003c/span\u003e00\u003cspan class=\"se\"\u003e\\3\u003c/span\u003e70\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e接下来继续\u003cstrong\u003e\u003cmark\u003e更新这个文件 1000 次\u003c/mark\u003e\u003c/strong\u003e（每次都是一个整数，由于文件内容极小，不会导致 TiKV 的 region split 等行为），\u003c/p\u003e\n\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003e$ \u003c/span\u003e\u003cspan class=\"k\"\u003efor \u003c/span\u003en \u003cspan class=\"k\"\u003ein\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e1..1000\u003cspan class=\"o\"\u003e}\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"k\"\u003edo \u003c/span\u003e\u003cspan class=\"nb\"\u003eecho\u003c/span\u003e \u003cspan class=\"nv\"\u003e$n\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e bar.txt\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"k\"\u003edone\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e再次查看元数据条目数量：\u003c/p\u003e\n\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003e$ \u003c/span\u003etikv-ctl.sh scan \u003cspan class=\"nt\"\u003e--from\u003c/span\u003e \u003cspan class=\"s1\"\u003e\u0026#39;zfoo\u0026#39;\u003c/span\u003e \u003cspan class=\"nt\"\u003e--to\u003c/span\u003e \u003cspan class=\"s1\"\u003e\u0026#39;zfop\u0026#39;\u003c/span\u003e | \u003cspan class=\"nb\"\u003egrep \u003c/span\u003ekey | \u003cspan class=\"nb\"\u003ewc\u003c/span\u003e \u003cspan class=\"nt\"\u003e-l\u003c/span\u003e\n59\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e又\u003cstrong\u003e\u003cmark\u003e多了 43 条\u003c/mark\u003e\u003c/strong\u003e。多的条目大致长这样：\u003c/p\u003e\n\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003ekey: zfoo-dev\u003cspan class=\"se\"\u003e\\3\u003c/span\u003e75\u003cspan class=\"se\"\u003e\\3\u003c/span\u003e77L\u003cspan class=\"se\"\u003e\\0\u003c/span\u003e00\u003cspan class=\"se\"\u003e\\0\u003c/span\u003e00\u003cspan class=\"se\"\u003e\\0\u003c/span\u003e00\u003cspan class=\"se\"\u003e\\0\u003c/span\u003e00f\u003cspan class=\"se\"\u003e\\3\u003c/span\u003e56\u003cspan class=\"se\"\u003e\\2\u003c/span\u003e21\u003cspan class=\"se\"\u003e\\3\u003c/span\u003e77\u003cspan class=\"se\"\u003e\\2\u003c/span\u003e31\u003cspan class=\"se\"\u003e\\0\u003c/span\u003e00\u003cspan class=\"se\"\u003e\\0\u003c/span\u003e00\u003cspan class=\"se\"\u003e\\0\u003c/span\u003e00\u003cspan class=\"se\"\u003e\\0\u003c/span\u003e00\u003cspan class=\"se\"\u003e\\0\u003c/span\u003e00\u003cspan class=\"se\"\u003e\\0\u003c/span\u003e00\u003cspan class=\"se\"\u003e\\0\u003c/span\u003e00\u003cspan class=\"se\"\u003e\\3\u003c/span\u003e777\u003cspan class=\"se\"\u003e\\0\u003c/span\u003e00\u003cspan class=\"se\"\u003e\\0\u003c/span\u003e00\u003cspan class=\"se\"\u003e\\0\u003c/span\u003e00\u003cspan class=\"se\"\u003e\\0\u003c/span\u003e00\u003cspan class=\"se\"\u003e\\0\u003c/span\u003e00\u003cspan class=\"se\"\u003e\\0\u003c/span\u003e00\u003cspan class=\"se\"\u003e\\0\u003c/span\u003e00\u003cspan class=\"se\"\u003e\\3\u003c/span\u003e70\nkey: zfoo-dev\u003cspan class=\"se\"\u003e\\3\u003c/span\u003e75\u003cspan class=\"se\"\u003e\\3\u003c/span\u003e77L\u003cspan class=\"se\"\u003e\\0\u003c/span\u003e00\u003cspan class=\"se\"\u003e\\0\u003c/span\u003e00\u003cspan class=\"se\"\u003e\\0\u003c/span\u003e00\u003cspan class=\"se\"\u003e\\0\u003c/span\u003e00f\u003cspan class=\"se\"\u003e\\3\u003c/span\u003e56\u003cspan class=\"se\"\u003e\\2\u003c/span\u003e21\u003cspan class=\"se\"\u003e\\3\u003c/span\u003e77\u003cspan class=\"se\"\u003e\\2\u003c/span\u003e33\u003cspan class=\"se\"\u003e\\0\u003c/span\u003e00\u003cspan class=\"se\"\u003e\\0\u003c/span\u003e00\u003cspan class=\"se\"\u003e\\0\u003c/span\u003e00\u003cspan class=\"se\"\u003e\\0\u003c/span\u003e00\u003cspan class=\"se\"\u003e\\0\u003c/span\u003e00\u003cspan class=\"se\"\u003e\\0\u003c/span\u003e00\u003cspan class=\"se\"\u003e\\0\u003c/span\u003e00\u003cspan class=\"se\"\u003e\\3\u003c/span\u003e77j\u003cspan class=\"se\"\u003e\\0\u003c/span\u003e00\u003cspan class=\"se\"\u003e\\0\u003c/span\u003e00\u003cspan class=\"se\"\u003e\\0\u003c/span\u003e00\u003cspan class=\"se\"\u003e\\0\u003c/span\u003e00\u003cspan class=\"se\"\u003e\\0\u003c/span\u003e00\u003cspan class=\"se\"\u003e\\0\u003c/span\u003e00\u003cspan class=\"se\"\u003e\\0\u003c/span\u003e00\u003cspan class=\"se\"\u003e\\3\u003c/span\u003e70\nkey: zfoo-dev\u003cspan class=\"se\"\u003e\\3\u003c/span\u003e75\u003cspan class=\"se\"\u003e\\3\u003c/span\u003e77L\u003cspan class=\"se\"\u003e\\0\u003c/span\u003e00\u003cspan class=\"se\"\u003e\\0\u003c/span\u003e00\u003cspan class=\"se\"\u003e\\0\u003c/span\u003e00\u003cspan class=\"se\"\u003e\\0\u003c/span\u003e00f\u003cspan class=\"se\"\u003e\\3\u003c/span\u003e56\u003cspan class=\"se\"\u003e\\2\u003c/span\u003e21\u003cspan class=\"se\"\u003e\\3\u003c/span\u003e77\u003cspan class=\"se\"\u003e\\2\u003c/span\u003e34\u003cspan class=\"se\"\u003e\\0\u003c/span\u003e00\u003cspan class=\"se\"\u003e\\0\u003c/span\u003e00\u003cspan class=\"se\"\u003e\\0\u003c/span\u003e00\u003cspan class=\"se\"\u003e\\0\u003c/span\u003e00\u003cspan class=\"se\"\u003e\\0\u003c/span\u003e00\u003cspan class=\"se\"\u003e\\0\u003c/span\u003e00\u003cspan class=\"se\"\u003e\\0\u003c/span\u003e00\u003cspan class=\"se\"\u003e\\3\u003c/span\u003e77\u003cspan class=\"se\"\u003e\\2\u003c/span\u003e35\u003cspan class=\"se\"\u003e\\0\u003c/span\u003e00\u003cspan class=\"se\"\u003e\\0\u003c/span\u003e00\u003cspan class=\"se\"\u003e\\0\u003c/span\u003e00\u003cspan class=\"se\"\u003e\\0\u003c/span\u003e00\u003cspan class=\"se\"\u003e\\0\u003c/span\u003e00\u003cspan class=\"se\"\u003e\\0\u003c/span\u003e00\u003cspan class=\"se\"\u003e\\0\u003c/span\u003e00\u003cspan class=\"se\"\u003e\\3\u003c/span\u003e70\n...\nkey: zfoo-dev\u003cspan class=\"se\"\u003e\\3\u003c/span\u003e75\u003cspan class=\"se\"\u003e\\3\u003c/span\u003e77L\u003cspan class=\"se\"\u003e\\0\u003c/span\u003e00\u003cspan class=\"se\"\u003e\\0\u003c/span\u003e00\u003cspan class=\"se\"\u003e\\0\u003c/span\u003e00\u003cspan class=\"se\"\u003e\\0\u003c/span\u003e00f\u003cspan class=\"se\"\u003e\\3\u003c/span\u003e56\u003cspan class=\"se\"\u003e\\2\u003c/span\u003e21\u003cspan class=\"se\"\u003e\\3\u003c/span\u003e77\u003cspan class=\"se\"\u003e\\2\u003c/span\u003e71\u003cspan class=\"se\"\u003e\\0\u003c/span\u003e00\u003cspan class=\"se\"\u003e\\0\u003c/span\u003e00\u003cspan class=\"se\"\u003e\\0\u003c/span\u003e00\u003cspan class=\"se\"\u003e\\0\u003c/span\u003e00\u003cspan class=\"se\"\u003e\\0\u003c/span\u003e00\u003cspan class=\"se\"\u003e\\0\u003c/span\u003e00\u003cspan class=\"se\"\u003e\\0\u003c/span\u003e03\u003cspan class=\"se\"\u003e\\3\u003c/span\u003e77\u003cspan class=\"se\"\u003e\\3\u003c/span\u003e62\u003cspan class=\"se\"\u003e\\0\u003c/span\u003e00\u003cspan class=\"se\"\u003e\\0\u003c/span\u003e00\u003cspan class=\"se\"\u003e\\0\u003c/span\u003e00\u003cspan class=\"se\"\u003e\\0\u003c/span\u003e00\u003cspan class=\"se\"\u003e\\0\u003c/span\u003e00\u003cspan class=\"se\"\u003e\\0\u003c/span\u003e00\u003cspan class=\"se\"\u003e\\0\u003c/span\u003e00\u003cspan class=\"se\"\u003e\\3\u003c/span\u003e70\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cblockquote\u003e\n  \u003cp\u003eTiKV supports MVCC, which means that there can be multiple versions for the\nsame row stored in RocksDB. \u003cstrong\u003e\u003cmark\u003e\u003ccode\u003eAll versions of the same row share the same prefix\u003c/code\u003e\u003c/mark\u003e\u003c/strong\u003e\n(the row key) but have \u003cstrong\u003e\u003cmark\u003e\u003ccode\u003edifferent timestamps as a suffix\u003c/code\u003e\u003c/mark\u003e\u003c/strong\u003e.\u003c/p\u003e\n\n  \u003cp\u003ehttps://tikv.org/deep-dive/key-value-engine/rocksdb/\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003e下面我们再看看执行以上文件更新操作期间，juicefs 客户端的日志。\u003c/p\u003e\n\n\u003ch3 id=\"112-juicefs-client-日志\"\u003e1.1.2 JuiceFS client 日志\u003c/h3\u003e\n\n\u003cp\u003e在执行以上 for 循环期间，JuiceFS client 的日志，\u003c/p\u003e\n\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003e$ \u003c/span\u003ejuicefs mount ...\n...\n\u0026lt;DEBUG\u0026gt;: PUT chunks/0/0/170_0_4 \u003cspan class=\"o\"\u003e(\u003c/span\u003ereq_id: \u003cspan class=\"s2\"\u003e\u0026#34;xx\u0026#34;\u003c/span\u003e, err: \u0026lt;nil\u0026gt;, cost: 32.002516ms\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e[\u003c/span\u003ecached_store.go:669]\n\u0026lt;DEBUG\u0026gt;: PUT chunks/0/0/171_0_4 \u003cspan class=\"o\"\u003e(\u003c/span\u003ereq_id: \u003cspan class=\"s2\"\u003e\u0026#34;xx\u0026#34;\u003c/span\u003e, err: \u0026lt;nil\u0026gt;, cost: 32.002516ms\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e[\u003c/span\u003ecached_store.go:669]\n\u0026lt;DEBUG\u0026gt;: PUT chunks/0/0/172_0_4 \u003cspan class=\"o\"\u003e(\u003c/span\u003ereq_id: \u003cspan class=\"s2\"\u003e\u0026#34;xx\u0026#34;\u003c/span\u003e, err: \u0026lt;nil\u0026gt;, cost: 32.002516ms\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e[\u003c/span\u003ecached_store.go:669]\n...\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e这个似乎对应的就是以上多出来的条目。\u003c/p\u003e\n\n\u003ch3 id=\"113-小结\"\u003e1.1.3 小结\u003c/h3\u003e\n\n\u003cp\u003e本节的例子让我们看到，虽然 volume 里面\u003cstrong\u003e\u003cmark\u003e从头到尾只有一个文件\u003c/mark\u003e\u003c/strong\u003e，\n但随着我们不断覆盖这个文件内的值，元数据引擎 \u003cstrong\u003e\u003cmark\u003eTiKV 内的条目数量就会持续增加\u003c/mark\u003e\u003c/strong\u003e。\n多出来的这些东西，对应的就是这份数据的多个版本，也就是 MVCC 里面 \u003cstrong\u003e\u003cmark\u003e\u003ccode\u003emulti-version\u003c/code\u003e\u003c/mark\u003e\u003c/strong\u003e 的表现。\u003c/p\u003e\n\n\u003cp\u003e显然，没有冲突的话，只保留最后一个版本就行了，\u003cstrong\u003e\u003cmark\u003e其他版本都可以删掉\u003c/mark\u003e\u003c/strong\u003e —— 这就是\u003cstrong\u003e\u003cmark\u003e垃圾回收（GC）\u003c/mark\u003e\u003c/strong\u003e的作用。\u003c/p\u003e\n\n\u003ch2 id=\"12-gc垃圾回收\"\u003e1.2 GC（垃圾回收）\u003c/h2\u003e\n\n\u003cp\u003e垃圾回收 (GC) 的功能是清理 MVCC 留下的旧版本。比如同一份数据保存了 1000 个版本，那原则上前面大部分版本都可以清掉了，只保留最新的一个或几个。\u003c/p\u003e\n\n\u003cp\u003e那如何判断哪些版本可以\u003cstrong\u003e\u003cmark\u003e安全\u003c/mark\u003e\u003c/strong\u003e地清掉呢？TiKV 引入了一个时间戳概念：\n\u003cstrong\u003e\u003cmark\u003e\u003ccode\u003esafepoint\u003c/code\u003e\u003c/mark\u003e\u003c/strong\u003e。\u003c/p\u003e\n\n\u003cblockquote\u003e\n  \u003cp\u003eGC is a process to clean up garbage versions (versions older than the configured lifetime) of each row.\u003c/p\u003e\n\n  \u003cp\u003ehttps://tikv.org/deep-dive/key-value-engine/rocksdb/\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003ch2 id=\"13-safepoint可安全删除这个时间戳之前的版本\"\u003e1.3 Safepoint（可安全删除这个时间戳之前的版本）\u003c/h2\u003e\n\n\u003cblockquote\u003e\n  \u003cp\u003eIn order to ensure the correctness of all read and write transactions, and make\nsure the GC mechanism works, TiKV/TiDB introduced the concept of safe-point.\nThere is a guarantee that\n\u003cstrong\u003e\u003cmark\u003e\u003ccode\u003eall active transactions and future transactions’ timestamp is greater than or equal to the safe-point\u003c/code\u003e\u003c/mark\u003e\u003c/strong\u003e.\nIt means \u003cstrong\u003e\u003cmark\u003e\u003ccode\u003eold versions whose commit-ts is less than the safe-point can be safely deleted\u003c/code\u003e\u003c/mark\u003e\u003c/strong\u003e by GC. [3]\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003ch1 id=\"2-tikv-mvcc-gc\"\u003e2 TiKV MVCC GC\u003c/h1\u003e\n\n\u003cp\u003e以上看到，TiKV 有 GC 功能，但由于其“历史出身”，也存在一些限制。\u003c/p\u003e\n\n\u003ch2 id=\"21-历史从-tidb-里面拆分出来功能不完整\"\u003e2.1 历史：从 TiDB 里面拆分出来，功能不完整\u003c/h2\u003e\n\n\u003cp\u003eTiKV 是从 TiDB 里面拆出来的一个产品，并不是从一开始就作为独立产品设计和开发的。\n这导致的一个问题是：MVCC GC 功能在使用上有点蹩脚：\u003c/p\u003e\n\n\u003col\u003e\n  \u003cli\u003e默认情况下，靠底层 RocksDB 的 compaction 触发 GC，这周触发周期不确定且一般比较长；\u003c/li\u003e\n  \u003cli\u003eTiKV+PD 也内置了另一种 GC 方式，但并不会自己主动去做，而是将 GC 接口暴露出来，\u003cstrong\u003e\u003cmark\u003e靠 TiDB 等在使用 TiKV 的更上层组件来触发\u003c/mark\u003e\u003c/strong\u003e（见下节的图）；\u003c/li\u003e\n  \u003cli\u003e\u003ccode class=\"language-plaintext highlighter-rouge\"\u003etikv-ctl/pd-ctl\u003c/code\u003e 等等命令行工具也都\u003cstrong\u003e\u003cmark\u003e没有提供 GC 功能\u003c/mark\u003e\u003c/strong\u003e，这导致 TiKV 的运维很不方便，比如有问题想快速手动触发时用不了。\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003cp\u003e下面具体看看 TiKV 中的 GC 设计。\u003c/p\u003e\n\n\u003ch2 id=\"22-tikv-gc-设计和配置项\"\u003e2.2 TiKV GC 设计和配置项\u003c/h2\u003e\n\n\u003cp align=\"center\"\u003e\u003cimg src=\"/assets/img/juicefs-metadata-deep-dive/tikv-mvcc-gc-mechanisms.png\" width=\"70%\"/\u003e\u003c/p\u003e\n\u003cp align=\"center\"\u003eFig. TiKV MVCC GC mechanisms.\u003c/p\u003e\n\n\u003ch3 id=\"221-设计两种-gc-触发方式\"\u003e2.2.1 设计：两种 GC 触发方式\u003c/h3\u003e\n\n\u003col\u003e\n  \u003cli\u003e\u003cstrong\u003e\u003cmark\u003e被动 GC\u003c/mark\u003e\u003c/strong\u003e：TiKV 底层的 RocksDB compact 时进行垃圾回收。\n    \u003cul\u003e\n      \u003cli\u003e通过 tikv-server 的 \u003ca href=\"https://github.com/tikv/tikv/blob/v8.3.0/etc/config-template.toml#L1351\"\u003eenable-compaction-filter\u003c/a\u003e 配置项控制；\u003c/li\u003e\n      \u003cli\u003e\u003cstrong\u003e\u003cmark\u003e默认启用\u003c/mark\u003e\u003c/strong\u003e；\u003c/li\u003e\n      \u003cli\u003e触发 RocksDB compaction 时才能进行 GC。\u003c/li\u003e\n      \u003cli\u003e\u003cstrong\u003e\u003cmark\u003e\u003ccode\u003etikv-ctl compact/compact-cluster\u003c/code\u003e\u003c/mark\u003e\u003c/strong\u003e 可以手动触发这种 compact，进而 GC。\u003c/li\u003e\n    \u003c/ul\u003e\n  \u003c/li\u003e\n  \u003cli\u003e\u003cstrong\u003e\u003cmark\u003e半主动 GC\u003c/mark\u003e\u003c/strong\u003e：内置了 GC worker，\n    \u003cul\u003e\n      \u003cli\u003e定期获取 PD 里面的 gc safepoint，然后进行 GC；会占用一些 CPU/IO 资源；\u003c/li\u003e\n      \u003cli\u003ePD 不会主动更新这个 gc safepoint，一般是由\u003cstrong\u003e\u003cmark\u003e在使用 TiKV 的更外围组件\u003c/mark\u003e\u003c/strong\u003e来更新的，例如 TiDB、JuiceFS 等等；\u003c/li\u003e\n      \u003cli\u003e所以本文把这种方式称为“半主动”。\u003c/li\u003e\n    \u003c/ul\u003e\n  \u003c/li\u003e\n\u003c/ol\u003e\n\n\u003ch3 id=\"222-tikv-server-启动日志中的-gc-配置信息\"\u003e2.2.2 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003etikv-server\u003c/code\u003e 启动日志中的 GC 配置信息\u003c/h3\u003e\n\n\u003cp\u003e\u003ccode class=\"language-plaintext highlighter-rouge\"\u003etikv-server.log\u003c/code\u003e，\u003c/p\u003e\n\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"o\"\u003e[\u003c/span\u003eINFO] \u003cspan class=\"o\"\u003e[\u003c/span\u003eserver.rs:274] \u003cspan class=\"o\"\u003e[\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;using config\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e]\u003c/span\u003e \u003cspan class=\"o\"\u003e[\u003c/span\u003e\u003cspan class=\"nv\"\u003econfig\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;{..., \u0026#34;\u003c/span\u003eenable-compaction-filter\u003cspan class=\"s2\"\u003e\u0026#34;:true, ...}\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e]\u003c/span\u003e\n\u003cspan class=\"o\"\u003e[\u003c/span\u003eINFO] \u003cspan class=\"o\"\u003e[\u003c/span\u003ecompaction_filter.rs:138] \u003cspan class=\"o\"\u003e[\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;initialize GC context for compaction filter\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e]\u003c/span\u003e\n\u003cspan class=\"o\"\u003e[\u003c/span\u003eINFO] \u003cspan class=\"o\"\u003e[\u003c/span\u003egc_worker.rs:786] \u003cspan class=\"o\"\u003e[\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;initialize compaction filter to perform GC when necessary\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e]\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003ch3 id=\"223-tikv-ctl-compactcompact-cluster-触发被动-gc-例子\"\u003e2.2.3 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003etikv-ctl compact/compact-cluster\u003c/code\u003e 触发被动 GC 例子\u003c/h3\u003e\n\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"c\"\u003e# compact-cluster 必须要指定 --pd 参数，因为针对是整个集群。指定 --host 会失败，但没有提示错在哪，TiKV 的命令行工具经常这样\u003c/span\u003e\n\u003cspan class=\"nv\"\u003e$ \u003c/span\u003etikv-ctl.sh compact-cluster \u003cspan class=\"nt\"\u003e--from\u003c/span\u003e \u003cspan class=\"s1\"\u003e\u0026#39;zfoo\u0026#39;\u003c/span\u003e \u003cspan class=\"nt\"\u003e--to\u003c/span\u003e \u003cspan class=\"s1\"\u003e\u0026#39;zfop\u0026#39;\u003c/span\u003e \n\n\u003cspan class=\"nv\"\u003e$ \u003c/span\u003etikv-ctl.sh compact \u003cspan class=\"nt\"\u003e--from\u003c/span\u003e \u003cspan class=\"s1\"\u003e\u0026#39;zfoo\u0026#39;\u003c/span\u003e \u003cspan class=\"nt\"\u003e--to\u003c/span\u003e \u003cspan class=\"s1\"\u003e\u0026#39;zfop\u0026#39;\u003c/span\u003e\nstore:\u003cspan class=\"s2\"\u003e\u0026#34;192.168.1.1:20160\u0026#34;\u003c/span\u003e compact db:Kv cf:default range:[[122, 122, 121, 110], \u003cspan class=\"o\"\u003e[\u003c/span\u003e122, 122, 121, 111]\u003cspan class=\"o\"\u003e)\u003c/span\u003e success!\n\n\u003cspan class=\"nv\"\u003e$ \u003c/span\u003etikv-ctl.sh compact \u003cspan class=\"nt\"\u003e--from\u003c/span\u003e \u003cspan class=\"s1\"\u003e\u0026#39;zfoo\u0026#39;\u003c/span\u003e \u003cspan class=\"nt\"\u003e--to\u003c/span\u003e \u003cspan class=\"s1\"\u003e\u0026#39;zfop\u0026#39;\u003c/span\u003e \u003cspan class=\"nt\"\u003e-c\u003c/span\u003e default  \u003cspan class=\"c\"\u003e# 很快\u003c/span\u003e\n\u003cspan class=\"nv\"\u003e$ \u003c/span\u003etikv-ctl.sh compact \u003cspan class=\"nt\"\u003e--from\u003c/span\u003e \u003cspan class=\"s1\"\u003e\u0026#39;zfoo\u0026#39;\u003c/span\u003e \u003cspan class=\"nt\"\u003e--to\u003c/span\u003e \u003cspan class=\"s1\"\u003e\u0026#39;zfop\u0026#39;\u003c/span\u003e \u003cspan class=\"nt\"\u003e-c\u003c/span\u003e lock     \u003cspan class=\"c\"\u003e# 很快\u003c/span\u003e\nstore:\u003cspan class=\"s2\"\u003e\u0026#34;192.168.1.1:20160\u0026#34;\u003c/span\u003e compact db:Kv cf:lock range:[[122, 122, 121, 110], \u003cspan class=\"o\"\u003e[\u003c/span\u003e122, 122, 121, 111]\u003cspan class=\"o\"\u003e)\u003c/span\u003e success!\n\u003cspan class=\"nv\"\u003e$ \u003c/span\u003etikv-ctl.sh compact \u003cspan class=\"nt\"\u003e--from\u003c/span\u003e \u003cspan class=\"s1\"\u003e\u0026#39;zfoo\u0026#39;\u003c/span\u003e \u003cspan class=\"nt\"\u003e--to\u003c/span\u003e \u003cspan class=\"s1\"\u003e\u0026#39;zfop\u0026#39;\u003c/span\u003e \u003cspan class=\"nt\"\u003e-c\u003c/span\u003e write    \u003cspan class=\"c\"\u003e# 非常慢\u003c/span\u003e\nstore:\u003cspan class=\"s2\"\u003e\u0026#34;192.168.1.1:20160\u0026#34;\u003c/span\u003e compact db:Kv cf:write range:[[122, 122, 121, 110], \u003cspan class=\"o\"\u003e[\u003c/span\u003e122, 122, 121, 111]\u003cspan class=\"o\"\u003e)\u003c/span\u003e success!\n\n\u003cspan class=\"c\"\u003e# 还可以指定本地 TiKV 数据路径直接 compact\u003c/span\u003e\n\u003cspan class=\"c\"\u003e# -d: specify the RocksDB that performs compaction. default: kv. Valid values: {kv, raft}\u003c/span\u003e\n\u003cspan class=\"nv\"\u003e$ \u003c/span\u003etikv-ctl \u003cspan class=\"nt\"\u003e--data-dir\u003c/span\u003e /path/to/tikv compact \u003cspan class=\"nt\"\u003e-d\u003c/span\u003e kv\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003ch3 id=\"224-小结\"\u003e2.2.4 小结\u003c/h3\u003e\n\n\u003cp\u003e\u003cstrong\u003e\u003cmark\u003e“半主动方式”\u003c/mark\u003e\u003c/strong\u003e需要外围组件去更新 PD 中的 gc safepoint 信息，这样下面的 TiKV\n才会去执行 GC 操作。作为两个具体例子，我们接下来看看 TiDB 和 JuiceFS 在使用 TiKV 时，分别是怎么去更新这个信息的。\u003c/p\u003e\n\n\u003ch2 id=\"23-tidb-中触发-tikv-gc-的方式\"\u003e2.3 TiDB 中触发 TiKV GC 的方式\u003c/h2\u003e\n\n\u003cp\u003eTiDB 有 GC 相关的配置和 worker，会按照配置去触发底层的 TiKV GC，\u003c/p\u003e\n\n\u003cp align=\"center\"\u003e\u003cimg src=\"/assets/img/juicefs-metadata-deep-dive/tidb-sql-layer-overview.png\" width=\"90%\"/\u003e\u003c/p\u003e\n\u003cp align=\"center\"\u003eFig. TiDB SQL layer overview. \u003cmark\u003eGC worker is outside of TiKV\u003c/mark\u003e.\n\u003ca href=\"https://www.pingcap.com/blog/percona-live-17/\"\u003eImage Source: pingcap.com\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003e更多信息可以参考 [3,4]。\u003c/p\u003e\n\n\u003ch2 id=\"24-juicefs-触发-tikv-gc-的方式\"\u003e2.4 JuiceFS 触发 TiKV GC 的方式\u003c/h2\u003e\n\n\u003cp\u003eTiKV 作为元数据引擎时，JuiceFS 并没有使用 TiDB，而是直接使用的 TiKV（和 PD），\n所以就需要 \u003cstrong\u003e\u003cmark\u003eJuiceFS client 来触发这个 GC\u003c/mark\u003e\u003c/strong\u003e\n（因为不考虑 CSI 部署方式的话，JuiceFS 就一个客户端组件，也没有其他 long running 服务来做这个事情了）。\u003c/p\u003e\n\n\u003cp align=\"center\"\u003e\u003cimg src=\"/assets/img/juicefs-metadata-deep-dive/juicefs-volume-bw-control.png\" width=\"90%\"/\u003e\u003c/p\u003e\n\u003cp align=\"center\"\u003eFig. Typical JuiceFS cluster.\u003c/p\u003e\n\n\u003ch3 id=\"241-定期更新-gc-safepoint-的代码\"\u003e2.4.1 定期更新 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003egc safepoint\u003c/code\u003e 的代码\u003c/h3\u003e\n\n\u003cp\u003eJuiceFS \u003ccode class=\"language-plaintext highlighter-rouge\"\u003ev1.0.4+\u003c/code\u003e 客户端会周期性地设置 PD 中的 gc safepoint，默认是\n\u003cstrong\u003e\u003cmark\u003e\u003ccode\u003enow-3h\u003c/code\u003e\u003c/mark\u003e\u003c/strong\u003e，也就是可以删除 3 小时之前的旧版本数据，\u003c/p\u003e\n\n\u003cdiv class=\"language-go highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"c\"\u003e// pkg/meta/tkv_tikv.go\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003efunc\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ec\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003etikvClient\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"n\"\u003egc\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"n\"\u003ec\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003egcInterval\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"m\"\u003e0\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n    \u003cspan class=\"n\"\u003esafePoint\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"n\"\u003ec\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eclient\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eGC\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003econtext\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eBackground\u003c/span\u003e\u003cspan class=\"p\"\u003e(),\u003c/span\u003e \u003cspan class=\"n\"\u003eoracle\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eGoTimeToTS\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003etime\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eNow\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eAdd\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u003c/span\u003e\u003cspan class=\"n\"\u003ec\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003egcInterval\u003c/span\u003e\u003cspan class=\"p\"\u003e)))\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003ch3 id=\"242-配置meta-url-gc-interval1h\"\u003e2.4.2 配置：META URL \u003ccode class=\"language-plaintext highlighter-rouge\"\u003e\\?gc-interval=1h\u003c/code\u003e\u003c/h3\u003e\n\n\u003cp\u003e这个 gc-interval 可在 juicefs 挂载卷时加到 \u003cstrong\u003e\u003cmark\u003e\u003ccode\u003eTiKV URL\u003c/code\u003e\u003c/mark\u003e\u003c/strong\u003e 中，\u003c/p\u003e\n\n\u003cul\u003e\n  \u003cli\u003e默认值：\u003cstrong\u003e\u003cmark\u003e\u003ccode\u003e3h\u003c/code\u003e\u003c/mark\u003e\u003c/strong\u003e\u003c/li\u003e\n  \u003cli\u003e最小值：\u003cstrong\u003e\u003cmark\u003e\u003ccode\u003e1h\u003c/code\u003e\u003c/mark\u003e\u003c/strong\u003e，设置的值小于这个值会打印一条 warning，然后强制设置为 1h。\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003ejuicefs client 挂载时\u003cstrong\u003e\u003cmark\u003e显式设置\u003c/mark\u003e\u003c/strong\u003e \u003cstrong\u003e\u003cmark\u003e\u003ccode\u003egc-interval\u003c/code\u003e\u003c/mark\u003e\u003c/strong\u003e，\u003c/p\u003e\n\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003e$ \u003c/span\u003ejuicefs mount tikv://localhost:2379\u003cspan class=\"se\"\u003e\\?\u003c/span\u003egc-interval\u003cspan class=\"o\"\u003e=\u003c/span\u003e1h ~/mnt/jfs\n\u0026lt;INFO\u0026gt;: Meta address: tikv://localhost:2379?gc-interval\u003cspan class=\"o\"\u003e=\u003c/span\u003e1h \u003cspan class=\"o\"\u003e[\u003c/span\u003einterface.go:491]\n\u0026lt;INFO\u0026gt;: TiKV gc interval is \u003cspan class=\"nb\"\u003eset \u003c/span\u003eto 1h0m0s \u003cspan class=\"o\"\u003e[\u003c/span\u003etkv_tikv.go:84]\n...\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003ch3 id=\"243-juicefs-gc-手动触发-tikv-gc\"\u003e2.4.3 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003ejuicefs gc\u003c/code\u003e 手动触发 TiKV GC\u003c/h3\u003e\n\n\u003cp\u003e还可以通过 juicefs gc 子命令来主动触发 TiKV GC。这个例子中设置的时间太短，可以看到被强制改成了允许的最小值 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003e1h\u003c/code\u003e，\u003c/p\u003e\n\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003e$ \u003c/span\u003ejuicefs gc tikv://\u0026lt;ip\u0026gt;:2379/foo-dev\u003cspan class=\"se\"\u003e\\?\u003c/span\u003egc-interval\u003cspan class=\"o\"\u003e=\u003c/span\u003e1m \u003cspan class=\"nt\"\u003e--delete\u003c/span\u003e\n...\n\u0026lt;WARNING\u0026gt;: TiKV gc-interval \u003cspan class=\"o\"\u003e(\u003c/span\u003e1m0s\u003cspan class=\"o\"\u003e)\u003c/span\u003e is too short, and is reset to 1h \u003cspan class=\"o\"\u003e[\u003c/span\u003etkv_tikv.go:133]\n\u0026lt;INFO\u0026gt;: TiKV gc interval is \u003cspan class=\"nb\"\u003eset \u003c/span\u003eto 1h0m0s \u003cspan class=\"o\"\u003e[\u003c/span\u003etkv_tikv.go:138]\nCleaned pending slices: 0                      0.0/s\n Pending deleted files: 0                      0.0/s\n  Pending deleted data: 0.0 b   \u003cspan class=\"o\"\u003e(\u003c/span\u003e0 Bytes\u003cspan class=\"o\"\u003e)\u003c/span\u003e      0.0 b/s\n Cleaned pending files: 0                      0.0/s\n  Cleaned pending data: 0.0 b   \u003cspan class=\"o\"\u003e(\u003c/span\u003e0 Bytes\u003cspan class=\"o\"\u003e)\u003c/span\u003e      0.0 b/s\n         Cleaned trash: 0                      0.0/s\nCleaned detached nodes: 0                      0.0/s\n         Listed slices: 2047                   4930.4/s\n          Trash slices: 2026                   55423.8/s\n            Trash data: 7.7 KiB \u003cspan class=\"o\"\u003e(\u003c/span\u003e7883 Bytes\u003cspan class=\"o\"\u003e)\u003c/span\u003e   211.8 KiB/s\n  Cleaned trash slices: 0                      0.0/s\n    Cleaned trash data: 0.0 b   \u003cspan class=\"o\"\u003e(\u003c/span\u003e0 Bytes\u003cspan class=\"o\"\u003e)\u003c/span\u003e      0.0 b/s\n       Scanned objects: 2047/2047 \u003cspan class=\"o\"\u003e[===========================================]\u003c/span\u003e  18138.6/s used: 113.115519ms\n         Valid objects: 21                     187.2/s\n            Valid data: 85.0 b  \u003cspan class=\"o\"\u003e(\u003c/span\u003e85 Bytes\u003cspan class=\"o\"\u003e)\u003c/span\u003e     758.0 b/s\n     Compacted objects: 2026                   18064.2/s\n        Compacted data: 7.7 KiB \u003cspan class=\"o\"\u003e(\u003c/span\u003e7883 Bytes\u003cspan class=\"o\"\u003e)\u003c/span\u003e   68.6 KiB/s\n        Leaked objects: 0                      0.0/s\n           Leaked data: 0.0 b   \u003cspan class=\"o\"\u003e(\u003c/span\u003e0 Bytes\u003cspan class=\"o\"\u003e)\u003c/span\u003e      0.0 b/s\n       Skipped objects: 0                      0.0/s\n          Skipped data: 0.0 b   \u003cspan class=\"o\"\u003e(\u003c/span\u003e0 Bytes\u003cspan class=\"o\"\u003e)\u003c/span\u003e      0.0 b/s\n\u0026lt;INFO\u0026gt;: scanned 2047 objects, 21 valid, 2026 compacted \u003cspan class=\"o\"\u003e(\u003c/span\u003e7883 bytes\u003cspan class=\"o\"\u003e)\u003c/span\u003e, 0 leaked \u003cspan class=\"o\"\u003e(\u003c/span\u003e0 bytes\u003cspan class=\"o\"\u003e)\u003c/span\u003e, 0 delslices \u003cspan class=\"o\"\u003e(\u003c/span\u003e0 bytes\u003cspan class=\"o\"\u003e)\u003c/span\u003e, 0 delfiles \u003cspan class=\"o\"\u003e(\u003c/span\u003e0 bytes\u003cspan class=\"o\"\u003e)\u003c/span\u003e, 0 skipped \u003cspan class=\"o\"\u003e(\u003c/span\u003e0 bytes\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e[\u003c/span\u003egc.go:379]\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003ch2 id=\"25-外挂组件-githubcomtikvmigrationgc-worker\"\u003e2.5 外挂组件 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003egithub.com/tikv/migration/gc-worker\u003c/code\u003e\u003c/h2\u003e\n\n\u003cp\u003e\u003ca href=\"https://github.com/tikv/migration/blob/br-v1.1.0/gc-worker/README.md\"\u003e代码仓库\u003c/a\u003e，是个在 TiKV 之上的组件，\n从 PD 获取 \u003cstrong\u003e\u003cmark\u003e\u003ccode\u003eservice safepoint\u003c/code\u003e\u003c/mark\u003e\u003c/strong\u003e 信息，然后计算 \u003cstrong\u003e\u003cmark\u003e\u003ccode\u003egc safepoint\u003c/code\u003e\u003c/mark\u003e\u003c/strong\u003e 并更新到 PD，从而触发 TiKV GC。\u003c/p\u003e\n\n\u003ch1 id=\"3-gc-不及时导致的问题一例\"\u003e3 GC 不及时导致的问题一例\u003c/h1\u003e\n\n\u003cp\u003e这里挑一个典型的问题讨论下。\u003c/p\u003e\n\n\u003ch2 id=\"31-问题现象\"\u003e3.1 问题现象\u003c/h2\u003e\n\n\u003ch3 id=\"311-监控tikv-db-size-暴增磁盘空间不断减小\"\u003e3.1.1 监控：TiKV db size 暴增，磁盘空间不断减小\u003c/h3\u003e\n\n\u003cp\u003e如下面监控所示，\u003c/p\u003e\n\n\u003cp align=\"center\"\u003e\u003cimg src=\"/assets/img/juicefs-metadata-deep-dive/impacts-of-tikv-gc-lagging.png\" width=\"100%\"/\u003e\u003c/p\u003e\n\u003cp align=\"center\"\u003eFig. TiKV DB size soaring in a JuiceFS cluster, caused by TiKV GC lagging.\u003c/p\u003e\n\n\u003cul\u003e\n  \u003cli\u003eTiKV DB size 暴增；\u003c/li\u003e\n  \u003cli\u003eTiKV region 分布出现显著变量，总数量也有一定程度上升；\u003c/li\u003e\n  \u003cli\u003eTiKV node 可用磁盘空间不断下降。\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch3 id=\"312-tikv-server-错误日志failed-to-split-region\"\u003e3.1.2 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003etikv-server\u003c/code\u003e 错误日志：failed to split region\u003c/h3\u003e\n\n\u003cp\u003e查看 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003etikv-server\u003c/code\u003e 日志，看到一直在刷下面这样的 warning/error：\u003c/p\u003e\n\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"o\"\u003e[\u003c/span\u003eWARN] \u003cspan class=\"o\"\u003e[\u003c/span\u003esplit_observer.rs:73] \u003cspan class=\"o\"\u003e[\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;invalid key, skip\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e]\u003c/span\u003e \u003cspan class=\"o\"\u003e[\u003c/span\u003e\u003cspan class=\"nv\"\u003eerr\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"se\"\u003e\\\u0026#34;\u003c/span\u003e\u003cspan class=\"s2\"\u003ekey 6E677... should be in (6E677..., 6E677...)\u003c/span\u003e\u003cspan class=\"se\"\u003e\\\u0026#34;\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e]\u003c/span\u003e \u003cspan class=\"o\"\u003e[\u003c/span\u003e\u003cspan class=\"nv\"\u003eindex\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e0] \u003cspan class=\"o\"\u003e[\u003c/span\u003e\u003cspan class=\"nv\"\u003eregion_id\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e39179938]\n\u003cspan class=\"o\"\u003e[\u003c/span\u003eERROR] \u003cspan class=\"o\"\u003e[\u003c/span\u003esplit_observer.rs:136] \u003cspan class=\"o\"\u003e[\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;failed to handle split req\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e]\u003c/span\u003e \u003cspan class=\"o\"\u003e[\u003c/span\u003e\u003cspan class=\"nv\"\u003eerr\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"se\"\u003e\\\u0026#34;\u003c/span\u003e\u003cspan class=\"s2\"\u003eno valid key found for split.\u003c/span\u003e\u003cspan class=\"se\"\u003e\\\u0026#34;\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e]\u003c/span\u003e \u003cspan class=\"o\"\u003e[\u003c/span\u003e\u003cspan class=\"nv\"\u003eregion_id\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e39179938]\n\u003cspan class=\"o\"\u003e[\u003c/span\u003eWARN] \u003cspan class=\"o\"\u003e[\u003c/span\u003epeer.rs:2971] \u003cspan class=\"o\"\u003e[\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;skip proposal\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e]\u003c/span\u003e \u003cspan class=\"o\"\u003e[\u003c/span\u003e\u003cspan class=\"nv\"\u003eerror_code\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003eKV:Raftstore:Coprocessor] \u003cspan class=\"o\"\u003e[\u003c/span\u003e\u003cspan class=\"nv\"\u003eerr\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;Coprocessor(Other(\u003c/span\u003e\u003cspan class=\"se\"\u003e\\\u0026#34;\u003c/span\u003e\u003cspan class=\"s2\"\u003e[components/raftstore/src/coprocessor/split_observer.rs:141]: no valid key found for split.\u003c/span\u003e\u003cspan class=\"se\"\u003e\\\u0026#34;\u003c/span\u003e\u003cspan class=\"s2\"\u003e))\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e]\u003c/span\u003e \u003cspan class=\"o\"\u003e[\u003c/span\u003e\u003cspan class=\"nv\"\u003epeer_id\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e39179939] \u003cspan class=\"o\"\u003e[\u003c/span\u003e\u003cspan class=\"nv\"\u003eregion_id\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e39179938]\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e也就是 region split 失败。\u003c/p\u003e\n\n\u003ch2 id=\"32-问题排查\"\u003e3.2 问题排查\u003c/h2\u003e\n\n\u003col\u003e\n  \u003cli\u003e根据日志报错，网上搜到一些帖子，初步了解问题背景（JuiceFS/TiKV 新人，接触没多久）；\u003c/li\u003e\n  \u003cli\u003e\n    \u003cp\u003e对报错日志进行分析，发现：\u003c/p\u003e\n\n    \u003cul\u003e\n      \u003cli\u003e\u003cstrong\u003e\u003cmark\u003e报错集中在几十个 region\u003c/mark\u003e\u003c/strong\u003e（\u003ccode class=\"language-plaintext highlighter-rouge\"\u003egrep \u0026#34;failed to handle split req\u0026#34; tikv.log | awk \u0026#39;{print $NF}\u0026#39; | sort | uniq -c | sort -n -k1,1\u003c/code\u003e），相对总 region 数量很少；\u003c/li\u003e\n      \u003cli\u003e\u003ccode class=\"language-plaintext highlighter-rouge\"\u003epd-ctl region-properties -r \u0026lt;region\u0026gt;\u003c/code\u003e 看，发现 start/end key 都来自\u003cstrong\u003e\u003cmark\u003e同一个 volume\u003c/mark\u003e\u003c/strong\u003e（命令行操作见下一篇）；\u003c/li\u003e\n      \u003cli\u003e根据 volume 监控看，只有\u003cstrong\u003e\u003cmark\u003e一个客户端\u003c/mark\u003e\u003c/strong\u003e \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eset\u003c/code\u003e 请求非常高，每秒 400 次请求，而这个 volume 只有几个 GB，可以说非常小；\u003c/li\u003e\n    \u003c/ul\u003e\n  \u003c/li\u003e\n  \u003cli\u003e\u003ccode class=\"language-plaintext highlighter-rouge\"\u003etikv-ctl mvcc -k \u0026lt;key\u0026gt;\u003c/code\u003e 查看有问题的 key，发现超时了，报错说文件\u003cstrong\u003e\u003cmark\u003e（元数据）太大\u003c/mark\u003e\u003c/strong\u003e；\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003cp\u003e结合以上三点，判断是某个或少数几个文件的 MVCC 版本太多，导致 TiKV split region 失败，进而不断累积垃圾数据。\u003c/p\u003e\n\n\u003ch2 id=\"33-问题根因\"\u003e3.3 问题根因\u003c/h2\u003e\n\n\u003cp\u003e以上，猜测直接原因是这个用户 \u003cstrong\u003e\u003cmark\u003e非正常使用 JuiceFS\u003c/mark\u003e\u003c/strong\u003e，\u003cstrong\u003e\u003cmark\u003e疯狂更新文件\u003c/mark\u003e\u003c/strong\u003e，也就是我们 1.1 中例子的极端版。\n这导致部分文件的历史版本极其多，TiKV 在 auto split region 时失败。网上也有一些类似的 case（大部分是 TiDB 用户）。\u003c/p\u003e\n\n\u003cp\u003e但本质上，还是因为 TiKV 的 GC 太滞后，\u003c/p\u003e\n\n\u003col\u003e\n  \u003cli\u003e被动 GC（RocksDB compact 方式）的频率不可控，跟集群所有客户端的总 write/update/delete 行为有关；\u003c/li\u003e\n  \u003cli\u003e\n    \u003cp\u003eJuiceFS 的主动 GC 频率太慢，跟不上某些文件的版本增长速度。\u003c/p\u003e\n\n    \u003cul\u003e\n      \u003cli\u003eJuiceFS 默认 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003enow-3h\u003c/code\u003e，最小 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003enow-1h\u003c/code\u003e，也就是至少会保留一个小时内的所有版本（实际上我们是有个外部服务在定期更新 PD 的 gc safepoint，但也是设置的 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003enow-1h\u003c/code\u003e）；\u003c/li\u003e\n      \u003cli\u003e根据监控看，异常的 juicefs client 每秒有 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003e400+ set\u003c/code\u003e 请求，一个小时就是 144w 次的更新（这些请求更新的文件很集中）。\u003c/li\u003e\n    \u003c/ul\u003e\n  \u003c/li\u003e\n\u003c/ol\u003e\n\n\u003ch2 id=\"34-解决方式\"\u003e3.4 解决方式\u003c/h2\u003e\n\n\u003col\u003e\n  \u003cli\u003e写了个程序，允许以非常小的粒度去更新 PD 的 gc safepoint，例如 \u003cstrong\u003e\u003cmark\u003e\u003ccode\u003enow-5m\u003c/code\u003e\u003c/mark\u003e\u003c/strong\u003e，\n  也就是最多保留最近 5 分钟内的版本，其他的都删掉；这一步下去就有效果了，先稳住了，DB 不再增长，开始缓慢下降；\u003c/li\u003e\n  \u003cli\u003e通知用户去处理那个看起来异常的客户端（我们没权限登录用户的机器，客户端不可控，这是另一个问题了）。\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003cp\u003e1+2，DB 开始稳步下降，最终完全恢复正常。\u003c/p\u003e\n\n\u003ch2 id=\"35-问题小结\"\u003e3.5 问题小结\u003c/h2\u003e\n\n\u003cp\u003e对于 TiKV 这种 MVCC 的元数据引擎来说，JuiceFS 的一条元数据可能会保留多个版本，老版本什么时候删掉很大程度上依赖外部 GC 触发。\n如果 \u003cstrong\u003e\u003cmark\u003eGC 间隔太长 + 文件更新太频繁\u003c/mark\u003e\u003c/strong\u003e，单条元数据极端情况下就可以占几个 GB，这时候不仅 DB size 暴大，还会导致 TiKV split region 工作不正常。\u003c/p\u003e\n\n\u003ch1 id=\"4-问题讨论\"\u003e4 问题讨论\u003c/h1\u003e\n\n\u003cp\u003e前面看到，JuiceFS 支持配置 TiKV 的 GC 间隔，但从管理和运维层面，这里面也有几个问题可以探讨。\u003c/p\u003e\n\n\u003ch2 id=\"41-允许的最小-gc-间隔太大\"\u003e4.1 允许的\u003cstrong\u003e\u003cmark\u003e最小 GC 间隔\u003c/mark\u003e\u003c/strong\u003e太大\u003c/h2\u003e\n\n\u003cp\u003e目前最小是 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003enow-1h\u003c/code\u003e，极端情况会导致第 3 节中的问题，TiKV DB size 暴增，集群被打爆。\u003c/p\u003e\n\n\u003ch2 id=\"42-gc-配置放在客户端增加了用户的认知负担和学习成本\"\u003e4.2 GC 配置放在客户端，增加了用户的认知负担和学习成本\u003c/h2\u003e\n\n\u003cul\u003e\n  \u003cli\u003e\n    \u003cp\u003e用户必需感知 TiKV gc 这个东西，增加认知成本和使用负担；\u003c/p\u003e\n\n    \u003cp\u003e用户只是用 JuiceFS volume 读写文件，原则上没有必要去知道 JuiceFS 集群用什么元数据引擎，\n  甚至还必现了解这种元数据引擎的 GC 知识，后者都是 JuiceFS 集群管理员需要关心和解决的；\u003c/p\u003e\n  \u003c/li\u003e\n  \u003cli\u003e\n    \u003cp\u003e用户如果没有配置，就只完全依赖 RocksDB compaction 来 GC，更容易触发版本太多导致的问题。\u003c/p\u003e\n  \u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2 id=\"43-管理员运维困境\"\u003e4.3 管理员运维困境\u003c/h2\u003e\n\n\u003cp\u003e用户一旦没有显式配置 gc-interval（使用很大的默认值），TiKV 可能就被打爆，\n这种情况下\u003cstrong\u003e\u003cmark\u003e用户不知道，管理员知道但可能没短平快的解决办法\u003c/mark\u003e\u003c/strong\u003e（不一定有权限管理用户的机器）。\u003c/p\u003e\n\n\u003ch2 id=\"44-小结\"\u003e4.4 小结\u003c/h2\u003e\n\n\u003cp\u003e对集群管理员来说，更好的方式可能是，\u003c/p\u003e\n\n\u003col\u003e\n  \u003cli\u003e有个（内部或外部）服务，可以按管理员的需求随时和/或定时去 GC；\u003c/li\u003e\n  \u003cli\u003e用户侧完全不用感知这个事情；\u003c/li\u003e\n  \u003cli\u003e有 Meta 操作的限流能力（可以隔离有问题的 volume 或 client），下一篇讨论。\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003ch1 id=\"参考资料\"\u003e参考资料\u003c/h1\u003e\n\n\u003col\u003e\n  \u003cli\u003e\u003ca href=\"https://www.pingcap.com/blog/multi-version-concurrency-control-in-tikv/\"\u003eMVCC in TiKV\u003c/a\u003e, pingcap.com, 2016\u003c/li\u003e\n  \u003cli\u003e\u003ca href=\"https://juicefs.com/docs/zh/community/tikv_best_practices/\"\u003eJuiceFS 元数据引擎最佳实践：TiKV\u003c/a\u003e, juicefs.com\u003c/li\u003e\n  \u003cli\u003e\u003ca href=\"https://dataturbo.medium.com/deep-dive-into-distributed-transactions-in-tikv-and-tidb-80337b4104cb\"\u003eDeep Dive into Distributed Transactions in TiKV and TiDB\u003c/a\u003e, medium.com, 2024\u003c/li\u003e\n  \u003cli\u003e\u003ca href=\"https://pingcap.github.io/tidb-dev-guide/understand-tidb/mvcc-garbage-collection.html\"\u003eMVCC garbage collection\u003c/a\u003e, TiDB doc, 2024\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003chr/\u003e\n\n\u003cp\u003e\u003ca href=\"https://notbyai.fyi\"\u003e\u003cimg src=\"/assets/img/Written-By-Human-Not-By-AI-Badge-white.svg\" alt=\"Written by Human, Not by AI\"/\u003e\u003c/a\u003e\n\u003ca href=\"https://notbyai.fyi\"\u003e\u003cimg src=\"/assets/img/Written-By-Human-Not-By-AI-Badge-black.svg\" alt=\"Written by Human, Not by AI\"/\u003e\u003c/a\u003e\u003c/p\u003e\n\n\n  \u003c!-- POST NAVIGATION --\u003e\n  \u003cdiv class=\"postNav clearfix\"\u003e\n     \n      \u003ca class=\"prev\" href=\"/blog/juicefs-metadata-deep-dive-2-zh/\"\u003e\u003cspan\u003e« JuiceFS 元数据引擎再探：开箱解读 TiKV 中的 JuiceFS 元数据（2024）\u003c/span\u003e\n      \n    \u003c/a\u003e\n      \n      \n      \u003ca class=\"next\" href=\"/blog/juicefs-metadata-deep-dive-4-zh/\"\u003e\u003cspan\u003eJuiceFS 元数据引擎四探：元数据大小评估、限流与限速的设计思考（2024） »\u003c/span\u003e\n       \n      \u003c/a\u003e\n     \n  \u003c/div\u003e\n\u003c/div\u003e",
  "Date": "2024-09-22T00:00:00Z",
  "Author": "Arthur Chiao"
}