{
  "Source": "arthurchiao.art",
  "Title": "OVS Deep Dive 5: Datapath and TX Offloading",
  "Link": "https://arthurchiao.art/blog/ovs-deep-dive-5-datapath-tx-offloading/",
  "Content": "\u003cdiv class=\"post\"\u003e\n  \n  \u003ch1 class=\"postTitle\"\u003eOVS Deep Dive 5: Datapath and TX Offloading\u003c/h1\u003e\n  \u003cp class=\"meta\"\u003ePublished at 2017-03-08 | Last Update \u003c/p\u003e\n  \n  \u003ch2 id=\"1-tx-offloading\"\u003e1. TX Offloading\u003c/h2\u003e\n\n\u003cp\u003eFor performance considerations, instances (VMs, containers, etc) often offload\nthe checksum job (TCP, UDP checksums, etc) to physical NICs. You could check\nthe offload settings with \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eethtool\u003c/code\u003e:\u003c/p\u003e\n\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003e$ \u003c/span\u003eethtool \u003cspan class=\"nt\"\u003e-k\u003c/span\u003e eth0\nFeatures \u003cspan class=\"k\"\u003efor \u003c/span\u003eeth0:\nrx-checksumming: on\ntx-checksumming: off\n        tx-checksum-ipv4: off\n        tx-checksum-ip-generic: off \u003cspan class=\"o\"\u003e[\u003c/span\u003efixed]\n        tx-checksum-ipv6: off\n        tx-checksum-fcoe-crc: off \u003cspan class=\"o\"\u003e[\u003c/span\u003efixed]\n        tx-checksum-sctp: off \u003cspan class=\"o\"\u003e[\u003c/span\u003efixed]\nscatter-gather: off\n        tx-scatter-gather: off\n        tx-scatter-gather-fraglist: off \u003cspan class=\"o\"\u003e[\u003c/span\u003efixed]\ntcp-segmentation-offload: off\n        tx-tcp-segmentation: off\n        tx-tcp-ecn-segmentation: off \u003cspan class=\"o\"\u003e[\u003c/span\u003efixed]\n        tx-tcp6-segmentation: off\nudp-fragmentation-offload: off \u003cspan class=\"o\"\u003e[\u003c/span\u003efixed]\n\n...\n\nl2-fwd-offload: off \u003cspan class=\"o\"\u003e[\u003c/span\u003efixed]\nbusy-poll: off \u003cspan class=\"o\"\u003e[\u003c/span\u003efixed]\nhw-tc-offload: off \u003cspan class=\"o\"\u003e[\u003c/span\u003efixed]\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003eFig.1.1 is a deployment graph, OVS manages both physical ports (NICs) and\nvirtual ports (vNIC) of VMs.\u003c/p\u003e\n\n\u003cp align=\"center\"\u003e\u003cimg src=\"/assets/img/ovs-deep-dive/ovs-instances-attached.jpg\" width=\"50%\" height=\"50%\"/\u003e\u003c/p\u003e\n\u003cp align=\"center\"\u003eFig.1.1 OVS Deployment\u003c/p\u003e\n\n\u003cp\u003eWhen TX offload is enabled on instance’s tap devices (default setting), OVS will\nutilize physical NICs for checksum calculating for each packet sent out from\ninstance, and this is handled by the kernel module \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eopenvswitch.ko\u003c/code\u003e.\u003c/p\u003e\n\n\u003ch2 id=\"2-tx-offloading-with-userspace-datapath\"\u003e2. TX Offloading with Userspace Datapath\u003c/h2\u003e\n\n\u003cp\u003e\u003cstrong\u003eA problem occurs when TX offloading is enabled while OVS bridge uses Userspace\nDatapath: Userspace Datapath does not support TX offloading\u003c/strong\u003e. What’s more\ntricky is that OVS doesn’t complaining or report any errors in log for this\nconfiguration.  I’m not sure if all userspace datapath implementations do not\nsupport TX offloading, but according to my tests, at least OVS 2.3~2.7 Userspace\ndatapath does not support. The phenomenon of this problem is that \u003cstrong\u003einstances\nconnected with OVS could not establish TCP connection\u003c/strong\u003e, while L3 (e.g \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eping\u003c/code\u003e)\nand \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eUDP\u003c/code\u003e connections are OK.\u003c/p\u003e\n\n\u003cp\u003eLet’s see an example: ssh from instance A to instance B, where A and B connect\nto the same OVS bridge which uses Userspace datapath. Here, instance A has\nan ip address 10.18.100.6 on its tap device \u003ccode class=\"language-plaintext highlighter-rouge\"\u003etest5\u003c/code\u003e, instance B with ip\n\u003ccode class=\"language-plaintext highlighter-rouge\"\u003e10.18.100.7\u003c/code\u003e on its tap device \u003ccode class=\"language-plaintext highlighter-rouge\"\u003etest6\u003c/code\u003e.\u003c/p\u003e\n\n\u003cp\u003eFirst, to make sure the L3 connection is OK, we do a ping from A to B:\u003c/p\u003e\n\n\u003cdiv class=\"language-plaintext highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003eroot@instance-A: ping 10.18.100.7\nPING 10.18.100.7 (10.18.100.7) 56(84) bytes of data.\n64 bytes from 10.18.100.7: icmp_seq=1 ttl=255 time=0.592 ms\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003eOK. Using \u003ccode class=\"language-plaintext highlighter-rouge\"\u003etelnet\u003c/code\u003e or \u003ccode class=\"language-plaintext highlighter-rouge\"\u003enc\u003c/code\u003e, we could further verify that UDP connection is OK\nbetween A and B. Then let’s try \u003ccode class=\"language-plaintext highlighter-rouge\"\u003essh\u003c/code\u003e:\u003c/p\u003e\n\n\u003cdiv class=\"language-plaintext highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003eroot@instance-A: ssh 10.18.100.7\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e\u003cstrong\u003eStucked!\u003c/strong\u003e Look at the \u003ccode class=\"language-plaintext highlighter-rouge\"\u003etcpdump\u003c/code\u003e outputs:\u003c/p\u003e\n\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003eroot@host-02:~  \u003cspan class=\"c\"\u003e# tcpdump -vv -i test5 \u0026#39;ip\u0026#39;\u003c/span\u003e\n10:37:54.957911 IP \u003cspan class=\"o\"\u003e(\u003c/span\u003etos 0x0, ttl 64, \u003cspan class=\"nb\"\u003eid \u003c/span\u003e18862, offset 0, flags \u003cspan class=\"o\"\u003e[\u003c/span\u003eDF], proto TCP \u003cspan class=\"o\"\u003e(\u003c/span\u003e6\u003cspan class=\"o\"\u003e)\u003c/span\u003e, length 60\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n    10.18.100.6.33340 \u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e 10.18.100.7.ssh: Flags \u003cspan class=\"o\"\u003e[\u003c/span\u003eS], \u003cspan class=\"nb\"\u003ecksum \u003c/span\u003e0xdc5f \u003cspan class=\"o\"\u003e(\u003c/span\u003eincorrect -\u0026gt; 0x2efd\u003cspan class=\"o\"\u003e)\u003c/span\u003e, \u003cspan class=\"nb\"\u003eseq \u003c/span\u003e2593635005, win 29200, options \u003cspan class=\"o\"\u003e[\u003c/span\u003emss 1460,sackOK,TS val 455443 ecr 0,nop,wscale 7], length 0\n10:37:55.957995 IP \u003cspan class=\"o\"\u003e(\u003c/span\u003etos 0x0, ttl 64, \u003cspan class=\"nb\"\u003eid \u003c/span\u003e18863, offset 0, flags \u003cspan class=\"o\"\u003e[\u003c/span\u003eDF], proto TCP \u003cspan class=\"o\"\u003e(\u003c/span\u003e6\u003cspan class=\"o\"\u003e)\u003c/span\u003e, length 60\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n    10.18.100.6.33340 \u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e 10.18.100.7.ssh: Flags \u003cspan class=\"o\"\u003e[\u003c/span\u003eS], \u003cspan class=\"nb\"\u003ecksum \u003c/span\u003e0xdc5f \u003cspan class=\"o\"\u003e(\u003c/span\u003eincorrect -\u0026gt; 0x2b14\u003cspan class=\"o\"\u003e)\u003c/span\u003e, \u003cspan class=\"nb\"\u003eseq \u003c/span\u003e2593635005, win 29200, options \u003cspan class=\"o\"\u003e[\u003c/span\u003emss 1460,sackOK,TS val 456444 ecr 0,nop,wscale 7], length 0\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003eroot@dpdk-02:~  \u003cspan class=\"c\"\u003e# tcpdump -vv -i test6 \u0026#39;ip\u0026#39;\u003c/span\u003e\n10:37:54.958093 IP \u003cspan class=\"o\"\u003e(\u003c/span\u003etos 0x0, ttl 64, \u003cspan class=\"nb\"\u003eid \u003c/span\u003e18862, offset 0, flags \u003cspan class=\"o\"\u003e[\u003c/span\u003eDF], proto TCP \u003cspan class=\"o\"\u003e(\u003c/span\u003e6\u003cspan class=\"o\"\u003e)\u003c/span\u003e, length 60\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n    10.18.100.6.33340 \u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e 10.18.100.7.ssh: Flags \u003cspan class=\"o\"\u003e[\u003c/span\u003eS], \u003cspan class=\"nb\"\u003ecksum \u003c/span\u003e0xdc5f \u003cspan class=\"o\"\u003e(\u003c/span\u003eincorrect -\u0026gt; 0x2efd\u003cspan class=\"o\"\u003e)\u003c/span\u003e, \u003cspan class=\"nb\"\u003eseq \u003c/span\u003e2593635005, win 29200, options \u003cspan class=\"o\"\u003e[\u003c/span\u003emss 1460,sackOK,TS val 455443 ecr 0,nop,wscale 7], length 0\n10:37:55.958054 IP \u003cspan class=\"o\"\u003e(\u003c/span\u003etos 0x0, ttl 64, \u003cspan class=\"nb\"\u003eid \u003c/span\u003e18863, offset 0, flags \u003cspan class=\"o\"\u003e[\u003c/span\u003eDF], proto TCP \u003cspan class=\"o\"\u003e(\u003c/span\u003e6\u003cspan class=\"o\"\u003e)\u003c/span\u003e, length 60\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n    10.18.100.6.33340 \u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e 10.18.100.7.ssh: Flags \u003cspan class=\"o\"\u003e[\u003c/span\u003eS], \u003cspan class=\"nb\"\u003ecksum \u003c/span\u003e0xdc5f \u003cspan class=\"o\"\u003e(\u003c/span\u003eincorrect -\u0026gt; 0x2b14\u003cspan class=\"o\"\u003e)\u003c/span\u003e, \u003cspan class=\"nb\"\u003eseq \u003c/span\u003e2593635005, win 29200, options \u003cspan class=\"o\"\u003e[\u003c/span\u003emss 1460,sackOK,TS val 456444 ecr 0,nop,wscale 7], length 0\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003eWe could see that the first TCP packet (\u003cstrong\u003eSYNC\u003c/strong\u003e) arrives instance B, but is\nmarked as \u003ccode class=\"language-plaintext highlighter-rouge\"\u003ecksum incorrect\u003c/code\u003e then discarded.  The reason is that A enables TCP TX\noffloading, so the packet is sent to OVS with faked TCP checksum; while OVS with\nUserspace Datapath does not do TCP checksum, the packet is sent out (or\nforwarded to B) with wrong checksum; on receiving this packet, B calculates the\nTCP checksum and finds that the TCP checksum field in packet is incorrect, then\ndiscards it directly.  A retransmits the packet after timeout (1 second), but\nthe packet still get dropped by B. This process is depicted in Fig.2.1.\u003c/p\u003e\n\n\u003cp align=\"center\"\u003e\u003cimg src=\"/assets/img/ovs-deep-dive/tcp_conn_1.png\" width=\"70%\" height=\"70%\"/\u003e\u003c/p\u003e\n\u003cp align=\"center\"\u003eFig.2.1 TCP Connection Establishment: TX offload enabled on A and B\u003c/p\u003e\n\n\u003chr/\u003e\n\n\u003cp\u003eIf we turn off TCP TX offload on A:\u003c/p\u003e\n\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003eroot@instance-A: ethtool \u003cspan class=\"nt\"\u003e-K\u003c/span\u003e eth0 tx off\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003ewatch \u003ccode class=\"language-plaintext highlighter-rouge\"\u003etcpdump\u003c/code\u003e outputs:\u003c/p\u003e\n\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003eroot@host-02:~  \u003cspan class=\"c\"\u003e# tcpdump -vv -i test5 \u0026#39;ip\u0026#39;\u003c/span\u003e\n10:53:45.980674 IP \u003cspan class=\"o\"\u003e(\u003c/span\u003etos 0x0, ttl 64, \u003cspan class=\"nb\"\u003eid \u003c/span\u003e57556, offset 0, flags \u003cspan class=\"o\"\u003e[\u003c/span\u003eDF], proto TCP \u003cspan class=\"o\"\u003e(\u003c/span\u003e6\u003cspan class=\"o\"\u003e)\u003c/span\u003e, length 60\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n    10.18.100.6.33344 \u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e 10.18.100.7.ssh: Flags \u003cspan class=\"o\"\u003e[\u003c/span\u003eS], \u003cspan class=\"nb\"\u003ecksum \u003c/span\u003e0xc048 \u003cspan class=\"o\"\u003e(\u003c/span\u003ecorrect\u003cspan class=\"o\"\u003e)\u003c/span\u003e, \u003cspan class=\"nb\"\u003eseq \u003c/span\u003e2884605223, win 29200, options \u003cspan class=\"o\"\u003e[\u003c/span\u003emss 1460,sackOK,TS val 1406451 ecr 0,nop,wscale 7], length 0\n10:53:45.981241 IP \u003cspan class=\"o\"\u003e(\u003c/span\u003etos 0x0, ttl 64, \u003cspan class=\"nb\"\u003eid \u003c/span\u003e0, offset 0, flags \u003cspan class=\"o\"\u003e[\u003c/span\u003eDF], proto TCP \u003cspan class=\"o\"\u003e(\u003c/span\u003e6\u003cspan class=\"o\"\u003e)\u003c/span\u003e, length 60\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n    10.18.100.7.ssh \u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e 10.18.100.6.33344: Flags \u003cspan class=\"o\"\u003e[\u003c/span\u003eS.], \u003cspan class=\"nb\"\u003ecksum \u003c/span\u003e0xdc5f \u003cspan class=\"o\"\u003e(\u003c/span\u003eincorrect -\u0026gt; 0xa8f1\u003cspan class=\"o\"\u003e)\u003c/span\u003e, \u003cspan class=\"nb\"\u003eseq \u003c/span\u003e3399142456, ack 2884605224, win 28960, options \u003cspan class=\"o\"\u003e[\u003c/span\u003emss 1460,sackOK,TS val 1409357 ecr 1406451,nop,wscale 7], length 0\n10:53:46.981289 IP \u003cspan class=\"o\"\u003e(\u003c/span\u003etos 0x0, ttl 64, \u003cspan class=\"nb\"\u003eid \u003c/span\u003e57557, offset 0, flags \u003cspan class=\"o\"\u003e[\u003c/span\u003eDF], proto TCP \u003cspan class=\"o\"\u003e(\u003c/span\u003e6\u003cspan class=\"o\"\u003e)\u003c/span\u003e, length 60\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n    10.18.100.6.33344 \u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e 10.18.100.7.ssh: Flags \u003cspan class=\"o\"\u003e[\u003c/span\u003eS], \u003cspan class=\"nb\"\u003ecksum \u003c/span\u003e0xbc5f \u003cspan class=\"o\"\u003e(\u003c/span\u003ecorrect\u003cspan class=\"o\"\u003e)\u003c/span\u003e, \u003cspan class=\"nb\"\u003eseq \u003c/span\u003e2884605223, win 29200, options \u003cspan class=\"o\"\u003e[\u003c/span\u003emss 1460,sackOK,TS val 1407452 ecr 0,nop,wscale 7], length 0\n10:53:46.981770 IP \u003cspan class=\"o\"\u003e(\u003c/span\u003etos 0x0, ttl 64, \u003cspan class=\"nb\"\u003eid \u003c/span\u003e0, offset 0, flags \u003cspan class=\"o\"\u003e[\u003c/span\u003eDF], proto TCP \u003cspan class=\"o\"\u003e(\u003c/span\u003e6\u003cspan class=\"o\"\u003e)\u003c/span\u003e, length 60\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n    10.18.100.7.ssh \u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e 10.18.100.6.33344: Flags \u003cspan class=\"o\"\u003e[\u003c/span\u003eS.], \u003cspan class=\"nb\"\u003ecksum \u003c/span\u003e0xdc5f \u003cspan class=\"o\"\u003e(\u003c/span\u003eincorrect -\u0026gt; 0xa508\u003cspan class=\"o\"\u003e)\u003c/span\u003e, \u003cspan class=\"nb\"\u003eseq \u003c/span\u003e3399142456, ack 2884605224, win 28960, options \u003cspan class=\"o\"\u003e[\u003c/span\u003emss 1460,sackOK,TS val 1410358 ecr 1406451,nop,wscale 7], length 0\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003eroot@dpdk-02:~  \u003cspan class=\"c\"\u003e# tcpdump -vv -i test6 \u0026#39;ip\u0026#39;\u003c/span\u003e\n10:53:45.980793 IP \u003cspan class=\"o\"\u003e(\u003c/span\u003etos 0x0, ttl 64, \u003cspan class=\"nb\"\u003eid \u003c/span\u003e57556, offset 0, flags \u003cspan class=\"o\"\u003e[\u003c/span\u003eDF], proto TCP \u003cspan class=\"o\"\u003e(\u003c/span\u003e6\u003cspan class=\"o\"\u003e)\u003c/span\u003e, length 60\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n    10.18.100.6.33344 \u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e 10.18.100.7.ssh: Flags \u003cspan class=\"o\"\u003e[\u003c/span\u003eS], \u003cspan class=\"nb\"\u003ecksum \u003c/span\u003e0xc048 \u003cspan class=\"o\"\u003e(\u003c/span\u003ecorrect\u003cspan class=\"o\"\u003e)\u003c/span\u003e, \u003cspan class=\"nb\"\u003eseq \u003c/span\u003e2884605223, win 29200, options \u003cspan class=\"o\"\u003e[\u003c/span\u003emss 1460,sackOK,TS val 1406451 ecr 0,nop,wscale 7], length 0\n10:53:45.981046 IP \u003cspan class=\"o\"\u003e(\u003c/span\u003etos 0x0, ttl 64, \u003cspan class=\"nb\"\u003eid \u003c/span\u003e0, offset 0, flags \u003cspan class=\"o\"\u003e[\u003c/span\u003eDF], proto TCP \u003cspan class=\"o\"\u003e(\u003c/span\u003e6\u003cspan class=\"o\"\u003e)\u003c/span\u003e, length 60\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n    10.18.100.7.ssh \u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e 10.18.100.6.33344: Flags \u003cspan class=\"o\"\u003e[\u003c/span\u003eS.], \u003cspan class=\"nb\"\u003ecksum \u003c/span\u003e0xdc5f \u003cspan class=\"o\"\u003e(\u003c/span\u003eincorrect -\u0026gt; 0xa8f1\u003cspan class=\"o\"\u003e)\u003c/span\u003e, \u003cspan class=\"nb\"\u003eseq \u003c/span\u003e3399142456, ack 2884605224, win 28960, options \u003cspan class=\"o\"\u003e[\u003c/span\u003emss 1460,sackOK,TS val 1409357 ecr 1406451,nop,wscale 7], length 0\n10:53:46.981420 IP \u003cspan class=\"o\"\u003e(\u003c/span\u003etos 0x0, ttl 64, \u003cspan class=\"nb\"\u003eid \u003c/span\u003e57557, offset 0, flags \u003cspan class=\"o\"\u003e[\u003c/span\u003eDF], proto TCP \u003cspan class=\"o\"\u003e(\u003c/span\u003e6\u003cspan class=\"o\"\u003e)\u003c/span\u003e, length 60\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n    10.18.100.6.33344 \u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e 10.18.100.7.ssh: Flags \u003cspan class=\"o\"\u003e[\u003c/span\u003eS], \u003cspan class=\"nb\"\u003ecksum \u003c/span\u003e0xbc5f \u003cspan class=\"o\"\u003e(\u003c/span\u003ecorrect\u003cspan class=\"o\"\u003e)\u003c/span\u003e, \u003cspan class=\"nb\"\u003eseq \u003c/span\u003e2884605223, win 29200, options \u003cspan class=\"o\"\u003e[\u003c/span\u003emss 1460,sackOK,TS val 1407452 ecr 0,nop,wscale 7], length 0\n10:53:46.981639 IP \u003cspan class=\"o\"\u003e(\u003c/span\u003etos 0x0, ttl 64, \u003cspan class=\"nb\"\u003eid \u003c/span\u003e0, offset 0, flags \u003cspan class=\"o\"\u003e[\u003c/span\u003eDF], proto TCP \u003cspan class=\"o\"\u003e(\u003c/span\u003e6\u003cspan class=\"o\"\u003e)\u003c/span\u003e, length 60\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n    10.18.100.7.ssh \u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e 10.18.100.6.33344: Flags \u003cspan class=\"o\"\u003e[\u003c/span\u003eS.], \u003cspan class=\"nb\"\u003ecksum \u003c/span\u003e0xdc5f \u003cspan class=\"o\"\u003e(\u003c/span\u003eincorrect -\u0026gt; 0xa508\u003cspan class=\"o\"\u003e)\u003c/span\u003e, \u003cspan class=\"nb\"\u003eseq \u003c/span\u003e3399142456, ack 2884605224, win 28960, options \u003cspan class=\"o\"\u003e[\u003c/span\u003emss 1460,sackOK,TS val 1410358 ecr 1406451,nop,wscale 7], length 0\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003ethe first TCP packet would be correctly received by B; then, an \u003cstrong\u003eSYNC+ACK\u003c/strong\u003e packet\nis sent from B to A. On receiving, A discards this ACK packet because of\nthe same reason: TCP checksum incorrect, as shown in Fig.2.2.\u003c/p\u003e\n\n\u003cp align=\"center\"\u003e\u003cimg src=\"/assets/img/ovs-deep-dive/tcp_conn_2.png\" width=\"70%\" height=\"70%\"/\u003e\u003c/p\u003e\n\u003cp align=\"center\"\u003eFig.2.2 TCP Connection Establishment: TX offload enabled B\u003c/p\u003e\n\n\u003chr/\u003e\n\n\u003cp\u003eFurther, turn off TX offload in B:\u003c/p\u003e\n\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003eroot@instance-B: ethtool \u003cspan class=\"nt\"\u003e-K\u003c/span\u003e eth0 tx off\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003eThis time, TCP conncection will be established right away:\u003c/p\u003e\n\n\u003cp align=\"center\"\u003e\u003cimg src=\"/assets/img/ovs-deep-dive/tcp_conn_3.png\" width=\"70%\" height=\"70%\"/\u003e\u003c/p\u003e\n\u003cp align=\"center\"\u003eFig.2.3 TCP Connection Establishment: TX offload diabled in A and B\u003c/p\u003e\n\n\u003ch2 id=\"3-conclusion\"\u003e3. Conclusion\u003c/h2\u003e\n\n\u003cp\u003e\u003cstrong\u003eWhy does Userspace Datapath not support TX offloading?\u003c/strong\u003e\u003c/p\u003e\n\n\u003cp\u003eAs far as I could figure out[1,2], Userspace Datapath is highly optimized which\nconflicts with TX offloading. Some optimizations have to be sacrificed if\nsupporting TX offloading. However, the benefits is not obvious, or \u003ca href=\"https://mail.openvswitch.org/pipermail/ovs-dev/2016-August/322058.html\"\u003eeven\nworse\u003c/a\u003e.\nRX offloading could achieve ~10% perfomance increase, so in Userspace Datapth,\nRX offloading is enabled by default, but TX offloading is not supported.\u003c/p\u003e\n\n\u003cp\u003eIn summary, \u003cstrong\u003eif deploy OVS with DPDK enabled, you have to turn off TX offload\nflags in your instances\u003c/strong\u003e. In this case, instances themselves will take care\nof the checksum calculating.\u003c/p\u003e\n\n\u003ch2 id=\"references\"\u003eReferences\u003c/h2\u003e\n\u003col\u003e\n  \u003cli\u003e\u003ca href=\"https://mail.openvswitch.org/pipermail/ovs-dev/2016-August/322058.html\"\u003enetdev-dpdk: Enable Rx checksum offloading\tfeature on DPDK physical ports\u003c/a\u003e\u003c/li\u003e\n  \u003cli\u003e\u003ca href=\"http://openvswitch.org/support/ovscon2016/7/1450-stringer.pdf\"\u003eOVS Hardware Offload Discuss Panel\u003c/a\u003e\u003c/li\u003e\n\u003c/ol\u003e\n\n\n  \u003c!-- POST NAVIGATION --\u003e\n  \u003cdiv class=\"postNav clearfix\"\u003e\n     \n      \u003ca class=\"prev\" href=\"/blog/ovs-deep-dive-4-patch-port/\"\u003e\u003cspan\u003e« OVS Deep Dive 4: OVS netdev and Patch Port\u003c/span\u003e\n      \n    \u003c/a\u003e\n      \n      \n      \u003ca class=\"next\" href=\"/blog/ovs-deep-dive-6-internal-port/\"\u003e\u003cspan\u003eOVS Deep Dive 6: Internal Port »\u003c/span\u003e\n       \n      \u003c/a\u003e\n     \n  \u003c/div\u003e\n\u003c/div\u003e",
  "Date": "2017-03-08T00:00:00Z",
  "Author": "Arthur Chiao"
}