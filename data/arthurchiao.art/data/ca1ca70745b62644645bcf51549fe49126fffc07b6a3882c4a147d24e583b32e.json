{
  "Source": "arthurchiao.art",
  "Title": "[译] Segment Routing Overview",
  "Link": "https://arthurchiao.art/blog/segment-routing-overview-zh/",
  "Content": "\u003cdiv class=\"post\"\u003e\n  \n  \u003ch1 class=\"postTitle\"\u003e[译] Segment Routing Overview\u003c/h1\u003e\n  \u003cp class=\"meta\"\u003ePublished at 2019-05-23 | Last Update 2023-02-21\u003c/p\u003e\n  \n  \u003ch3 id=\"译者序\"\u003e译者序\u003c/h3\u003e\n\n\u003cp\u003eSegment Routing (SR) 是近年来网络领域的一项新技术，“segment” 在这里\n指代网络隔离技术，例如 MPLS。如果快速回顾网络设计在过去几十年的\n发展，我们会发现 SR 也许是正在形成的第三代网络设计思想。\u003c/p\u003e\n\n\u003cp\u003e第一代是以\u003cstrong\u003e\u003cmark\u003e互联网\u003c/mark\u003e\u003c/strong\u003e为代表的\u003cstrong\u003e\u003cmark\u003e无中心式设计\u003c/mark\u003e\u003c/strong\u003e，\n所有网络节点通过\u003cstrong\u003e\u003cmark\u003e分布式路由协议\u003c/mark\u003e\u003c/strong\u003e同步路由信息，这些路由协议包括\nIGP（RIP、OSPF、IS-IS）和 EGP（BGP）。\u003c/p\u003e\n\n\u003cp\u003e第二代是近些年以 \u003cstrong\u003eSDN\u003c/strong\u003e 为代表的\u003cstrong\u003e\u003cmark\u003e集中式设计\u003c/mark\u003e\u003c/strong\u003e，\u003cstrong\u003e全局的控制器\u003c/strong\u003e\n了解整张网络的拓扑和状态，可以精确控制网络中每个节点的每条转发规则。代表是\nGoogle 基于 OpenFlow 实现 B4 Network [1]。\u003c/p\u003e\n\n\u003cp\u003e以上两代网络的设计思想截然相反，因此必然各有优缺点。SR 此时横空出世，某种程度上\n可以看作两者的折中（或优点结合）：给定一个源节点和目的节点，\u003cstrong\u003e集中式控制器（如果有）\n只负责选取若干中间节点，形成一条转发路径\u003c/strong\u003e；而这些\u003cstrong\u003e中间节点之间\u003c/strong\u003e还有很多其\n他结点，它们之间如何转发及同步路由，\u003cstrong\u003e都交给分布式算法\u003c/strong\u003e。这种设计同时兼顾了集中\n式控制（若干节点形成的转发路径）和分布式智能（路由同步、链路负载均衡等），\n网络的控制粒度从最粗（第一代）到最细（第二代），再到 SR 的粗细适中（第三代）。\u003c/p\u003e\n\n\u003cp\u003eSR 实现以上目标的最重要技术之一是\u003cstrong\u003e\u003cmark\u003e源路由\u003c/mark\u003e\u003c/strong\u003e（source routing），\n每个包在离开源节点时就已经确定了（核心）转发路径，并将路径信息编码到了每个包里。\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://www.amazon.com/Segment-Routing-Part-Clarence-Filsfils-ebook/dp/B01I58LSUO\"\u003e\u003cstrong\u003e\u003cem\u003eSegment Routing\u003c/em\u003e\u003c/strong\u003e\u003c/a\u003e\n一书的作者举了一个形象的例子（这也是他设计 SR 的直接灵感来源）：从 Rome 开始到\nBrussel [2]，翻译成中文就是\u003cstrong\u003e\u003cmark\u003e从上海开车去杭州：没有人会提前规划出路上的每一个转弯\u003c/mark\u003e\u003c/strong\u003e，\n那太细了。你真正做的是，选出途经的几个重要地方，例如虹桥-松江-嘉兴-余杭-\n西湖，只要确保沿着这几个地方向开，就一定能到达。至于两个地方之间，比如虹桥到松江\n，到底是走大路还是小路，要视当时的路况。假如一条路堵了，你可能会当即切换到另一条\n路，但松江这个目标不变。（“规划出每一个转弯”的比喻，听上去是在揶揄 OpenFlow SDN\n的那帮人。）\u003c/p\u003e\n\n\u003cp\u003e和术语 SDN 一样，“SR” 本身只是一个概念，并不是实现。目前 SR 的实现有两种：分别基\n于 MPLS 和 IPv6，其中 MPLS SR 与现有的 MPLS 网络兼容，但大大简化了控制平面；而基\n于 IPv6 的版本（称为 \u003cstrong\u003e\u003cmark\u003e\u003ccode\u003eSRv6\u003c/code\u003e\u003c/mark\u003e\u003c/strong\u003e）看起来前景更广阔。另外，\nLinux 4.10 已经初步支持了 SRv6，但性能还比较差 [3]。\u003c/p\u003e\n\n\u003cp\u003e以上可视为对 SR 的入门导读。\u003c/p\u003e\n\n\u003cp\u003e本文接下来的内容来自 Cisco ASR 920 路由器文档 \u003ca href=\"https://www.cisco.com/c/en/us/td/docs/routers/asr920/configuration/guide/segment-routing/segment-routing-book/overview.pdf\"\u003eSegment Routing for Cisco ASR 920\nSeries Aggregation Services\nRouters\u003c/a\u003e\n第一章 \u003cstrong\u003eSegment Routing Overview\u003c/strong\u003e。翻译仅供学习交流，如有侵权立即删除。\u003c/p\u003e\n\n\u003cp\u003e\u003cstrong\u003e由于译者水平有限，本文不免存在遗漏或错误之处。如有疑问，请查阅原文。\u003c/strong\u003e\u003c/p\u003e\n\n\u003cp\u003e以下是译文。\u003c/p\u003e\n\n\u003chr/\u003e\n\n\u003cul id=\"markdown-toc\"\u003e\n  \u003cli\u003e\u003ca href=\"#译者序\" id=\"markdown-toc-译者序\"\u003e译者序\u003c/a\u003e\u003c/li\u003e\n  \u003cli\u003e\u003ca href=\"#sr-是如何工作的\" id=\"markdown-toc-sr-是如何工作的\"\u003eSR 是如何工作的？\u003c/a\u003e\u003c/li\u003e\n  \u003cli\u003e\u003ca href=\"#sr-举例\" id=\"markdown-toc-sr-举例\"\u003eSR 举例\u003c/a\u003e\u003c/li\u003e\n  \u003cli\u003e\u003ca href=\"#sr-的好处\" id=\"markdown-toc-sr-的好处\"\u003eSR 的好处\u003c/a\u003e    \u003cul\u003e\n      \u003cli\u003e\u003ca href=\"#ready-for-sdn\" id=\"markdown-toc-ready-for-sdn\"\u003eReady for SDN\u003c/a\u003e\u003c/li\u003e\n      \u003cli\u003e\u003ca href=\"#网络无需维护任何应用状态\" id=\"markdown-toc-网络无需维护任何应用状态\"\u003e网络无需维护任何应用状态\u003c/a\u003e\u003c/li\u003e\n      \u003cli\u003e\u003ca href=\"#简化简单\" id=\"markdown-toc-简化简单\"\u003e简化/简单\u003c/a\u003e\u003c/li\u003e\n      \u003cli\u003e\u003ca href=\"#支持快速重路由frr\" id=\"markdown-toc-支持快速重路由frr\"\u003e支持快速重路由（FRR）\u003c/a\u003e\u003c/li\u003e\n      \u003cli\u003e\u003ca href=\"#适用于大规模数据中心\" id=\"markdown-toc-适用于大规模数据中心\"\u003e适用于大规模数据中心\u003c/a\u003e\u003c/li\u003e\n      \u003cli\u003e\u003ca href=\"#可扩展\" id=\"markdown-toc-可扩展\"\u003e可扩展\u003c/a\u003e\u003c/li\u003e\n      \u003cli\u003e\u003ca href=\"#双平面网络dual-plane-networks\" id=\"markdown-toc-双平面网络dual-plane-networks\"\u003e双平面网络（Dual-plane networks）\u003c/a\u003e\u003c/li\u003e\n      \u003cli\u003e\u003ca href=\"#集中式流量工程\" id=\"markdown-toc-集中式流量工程\"\u003e集中式流量工程\u003c/a\u003e\u003c/li\u003e\n      \u003cli\u003e\u003ca href=\"#egress-peering-流量工程epe\" id=\"markdown-toc-egress-peering-流量工程epe\"\u003eEgress Peering 流量工程（EPE）\u003c/a\u003e\u003c/li\u003e\n      \u003cli\u003e\u003ca href=\"#即插即用plug-and-play部署\" id=\"markdown-toc-即插即用plug-and-play部署\"\u003e即插即用（Plug-and-Play）部署\u003c/a\u003e\u003c/li\u003e\n    \u003c/ul\u003e\n  \u003c/li\u003e\n  \u003cli\u003e\u003ca href=\"#sr-的限制\" id=\"markdown-toc-sr-的限制\"\u003eSR 的限制\u003c/a\u003e\u003c/li\u003e\n  \u003cli\u003e\u003ca href=\"#references\" id=\"markdown-toc-references\"\u003eReferences\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003chr/\u003e\n\n\u003cp\u003eSegment routing (SR) 是一种基于\u003cstrong\u003e源路由\u003c/strong\u003e（source routing）的网络设计。\u003c/p\u003e\n\n\u003cul\u003e\n  \u003cli\u003e包从源节点（source node）发出之前\u003cstrong\u003e\u003cmark\u003e转发路径就已经确定了\u003c/mark\u003e\u003c/strong\u003e；\u003c/li\u003e\n  \u003cli\u003e\u003cstrong\u003e\u003cmark\u003e转发指令\u003c/mark\u003e\u003c/strong\u003e（forwarding instructions）以 segment list 的形式\u003cstrong\u003e\u003cmark\u003e编码到每个数据包中\u003c/mark\u003e\u003c/strong\u003e；\u003c/li\u003e\n  \u003cli\u003eSegment list 中的每一个 segment 在路由信息库（Router Information Base，\u003cstrong\u003e\u003cmark\u003eRIB\u003c/mark\u003e\u003c/strong\u003e）\u003cstrong\u003e\u003cmark\u003e中都有记录\u003c/mark\u003e\u003c/strong\u003e；\u003c/li\u003e\n  \u003cli\u003e每到达一跳（hop）后，list 最外层的 segment 用于确定下一跳。\u003c/li\u003e\n  \u003cli\u003eSegments 以\u003cstrong\u003e\u003cmark\u003e栈的形式（stacked）存储在包头中\u003c/mark\u003e\u003c/strong\u003e。\n    \u003cul\u003e\n      \u003cli\u003e如果栈顶 segment 指向的是另一个节点，当前节点就通过 \u003cstrong\u003e\u003cmark\u003eECMP\u003c/mark\u003e\u003c/strong\u003e 将包发送到下一跳:\u003c/li\u003e\n      \u003cli\u003e如果栈顶 segment 指向的是本节点，就 pop out segment，执行下一个 segment 规定的任务。\u003c/li\u003e\n    \u003c/ul\u003e\n  \u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eSR \u003cstrong\u003e\u003cmark\u003e基于已有的一些内部网关协议\u003c/mark\u003e\u003c/strong\u003e（IGP，例如 IS-IS、OSFP 和 MPLS）\n来实现高效和灵活的转发。\u003c/p\u003e\n\n\u003ch1 id=\"sr-是如何工作的\"\u003eSR 是如何工作的？\u003c/h1\u003e\n\n\u003cp\u003e在 SR 网络中，路由器有能力选择任意的转发路径，不管是显式（explicit）指定的路\n径，还是 IGP 自动计算出的最短路径。\u003c/p\u003e\n\n\u003cp\u003e\u003cstrong\u003e一个 segment 代表一段子路径（subpath）\u003c/strong\u003e，路由器将可以多段子路径结合起来，形成\n一条到达目的节点的最终路径。\u003cstrong\u003e每个segment 都有一个唯一的标识符（segment identifier\n，\u003c/strong\u003e\u003cmark\u003e\u003ccode\u003eSID\u003c/code\u003e\u003c/mark\u003e\u003cstrong\u003e），通过 IGP 的扩展协议在网络中分发\u003c/strong\u003e。IGP 扩展协议对 IPv4 和 IPv6 都适用。\n和传统的 MPLS 网络不同，SR 网络中的路由器不需要 LDP 和 RSVP-TE 协议 来分配和同步\nSID，以及对转发信息进行编程。\u003c/p\u003e\n\n\u003cp\u003e每个路由器（节点，node）和每个链路（邻接，adjacency）都有相应的 SID。\u003c/p\u003e\n\n\u003cp\u003e\u003cstrong\u003e\u003cmark\u003e\u003ccode\u003eNode segment ID\u003c/code\u003e\u003c/mark\u003e\u003c/strong\u003e 是全局唯一的，表示 \u003cstrong\u003eIGP 确定的到一个路由器的最短路径\u003c/strong\u003e。网\n络管理员从保留的一段范围内为每台路由器分配一个 node ID。\u003c/p\u003e\n\n\u003cp\u003e\u003cstrong\u003eAdjacency segment ID\u003c/strong\u003e \u003cstrong\u003e只在局部有效\u003c/strong\u003e（locally significant），表示\u003cstrong\u003e到一个\n邻居路由器的具体邻接\u003c/strong\u003e，例如一个出向接口（egress interface）。Adjacency segment\nID 是由路由器自动生成的，范围不会和 node SID 重合。\u003c/p\u003e\n\n\u003cp\u003e在 MPLS 网络中，一个 SID 会编码成 MPLS label stack 中的一条纪录项（entry）\n。SID 指示应该沿着一条特定的路径转发包。SID 分为两类：\u003c/p\u003e\n\n\u003cul\u003e\n  \u003cli\u003e\u003cstrong\u003ePrefix SID\u003c/strong\u003e：带 IP 地址前缀的 SID，其中的 IP 地址前缀是由 IGP 计算出来的。\nPrefix SID 全局（globally）唯一。\u003cstrong\u003eNode SID 是 Prefix SID的一种特殊情况，其\nprefix IP 是 node 自身的 loopbakck 地址\u003c/strong\u003e。It is advertised\nas an index into the node specific SR Global Block or SRGB.\u003c/li\u003e\n  \u003cli\u003e\u003cstrong\u003eAdjacency SID\u003c/strong\u003e：一个 Adjacency SID 就是\u003cstrong\u003e两个路由器之间的一条链路\u003c/strong\u003e。Adjacency\nSID 是和它所属的路由器相关的，因此它只是局部唯一的\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch1 id=\"sr-举例\"\u003eSR 举例\u003c/h1\u003e\n\n\u003cp\u003e图 1 是一张由 5 个路由器组成的 MPLS SR 网络，控制平面基于 IS-IS。Node ID 的范围\n是 100-199，Adjacency ID 的范围是 200 及以上。IS-IS 会将 segment ID（这里是 MPLS\nlabel）连同 IP Prefix 可达性信息在网络内做通告。\u003c/p\u003e\n\n\u003cp align=\"center\"\u003e\u003cimg src=\"/assets/img/segment-routing-overview/1.png\" width=\"50%\" height=\"50%\"/\u003e\u003c/p\u003e\n\u003cp align=\"center\"\u003e图 1 五个路由器组成的一张 MPLS SR 网络\u003c/p\u003e\n\n\u003cp\u003e在这个网络中，任何路由器想向路由器 E 发送流量，必须先将 103（路由器 E 的 node\nSID）push 到 segment list，以便利用 IS-IS 最短路径转发流量。中间结点的MPLS 标签\n交换（label-swapping）过程会保留 103 标签，直到包到达节点 E，如图 2 所示。\u003c/p\u003e\n\n\u003cp align=\"center\"\u003e\u003cimg src=\"/assets/img/segment-routing-overview/2.png\" width=\"50%\" height=\"50%\"/\u003e\u003c/p\u003e\n\u003cp align=\"center\"\u003e图 2 MPLS 标签交换操作\u003c/p\u003e\n\n\u003cp\u003e以上是通过 Node SID 实现的转发路径。\u003cstrong\u003eAdjacency segments 的行为与此不同\u003c/strong\u003e。例如\n，如果一个包到达路由器 D，栈顶 MPLS label 是 203（D 到 E 的 adjacency SID），D\n会先 pop label，然后将包转发给 E。\u003c/p\u003e\n\n\u003cp\u003eSIDs 可以组合成有序列表（ordered list）来实现\u003cstrong\u003e流量工程\u003c/strong\u003e（traffic engineering，\nTE）。根据需求的不同，一个 segment list 可以包含：\u003c/p\u003e\n\n\u003col\u003e\n  \u003cli\u003e多个 adjacency segments\u003c/li\u003e\n  \u003cli\u003e多个 node segments\u003c/li\u003e\n  \u003cli\u003e多个 adjacency segments 和 node segments 的组合\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003cp\u003e上面例子还可以用 \u003cstrong\u003enode segments 和 adjacency segment 的组合\u003c/strong\u003e来实现，如图 3 所示：\u003c/p\u003e\n\n\u003col\u003e\n  \u003cli\u003e首先，路由器 A push label stack（104，203）到每个包\u003c/li\u003e\n  \u003cli\u003e然后，路由器 A 利用到最短路径和 ECMP 特性将包转发到路由器 D\u003c/li\u003e\n  \u003cli\u003e最后在路由器 D 经过一个显式的接口（203）到达目的地 E\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003cp\u003e整个过程中，路由器 A \u003cstrong\u003e无需向网络节点声明任何路径信息\u003c/strong\u003e（保存在每个包中）。\u003cstrong\u003e网\n络的（配置）状态不受这条路径的影响，还是保持原来的配置\u003c/strong\u003e。也就是说，在保持网络状\n态（配置）不变的情况下，A 设置的新路径生效（enforce）了。（作为对比，如果要在 SDN\n中网络添加一条新的转发路径，那必然要对整个链路上的所有节点添加配置。）\u003c/p\u003e\n\n\u003cp align=\"center\"\u003e\u003cimg src=\"/assets/img/segment-routing-overview/3.png\" width=\"50%\" height=\"50%\"/\u003e\u003c/p\u003e\n\u003cp align=\"center\"\u003e图 3 组合 Node segments 和 Adjacency segment 到达 E 的路径\u003c/p\u003e\n\n\u003ch1 id=\"sr-的好处\"\u003eSR 的好处\u003c/h1\u003e\n\n\u003ch2 id=\"ready-for-sdn\"\u003eReady for SDN\u003c/h2\u003e\n\n\u003cp\u003eSR 被认为是 \u003cstrong\u003e\u003cmark\u003eSDN 的首选架构之一\u003c/mark\u003e\u003c/strong\u003e，而且它还是\u003cstrong\u003e应用工程化路由\u003c/strong\u003e（Application\nEngineered Routing，AER）的基础。它在\u003cstrong\u003e\u003cmark\u003e基于网络的分布式智能\u003c/mark\u003e\u003c/strong\u003e\n（例如链路和节点自动保护）和\u003cstrong\u003e\u003cmark\u003e基于控制器的集中式智能\u003c/mark\u003e\u003c/strong\u003e（例如流量优化）\n之间取得了很好的平衡。\u003c/p\u003e\n\n\u003cp\u003eSR 能够提供严格的网络\u003cstrong\u003e性能保证\u003c/strong\u003e、网络\u003cstrong\u003e资源的高效利用\u003c/strong\u003e、基于应用的交易（\napplication-based transactions）的高\u003cstrong\u003e可扩展性\u003c/strong\u003e。SR 使得网络\u003cstrong\u003e使用最少的状态信\n息\u003c/strong\u003e（minimal state information）来满足这些需求。\u003c/p\u003e\n\n\u003cp\u003eSR 可以很容易地集成到基于控制器的 SDN 架构，下图是一个示例，其中的控制器负责集中\n式优化，包括带宽控制。\u003c/p\u003e\n\n\u003cp align=\"center\"\u003e\u003cimg src=\"/assets/img/segment-routing-overview/4.png\" width=\"50%\" height=\"50%\"/\u003e\u003c/p\u003e\n\u003cp align=\"center\"\u003e图 4 SDN 控制器\u003c/p\u003e\n\n\u003cp\u003e在这个方案中，SDN 控制器了解整张网络的拓扑和flow。路由器申请到目的地的一条路\n径时，声明它期望的特性，例如延迟、带宽、链路多样性。控制器据此计算出一条最优路径，\n返回 segment list（例如一个 MPLS label stack）。然后路由器将这个 segment\nlist 编码到包头中，而控制器不需要对网络做任何额外的配置（signaling）。\u003c/p\u003e\n\n\u003ch2 id=\"网络无需维护任何应用状态\"\u003e网络无需维护任何应用状态\u003c/h2\u003e\n\n\u003cp\u003e无需向网络添加任何应用状态（application state），segment list 就可以实现完全的网\n络虚拟化。状态信息以 segment list 的形式编码在每个包中。因为\u003cstrong\u003e\u003cmark\u003e网络只需维护 segment 状态\u003c/mark\u003e\u003c/strong\u003e\n（node/adjacency segment ID，数量非常少而且变更不频繁），因此可以支持非常大 ——\n而且非常高频 —— 的 transaction-based 的应用请求，而不会给网络造成任何负担。\u003c/p\u003e\n\n\u003ch2 id=\"简化简单\"\u003e简化/简单\u003c/h2\u003e\n\n\u003cul\u003e\n  \u003cli\u003e当用于 MPLS 数据平面时，SR 可以通过隧道的方式将 MPLS 服务（VPN、VPLS、VPWS）\n从一个 ingress provider edge（供应商边缘路由器）送到一个 egress provider\nedge，只需要 IGP（IS-IS 或 OSPF），而不需要其他协议\u003c/li\u003e\n  \u003cli\u003e不需要额外的协议（例如 LDP 或 RSVP）来分发标签\u003c/li\u003e\n  \u003cli\u003e可以\u003cstrong\u003e\u003cmark\u003e复用已有网络基础设施\u003c/mark\u003e\u003c/strong\u003e，支持 ECMP（使用 node segment ID）\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2 id=\"支持快速重路由frr\"\u003e支持快速重路由（FRR）\u003c/h2\u003e\n\n\u003cp\u003e对任何拓扑都支持快速重路由（Fast ReRoute）。在链路或节点挂掉的情况下，MPLS 依靠\nFRR 实现收敛。有了 SR 之后，\u003cstrong\u003e收敛时间\u003c/strong\u003e可以做到 \u003cstrong\u003e\u003cmark\u003e\u003ccode\u003e50ms\u003c/code\u003e\u003c/mark\u003e\u003c/strong\u003e 以下。\u003c/p\u003e\n\n\u003ch2 id=\"适用于大规模数据中心\"\u003e适用于大规模数据中心\u003c/h2\u003e\n\n\u003cul\u003e\n  \u003cli\u003e用 BGP 分发 node SID，类似于 IGP 分发 node SID\u003c/li\u003e\n  \u003cli\u003eAny node within the topology allocates the same BGP segment for the same\nswitch\u003c/li\u003e\n  \u003cli\u003e支持 ECMP 和 FRR（BGP PIC：Prefix Independent Convergence）\u003c/li\u003e\n  \u003cli\u003e流量工程的基石之一，SRTE\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2 id=\"可扩展\"\u003e可扩展\u003c/h2\u003e\n\n\u003cul\u003e\n  \u003cli\u003e避免了 LDP database 中的成千上万的标签\u003c/li\u003e\n  \u003cli\u003e避免了网络中成千上万的 MPLS TE LSP\u003c/li\u003e\n  \u003cli\u003e避免了成千上万的隧道配置\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2 id=\"双平面网络dual-plane-networks\"\u003e双平面网络（Dual-plane networks）\u003c/h2\u003e\n\n\u003cul\u003e\n  \u003cli\u003e支持 Dual-plane（MPLS 和 SRv6？），支持跨 plane 的转发策略（disjointness\nenforcement）\u003c/li\u003e\n  \u003cli\u003e任播（anycast）SID 支持宏策略（macro policy），类似于：“从 node A 注入的、到达\nnode Z 的 flow 1，必须经过 plane 1 到达”，“从 node A 注入的、目的是 node Z 的\nflow 2，必须经过 plane 2 转发”\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2 id=\"集中式流量工程\"\u003e集中式流量工程\u003c/h2\u003e\n\n\u003cul\u003e\n  \u003cli\u003e控制器和编排平台可以和 SR 流量工程联动，实现集中式优化，例如 WAN 优化\u003c/li\u003e\n  \u003cli\u003e网络变动，例如拥塞，可以触发应用重新计算 SR TE tunnel 的 placement 方式\u003c/li\u003e\n  \u003cli\u003eSR tunnel 可以由编排器通过南向接口（例如 PCE）动态编程\u003c/li\u003e\n  \u003cli\u003e敏捷网络编程，不需要对中间结点和尾节点做任何配置，也不需要对每条 flow 做配置（\nsignaling）\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2 id=\"egress-peering-流量工程epe\"\u003eEgress Peering 流量工程（EPE）\u003c/h2\u003e\n\n\u003cul\u003e\n  \u003cli\u003eSR 支持集中式 EPE\u003c/li\u003e\n  \u003cli\u003e控制器指导流量从 ingress provider edge（边界路由器）和内容源（包从边界路由器开\n始转发）\u003cstrong\u003e依照指定的路径和接口\u003c/strong\u003e到达 egress provider edge\u003c/li\u003e\n  \u003cli\u003e用 \u003cstrong\u003eBGP “peering” SID\u003c/strong\u003e 表达\u003cstrong\u003e源路由域内路径\u003c/strong\u003e（source-routed inter-domain path）\u003c/li\u003e\n  \u003cli\u003e控制器通过 BGP Link Status（BGP-LS） EPE 路由学习 BGP peering SID 和 egress 边界路由器外部的拓扑\u003c/li\u003e\n  \u003cli\u003e控制器编程控制 ingress 点的期望路径\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2 id=\"即插即用plug-and-play部署\"\u003e即插即用（Plug-and-Play）部署\u003c/h2\u003e\n\n\u003cp\u003e和当前的 MPLS 网络兼容。\u003c/p\u003e\n\n\u003ch1 id=\"sr-的限制\"\u003eSR 的限制\u003c/h1\u003e\n\n\u003col\u003e\n  \u003cli\u003eSegment Routing must be globally enabled on the chassis before enabling it on the IGPs, like ISIS or OSPF.\u003c/li\u003e\n  \u003cli\u003eSegment routing must be configured on the ISIS instance before configuring a prefix SID value.\u003c/li\u003e\n  \u003cli\u003eThe prefix SID value must be removed from all the interfaces under the same ISIS instance before disabling segment routing.\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003ch1 id=\"references\"\u003eReferences\u003c/h1\u003e\n\n\u003col\u003e\n  \u003cli\u003eJain, Sushant, et al. \u003ca href=\"https://dl.acm.org/citation.cfm?id=2486019\"\u003e“B4: Experience with a globally-deployed software\ndefined WAN.”\u003c/a\u003e ACM SIGCOMM\nComputer Communication Review. Vol. 43. No. 4. ACM, 2013.\u003c/li\u003e\n  \u003cli\u003eClarence Filsfils, Kris Michielsen, Ketan Talaulikar, \u003ca href=\"https://www.amazon.com/Segment-Routing-Part-Clarence-Filsfils-ebook/dp/B01I58LSUO\"\u003eSegment Routing Part\nI\u003c/a\u003e, 2016\u003c/li\u003e\n  \u003cli\u003eLebrun, David, and Olivier Bonaventure. \u003ca href=\"https://inl.info.ucl.ac.be/system/files/paper_10.pdf\"\u003e“Implementing IPv6 segment routing in\nthe linux kernel.”\u003c/a\u003e\nProceedings of the Applied Networking Research Workshop.  ACM, 2017.\u003c/li\u003e\n\u003c/ol\u003e\n\n\n  \u003c!-- POST NAVIGATION --\u003e\n  \u003cdiv class=\"postNav clearfix\"\u003e\n     \n      \u003ca class=\"prev\" href=\"/blog/awesome-segment-routing/\"\u003e\u003cspan\u003e« Awesome Segment Routing Resources\u003c/span\u003e\n      \n    \u003c/a\u003e\n      \n      \n      \u003ca class=\"next\" href=\"/blog/cilium-code-cni-delete-network/\"\u003e\u003cspan\u003eCilium Code Walk Through: CNI Delete Network »\u003c/span\u003e\n       \n      \u003c/a\u003e\n     \n  \u003c/div\u003e\n\u003c/div\u003e",
  "Date": "2019-05-23T00:00:00Z",
  "Author": "Arthur Chiao"
}