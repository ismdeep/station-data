{
  "Source": "arthurchiao.art",
  "Title": "Monitoring Docker Registry",
  "Link": "https://arthurchiao.art/blog/monitoring-hub/",
  "Content": "\u003cdiv class=\"post\"\u003e\n  \n  \u003ch1 class=\"postTitle\"\u003eMonitoring Docker Registry\u003c/h1\u003e\n  \u003cp class=\"meta\"\u003ePublished at 2018-11-20 | Last Update \u003c/p\u003e\n  \n  \u003cp\u003eWe run a customized image service in our private cloud, which\ninitially based on \u003ca href=\"https://github.com/vmware/harbor\"\u003evmware/harbor\u003c/a\u003e 0.4.5, and developed internally since then.\nA public presentation \u003ca href=\"/assets/img/monitoring-hub/ctrip_containerized_ci_cd.pdf\"\u003ePDF\u003c/a\u003e (in Chinease) has mentioned part of this[2].\nThis article, however, is not about the design and\nimplementation of the image service (which needs another post), but the monitoring\nsystem along with it.\u003c/p\u003e\n\n\u003ch2 id=\"1-introduction\"\u003e1 Introduction\u003c/h2\u003e\n\n\u003cp\u003eTo better understand the monitoring system, we first present the architecture overview.\u003c/p\u003e\n\n\u003ch3 id=\"11-registry\"\u003e1.1 Registry\u003c/h3\u003e\n\n\u003cp\u003eDocker registry, now called Docker \u003ca href=\"https://github.com/docker/distribution\"\u003eDistribution\u003c/a\u003e, is the official component\nfrom Docker for storing and distributing Docker images. We use a customized\n\u003ccode class=\"language-plaintext highlighter-rouge\"\u003e2.6+\u003c/code\u003e version.\u003c/p\u003e\n\n\u003cp\u003eThe customized part provides support for transparently redirecting requests\nto remote hubs/registrys (\u003cstrong\u003erequest origin\u003c/strong\u003e) when local pull misses.\u003c/p\u003e\n\n\u003cp align=\"center\"\u003e\u003cimg src=\"/assets/img/monitoring-hub/request-origin.png\" width=\"50%\" height=\"50%\"/\u003e\u003c/p\u003e\n\n\u003cp\u003ePic from [2].\u003c/p\u003e\n\n\u003ch3 id=\"12-hub\"\u003e1.2 Hub\u003c/h3\u003e\n\n\u003cp\u003eRegistry provides functionalities such as image store, push/pull API, while\nleaves higher level mangements, such as user management, auth management, to upper platforms.\nHarbor is one of such platforms.\u003c/p\u003e\n\n\u003cp\u003eIn our corp, we used a customized version to meet our specific needs,\ne.g. cross-region image sync, integration with CI/CD.\u003c/p\u003e\n\n\u003cp\u003eMain components of a hub:\u003c/p\u003e\n\n\u003col\u003e\n  \u003cli\u003eAPI and UI service\u003c/li\u003e\n  \u003cli\u003eJobservice - perform image sync job\u003c/li\u003e\n  \u003cli\u003eregistry - customized version\u003c/li\u003e\n  \u003cli\u003enginx - L7 proxy between API/UI, jobservice, registry\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003cp\u003eEach hub is deployed with HA mode, architecture as follow:\u003c/p\u003e\n\n\u003cp align=\"center\"\u003e\u003cimg src=\"/assets/img/monitoring-hub/hub-arch.png\" width=\"35%\" height=\"35%\"/\u003e\u003c/p\u003e\n\n\u003cp\u003ePic from [2].\u003c/p\u003e\n\n\u003cp\u003eWe have one hub per region, each with a distinct service URL, e.g \u003ccode class=\"language-plaintext highlighter-rouge\"\u003ehub-1.example.com\u003c/code\u003e, \u003ccode class=\"language-plaintext highlighter-rouge\"\u003ehub-2.example.com\u003c/code\u003e, \u003ccode class=\"language-plaintext highlighter-rouge\"\u003ehub-N.example.com\u003c/code\u003e.\nFor image service, however, we use a unique URL for all regions: \u003ccode class=\"language-plaintext highlighter-rouge\"\u003ehub.example.com\u003c/code\u003e, which dramatically speeds up push/pull performance.\u003c/p\u003e\n\n\u003cp\u003eWe use \u003ca href=\"https://www.a10networks.com/resources/articles/global-server-load-balancing\"\u003egSLB\u003c/a\u003e to achieve this.\u003c/p\u003e\n\n\u003ch3 id=\"13-fedoro\"\u003e1.3 Fedoro\u003c/h3\u003e\n\n\u003cp align=\"center\"\u003e\u003cimg src=\"/assets/img/monitoring-hub/fedoro.png\" width=\"50%\" height=\"50%\"/\u003e\u003c/p\u003e\n\n\u003cp\u003ePic from [2].\u003c/p\u003e\n\n\u003cp\u003eFedoro is a central service to manage image sync. Fedoro\nmakes hubs of different regions into a federation. It supports\nhub management, project management, and sync policy management.\u003c/p\u003e\n\n\u003ch2 id=\"2-design\"\u003e2 Design\u003c/h2\u003e\n\n\u003ch3 id=\"21-tech-stack\"\u003e2.1 Tech Stack\u003c/h3\u003e\n\n\u003cp\u003eOverall monitoring solution based on \u003cstrong\u003eTIG\u003c/strong\u003e: Telegraf + Influxdb + Grafana.\u003c/p\u003e\n\n\u003ch3 id=\"22-metrics-source\"\u003e2.2 Metrics Source\u003c/h3\u003e\n\n\u003cp\u003eWe collect metrics mainly in two ways:\u003c/p\u003e\n\n\u003ch4 id=\"221-matching-metric-patterns-against-access-log\"\u003e2.2.1. Matching Metric Patterns Against Access Log\u003c/h4\u003e\n\n\u003col\u003e\n  \u003cli\u003eAPI status\u003c/li\u003e\n  \u003cli\u003epush/pull stats\u003c/li\u003e\n  \u003cli\u003eaverage push/pull bandwidth\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003ch4 id=\"222-write-influxdb-format-metrics-directly-to-files\"\u003e2.2.2 Write Influxdb Format Metrics Directly To Files\u003c/h4\u003e\n\n\u003col\u003e\n  \u003cli\u003esync job info\u003c/li\u003e\n  \u003cli\u003erequest origin info\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003ch2 id=\"3-implementation\"\u003e3 Implementation\u003c/h2\u003e\n\n\u003cp\u003eDocker pulls and pushes images by distinct layers, so currently we could only get the layer stats, not an entire image. But on our observation, each image takes roughly 3 layers.\u003c/p\u003e\n\n\u003ch3 id=\"31-custom-patterns\"\u003e3.1 Custom Patterns\u003c/h3\u003e\n\n\u003cp\u003eTo devide URI, we need define our own custom grok patterns.\u003c/p\u003e\n\n\u003cp\u003eRefer to [TODO] what pattern and custom pattern are.\u003c/p\u003e\n\n\u003ch3 id=\"32-set-tag-attribute\"\u003e3.2 Set \u003ccode class=\"language-plaintext highlighter-rouge\"\u003etag\u003c/code\u003e Attribute\u003c/h3\u003e\n\n\u003cp\u003eSet project to tag attribute\u003c/p\u003e\n\n\u003ch3 id=\"33-select-limit\"\u003e3.3 Select Limit\u003c/h3\u003e\n\n\u003cp\u003eGrafana: add limit to tables. e.g. SELECT * FROM test LIMIT 500\u003c/p\u003e\n\n\u003ch2 id=\"4-monitoring-dashboard\"\u003e4 Monitoring Dashboard\u003c/h2\u003e\n\n\u003ch3 id=\"41-key-metrics\"\u003e4.1 Key Metrics\u003c/h3\u003e\n\n\u003cp align=\"center\"\u003e\u003cimg src=\"/assets/img/monitoring-hub/grafana-1-key-metrics.png\" width=\"95%\" height=\"95%\"/\u003e\u003c/p\u003e\n\n\u003ch3 id=\"42-error\"\u003e4.2 Error\u003c/h3\u003e\n\n\u003cp align=\"center\"\u003e\u003cimg src=\"/assets/img/monitoring-hub/grafana-2-error.png\" width=\"95%\" height=\"95%\"/\u003e\u003c/p\u003e\n\n\u003ch3 id=\"43-slow-uploadsdownloads\"\u003e4.3 Slow Uploads/Downloads\u003c/h3\u003e\n\n\u003cp align=\"center\"\u003e\u003cimg src=\"/assets/img/monitoring-hub/grafana-4-slow.png\" width=\"95%\" height=\"95%\"/\u003e\u003c/p\u003e\n\n\u003ch3 id=\"44-request-origin-local-miss\"\u003e4.4 Request Origin (Local Miss)\u003c/h3\u003e\n\n\u003cp align=\"center\"\u003e\u003cimg src=\"/assets/img/monitoring-hub/grafana-3-request-origin.png\" width=\"95%\" height=\"95%\"/\u003e\u003c/p\u003e\n\n\u003ch3 id=\"45-log-details\"\u003e4.5 Log Details\u003c/h3\u003e\n\n\u003cp align=\"center\"\u003e\u003cimg src=\"/assets/img/monitoring-hub/grafana-5-logs.png\" width=\"95%\" height=\"95%\"/\u003e\u003c/p\u003e\n\n\u003ch2 id=\"5-alerting\"\u003e5 Alerting\u003c/h2\u003e\n\n\u003ch2 id=\"6-summary-and-future-work\"\u003e6 Summary and Future Work\u003c/h2\u003e\n\n\u003ch2 id=\"references\"\u003eReferences\u003c/h2\u003e\n\n\u003col\u003e\n  \u003cli\u003eGithub: \u003ca href=\"https://github.com/vmware/harbor\"\u003evmware/harbor\u003c/a\u003e\u003c/li\u003e\n  \u003cli\u003e\u003ca href=\"https://ppt.geekbang.org/list/cnutcon2018\"\u003e大浪：携程的容器化交付实践\u003c/a\u003e\u003c/li\u003e\n  \u003cli\u003eGithub: \u003ca href=\"https://github.com/docker/distribution\"\u003eDocker Registry\u003c/a\u003e\u003c/li\u003e\n  \u003cli\u003e\u003ca href=\"https://www.a10networks.com/resources/articles/global-server-load-balancing\"\u003eWhat Is Global Server Load Balancing (GSLB)?\u003c/a\u003e\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003ch2 id=\"appendix-configuration-files\"\u003eAppendix: Configuration Files\u003c/h2\u003e\n\n\u003col\u003e\n  \u003cli\u003eNginx Conf: \u003ca href=\"/assets/img/monitoring-hub/nginx.conf\"\u003enginx.conf\u003c/a\u003e\u003c/li\u003e\n  \u003cli\u003eTelegraf Conf: \u003ca href=\"/assets/img/monitoring-hub/hub_nginx.conf\"\u003ehub_nginx.conf\u003c/a\u003e\u003c/li\u003e\n  \u003cli\u003eGrafana Conf: \u003ca href=\"/assets/img/monitoring-hub/grafana.json\"\u003egrafana.json\u003c/a\u003e\u003c/li\u003e\n\u003c/ol\u003e\n\n\n  \u003c!-- POST NAVIGATION --\u003e\n  \u003cdiv class=\"postNav clearfix\"\u003e\n     \n      \u003ca class=\"prev\" href=\"/blog/traffic-mirror-with-ovs/\"\u003e\u003cspan\u003e« Traffic Mirroring With OVS\u003c/span\u003e\n      \n    \u003c/a\u003e\n      \n      \n      \u003ca class=\"next\" href=\"/blog/tcpdump/\"\u003e\u003cspan\u003etcpdump: An Incomplete Guide »\u003c/span\u003e\n       \n      \u003c/a\u003e\n     \n  \u003c/div\u003e\n\u003c/div\u003e",
  "Date": "2018-11-20T00:00:00Z",
  "Author": "Arthur Chiao"
}