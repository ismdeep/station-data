{
  "Source": "arthurchiao.art",
  "Title": "源码解析：K8s 创建 pod 时，背后发生了什么（二）（2021）",
  "Link": "https://arthurchiao.art/blog/what-happens-when-k8s-creates-pods-2-zh/",
  "Content": "\u003cdiv class=\"post\"\u003e\n  \n  \u003ch1 class=\"postTitle\"\u003e源码解析：K8s 创建 pod 时，背后发生了什么（二）（2021）\u003c/h1\u003e\n  \u003cp class=\"meta\"\u003ePublished at 2021-06-01 | Last Update 2022-03-17\u003c/p\u003e\n  \n  \u003cp\u003e本文基于 2019 年的一篇文章\n\u003ca href=\"https://github.com/jamiehannaford/what-happens-when-k8s\"\u003eWhat happens when … Kubernetes edition!\u003c/a\u003e\n\u003cstrong\u003e\u003cmark\u003e梳理了 k8s 创建 pod\u003c/mark\u003e\u003c/strong\u003e（及其 deployment/replicaset）\u003cstrong\u003e\u003cmark\u003e的整个过程\u003c/mark\u003e\u003c/strong\u003e，\n整理了每个\u003cstrong\u003e重要步骤的代码调用栈\u003c/strong\u003e，以\u003cstrong\u003e\u003cmark\u003e在实现层面加深对整个过程的理解\u003c/mark\u003e\u003c/strong\u003e。\u003c/p\u003e\n\n\u003cp\u003e原文参考的 k8S 代码已经较老（\u003ccode class=\"language-plaintext highlighter-rouge\"\u003ev1.8\u003c/code\u003e/\u003ccode class=\"language-plaintext highlighter-rouge\"\u003ev1.14\u003c/code\u003e 以及当时的 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003emaster\u003c/code\u003e），且部分代码\n链接已失效；\u003cstrong\u003e本文代码基于 \u003ca href=\"https://github.com/kubernetes/kubernetes/tree/v1.21.1\"\u003e\u003ccode class=\"language-plaintext highlighter-rouge\"\u003ev1.21\u003c/code\u003e\u003c/a\u003e\u003c/strong\u003e。\u003c/p\u003e\n\n\u003cp\u003e由于内容已经不与原文一一对应（有增加和删减），因此标题未加 “[译]” 等字样。感谢原作者（们）的精彩文章。\u003c/p\u003e\n\n\u003cp\u003e篇幅太长，分成了几部分：\u003c/p\u003e\n\n\u003col\u003e\n  \u003cli\u003e\u003ca href=\"/blog/what-happens-when-k8s-creates-pods-1-zh/\"\u003e源码解析：K8s 创建 pod 时，背后发生了什么（一）（2021）\u003c/a\u003e\u003c/li\u003e\n  \u003cli\u003e\u003ca href=\"/blog/what-happens-when-k8s-creates-pods-2-zh/\"\u003e源码解析：K8s 创建 pod 时，背后发生了什么（二）（2021）\u003c/a\u003e\u003c/li\u003e\n  \u003cli\u003e\u003ca href=\"/blog/what-happens-when-k8s-creates-pods-3-zh/\"\u003e源码解析：K8s 创建 pod 时，背后发生了什么（三）（2021）\u003c/a\u003e\u003c/li\u003e\n  \u003cli\u003e\u003ca href=\"/blog/what-happens-when-k8s-creates-pods-4-zh/\"\u003e源码解析：K8s 创建 pod 时，背后发生了什么（四）（2021）\u003c/a\u003e\u003c/li\u003e\n  \u003cli\u003e\u003ca href=\"/blog/what-happens-when-k8s-creates-pods-5-zh/\"\u003e源码解析：K8s 创建 pod 时，背后发生了什么（五）（2021）\u003c/a\u003e\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003chr/\u003e\n\n\u003cul id=\"markdown-toc\"\u003e\n  \u003cli\u003e\u003ca href=\"#1-kubectl命令行客户端\" id=\"markdown-toc-1-kubectl命令行客户端\"\u003e1 kubectl（命令行客户端）\u003c/a\u003e    \u003cul\u003e\n      \u003cli\u003e\u003ca href=\"#10-调用栈概览\" id=\"markdown-toc-10-调用栈概览\"\u003e1.0 调用栈概览\u003c/a\u003e\u003c/li\u003e\n      \u003cli\u003e\u003ca href=\"#11-参数验证validation和资源对象生成器generator\" id=\"markdown-toc-11-参数验证validation和资源对象生成器generator\"\u003e1.1 参数验证（validation）和资源对象生成器（generator）\u003c/a\u003e        \u003cul\u003e\n          \u003cli\u003e\u003ca href=\"#参数验证\" id=\"markdown-toc-参数验证\"\u003e参数验证\u003c/a\u003e\u003c/li\u003e\n          \u003cli\u003e\u003ca href=\"#创建-http-请求\" id=\"markdown-toc-创建-http-请求\"\u003e创建 HTTP 请求\u003c/a\u003e\u003c/li\u003e\n          \u003cli\u003e\u003ca href=\"#generators\" id=\"markdown-toc-generators\"\u003eGenerators\u003c/a\u003e\u003c/li\u003e\n        \u003c/ul\u003e\n      \u003c/li\u003e\n      \u003cli\u003e\u003ca href=\"#12-api-group-和版本协商version-negotiation\" id=\"markdown-toc-12-api-group-和版本协商version-negotiation\"\u003e1.2 API group 和版本协商（version negotiation）\u003c/a\u003e        \u003cul\u003e\n          \u003cli\u003e\u003ca href=\"#api-group\" id=\"markdown-toc-api-group\"\u003eAPI Group\u003c/a\u003e\u003c/li\u003e\n          \u003cli\u003e\u003ca href=\"#版本协商\" id=\"markdown-toc-版本协商\"\u003e版本协商\u003c/a\u003e\u003c/li\u003e\n          \u003cli\u003e\u003ca href=\"#发送-http-请求\" id=\"markdown-toc-发送-http-请求\"\u003e发送 HTTP 请求\u003c/a\u003e\u003c/li\u003e\n        \u003c/ul\u003e\n      \u003c/li\u003e\n      \u003cli\u003e\u003ca href=\"#13-客户端认证client-auth\" id=\"markdown-toc-13-客户端认证client-auth\"\u003e1.3 客户端认证（client auth）\u003c/a\u003e\u003c/li\u003e\n    \u003c/ul\u003e\n  \u003c/li\u003e\n\u003c/ul\u003e\n\n\u003chr/\u003e\n\n\u003ch1 id=\"1-kubectl命令行客户端\"\u003e1 kubectl（命令行客户端）\u003c/h1\u003e\n\n\u003ch2 id=\"10-调用栈概览\"\u003e1.0 调用栈概览\u003c/h2\u003e\n\n\u003cdiv class=\"language-plaintext highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003eNewKubectlCommand                                    // staging/src/k8s.io/kubectl/pkg/cmd/cmd.go\n |-matchVersionConfig = NewMatchVersionFlags()\n |-f = cmdutil.NewFactory(matchVersionConfig)\n |      |-clientGetter = matchVersionConfig\n |-NewCmdRun(f)                                      // staging/src/k8s.io/kubectl/pkg/cmd/run/run.go\n |  |-Complete                                       // staging/src/k8s.io/kubectl/pkg/cmd/run/run.go\n |  |-Run(f)                                         // staging/src/k8s.io/kubectl/pkg/cmd/run/run.go\n |    |-validate parameters\n |    |-generators = GeneratorFn(\u0026#34;run\u0026#34;)\n |    |-runObj = createGeneratedObject(generators)   // staging/src/k8s.io/kubectl/pkg/cmd/run/run.go\n |    |           |-obj = generator.Generate()       // -\u0026gt; staging/src/k8s.io/kubectl/pkg/generate/versioned/run.go\n |    |           |        |-get pod params\n |    |           |        |-pod = v1.Pod{params}\n |    |           |        |-return \u0026amp;pod\n |    |           |-mapper = f.ToRESTMapper()        // -\u0026gt; staging/src/k8s.io/cli-runtime/pkg/genericclioptions/config_flags.go\n |    |           |  |-f.clientGetter.ToRESTMapper() // -\u0026gt; staging/src/k8s.io/kubectl/pkg/cmd/util/factory_client_access.go\n |    |           |     |-f.Delegate.ToRESTMapper()  // -\u0026gt; staging/src/k8s.io/kubectl/pkg/cmd/util/kubectl_match_version.go\n |    |           |        |-ToRESTMapper            // -\u0026gt; staging/src/k8s.io/cli-runtime/pkg/resource/builder.go\n |    |           |        |-delegate()              //    staging/src/k8s.io/cli-runtime/pkg/resource/builder.go\n |    |           |--actualObj = resource.NewHelper(mapping).XX.Create(obj)\n |    |-PrintObj(runObj.Object)\n |\n |-NewCmdEdit(f)      // kubectl edit   命令\n |-NewCmdScale(f)     // kubectl scale  命令\n |-NewCmdCordon(f)    // kubectl cordon 命令\n |-NewCmdUncordon(f)\n |-NewCmdDrain(f)\n |-NewCmdTaint(f)\n |-NewCmdExecute(f)\n |-...\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003ch2 id=\"11-参数验证validation和资源对象生成器generator\"\u003e1.1 参数验证（validation）和资源对象生成器（generator）\u003c/h2\u003e\n\n\u003ch3 id=\"参数验证\"\u003e参数验证\u003c/h3\u003e\n\n\u003cp\u003e敲下 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003ekubectl\u003c/code\u003e 命令后，它首先会做一些\u003cstrong\u003e\u003cmark\u003e客户端侧\u003c/mark\u003e\u003c/strong\u003e的验证。\n如果命令行参数有问题，例如，\u003ca href=\"https://github.com/kubernetes/kubernetes/blob/v1.21.0/staging/src/k8s.io/kubectl/pkg/cmd/run/run.go#L262\"\u003e镜像名为空或格式不对\u003c/a\u003e，\n这里会直接报错，从而避免了将明显错误的请求发给 kube-apiserver，减轻了后者的压力。\u003c/p\u003e\n\n\u003cp\u003e此外，kubectl 还会检查其他一些配置，例如\u003c/p\u003e\n\n\u003cul\u003e\n  \u003cli\u003e是否需要记录（record）这条命令（用于 rollout 或审计）\u003c/li\u003e\n  \u003cli\u003e是否是空跑（\u003ccode class=\"language-plaintext highlighter-rouge\"\u003e--dry-run\u003c/code\u003e）\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch3 id=\"创建-http-请求\"\u003e创建 HTTP 请求\u003c/h3\u003e\n\n\u003cp\u003e所有\u003cstrong\u003e查询或修改 K8s 资源的操作\u003c/strong\u003e都需要与 kube-apiserver 交互，后者会进一步和 etcd 通信。\u003c/p\u003e\n\n\u003cp\u003e因此，验证通过之后，kubectl 接下来会\u003cstrong\u003e\u003cmark\u003e创建发送给 kube-apiserver 的 HTTP 请求\u003c/mark\u003e\u003c/strong\u003e。\u003c/p\u003e\n\n\u003ch3 id=\"generators\"\u003eGenerators\u003c/h3\u003e\n\n\u003cp\u003e\u003cstrong\u003e\u003cmark\u003e创建 HTTP 请求用到了所谓的\u003c/mark\u003e\u003c/strong\u003e\n\u003ca href=\"https://github.com/kubernetes/kubernetes/blob/v1.21.0/staging/src/k8s.io/kubectl/pkg/cmd/run/run.go#L300\"\u003egenerator\u003c/a\u003e\n（\u003ca href=\"https://kubernetes.io/docs/user-guide/kubectl-conventions/#generators\"\u003e文档\u003c/a\u003e）\n，它\u003cstrong\u003e\u003cmark\u003e封装了资源的序列化（serialization）操作\u003c/mark\u003e\u003c/strong\u003e。\n例如，创建 pod 时用到的 generator 是 \u003ca href=\"https://github.com/kubernetes/kubernetes/blob/v1.21.0/staging/src/k8s.io/kubectl/pkg/generate/versioned/run.go#L233\"\u003e\u003ccode class=\"language-plaintext highlighter-rouge\"\u003eBasicPod\u003c/code\u003e\u003c/a\u003e：\u003c/p\u003e\n\n\u003cdiv class=\"language-go highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"c\"\u003e// staging/src/k8s.io/kubectl/pkg/generate/versioned/run.go\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003etype\u003c/span\u003e \u003cspan class=\"n\"\u003eBasicPod\u003c/span\u003e \u003cspan class=\"k\"\u003estruct\u003c/span\u003e\u003cspan class=\"p\"\u003e{}\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003efunc\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eBasicPod\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"n\"\u003eParamNames\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e[]\u003c/span\u003e\u003cspan class=\"n\"\u003egenerate\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eGeneratorParam\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"p\"\u003e[]\u003c/span\u003e\u003cspan class=\"n\"\u003egenerate\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eGeneratorParam\u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"n\"\u003eName\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;labels\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eRequired\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"no\"\u003efalse\u003c/span\u003e\u003cspan class=\"p\"\u003e},\u003c/span\u003e\n        \u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"n\"\u003eName\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;name\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eRequired\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"no\"\u003etrue\u003c/span\u003e\u003cspan class=\"p\"\u003e},\u003c/span\u003e\n        \u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"n\"\u003eName\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;image\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eRequired\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"no\"\u003etrue\u003c/span\u003e\u003cspan class=\"p\"\u003e},\u003c/span\u003e\n        \u003cspan class=\"o\"\u003e...\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e每个 generator 都实现了一个 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eGenerate()\u003c/code\u003e 方法，用于\u003cstrong\u003e\u003cmark\u003e生成一个该资源的运行时对象（runtime object）\u003c/mark\u003e\u003c/strong\u003e。\n对于 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eBasicPod\u003c/code\u003e，其\u003ca href=\"https://github.com/kubernetes/kubernetes/blob/v1.21.0/staging/src/k8s.io/kubectl/pkg/generate/versioned/run.go#L259\"\u003e实现\u003c/a\u003e为：\u003c/p\u003e\n\n\u003cdiv class=\"language-go highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003efunc\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eBasicPod\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"n\"\u003eGenerate\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003egenericParams\u003c/span\u003e \u003cspan class=\"k\"\u003emap\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"kt\"\u003estring\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\u003cspan class=\"k\"\u003einterface\u003c/span\u003e\u003cspan class=\"p\"\u003e{})\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eruntime\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eObject\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"kt\"\u003eerror\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"n\"\u003epod\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"n\"\u003ev1\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ePod\u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"n\"\u003eObjectMeta\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003emetav1\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eObjectMeta\u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e  \u003cspan class=\"c\"\u003e// metadata 字段\u003c/span\u003e\n            \u003cspan class=\"n\"\u003eName\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e        \u003cspan class=\"n\"\u003ename\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n            \u003cspan class=\"n\"\u003eLabels\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e      \u003cspan class=\"n\"\u003elabels\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n            \u003cspan class=\"o\"\u003e...\u003c/span\u003e\n        \u003cspan class=\"p\"\u003e},\u003c/span\u003e\n        \u003cspan class=\"n\"\u003eSpec\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003ev1\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ePodSpec\u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e               \u003cspan class=\"c\"\u003e// spec 字段\u003c/span\u003e\n            \u003cspan class=\"n\"\u003eServiceAccountName\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003eparams\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;serviceaccount\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e],\u003c/span\u003e\n            \u003cspan class=\"n\"\u003eContainers\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"p\"\u003e[]\u003c/span\u003e\u003cspan class=\"n\"\u003ev1\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eContainer\u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n                \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n                    \u003cspan class=\"n\"\u003eName\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e            \u003cspan class=\"n\"\u003ename\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n                    \u003cspan class=\"n\"\u003eImage\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e           \u003cspan class=\"n\"\u003eparams\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;image\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\n                \u003cspan class=\"p\"\u003e},\u003c/span\u003e\n            \u003cspan class=\"p\"\u003e},\u003c/span\u003e\n        \u003cspan class=\"p\"\u003e},\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e\u003cspan class=\"n\"\u003epod\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"no\"\u003enil\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003ch2 id=\"12-api-group-和版本协商version-negotiation\"\u003e1.2 API group 和版本协商（version negotiation）\u003c/h2\u003e\n\n\u003cp\u003e有了 runtime object 之后，kubectl 需要用合适的 API 将请求发送给 kube-apiserver。\u003c/p\u003e\n\n\u003ch3 id=\"api-group\"\u003eAPI Group\u003c/h3\u003e\n\n\u003cp\u003eK8s 用 API group 来管理 resource API。\n这是一种不同于 monolithic API（所有 API 扁平化）的 API 管理方式。\u003c/p\u003e\n\n\u003cp\u003e具体来说，\u003cstrong\u003e\u003cmark\u003e同一资源的不同版本的 API，会放到一个 group 里面\u003c/mark\u003e\u003c/strong\u003e。\n例如 Deployment 资源的 API group 名为 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eapps\u003c/code\u003e，最新的版本是 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003ev1\u003c/code\u003e。这也是为什么\n我们在创建 Deployment 时，需要在 yaml 中指定 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eapiVersion: apps/v1\u003c/code\u003e 的原因。\u003c/p\u003e\n\n\u003ch3 id=\"版本协商\"\u003e版本协商\u003c/h3\u003e\n\n\u003cp\u003e生成 runtime object 之后，kubectl 就开始\n\u003ca href=\"https://github.com/kubernetes/kubernetes/blob/v1.21.0/staging/src/k8s.io/kubectl/pkg/cmd/run/run.go#L610-L619\"\u003e搜索合适的 API group 和版本\u003c/a\u003e：\u003c/p\u003e\n\n\u003cdiv class=\"language-go highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"c\"\u003e// staging/src/k8s.io/kubectl/pkg/cmd/run/run.go\u003c/span\u003e\n\n    \u003cspan class=\"n\"\u003eobj\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"n\"\u003egenerator\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eGenerate\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eparams\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"c\"\u003e// 创建运行时对象\u003c/span\u003e\n    \u003cspan class=\"n\"\u003emapper\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"n\"\u003ef\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eToRESTMapper\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e        \u003cspan class=\"c\"\u003e// 寻找适合这个资源（对象）的 API group\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e然后\u003ca href=\"https://github.com/kubernetes/kubernetes/blob/v1.21.0/staging/src/k8s.io/kubectl/pkg/cmd/run/run.go#L641\"\u003e创建一个正确版本的客户端（versioned client）\u003c/a\u003e，\u003c/p\u003e\n\n\u003cdiv class=\"language-go highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"c\"\u003e// staging/src/k8s.io/kubectl/pkg/cmd/run/run.go\u003c/span\u003e\n\n    \u003cspan class=\"n\"\u003egvks\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003e_\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"n\"\u003escheme\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eScheme\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eObjectKinds\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eobj\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n    \u003cspan class=\"n\"\u003emapping\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"n\"\u003emapper\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eRESTMapping\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003egvks\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"m\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eGroupKind\u003c/span\u003e\u003cspan class=\"p\"\u003e(),\u003c/span\u003e \u003cspan class=\"n\"\u003egvks\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"m\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eVersion\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e这个客户端能感知资源的 REST 语义。\u003c/p\u003e\n\n\u003cp\u003e以上过程称为\u003cstrong\u003e\u003cmark\u003e版本协商\u003c/mark\u003e\u003c/strong\u003e。在实现上，kubectl 会\n\u003cstrong\u003e\u003cmark\u003e扫描 kube-apiserver 的 \u003ccode\u003e/apis\u003c/code\u003e 路径\u003c/mark\u003e\u003c/strong\u003e\n（OpenAPI 格式的 schema 文档），获取所有的 API groups。\u003c/p\u003e\n\n\u003cp\u003e出于性能考虑，kubectl 会\n\u003ca href=\"https://github.com/kubernetes/kubernetes/blob/v1.14.0/staging/src/k8s.io/cli-runtime/pkg/genericclioptions/config_flags.go#L234\"\u003e缓存这份 OpenAPI schema\u003c/a\u003e，\n路径是 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003e~/.kube/cache/discovery\u003c/code\u003e。\u003cstrong\u003e\u003cmark\u003e想查看这个 API discovery 过程，可以删除这个文件\u003c/mark\u003e\u003c/strong\u003e，\n然后随便执行一条 kubectl 命令，并指定足够大的日志级别（例如 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003ekubectl get ds -v 10\u003c/code\u003e）。\u003c/p\u003e\n\n\u003ch3 id=\"发送-http-请求\"\u003e发送 HTTP 请求\u003c/h3\u003e\n\n\u003cp\u003e现在有了 runtime object，也找到了正确的 API，因此接下来就是\n将请求真正\u003ca href=\"https://github.com/kubernetes/kubernetes/blob/v1.21.0/staging/src/k8s.io/kubectl/pkg/cmd/run/run.go#L654\"\u003e发送出去\u003c/a\u003e：\u003c/p\u003e\n\n\u003cdiv class=\"language-go highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"c\"\u003e// staging/src/k8s.io/kubectl/pkg/cmd/cmd.go\u003c/span\u003e\n\n        \u003cspan class=\"n\"\u003eactualObj\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eresource\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\n            \u003cspan class=\"n\"\u003eNewHelper\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eclient\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003emapping\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\n            \u003cspan class=\"n\"\u003eDryRun\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eo\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eDryRunStrategy\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"n\"\u003ecmdutil\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eDryRunServer\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\n            \u003cspan class=\"n\"\u003eWithFieldManager\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eo\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003efieldManager\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\n            \u003cspan class=\"n\"\u003eCreate\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eo\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eNamespace\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"no\"\u003efalse\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eobj\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e发送成功后，会以恰当的格式打印返回的消息。\u003c/p\u003e\n\n\u003ch2 id=\"13-客户端认证client-auth\"\u003e1.3 客户端认证（client auth）\u003c/h2\u003e\n\n\u003cp\u003e前面其实有意漏掉了一步：客户端认证。它发生在发送 HTTP 请求之前。\u003c/p\u003e\n\n\u003cp\u003e\u003cstrong\u003e\u003cmark\u003e用户凭证（credentials）一般都放在 kubeconfig 文件中，但这个文件可以位于多个位置\u003c/mark\u003e\u003c/strong\u003e，\n优先级从高到低：\u003c/p\u003e\n\n\u003cul\u003e\n  \u003cli\u003e命令行 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003e--kubeconfig \u0026lt;file\u0026gt;\u003c/code\u003e\u003c/li\u003e\n  \u003cli\u003e环境变量 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003e$KUBECONFIG\u003c/code\u003e\u003c/li\u003e\n  \u003cli\u003e某些\u003ca href=\"https://github.com/kubernetes/client-go/blob/v1.21.0/tools/clientcmd/loader.go#L52\"\u003e预定义的路径\u003c/a\u003e，例如 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003e~/.kube\u003c/code\u003e。\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003e\u003cstrong\u003e\u003cmark\u003e这个文件中存储了集群、用户认证等信息\u003c/mark\u003e\u003c/strong\u003e，如下面所示：\u003c/p\u003e\n\n\u003cdiv class=\"language-yaml highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"na\"\u003eapiVersion\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003ev1\u003c/span\u003e\n\u003cspan class=\"na\"\u003eclusters\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e\n\u003cspan class=\"pi\"\u003e-\u003c/span\u003e \u003cspan class=\"na\"\u003ecluster\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e\n    \u003cspan class=\"na\"\u003ecertificate-authority\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003e/etc/kubernetes/pki/ca.crt\u003c/span\u003e\n    \u003cspan class=\"na\"\u003eserver\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003ehttps://192.168.2.100:443\u003c/span\u003e\n  \u003cspan class=\"na\"\u003ename\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003ek8s-cluster-1\u003c/span\u003e\n\u003cspan class=\"na\"\u003econtexts\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e\n\u003cspan class=\"pi\"\u003e-\u003c/span\u003e \u003cspan class=\"na\"\u003econtext\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e\n    \u003cspan class=\"na\"\u003ecluster\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003ek8s-cluster-1\u003c/span\u003e\n    \u003cspan class=\"na\"\u003euser\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003edefault-user\u003c/span\u003e\n  \u003cspan class=\"na\"\u003ename\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003edefault-context\u003c/span\u003e\n\u003cspan class=\"na\"\u003ecurrent-context\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003edefault-context\u003c/span\u003e\n\u003cspan class=\"na\"\u003ekind\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003eConfig\u003c/span\u003e\n\u003cspan class=\"na\"\u003epreferences\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"pi\"\u003e{}\u003c/span\u003e\n\u003cspan class=\"na\"\u003eusers\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e\n\u003cspan class=\"pi\"\u003e-\u003c/span\u003e \u003cspan class=\"na\"\u003ename\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003edefault-user\u003c/span\u003e\n  \u003cspan class=\"na\"\u003euser\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e\n    \u003cspan class=\"na\"\u003eclient-certificate\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003e/etc/kubernetes/pki/admin.crt\u003c/span\u003e\n    \u003cspan class=\"na\"\u003eclient-key\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003e/etc/kubernetes/pki/admin.key\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e有了这些信息之后，客户端就可以组装 HTTP 请求的认证头了。支持的认证方式有几种：\u003c/p\u003e\n\n\u003cul\u003e\n  \u003cli\u003e\u003cstrong\u003e\u003cmark\u003eX509 证书\u003c/mark\u003e\u003c/strong\u003e：放到 \u003ca href=\"https://github.com/kubernetes/client-go/blob/82aa063804cf055e16e8911250f888bc216e8b61/rest/transport.go#L80-L89\"\u003eTLS\u003c/a\u003e 中发送；\u003c/li\u003e\n  \u003cli\u003e\u003cstrong\u003e\u003cmark\u003eBearer token\u003c/mark\u003e\u003c/strong\u003e：放到 HTTP \u003ccode class=\"language-plaintext highlighter-rouge\"\u003e\u0026#34;Authorization\u0026#34;\u003c/code\u003e 头中\n\u003ca href=\"https://github.com/kubernetes/client-go/blob/c6f8cf2c47d21d55fa0df928291b2580544886c8/transport/round_trippers.go#L314\"\u003e发送\u003c/a\u003e；\u003c/li\u003e\n  \u003cli\u003e\u003cstrong\u003e\u003cmark\u003e用户名密码\u003c/mark\u003e\u003c/strong\u003e：放到 HTTP basic auth\n\u003ca href=\"https://github.com/kubernetes/client-go/blob/c6f8cf2c47d21d55fa0df928291b2580544886c8/transport/round_trippers.go#L223\"\u003e发送\u003c/a\u003e；\u003c/li\u003e\n  \u003cli\u003e\u003cstrong\u003e\u003cmark\u003eOpenID Connect (OIDC)\u003c/mark\u003e\u003c/strong\u003e 认证（例如和外部的 Keystone、Google 账号打通）：需要先由用户手动处理，将其转成一个 token，然后和 bearer token 类似发送。\u003c/li\u003e\n\u003c/ul\u003e\n\n\n  \u003c!-- POST NAVIGATION --\u003e\n  \u003cdiv class=\"postNav clearfix\"\u003e\n     \n      \u003ca class=\"prev\" href=\"/blog/what-happens-when-k8s-creates-pods-1-zh/\"\u003e\u003cspan\u003e« 源码解析：K8s 创建 pod 时，背后发生了什么（一）（2021）\u003c/span\u003e\n      \n    \u003c/a\u003e\n      \n      \n      \u003ca class=\"next\" href=\"/blog/what-happens-when-k8s-creates-pods-3-zh/\"\u003e\u003cspan\u003e源码解析：K8s 创建 pod 时，背后发生了什么（三）（2021） »\u003c/span\u003e\n       \n      \u003c/a\u003e\n     \n  \u003c/div\u003e\n\u003c/div\u003e",
  "Date": "2021-06-01T00:00:00Z",
  "Author": "Arthur Chiao"
}