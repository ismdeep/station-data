{
  "Source": "arthurchiao.art",
  "Title": "K8s 的核心是 API 而非容器（二）：从开源项目看 k8s 的几种 API 扩展机制（2023）",
  "Link": "https://arthurchiao.art/blog/k8s-is-about-apis-2-zh/",
  "Content": "\u003cdiv class=\"post\"\u003e\n  \n  \u003ch1 class=\"postTitle\"\u003eK8s 的核心是 API 而非容器（二）：从开源项目看 k8s 的几种 API 扩展机制（2023）\u003c/h1\u003e\n  \u003cp class=\"meta\"\u003ePublished at 2023-10-14 | Last Update 2023-10-14\u003c/p\u003e\n  \n  \u003cp align=\"center\"\u003e\u003cimg src=\"/assets/img/k8s-is-about-apis/kube-apiserver-internal.png\" width=\"70%\" height=\"70%\"/\u003e\u003c/p\u003e\n\u003cp align=\"center\"\u003eFig. kube-apiserver internal flows when processing a request. Image source\n  \u003ca href=\"https://www.oreilly.com/library/view/programming-kubernetes/9781492047094/ch04.html\"\u003eProgramming Kubernetes, O\u0026#39;Reilly\u003c/a\u003e\n\u003c/p\u003e\n\n\u003cp\u003e第一篇介绍了 k8s 的 API 设计。本文作为第二篇，通过具体开源项目来了解 k8s API 的几种扩展机制。\u003c/p\u003e\n\n\u003cul\u003e\n  \u003cli\u003e\u003ca href=\"/blog/k8s-is-about-apis-zh/\"\u003eK8s 的核心是 API 而非容器（一）：从理论到 CRD 实践（2022）\u003c/a\u003e\u003c/li\u003e\n  \u003cli\u003e\u003ca href=\"/blog/k8s-is-about-apis-2-zh/\"\u003eK8s 的核心是 API 而非容器（二）：从开源项目看 k8s 的几种 API 扩展机制（2023）\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003chr/\u003e\n\n\u003cul id=\"markdown-toc\"\u003e\n  \u003cli\u003e\u003ca href=\"#1-引言\" id=\"markdown-toc-1-引言\"\u003e1 引言\u003c/a\u003e    \u003cul\u003e\n      \u003cli\u003e\u003ca href=\"#11-扩展-api-的需求\" id=\"markdown-toc-11-扩展-api-的需求\"\u003e1.1 扩展 API 的需求\u003c/a\u003e\u003c/li\u003e\n      \u003cli\u003e\u003ca href=\"#12-k8s-resource--api-回顾\" id=\"markdown-toc-12-k8s-resource--api-回顾\"\u003e1.2 K8s Resource \u0026amp; API 回顾\u003c/a\u003e        \u003cul\u003e\n          \u003cli\u003e\u003ca href=\"#121-api-resources\" id=\"markdown-toc-121-api-resources\"\u003e1.2.1 API Resources\u003c/a\u003e\u003c/li\u003e\n          \u003cli\u003e\u003ca href=\"#122-api-使用方式\" id=\"markdown-toc-122-api-使用方式\"\u003e1.2.2 API 使用方式\u003c/a\u003e\u003c/li\u003e\n        \u003c/ul\u003e\n      \u003c/li\u003e\n      \u003cli\u003e\u003ca href=\"#13-小结\" id=\"markdown-toc-13-小结\"\u003e1.3 小结\u003c/a\u003e\u003c/li\u003e\n    \u003c/ul\u003e\n  \u003c/li\u003e\n  \u003cli\u003e\u003ca href=\"#2-扩展机制一crd\" id=\"markdown-toc-2-扩展机制一crd\"\u003e2 扩展机制一：CRD\u003c/a\u003e    \u003cul\u003e\n      \u003cli\u003e\u003ca href=\"#21-案例需求用-k8s-管理虚拟机\" id=\"markdown-toc-21-案例需求用-k8s-管理虚拟机\"\u003e2.1 案例需求：用 k8s 管理虚拟机\u003c/a\u003e\u003c/li\u003e\n      \u003cli\u003e\u003ca href=\"#22-引入-virtualmachine-crd\" id=\"markdown-toc-22-引入-virtualmachine-crd\"\u003e2.2 引入 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eVirtualMachine\u003c/code\u003e CRD\u003c/a\u003e\u003c/li\u003e\n      \u003cli\u003e\u003ca href=\"#23-使用-kubectl-增删查改-virtualmachine\" id=\"markdown-toc-23-使用-kubectl-增删查改-virtualmachine\"\u003e2.3 使用 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003ekubectl\u003c/code\u003e 增删查改 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eVirtualMachine\u003c/code\u003e\u003c/a\u003e\u003c/li\u003e\n      \u003cli\u003e\u003ca href=\"#24-背后的-virtualmachine-api\" id=\"markdown-toc-24-背后的-virtualmachine-api\"\u003e2.4 背后的 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eVirtualMachine\u003c/code\u003e API\u003c/a\u003e\u003c/li\u003e\n      \u003cli\u003e\u003ca href=\"#25-小结\" id=\"markdown-toc-25-小结\"\u003e2.5 小结\u003c/a\u003e\u003c/li\u003e\n    \u003c/ul\u003e\n  \u003c/li\u003e\n  \u003cli\u003e\u003ca href=\"#3-扩展机制二aggregated-api-server-apiservice\" id=\"markdown-toc-3-扩展机制二aggregated-api-server-apiservice\"\u003e3 扩展机制二：Aggregated API Server (\u003ccode class=\"language-plaintext highlighter-rouge\"\u003eAPIService\u003c/code\u003e)\u003c/a\u003e    \u003cul\u003e\n      \u003cli\u003e\u003ca href=\"#31-用户需求\" id=\"markdown-toc-31-用户需求\"\u003e3.1 用户需求\u003c/a\u003e\u003c/li\u003e\n      \u003cli\u003e\u003ca href=\"#32-方案设计\" id=\"markdown-toc-32-方案设计\"\u003e3.2 方案设计\u003c/a\u003e        \u003cul\u003e\n          \u003cli\u003e\u003ca href=\"#321-引入-kube-aggregator-模块和-apiservice-抽象\" id=\"markdown-toc-321-引入-kube-aggregator-模块和-apiservice-抽象\"\u003e3.2.1 引入 kube-aggregator 模块和 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eAPIService\u003c/code\u003e 抽象\u003c/a\u003e\u003c/li\u003e\n          \u003cli\u003e\u003ca href=\"#322-kube-apiserver-内部工作流delegate\" id=\"markdown-toc-322-kube-apiserver-内部工作流delegate\"\u003e3.2.2 kube-apiserver 内部工作流（delegate）\u003c/a\u003e\u003c/li\u003e\n        \u003c/ul\u003e\n      \u003c/li\u003e\n      \u003cli\u003e\u003ca href=\"#33-案例一k8s-官方-metrics-server\" id=\"markdown-toc-33-案例一k8s-官方-metrics-server\"\u003e3.3 案例一：k8s 官方 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003emetrics-server\u003c/code\u003e\u003c/a\u003e        \u003cul\u003e\n          \u003cli\u003e\u003ca href=\"#331-注册-apiservice\" id=\"markdown-toc-331-注册-apiservice\"\u003e3.3.1 注册 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eAPIService\u003c/code\u003e\u003c/a\u003e\u003c/li\u003e\n          \u003cli\u003e\u003ca href=\"#332-验证注册的扩展-api\" id=\"markdown-toc-332-验证注册的扩展-api\"\u003e3.3.2 验证注册的扩展 API\u003c/a\u003e\u003c/li\u003e\n          \u003cli\u003e\u003ca href=\"#333-命令行支持k-top-nodepod\" id=\"markdown-toc-333-命令行支持k-top-nodepod\"\u003e3.3.3 命令行支持：\u003ccode class=\"language-plaintext highlighter-rouge\"\u003ek top node/pod\u003c/code\u003e\u003c/a\u003e\u003c/li\u003e\n        \u003c/ul\u003e\n      \u003c/li\u003e\n      \u003cli\u003e\u003ca href=\"#34-案例二kubevirt\" id=\"markdown-toc-34-案例二kubevirt\"\u003e3.4 案例二：kubevirt\u003c/a\u003e        \u003cul\u003e\n          \u003cli\u003e\u003ca href=\"#341-apiservice-注册\" id=\"markdown-toc-341-apiservice-注册\"\u003e3.4.1 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eAPIService\u003c/code\u003e 注册\u003c/a\u003e\u003c/li\u003e\n          \u003cli\u003e\u003ca href=\"#342-sub-url-handler-注册virt-api\" id=\"markdown-toc-342-sub-url-handler-注册virt-api\"\u003e3.4.2 Sub-url handler 注册（\u003ccode class=\"language-plaintext highlighter-rouge\"\u003evirt-api\u003c/code\u003e）\u003c/a\u003e\u003c/li\u003e\n          \u003cli\u003e\u003ca href=\"#343-测试\" id=\"markdown-toc-343-测试\"\u003e3.4.3 测试\u003c/a\u003e\u003c/li\u003e\n        \u003c/ul\u003e\n      \u003c/li\u003e\n      \u003cli\u003e\u003ca href=\"#35-其他案例\" id=\"markdown-toc-35-其他案例\"\u003e3.5 其他案例\u003c/a\u003e\u003c/li\u003e\n      \u003cli\u003e\u003ca href=\"#36-apiservice-分类localexternal\" id=\"markdown-toc-36-apiservice-分类localexternal\"\u003e3.6 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eAPIService\u003c/code\u003e 分类：\u003ccode class=\"language-plaintext highlighter-rouge\"\u003eLocal/external\u003c/code\u003e\u003c/a\u003e\u003c/li\u003e\n    \u003c/ul\u003e\n  \u003c/li\u003e\n  \u003cli\u003e\u003ca href=\"#4-两种机制的对比crd-vs-apiservice\" id=\"markdown-toc-4-两种机制的对比crd-vs-apiservice\"\u003e4 两种机制的对比：\u003ccode class=\"language-plaintext highlighter-rouge\"\u003eCRD\u003c/code\u003e vs. \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eAPIService\u003c/code\u003e\u003c/a\u003e    \u003cul\u003e\n      \u003cli\u003e\u003ca href=\"#41-所在的资源组不同\" id=\"markdown-toc-41-所在的资源组不同\"\u003e4.1 所在的资源组不同\u003c/a\u003e\u003c/li\u003e\n      \u003cli\u003e\u003ca href=\"#42-目的和场景不同\" id=\"markdown-toc-42-目的和场景不同\"\u003e4.2 目的和场景不同\u003c/a\u003e\u003c/li\u003e\n      \u003cli\u003e\u003ca href=\"#43-使用建议\" id=\"markdown-toc-43-使用建议\"\u003e4.3 使用建议\u003c/a\u003e\u003c/li\u003e\n    \u003c/ul\u003e\n  \u003c/li\u003e\n  \u003cli\u003e\u003ca href=\"#5-webhook-机制\" id=\"markdown-toc-5-webhook-机制\"\u003e5 Webhook 机制\u003c/a\u003e    \u003cul\u003e\n      \u003cli\u003e\u003ca href=\"#51-webhook-位置及原理\" id=\"markdown-toc-51-webhook-位置及原理\"\u003e5.1 Webhook 位置及原理\u003c/a\u003e\u003c/li\u003e\n      \u003cli\u003e\u003ca href=\"#52-mutating-案例过滤所有-createupdate-virtualmachine-请求\" id=\"markdown-toc-52-mutating-案例过滤所有-createupdate-virtualmachine-请求\"\u003e5.2 Mutating 案例：过滤所有 create/update \u003ccode class=\"language-plaintext highlighter-rouge\"\u003evirtualmachine\u003c/code\u003e 请求\u003c/a\u003e\u003c/li\u003e\n      \u003cli\u003e\u003ca href=\"#53-validating-案例拦截驱逐-virtualmachines-请求\" id=\"markdown-toc-53-validating-案例拦截驱逐-virtualmachines-请求\"\u003e5.3 Validating 案例：拦截驱逐 virtualmachines 请求\u003c/a\u003e\u003c/li\u003e\n    \u003c/ul\u003e\n  \u003c/li\u003e\n  \u003cli\u003e\u003ca href=\"#6-结束语\" id=\"markdown-toc-6-结束语\"\u003e6 结束语\u003c/a\u003e\u003c/li\u003e\n  \u003cli\u003e\u003ca href=\"#参考资料\" id=\"markdown-toc-参考资料\"\u003e参考资料\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003chr/\u003e\n\n\u003ch1 id=\"1-引言\"\u003e1 引言\u003c/h1\u003e\n\n\u003ch2 id=\"11-扩展-api-的需求\"\u003e1.1 扩展 API 的需求\u003c/h2\u003e\n\n\u003cp\u003e上一篇已经看到，k8s 所有资源都通过 kube-apiserver 以 API 的形式暴露给各组件和用户，\n例如通过 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003e/api/v1/pods/...\u003c/code\u003e 可以对 pod 执行增删查改操作。\n但如果用户有特殊需求，无法基于现有 API 实现某些目的，该怎么办呢？\u003c/p\u003e\n\n\u003cp\u003e有特殊需求的场景很多，举一个更\u003cstrong\u003e\u003cmark\u003e具体的例子\u003c/mark\u003e\u003c/strong\u003e：\n假设我们想加一个类似于 \u003ccode\u003e/api/v1/pods/namespaces/{ns}/{pod}/\u003cmark\u003ehotspots\u003c/mark\u003e\u003c/code\u003e 的 API，\n用于查询指定 pod 的某些热点指标（用户自己采集和维护）。针对这个需求有两种常见的解决思路：\u003c/p\u003e\n\n\u003col\u003e\n  \u003cli\u003e\u003cstrong\u003e\u003cmark\u003e直接改 k8s 代码\u003c/mark\u003e\u003c/strong\u003e，增加用户需要的 API 和一些处理逻辑；\u003c/li\u003e\n  \u003cli\u003e为 k8s 引入某种\u003cstrong\u003e\u003cmark\u003e通用的扩展机制\u003c/mark\u003e\u003c/strong\u003e，能让用户在\u003cstrong\u003e\u003cmark\u003e不修改 k8s 代码\u003c/mark\u003e\u003c/strong\u003e的情况下，\n  也能实现新增 API 的功能。\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003cp\u003e显然，第二种方式更为通用，而且能更快落地，因为修改 k8s 代码并合并到上游通常是一个漫长的过程。\n实际上，k8s 不仅提供了这样的机制，而且还\u003cstrong\u003e\u003cmark\u003e提供了不止一种\u003c/mark\u003e\u003c/strong\u003e。\n本文就这一主题展开介绍。\u003c/p\u003e\n\n\u003ch2 id=\"12-k8s-resource--api-回顾\"\u003e1.2 K8s Resource \u0026amp; API 回顾\u003c/h2\u003e\n\n\u003cp\u003e在深入理解 API 扩展机制之前，先简单回顾下 k8s 的 API 设计。更多信息可参考前一篇。\u003c/p\u003e\n\n\u003ch3 id=\"121-api-resources\"\u003e1.2.1 API Resources\u003c/h3\u003e\n\n\u003cp\u003eK8s 有很多内置的\u003cstrong\u003e\u003cmark\u003e对象类型\u003c/mark\u003e\u003c/strong\u003e，包括 pod、node、role、rolebinding、networkpolicy 等等，\n在 k8s 术语中，它们统称为\u003cstrong\u003e\u003cmark\u003e“Resource”\u003c/mark\u003e\u003c/strong\u003e（资源）。\n资源通过 kube-apiserver 的 API 暴露出来，可以对它们执行增删查改操作（前提是有权限）。\n用 kubectl 命令可以获取这个 resource API 列表：\u003c/p\u003e\n\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003e$ \u003c/span\u003ek api-resources\n\u003cspan class=\"c\"\u003e# 名称         # 命令行简写  # API 版本   # 是否区分 ns   # 资源类型\u003c/span\u003e\nNAME           SHORTNAMES    APIVERSION   NAMESPACED      KIND\nconfigmaps     cm            v1           \u003cspan class=\"nb\"\u003etrue            \u003c/span\u003eConfigMap\nevents         ev            v1           \u003cspan class=\"nb\"\u003etrue            \u003c/span\u003eEvent\nnamespaces     ns            v1           \u003cspan class=\"nb\"\u003efalse           \u003c/span\u003eNamespace\nnodes          no            v1           \u003cspan class=\"nb\"\u003efalse           \u003c/span\u003eNode\npods           po            v1           \u003cspan class=\"nb\"\u003etrue            \u003c/span\u003ePod\n...\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e组合以上几个字段值，就可以拼出 API。例如针对内置资源类型，以及是否区分 ns，\u003c/p\u003e\n\n\u003col\u003e\n  \u003cli\u003e\n    \u003cp\u003eNamespaced resource\u003c/p\u003e\n\n    \u003cul\u003e\n      \u003cli\u003e格式：\u003cstrong\u003e\u003cmark\u003e\u003ccode\u003e/api/{version}/namespaces/{namespace}/{resource}\u003c/code\u003e\u003c/mark\u003e\u003c/strong\u003e\u003c/li\u003e\n      \u003cli\u003e举例：\u003ccode class=\"language-plaintext highlighter-rouge\"\u003e/api/v1/namespaces/default/pods\u003c/code\u003e\u003c/li\u003e\n    \u003c/ul\u003e\n  \u003c/li\u003e\n  \u003cli\u003e\n    \u003cp\u003eUnnamespaced resource\u003c/p\u003e\n\n    \u003cul\u003e\n      \u003cli\u003e格式：\u003cstrong\u003e\u003cmark\u003e\u003ccode\u003e/api/{version}/{resource}\u003c/code\u003e\u003c/mark\u003e\u003c/strong\u003e\u003c/li\u003e\n      \u003cli\u003e举例：\u003ccode class=\"language-plaintext highlighter-rouge\"\u003e/api/v1/nodes\u003c/code\u003e\u003c/li\u003e\n    \u003c/ul\u003e\n  \u003c/li\u003e\n\u003c/ol\u003e\n\n\u003ch3 id=\"122-api-使用方式\"\u003e1.2.2 API 使用方式\u003c/h3\u003e\n\n\u003cp\u003e有两种常见的使用方式：\u003c/p\u003e\n\n\u003col\u003e\n  \u003cli\u003e\n    \u003cp\u003e通过 SDK（例如 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eclient-go\u003c/code\u003e）或裸代码，直接向 API 发起请求。适合\u003cstrong\u003e\u003cmark\u003e程序\u003c/mark\u003e\u003c/strong\u003e使用，\n  例如各种自己实现的 controller、operator、apiserver 等等。\u003c/p\u003e\n  \u003c/li\u003e\n  \u003cli\u003e\n    \u003cp\u003e通过 kubectl 命令行方式，它会将各种 CLI 参数拼接成对应的 API。适合\u003cstrong\u003e\u003cmark\u003e人\u003c/mark\u003e\u003c/strong\u003e使用，例如问题排查；\u003c/p\u003e\n\n    \u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e \u003cspan class=\"c\"\u003e# 直接增删查改指定资源（或资源类型）\u003c/span\u003e\n \u003cspan class=\"nv\"\u003e$ \u003c/span\u003ek get pods \u003cspan class=\"nt\"\u003e-n\u003c/span\u003e kube-system \u003cspan class=\"nt\"\u003e-o\u003c/span\u003e wide\n\n \u003cspan class=\"c\"\u003e# 向指定 API 发起请求\u003c/span\u003e\n \u003cspan class=\"nv\"\u003e$ \u003c/span\u003ekubectl get \u003cspan class=\"nt\"\u003e--raw\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;/apis/metrics.k8s.io/v1beta1/nodes/\u0026#34;\u003c/span\u003e | jq \u003cspan class=\"nb\"\u003e.\u003c/span\u003e | \u003cspan class=\"nb\"\u003ehead\u003c/span\u003e \u003cspan class=\"nt\"\u003e-n\u003c/span\u003e 20\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e    \u003c/div\u003e\n  \u003c/li\u003e\n\u003c/ol\u003e\n\n\u003ch2 id=\"13-小结\"\u003e1.3 小结\u003c/h2\u003e\n\n\u003cp\u003e有了以上铺垫，接下来我们将深入分析 k8s 提供的\u003cstrong\u003e\u003cmark\u003e两种 API 扩展机制\u003c/mark\u003e\u003c/strong\u003e：\u003c/p\u003e\n\n\u003col\u003e\n  \u003cli\u003eCRD (Custom Reosurce Definition)，\u003cstrong\u003e\u003cmark\u003e自定义资源\u003c/mark\u003e\u003c/strong\u003e\u003c/li\u003e\n  \u003cli\u003eKubernetes API Aggregation Layer (APIRegistration)，直译为 \u003cstrong\u003e\u003cmark\u003eAPI 聚合层\u003c/mark\u003e\u003c/strong\u003e\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003ch1 id=\"2-扩展机制一crd\"\u003e2 扩展机制一：CRD\u003c/h1\u003e\n\n\u003cp\u003e扩展 k8s API 的第一种机制称为 CRD (Custom Resource Definition)，\n在第一篇中已经有了比较详细的介绍。\u003c/p\u003e\n\n\u003cp\u003e简单来说，这种机制要求用户将自己的\u003cstrong\u003e\u003cmark\u003e自定义资源类型\u003c/mark\u003e\u003c/strong\u003e描述注册到 k8s 中，\n这种自定义资源类型称为 CRD，这种类型的对象称为 CR，后面会看到具体例子。\n从名字 Custom \u003cstrong\u003e\u003cmark\u003e\u003ccode\u003eResource\u003c/code\u003e\u003c/mark\u003e\u003c/strong\u003e 就可以看出，它们\u003cstrong\u003e\u003cmark\u003e本质上也是资源\u003c/mark\u003e\u003c/strong\u003e，\n只不过是\u003cstrong\u003e\u003cmark\u003e用户自定义资源\u003c/mark\u003e\u003c/strong\u003e，以区别于 pods/nodes/services 等\u003cstrong\u003e\u003cmark\u003e内置资源\u003c/mark\u003e\u003c/strong\u003e。\u003c/p\u003e\n\n\u003ch2 id=\"21-案例需求用-k8s-管理虚拟机\"\u003e2.1 案例需求：用 k8s 管理虚拟机\u003c/h2\u003e\n\n\u003cp\u003e第一篇中已经有关于 CRD 创建和使用的简单例子。这里再举一个\u003cstrong\u003e\u003cmark\u003e真实例子\u003c/mark\u003e\u003c/strong\u003e：\nk8s 只能管理容器，现在我们想让它连虚拟机也一起管理起来，也就是通过引入\n\u003cstrong\u003e\u003cmark\u003e\u003ccode\u003e\u0026#34;VirtualMachine\u0026#34;\u003c/code\u003e\u003c/mark\u003e\u003c/strong\u003e 这样一个抽象\n（并实现对应的 apiserver/controller/agent 等核心组件），\n实现\u003cstrong\u003e\u003cmark\u003e通过 k8s 来创建、删除和管理虚拟机\u003c/mark\u003e\u003c/strong\u003e等目的。\u003c/p\u003e\n\n\u003cp\u003e实际上已经有这样一个开源项目，叫 \u003ca href=\"https://github.com/kubevirt/kubevirt\"\u003ekubevirt\u003c/a\u003e，\n已经做到生产 ready。本文接下来就拿它作为例子。\u003c/p\u003e\n\n\u003cblockquote\u003e\n  \u003cp\u003e实际上 kubevirt 引入了多个 CRD，但本文不是关于 kubevirt 的专门介绍，因此简单起见这里只看最核心的“虚拟机”抽象。\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003ch2 id=\"22-引入-virtualmachine-crd\"\u003e2.2 引入 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eVirtualMachine\u003c/code\u003e CRD\u003c/h2\u003e\n\n\u003cp\u003e我们自定义的虚拟机资源最终要对应到 \u003cstrong\u003e\u003cmark\u003e\u003ccode\u003ek8s object\u003c/code\u003e\u003c/mark\u003e\u003c/strong\u003e，\n因此要符合后者的格式要求。从最高层来看，它非常简单：\u003c/p\u003e\n\n\u003cdiv class=\"language-go highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"c\"\u003e// https://github.com/kubevirt/kubevirt/blob/v1.0.0/staging/src/kubevirt.io/api/core/v1/types.go#L1327-L1343\u003c/span\u003e\n\n\u003cspan class=\"c\"\u003e// The VirtualMachine contains the template to create the VirtualMachineInstance.\u003c/span\u003e\n\u003cspan class=\"k\"\u003etype\u003c/span\u003e \u003cspan class=\"n\"\u003eVirtualMachine\u003c/span\u003e \u003cspan class=\"k\"\u003estruct\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\t\u003cspan class=\"n\"\u003emetav1\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eTypeMeta\u003c/span\u003e   \u003cspan class=\"s\"\u003e`json:\u0026#34;,inline\u0026#34;`\u003c/span\u003e\n\t\u003cspan class=\"n\"\u003emetav1\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eObjectMeta\u003c/span\u003e \u003cspan class=\"s\"\u003e`json:\u0026#34;metadata,omitempty\u0026#34;`\u003c/span\u003e\n\t\u003cspan class=\"n\"\u003eSpec\u003c/span\u003e \u003cspan class=\"n\"\u003eVirtualMachineSpec\u003c/span\u003e \u003cspan class=\"s\"\u003e`json:\u0026#34;spec\u0026#34; valid:\u0026#34;required\u0026#34;`\u003c/span\u003e\n\t\u003cspan class=\"n\"\u003eStatus\u003c/span\u003e \u003cspan class=\"n\"\u003eVirtualMachineStatus\u003c/span\u003e \u003cspan class=\"s\"\u003e`json:\u0026#34;status,omitempty\u0026#34;`\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e这就是一个标准 k8s object 结构，\u003c/p\u003e\n\n\u003cul\u003e\n  \u003cli\u003etype/object metadata 字段是每个 k8s object 都要带的，\u003c/li\u003e\n  \u003cli\u003e\n    \u003cp\u003eSpec 描述这个“虚拟机”对象长什么样（期望的状态），\u003c/p\u003e\n\n    \u003cp\u003e里面包括了 \u003cstrong\u003e\u003cmark\u003eCPU 架构（x86/arm/..）、PCIe 设备、磁盘、网卡\u003c/mark\u003e\u003c/strong\u003e等等关于虚拟机的描述信息；\n  这里就不展开了，有兴趣可以移步相应代码链接；\u003c/p\u003e\n  \u003c/li\u003e\n  \u003cli\u003eStatus 描述这个“虚拟机”对象现在是什么状态。\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003e将以上结构体用 OpenAPI schema 描述，就变成\n\u003ca href=\"https://github.com/kubevirt/kubevirt/blob/v1.0.0/pkg/virt-operator/resource/generate/components/validations_generated.go#L3524-L7729\"\u003ek8s 能认的格式\u003c/a\u003e，\n然后将其注册到 k8s，相当于\u003c/p\u003e\n\n\u003cdiv class=\"language-plaintext highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e$ k apply -f virtualmachine-cr.yaml\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e\u003ccode class=\"language-plaintext highlighter-rouge\"\u003eVirtualMachine\u003c/code\u003e 这个 CRD 就注册完成了。用第一篇中的类比，这就相当于\u003cstrong\u003e\u003cmark\u003e在数据库中创建了一张表\u003c/mark\u003e\u003c/strong\u003e。\n可以用 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003ekubectl explain\u003c/code\u003e 等方式来查看这张“表”的字段描述：\u003c/p\u003e\n\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003e$ \u003c/span\u003ek explain virtualmachine\nGROUP:      kubevirt.io\nKIND:       VirtualMachine\nVERSION:    v1\n...\n\n\u003cspan class=\"nv\"\u003e$ \u003c/span\u003ek get crd virtualmachines.kubevirt.io \u003cspan class=\"nt\"\u003e-o\u003c/span\u003e yaml\napiVersion: apiextensions.k8s.io/v1\nkind: CustomResourceDefinition\nmetadata:\n...\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003ch2 id=\"23-使用-kubectl-增删查改-virtualmachine\"\u003e2.3 使用 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003ekubectl\u003c/code\u003e 增删查改 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eVirtualMachine\u003c/code\u003e\u003c/h2\u003e\n\n\u003cp\u003eCRD 创建好之后，就可以创建这种自定义类型的对象了。\u003c/p\u003e\n\n\u003cp\u003e比如下面的 \u003ca href=\"https://github.com/kubevirt/kubevirt/blob/v1.0.0/examples/vm-cirros.yaml\"\u003evm-cirros.yaml\u003c/a\u003e:\u003c/p\u003e\n\n\u003cdiv class=\"language-yaml highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"na\"\u003eapiVersion\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003ekubevirt.io/v1\u003c/span\u003e\n\u003cspan class=\"na\"\u003ekind\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003eVirtualMachine\u003c/span\u003e\n\u003cspan class=\"na\"\u003emetadata\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e\n  \u003cspan class=\"na\"\u003elabels\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e\n    \u003cspan class=\"na\"\u003ekubevirt.io/vm\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003evm-cirros\u003c/span\u003e\n  \u003cspan class=\"na\"\u003ename\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003evm-cirros\u003c/span\u003e\n\u003cspan class=\"na\"\u003espec\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e\n  \u003cspan class=\"na\"\u003erunning\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"no\"\u003efalse\u003c/span\u003e\n  \u003cspan class=\"na\"\u003etemplate\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e\n    \u003cspan class=\"na\"\u003emetadata\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e\n      \u003cspan class=\"na\"\u003elabels\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e\n        \u003cspan class=\"na\"\u003ekubevirt.io/vm\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003evm-cirros\u003c/span\u003e\n    \u003cspan class=\"na\"\u003espec\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e\n      \u003cspan class=\"na\"\u003edomain\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e\n        \u003cspan class=\"na\"\u003edevices\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e\n          \u003cspan class=\"na\"\u003edisks\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e\n          \u003cspan class=\"pi\"\u003e-\u003c/span\u003e \u003cspan class=\"na\"\u003edisk\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e\n              \u003cspan class=\"na\"\u003ebus\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003evirtio\u003c/span\u003e\n            \u003cspan class=\"na\"\u003ename\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003econtainerdisk\u003c/span\u003e\n          \u003cspan class=\"pi\"\u003e-\u003c/span\u003e \u003cspan class=\"na\"\u003edisk\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e\n              \u003cspan class=\"na\"\u003ebus\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003evirtio\u003c/span\u003e\n            \u003cspan class=\"na\"\u003ename\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003ecloudinitdisk\u003c/span\u003e\n        \u003cspan class=\"na\"\u003eresources\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e\n          \u003cspan class=\"na\"\u003erequests\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e\n            \u003cspan class=\"na\"\u003ememory\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003e128Mi\u003c/span\u003e\n      \u003cspan class=\"na\"\u003eterminationGracePeriodSeconds\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"m\"\u003e0\u003c/span\u003e\n      \u003cspan class=\"na\"\u003evolumes\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e\n      \u003cspan class=\"pi\"\u003e-\u003c/span\u003e \u003cspan class=\"na\"\u003econtainerDisk\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e\n          \u003cspan class=\"na\"\u003eimage\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003eregistry:5000/kubevirt/cirros-container-disk-demo:devel\u003c/span\u003e\n        \u003cspan class=\"na\"\u003ename\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003econtainerdisk\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e用 kubectl apply 以上 yaml，就创建了一个虚拟机（的描述）。接下来还可以继续用 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003ekubectl\u003c/code\u003e\n对这个虚拟机执行查删改等操作，与对 pods/nodes 等原生资源的操作类似：\u003c/p\u003e\n\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003e$ \u003c/span\u003ek get virtualmachines.kubevirt.io \u003cspan class=\"c\"\u003e# or \u0026#39;k get vm\u0026#39;\u003c/span\u003e\nNAME                    AGE   STATUS    READY\nvm-cirros               1h    Running   True\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cblockquote\u003e\n  \u003cp\u003e要让虚拟机正确运行，还需要实现必要的虚拟机创建和处理逻辑，\n这是 kubevirt 的几个控制组件（apiserver/controller/agent）做的事情，但这不是本文重点，所以不展开。\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003ch2 id=\"24-背后的-virtualmachine-api\"\u003e2.4 背后的 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eVirtualMachine\u003c/code\u003e API\u003c/h2\u003e\n\n\u003cp\u003e之所以用 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003ekubectl\u003c/code\u003e 操作 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eVirtualMachine\u003c/code\u003e，是因为在创建 CRD 时，k8s 自动帮我们生成了一套对应的 API，\n并同样通过 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003ekube-apiserver\u003c/code\u003e 提供服务。在命令行加上适当的日志级别就能看到这些 API 请求：\u003c/p\u003e\n\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003e$ \u003c/span\u003ek get vm \u003cspan class=\"nt\"\u003e-v\u003c/span\u003e 10 2\u0026gt;\u0026amp;1 | \u003cspan class=\"nb\"\u003egrep\u003c/span\u003e \u003cspan class=\"nt\"\u003e-v\u003c/span\u003e Response | \u003cspan class=\"nb\"\u003egrep \u003c/span\u003eapis\ncurl \u003cspan class=\"nt\"\u003e-v\u003c/span\u003e \u003cspan class=\"nt\"\u003e-XGET\u003c/span\u003e ... \u003cspan class=\"s1\"\u003e\u0026#39;https://xxx:6443/apis?timeout=32s\u0026#39;\u003c/span\u003e\nGET https://xxx:6443/apis?timeout\u003cspan class=\"o\"\u003e=\u003c/span\u003e32s 200 OK \u003cspan class=\"k\"\u003ein \u003c/span\u003e2 milliseconds\ncurl \u003cspan class=\"nt\"\u003e-v\u003c/span\u003e \u003cspan class=\"nt\"\u003e-XGET\u003c/span\u003e ...  \u003cspan class=\"s1\"\u003e\u0026#39;https://xx:6443/apis/kubevirt.io/v1/namespaces/default/virtualmachines?limit=500\u0026#39;\u003c/span\u003e\nGET https://xxx:6443/apis/kubevirt.io/v1/namespaces/default/virtualmachines?limit\u003cspan class=\"o\"\u003e=\u003c/span\u003e500 200 OK \u003cspan class=\"k\"\u003ein \u003c/span\u003e6 milliseconds\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e更具体来说，CRD 的 API 会落到下面这个扩展 API 组里：\u003c/p\u003e\n\n\u003cul\u003e\n  \u003cli\u003e格式：\u003cstrong\u003e\u003cmark\u003e\u003ccode\u003e/apis/{apiGroup}/{apiVersion}/namespaces/{namespace}/{resource}\u003c/code\u003e\u003c/mark\u003e\u003c/strong\u003e\u003c/li\u003e\n  \u003cli\u003e举例：\u003ccode class=\"language-plaintext highlighter-rouge\"\u003e/apis/kubevirt.io/v1/namespaces/default/virtualmachines\u003c/code\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003e\u003cstrong\u003e\u003cmark\u003e\u003ccode\u003ek api-resources\u003c/code\u003e\u003c/mark\u003e\u003c/strong\u003e 会列出所在 k8s 集群所有的 API，包括内置类型和扩展类型：\u003c/p\u003e\n\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003e$ \u003c/span\u003ek api-resources\nNAME               SHORTNAMES   APIGROUP       NAMESPACED   KIND\nvirtualmachines    vm,vms       kubevirt.io    \u003cspan class=\"nb\"\u003etrue         \u003c/span\u003eVirtualMachine\n...\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003ch2 id=\"25-小结\"\u003e2.5 小结\u003c/h2\u003e\n\n\u003cp\u003e本节介绍了第一种 API 扩展机制，对于需要引入自定义资源的场景非常有用。\n但如果用户\u003cstrong\u003e\u003cmark\u003e没有要引入的新资源类型\u003c/mark\u003e\u003c/strong\u003e，只是想对现有的（内置或自定义）资源类型加一些新的 API，\nCRD 机制就不适用了。我们再来看另一种机制。\u003c/p\u003e\n\n\u003ch1 id=\"3-扩展机制二aggregated-api-server-apiservice\"\u003e3 扩展机制二：Aggregated API Server (\u003ccode class=\"language-plaintext highlighter-rouge\"\u003eAPIService\u003c/code\u003e)\u003c/h1\u003e\n\n\u003cp\u003eAggregated API Server（一些文档中也缩写为 \u003cstrong\u003e\u003cmark\u003e\u003ccode\u003eAA\u003c/code\u003e\u003c/mark\u003e\u003c/strong\u003e）也提供了一种扩展 API 的机制。\n这里，\u003cstrong\u003e\u003cmark\u003e“聚合”\u003c/mark\u003e\u003c/strong\u003e是为了和处理 pods/nodes/services 等资源的\n\u003cstrong\u003e\u003cmark\u003e“核心”\u003c/mark\u003e\u003c/strong\u003e apiserver 做区分。\u003c/p\u003e\n\n\u003cblockquote\u003e\n  \u003cp\u003e注意，AA \u003cstrong\u003e\u003cmark\u003e并不是独立组件\u003c/mark\u003e\u003c/strong\u003e，而是 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003ekube-apiserver\u003c/code\u003e 中的一个模块，\n运行在 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003ekube-apiserver\u003c/code\u003e 进程中。\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003e什么情况下会用到 AA 提供的扩展机制呢？\u003c/p\u003e\n\n\u003ch2 id=\"31-用户需求\"\u003e3.1 用户需求\u003c/h2\u003e\n\n\u003cp\u003e如果没有要引入的自定义资源，只是想（给已有的资源）加一些新的 API，那 CRD 方式就不适用了。\n两个例子，\u003c/p\u003e\n\n\u003col\u003e\n  \u003cli\u003e\n    \u003cp\u003e用户想引入一个服务从所有 node 收集 nodes/pods 数据，聚合之后通过 \u003cstrong\u003e\u003cmark\u003e\u003ccode\u003ekube-apiserver\u003c/code\u003e\u003c/mark\u003e\u003c/strong\u003e 入口提供服务（而不是自己提供一个 server 入口）；\u003c/p\u003e\n\n    \u003cp\u003e这样集群内的服务，包括 k8s 自身、用户 pods 等，都可以直接通过 incluster 方式获取这些信息（前提是有权限）。\u003c/p\u003e\n  \u003c/li\u003e\n  \u003cli\u003e\n    \u003cp\u003e想给上一节引入的虚拟机 API \u003ccode\u003eapis/kubevirt.io/v1/namespaces/{ns}/virtualmachines/{vm}\u003c/code\u003e 增加一层 sub-url，\u003c/p\u003e\n\n    \u003cul\u003e\n      \u003cli\u003e\u003ccode\u003eapis/kubevirt.io/v1/namespaces/{ns}/virtualmachines/{vm}/\u003cmark\u003estart\u003c/mark\u003e\u003c/code\u003e\u003c/li\u003e\n      \u003cli\u003e\u003ccode\u003eapis/kubevirt.io/v1/namespaces/{ns}/virtualmachines/{vm}/\u003cmark\u003estop\u003c/mark\u003e\u003c/code\u003e\u003c/li\u003e\n      \u003cli\u003e\u003ccode\u003eapis/kubevirt.io/v1/namespaces/{ns}/virtualmachines/{vm}/\u003cmark\u003epause\u003c/mark\u003e\u003c/code\u003e\u003c/li\u003e\n      \u003cli\u003e\u003ccode\u003eapis/kubevirt.io/v1/namespaces/{ns}/virtualmachines/{vm}/\u003cmark\u003emigrate\u003c/mark\u003e\u003c/code\u003e\u003c/li\u003e\n    \u003c/ul\u003e\n  \u003c/li\u003e\n\u003c/ol\u003e\n\n\u003ch2 id=\"32-方案设计\"\u003e3.2 方案设计\u003c/h2\u003e\n\n\u003ch3 id=\"321-引入-kube-aggregator-模块和-apiservice-抽象\"\u003e3.2.1 引入 kube-aggregator 模块和 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eAPIService\u003c/code\u003e 抽象\u003c/h3\u003e\n\n\u003cul\u003e\n  \u003cli\u003eAPIService 表示的是一个有特定 GroupVersion 的 server。\u003c/li\u003e\n  \u003cli\u003eAPIService 一般用于对原有资源（API）加 subresource。\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003e这样一个模块+模型，就能支持用户\u003cstrong\u003e\u003cmark\u003e注册新 API 到 kube-apiserver\u003c/mark\u003e\u003c/strong\u003e。\n举例，\u003c/p\u003e\n\n\u003cul\u003e\n  \u003cli\u003e用户将 \u003ccode\u003eapis/kubevirt.io/v1/namespaces/{ns}/virtualmachines/{vm}/\u003cmark\u003estart\u003c/mark\u003e\u003c/code\u003e\n注册到 kube-apiserver；\u003c/li\u003e\n  \u003cli\u003ekube-apiserver 如果收到这样的请求，就将其转发给指定是 service 进行处理，例如\n\u003ccode class=\"language-plaintext highlighter-rouge\"\u003ekubevirt\u003c/code\u003e namespace 内名为 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003evirt-api\u003c/code\u003e 的 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eService\u003c/code\u003e。\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003ekube-apiserver \u003cstrong\u003e\u003cmark\u003e\u003ccode\u003ekube-apiserver\u003c/code\u003e\u003c/mark\u003e\u003c/strong\u003e 在这里相当于用户服务（\u003ccode class=\"language-plaintext highlighter-rouge\"\u003evirt-api\u003c/code\u003e）的\u003cstrong\u003e\u003cmark\u003e反向代理\u003c/mark\u003e\u003c/strong\u003e。\n下面看一下它内部的真实工作流。\u003c/p\u003e\n\n\u003ch3 id=\"322-kube-apiserver-内部工作流delegate\"\u003e3.2.2 kube-apiserver 内部工作流（delegate）\u003c/h3\u003e\n\n\u003cp\u003ekube-apiserver 内部实现了下面这样一个 workflow，\u003c/p\u003e\n\n\u003cp align=\"center\"\u003e\u003cimg src=\"/assets/img/k8s-is-about-apis/kube-apiserver-internal.png\" width=\"70%\" height=\"70%\"/\u003e\u003c/p\u003e\n\u003cp align=\"center\"\u003eFig. kube-apiserver internal flows when processing a request. Image source\n  \u003ca href=\"https://www.oreilly.com/library/view/programming-kubernetes/9781492047094/ch04.html\"\u003eProgramming Kubernetes, O\u0026#39;Reilly\u003c/a\u003e\n\u003c/p\u003e\n\n\u003cp\u003e进入到 kube-apiserver 的请求会依次经历四个阶段：\u003c/p\u003e\n\n\u003col\u003e\n  \u003cli\u003e\u003cstrong\u003e\u003cmark\u003e\u003ccode\u003ekube-aggregator\u003c/code\u003e\u003c/mark\u003e\u003c/strong\u003e：处理本节这种反向代理需求，将请求转发给 API 对应的\u003cstrong\u003e\u003cmark\u003e用户服务\u003c/mark\u003e\u003c/strong\u003e；如果没有命中，转 2；\u003c/li\u003e\n  \u003cli\u003e\u003cstrong\u003e\u003cmark\u003e\u003ccode\u003ekube resources\u003c/code\u003e\u003c/mark\u003e\u003c/strong\u003e：处理内置的 pods, services 等\u003cstrong\u003e\u003cmark\u003e内置资源\u003c/mark\u003e\u003c/strong\u003e；如果没有命中，转 3；\u003c/li\u003e\n  \u003cli\u003e\u003cstrong\u003e\u003cmark\u003e\u003ccode\u003eapiextensions-apiserver\u003c/code\u003e\u003c/mark\u003e\u003c/strong\u003e：处理 \u003cstrong\u003e\u003cmark\u003eCRD 资源\u003c/mark\u003e\u003c/strong\u003e的请求；如果没有命中，转 4；\u003c/li\u003e\n  \u003cli\u003e返回 404。\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003cp\u003e下面看两个具体案例。\u003c/p\u003e\n\n\u003ch2 id=\"33-案例一k8s-官方-metrics-server\"\u003e3.3 案例一：k8s 官方 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003emetrics-server\u003c/code\u003e\u003c/h2\u003e\n\n\u003cp\u003eAA 机制的一个官方例子是\n\u003ca href=\"https://github.com/kubernetes-sigs/metrics-server\"\u003egithub.com/kubernetes-sigs/metrics-server\u003c/a\u003e。\n它启动一个 metrics-server 从所有 kubelet 收集 pods/nodes 的 CPU、Memory 等信息，\n然后向 kube-apiserver 注册若干 API，包括\u003c/p\u003e\n\n\u003cul\u003e\n  \u003cli\u003e\u003ccode class=\"language-plaintext highlighter-rouge\"\u003e/apis/metrics.k8s.io/v1beta1/nodes\u003c/code\u003e\u003c/li\u003e\n  \u003cli\u003e\u003ccode class=\"language-plaintext highlighter-rouge\"\u003e/apis/metrics.k8s.io/v1beta1/pods\u003c/code\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003e\u003cstrong\u003e\u003cmark\u003e\u003ccode\u003eHPA、VPA、scheduler\u003c/code\u003e\u003c/mark\u003e\u003c/strong\u003e 等组件会通过这些 API 获取数据，\n供自动扩缩容、动态调度等场景决策使用。\u003c/p\u003e\n\n\u003ch3 id=\"331-注册-apiservice\"\u003e3.3.1 注册 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eAPIService\u003c/code\u003e\u003c/h3\u003e\n\n\u003cdiv class=\"language-yaml highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"na\"\u003eapiVersion\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003eapiregistration.k8s.io/v1\u003c/span\u003e\n\u003cspan class=\"na\"\u003ekind\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003eAPIService\u003c/span\u003e\n\u003cspan class=\"na\"\u003emetadata\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e\n  \u003cspan class=\"na\"\u003elabels\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e\n    \u003cspan class=\"na\"\u003ek8s-app\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003emetrics-server\u003c/span\u003e\n  \u003cspan class=\"na\"\u003ename\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003ev1beta1.metrics.k8s.io\u003c/span\u003e\n\u003cspan class=\"na\"\u003espec\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e\n  \u003cspan class=\"na\"\u003egroup\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003emetrics.k8s.io\u003c/span\u003e       \u003cspan class=\"c1\"\u003e# 所有到 /apis/metrics.k8s.io/v1beta1/ 的请求\u003c/span\u003e\n  \u003cspan class=\"na\"\u003egroupPriorityMinimum\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"m\"\u003e100\u003c/span\u003e\n  \u003cspan class=\"na\"\u003einsecureSkipTLSVerify\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"no\"\u003etrue\u003c/span\u003e \u003cspan class=\"c1\"\u003e# 用 http 转发请求\u003c/span\u003e\n  \u003cspan class=\"na\"\u003eservice\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e                    \u003cspan class=\"c1\"\u003e# 请求转发给这个 service\u003c/span\u003e\n    \u003cspan class=\"na\"\u003ename\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003emetrics-server\u003c/span\u003e\n    \u003cspan class=\"na\"\u003enamespace\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003ekube-system\u003c/span\u003e\n  \u003cspan class=\"na\"\u003eversion\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003ev1beta1\u003c/span\u003e\n  \u003cspan class=\"na\"\u003eversionPriority\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"m\"\u003e100\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e以上 yaml 表示，如果请求的 URL 能匹配到 API 前缀\n\u003cstrong\u003e\u003cmark\u003e\u003ccode\u003e/apis/metrics.k8s.io/v1beta1/\u003c/code\u003e\u003c/mark\u003e\u003c/strong\u003e，那么 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003ekube-apiserver\u003c/code\u003e\n就用 HTTP（insecure）的方式将请求转发给 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003ekube-system/metrics-server\u003c/code\u003e 进行处理。\u003c/p\u003e\n\n\u003cp\u003e我们能进一步在 api-resource 列表看到 metrics-server 注册了那些 API：\u003c/p\u003e\n\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003e$ \u003c/span\u003ek api-resources | \u003cspan class=\"nb\"\u003egrep \u003c/span\u003emetrics.k8s.io\nnodes   metrics.k8s.io     \u003cspan class=\"nb\"\u003efalse        \u003c/span\u003eNodeMetrics\npods    metrics.k8s.io     \u003cspan class=\"nb\"\u003etrue         \u003c/span\u003ePodMetrics\n...\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e这两个 API 对应的完整 URL 是 \u003cstrong\u003e\u003cmark\u003e\u003ccode\u003e/apis/metrics.k8s.io/v1beta1/{nodes,pods}\u003c/code\u003e\u003c/mark\u003e\u003c/strong\u003e。\u003c/p\u003e\n\n\u003ch3 id=\"332-验证注册的扩展-api\"\u003e3.3.2 验证注册的扩展 API\u003c/h3\u003e\n\n\u003cp\u003e用 kubectl 访问 metrics-server 注册的 API，这个请求会发送给 kube-apiserver：\u003c/p\u003e\n\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003e$ \u003c/span\u003ekubectl get \u003cspan class=\"nt\"\u003e--raw\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;/apis/metrics.k8s.io/v1beta1/nodes/\u0026#34;\u003c/span\u003e | jq \u003cspan class=\"nb\"\u003e.\u003c/span\u003e | \u003cspan class=\"nb\"\u003ehead\u003c/span\u003e \u003cspan class=\"nt\"\u003e-n\u003c/span\u003e 20\n\u003cspan class=\"o\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"s2\"\u003e\u0026#34;kind\u0026#34;\u003c/span\u003e: \u003cspan class=\"s2\"\u003e\u0026#34;NodeMetricsList\u0026#34;\u003c/span\u003e,\n  \u003cspan class=\"s2\"\u003e\u0026#34;apiVersion\u0026#34;\u003c/span\u003e: \u003cspan class=\"s2\"\u003e\u0026#34;metrics.k8s.io/v1beta1\u0026#34;\u003c/span\u003e,\n  \u003cspan class=\"s2\"\u003e\u0026#34;metadata\u0026#34;\u003c/span\u003e: \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"s2\"\u003e\u0026#34;selfLink\u0026#34;\u003c/span\u003e: \u003cspan class=\"s2\"\u003e\u0026#34;/apis/metrics.k8s.io/v1beta1/nodes/\u0026#34;\u003c/span\u003e\n  \u003cspan class=\"o\"\u003e}\u003c/span\u003e,\n  \u003cspan class=\"s2\"\u003e\u0026#34;items\u0026#34;\u003c/span\u003e: \u003cspan class=\"o\"\u003e[\u003c/span\u003e\n    \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n      \u003cspan class=\"s2\"\u003e\u0026#34;metadata\u0026#34;\u003c/span\u003e: \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"s2\"\u003e\u0026#34;name\u0026#34;\u003c/span\u003e: \u003cspan class=\"s2\"\u003e\u0026#34;node1\u0026#34;\u003c/span\u003e,\n        \u003cspan class=\"s2\"\u003e\u0026#34;selfLink\u0026#34;\u003c/span\u003e: \u003cspan class=\"s2\"\u003e\u0026#34;/apis/metrics.k8s.io/v1beta1/nodes/node1\u0026#34;\u003c/span\u003e,\n      \u003cspan class=\"o\"\u003e}\u003c/span\u003e,\n      \u003cspan class=\"s2\"\u003e\u0026#34;timestamp\u0026#34;\u003c/span\u003e: \u003cspan class=\"s2\"\u003e\u0026#34;2023-10-14T16:26:56Z\u0026#34;\u003c/span\u003e,\n      \u003cspan class=\"s2\"\u003e\u0026#34;window\u0026#34;\u003c/span\u003e: \u003cspan class=\"s2\"\u003e\u0026#34;30s\u0026#34;\u003c/span\u003e,\n      \u003cspan class=\"s2\"\u003e\u0026#34;usage\u0026#34;\u003c/span\u003e: \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"s2\"\u003e\u0026#34;cpu\u0026#34;\u003c/span\u003e: \u003cspan class=\"s2\"\u003e\u0026#34;706808951n\u0026#34;\u003c/span\u003e,\n        \u003cspan class=\"s2\"\u003e\u0026#34;memory\u0026#34;\u003c/span\u003e: \u003cspan class=\"s2\"\u003e\u0026#34;6778764Ki\u0026#34;\u003c/span\u003e\n      \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n    \u003cspan class=\"o\"\u003e}\u003c/span\u003e,\n...\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e成功拿到了所有 node 的 CPU 和 Memory 使用信息。\u003c/p\u003e\n\n\u003cblockquote\u003e\n  \u003cp\u003e直接 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003ecurl\u003c/code\u003e API 也可以，不过 kube-apiserver 是 https 服务，所以要加上几个证书才行。\u003c/p\u003e\n\n  \u003cdiv class=\"language-plaintext highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e$ cat curl-k8s-apiserver.sh\ncurl -s --cert /etc/kubernetes/pki/admin.crt --key /etc/kubernetes/pki/admin.key --cacert /etc/kubernetes/pki/ca.crt $@\n\n$ ./curl-k8s-apiserver.sh https://localhost:6443/apis/metrics.k8s.io/v1beta1/nodes/\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e  \u003c/div\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003e类似地，获取指定 pod 的 CPU/Memory metrics：\u003c/p\u003e\n\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003e$ \u003c/span\u003ekubectl get \u003cspan class=\"nt\"\u003e--raw\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;/apis/metrics.k8s.io/v1beta1/namespaces/default/pods/cilium-smoke-0\u0026#34;\u003c/span\u003e | jq \u003cspan class=\"s1\"\u003e\u0026#39;.\u0026#39;\u003c/span\u003e\n\u003cspan class=\"o\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"s2\"\u003e\u0026#34;kind\u0026#34;\u003c/span\u003e: \u003cspan class=\"s2\"\u003e\u0026#34;PodMetrics\u0026#34;\u003c/span\u003e,\n  \u003cspan class=\"s2\"\u003e\u0026#34;apiVersion\u0026#34;\u003c/span\u003e: \u003cspan class=\"s2\"\u003e\u0026#34;metrics.k8s.io/v1beta1\u0026#34;\u003c/span\u003e,\n  \u003cspan class=\"s2\"\u003e\u0026#34;metadata\u0026#34;\u003c/span\u003e: \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"s2\"\u003e\u0026#34;name\u0026#34;\u003c/span\u003e: \u003cspan class=\"s2\"\u003e\u0026#34;cilium-smoke-0\u0026#34;\u003c/span\u003e,\n    \u003cspan class=\"s2\"\u003e\u0026#34;namespace\u0026#34;\u003c/span\u003e: \u003cspan class=\"s2\"\u003e\u0026#34;default\u0026#34;\u003c/span\u003e,\n    \u003cspan class=\"s2\"\u003e\u0026#34;selfLink\u0026#34;\u003c/span\u003e: \u003cspan class=\"s2\"\u003e\u0026#34;/apis/metrics.k8s.io/v1beta1/namespaces/default/pods/cilium-smoke-0\u0026#34;\u003c/span\u003e,\n  \u003cspan class=\"o\"\u003e}\u003c/span\u003e,\n  \u003cspan class=\"s2\"\u003e\u0026#34;timestamp\u0026#34;\u003c/span\u003e: \u003cspan class=\"s2\"\u003e\u0026#34;2023-10-14T16:28:37Z\u0026#34;\u003c/span\u003e,\n  \u003cspan class=\"s2\"\u003e\u0026#34;window\u0026#34;\u003c/span\u003e: \u003cspan class=\"s2\"\u003e\u0026#34;30s\u0026#34;\u003c/span\u003e,\n  \u003cspan class=\"s2\"\u003e\u0026#34;containers\u0026#34;\u003c/span\u003e: \u003cspan class=\"o\"\u003e[\u003c/span\u003e\n    \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n      \u003cspan class=\"s2\"\u003e\u0026#34;name\u0026#34;\u003c/span\u003e: \u003cspan class=\"s2\"\u003e\u0026#34;nginx\u0026#34;\u003c/span\u003e,\n      \u003cspan class=\"s2\"\u003e\u0026#34;usage\u0026#34;\u003c/span\u003e: \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"s2\"\u003e\u0026#34;cpu\u0026#34;\u003c/span\u003e: \u003cspan class=\"s2\"\u003e\u0026#34;7336n\u0026#34;\u003c/span\u003e,\n        \u003cspan class=\"s2\"\u003e\u0026#34;memory\u0026#34;\u003c/span\u003e: \u003cspan class=\"s2\"\u003e\u0026#34;3492Ki\u0026#34;\u003c/span\u003e\n      \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n    \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n  \u003cspan class=\"o\"\u003e]\u003c/span\u003e\n\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003ch3 id=\"333-命令行支持k-top-nodepod\"\u003e3.3.3 命令行支持：\u003ccode class=\"language-plaintext highlighter-rouge\"\u003ek top node/pod\u003c/code\u003e\u003c/h3\u003e\n\n\u003cp\u003emetrics-server 是官方项目，所以它还在 kubectl 里面加了几个子命令来对接这些扩展 API，\n方便集群管理和问题排查：\u003c/p\u003e\n\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003e$ \u003c/span\u003ek top node\nNAME     CPU\u003cspan class=\"o\"\u003e(\u003c/span\u003ecores\u003cspan class=\"o\"\u003e)\u003c/span\u003e   CPU%   MEMORY\u003cspan class=\"o\"\u003e(\u003c/span\u003ebytes\u003cspan class=\"o\"\u003e)\u003c/span\u003e   MEMORY%\nnode-1   346m         1%     6551Mi          2%\nnode-2   743m         1%     8439Mi          3%\nnode-4   107m         0%     6606Mi          2%\nnode-3   261m         0%     8759Mi          3%\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e一般的 AA 项目是不会动 kubectl 代码的。\u003c/p\u003e\n\n\u003ch2 id=\"34-案例二kubevirt\"\u003e3.4 案例二：kubevirt\u003c/h2\u003e\n\n\u003ch3 id=\"341-apiservice-注册\"\u003e3.4.1 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eAPIService\u003c/code\u003e 注册\u003c/h3\u003e\n\n\u003cp\u003e注册一个名为 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003ev1.subresources.kubevirt.io\u003c/code\u003e 的 APIService 到 k8s 集群：\u003c/p\u003e\n\n\u003cblockquote\u003e\n  \u003cp\u003e具体到 kubevirt 代码，它是通过 virt-operator 注册的 \npkg/virt-operator/resource/generate/components/apiservices.go\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003e$ \u003c/span\u003ek get apiservices v1.subresources.kubevirt.io \u003cspan class=\"nt\"\u003e-o\u003c/span\u003e yaml\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cdiv class=\"language-yaml highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"na\"\u003eapiVersion\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003eapiregistration.k8s.io/v1\u003c/span\u003e\n\u003cspan class=\"na\"\u003ekind\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003eAPIService\u003c/span\u003e\n\u003cspan class=\"na\"\u003emetadata\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e\n  \u003cspan class=\"na\"\u003ename\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003ev1.subresources.kubevirt.io\u003c/span\u003e\n\u003cspan class=\"na\"\u003espec\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e\n  \u003cspan class=\"na\"\u003egroup\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003esubresources.kubevirt.io\u003c/span\u003e  \u003cspan class=\"c1\"\u003e# 所有到 /apis/subresources.kubevirt.io/v1/ 的请求\u003c/span\u003e\n  \u003cspan class=\"na\"\u003eversion\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003ev1\u003c/span\u003e\n  \u003cspan class=\"na\"\u003egroupPriorityMinimum\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"m\"\u003e1000\u003c/span\u003e\n  \u003cspan class=\"na\"\u003ecaBundle\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003eLS0tLS1C...0tLS0K\u003c/span\u003e      \u003cspan class=\"c1\"\u003e# https 转发请求，用这个证书\u003c/span\u003e\n  \u003cspan class=\"na\"\u003eservice\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e                         \u003cspan class=\"c1\"\u003e# 转发给这个 service\u003c/span\u003e\n    \u003cspan class=\"na\"\u003ename\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003evirt-api\u003c/span\u003e\n    \u003cspan class=\"na\"\u003enamespace\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003ekubevirt\u003c/span\u003e\n    \u003cspan class=\"na\"\u003eport\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"m\"\u003e443\u003c/span\u003e\n  \u003cspan class=\"na\"\u003eversionPriority\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"m\"\u003e15\u003c/span\u003e\n\u003cspan class=\"na\"\u003estatus\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e\n  \u003cspan class=\"na\"\u003econditions\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e\n    \u003cspan class=\"na\"\u003emessage\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003eall checks passed\u003c/span\u003e     \u003cspan class=\"c1\"\u003e# 所有检查都通过了，现在是 ready 状态\u003c/span\u003e\n    \u003cspan class=\"na\"\u003ereason\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003ePassed\u003c/span\u003e\n    \u003cspan class=\"na\"\u003estatus\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"s\"\u003eTrue\u0026#34;\u003c/span\u003e\n    \u003cspan class=\"na\"\u003etype\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003eAvailable\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e以上表示，所有到 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003e/apis/subresources.kubevirt.io/v1/\u003c/code\u003e 的请求，kube-apiserver\n应该用 HTTPS 转发给 \u003cstrong\u003e\u003cmark\u003e\u003ccode\u003ekubevirt/virt-api\u003c/code\u003e\u003c/mark\u003e\u003c/strong\u003e 这个 service 处理。\n查看这个 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eservice\u003c/code\u003e：\u003c/p\u003e\n\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003e$ \u003c/span\u003ek get svc \u003cspan class=\"nt\"\u003e-n\u003c/span\u003e kubevirt virt-api \u003cspan class=\"nt\"\u003e-o\u003c/span\u003e wide\nNAME       TYPE        CLUSTER-IP   EXTERNAL-IP   PORT\u003cspan class=\"o\"\u003e(\u003c/span\u003eS\u003cspan class=\"o\"\u003e)\u003c/span\u003e   AGE   SELECTOR\nvirt-api   ClusterIP   10.7.10.6    \u0026lt;none\u0026gt;        443/TCP   1d    kubevirt.io\u003cspan class=\"o\"\u003e=\u003c/span\u003evirt-api\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e另外注意，status 里面有个 \u003cstrong\u003e\u003cmark\u003e\u003ccode\u003eavailable\u003c/code\u003e\u003c/mark\u003e\u003c/strong\u003e 字段，\n用来指示后端 service 健康检测是否正常。状态不正常时的表现：\u003c/p\u003e\n\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003e$ \u003c/span\u003ek get apiservice \u003cspan class=\"nt\"\u003e-o\u003c/span\u003e wide | \u003cspan class=\"nb\"\u003egrep \u003c/span\u003ekubevirt\nv1.kubevirt.io                Local                   True                       5h2m\nv1.subresources.kubevirt.io   kubevirt/virt-api       False \u003cspan class=\"o\"\u003e(\u003c/span\u003eMissingEndpoints\u003cspan class=\"o\"\u003e)\u003c/span\u003e   5h1m\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e提示 service 没有 endpoints（pods）。\u003c/p\u003e\n\n\u003ch3 id=\"342-sub-url-handler-注册virt-api\"\u003e3.4.2 Sub-url handler 注册（\u003ccode class=\"language-plaintext highlighter-rouge\"\u003evirt-api\u003c/code\u003e）\u003c/h3\u003e\n\n\u003cp\u003e\u003ccode class=\"language-plaintext highlighter-rouge\"\u003evirt-api\u003c/code\u003e 这个服务在启动时会\u003ca href=\"https://github.com/kubevirt/kubevirt/blob/v1.0.0/pkg/virt-api/api.go#L214\"\u003e注册几十个 subresource\u003c/a\u003e，\u003c/p\u003e\n\n\u003cul\u003e\n  \u003cli\u003e\u003ccode\u003e/apis/subresources.kubevirt.io/v1/namespaces/default/virtualmachineinstances/{name}/\u003cmark\u003econsole\u003c/mark\u003e\u003c/code\u003e\u003c/li\u003e\n  \u003cli\u003e\u003ccode\u003e/apis/subresources.kubevirt.io/v1/namespaces/default/virtualmachineinstances/{name}/\u003cmark\u003erestart\u003c/mark\u003e\u003c/code\u003e\u003c/li\u003e\n  \u003cli\u003e\u003ccode\u003e/apis/subresources.kubevirt.io/v1/namespaces/default/virtualmachineinstances/{name}/\u003cmark\u003efreeze\u003c/mark\u003e\u003c/code\u003e\u003c/li\u003e\n  \u003cli\u003e…\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003e可以看到这些都会命中上面注册的 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eAPIService\u003c/code\u003e，因此当有这样的请求到达 kube-apiserver 时，\n就会通过 https 将请求转发给 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003evirt-api\u003c/code\u003e 进行处理。\u003c/p\u003e\n\n\u003ch3 id=\"343-测试\"\u003e3.4.3 测试\u003c/h3\u003e\n\n\u003cp\u003e在 master node 上用命令 \u003cstrong\u003e\u003cmark\u003e\u003ccode\u003evirtctl console kubevirt-smoke-fedora\u003c/code\u003e\u003c/mark\u003e\u003c/strong\u003e\n登录 VM 时，下面是抓取到的 \u003cstrong\u003e\u003cmark\u003ekube-apiserver audit log\u003c/mark\u003e\u003c/strong\u003e：\u003c/p\u003e\n\n\u003cdiv class=\"language-plaintext highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e* username: system:unsecured\n* user_groups: [\u0026#34;system:masters\u0026#34;,\u0026#34;system:authenticated\u0026#34;]\n* request_uri: /apis/subresources.kubevirt.io/v1/namespaces/default/virtualmachineinstances/kubevirt-smoke-fedora/console\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e可以看到确实请求的以上 sub-url。这个请求的大致路径：\u003c/p\u003e\n\n\u003cdiv class=\"language-plaintext highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003evirtctl (CLI) \u0026lt;-\u0026gt; kube-apiserver \u0026lt;-\u0026gt; kube-aggregator (in kube-apiserver) \u0026lt;-\u0026gt; virt-api service \u0026lt;-\u0026gt; virt-api pods \u0026lt;-\u0026gt; virt-handler (agent)\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003ch2 id=\"35-其他案例\"\u003e3.5 其他案例\u003c/h2\u003e\n\n\u003col\u003e\n  \u003cli\u003e\n    \u003cp\u003e\u003cstrong\u003e\u003cmark\u003e\u003ccode\u003epodexec/podlogs\u003c/code\u003e\u003c/mark\u003e\u003c/strong\u003e，都在 \u003ca href=\"https://github.com/kubernetes-sigs/apiserver-builder-alpha/tree/master/example\"\u003eapiserver-builder\u003c/a\u003e 项目内，\n  分别是 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003ek exec \u0026lt;pod\u0026gt;\u003c/code\u003e 和 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003ek logs \u0026lt;pod\u0026gt;\u003c/code\u003e 背后调用的 API：\u003c/p\u003e\n\n    \u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e \u003cspan class=\"nv\"\u003e$ \u003c/span\u003ek \u003cspan class=\"nt\"\u003e-v\u003c/span\u003e 10 \u003cspan class=\"nb\"\u003eexec\u003c/span\u003e \u003cspan class=\"nt\"\u003e-it\u003c/span\u003e \u003cspan class=\"nt\"\u003e-n\u003c/span\u003e kube-system coredns-pod-1 bash 2\u0026gt;\u0026amp;1 | \u003cspan class=\"nb\"\u003egrep\u003c/span\u003e \u003cspan class=\"nt\"\u003e-v\u003c/span\u003e Response | \u003cspan class=\"nb\"\u003egrep \u003c/span\u003eapi | \u003cspan class=\"nb\"\u003egrep exec\n \u003c/span\u003ecurl \u003cspan class=\"nt\"\u003e-v\u003c/span\u003e \u003cspan class=\"nt\"\u003e-XPOST\u003c/span\u003e ... \u003cspan class=\"s1\"\u003e\u0026#39;https://xx:6443/api/v1/namespaces/kube-system/pods/coredns-pod-1/exec?command=bash\u0026amp;container=coredns\u0026amp;stdin=true\u0026amp;stdout=true\u0026amp;tty=true\u0026#39;\u003c/span\u003e\n POST https://xx:6443/api/v1/namespaces/kube-system/pods/coredns-pod-1/exec?command\u003cspan class=\"o\"\u003e=\u003c/span\u003ebash\u0026amp;container\u003cspan class=\"o\"\u003e=\u003c/span\u003ecoredns\u0026amp;stdin\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"nb\"\u003etrue\u003c/span\u003e\u0026amp;stdout\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"nb\"\u003etrue\u003c/span\u003e\u0026amp;tty\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"nb\"\u003etrue \u003c/span\u003e403 Forbidden \u003cspan class=\"k\"\u003ein \u003c/span\u003e36 milliseconds\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e    \u003c/div\u003e\n  \u003c/li\u003e\n  \u003cli\u003e\n    \u003cp\u003e\u003ca href=\"https://github.com/kubernetes-sigs/custom-metrics-apiserver\"\u003e\u003cstrong\u003e\u003cmark\u003e\u003ccode\u003ecustom-metrics-server\u003c/code\u003e\u003c/mark\u003e\u003c/strong\u003e\u003c/a\u003e\u003c/p\u003e\n\n    \u003cp\u003e这跟前面介绍的 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003emetrics-server\u003c/code\u003e 并不是同一个项目，这个收集的是其他 metrics。\n \u003ccode class=\"language-plaintext highlighter-rouge\"\u003emetrics-server\u003c/code\u003e 只用到了 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eAPIService\u003c/code\u003e，这个还用到了 subresource。\u003c/p\u003e\n  \u003c/li\u003e\n\u003c/ol\u003e\n\n\u003ch2 id=\"36-apiservice-分类localexternal\"\u003e3.6 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eAPIService\u003c/code\u003e 分类：\u003ccode class=\"language-plaintext highlighter-rouge\"\u003eLocal/external\u003c/code\u003e\u003c/h2\u003e\n\n\u003cp\u003e查看\u003cstrong\u003e\u003cmark\u003e集群中所有 apiservice\u003c/mark\u003e\u003c/strong\u003e：\u003c/p\u003e\n\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003e$ \u003c/span\u003ek get apiservices\nNAME                                   SERVICE             AVAILABLE   AGE\nv1.                                    Local               True        26d\nv1.acme.cert-manager.io                Local               True        4d5h\nv1.admissionregistration.k8s.io        Local               True        26d\nv1.apiextensions.k8s.io                Local               True        26d\nv1.kubevirt.io                         Local               True        2d7h\nv1.subresources.kubevirt.io            kubevirt/virt-api   True        2d7h\n...\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e第二列有些是 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eLocal\u003c/code\u003e，有些是具体的 Service \u003ccode class=\"language-plaintext highlighter-rouge\"\u003e\u0026lt;ns\u0026gt;/\u0026lt;svc name\u0026gt;\u003c/code\u003e。这种 Local 的表示什么意思呢？\n挑一个看看：\u003c/p\u003e\n\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003e$ \u003c/span\u003ek get apiservice v1.kubevirt.io \u003cspan class=\"nt\"\u003e-o\u003c/span\u003e yaml\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cdiv class=\"language-yaml highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"na\"\u003eapiVersion\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003eapiregistration.k8s.io/v1\u003c/span\u003e\n\u003cspan class=\"na\"\u003ekind\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003eAPIService\u003c/span\u003e\n\u003cspan class=\"na\"\u003emetadata\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e\n  \u003cspan class=\"na\"\u003elabels\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e\n    \u003cspan class=\"na\"\u003ekube-aggregator.kubernetes.io/automanaged\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"s\"\u003etrue\u0026#34;\u003c/span\u003e  \u003cspan class=\"c1\"\u003e# kube-aggregator 自动管理的\u003c/span\u003e\n                                                       \u003cspan class=\"c1\"\u003e# kube-aggregator 并不是一个独立组件，而是集成在 kube-apiserver 中\u003c/span\u003e\n  \u003cspan class=\"na\"\u003ename\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003ev1.kubevirt.io\u003c/span\u003e\n  \u003cspan class=\"na\"\u003eselfLink\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003e/apis/apiregistration.k8s.io/v1/apiservices/v1.kubevirt.io\u003c/span\u003e\n\u003cspan class=\"na\"\u003espec\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e\n  \u003cspan class=\"na\"\u003egroup\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003ekubevirt.io\u003c/span\u003e\n  \u003cspan class=\"na\"\u003eversion\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003ev1\u003c/span\u003e\n  \u003cspan class=\"na\"\u003egroupPriorityMinimum\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"m\"\u003e1000\u003c/span\u003e\n  \u003cspan class=\"na\"\u003eversionPriority\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"m\"\u003e100\u003c/span\u003e\n\u003cspan class=\"na\"\u003estatus\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e\n  \u003cspan class=\"na\"\u003econditions\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e\n    \u003cspan class=\"na\"\u003estatus\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"s\"\u003eTrue\u0026#34;\u003c/span\u003e\n    \u003cspan class=\"na\"\u003etype\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003eAvailable\u003c/span\u003e                                    \u003cspan class=\"c1\"\u003e# 类型：可用\u003c/span\u003e\n    \u003cspan class=\"na\"\u003ereason\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003eLocal\u003c/span\u003e\n    \u003cspan class=\"na\"\u003emessage\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003eLocal APIServices are always available\u003c/span\u003e    \u003cspan class=\"c1\"\u003e# Local APIService 永远可用\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cul\u003e\n  \u003cli\u003e状态是 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eAvailabel\u003c/code\u003e，reason 是 \u003cstrong\u003e\u003cmark\u003e\u003ccode\u003eLocal\u003c/code\u003e\u003c/mark\u003e\u003c/strong\u003e；\u003c/li\u003e\n  \u003cli\u003e没有 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eservice\u003c/code\u003e 字段，说明\u003cstrong\u003e\u003cmark\u003e没有独立的后端服务\u003c/mark\u003e\u003c/strong\u003e；\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003e实际上，这种 Local 类型对应的请求是由 kube-apiserver 直接处理的；这种\nAPIService 也不是用户注册的，是 kube-aggregator 模块自动创建的。\n更多关于 kube-apiserver 的实现细节可参考 [3]。\u003c/p\u003e\n\n\u003ch1 id=\"4-两种机制的对比crd-vs-apiservice\"\u003e4 两种机制的对比：\u003ccode class=\"language-plaintext highlighter-rouge\"\u003eCRD\u003c/code\u003e vs. \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eAPIService\u003c/code\u003e\u003c/h1\u003e\n\n\u003ch2 id=\"41-所在的资源组不同\"\u003e4.1 所在的资源组不同\u003c/h2\u003e\n\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003e$ \u003c/span\u003ek api-resources\nNAME                        SHORTNAMES   APIVERSION                NAMESPACED   KIND\ncustomresourcedefinitions   crd,crds     apiextensions.k8s.io/v1   \u003cspan class=\"nb\"\u003efalse        \u003c/span\u003eCustomResourceDefinition\napiservices                              apiregistration.k8s.io/v1 \u003cspan class=\"nb\"\u003efalse        \u003c/span\u003eAPIService\n...\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e二者位于两个不同的资源组，对应的 API：\u003c/p\u003e\n\n\u003cul\u003e\n  \u003cli\u003eCRD: \u003ccode\u003e/apis/\u003cmark\u003eapiextensions\u003c/mark\u003e.k8s.io/{version}/...\u003c/code\u003e\u003c/li\u003e\n  \u003cli\u003eAPIService: \u003ccode\u003e/apis/\u003cmark\u003eapiregistration\u003c/mark\u003e.k8s.io/{version}/...\u003c/code\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2 id=\"42-目的和场景不同\"\u003e4.2 目的和场景不同\u003c/h2\u003e\n\n\u003cp\u003eCRD 主要目的是让 k8s 能处理\u003cstrong\u003e\u003cmark\u003e新的对象类型\u003c/mark\u003e\u003c/strong\u003e（new kinds of object），\n只要用户按规范提交一个自定义资源的描述（CRD），k8s 就会自动为它生成一套 CRUD API。\u003c/p\u003e\n\n\u003cp\u003e聚合层的目的则不同。\n从\u003ca href=\"https://github.com/kubernetes/design-proposals-archive/blob/main/api-machinery/aggregated-api-servers.md\"\u003e设计文档\u003c/a\u003e可以看出，\n当时引入聚合层有几个目的：\u003c/p\u003e\n\n\u003col\u003e\n  \u003cli\u003e提高 API 扩展性：可以方便地定义自己的 API，\u003cstrong\u003e\u003cmark\u003e以 kube-apiserver 作为入口，而无需修改任何 k8s 核心代码\u003c/mark\u003e\u003c/strong\u003e；\u003c/li\u003e\n  \u003cli\u003e加速新功能迭代：\u003cstrong\u003e\u003cmark\u003e新的 API\u003c/mark\u003e\u003c/strong\u003e 通过聚合层引入 k8s，如果\u003cstrong\u003e\u003cmark\u003e有必要再引入 kube-apiserver\u003c/mark\u003e\u003c/strong\u003e，修改后者是一个漫长的过程；\u003c/li\u003e\n  \u003cli\u003e作为 \u003cstrong\u003e\u003cmark\u003eexperimental API 试验场\u003c/mark\u003e\u003c/strong\u003e；\u003c/li\u003e\n  \u003cli\u003e提供一套\u003cstrong\u003e\u003cmark\u003e标准的 API 扩展规范\u003c/mark\u003e\u003c/strong\u003e：否则用户都按自己的意愿来，最后社区管理将走向混乱。\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003ch2 id=\"43-使用建议\"\u003e4.3 使用建议\u003c/h2\u003e\n\n\u003cp\u003e两个官方脚手架项目：\u003c/p\u003e\n\n\u003cul\u003e\n  \u003cli\u003e\u003ca href=\"https://github.com/kubernetes-sigs/kubebuilder\"\u003ekubebuilder\u003c/a\u003e：生成 CRD 及相应 controller；\u003c/li\u003e\n  \u003cli\u003e\u003ca href=\"https://github.com/kubernetes-sigs/apiserver-builder-alpha\"\u003eapiserver-builder\u003c/a\u003e\n生成 AA extension apiservers 及配套的 controllers。\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003e官方建议：用脚手架项目；\u003cstrong\u003e\u003cmark\u003e优先考虑用 CRD\u003c/mark\u003e\u003c/strong\u003e，实在不能满足需求再考虑\nAPIService 方式。这样的特殊场景包括：\u003c/p\u003e\n\n\u003col\u003e\n  \u003cli\u003e希望使用其他 storage API，将数据存储到 etcd 之外的其他地方；\u003c/li\u003e\n  \u003cli\u003e希望支持 long-running subresources/endpoints，例如 websocket；\u003c/li\u003e\n  \u003cli\u003e希望对接外部系统；\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003ch1 id=\"5-webhook-机制\"\u003e5 Webhook 机制\u003c/h1\u003e\n\n\u003cp\u003eWebhook 并不是设计用来扩展 API 的，但它提供的注册机制确实也实现了添加 API 的功能，\n另外它也在 kube-apiserver 内部，所以本文也简单列一下，参照学习。\u003c/p\u003e\n\n\u003ch2 id=\"51-webhook-位置及原理\"\u003e5.1 Webhook 位置及原理\u003c/h2\u003e\n\n\u003cp align=\"center\"\u003e\u003cimg src=\"/assets/img/k8s-is-about-apis/k8s-api-request.jpeg\" width=\"100%\" height=\"100%\"/\u003e\u003c/p\u003e\n\u003cp align=\"center\"\u003eFig. k8s API request. Image source\n  \u003ca href=\"https://github.com/krvarma/mutating-webhook/blob/master/README.md\"\u003egithub.com/krvarma/mutating-webhook\u003c/a\u003e\n\u003c/p\u003e\n\n\u003cp\u003e两种 webhook：\u003c/p\u003e\n\n\u003cul\u003e\n  \u003cli\u003e\n    \u003cp\u003emutating webhook：\u003cstrong\u003e\u003cmark\u003e拦截指定的资源请求\u003c/mark\u003e\u003c/strong\u003e，判断操作是否允许，或者\u003cstrong\u003e\u003cmark\u003e动态修改资源\u003c/mark\u003e\u003c/strong\u003e；\u003c/p\u003e\n\n    \u003cul\u003e\n      \u003cli\u003e举例：如果 pod 打了 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003esidecar-injector\u003c/code\u003e 相关标签，就会在这一步给它\u003cstrong\u003e\u003cmark\u003e注入 sidecar\u003c/mark\u003e\u003c/strong\u003e。\u003c/li\u003e\n    \u003c/ul\u003e\n  \u003c/li\u003e\n  \u003cli\u003e\n    \u003cp\u003evalidating webhook：功能与 mutation webhook 类似，但\u003cstrong\u003e\u003cmark\u003e随 k8s 一起编译\u003c/mark\u003e\u003c/strong\u003e，前者是插件方式。\u003c/p\u003e\n  \u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2 id=\"52-mutating-案例过滤所有-createupdate-virtualmachine-请求\"\u003e5.2 Mutating 案例：过滤所有 create/update \u003ccode class=\"language-plaintext highlighter-rouge\"\u003evirtualmachine\u003c/code\u003e 请求\u003c/h2\u003e\n\n\u003cp\u003ekubevirt 通过注册如下 mutating webhook，\n实现对 CREATE/UPDATE \u003cstrong\u003e\u003cmark\u003e\u003ccode\u003e /apis/kubevirt.io/v1/virtualmachines\u003c/code\u003e\u003c/mark\u003e\u003c/strong\u003e\n请求的拦截，并转发到 \u003cstrong\u003e\u003cmark\u003e\u003ccode\u003evirt-api.kubevirt:443/virtualmachines-mutate\u003c/code\u003e\u003c/mark\u003e\u003c/strong\u003e\n进行额外处理：\u003c/p\u003e\n\n\u003cdiv class=\"language-yaml highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"na\"\u003eapiVersion\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003eadmissionregistration.k8s.io/v1\u003c/span\u003e\n\u003cspan class=\"na\"\u003ekind\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003eMutatingWebhookConfiguration\u003c/span\u003e\n\u003cspan class=\"na\"\u003emetadata\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e\n  \u003cspan class=\"na\"\u003ename\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003evirt-api-mutator\u003c/span\u003e\n\u003cspan class=\"na\"\u003ewebhooks\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e\n\u003cspan class=\"pi\"\u003e-\u003c/span\u003e \u003cspan class=\"na\"\u003eadmissionReviewVersions\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e\n  \u003cspan class=\"pi\"\u003e-\u003c/span\u003e \u003cspan class=\"s\"\u003ev1\u003c/span\u003e\n  \u003cspan class=\"na\"\u003eclientConfig\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e\n    \u003cspan class=\"na\"\u003ecaBundle\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003eLS0tL...\u003c/span\u003e\n    \u003cspan class=\"na\"\u003eservice\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e\n      \u003cspan class=\"na\"\u003ename\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003evirt-api\u003c/span\u003e\n      \u003cspan class=\"na\"\u003enamespace\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003ekubevirt\u003c/span\u003e\n      \u003cspan class=\"na\"\u003epath\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003e/virtualmachines-mutate\u003c/span\u003e\n      \u003cspan class=\"na\"\u003eport\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"m\"\u003e443\u003c/span\u003e\n  \u003cspan class=\"na\"\u003ename\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003evirtualmachines-mutator.kubevirt.io\u003c/span\u003e\n  \u003cspan class=\"na\"\u003erules\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e\n  \u003cspan class=\"pi\"\u003e-\u003c/span\u003e \u003cspan class=\"na\"\u003eapiGroups\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e\n    \u003cspan class=\"pi\"\u003e-\u003c/span\u003e \u003cspan class=\"s\"\u003ekubevirt.io\u003c/span\u003e\n    \u003cspan class=\"na\"\u003eapiVersions\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e\n    \u003cspan class=\"pi\"\u003e-\u003c/span\u003e \u003cspan class=\"s\"\u003ev1\u003c/span\u003e\n    \u003cspan class=\"na\"\u003eoperations\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e\n    \u003cspan class=\"pi\"\u003e-\u003c/span\u003e \u003cspan class=\"s\"\u003eCREATE\u003c/span\u003e\n    \u003cspan class=\"pi\"\u003e-\u003c/span\u003e \u003cspan class=\"s\"\u003eUPDATE\u003c/span\u003e\n    \u003cspan class=\"na\"\u003eresources\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e\n    \u003cspan class=\"pi\"\u003e-\u003c/span\u003e \u003cspan class=\"s\"\u003evirtualmachines\u003c/span\u003e\n    \u003cspan class=\"na\"\u003escope\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s1\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s\"\u003e*\u0026#39;\u003c/span\u003e\n\u003cspan class=\"nn\"\u003e...\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e组件 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003evirt-api\u003c/code\u003e 中实现了这些额外的处理逻辑。\u003c/p\u003e\n\n\u003ch2 id=\"53-validating-案例拦截驱逐-virtualmachines-请求\"\u003e5.3 Validating 案例：拦截驱逐 virtualmachines 请求\u003c/h2\u003e\n\n\u003cdiv class=\"language-yaml highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"na\"\u003eapiVersion\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003eadmissionregistration.k8s.io/v1\u003c/span\u003e\n\u003cspan class=\"na\"\u003ekind\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003eValidatingWebhookConfiguration\u003c/span\u003e\n\u003cspan class=\"na\"\u003emetadata\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e\n  \u003cspan class=\"na\"\u003ename\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003evirt-api-validator\u003c/span\u003e\n\u003cspan class=\"na\"\u003ewebhooks\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e\n\u003cspan class=\"pi\"\u003e-\u003c/span\u003e \u003cspan class=\"na\"\u003eadmissionReviewVersions\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e\n  \u003cspan class=\"pi\"\u003e-\u003c/span\u003e \u003cspan class=\"s\"\u003ev1\u003c/span\u003e\n  \u003cspan class=\"na\"\u003eclientConfig\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e\n    \u003cspan class=\"na\"\u003ecaBundle\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003eLS0t\u003c/span\u003e\n    \u003cspan class=\"na\"\u003eservice\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e\n      \u003cspan class=\"na\"\u003ename\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003evirt-api\u003c/span\u003e\n      \u003cspan class=\"na\"\u003enamespace\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003ekubevirt\u003c/span\u003e\n      \u003cspan class=\"na\"\u003epath\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003e/launcher-eviction-validate\u003c/span\u003e\n      \u003cspan class=\"na\"\u003eport\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"m\"\u003e443\u003c/span\u003e\n  \u003cspan class=\"na\"\u003ename\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003evirt-launcher-eviction-interceptor.kubevirt.io\u003c/span\u003e\n  \u003cspan class=\"na\"\u003erules\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e\n  \u003cspan class=\"pi\"\u003e-\u003c/span\u003e \u003cspan class=\"na\"\u003eapiGroups\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e\n    \u003cspan class=\"pi\"\u003e-\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;\u003c/span\u003e\n    \u003cspan class=\"na\"\u003eapiVersions\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e\n    \u003cspan class=\"pi\"\u003e-\u003c/span\u003e \u003cspan class=\"s\"\u003ev1\u003c/span\u003e\n    \u003cspan class=\"na\"\u003eoperations\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e\n    \u003cspan class=\"pi\"\u003e-\u003c/span\u003e \u003cspan class=\"s1\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s\"\u003e*\u0026#39;\u003c/span\u003e\n    \u003cspan class=\"na\"\u003eresources\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e\n    \u003cspan class=\"pi\"\u003e-\u003c/span\u003e \u003cspan class=\"s\"\u003epods/eviction\u003c/span\u003e\n    \u003cspan class=\"na\"\u003escope\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s1\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s\"\u003e*\u0026#39;\u003c/span\u003e\n\u003cspan class=\"nn\"\u003e...\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e这样可以在虚拟机被驱逐之前做一次额外判断，例如禁止驱逐。\u003c/p\u003e\n\n\u003ch1 id=\"6-结束语\"\u003e6 结束语\u003c/h1\u003e\n\n\u003cp\u003e本文梳理了几种 k8s API 的扩展机制，并拿几个开源项目做了实际解读，以便加深理解。\n两种机制在使用时都有相应的脚手架项目，应避免自己完全从头写代码。\u003c/p\u003e\n\n\u003ch1 id=\"参考资料\"\u003e参考资料\u003c/h1\u003e\n\n\u003col\u003e\n  \u003cli\u003e\u003ca href=\"https://github.com/kubernetes/design-proposals-archive/blob/main/api-machinery/aggregated-api-servers.md\"\u003eAggregated API Servers 设计文档\u003c/a\u003e, 2019\u003c/li\u003e\n  \u003cli\u003e\u003ca href=\"https://itnext.io/comparing-kubernetes-api-extension-mechanisms-of-custom-resource-definition-and-aggregated-api-64f4ca6d0966\"\u003ePatterns of Kubernetes API Extensions\u003c/a\u003e, ITNEXT, 2018\u003c/li\u003e\n  \u003cli\u003e\u003ca href=\"https://duyanghao.github.io/kubernetes-apiExtensionsServer/\"\u003eKubernetes apiExtensionsServer 源码解析\u003c/a\u003e, 2020\u003c/li\u003e\n\u003c/ol\u003e\n\n\n  \u003c!-- POST NAVIGATION --\u003e\n  \u003cdiv class=\"postNav clearfix\"\u003e\n     \n      \u003ca class=\"prev\" href=\"/blog/linux-loadavg-zh/\"\u003e\u003cspan\u003e« Linux Load Average：算法、实现与实用指南（2023）\u003c/span\u003e\n      \n    \u003c/a\u003e\n      \n      \n      \u003ca class=\"next\" href=\"/blog/gpu-advanced-notes-2-zh/\"\u003e\u003cspan\u003eGPU 进阶笔记（二）：华为昇腾 910B GPU 相关（2023） »\u003c/span\u003e\n       \n      \u003c/a\u003e\n     \n  \u003c/div\u003e\n\u003c/div\u003e",
  "Date": "2023-10-14T00:00:00Z",
  "Author": "Arthur Chiao"
}