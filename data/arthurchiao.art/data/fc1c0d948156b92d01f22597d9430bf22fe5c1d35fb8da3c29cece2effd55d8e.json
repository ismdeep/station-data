{
  "Source": "arthurchiao.art",
  "Title": "[译] NAT - 网络地址转换（2016）",
  "Link": "https://arthurchiao.art/blog/nat-zh/",
  "Content": "\u003cdiv class=\"post\"\u003e\n  \n  \u003ch1 class=\"postTitle\"\u003e[译] NAT - 网络地址转换（2016）\u003c/h1\u003e\n  \u003cp class=\"meta\"\u003ePublished at 2019-02-17 | Last Update 2021-10-08\u003c/p\u003e\n  \n  \u003ch3 id=\"译者序\"\u003e译者序\u003c/h3\u003e\n\n\u003cp\u003e本文翻译自 2016 年的一篇英文博客 \u003ca href=\"https://www.karlrupp.net/en/computer/nat_tutorial\"\u003eNAT - Network Address Translation\u003c/a\u003e 。\u003c/p\u003e\n\n\u003cp\u003e\u003cstrong\u003e由于译者水平有限，本文不免存在遗漏或错误之处。如有疑问，请查阅原文。\u003c/strong\u003e\u003c/p\u003e\n\n\u003cp\u003e以下是译文。\u003c/p\u003e\n\n\u003chr/\u003e\n\n\u003cul id=\"markdown-toc\"\u003e\n  \u003cli\u003e\u003ca href=\"#译者序\" id=\"markdown-toc-译者序\"\u003e译者序\u003c/a\u003e\u003c/li\u003e\n  \u003cli\u003e\u003ca href=\"#1-绪论\" id=\"markdown-toc-1-绪论\"\u003e1 绪论\u003c/a\u003e\u003c/li\u003e\n  \u003cli\u003e\u003ca href=\"#2-网络内的数据包\" id=\"markdown-toc-2-网络内的数据包\"\u003e2 网络内的数据包\u003c/a\u003e\u003c/li\u003e\n  \u003cli\u003e\u003ca href=\"#3-linux-和-netfilter\" id=\"markdown-toc-3-linux-和-netfilter\"\u003e3 Linux 和 Netfilter\u003c/a\u003e\u003c/li\u003e\n  \u003cli\u003e\u003ca href=\"#4-例子将私有网络通过-nat-连接到互联网\" id=\"markdown-toc-4-例子将私有网络通过-nat-连接到互联网\"\u003e4 例子：将私有网络通过 NAT 连接到互联网\u003c/a\u003e    \u003cul\u003e\n      \u003cli\u003e\u003ca href=\"#41-类比地主和租户的信件收发\" id=\"markdown-toc-41-类比地主和租户的信件收发\"\u003e4.1 类比：地主和租户的信件收发\u003c/a\u003e\u003c/li\u003e\n      \u003cli\u003e\u003ca href=\"#42-从租户问题到计算机世界\" id=\"markdown-toc-42-从租户问题到计算机世界\"\u003e4.2 从租户问题到计算机世界\u003c/a\u003e\u003c/li\u003e\n      \u003cli\u003e\u003ca href=\"#43-如何设置规则\" id=\"markdown-toc-43-如何设置规则\"\u003e4.3 如何设置规则\u003c/a\u003e\u003c/li\u003e\n      \u003cli\u003e\u003ca href=\"#44-nat-的不足\" id=\"markdown-toc-44-nat-的不足\"\u003e4.4 NAT 的不足\u003c/a\u003e\u003c/li\u003e\n    \u003c/ul\u003e\n  \u003c/li\u003e\n  \u003cli\u003e\u003ca href=\"#5-近距离查看-iptables\" id=\"markdown-toc-5-近距离查看-iptables\"\u003e5 近距离查看 iptables\u003c/a\u003e    \u003cul\u003e\n      \u003cli\u003e\u003ca href=\"#51-选择-table\" id=\"markdown-toc-51-选择-table\"\u003e5.1 选择 table\u003c/a\u003e\u003c/li\u003e\n      \u003cli\u003e\u003ca href=\"#52-几个重要命令\" id=\"markdown-toc-52-几个重要命令\"\u003e5.2 几个重要命令\u003c/a\u003e\u003c/li\u003e\n      \u003cli\u003e\u003ca href=\"#53-选择匹配模式pattern\" id=\"markdown-toc-53-选择匹配模式pattern\"\u003e5.3 选择匹配模式（pattern）\u003c/a\u003e\u003c/li\u003e\n      \u003cli\u003e\u003ca href=\"#54-匹配后的动作\" id=\"markdown-toc-54-匹配后的动作\"\u003e5.4 匹配后的动作\u003c/a\u003e\u003c/li\u003e\n    \u003c/ul\u003e\n  \u003c/li\u003e\n  \u003cli\u003e\u003ca href=\"#6-几种-iptables-动作\" id=\"markdown-toc-6-几种-iptables-动作\"\u003e6 几种 iptables 动作\u003c/a\u003e    \u003cul\u003e\n      \u003cli\u003e\u003ca href=\"#61-snat---修改源-ip-为固定新-ip-静态\" id=\"markdown-toc-61-snat---修改源-ip-为固定新-ip-静态\"\u003e6.1 SNAT - 修改源 IP 为固定新 IP （静态）\u003c/a\u003e\u003c/li\u003e\n      \u003cli\u003e\u003ca href=\"#62-masquerade---修改源-ip-为动态新-ip动态获取网络接口-ip\" id=\"markdown-toc-62-masquerade---修改源-ip-为动态新-ip动态获取网络接口-ip\"\u003e6.2 MASQUERADE - 修改源 IP 为动态新 IP（动态获取网络接口 IP）\u003c/a\u003e\u003c/li\u003e\n      \u003cli\u003e\u003ca href=\"#63-dnat---修改目的-ip\" id=\"markdown-toc-63-dnat---修改目的-ip\"\u003e6.3 DNAT - 修改目的 IP\u003c/a\u003e\u003c/li\u003e\n      \u003cli\u003e\u003ca href=\"#63-redirect---将包重定向到本机另一个端口\" id=\"markdown-toc-63-redirect---将包重定向到本机另一个端口\"\u003e6.3 REDIRECT - 将包重定向到本机另一个端口\u003c/a\u003e\u003c/li\u003e\n    \u003c/ul\u003e\n  \u003c/li\u003e\n  \u003cli\u003e\u003ca href=\"#7-nat-应用-applications\" id=\"markdown-toc-7-nat-应用-applications\"\u003e7 NAT 应用 (Applications)\u003c/a\u003e    \u003cul\u003e\n      \u003cli\u003e\u003ca href=\"#71-透明代理\" id=\"markdown-toc-71-透明代理\"\u003e7.1 透明代理\u003c/a\u003e\u003c/li\u003e\n      \u003cli\u003e\u003ca href=\"#72-绕过防火墙\" id=\"markdown-toc-72-绕过防火墙\"\u003e7.2 绕过防火墙\u003c/a\u003e        \u003cul\u003e\n          \u003cli\u003e\u003ca href=\"#721-配置内网机器可以-ssh-到跳板机\" id=\"markdown-toc-721-配置内网机器可以-ssh-到跳板机\"\u003e7.2.1 配置内网机器可以 SSH 到跳板机\u003c/a\u003e\u003c/li\u003e\n          \u003cli\u003e\u003ca href=\"#722-通过跳板机从内网连接到公网举例邮件服务器-pop3\" id=\"markdown-toc-722-通过跳板机从内网连接到公网举例邮件服务器-pop3\"\u003e7.2.2 通过跳板机从内网连接到公网举例：邮件服务器 POP3\u003c/a\u003e\u003c/li\u003e\n          \u003cli\u003e\u003ca href=\"#723-通过跳板机绕过-http-监控\" id=\"markdown-toc-723-通过跳板机绕过-http-监控\"\u003e7.2.3 通过跳板机绕过 HTTP 监控\u003c/a\u003e\u003c/li\u003e\n        \u003c/ul\u003e\n      \u003c/li\u003e\n      \u003cli\u003e\u003ca href=\"#73-通过-nat-从外网访问内网服务\" id=\"markdown-toc-73-通过-nat-从外网访问内网服务\"\u003e7.3 通过 NAT 从外网访问内网服务\u003c/a\u003e\u003c/li\u003e\n    \u003c/ul\u003e\n  \u003c/li\u003e\n  \u003cli\u003e\u003ca href=\"#8-相关文章\" id=\"markdown-toc-8-相关文章\"\u003e8 相关文章\u003c/a\u003e\u003c/li\u003e\n  \u003cli\u003e\u003ca href=\"#9-结束语致谢及其他\" id=\"markdown-toc-9-结束语致谢及其他\"\u003e9 结束语，致谢及其他\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003chr/\u003e\n\n\u003ch1 id=\"1-绪论\"\u003e1 绪论\u003c/h1\u003e\n\n\u003cp\u003e网络地址转换通常涉及\u003cstrong\u003e“在 IP 包经过路由器或防火墙的时候，修改其源和/或目的地址”\u003c/strong\u003e（\n\u003ca href=\"http://en.wikipedia.org/wiki/Network_Address_Translation\"\u003eWikipedia: NAT\u003c/a\u003e）。\u003c/p\u003e\n\n\u003cp\u003e本文将介绍什么是 NAT、如何使用 NAT 以及在 Linux （或者更广泛地说，各种 Unix 的衍生版） 上如何配置 NAT。\n但是，本文不会覆盖 NAT 的所有细节，而主要想让读者知道：\n在现代计算机网络中它可以用来做什么，及其不能用来做什么。\u003c/p\u003e\n\n\u003cp\u003e接下来首先会查看 IP 包的结构，然后简要地介绍 （Linux）内核的一些功能，然后进入正\n题，介绍一种最常见的 NAT 应用场景，即，通过路由器（本例中为一台支持 iptables 的\nLinux 机器）将私有子网连接到互联网。\u003c/p\u003e\n\n\u003cp\u003e再后面，会介绍几种其他的可能性，例如重定向，或者如何使用代理（proxy）绕过防火\n墙。但是，我不能保证这些解决方案是最智能、最强大或者设计最精巧的，读者应该\n仅将它们视为展示 NAT 功能的一些示例方案（proof of concept）。\u003c/p\u003e\n\n\u003ch1 id=\"2-网络内的数据包\"\u003e2 网络内的数据包\u003c/h1\u003e\n\n\u003cp\u003e本节只讨论基于 TCP 和 UDP 协议的 IP 包。\u003c/p\u003e\n\n\u003cp\u003eIP 包的介绍见 \u003ca href=\"http://en.wikipedia.org/wiki/IPv4\"\u003eIPv4 at Wikipedia\u003c/a\u003e。本文将主要\n用到其中的两个字段：源 IP 和目的 IP。\u003c/p\u003e\n\n\u003cp\u003eTCP 和 UDP 是传输层协议，介绍分别见:\u003c/p\u003e\n\n\u003col\u003e\n  \u003cli\u003e\u003ca href=\"http://en.wikipedia.org/wiki/Transmission_Control_Protocol\"\u003eTCP at Wikipedia\u003c/a\u003e\u003c/li\u003e\n  \u003cli\u003e\u003ca href=\"http://en.wikipedia.org/wiki/User_Datagram_Protocol\"\u003eUDP at Wikipedia\u003c/a\u003e\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003cp\u003e传输层会用到端口号，本文为简单起见，认为每个（网络）进程进行有独立的端口号，例如\n，HTTP 服务运行在 80 端口， SSH 服务运行在 22 端口。\u003c/p\u003e\n\n\u003cp\u003e一个 IP 地址加一个传输层端口号定义一个 socket。socket 是唯一的，一个客户端 socket\n和一个服务端 socket 定义一个连接（connection），一端发送的数据，另一端就会接收到\n。\n例如，socket \u003ccode class=\"language-plaintext highlighter-rouge\"\u003e123.123.123.123:65432\u003c/code\u003e 和 socket \u003ccode class=\"language-plaintext highlighter-rouge\"\u003e112.112.112.112:80\u003c/code\u003e 建立的一个连\n接，可能是 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003e123.123.123.123\u003c/code\u003e 这台机器上的浏览器正在访问位于 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003e112.112.112.112\u003c/code\u003e 上\n面的 HTTP 服务。\u003c/p\u003e\n\n\u003cp\u003e服务端程序一般使用标准的端口号，称为“well known ports”（公认的端口号），见 \u003ca href=\"http://www.iana.org/assignments/port-numbers\"\u003ewell\nknown ports at IANA\u003c/a\u003e 或\u003ca href=\"http://en.wikipedia.org/wiki/Well_known_ports\"\u003ewell known\nports at Wikipedia\u003c/a\u003e。客户端程序使\n用临时端口号，一般从 1023 往上增加，选择一个可用的。\u003c/p\u003e\n\n\u003ch1 id=\"3-linux-和-netfilter\"\u003e3 Linux 和 Netfilter\u003c/h1\u003e\n\n\u003cp\u003eLinux 内核中有一个数据包过滤框架（packet filter framework），叫做 \u003cstrong\u003enetfilter\u003c/strong\u003e（\n项目地址 \u003ca href=\"netfilter.org\"\u003enetfilter.org\u003c/a\u003e）。这个框架使得 Linux 机器可以像路由器一\n样工作。接下来我们将使用一个命令行工具 iptables 来创建复杂的规则，用于修改和过滤\n数据包。毫无意外，和 NAT 相关的最重要的规则，都在 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003enat\u003c/code\u003e\n这个（iptables）table 里。这个表有三个预置的 chain：\u003ccode class=\"language-plaintext highlighter-rouge\"\u003ePREROUTING\u003c/code\u003e, \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eOUTPUT\u003c/code\u003e 和\n\u003ccode class=\"language-plaintext highlighter-rouge\"\u003ePOSTROUTING\u003c/code\u003e。\u003c/p\u003e\n\n\u003cp align=\"center\"\u003e\u003cimg src=\"/assets/img/nat-zh/nat-chains.gif\" width=\"80%\" height=\"80%\"/\u003e\u003c/p\u003e\n\n\u003cp\u003e\u003ccode class=\"language-plaintext highlighter-rouge\"\u003ePREROUTING\u003c/code\u003e 和 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003ePOSTROUTING\u003c/code\u003e 是最重要的 chain。如名字所示，\u003ccode class=\"language-plaintext highlighter-rouge\"\u003ePREROUTING\u003c/code\u003e chain 负\n责处理刚刚到达网络接口的数据包，这时还没有做路由判断，因此还不知道这个包是发往本\n机（local），还是网络内的其他主机。包经过 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003ePREROUTING\u003c/code\u003e chain 之后，将进行路由判\n断。如果目的是本机，那接下来的过程将不涉及 NAT；如果目的是网络内的其他机器，那包\n将会被转发到那台机器，前提是这台机器配置了允许转发。\u003c/p\u003e\n\n\u003cp\u003e在转发包离开本机之前，它会经过 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003ePOSTROUTING\u003c/code\u003e chain。对于本机生成的包，这里还有一\n点不同：它会先经过 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eOUTPUT\u003c/code\u003e chain，然后再经过 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003ePOSTROUTING\u003c/code\u003e chain。\u003c/p\u003e\n\n\u003cp\u003e要使用 NAT，我们首先需要配置机器。下面的例子中，\u003ccode class=\"language-plaintext highlighter-rouge\"\u003e#\u003c/code\u003e 开头的是注释，\u003ccode class=\"language-plaintext highlighter-rouge\"\u003e$\u0026gt;\u003c/code\u003e 开头的是命\n令。\u003c/p\u003e\n\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"c\"\u003e# IMPORTANT: Activate IP-forwarding in the kernel!\u003c/span\u003e\n\n\u003cspan class=\"c\"\u003e# Disabled by default!\u003c/span\u003e\n\u003cspan class=\"nv\"\u003e$\u0026gt;\u003c/span\u003e \u003cspan class=\"nb\"\u003eecho\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;1\u0026#34;\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e /proc/sys/net/ipv4/ip_forward\n\n\u003cspan class=\"c\"\u003e# Load various modules. Usually they are already loaded \u003c/span\u003e\n\u003cspan class=\"c\"\u003e# (especially for newer kernels), in that case \u003c/span\u003e\n\u003cspan class=\"c\"\u003e# the following commands are not needed.\u003c/span\u003e\n \n\u003cspan class=\"c\"\u003e# Load iptables module:\u003c/span\u003e\n\u003cspan class=\"nv\"\u003e$\u0026gt;\u003c/span\u003e modprobe ip_tables\n\n\u003cspan class=\"c\"\u003e# activate connection tracking\u003c/span\u003e\n\u003cspan class=\"c\"\u003e# (connection\u0026#39;s status are taken into account)\u003c/span\u003e\n\u003cspan class=\"nv\"\u003e$\u0026gt;\u003c/span\u003e modprobe ip_conntrack\n\n\u003cspan class=\"c\"\u003e# Special features for IRC:\u003c/span\u003e\n\u003cspan class=\"nv\"\u003e$\u0026gt;\u003c/span\u003e modprobe ip_conntrack_irc\n\n\u003cspan class=\"c\"\u003e# Special features for FTP:\u003c/span\u003e\n\u003cspan class=\"nv\"\u003e$\u0026gt;\u003c/span\u003e modprobe ip_conntrack_ftp\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e以上配置应该足够了。如果遇到错误，可能是因为你的内核在编译时没有指定路由相关的选\n项，请参考\u003ca href=\"http://www.comptechdoc.org/os/linux/usersguide/linux_ugipmasq.html\"\u003e这里\u003c/a\u003e。\u003c/p\u003e\n\n\u003ch1 id=\"4-例子将私有网络通过-nat-连接到互联网\"\u003e4 例子：将私有网络通过 NAT 连接到互联网\u003c/h1\u003e\n\n\u003cp\u003e我们知道了 IP 包的结构，也知道了在 Linux 中如何操控数据包，因此接下来就可以应\n用它了。NAT 最广泛的使用场景应该就是：\u003cstrong\u003e一个私有子网的所有机器共享一个公网连接\u003c/strong\u003e。\n接下来我们就从这个例子开始。\u003c/p\u003e\n\n\u003ch2 id=\"41-类比地主和租户的信件收发\"\u003e4.1 类比：地主和租户的信件收发\u003c/h2\u003e\n\n\u003cp\u003e我们用一个形象的例子做类比，以更容易理解 NAT。\u003c/p\u003e\n\n\u003cp\u003e\u003cstrong\u003e考虑如下场景：\u003c/strong\u003e\u003c/p\u003e\n\n\u003cp\u003e有一个地主，他的几个租户，和若干个邮递员。\u003c/p\u003e\n\n\u003cp\u003e地主有几个信箱可以收发信件，但租户没有，因此，所有直接寄给租户的信件将被邮递员直\n接丢弃。但是，租户可以将他们的信件交给地主，地主会将这些信件送到邮局。那么问题是\n：\u003cstrong\u003e租户如何参与收发信件呢？\u003c/strong\u003e\u003c/p\u003e\n\n\u003cp\u003e一种解决方案是：\u003c/p\u003e\n\n\u003cp\u003e地主将不同租户的信件放到他自己不同的信箱，并将信件上\u003cstrong\u003e租户的地址\u003c/strong\u003e（某种意义上说\n是无效地址，因为这个地址的信件会被邮递员直接丢弃）换成\u003cstrong\u003e自己的某个信箱的地址\u003c/strong\u003e\n。因此，回信也会被邮递员放到地主的相应邮箱，地主可以轻松地判断信件属于哪个\n租户并转交给他们（转交之前地主会将自己的地址再修改回租户的地址，因此租户不会发现\n信件地址被修改过）。这种方式从某种意义上说是最优的，因为它对租户来说完全透明，他\n们完全意识不到邮递员是无法处理直接寄给租户的信件的。\u003c/p\u003e\n\n\u003ch2 id=\"42-从租户问题到计算机世界\"\u003e4.2 从租户问题到计算机世界\u003c/h2\u003e\n\n\u003cp\u003eNAT 的原理和以上租户问题很相似：\u003c/p\u003e\n\n\u003cul\u003e\n  \u003cli\u003e\u003cstrong\u003e租户\u003c/strong\u003e对应\u003cstrong\u003e本地子网内的 IP 地址\u003c/strong\u003e，不同租户（在 NAT 路由器上）由不同端口号（port）区分\u003c/li\u003e\n  \u003cli\u003e\u003cstrong\u003e地主\u003c/strong\u003e对应\u003cstrong\u003eNAT 路由器\u003c/strong\u003e\u003c/li\u003e\n  \u003cli\u003e\u003cstrong\u003e信件接收方\u003c/strong\u003e对应\u003cstrong\u003e互联网上的任意主机\u003c/strong\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003e一个 socket 是一个 IP 地址加一个 port。\u003c/p\u003e\n\n\u003cp\u003e租户的通信过程：\u003c/p\u003e\n\n\u003col\u003e\n  \u003cli\u003e租户将信件放到地主的办公室\u003c/li\u003e\n  \u003cli\u003e地主将\u003cstrong\u003e发送地址\u003c/strong\u003e（此时为租户地址）改成他自己的某个邮箱地址\u003c/li\u003e\n  \u003cli\u003e地主收到回信时，将接收地址（此时为自己的某个邮箱地址）改成对应租户的地址\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003cp\u003e本地网络的情形和这个过程很类似：\u003c/p\u003e\n\n\u003col\u003e\n  \u003cli\u003e子网内的所有主机（客户端）通过 socket 将数据包发送到一个\n特定路由器（通过将路由器地址设置为所有机器的网关来实现，数据会通过以太网\n或其他底层协议传输）\u003c/li\u003e\n  \u003cli\u003e路由器将发送方的 socket 替换为自己的一个（还未使用的）socket\u003c/li\u003e\n  \u003cli\u003e这个 socket 收到的数据，路由器将 socket 地址修改为对应的客户端 socket，并转\n发给它\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003cp\u003e我们假设客户端的网关设置是正确的，那剩下的就是如何配置路由器了。\u003c/p\u003e\n\n\u003cp\u003e幸运的是，netfilter\n框架会对设置的每条一条（出向或入向）规则，自动设置它的反向规则，因此我们只需要设\n置一个方向的规则即可。选择哪个方向来设置规则？通常是选择不确定性小的一个方向。\n例如，“替换所有从本地网络发出的数据包的地址”比“如果客户端发送过一些东西给服务端\n，那将服务端发送的数据进行某种方式的修改”要简单的多。\u003c/p\u003e\n\n\u003ch2 id=\"43-如何设置规则\"\u003e4.3 如何设置规则\u003c/h2\u003e\n\n\u003cp\u003e我们希望实现的是：\u003cstrong\u003e从本地网络发出的、目的是公网的包，将发送方地址修改为路由器\n的地址。\u003c/strong\u003e\u003c/p\u003e\n\n\u003cp\u003e接下来假设路由器的本地网络走 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eeth0\u003c/code\u003e 端口，到公网的网络走 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eeth1\u003c/code\u003e 端口。那么\u003cstrong\u003e如\n下命令就能完成我们期望的功能\u003c/strong\u003e：\u003c/p\u003e\n\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"c\"\u003e# Connect a LAN to the internet\u003c/span\u003e\n\u003cspan class=\"nv\"\u003e$\u0026gt;\u003c/span\u003e iptables \u003cspan class=\"nt\"\u003e-t\u003c/span\u003e nat \u003cspan class=\"nt\"\u003e-A\u003c/span\u003e POSTROUTING \u003cspan class=\"nt\"\u003e-o\u003c/span\u003e eth1 \u003cspan class=\"nt\"\u003e-j\u003c/span\u003e MASQUERADE\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e解释：\u003c/p\u003e\n\n\u003cul\u003e\n  \u003cli\u003e\u003ccode class=\"language-plaintext highlighter-rouge\"\u003eiptables\u003c/code\u003e - 配置内核的工具\u003c/li\u003e\n  \u003cli\u003e\u003ccode class=\"language-plaintext highlighter-rouge\"\u003e-t nat\u003c/code\u003e - 指定对名为 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003enat\u003c/code\u003e 的 iptables table 配置 NAT 规则\u003c/li\u003e\n  \u003cli\u003e\u003ccode class=\"language-plaintext highlighter-rouge\"\u003e-A POSTROUTING\u003c/code\u003e - 追加（A: Append）规则到 iptables 的 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003ePOSTROUTING\u003c/code\u003e chain\u003c/li\u003e\n  \u003cli\u003e\u003ccode class=\"language-plaintext highlighter-rouge\"\u003e-o eth1\u003c/code\u003e - 指定只对从 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eeth1\u003c/code\u003e \u003cstrong\u003e发出\u003c/strong\u003e的数据包做操作（o: output）\u003c/li\u003e\n  \u003cli\u003e\u003cstrong\u003e\u003cmark\u003e\u003ccode\u003e-j MASQUERADE\u003c/code\u003e\u003c/mark\u003e\u003c/strong\u003e - 规则匹配成功后的动作是 \u003cstrong\u003emasquerade\u003c/strong\u003e\n（伪装）数据包，例如将源地址修改为路由器地址\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003e另外需要说明的是，（除了客户端过来的包，）路由器自己的包也会涉及以上处理逻辑，因\n为它们也经过 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003ePOSTROUTING\u003c/code\u003e chain（见上面的图）。然而，因为路由器为客户端做 socket\n(IP+Port) 转换的时候，会从它的未使用端口中挑选，因此它自身的包所使用的 port 与做\nNAT 的 port 肯定是不同的。因此，虽然它自身的包也会经过以上规则，但并不会被修改。\u003c/p\u003e\n\n\u003cp\u003e网络接口可以为任意类型，例如 ISDN 和 SDL 接口也是可以的（通常是 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eppp0\u003c/code\u003e 或者\n\u003ccode class=\"language-plaintext highlighter-rouge\"\u003eippp0\u003c/code\u003e）。可以通过 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eifconfig\u003c/code\u003e 查看所有（active）的接口：\u003c/p\u003e\n\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"c\"\u003e# Display available network interfaces\u003c/span\u003e\n\u003cspan class=\"nv\"\u003e$\u0026gt;\u003c/span\u003e ifconfig\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003ch2 id=\"44-nat-的不足\"\u003e4.4 NAT 的不足\u003c/h2\u003e\n\n\u003cp\u003e现在，本地计算机可以访问公网，但反过来，我们看看公网上的机器访问本地机器会是\n什么情况。\u003c/p\u003e\n\n\u003cp\u003e公网上的机器要和本地机器建立连接的话，它唯一能利用的信息就是用路由器的 IP 地址\n加一个端口号。大部分情况下，这个端口都是没有被使用的，因此过来的包会被拒绝。即使\n运气比较好，这个端口是路由器做 NAT 的一个端口，包仍然很可能会被拒绝，因为这个端\n口已经和公网上的其他主机建立连接了。\u003c/p\u003e\n\n\u003cp\u003e\u003cstrong\u003e因此，从公网上的机器向本地机器建立连接几乎是不可能的。\u003c/strong\u003e\u003c/p\u003e\n\n\u003cp\u003e对于常规服务，可以静态地将路由器的端口映射到本地服务，例如，将路由器的 80 端口收到\n的包转发到本地机器的 HTTP 服务器。\u003c/p\u003e\n\n\u003ch1 id=\"5-近距离查看-iptables\"\u003e5 近距离查看 iptables\u003c/h1\u003e\n\n\u003cp\u003e有了以上基础后，我们来详细查看 iptables 的功能。命令帮助：\u003c/p\u003e\n\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"c\"\u003e# Abstract structure of an iptables instruction:\u003c/span\u003e\niptables \u003cspan class=\"o\"\u003e[\u003c/span\u003e\u003cspan class=\"nt\"\u003e-t\u003c/span\u003e table] \u003cspan class=\"nb\"\u003ecommand\u003c/span\u003e \u003cspan class=\"o\"\u003e[\u003c/span\u003ematch pattern] \u003cspan class=\"o\"\u003e[\u003c/span\u003eaction]\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e对于 NAT，必须要选择 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003enat\u003c/code\u003e table。\u003c/p\u003e\n\n\u003ch2 id=\"51-选择-table\"\u003e5.1 选择 table\u003c/h2\u003e\n\n\u003cp\u003e接下来的命令都会选择 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003enat\u003c/code\u003e table：\u003c/p\u003e\n\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"c\"\u003e# Choosing the nat-table\u003c/span\u003e\n\u003cspan class=\"c\"\u003e# (further arguments abbreviated by [...])\u003c/span\u003e\niptables \u003cspan class=\"nt\"\u003e-t\u003c/span\u003e nat \u003cspan class=\"o\"\u003e[\u003c/span\u003e...]\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e\u003ccode class=\"language-plaintext highlighter-rouge\"\u003emangle\u003c/code\u003e 和 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003efilter\u003c/code\u003e table 和 NAT 无关，因此本文不介绍。因为 \u003cstrong\u003e默认的 table 是\n\u003ccode class=\"language-plaintext highlighter-rouge\"\u003efilter\u003c/code\u003e table，因此我们接下来每次都要指定 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003e-t nat\u003c/code\u003e\u003c/strong\u003e。\u003c/p\u003e\n\n\u003ch2 id=\"52-几个重要命令\"\u003e5.2 几个重要命令\u003c/h2\u003e\n\n\u003cp\u003e最重要的几个命令：\u003c/p\u003e\n\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"c\"\u003e# In the following \u0026#34;chain\u0026#34; represents\u003c/span\u003e\n\u003cspan class=\"c\"\u003e# one of the chains PREROUTING, OUTPUT and POSTROUTING\u003c/span\u003e\n\n\u003cspan class=\"c\"\u003e# add a rule:\u003c/span\u003e\n\u003cspan class=\"nv\"\u003e$\u0026gt;\u003c/span\u003e iptables \u003cspan class=\"nt\"\u003e-t\u003c/span\u003e nat \u003cspan class=\"nt\"\u003e-A\u003c/span\u003e chain \u003cspan class=\"o\"\u003e[\u003c/span\u003e...]\n\n\u003cspan class=\"c\"\u003e# list rules:\u003c/span\u003e\n\u003cspan class=\"nv\"\u003e$\u0026gt;\u003c/span\u003e iptables \u003cspan class=\"nt\"\u003e-t\u003c/span\u003e nat \u003cspan class=\"nt\"\u003e-L\u003c/span\u003e\n\n\u003cspan class=\"c\"\u003e# remove user-defined chain with index \u0026#39;myindex\u0026#39;:\u003c/span\u003e\n\u003cspan class=\"nv\"\u003e$\u0026gt;\u003c/span\u003e iptables \u003cspan class=\"nt\"\u003e-t\u003c/span\u003e nat \u003cspan class=\"nt\"\u003e-D\u003c/span\u003e chain myindex\n\n\u003cspan class=\"c\"\u003e# Remove all rules in chain \u0026#39;chain\u0026#39;:\u003c/span\u003e\n\u003cspan class=\"nv\"\u003e$\u0026gt;\u003c/span\u003e iptables \u003cspan class=\"nt\"\u003e-t\u003c/span\u003e nat \u003cspan class=\"nt\"\u003e-F\u003c/span\u003e chain\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e完整 iptables 命令可以查看 man page：\u003c/p\u003e\n\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"c\"\u003e# manual pages of iptables\u003c/span\u003e\n\u003cspan class=\"nv\"\u003e$\u0026gt;\u003c/span\u003e man iptables\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e按 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eq\u003c/code\u003e 退出帮助。\u003c/p\u003e\n\n\u003ch2 id=\"53-选择匹配模式pattern\"\u003e5.3 选择匹配模式（pattern）\u003c/h2\u003e\n\n\u003cp\u003e要对特定包进行处理需要指定匹配模式。如下是几个重要的例子，完整模式信息请参阅\niptables man page。\u003c/p\u003e\n\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"c\"\u003e# actions to be taken on matched packets\u003c/span\u003e\n\u003cspan class=\"c\"\u003e# will be abbreviated by \u0026#39;[...]\u0026#39;.\u003c/span\u003e\n\u003cspan class=\"c\"\u003e# Depending on the match pattern the appropriate chain is selected.\u003c/span\u003e\n\n\u003cspan class=\"c\"\u003e# TCP packets from 192.168.1.2:\u003c/span\u003e\n\u003cspan class=\"nv\"\u003e$\u0026gt;\u003c/span\u003e iptables \u003cspan class=\"nt\"\u003e-t\u003c/span\u003e nat \u003cspan class=\"nt\"\u003e-A\u003c/span\u003e POSTROUTING \u003cspan class=\"nt\"\u003e-p\u003c/span\u003e tcp \u003cspan class=\"nt\"\u003e-s\u003c/span\u003e 192.168.1.2 \u003cspan class=\"o\"\u003e[\u003c/span\u003e...]\n\n\u003cspan class=\"c\"\u003e# UDP packets to 192.168.1.2:\u003c/span\u003e\n\u003cspan class=\"nv\"\u003e$\u0026gt;\u003c/span\u003e iptables \u003cspan class=\"nt\"\u003e-t\u003c/span\u003e nat \u003cspan class=\"nt\"\u003e-A\u003c/span\u003e POSTROUTING \u003cspan class=\"nt\"\u003e-p\u003c/span\u003e udp \u003cspan class=\"nt\"\u003e-d\u003c/span\u003e 192.168.1.2 \u003cspan class=\"o\"\u003e[\u003c/span\u003e...]\n\n\u003cspan class=\"c\"\u003e# all packets from 192.168.x.x arriving at eth0:\u003c/span\u003e\n\u003cspan class=\"nv\"\u003e$\u0026gt;\u003c/span\u003e iptables \u003cspan class=\"nt\"\u003e-t\u003c/span\u003e nat \u003cspan class=\"nt\"\u003e-A\u003c/span\u003e PREROUTING \u003cspan class=\"nt\"\u003e-s\u003c/span\u003e 192.168.0.0/16 \u003cspan class=\"nt\"\u003e-i\u003c/span\u003e eth0 \u003cspan class=\"o\"\u003e[\u003c/span\u003e...]\n\n\u003cspan class=\"c\"\u003e# all packets except TCP packets and except packets from 192.168.1.2:\u003c/span\u003e\n\u003cspan class=\"nv\"\u003e$\u0026gt;\u003c/span\u003e iptables \u003cspan class=\"nt\"\u003e-t\u003c/span\u003e nat \u003cspan class=\"nt\"\u003e-A\u003c/span\u003e PREROUTING \u003cspan class=\"nt\"\u003e-p\u003c/span\u003e \u003cspan class=\"o\"\u003e!\u003c/span\u003e tcp \u003cspan class=\"nt\"\u003e-s\u003c/span\u003e \u003cspan class=\"o\"\u003e!\u003c/span\u003e 192.168.1.2 \u003cspan class=\"o\"\u003e[\u003c/span\u003e...]\n\n\u003cspan class=\"c\"\u003e# packets leaving at eth1:\u003c/span\u003e\n\u003cspan class=\"nv\"\u003e$\u0026gt;\u003c/span\u003e iptables \u003cspan class=\"nt\"\u003e-t\u003c/span\u003e nat \u003cspan class=\"nt\"\u003e-A\u003c/span\u003e POSTROUTING \u003cspan class=\"nt\"\u003e-o\u003c/span\u003e eth1 \u003cspan class=\"o\"\u003e[\u003c/span\u003e...]\n\n\u003cspan class=\"c\"\u003e# TCP packets from 192.168.1.2, port 12345 to 12356\u003c/span\u003e\n\u003cspan class=\"c\"\u003e# to 123.123.123.123, Port 22\u003c/span\u003e\n\u003cspan class=\"c\"\u003e# (a backslash indicates contination at the next line)\u003c/span\u003e\n\u003cspan class=\"nv\"\u003e$\u0026gt;\u003c/span\u003e iptables \u003cspan class=\"nt\"\u003e-t\u003c/span\u003e nat \u003cspan class=\"nt\"\u003e-A\u003c/span\u003e POSTROUTING \u003cspan class=\"nt\"\u003e-p\u003c/span\u003e tcp \u003cspan class=\"nt\"\u003e-s\u003c/span\u003e 192.168.1.2 \u003cspan class=\"se\"\u003e\\\u003c/span\u003e\n   \u003cspan class=\"nt\"\u003e--sport\u003c/span\u003e 12345:12356 \u003cspan class=\"nt\"\u003e-d\u003c/span\u003e 123.123.123.123 \u003cspan class=\"nt\"\u003e--dport\u003c/span\u003e 22 \u003cspan class=\"o\"\u003e[\u003c/span\u003e...]\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e大部分选项都有长短两种格式，例如 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003e--source\u003c/code\u003e 和 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003e-s\u003c/code\u003e，长格式写起来麻烦，但更易\n阅读。\u003c/p\u003e\n\n\u003ch2 id=\"54-匹配后的动作\"\u003e5.4 匹配后的动作\u003c/h2\u003e\n\n\u003cp\u003e至此，我们已经可以指定匹配模式来过滤包了，接下来就是选择合适的动作。对于 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003enat\u003c/code\u003e\ntable，有如下几种动作：\u003ccode class=\"language-plaintext highlighter-rouge\"\u003eSNAT\u003c/code\u003e, \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eMASQUERADE\u003c/code\u003e, \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eDNAT\u003c/code\u003e, \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eREDIRECT\u003c/code\u003e，都需要通过 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003e-j\u003c/code\u003e\n指定。它们的格式如下（表示的意思将在下一节介绍）：\u003c/p\u003e\n\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"c\"\u003e# In the following the table selection, the command and the match pattern\u003c/span\u003e\n\u003cspan class=\"c\"\u003e# will be abbreviated using [...]\u003c/span\u003e\n\n\u003cspan class=\"c\"\u003e# Source-NAT: Change sender to 123.123.123.123\u003c/span\u003e\n\u003cspan class=\"nv\"\u003e$\u0026gt;\u003c/span\u003e iptables \u003cspan class=\"o\"\u003e[\u003c/span\u003e...] \u003cspan class=\"nt\"\u003e-j\u003c/span\u003e SNAT \u003cspan class=\"nt\"\u003e--to-source\u003c/span\u003e 123.123.123.123\n\n\u003cspan class=\"c\"\u003e# Mask: Change sender to outgoing network interface\u003c/span\u003e\n\u003cspan class=\"nv\"\u003e$\u0026gt;\u003c/span\u003e iptables \u003cspan class=\"o\"\u003e[\u003c/span\u003e...] \u003cspan class=\"nt\"\u003e-j\u003c/span\u003e MASQUERADE\n\n\u003cspan class=\"c\"\u003e# Destination-NAT: Change receipient to 123.123.123.123, port 22\u003c/span\u003e\n\u003cspan class=\"nv\"\u003e$\u0026gt;\u003c/span\u003e iptables \u003cspan class=\"o\"\u003e[\u003c/span\u003e...] \u003cspan class=\"nt\"\u003e-j\u003c/span\u003e DNAT \u003cspan class=\"nt\"\u003e--to-destination\u003c/span\u003e 123.123.123.123:22\n\n\u003cspan class=\"c\"\u003e# Redirect to local port 8080\u003c/span\u003e\n\u003cspan class=\"nv\"\u003e$\u0026gt;\u003c/span\u003e iptables \u003cspan class=\"o\"\u003e[\u003c/span\u003e...] \u003cspan class=\"nt\"\u003e-j\u003c/span\u003e REDIRECT \u003cspan class=\"nt\"\u003e--to-ports\u003c/span\u003e 8080\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003ch1 id=\"6-几种-iptables-动作\"\u003e6 几种 iptables 动作\u003c/h1\u003e\n\n\u003cp\u003e详细解释一下四种动作。\u003c/p\u003e\n\n\u003ch2 id=\"61-snat---修改源-ip-为固定新-ip-静态\"\u003e6.1 SNAT - 修改源 IP 为固定新 IP （静态）\u003c/h2\u003e\n\n\u003cp\u003e前面的将本地私有网络连接到公网的例子中，我们已经使用了 Source NAT（SNAT\n）。如名字所暗示，发送方的地址会被静态地修改。\u003c/p\u003e\n\n\u003cp\u003e在例子中我们选择 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eMASQUERADE\u003c/code\u003e 的原因在于：\u003cstrong\u003e对于 SNAT，必须显式指定转换后的 IP\u003c/strong\u003e。\n如果路由器配置的是静态 IP 地址，那 SNAT 是最合适的选择，因为它比 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eMASQUERADE\u003c/code\u003e 更\n快，后者对每个包都需要检查指定的输出端口上配置的 IP 地址。\u003c/p\u003e\n\n\u003cp\u003e\u003cstrong\u003e因为 SNAT 只对离开路由器的包有意义，因此它只用在 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003ePOSTROUTING\u003c/code\u003e chain 中。\u003c/strong\u003e\u003c/p\u003e\n\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"c\"\u003e# Options for SNAT (abstract of manual page)\u003c/span\u003e\n\u003cspan class=\"nt\"\u003e--to-source\u003c/span\u003e \u0026lt;ipaddr\u0026gt;[-\u0026lt;ipaddr\u0026gt;][:port-port]\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003ch2 id=\"62-masquerade---修改源-ip-为动态新-ip动态获取网络接口-ip\"\u003e6.2 MASQUERADE - 修改源 IP 为动态新 IP（动态获取网络接口 IP）\u003c/h2\u003e\n\n\u003cp\u003e和 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eSNAT\u003c/code\u003e 类似，但是对每个包都会动态获取指定输出接口（网卡）的 IP，因此如果接口\n的 IP 地址发送了变化，\u003ccode class=\"language-plaintext highlighter-rouge\"\u003eMASQUERADE\u003c/code\u003e 规则不受影响，可以正常工作；而对于 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eSNAT\u003c/code\u003e \n就必须重新调整规则。\u003c/p\u003e\n\n\u003cp\u003e和 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eSNAT\u003c/code\u003e 一样，\u003ccode class=\"language-plaintext highlighter-rouge\"\u003eMASQUERADE\u003c/code\u003e 只对 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003ePOSTROUTING\u003c/code\u003e chain 有意义。但和 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eSNAT\u003c/code\u003e 不同，\n\u003ccode class=\"language-plaintext highlighter-rouge\"\u003eMASQUERADE\u003c/code\u003e 不支持更详细的配置项了。\u003c/p\u003e\n\n\u003ch2 id=\"63-dnat---修改目的-ip\"\u003e6.3 DNAT - 修改目的 IP\u003c/h2\u003e\n\n\u003cp\u003e如果想修改包的目的 IP 地址，那需要使用 Destination NAT（DNAT）。\u003c/p\u003e\n\n\u003cp\u003eDNAT 可以用于运行在防火墙后面的服务器。\u003c/p\u003e\n\n\u003cp\u003e显然，接收端修改\u003cstrong\u003e必须在做路由决策之前，因此 DNAT 适用于 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003ePREROUTING\u003c/code\u003e 和\n\u003ccode class=\"language-plaintext highlighter-rouge\"\u003eOUTPUT\u003c/code\u003e （本地生成的包）chain\u003c/strong\u003e。\u003c/p\u003e\n\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"c\"\u003e# Options for DNAT (abstract of manual page)\u003c/span\u003e\n\u003cspan class=\"nt\"\u003e--to-destination\u003c/span\u003e \u0026lt;ipaddr\u0026gt;[-\u0026lt;ipaddr\u0026gt;][:port-port] \n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003ch2 id=\"63-redirect---将包重定向到本机另一个端口\"\u003e6.3 REDIRECT - 将包重定向到本机另一个端口\u003c/h2\u003e\n\n\u003cp\u003eREDIRECT 是 DNAT 的一个特殊场景。包被重定向到路由器的另一个本地端口，可以实现，\n例如透明代理的功能。和 DNAT 一样，REDIRECT 适用于 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003ePREROUTING\u003c/code\u003e 和 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eOUTPUT\u003c/code\u003e chain\n。\u003c/p\u003e\n\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"c\"\u003e# Options for REDIRECT (abstract of manual page)\u003c/span\u003e\n\u003cspan class=\"nt\"\u003e--to-ports\u003c/span\u003e \u0026lt;port\u0026gt;[-\u0026lt;port\u0026gt;] \n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003ch1 id=\"7-nat-应用-applications\"\u003e7 NAT 应用 (Applications)\u003c/h1\u003e\n\n\u003cp\u003e本文第一个例子（将本地网络连接到公网）的晦涩（cryptic）指令可能让你有些困惑。\n之后我们陆续给了一些命令参数的解释，读者应该比之前理解更清楚了一些。问题可能从“\n人们怎么写出这么晦涩的指令的” 变成了 “好的，我该如何使用这些晦涩的指令呢？”本章\n将给出一些如何使用 NAT 的例子。应用范围并没有限制，但我将尽力涵盖最常见的一些场\n景。\u003c/p\u003e\n\n\u003ch2 id=\"71-透明代理\"\u003e7.1 透明代理\u003c/h2\u003e\n\n\u003cp\u003e假设我们有一个本地网络，通过 NAT 连接到公网。我们需要在路由器的 8080 端口运行\n一个 HTTP 代理，处理本地网络 HTTP 流量。\u003c/p\u003e\n\n\u003cp\u003e首先想到的解决方案是：让每个用户设置他们的浏览器使用代理服务器，然后禁止所有 80\n端口的出流量。对于很小的网络，这种方式可能让人满意，但无法扩展到很大的网络，因为\n这种方式需要对每个客户端进行配置。（也失去了“透明代理”的意义）。\u003c/p\u003e\n\n\u003cp align=\"center\"\u003e\u003cimg src=\"/assets/img/nat-zh/transparent-proxy-en.gif\" width=\"80%\" height=\"80%\"/\u003e\u003c/p\u003e\n\n\u003cp\u003e使用 NAT，我们有另一种可能：所有从 80 端口进来的流量，重定向到 8080 端口。相应\n的命令：\u003c/p\u003e\n\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"c\"\u003e# Transparent proxying:\u003c/span\u003e\n\u003cspan class=\"c\"\u003e# (local net at eth0, proxy server at port 8080)\u003c/span\u003e\n\u003cspan class=\"nv\"\u003e$\u0026gt;\u003c/span\u003e iptables \u003cspan class=\"nt\"\u003e-t\u003c/span\u003e nat \u003cspan class=\"nt\"\u003e-A\u003c/span\u003e PREROUTING \u003cspan class=\"nt\"\u003e-i\u003c/span\u003e eth0 \u003cspan class=\"nt\"\u003e-p\u003c/span\u003e tcp \u003cspan class=\"nt\"\u003e--dport\u003c/span\u003e 80 \u003cspan class=\"se\"\u003e\\\u003c/span\u003e\n   \u003cspan class=\"nt\"\u003e-j\u003c/span\u003e REDIRECT \u003cspan class=\"nt\"\u003e--to-ports\u003c/span\u003e 8080 \n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e当然，8080 端口要有 HTTP 代理运行。另外，你的服务器可能做一些特殊配置（甚至特殊\n编译）才能支持透明代理。\u003c/p\u003e\n\n\u003cp\u003e透明代理的缺点是 CPU load 会升高（尤其是大型网络），对太新或太旧的浏览器可能有兼\n容性问题。\u003c/p\u003e\n\n\u003ch2 id=\"72-绕过防火墙\"\u003e7.2 绕过防火墙\u003c/h2\u003e\n\n\u003cp\u003e在继续本文之前，我首先要发出警告：\u003c/p\u003e\n\n\u003cp\u003e\u003cstrong\u003e每位读者在使用以下提供的技术之前，都需要确认这些步骤是否会破坏你们的现有环境！\n使用如下命令带来的风险是读者自己的，对不当使用以下命令和技术带来的损坏，我不负\n任何责任！\u003c/strong\u003e\u003c/p\u003e\n\n\u003cp\u003e你可能意想不到，NAT 在这种场景下可以派上用场。\u003c/p\u003e\n\n\u003cp\u003e我们假设路由器只有少量端口可以被本地网络访问。\u003c/p\u003e\n\n\u003cp\u003e首先要找到这些已经被打开的（open）端口。一个的常用工具是\n\u003ca href=\"http://insecure.org/nmap/\"\u003enmap\u003c/a\u003e（请只扫描你自己的机器，扫描未知的机器会被认为\n是入侵行为的前奏）。\u003c/p\u003e\n\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"c\"\u003e# Scan a machine:\u003c/span\u003e\n\u003cspan class=\"c\"\u003e# (Replace www.example.com by an appropriate machine)\u003c/span\u003e\n\u003cspan class=\"nv\"\u003e$\u0026gt;\u003c/span\u003e nmap www.example.com\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e以上命令会扫描出很多端口，其中大部分处于 “closed” 状态（该端口上没有服务），另\n外有一部分处于 “filtered” 状态（该端口上没有连接），可能有一些处于 “open” 状态（\n服务正在该端口上运行）。我们假设 5000 以下的端口除了 80 都处于 closed 状态，但是\n5000 以上的端口有\n可达的。\u003c/p\u003e\n\n\u003cp\u003e为了实现可以连接任意外网机器的 5000 以下的任意端口，需要一个位于防火墙之前的机器\n（称为跳板机，位置没有关系，只要网络可达，并且它自己没有被防火墙限制），它要能被\n访问，并且支持 NAT （iptables）。假设这台机器 IP 为 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003e111.111.111.111\u003c/code\u003e。\u003c/p\u003e\n\n\u003ch3 id=\"721-配置内网机器可以-ssh-到跳板机\"\u003e7.2.1 配置内网机器可以 SSH 到跳板机\u003c/h3\u003e\n\n\u003cp\u003e首先需要 SSH 登录到 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003e111.111.111.111\u003c/code\u003e（由于防火墙限制 5000 以下端口，SSH 端口默\n认是 22，因此需要在防火墙外面找机器才能登录）。然后在 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003e111.111.111.111\u003c/code\u003e 上执行：\u003c/p\u003e\n\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"c\"\u003e# Redirect SSH from port 5000 to port 22:\u003c/span\u003e\n\u003cspan class=\"nv\"\u003e$\u0026gt;\u003c/span\u003e iptables \u003cspan class=\"nt\"\u003e-t\u003c/span\u003e nat \u003cspan class=\"nt\"\u003e-A\u003c/span\u003e PREROUTING \u003cspan class=\"nt\"\u003e-p\u003c/span\u003e tcp \u003cspan class=\"nt\"\u003e--dport\u003c/span\u003e 5000 \u003cspan class=\"nt\"\u003e-j\u003c/span\u003e REDIRECT \u003cspan class=\"nt\"\u003e--to-ports\u003c/span\u003e 22\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e这个命令做的事情就是，将 5000 端口 进来的流量重定向到本机的 22 端口（SSH）。\u003c/p\u003e\n\n\u003cp\u003e然后，我们在防火墙内的机器上，就可以通过 5000 端口用 SSH 访问工作站了，工作站会\n将请求转向 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003e111.111.111.111\u003c/code\u003e 的 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003e22\u003c/code\u003e 端口。\u003c/p\u003e\n\n\u003cp\u003e或者，你也可以配置 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003e111.111.111.111\u003c/code\u003e 的 SSH 进程直接运行在 5000 端口，这样就不需\n要以上 iptables 规则了。\u003c/p\u003e\n\n\u003ch3 id=\"722-通过跳板机从内网连接到公网举例邮件服务器-pop3\"\u003e7.2.2 通过跳板机从内网连接到公网举例：邮件服务器 POP3\u003c/h3\u003e\n\n\u003cp\u003e现在，你可以在跳板机 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003e111.111.111.111\u003c/code\u003e 上配置连接其他机器或服务（运行在其他端口\n）的 NAT 规则来。\u003c/p\u003e\n\n\u003cp\u003e例如，通过跳板机的 5001 端口连接机器 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003e123.123.123.123\u003c/code\u003e 的 110 （POP3）端口，执行：\u003c/p\u003e\n\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"c\"\u003e# redirect port 5001 to port 110 (POP3) at 123.123.123.123:\u003c/span\u003e\n\u003cspan class=\"nv\"\u003e$\u0026gt;\u003c/span\u003e iptables \u003cspan class=\"nt\"\u003e-t\u003c/span\u003e nat \u003cspan class=\"nt\"\u003e-A\u003c/span\u003e PREROUTING \u003cspan class=\"nt\"\u003e-p\u003c/span\u003e tcp \u003cspan class=\"nt\"\u003e--dport\u003c/span\u003e 5001 \u003cspan class=\"se\"\u003e\\\u003c/span\u003e\n   \u003cspan class=\"nt\"\u003e-j\u003c/span\u003e DNAT \u003cspan class=\"nt\"\u003e--to-destination\u003c/span\u003e 123.123.123.123:110\n   \n\u003cspan class=\"c\"\u003e# Change sender to redirecting machine:\u003c/span\u003e\n\u003cspan class=\"nv\"\u003e$\u0026gt;\u003c/span\u003e iptables \u003cspan class=\"nt\"\u003e-t\u003c/span\u003e nat \u003cspan class=\"nt\"\u003e-A\u003c/span\u003e POSTROUTING \u003cspan class=\"nt\"\u003e-p\u003c/span\u003e tcp \u003cspan class=\"nt\"\u003e--dport\u003c/span\u003e 110 \u003cspan class=\"se\"\u003e\\\u003c/span\u003e\n   \u003cspan class=\"nt\"\u003e-j\u003c/span\u003e MASQUERADE\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp align=\"center\"\u003e\u003cimg src=\"/assets/img/nat-zh/port110-en.gif\" width=\"60%\" height=\"60%\"/\u003e\u003c/p\u003e\n\n\u003cp\u003e这里用的是 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eMASQUERADE\u003c/code\u003e，但用 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eSNAT\u003c/code\u003e 也是可以的（\u003ccode class=\"language-plaintext highlighter-rouge\"\u003e-j SNAT --to-source\n111.111.111.111\u003c/code\u003e）。\u003c/p\u003e\n\n\u003cp\u003e用同样的方式，我们可以（从内网）连接到（外网机器的）其他端口，只要跳板机上的可用\n端口足够多。即使是安全连接（例如 IMAPS）也可以这样操作，但需要忽略安全证书的警告\n（只要我们知道自己在做什么）。对于上面的 POP3 例子，你还需要配置你的邮件客户端，\n将服务器地址设置为 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003e111.111.111.111\u003c/code\u003e，端口为 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003e5001\u003c/code\u003e。\u003c/p\u003e\n\n\u003ch3 id=\"723-通过跳板机绕过-http-监控\"\u003e7.2.3 通过跳板机绕过 HTTP 监控\u003c/h3\u003e\n\n\u003cp\u003e假设网络供应商为 80 端口的所有连接设置了代理（例如，透明代理），然后监控所有的网络\n流量（内容），我们使用 NAT 可以绕过它。\u003c/p\u003e\n\n\u003cp\u003e和上面类似，在跳板机上寻找一个可用端口，例如 5002，做透明代理。\u003c/p\u003e\n\n\u003cp\u003e然后，在你自己的（内网）机器上，执行：\u003c/p\u003e\n\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"c\"\u003e# redirect http-Traffic going to Port 80 to 111.111.111.111:5002:\u003c/span\u003e\n\u003cspan class=\"nv\"\u003e$\u0026gt;\u003c/span\u003e iptables \u003cspan class=\"nt\"\u003e-t\u003c/span\u003e nat \u003cspan class=\"nt\"\u003e-A\u003c/span\u003e OUTPUT \u003cspan class=\"nt\"\u003e-p\u003c/span\u003e tcp \u003cspan class=\"nt\"\u003e--dport\u003c/span\u003e 80 \u003cspan class=\"se\"\u003e\\\u003c/span\u003e\n   \u003cspan class=\"nt\"\u003e-j\u003c/span\u003e DNAT \u003cspan class=\"nt\"\u003e--to-destination\u003c/span\u003e 111.111.111.111:5002\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e这样就成功绕过了供应商的代理（我们使用透明代理绕过了供应商的透明代理！）。\u003c/p\u003e\n\n\u003cp\u003e或者，不需要 iptables 规则，你可以设置浏览器的默认端口是 5002，但是这可能有一些\n潜在的问题。\u003c/p\u003e\n\n\u003cp\u003e总结本节的透明代理方案步骤：\u003c/p\u003e\n\n\u003col\u003e\n  \u003cli\u003e首先找到找到一个可用端口，可以让内网机器和跳板机建立 SSH 连接\u003c/li\u003e\n  \u003cli\u003e静态地将可用端口重定向到期望的地址（大部分情况下都是 HTTP 服务）\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003cp\u003e如果想实现动态重定向，那两个 TCP 端口（其中一个用于 SSH）和一个 UDP 端口足够了，\n据此可以实现从内网机器连接到任意外网机器的任意端口，唯一的不足是每次只能有一个连\n接（每种协议）。\u003c/p\u003e\n\n\u003ch2 id=\"73-通过-nat-从外网访问内网服务\"\u003e7.3 通过 NAT 从外网访问内网服务\u003c/h2\u003e\n\n\u003cp\u003e运行在 NAT 路由器后面的内网服务器，默认是不能被外部网络直接访问的。例如，假设我\n们有一个 HTTP 服务运行在内网机器 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003e192.168.1.2\u003c/code\u003e，NAT 路由器的地址是 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003e192.168.1.1\u003c/code\u003e\n，并通过另一张有公网 IP \u003ccode class=\"language-plaintext highlighter-rouge\"\u003e123.123.123.123\u003c/code\u003e 的网卡连接到了外部网络。\u003c/p\u003e\n\n\u003cp\u003e要使得外网机器可以访问 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003e192.168.1.2\u003c/code\u003e 的服务，需要执行：\u003c/p\u003e\n\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"c\"\u003e# redirect http traffic to 192.168.1.2:\u003c/span\u003e\n\u003cspan class=\"nv\"\u003e$\u0026gt;\u003c/span\u003e iptables \u003cspan class=\"nt\"\u003e-t\u003c/span\u003e nat \u003cspan class=\"nt\"\u003e-A\u003c/span\u003e PREROUTING \u003cspan class=\"nt\"\u003e-p\u003c/span\u003e tcp \u003cspan class=\"nt\"\u003e-i\u003c/span\u003e eth1 \u003cspan class=\"nt\"\u003e--dport\u003c/span\u003e 80 \u003cspan class=\"nt\"\u003e-j\u003c/span\u003e DNAT \u003cspan class=\"nt\"\u003e--to\u003c/span\u003e 192.168.1.2\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e然后，就可以通过公网 IP \u003ccode class=\"language-plaintext highlighter-rouge\"\u003e123.123.123.123\u003c/code\u003e 的 80 端口访问 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003e192.168.1.2\u003c/code\u003e 的 HTTP\n服务了。\u003c/p\u003e\n\n\u003ch1 id=\"8-相关文章\"\u003e8 相关文章\u003c/h1\u003e\n\n\u003cp\u003e类似的文章：\u003c/p\u003e\n\n\u003col\u003e\n  \u003cli\u003e\u003ca href=\"http://iptables-tutorial.frozentux.net/iptables-tutorial.html\"\u003ehttp://iptables-tutorial.frozentux.net/iptables-tutorial.html\u003c/a\u003e, 非常详细的关于 iptables 的文章\u003c/li\u003e\n  \u003cli\u003e\u003ca href=\"http://www.faqs.org/docs/Linux-mini/TransparentProxy.html\"\u003ehttp://www.faqs.org/docs/Linux-mini/TransparentProxy.html\u003c/a\u003e, 关于透明代理更深入的介绍\u003c/li\u003e\n  \u003cli\u003e\u003ca href=\"http://www.barryodonovan.com/publications/lg/108/\"\u003ehttp://www.barryodonovan.com/publications/lg/108/\u003c/a\u003e, netfilter extension 来实现更多的功能\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003ch1 id=\"9-结束语致谢及其他\"\u003e9 结束语，致谢及其他\u003c/h1\u003e\n\n\u003cp\u003enetfilter 框架非常强大，而且一旦熟悉其语法后，配置还是比较简单的。基于\niptables/netfilter\n可以完成很多功能，虽然一些命令看起来可能比较晦涩，但拿几个例子稍加训练之后，你就\n会发现它们都符合特定的模式，可以用于快速简单的管理。\u003c/p\u003e\n\n\u003cp\u003e感谢每一位能读到这里的耐心读者 :-) 另外我还要感谢我的运行 SUSE 10.1 的笔记本，没\n有在写作本文的时候挂掉。\u003c/p\u003e\n\n\u003cp\u003e我的母语不是英语，因此如果读者能指出本文措辞语句的一些可改进之处，我将非常高兴。\n\u003ca href=\"https://www.karlrupp.net/en/computer/nat_tutorial\"\u003e这里\u003c/a\u003e\n（见原文，这里不贴是防止给原作者带去潜在的垃圾邮件，事实上原作者贴的是图片而不是\n文本，也应该有此考虑）是我的联系邮箱。\u003c/p\u003e\n\n\n  \u003c!-- POST NAVIGATION --\u003e\n  \u003cdiv class=\"postNav clearfix\"\u003e\n     \n      \u003ca class=\"prev\" href=\"/blog/cilium-code-cni-create-network/\"\u003e\u003cspan\u003e« Cilium Code Walk Through: CNI Create Network\u003c/span\u003e\n      \n    \u003c/a\u003e\n      \n      \n      \u003ca class=\"next\" href=\"/blog/deep-dive-into-iptables-and-netfilter-arch-zh/\"\u003e\u003cspan\u003e[译] 深入理解 iptables 和 netfilter 架构 »\u003c/span\u003e\n       \n      \u003c/a\u003e\n     \n  \u003c/div\u003e\n\u003c/div\u003e",
  "Date": "2019-02-17T00:00:00Z",
  "Author": "Arthur Chiao"
}