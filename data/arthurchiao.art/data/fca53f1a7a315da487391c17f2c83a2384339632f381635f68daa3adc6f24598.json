{
  "Source": "arthurchiao.art",
  "Title": "DNS 问题分析示例（2019）",
  "Link": "https://arthurchiao.art/blog/dns-practice-zh/",
  "Content": "\u003cdiv class=\"post\"\u003e\n  \n  \u003ch1 class=\"postTitle\"\u003eDNS 问题分析示例（2019）\u003c/h1\u003e\n  \u003cp class=\"meta\"\u003ePublished at 2018-12-16 | Last Update 2019-05-05\u003c/p\u003e\n  \n  \u003ch2 id=\"1-dns-基础知识\"\u003e1 DNS 基础知识\u003c/h2\u003e\n\n\u003cp\u003e互联网基于 TCP/IP 协议。为了方便管理网络内的主机，整个互联网分为若干个\u003ca href=\"https://en.wikipedia.org/wiki/Domain_name\"\u003e域\n\u003c/a\u003e（domain），每\n个域又可以再分为若干个子域，例如，\u003ccode class=\"language-plaintext highlighter-rouge\"\u003e.com\u003c/code\u003e，\u003ccode class=\"language-plaintext highlighter-rouge\"\u003e.org\u003c/code\u003e，\u003ccode class=\"language-plaintext highlighter-rouge\"\u003e.edu\u003c/code\u003e 都是顶级域，而\n\u003ccode class=\"language-plaintext highlighter-rouge\"\u003egoogle.com\u003c/code\u003e 是\u003ccode class=\"language-plaintext highlighter-rouge\"\u003e.com\u003c/code\u003e 下面的子域。\u003c/p\u003e\n\n\u003cp\u003e网络中的任意一台主机（host）都会属于某个域，并且有自己的名字，称为主机名（\nhostname）。例如 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eexample.com\u003c/code\u003e 就是\u003ccode class=\"language-plaintext highlighter-rouge\"\u003e.com\u003c/code\u003e 域中一台主机名为 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eexample.com\u003c/code\u003e（或\n\u003ccode class=\"language-plaintext highlighter-rouge\"\u003eexample\u003c/code\u003e，hostname 和 domain name 的区别，见\u003ca href=\"https://en.wikipedia.org/wiki/Domain_name\"\u003e这里\n\u003c/a\u003e）的主机。\u003c/p\u003e\n\n\u003cp\u003e域名/主机名是为了方便人记忆，而机器之间通信最终用的还是 IP 地址，因此需要一个将主\n机名（域名）转换成 IP 地址的服务。域名服务系统（DNS, domain name system）做的就是\n这个事情，对应的服务器称为域名服务器（Domain Name Server）。\u003c/p\u003e\n\n\u003cp\u003e例如，当通过浏览器访问\u003ca href=\"example.com\"\u003eexample.com\u003c/a\u003e，浏览器会首先访问 DNS 服务器，查找\n\u003ccode class=\"language-plaintext highlighter-rouge\"\u003eexample.com\u003c/code\u003e 对应的 IP 地址，然后和这个 IP 建立 TCP 连接，接下来才发起 HTTP 请求。\u003c/p\u003e\n\n\u003cp\u003e一个域名可以对应一个 IP 地址，也可以对应多个。对于后者，DNS 服务算法会从中选择一个\n地址返回。大部分网络服务为了实现高可用，都是对应多个地址，我们后面会看到，\nbaidu.com 就对应多个 IP。\u003c/p\u003e\n\n\u003cp\u003e有一些场景会导致访问 DNS 服务不稳定，例如 DNS 服务器的设置有问题、网络有丢包、主机\nDNS 配置错误等等。我们接下来查看几种 case。\u003c/p\u003e\n\n\u003ch2 id=\"2-准备测试环境\"\u003e2 准备测试环境\u003c/h2\u003e\n\n\u003cp\u003e为方便大家跟着上手练习，本文将搭建一个容器环境。\u003c/p\u003e\n\n\u003cp\u003ePull Docker 镜像:\u003c/p\u003e\n\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003e$ \u003c/span\u003e\u003cspan class=\"nb\"\u003esudo \u003c/span\u003edocker pull alpine:3.8\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e运行容器，注意这里一定要带\u003ccode class=\"language-plaintext highlighter-rouge\"\u003e--privileged\u003c/code\u003e 参数 [2]，否则后面的部分 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003etc\u003c/code\u003e 命令无法执行:\u003c/p\u003e\n\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003e$ \u003c/span\u003e\u003cspan class=\"nb\"\u003esudo \u003c/span\u003edocker run \u003cspan class=\"nt\"\u003e-d\u003c/span\u003e \u003cspan class=\"nt\"\u003e--privileged\u003c/span\u003e \u003cspan class=\"nt\"\u003e--name\u003c/span\u003e ctn-1 alpine:3.8 \u003cspan class=\"nb\"\u003esleep \u003c/span\u003e3600d\n\u003cspan class=\"nv\"\u003e$ \u003c/span\u003e\u003cspan class=\"nb\"\u003esudo \u003c/span\u003edocker ps\nCONTAINER ID    IMAGE        COMMAND         CREATED        STATUS          PORTS  NAMES\n233bc36bde4b    alpine:3.8   \u003cspan class=\"s2\"\u003e\u0026#34;sleep 3600d\u0026#34;\u003c/span\u003e   1 minutes ago  Up 14 minutes           ctn-1\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e进入容器：\u003c/p\u003e\n\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003e$ \u003c/span\u003e\u003cspan class=\"nb\"\u003esudo \u003c/span\u003edocker \u003cspan class=\"nb\"\u003eexec\u003c/span\u003e \u003cspan class=\"nt\"\u003e-it\u003c/span\u003e ctn-1 sh\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e查看容器网络信息：\u003c/p\u003e\n\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e/ \u003cspan class=\"c\"\u003e# ifconfig\u003c/span\u003e\neth0      Link encap:Ethernet  HWaddr 02:42:AC:11:00:09\n          inet addr:172.17.0.9  Bcast:0.0.0.0  Mask:255.255.0.0\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003ch2 id=\"3-dns-配置\"\u003e3 DNS 配置\u003c/h2\u003e\n\n\u003ch3 id=\"31-查看-dns-配置\"\u003e3.1 查看 DNS 配置\u003c/h3\u003e\n\n\u003cp\u003eLinux 上的 DNS 配置在\u003ccode class=\"language-plaintext highlighter-rouge\"\u003e/etc/resolv.conf\u003c/code\u003e 里面。我们先来查看容器的配置：\u003c/p\u003e\n\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e/ \u003cspan class=\"c\"\u003e# cat /etc/resolv.conf\u003c/span\u003e\n\u003cspan class=\"c\"\u003e# Dynamic resolv.conf(5) file for glibc resolver(3) generated by resolvconf(8)\u003c/span\u003e\n\u003cspan class=\"c\"\u003e#     DO NOT EDIT THIS FILE BY HAND -- YOUR CHANGES WILL BE OVERWRITTEN\u003c/span\u003e\nnameserver 192.168.1.11\nnameserver 192.168.1.12\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e这其实是继承了宿主机的 DNS 配置，在宿主机上执行 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003ecat /etc/resolv.conf\u003c/code\u003e 会看到一样的\n结果。\u003c/p\u003e\n\n\u003ch3 id=\"32-修改-dns-配置\"\u003e3.2 修改 DNS 配置\u003c/h3\u003e\n\n\u003cp\u003e可以通过修改\u003ccode class=\"language-plaintext highlighter-rouge\"\u003e/etc/resolv.conf\u003c/code\u003e 里面的 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003enameserver\u003c/code\u003e\n来配置自己想用的 DNS 服务器。例如内网环境可能都会使用自己的 DNS 服务器，因为它除了\n提供内网域名解析之外，公网域名解析也会比较快（相比于网络供应商的公网 DNS 服务器）\n。\u003c/p\u003e\n\n\u003ch2 id=\"4-dns-问题排查\"\u003e4 DNS 问题排查\u003c/h2\u003e\n\n\u003cp\u003e本节模拟几种导致 DNS 查询变慢的场景，如果在实际环境中遇到类似现象，可以考虑往这些\n方向排查。\u003c/p\u003e\n\n\u003ch3 id=\"41-机器未配置-dns-导致域名查找失败\"\u003e4.1 机器未配置 DNS 导致域名查找失败\u003c/h3\u003e\n\n\u003cul\u003e\n  \u003cli\u003e\u003cstrong\u003e现象\u003c/strong\u003e：网络是通的（例如 ping IP 通），但是 DNS 查询总是失败\u003c/li\u003e\n  \u003cli\u003e\u003cstrong\u003e可能的原因\u003c/strong\u003e：机器没有配置 DNS 服务器\u003c/li\u003e\n  \u003cli\u003e\u003cstrong\u003e解决办法\u003c/strong\u003e：修改\u003ccode class=\"language-plaintext highlighter-rouge\"\u003e/etc/resolv.conf\u003c/code\u003e，给机器配置合适的 DNS 服务器\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003e有时新启动的机器（不管是物理机、虚拟机还是容器）没有设置 DNS，导致访问域名不通。\n我们来复现一下。\u003c/p\u003e\n\n\u003cp\u003e在正常的容器里用 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003enslookup\u003c/code\u003e 工具查看域名对应的 IP 地址：\u003c/p\u003e\n\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e/ \u003cspan class=\"c\"\u003e# nslookup example.com\u003c/span\u003e\n\nName:      example.com\nAddress 1: 93.184.216.34\nAddress 2: 2606:2800:220:1:248:1893:25c8:1946\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e可以看到，我们获取到了该域名一个 IPv4 地址和一个 IPv6 地址。\u003c/p\u003e\n\n\u003cp\u003e将\u003ccode class=\"language-plaintext highlighter-rouge\"\u003e/etc/resolv.conf\u003c/code\u003e 里的 DNS 服务器列表用\u003ccode class=\"language-plaintext highlighter-rouge\"\u003e#\u003c/code\u003e注释掉，模拟没有配置 DNS 服务器的场景。\u003c/p\u003e\n\n\u003cp\u003e再次测试：\u003c/p\u003e\n\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e/ \u003cspan class=\"c\"\u003e# nslookup example.com\u003c/span\u003e\n\nnslookup: can\u003cspan class=\"s1\"\u003e\u0026#39;t resolve \u0026#39;\u003c/span\u003eexample.com\u003cspan class=\"s1\"\u003e\u0026#39;: Try again\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e所以遇到这种问题，可以先去排查\u003ccode class=\"language-plaintext highlighter-rouge\"\u003e/etc/resolv.conf\u003c/code\u003e 里面是否配置了 DNS 服务器。\u003c/p\u003e\n\n\u003ch3 id=\"42-dns-服务太慢\"\u003e4.2 DNS 服务太慢\u003c/h3\u003e\n\n\u003cul\u003e\n  \u003cli\u003e\u003cstrong\u003e现象\u003c/strong\u003e：DNS 查询太慢\u003c/li\u003e\n  \u003cli\u003e\u003cstrong\u003e可能的原因\u003c/strong\u003e：配置的 DNS 服务器不合理\u003c/li\u003e\n  \u003cli\u003e\u003cstrong\u003e解决办法\u003c/strong\u003e：修改\u003ccode class=\"language-plaintext highlighter-rouge\"\u003e/etc/resolv.conf\u003c/code\u003e，配置合适的 DNS 服务器\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003e每个公司一般都有自维护的 DNS 服务器，不仅用来解析内网 DNS，而且可以加速解析公网域名\n。\u003c/p\u003e\n\n\u003cp\u003e\u003ccode class=\"language-plaintext highlighter-rouge\"\u003edig\u003c/code\u003e 是另外一个功能更强大的 DNS 查询工具，安装：\u003c/p\u003e\n\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e/ \u003cspan class=\"c\"\u003e# apk update \u0026amp;\u0026amp; apk add bind-tools\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e首先查看使用内网 DNS，查询域名的延迟：\u003c/p\u003e\n\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e/ \u003cspan class=\"c\"\u003e# dig example.com\u003c/span\u003e\n...\nexample.com.            15814   IN      A       93.184.216.34\n\n\u003cspan class=\"p\"\u003e;;\u003c/span\u003e Query \u003cspan class=\"nb\"\u003etime\u003c/span\u003e: 0 msec\n\u003cspan class=\"p\"\u003e;;\u003c/span\u003e SERVER: 192.168.1.11#53\u003cspan class=\"o\"\u003e(\u003c/span\u003e192.168.1.11\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e可以看到非常快，在 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003e1ms\u003c/code\u003e 以内。\u003c/p\u003e\n\n\u003cp\u003e然后我们测试如果使用 Google 的公网 DNS 服务器 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003e8.8.8.8\u003c/code\u003e [1]，延迟会是多少。\u003c/p\u003e\n\n\u003cp\u003e修改\u003ccode class=\"language-plaintext highlighter-rouge\"\u003e/etc/resolv.conf\u003c/code\u003e，将其他 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003enameserver\u003c/code\u003e 注释掉，添加一行 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003enameserver 8.8.8.8\u003c/code\u003e。\u003c/p\u003e\n\n\u003cp\u003e再次测试：\u003c/p\u003e\n\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e/ \u003cspan class=\"c\"\u003e# dig example.com\u003c/span\u003e\n...\nexample.com.            15814   IN      A       93.184.216.34\n\n\u003cspan class=\"p\"\u003e;;\u003c/span\u003e Query \u003cspan class=\"nb\"\u003etime\u003c/span\u003e: 150 msec\n\u003cspan class=\"p\"\u003e;;\u003c/span\u003e SERVER: 8.8.8.8#53\u003cspan class=\"o\"\u003e(\u003c/span\u003e8.8.8.8\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e延迟变成了 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003e150ms\u003c/code\u003e，比原来大了 150 多倍。\u003c/p\u003e\n\n\u003cp\u003e因此，对于 DNS 查询特别慢的场景，首先要查看配置的 DNS 服务器是否合理。\u003c/p\u003e\n\n\u003ch3 id=\"43-hardcode-etchosts-导致跳过-dns-查询\"\u003e4.3 hardcode \u003ccode class=\"language-plaintext highlighter-rouge\"\u003e/etc/hosts\u003c/code\u003e 导致跳过 DNS 查询\u003c/h3\u003e\n\n\u003cul\u003e\n  \u003cli\u003e\u003cstrong\u003e现象\u003c/strong\u003e：某域名访问太慢、某域名总是指向相同 IP（多 IP 情况下）、特定机器不可访问\n某域名等等\u003c/li\u003e\n  \u003cli\u003e\u003cstrong\u003e可能的原因\u003c/strong\u003e：\u003ccode class=\"language-plaintext highlighter-rouge\"\u003e/etc/hosts\u003c/code\u003e 有 hardcode 域名及 IP\u003c/li\u003e\n  \u003cli\u003e\u003cstrong\u003e解决办法\u003c/strong\u003e：修改\u003ccode class=\"language-plaintext highlighter-rouge\"\u003e/etc/hosts\u003c/code\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003e前面提到，大部分公网域名都对应多个 IP 地址，因此每次 DNS 查询拿到的 IP 地址都可能不一\n样，我们用 ping 来测试一下：\u003c/p\u003e\n\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e/ \u003cspan class=\"c\"\u003e# ping baidu.com\u003c/span\u003e\nPING baidu.com \u003cspan class=\"o\"\u003e(\u003c/span\u003e220.181.57.216\u003cspan class=\"o\"\u003e)\u003c/span\u003e: 56 data bytes\n64 bytes from 220.181.57.216: \u003cspan class=\"nb\"\u003eseq\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e0 \u003cspan class=\"nv\"\u003ettl\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e45 \u003cspan class=\"nb\"\u003etime\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e26.895 ms\n64 bytes from 220.181.57.216: \u003cspan class=\"nb\"\u003eseq\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e1 \u003cspan class=\"nv\"\u003ettl\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e45 \u003cspan class=\"nb\"\u003etime\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e26.701 ms\n^C\n\n/ \u003cspan class=\"c\"\u003e# ping baidu.com\u003c/span\u003e\nPING baidu.com \u003cspan class=\"o\"\u003e(\u003c/span\u003e123.125.115.110\u003cspan class=\"o\"\u003e)\u003c/span\u003e: 56 data bytes\n64 bytes from 123.125.115.110: \u003cspan class=\"nb\"\u003eseq\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e0 \u003cspan class=\"nv\"\u003ettl\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e43 \u003cspan class=\"nb\"\u003etime\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e27.587 ms\n64 bytes from 123.125.115.110: \u003cspan class=\"nb\"\u003eseq\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e1 \u003cspan class=\"nv\"\u003ettl\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e43 \u003cspan class=\"nb\"\u003etime\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e27.757 ms\n^C\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e可以看到，两次 ping 测试（内部首先查询 baidu.com 对应的 IP 地址）拿到的 IP 地址是不一样\n的。用 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003enslookup\u003c/code\u003e 可以看到它们都是 baidu.com 对应的 IP 地址：\u003c/p\u003e\n\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e/ \u003cspan class=\"c\"\u003e# nslookup baidu.com\u003c/span\u003e\nName:   baidu.com\nAddress: 220.181.57.216\nName:   baidu.com\nAddress: 123.125.115.110\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e\u003ccode class=\"language-plaintext highlighter-rouge\"\u003e/etc/hosts\u003c/code\u003e\n里面可以直接 harcode 一个域名对应的 IP 地址，这会导致机器跳过 DNS 查询，直接拿这个 IP 作\n为该域名的 IP。我们来验证一下。\u003c/p\u003e\n\n\u003cp\u003e修改\u003ccode class=\"language-plaintext highlighter-rouge\"\u003e/etc/hosts\u003c/code\u003e，添加一行 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003e123.125.115.110 baidu.com\u003c/code\u003e，再次 ping 测试\u003c/p\u003e\n\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e/ \u003cspan class=\"c\"\u003e# ping baidu.com\u003c/span\u003e\nPING baidu.com \u003cspan class=\"o\"\u003e(\u003c/span\u003e123.125.115.110\u003cspan class=\"o\"\u003e)\u003c/span\u003e: 56 data bytes\n64 bytes from 123.125.115.110: \u003cspan class=\"nb\"\u003eseq\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e0 \u003cspan class=\"nv\"\u003ettl\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e43 \u003cspan class=\"nb\"\u003etime\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e27.861 ms\n^C\n\u003cspan class=\"nt\"\u003e---\u003c/span\u003e baidu.com ping statistics \u003cspan class=\"nt\"\u003e---\u003c/span\u003e\n1 packets transmitted, 1 packets received, 0% packet loss\nround-trip min/avg/max \u003cspan class=\"o\"\u003e=\u003c/span\u003e 27.861/27.861/27.861 ms\n/ \u003cspan class=\"c\"\u003e# ping baidu.com\u003c/span\u003e\nPING baidu.com \u003cspan class=\"o\"\u003e(\u003c/span\u003e123.125.115.110\u003cspan class=\"o\"\u003e)\u003c/span\u003e: 56 data bytes\n64 bytes from 123.125.115.110: \u003cspan class=\"nb\"\u003eseq\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e0 \u003cspan class=\"nv\"\u003ettl\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e43 \u003cspan class=\"nb\"\u003etime\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e27.614 ms\n^C\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e这是不管执行多少次，baidu.com\n对应的 IP 地址都不会变了。而实际上，这个 IP 地址并不一定是最优的 IP 地址，甚至有可能这\n个 IP 不可用，导致访问 baidu.com 失败。因此，实际中要极力避免在\u003ccode class=\"language-plaintext highlighter-rouge\"\u003e/etc/hosts\u003c/code\u003e 中\nhardcode。\u003c/p\u003e\n\n\u003ch3 id=\"44-dns-查询不稳定\"\u003e4.4 DNS 查询不稳定\u003c/h3\u003e\n\n\u003cul\u003e\n  \u003cli\u003e\u003cstrong\u003e现象\u003c/strong\u003e：DNS 查询不稳定，时快时慢\u003c/li\u003e\n  \u003cli\u003e\u003cstrong\u003e可能的原因\u003c/strong\u003e：机器上有 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003etc\u003c/code\u003e 或 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eiptables\u003c/code\u003e 规则，导致到 DNS 服务器的 packet 变慢或丢\n失\u003c/li\u003e\n  \u003cli\u003e\u003cstrong\u003e解决办法\u003c/strong\u003e：修改或删除 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003etc\u003c/code\u003e/\u003ccode class=\"language-plaintext highlighter-rouge\"\u003eiptables\u003c/code\u003e 规则\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003e我们用 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003etc\u003c/code\u003e 来模拟网络延迟：\u003c/p\u003e\n\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e/ \u003cspan class=\"c\"\u003e# apk add iproute2\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e首先查看有没有 tc 规则：\u003c/p\u003e\n\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e/ \u003cspan class=\"c\"\u003e# tc -p qdisc ls dev eth0\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e默认没有任何规则。\u003c/p\u003e\n\n\u003cp\u003e然后我们加一条：每个 packet 延迟 600ms：\u003c/p\u003e\n\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e/ \u003cspan class=\"c\"\u003e# tc qdisc add dev eth0 root netem delay 600ms\u003c/span\u003e\n\n/ \u003cspan class=\"c\"\u003e# tc -p qdisc ls dev eth0\u003c/span\u003e\n/ \u003cspan class=\"c\"\u003e# qdisc netem 8001: root refcnt 2 limit 1000 delay 600.0ms\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e测试：\u003c/p\u003e\n\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e/ \u003cspan class=\"c\"\u003e# dig example.com\u003c/span\u003e\n...\nexample.com.            15814   IN      A       93.184.216.34\n\n\u003cspan class=\"p\"\u003e;;\u003c/span\u003e Query \u003cspan class=\"nb\"\u003etime\u003c/span\u003e: 600 msec\n\u003cspan class=\"p\"\u003e;;\u003c/span\u003e SERVER: 192.168.1.11#53\u003cspan class=\"o\"\u003e(\u003c/span\u003e192.168.1.11\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e可以看到，DNS 查询变成了 600ms。\u003c/p\u003e\n\n\u003cp\u003e这里我们测试的是\u003cstrong\u003e固定\u003c/strong\u003e延迟，这种问题很容易发现。我们还可以测试随机延迟，或者按\n比例延迟等 [2]：\u003c/p\u003e\n\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e/ \u003cspan class=\"c\"\u003e# tc qdisc change dev eth0 root netem delay 600ms 10ms 25%\u003c/span\u003e\n/ \u003cspan class=\"c\"\u003e# tc qdisc change dev eth0 root netem delay 600ms 20ms distribution normal\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e此类规则会导致 DNS 查询速度更有随机性。\u003c/p\u003e\n\n\u003cp\u003e最后删除 tc 规则：\u003c/p\u003e\n\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e/ \u003cspan class=\"c\"\u003e# tc qdisc del dev eth0 root\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e\u003ccode class=\"language-plaintext highlighter-rouge\"\u003eiptables\u003c/code\u003e 规则也会导致类似的问题。\u003c/p\u003e\n\n\u003cp\u003e很多软件在运行之后，会在宿主机上添加 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003etc\u003c/code\u003e 或 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eiptables\u003c/code\u003e 规则，例如 OpenStack，K8S 等等\n。因此遇到这种随机延迟问题，首先可以查看机器上是否有 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003etc\u003c/code\u003e 或 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eiptables\u003c/code\u003e 规则。\u003c/p\u003e\n\n\u003ch3 id=\"45-dns-反向查询不稳定\"\u003e4.5 DNS 反向查询不稳定\u003c/h3\u003e\n\n\u003cp\u003e线上遇到过这样一个问题：从一台机器 ping 一个内网域名，每个 ping 包看起来都会卡 5～30s\n不等，但是 CTL-C 关闭 ping 之后，打印出来的统计信息里，既没有丢包，ping 的延迟也很低\n（毫秒级），这就很奇怪。接下来：\u003c/p\u003e\n\n\u003col\u003e\n  \u003cli\u003e\u003ccode class=\"language-plaintext highlighter-rouge\"\u003edig \u0026lt;URL\u0026gt;\u003c/code\u003e，很快，毫秒级，说明 DNS 查询没有问题\u003c/li\u003e\n  \u003cli\u003e\u003ccode class=\"language-plaintext highlighter-rouge\"\u003edig\u003c/code\u003e 能看到域名对应的 IP，直接 ping 这个 IP，发现是没有卡顿的\u003c/li\u003e\n  \u003cli\u003e仍然 ping 域名，用 tcpdump 抓包，\u003ccode class=\"language-plaintext highlighter-rouge\"\u003etcpdump -i eth0 host \u0026lt;URL\u0026gt; and icmp\u003c/code\u003e，发现 ping\n包都是立即响应的，印证了统计信息里，ping 延迟很低的事实\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003cp\u003e根据以上信息，说明 ping 卡顿的问题出在这台机器，而且应该就是 ping 程序本身在做什么耗\n时的操作。继续：\u003c/p\u003e\n\n\u003col\u003e\n  \u003cli\u003e仍然 ping 域名，同时，用 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eltrace -p \u0026lt;PID\u0026gt;\u003c/code\u003e跟踪 ping 进程，发现卡在一个叫\n\u003ccode class=\"language-plaintext highlighter-rouge\"\u003egethostbyaddr()\u003c/code\u003e的函数\u003c/li\u003e\n  \u003cli\u003e查阅文档，发现这个函数是根据 IP 反向查询 hostname，需要和 DNS 交互\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003cp\u003e到这里，基本确定了是 DNS 服务器反向查询的问题，我们用另外几个命令行工具验证一下，\n以下三个命令都是根据 IP 反查 hostname：\u003c/p\u003e\n\n\u003col\u003e\n  \u003cli\u003e\u003ccode class=\"language-plaintext highlighter-rouge\"\u003enslookup \u0026lt;IP\u0026gt;\u003c/code\u003e\u003c/li\u003e\n  \u003cli\u003e\u003ccode class=\"language-plaintext highlighter-rouge\"\u003ehost \u0026lt;IP\u0026gt;\u003c/code\u003e\u003c/li\u003e\n  \u003cli\u003e\u003ccode class=\"language-plaintext highlighter-rouge\"\u003edig -x \u0026lt;IP\u0026gt;\u003c/code\u003e\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003cp\u003e果然，以上三个命令都会卡住。修改\u003ccode class=\"language-plaintext highlighter-rouge\"\u003e/etc/resolv.conf\u003c/code\u003e，换一个 DNS 服务器之后，问题\n消失了。接下来，就去查 DNS 服务器的问题吧。\u003c/p\u003e\n\n\u003col\u003e\n  \u003cli\u003e\u003ca href=\"https://whatsabyte.com/internet/best-public-dns-servers/\"\u003eTOP 10 DNS Servers\u003c/a\u003e，\u003c/li\u003e\n  \u003cli\u003e\u003ca href=\"https://stackoverflow.com/questions/614795/simulate-delayed-and-dropped-packets-on-linux\"\u003e\u003ccode class=\"language-plaintext highlighter-rouge\"\u003etc\u003c/code\u003e drop packet example\u003c/a\u003e\u003c/li\u003e\n  \u003cli\u003e\u003ca href=\"https://docs.docker.com/engine/reference/commandline/run/#options\"\u003e\u003ccode class=\"language-plaintext highlighter-rouge\"\u003edocker run\u003c/code\u003e parameter: \u003ccode class=\"language-plaintext highlighter-rouge\"\u003e--privileged\u003c/code\u003e\u003c/a\u003e\u003c/li\u003e\n  \u003cli\u003e\u003ca href=\"https://support.suso.com/supki/What_is_the_difference_between_a_hostname_and_a_domain_name\"\u003eDifference between Hostname and Domain Name\u003c/a\u003e\u003c/li\u003e\n  \u003cli\u003e\u003ca href=\"https://en.wikipedia.org/wiki/Domain_name\"\u003eWikipedia: Domain Name\u003c/a\u003e\u003c/li\u003e\n\u003c/ol\u003e\n\n\n  \u003c!-- POST NAVIGATION --\u003e\n  \u003cdiv class=\"postNav clearfix\"\u003e\n     \n      \u003ca class=\"prev\" href=\"/blog/tcpdump-practice-zh/\"\u003e\u003cspan\u003e« tcpdump/wireshark 抓包及分析（2019）\u003c/span\u003e\n      \n    \u003c/a\u003e\n      \n      \n      \u003ca class=\"next\" href=\"/blog/tuning-stack-tx-zh/\"\u003e\u003cspan\u003e[译] Linux 网络栈监控和调优：发送数据（2017） »\u003c/span\u003e\n       \n      \u003c/a\u003e\n     \n  \u003c/div\u003e\n\u003c/div\u003e",
  "Date": "2018-12-16T00:00:00Z",
  "Author": "Arthur Chiao"
}