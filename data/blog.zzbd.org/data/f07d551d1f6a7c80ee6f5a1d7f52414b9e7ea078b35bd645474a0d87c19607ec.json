{
  "Source": "blog.zzbd.org",
  "Title": "Hexo里优雅地使用emoji",
  "Link": "https://blog.zzbd.org/2021/05/29/blog_emoji/",
  "Content": "\u003cdiv class=\"post-body\" itemprop=\"articleBody\"\u003e\u003cp\u003e\u003cimg data-src=\"https://dict.zzbd.org/images/blog_emoji.png\" alt=\"blog_emoji\"/\u003e\u003c/p\u003e\u003cspan id=\"more\"\u003e\u003c/span\u003e\u003cp\u003e最近在思考如何在文章中方便的使用emoji表情图标，整体大概有这些思路：\u003c/p\u003e\u003col\u003e\u003cli\u003e做成font awesome的形式，通过class名调用。这也是之前采用的方式，将css里定义的所有图标做成一个cheat sheet，直接复制源码插入文章就可以。优点是语义化，常用的几个不用参照表就能盲打出来，而且图标已经加载到css中，不占用额外的资源和带宽。缺点也很明显：不是所有emoji都能做成字体，自定义起来略繁琐。而且可移动性差，用typora编辑md文件时不能所见即所得。\u003c/li\u003e\u003cli\u003e使用hexo自带的\u003ca target=\"_blank\" rel=\"noopener\" href=\"https://hexo.io/docs/tag-plugins.html\"\u003eTag Plugins\u003c/a\u003e。和CSS的方法类似，虽然用起来方便，但灵活性和可移植性差了点。\u003c/li\u003e\u003cli\u003e直接插入img标签外部引入。这也是本文要提到的方式，可移植性好，扩容也比较方便。剩下就是如何操作的问题了。最简单粗暴的就是做一张cheet sheet把所有emoji都放上去，然后定义一些操作逻辑，比如点击某个图片复制它的标签源码。接下来的问题就是如何获取emoji并且把list放到html中。这里介绍三个实用的浏览器扩展，解决思路也不一样。\u003c/li\u003e\u003c/ol\u003e\u003ch4 id=\"插件一：DownThemAll\"\u003e\u003ca href=\"#插件一：DownThemAll\" class=\"headerlink\" title=\"插件一：DownThemAll!\"\u003e\u003c/a\u003e插件一：DownThemAll!\u003c/h4\u003e\u003cp\u003e源自Firefox的高质量下载器辅助类工具。本身是调用浏览器自带的下载功能，最有特点的功能是可以定义序列化url，比如\u003cbr/\u003e\u003ccode\u003ehttp://path-to-file/1.png\u003c/code\u003e\u003cbr/\u003e\u003ccode\u003ehttp://path-to-file/2.png\u003c/code\u003e\u003cbr/\u003e…\u003cbr/\u003e\u003ccode\u003ehttp://path-to-file/20.png\u003c/code\u003e\u003cbr/\u003e这种就可以写成\u003ccode\u003ehttp://path-to-file/[1:20].png\u003c/code\u003e，并且可以定义命名规则，非常适合用来批量抓取资源。而且它本身就可以嗅探网页上的各种文件，筛选器也很强大。本来有这样一个工具就可以爬到各大社交网站的表情库了。然而试下来发现一个图都下不动，不知道是不是网络原因\u003cimg class=\"emoji\" data-src=\"https://zzbd.org/images/m_b/dlm/a03.gif\"/\u003e。所以就有了第二个。\u003c/p\u003e\u003ch4 id=\"插件二：Save-All-Resources\"\u003e\u003ca href=\"#插件二：Save-All-Resources\" class=\"headerlink\" title=\"插件二：Save All Resources\"\u003e\u003c/a\u003e插件二：Save All Resources\u003c/h4\u003e\u003cp\u003e顾名思义，只要网站能打开，图标能显示，它就能把所有东西都保存到本地，并且不需要再次请求网络。最后就是用这种方式爬下了几个网站的emoji，而且下载下来就已经按照文件夹整理好了。全部完成后在DOS里用\u003ccode\u003edir /s /b\u003c/code\u003e列出所有文件的路径，稍微查找替换就做好了一个list。再介绍另外一个有意思的工具。\u003c/p\u003e\u003ch4 id=\"插件三：Save-Page-WE\"\u003e\u003ca href=\"#插件三：Save-Page-WE\" class=\"headerlink\" title=\"插件三：Save Page WE\"\u003e\u003c/a\u003e插件三：Save Page WE\u003c/h4\u003e\u003cp\u003e一键将当前网页保存到一个html文件中，所有的图片通过dataURI直接内嵌，理论上视频也是可以的，没尝试过。这样做好的cheat sheet可以保存到本地，只需一个文件就能离线查看。当然，复制img标签的时候src也是base64编码的。\u003c/p\u003e\u003ch4 id=\"插件四：Scrapper\"\u003e\u003ca href=\"#插件四：Scrapper\" class=\"headerlink\" title=\"插件四：Scrapper\"\u003e\u003c/a\u003e插件四：Scrapper\u003c/h4\u003e\u003cp\u003e老插件了，但依然可用，以b站为例\u003c/p\u003e\u003cfigure class=\"highlight css\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003eSelector ⇢ jQuery ⇢ \u003cspan class=\"selector-tag\"\u003ea\u003c/span\u003e\u003cspan class=\"selector-class\"\u003e.emoji-list\u003c/span\u003e\u0026gt;\u003cspan class=\"selector-tag\"\u003eimg\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"attribute\"\u003eColumns\u003c/span\u003e ⇢ \u003cspan class=\"keyword\"\u003e@src\u003c/span\u003e  @title\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\u003cp\u003e获得url和图片名的表格，然后在编辑器里替换成\u003ccode\u003earia2c http://url-to-emoji -o xxx.png\u003c/code\u003e的形式，复制后在cmd里执行即可。这里有个\u003ca target=\"_blank\" rel=\"noopener\" href=\"https://www.qqxiuzi.cn/zh/pinyin/\"\u003e在线工具\u003c/a\u003e可以把汉字转换为拼音，同样在编辑器里查找替换成\u003ccode\u003eren 汉字.png hanzi.png\u003c/code\u003e这种形式，然后执行。\u003c/p\u003e\u003cp\u003e回到cheet sheet的制作，有了url list再简单排版下就大功告成了。这里用\u003ccode\u003e\u0026lt;ul\u0026gt;\u003c/code\u003e标签简单做了个flex布局，够用就好。最后就是复制的逻辑问题了，复制到剪切板的代码实现通过google获得：\u003c/p\u003e\u003cfigure class=\"highlight javascript\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e8\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e9\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"function\"\u003e\u003cspan class=\"keyword\"\u003efunction\u003c/span\u003e \u003cspan class=\"title\"\u003ecopyToClipboard\u003c/span\u003e(\u003cspan class=\"params\"\u003etext\u003c/span\u003e) \u003c/span\u003e{\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"keyword\"\u003evar\u003c/span\u003e dummy = \u003cspan class=\"built_in\"\u003edocument\u003c/span\u003e.createElement(\u003cspan class=\"string\"\u003e\u0026#34;textarea\u0026#34;\u003c/span\u003e);\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"built_in\"\u003edocument\u003c/span\u003e.body.appendChild(dummy);\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    dummy.value = text;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    dummy.select();\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"built_in\"\u003edocument\u003c/span\u003e.execCommand(\u003cspan class=\"string\"\u003e\u0026#34;copy\u0026#34;\u003c/span\u003e);\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"built_in\"\u003edocument\u003c/span\u003e.body.removeChild(dummy);\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    alert(\u003cspan class=\"string\"\u003e\u0026#39;复制成功：\u0026#39;\u003c/span\u003e + text)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e}\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\u003cp\u003e再贪心一点，除了复制图片链接，还想实现复制为dataURI的形式，比如直接点击是复制链接，shift加点击是复制dataURI。网上大多是通过canvas的\u003ccode\u003etoDataURL\u003c/code\u003e接口实现的，好处是不用再fetch一次，但我测试下来MIME参数无效，而且转码也有点问题。最后还是上fetch方法\u003c/p\u003e\u003cfigure class=\"highlight javascript\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e8\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e9\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e10\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e11\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e12\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"keyword\"\u003econst\u003c/span\u003e getBase64FromUrl = \u003cspan class=\"keyword\"\u003easync\u003c/span\u003e (url) =\u0026gt; {\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  \u003cspan class=\"keyword\"\u003econst\u003c/span\u003e data = \u003cspan class=\"keyword\"\u003eawait\u003c/span\u003e fetch(url);\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  \u003cspan class=\"keyword\"\u003econst\u003c/span\u003e blob = \u003cspan class=\"keyword\"\u003eawait\u003c/span\u003e data.blob();\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  \u003cspan class=\"keyword\"\u003ereturn\u003c/span\u003e \u003cspan class=\"keyword\"\u003enew\u003c/span\u003e \u003cspan class=\"built_in\"\u003ePromise\u003c/span\u003e(\u003cspan class=\"function\"\u003e(\u003cspan class=\"params\"\u003eresolve\u003c/span\u003e) =\u0026gt;\u003c/span\u003e {\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"keyword\"\u003econst\u003c/span\u003e reader = \u003cspan class=\"keyword\"\u003enew\u003c/span\u003e FileReader();\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    reader.readAsDataURL(blob); \u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    reader.onloadend = \u003cspan class=\"function\"\u003e() =\u0026gt;\u003c/span\u003e {\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e      \u003cspan class=\"keyword\"\u003econst\u003c/span\u003e base64data = reader.result;   \u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e      resolve(base64data);\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    }\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  });\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e}\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\u003cp\u003e不知道转Base64有没有可能本地实现，稍微搜了下没有头绪遂放弃。\u003c/p\u003e\u003cp\u003e这里只是提供思路，成品就不放出来了（版权警告\u003cimg class=\"emoji\" data-src=\"https://zzbd.org/images/smzdm/132.png\"/\u003e）\u003c/p\u003e\u003ch4 id=\"更新\"\u003e\u003ca href=\"#更新\" class=\"headerlink\" title=\"更新\"\u003e\u003c/a\u003e更新\u003c/h4\u003e\u003cp\u003e6.13 增加插件Scrapper\u003c/p\u003e\u003c/div\u003e",
  "Date": "2021-05-29T07:46:50Z",
  "Author": "J. F"
}