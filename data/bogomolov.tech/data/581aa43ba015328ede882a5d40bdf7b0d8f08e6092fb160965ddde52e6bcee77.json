{
  "Source": "bogomolov.tech",
  "Title": "Implement Facebook login button with Symfony",
  "Link": "https://bogomolov.tech/Facebook-Log-Id-Symfony/",
  "Content": "\u003cdiv class=\"post-content\"\u003e\u003cp\u003eMy goal was to add the \u003cstrong\u003eContinue with Facebook\u003c/strong\u003e (Log In) button into the existing Symfony application. I do not provide here full code. Only the main parts to creating your Facebook login button. Here is what I did.\u003c/p\u003e\u003cp\u003eTo test the Facebook login button locally, you need \u003ca href=\"/localhost-https/\"\u003eto get HTTPS working on localhost\u003c/a\u003e.\u003c/p\u003e\u003ch3 id=\"Overview\"\u003e\u003ca href=\"#Overview\" class=\"headerlink\" title=\"Overview\"\u003e\u003c/a\u003eOverview\u003c/h3\u003e\u003cp\u003eWorkflow overview is:\u003c/p\u003e\u003col\u003e\u003cli\u003eUser clicks the Facebook login button\u003c/li\u003e\u003cli\u003eFacebook authenticate user\u003c/li\u003e\u003cli\u003eApp sends facebook token (auth data) to Symfony backend\u003c/li\u003e\u003cli\u003eBackend gets user data (name and email) using auth data and logs in with Symfony handlers.\u003c/li\u003e\u003c/ol\u003e\u003cp\u003eSo Facebook is only necessary for the only first part - checking the person who wants to log in.\u003c/p\u003e\u003cp\u003eI use \u003ca href=\"https://symfony.com/doc/current/security/guard_authentication.html\" target=\"_blank\" rel=\"noopener\"\u003eGuard\u003c/a\u003e to auth user in the backend.\u003c/p\u003e\u003ch3 id=\"Facebook-libraries\"\u003e\u003ca href=\"#Facebook-libraries\" class=\"headerlink\" title=\"Facebook libraries\"\u003e\u003c/a\u003eFacebook libraries\u003c/h3\u003e\u003cp\u003eCreate new app \u003ca href=\"https://developers.facebook.com/apps\" target=\"_blank\" rel=\"noopener\"\u003ehere\u003c/a\u003e.\u003c/p\u003e\u003cp\u003eYou need Facebook Javascript SDK for the frontend and PHP library for the backend.\u003cbr/\u003eInstall PHP Facebook library:\u003c/p\u003e\u003cpre\u003e\u003ccode class=\"hljs bash\"\u003ecomposer require facebook/graph-sdk\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eInclude Facebook Javascript SDK to your template. It should look like that:\u003c/p\u003e\u003cpre\u003e\u003ccode class=\"hljs html\"\u003e\u003cspan class=\"hljs-tag\"\u003e\u0026lt;\u003cspan class=\"hljs-name\"\u003escript\u003c/span\u003e \u003cspan class=\"hljs-attr\"\u003easync\u003c/span\u003e \u003cspan class=\"hljs-attr\"\u003edefer\u003c/span\u003e \u003cspan class=\"hljs-attr\"\u003ecrossorigin\u003c/span\u003e=\u003cspan class=\"hljs-string\"\u003e\u0026#34;anonymous\u0026#34;\u003c/span\u003e\n        \u003cspan class=\"hljs-attr\"\u003esrc\u003c/span\u003e=\u003cspan class=\"hljs-string\"\u003e\u0026#34;https://connect.facebook.net/en_US/sdk.js#xfbml=1\u0026amp;version=v7.0\u0026amp;appId=\u0026lt;your app id here\u0026gt;\u0026#34;\u003c/span\u003e\u0026gt;\u003c/span\u003e\n\u003cspan class=\"hljs-tag\"\u003e\u0026lt;/\u003cspan class=\"hljs-name\"\u003escript\u003c/span\u003e\u0026gt;\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eThe simplest way is to generate this snippet from \u003ca href=\"https://developers.facebook.com/apps\" target=\"_blank\" rel=\"noopener\"\u003eFacebook developers\u003c/a\u003e page in \u003cstrong\u003eFacebook Login\u003c/strong\u003e - \u003cstrong\u003eQuickstart\u003c/strong\u003e section.\u003c/p\u003e\u003ch3 id=\"Frontend\"\u003e\u003ca href=\"#Frontend\" class=\"headerlink\" title=\"Frontend\"\u003e\u003c/a\u003eFrontend\u003c/h3\u003e\u003cp\u003eNext, you need to add a button and handle login result. Button example:\u003c/p\u003e\u003cpre\u003e\u003ccode class=\"hljs html\"\u003e\u003cspan class=\"hljs-tag\"\u003e\u0026lt;\u003cspan class=\"hljs-name\"\u003ediv\u003c/span\u003e \u003cspan class=\"hljs-attr\"\u003eclass\u003c/span\u003e=\u003cspan class=\"hljs-string\"\u003e\u0026#34;fb-login-button\u0026#34;\u003c/span\u003e\n     \u003cspan class=\"hljs-attr\"\u003edata-size\u003c/span\u003e=\u003cspan class=\"hljs-string\"\u003e\u0026#34;large\u0026#34;\u003c/span\u003e\n     \u003cspan class=\"hljs-attr\"\u003edata-button-type\u003c/span\u003e=\u003cspan class=\"hljs-string\"\u003e\u0026#34;continue_with\u0026#34;\u003c/span\u003e\n     \u003cspan class=\"hljs-attr\"\u003edata-layout\u003c/span\u003e=\u003cspan class=\"hljs-string\"\u003e\u0026#34;default\u0026#34;\u003c/span\u003e\n     \u003cspan class=\"hljs-attr\"\u003edata-auto-logout-link\u003c/span\u003e=\u003cspan class=\"hljs-string\"\u003e\u0026#34;false\u0026#34;\u003c/span\u003e\n     \u003cspan class=\"hljs-attr\"\u003edata-use-continue-as\u003c/span\u003e=\u003cspan class=\"hljs-string\"\u003e\u0026#34;false\u0026#34;\u003c/span\u003e\n     \u003cspan class=\"hljs-attr\"\u003edata-scope\u003c/span\u003e=\u003cspan class=\"hljs-string\"\u003e\u0026#34;public_profile,email\u0026#34;\u003c/span\u003e\n     \u003cspan class=\"hljs-attr\"\u003eonlogin\u003c/span\u003e=\u003cspan class=\"hljs-string\"\u003e\u0026#34;fbGetLoginStatus();\u0026#34;\u003c/span\u003e\n     \u003cspan class=\"hljs-attr\"\u003edata-width\u003c/span\u003e=\u003cspan class=\"hljs-string\"\u003e\u0026#34;\u0026#34;\u003c/span\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"hljs-tag\"\u003e\u0026lt;/\u003cspan class=\"hljs-name\"\u003ediv\u003c/span\u003e\u0026gt;\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003cp\u003e\u003ca href=\"https://developers.facebook.com/docs/facebook-login/web/login-button/\" target=\"_blank\" rel=\"noopener\"\u003eHere\u003c/a\u003e is a button configurator.\u003c/p\u003e\u003cp\u003eI created a Javascript module with that code:\u003c/p\u003e\u003cpre\u003e\u003ccode class=\"hljs js\"\u003e\u003cspan class=\"hljs-built_in\"\u003ewindow\u003c/span\u003e.fbGetLoginStatus = \u003cspan class=\"hljs-function\"\u003e\u003cspan class=\"hljs-keyword\"\u003efunction\u003c/span\u003e (\u003cspan class=\"hljs-params\"\u003e\u003c/span\u003e) \u003c/span\u003e{\n    FB.getLoginStatus(\u003cspan class=\"hljs-function\"\u003e\u003cspan class=\"hljs-keyword\"\u003efunction\u003c/span\u003e (\u003cspan class=\"hljs-params\"\u003eresponse\u003c/span\u003e) \u003c/span\u003e{\n        \u003cspan class=\"hljs-keyword\"\u003eif\u003c/span\u003e (isConnected(response)) {\n            fbLogIn(response);\n        }\n    });\n}\n\u003cspan class=\"hljs-function\"\u003e\u003cspan class=\"hljs-keyword\"\u003efunction\u003c/span\u003e \u003cspan class=\"hljs-title\"\u003eisConnected\u003c/span\u003e(\u003cspan class=\"hljs-params\"\u003eresponse\u003c/span\u003e) \u003c/span\u003e{\n    \u003cspan class=\"hljs-keyword\"\u003ereturn\u003c/span\u003e response.status === \u003cspan class=\"hljs-string\"\u003e\u0026#39;connected\u0026#39;\u003c/span\u003e;\n}\n\n\u003cspan class=\"hljs-function\"\u003e\u003cspan class=\"hljs-keyword\"\u003efunction\u003c/span\u003e \u003cspan class=\"hljs-title\"\u003efbLogIn\u003c/span\u003e(\u003cspan class=\"hljs-params\"\u003eresponse\u003c/span\u003e) \u003c/span\u003e{\n    \u003cspan class=\"hljs-keyword\"\u003elet\u003c/span\u003e loginForm = \u003cspan class=\"hljs-built_in\"\u003edocument\u003c/span\u003e.querySelector(\u003cspan class=\"hljs-string\"\u003e\u0026#39;.login-form\u0026#39;\u003c/span\u003e);\n    \u003cspan class=\"hljs-keyword\"\u003elet\u003c/span\u003e input = getHiddenInput(\u003cspan class=\"hljs-string\"\u003e\u0026#34;fbAuthResponse\u0026#34;\u003c/span\u003e, \u003cspan class=\"hljs-built_in\"\u003eJSON\u003c/span\u003e.stringify(response.authResponse));    \n    loginForm.appendChild(input);\n    loginForm.submit();\n}\n\n\u003cspan class=\"hljs-function\"\u003e\u003cspan class=\"hljs-keyword\"\u003efunction\u003c/span\u003e \u003cspan class=\"hljs-title\"\u003egetHiddenInput\u003c/span\u003e(\u003cspan class=\"hljs-params\"\u003ename, value\u003c/span\u003e) \u003c/span\u003e{\n    \u003cspan class=\"hljs-keyword\"\u003elet\u003c/span\u003e input = \u003cspan class=\"hljs-built_in\"\u003edocument\u003c/span\u003e.createElement(\u003cspan class=\"hljs-string\"\u003e\u0026#34;input\u0026#34;\u003c/span\u003e);\n    input.setAttribute(\u003cspan class=\"hljs-string\"\u003e\u0026#34;type\u0026#34;\u003c/span\u003e, \u003cspan class=\"hljs-string\"\u003e\u0026#34;hidden\u0026#34;\u003c/span\u003e);\n    input.setAttribute(\u003cspan class=\"hljs-string\"\u003e\u0026#34;name\u0026#34;\u003c/span\u003e, name);\n    input.setAttribute(\u003cspan class=\"hljs-string\"\u003e\u0026#34;value\u0026#34;\u003c/span\u003e, value);\n}\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eWhen a user clicks to \u003cstrong\u003eContinue with Facebook\u003c/strong\u003e button and successfully logged in, then I submit a login (or registration) form and send data to backend via POST request.\u003c/p\u003e\u003ch3 id=\"Backend-Symfony-Guard\"\u003e\u003ca href=\"#Backend-Symfony-Guard\" class=\"headerlink\" title=\"Backend - Symfony Guard\"\u003e\u003c/a\u003eBackend - Symfony Guard\u003c/h3\u003e\u003cp\u003eI had already one Guard for usual login-password authentication. So I add the second one. Here is my security.yaml config for Guard:\u003c/p\u003e\u003cpre\u003e\u003ccode class=\"hljs yaml\"\u003e\u003cspan class=\"hljs-attr\"\u003esecurity:\u003c/span\u003e\n    \u003cspan class=\"hljs-attr\"\u003efirewalls:\u003c/span\u003e\n        \u003cspan class=\"hljs-attr\"\u003emain:\u003c/span\u003e\n            \u003cspan class=\"hljs-attr\"\u003eguard:\u003c/span\u003e\n                \u003cspan class=\"hljs-attr\"\u003eauthenticators:\u003c/span\u003e\n                    \u003cspan class=\"hljs-bullet\"\u003e-\u003c/span\u003e \u003cspan class=\"hljs-string\"\u003eApp\\Security\\LoginFormAuthenticator\u003c/span\u003e\n                    \u003cspan class=\"hljs-bullet\"\u003e-\u003c/span\u003e \u003cspan class=\"hljs-string\"\u003eApp\\Security\\FacebookAuthenticator\u003c/span\u003e\n                \u003cspan class=\"hljs-attr\"\u003eentry_point:\u003c/span\u003e \u003cspan class=\"hljs-string\"\u003eApp\\Security\\LoginFormAuthenticator\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eNow you need to create Guard file, which extends AbstractFormLoginAuthenticator:\u003c/p\u003e\u003cpre\u003e\u003ccode class=\"hljs php\"\u003e\u003cspan class=\"hljs-class\"\u003e\u003cspan class=\"hljs-keyword\"\u003eclass\u003c/span\u003e \u003cspan class=\"hljs-title\"\u003eFacebookAuthenticator\u003c/span\u003e \u003cspan class=\"hljs-keyword\"\u003eextends\u003c/span\u003e \u003cspan class=\"hljs-title\"\u003eAbstractFormLoginAuthenticator\u003c/span\u003e \u003c/span\u003e{}\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eThe main methods of the FacebookAuthenticator will be:\u003c/p\u003e\u003cp\u003e\u003cstrong\u003esupports\u003c/strong\u003e - it checks if you should use that Guard. I used the same logic for the login and register page. So it looks like that:\u003c/p\u003e\u003cpre\u003e\u003ccode class=\"hljs php\"\u003e\u003cspan class=\"hljs-keyword\"\u003epublic\u003c/span\u003e \u003cspan class=\"hljs-function\"\u003e\u003cspan class=\"hljs-keyword\"\u003efunction\u003c/span\u003e \u003cspan class=\"hljs-title\"\u003esupports\u003c/span\u003e\u003cspan class=\"hljs-params\"\u003e(Request $request)\u003c/span\u003e\n\u003c/span\u003e{\n    $route = $request-\u0026gt;attributes-\u0026gt;get(\u003cspan class=\"hljs-string\"\u003e\u0026#39;_route\u0026#39;\u003c/span\u003e);\n    $isLoginOrRegister = in_array($route, [\u003cspan class=\"hljs-string\"\u003e\u0026#39;app_login\u0026#39;\u003c/span\u003e, \u003cspan class=\"hljs-string\"\u003e\u0026#39;app_register\u0026#39;\u003c/span\u003e]);\n    \u003cspan class=\"hljs-keyword\"\u003ereturn\u003c/span\u003e $isLoginOrRegister \n        \u0026amp;\u0026amp; $request-\u0026gt;isMethod(\u003cspan class=\"hljs-string\"\u003e\u0026#39;POST\u0026#39;\u003c/span\u003e) \n        \u0026amp;\u0026amp; $request-\u0026gt;get(\u003cspan class=\"hljs-string\"\u003e\u0026#39;fbAuthResponse\u0026#39;\u003c/span\u003e);\n}\u003c/code\u003e\u003c/pre\u003e\u003cp\u003e\u003cstrong\u003egetCredentials\u003c/strong\u003e - gets Facebook auth response and decode it to an array:\u003c/p\u003e\u003cpre\u003e\u003ccode class=\"hljs php\"\u003e\u003cspan class=\"hljs-keyword\"\u003epublic\u003c/span\u003e \u003cspan class=\"hljs-function\"\u003e\u003cspan class=\"hljs-keyword\"\u003efunction\u003c/span\u003e \u003cspan class=\"hljs-title\"\u003egetCredentials\u003c/span\u003e\u003cspan class=\"hljs-params\"\u003e(Request $request)\u003c/span\u003e\n\u003c/span\u003e{\n    \u003cspan class=\"hljs-keyword\"\u003ereturn\u003c/span\u003e json_decode($request-\u0026gt;get(\u003cspan class=\"hljs-string\"\u003e\u0026#39;fbAuthResponse\u0026#39;\u003c/span\u003e), \u003cspan class=\"hljs-keyword\"\u003etrue\u003c/span\u003e);\n}\u003c/code\u003e\u003c/pre\u003e\u003cp\u003e\u003cstrong\u003eonAuthenticationSuccess\u003c/strong\u003e - I redirect the user to the landing page:\u003c/p\u003e\u003cpre\u003e\u003ccode class=\"hljs php\"\u003e\u003cspan class=\"hljs-keyword\"\u003epublic\u003c/span\u003e \u003cspan class=\"hljs-function\"\u003e\u003cspan class=\"hljs-keyword\"\u003efunction\u003c/span\u003e \u003cspan class=\"hljs-title\"\u003eonAuthenticationSuccess\u003c/span\u003e\u003cspan class=\"hljs-params\"\u003e(\n    Request $request, \n    TokenInterface $token, \n    $providerKey\n)\u003c/span\u003e\n\u003c/span\u003e{\n    \u003cspan class=\"hljs-keyword\"\u003ereturn\u003c/span\u003e \u003cspan class=\"hljs-keyword\"\u003enew\u003c/span\u003e RedirectResponse(\n        \u003cspan class=\"hljs-keyword\"\u003e$this\u003c/span\u003e-\u0026gt;urlGenerator-\u0026gt;generate(\u003cspan class=\"hljs-string\"\u003e\u0026#39;app_landing\u0026#39;\u003c/span\u003e)\n    );\n}\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eIn order to use a url generator, add it to constructor (see below).\u003c/p\u003e\u003cp\u003e\u003cstrong\u003egetUser\u003c/strong\u003e - the main part, where you gets email and name from Facebook Graph API and return User entity:\u003c/p\u003e\u003cpre\u003e\u003ccode class=\"hljs php\"\u003e\u003cspan class=\"hljs-keyword\"\u003epublic\u003c/span\u003e \u003cspan class=\"hljs-function\"\u003e\u003cspan class=\"hljs-keyword\"\u003efunction\u003c/span\u003e \u003cspan class=\"hljs-title\"\u003egetUser\u003c/span\u003e\u003cspan class=\"hljs-params\"\u003e($credentials, UserProviderInterface $userProvider)\u003c/span\u003e\n\u003c/span\u003e{\n    \u003cspan class=\"hljs-keyword\"\u003eif\u003c/span\u003e (\u003cspan class=\"hljs-keyword\"\u003eempty\u003c/span\u003e($credentials[\u003cspan class=\"hljs-string\"\u003e\u0026#39;accessToken\u0026#39;\u003c/span\u003e])) {\n        \u003cspan class=\"hljs-keyword\"\u003ethrow\u003c/span\u003e \u003cspan class=\"hljs-keyword\"\u003enew\u003c/span\u003e CustomUserMessageAuthenticationException(\u003cspan class=\"hljs-string\"\u003e\u0026#39;Your message here\u0026#39;\u003c/span\u003e);\n    }\n    \n    $fbUser = \u003cspan class=\"hljs-keyword\"\u003e$this\u003c/span\u003e-\u0026gt;fbService-\u0026gt;getUser($credentials[\u003cspan class=\"hljs-string\"\u003e\u0026#39;accessToken\u0026#39;\u003c/span\u003e]);\n\n    \u003cspan class=\"hljs-keyword\"\u003eif\u003c/span\u003e (\u003cspan class=\"hljs-keyword\"\u003eempty\u003c/span\u003e($fbUser-\u0026gt;getEmail())) {\n        \u003cspan class=\"hljs-keyword\"\u003ethrow\u003c/span\u003e \u003cspan class=\"hljs-keyword\"\u003enew\u003c/span\u003e CustomUserMessageAuthenticationException(\u003cspan class=\"hljs-string\"\u003e\u0026#39;Your message here\u0026#39;\u003c/span\u003e);\n    }\n\n    \u003cspan class=\"hljs-keyword\"\u003ereturn\u003c/span\u003e $userProvider-\u0026gt;loadUserByUsername($fbUser-\u0026gt;getEmail());\n}\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eI use email and name for registration when the user does not exist. Here is only the login part, without registration for simplicity.\u003c/p\u003e\u003cp\u003eHere is the way you can autowire services in Guard constructor:\u003c/p\u003e\u003cpre\u003e\u003ccode class=\"hljs php\"\u003e\u003cspan class=\"hljs-keyword\"\u003epublic\u003c/span\u003e \u003cspan class=\"hljs-function\"\u003e\u003cspan class=\"hljs-keyword\"\u003efunction\u003c/span\u003e \u003cspan class=\"hljs-title\"\u003e__construct\u003c/span\u003e\u003cspan class=\"hljs-params\"\u003e(\n    FacebookService $fbService, \n    UrlGeneratorInterface $urlGenerator\n)\u003c/span\u003e\n\u003c/span\u003e{\n    \u003cspan class=\"hljs-keyword\"\u003e$this\u003c/span\u003e-\u0026gt;fbService = $fbService;\n    \u003cspan class=\"hljs-keyword\"\u003e$this\u003c/span\u003e-\u0026gt;urlGenerator = $urlGenerator;\n}\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eMy fbService looks like this:\u003c/p\u003e\u003cpre\u003e\u003ccode class=\"hljs php\"\u003e\u003cspan class=\"hljs-meta\"\u003e\u0026lt;?php\u003c/span\u003e\n\n\u003cspan class=\"hljs-keyword\"\u003enamespace\u003c/span\u003e \u003cspan class=\"hljs-title\"\u003eApp\u003c/span\u003e\\\u003cspan class=\"hljs-title\"\u003eService\u003c/span\u003e;\n\n\u003cspan class=\"hljs-keyword\"\u003euse\u003c/span\u003e \u003cspan class=\"hljs-title\"\u003eApp\u003c/span\u003e\\\u003cspan class=\"hljs-title\"\u003eEntity\u003c/span\u003e\\\u003cspan class=\"hljs-title\"\u003eFacebookUser\u003c/span\u003e;\n\u003cspan class=\"hljs-keyword\"\u003euse\u003c/span\u003e \u003cspan class=\"hljs-title\"\u003eFacebook\u003c/span\u003e\\\u003cspan class=\"hljs-title\"\u003eFacebook\u003c/span\u003e;\n\n\u003cspan class=\"hljs-class\"\u003e\u003cspan class=\"hljs-keyword\"\u003eclass\u003c/span\u003e \u003cspan class=\"hljs-title\"\u003eFacebookService\u003c/span\u003e\n\u003c/span\u003e{\n    \u003cspan class=\"hljs-keyword\"\u003eprivate\u003c/span\u003e $client;\n\n    \u003cspan class=\"hljs-keyword\"\u003epublic\u003c/span\u003e \u003cspan class=\"hljs-function\"\u003e\u003cspan class=\"hljs-keyword\"\u003efunction\u003c/span\u003e \u003cspan class=\"hljs-title\"\u003e__construct\u003c/span\u003e\u003cspan class=\"hljs-params\"\u003e(\n        string $fbAppId, \n        string $fbAppSecret, \n        string $fbGraphVersion\n    )\u003c/span\u003e\n    \u003c/span\u003e{\n        \u003cspan class=\"hljs-keyword\"\u003e$this\u003c/span\u003e-\u0026gt;client = \u003cspan class=\"hljs-keyword\"\u003enew\u003c/span\u003e Facebook([\n            \u003cspan class=\"hljs-string\"\u003e\u0026#39;app_id\u0026#39;\u003c/span\u003e =\u0026gt; $fbAppId,\n            \u003cspan class=\"hljs-string\"\u003e\u0026#39;app_secret\u0026#39;\u003c/span\u003e =\u0026gt; $fbAppSecret,\n            \u003cspan class=\"hljs-string\"\u003e\u0026#39;default_graph_version\u0026#39;\u003c/span\u003e =\u0026gt; $fbGraphVersion,\n        ]);\n\n    }\n\n    \u003cspan class=\"hljs-keyword\"\u003epublic\u003c/span\u003e \u003cspan class=\"hljs-function\"\u003e\u003cspan class=\"hljs-keyword\"\u003efunction\u003c/span\u003e \u003cspan class=\"hljs-title\"\u003egetUser\u003c/span\u003e\u003cspan class=\"hljs-params\"\u003e(string $token)\u003c/span\u003e: \u003cspan class=\"hljs-title\"\u003eFacebookUser\u003c/span\u003e\n    \u003c/span\u003e{\n        $user = \u003cspan class=\"hljs-keyword\"\u003enew\u003c/span\u003e FacebookUser();\n\n        \u003cspan class=\"hljs-keyword\"\u003etry\u003c/span\u003e {\n            $fbUser = \u003cspan class=\"hljs-keyword\"\u003e$this\u003c/span\u003e-\u0026gt;client-\u0026gt;get(\u003cspan class=\"hljs-string\"\u003e\u0026#34;/me?fields=name,email\u0026#34;\u003c/span\u003e, $token);\n            $data = $fbUser-\u0026gt;getDecodedBody();\n            $user\n                -\u0026gt;setName($data[\u003cspan class=\"hljs-string\"\u003e\u0026#39;name\u0026#39;\u003c/span\u003e])\n                -\u0026gt;setEmail($data[\u003cspan class=\"hljs-string\"\u003e\u0026#39;email\u0026#39;\u003c/span\u003e]);\n        } \u003cspan class=\"hljs-keyword\"\u003ecatch\u003c/span\u003e (\\Throwable $exception) {\n            \u003cspan class=\"hljs-comment\"\u003e// handle exception here\u003c/span\u003e\n        }\n\n        \u003cspan class=\"hljs-keyword\"\u003ereturn\u003c/span\u003e $user;\n    }\n}\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eIn order to autowire FacebookService constructor arguments, add variables to .env file (according to your environment) and add parameters to services.yaml config:\u003c/p\u003e\u003cpre\u003e\u003ccode class=\"hljs yaml\"\u003e\u003cspan class=\"hljs-attr\"\u003eservices:\u003c/span\u003e\n    \u003cspan class=\"hljs-string\"\u003eApp\\Service\\FacebookService:\u003c/span\u003e\n        \u003cspan class=\"hljs-attr\"\u003earguments:\u003c/span\u003e\n            \u003cspan class=\"hljs-string\"\u003e$fbAppId:\u003c/span\u003e \u003cspan class=\"hljs-string\"\u003e\u0026#39;%env(FB_APP_ID)%\u0026#39;\u003c/span\u003e\n            \u003cspan class=\"hljs-string\"\u003e$fbAppSecret:\u003c/span\u003e \u003cspan class=\"hljs-string\"\u003e\u0026#39;%env(FB_APP_SECRET)%\u0026#39;\u003c/span\u003e\n            \u003cspan class=\"hljs-string\"\u003e$fbGraphVersion:\u003c/span\u003e \u003cspan class=\"hljs-string\"\u003e\u0026#39;%env(FB_GRAPH_VERSION)%\u0026#39;\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eHere is a FacebookUser entity. You can use an array instead of an entity, but OOP is more convenient for me.\u003c/p\u003e\u003cpre\u003e\u003ccode class=\"hljs php\"\u003e\u003cspan class=\"hljs-meta\"\u003e\u0026lt;?php\u003c/span\u003e\n\n\u003cspan class=\"hljs-keyword\"\u003enamespace\u003c/span\u003e \u003cspan class=\"hljs-title\"\u003eApp\u003c/span\u003e\\\u003cspan class=\"hljs-title\"\u003eEntity\u003c/span\u003e;\n\n\u003cspan class=\"hljs-class\"\u003e\u003cspan class=\"hljs-keyword\"\u003eclass\u003c/span\u003e \u003cspan class=\"hljs-title\"\u003eFacebookUser\u003c/span\u003e\n\u003c/span\u003e{\n    \u003cspan class=\"hljs-keyword\"\u003eprivate\u003c/span\u003e $name;\n    \u003cspan class=\"hljs-keyword\"\u003eprivate\u003c/span\u003e $email;\n\n    \u003cspan class=\"hljs-keyword\"\u003epublic\u003c/span\u003e \u003cspan class=\"hljs-function\"\u003e\u003cspan class=\"hljs-keyword\"\u003efunction\u003c/span\u003e \u003cspan class=\"hljs-title\"\u003egetName\u003c/span\u003e\u003cspan class=\"hljs-params\"\u003e()\u003c/span\u003e: ?\u003cspan class=\"hljs-title\"\u003estring\u003c/span\u003e\n    \u003c/span\u003e{\n        \u003cspan class=\"hljs-keyword\"\u003ereturn\u003c/span\u003e \u003cspan class=\"hljs-keyword\"\u003e$this\u003c/span\u003e-\u0026gt;name;\n    }\n\n    \u003cspan class=\"hljs-keyword\"\u003epublic\u003c/span\u003e \u003cspan class=\"hljs-function\"\u003e\u003cspan class=\"hljs-keyword\"\u003efunction\u003c/span\u003e \u003cspan class=\"hljs-title\"\u003esetName\u003c/span\u003e\u003cspan class=\"hljs-params\"\u003e($name)\u003c/span\u003e: \u003cspan class=\"hljs-title\"\u003eself\u003c/span\u003e\n    \u003c/span\u003e{\n        \u003cspan class=\"hljs-keyword\"\u003e$this\u003c/span\u003e-\u0026gt;name = $name;\n        \u003cspan class=\"hljs-keyword\"\u003ereturn\u003c/span\u003e \u003cspan class=\"hljs-keyword\"\u003e$this\u003c/span\u003e;\n    }\n\n    \u003cspan class=\"hljs-keyword\"\u003epublic\u003c/span\u003e \u003cspan class=\"hljs-function\"\u003e\u003cspan class=\"hljs-keyword\"\u003efunction\u003c/span\u003e \u003cspan class=\"hljs-title\"\u003egetEmail\u003c/span\u003e\u003cspan class=\"hljs-params\"\u003e()\u003c/span\u003e: ?\u003cspan class=\"hljs-title\"\u003estring\u003c/span\u003e\n    \u003c/span\u003e{\n        \u003cspan class=\"hljs-keyword\"\u003ereturn\u003c/span\u003e \u003cspan class=\"hljs-keyword\"\u003e$this\u003c/span\u003e-\u0026gt;email;\n    }\n\n    \u003cspan class=\"hljs-keyword\"\u003epublic\u003c/span\u003e \u003cspan class=\"hljs-function\"\u003e\u003cspan class=\"hljs-keyword\"\u003efunction\u003c/span\u003e \u003cspan class=\"hljs-title\"\u003esetEmail\u003c/span\u003e\u003cspan class=\"hljs-params\"\u003e(string $email)\u003c/span\u003e: \u003cspan class=\"hljs-title\"\u003eself\u003c/span\u003e\n    \u003c/span\u003e{\n        \u003cspan class=\"hljs-keyword\"\u003e$this\u003c/span\u003e-\u0026gt;email = $email;\n        \u003cspan class=\"hljs-keyword\"\u003ereturn\u003c/span\u003e \u003cspan class=\"hljs-keyword\"\u003e$this\u003c/span\u003e;\n    }\n}\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eThat’s it.\u003c/p\u003e\u003cp\u003eActually, there are some more methods in Guard, but it shouldn’t be complex to create them.\u003c/p\u003e\u003cbr/\u003e\u003cdiv class=\"related-posts\"\u003e\u003chr/\u003e\u003ch3\u003eRelated posts:\u003c/h3\u003e\u003cul class=\"popular-posts\"\u003e\u003cli class=\"popular-posts-item\"\u003e\u003cdiv class=\"popular-posts-title\"\u003e\u003ch3\u003e\u003ca href=\"/Basics-of-sound/\" title=\"Beat detection in Java for Android\" rel=\"bookmark\"\u003eBeat detection in Java for Android\u003c/a\u003e\u003c/h3\u003e\u003c/div\u003e\u003c/li\u003e\u003cli class=\"popular-posts-item\"\u003e\u003cdiv class=\"popular-posts-title\"\u003e\u003ch3\u003e\u003ca href=\"/Nodejs-production-systemd/\" title=\"How to manage Nodejs process using systemd\" rel=\"bookmark\"\u003eHow to manage Nodejs process using systemd\u003c/a\u003e\u003c/h3\u003e\u003c/div\u003e\u003c/li\u003e\u003cli class=\"popular-posts-item\"\u003e\u003cdiv class=\"popular-posts-title\"\u003e\u003ch3\u003e\u003ca href=\"/Telegram-notification-on-SSH-login/\" title=\"Send message to Telegram on any SSH login\" rel=\"bookmark\"\u003eSend message to Telegram on any SSH login\u003c/a\u003e\u003c/h3\u003e\u003c/div\u003e\u003c/li\u003e\u003cli class=\"popular-posts-item\"\u003e\u003cdiv class=\"popular-posts-title\"\u003e\u003ch3\u003e\u003ca href=\"/What-is-Big-O-notation/\" title=\"What is Big-O notation\" rel=\"bookmark\"\u003eWhat is Big-O notation\u003c/a\u003e\u003c/h3\u003e\u003c/div\u003e\u003c/li\u003e\u003cli class=\"popular-posts-item\"\u003e\u003cdiv class=\"popular-posts-title\"\u003e\u003ch3\u003e\u003ca href=\"/android-sms-forwarding/\" title=\"SMS Forwarding - Android App Sends Texts to Webserver\" rel=\"bookmark\"\u003eSMS Forwarding - Android App Sends Texts to Webserver\u003c/a\u003e\u003c/h3\u003e\u003c/div\u003e\u003c/li\u003e\u003c/ul\u003e\u003c/div\u003e\u003cdiv id=\"comment-container\"\u003e\u003c/div\u003e\u003cdiv id=\"disqus_thread\"\u003e\u003c/div\u003e\u003c/div\u003e",
  "Date": "2020-06-13T00:00:00Z",
  "Author": "Konstantin Bogomolov"
}