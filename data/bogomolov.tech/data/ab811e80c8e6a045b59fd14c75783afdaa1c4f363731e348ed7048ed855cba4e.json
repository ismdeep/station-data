{
  "Source": "bogomolov.tech",
  "Title": "SMS Forwarding - Android App Sends Texts to Webserver",
  "Link": "https://bogomolov.tech/android-sms-forwarding/",
  "Content": "\u003cdiv class=\"post-content\"\u003e\u003cimg src=\"/android-sms-forwarding/cover.jpg\" width=\"750px\" class=\"auto-width\" alt=\"Incoming SMS forwarder article cover image\" title=\"Incoming SMS forwarder article cover image\"/\u003e\u003cp\u003eThis Android application is designed to fulfill a simple yet powerful purpose - facilitating the effortless forwarding of any SMS to a designated URL.\u003c/p\u003e\u003cp\u003eImagine scenarios where you wish to send SMS messages directly to the Telegram messenger or automatically transmit SMS containing payment details to your webserver for streamlined money management (by the way, try my simplest \u003ca href=\"https://play.google.com/store/apps/details?id=tech.bogomolov.budget\" target=\"_blank\" rel=\"noopener\"\u003eexpense tracker\u003c/a\u003e). These examples merely scratch the surface of the countless possibilities and use-cases this versatile app has to offer.\u003c/p\u003e\u003cp\u003eThe best part? It’s absolutely free! Say goodbye to pesky ads and concerns about your data privacy. This application is designed with your convenience and security in mind. Furthermore, the app is open-source, allowing you to explore, customize, and contribute to its ongoing development.\u003c/p\u003e\u003cp\u003eReady to unlock the potential of SMS automation? Waste no time, simply click the \u003ca href=\"https://github.com/bogkonstantin/android_income_sms_gateway_webhook/releases\" target=\"_blank\" rel=\"noopener\"\u003elink\u003c/a\u003e to download the latest release and revolutionize your workflow.\u003c/p\u003e\u003ch2 id=\"Understanding-App-Purpose-and-Benefits-for-Your-Needs\"\u003e\u003ca href=\"#Understanding-App-Purpose-and-Benefits-for-Your-Needs\" class=\"headerlink\" title=\"Understanding App Purpose and Benefits for Your Needs\"\u003e\u003c/a\u003eUnderstanding App Purpose and Benefits for Your Needs\u003c/h2\u003e\u003cp\u003eIn the realm of Android phones, the SMS (Short Message Service) plays a crucial role in facilitating communication. However, there are instances where the SMS messages received on your device need to be processed and directed to a webserver for further action. Enter this Android application, which empowers you to effortlessly achieve this.\u003c/p\u003e\u003cp\u003eWith the help of this app, you can seamlessly forward any received text message to your desired API endpoint or any designated website URL in real-time. The application operates by comparing the sender’s name or number against specified parameters. When a match is found, the app promptly initiates the process of forwarding the SMS to the specified URL, ensuring a seamless flow of information.\u003c/p\u003e\u003cp\u003eNo longer will you be limited by the constraints of isolated SMS conversations. This app opens up a world of possibilities by bridging the gap between your Android device and webserver, streamlining data processing and enabling swift action based on incoming SMS messages.\u003c/p\u003e\u003cp\u003eWhether you seek to automate tasks, enhance communication workflows, or simply harness the power of seamless integration, this Android app is your go-to solution. Embrace the future of SMS forwarding and unlock a world of possibilities.\u003c/p\u003e\u003ch2 id=\"How-to-install-the-application\"\u003e\u003ca href=\"#How-to-install-the-application\" class=\"headerlink\" title=\"How to install the application\"\u003e\u003c/a\u003eHow to install the application\u003c/h2\u003e\u003cp\u003eYou can conveniently download the most up-to-date release of this Android application from multiple sources. Simply click the \u003ca href=\"https://github.com/bogkonstantin/android_income_sms_gateway_webhook/releases\" target=\"_blank\" rel=\"noopener\"\u003elink\u003c/a\u003e or use the alternative app store \u003ca href=\"https://f-droid.org/packages/tech.bogomolov.incomingsmsgateway/\" target=\"_blank\" rel=\"noopener\"\u003eF-Droid\u003c/a\u003e.\u003c/p\u003e\u003cp\u003eIt’s important to note that this app is not available on the Play Market. The reason behind this lies in Google’s strict policies regarding apps that require the “read SMS” permission but do not serve as the default SMS handler. As this app focuses solely on forwarding text messages, it does not store or perform other SMS-related functionalities, which prevents it from being utilized as a default SMS handler.\u003c/p\u003e\u003cp\u003e\u003ca href=\"https://support.google.com/googleplay/android-developer/answer/9888170\" target=\"_blank\" rel=\"noopener\"\u003eHere\u003c/a\u003e is a cite from Google Play Policy Center\u003c/p\u003e\u003cblockquote\u003e\u003cp\u003eRestricted Permission:\u003cbr/\u003eSMS permission group (e.g. READ_SMS, SEND_SMS, WRITE_SMS, RECEIVE_SMS, RECEIVE_WAP_PUSH, RECEIVE_MMS)\u003c/p\u003e\u003cp\u003eRequirement:\u003cbr/\u003eIt must be actively registered as the default SMS or Assistant handler on the device.\u003c/p\u003e\u003cp\u003eApps lacking default SMS, Phone, or Assistant handler capability may not declare use of the above permissions in the manifest.\u003c/p\u003e\u003c/blockquote\u003e\u003cp\u003eRest assured, this limitation in no way undermines the app’s effectiveness or value. It remains a powerful tool dedicated to seamless SMS forwarding, ensuring your messages are efficiently directed to their intended destination without compromising the privacy or security of your SMS data.\u003c/p\u003e\u003ch2 id=\"How-to-forward-text-messages\"\u003e\u003ca href=\"#How-to-forward-text-messages\" class=\"headerlink\" title=\"How to forward text messages\"\u003e\u003c/a\u003eHow to forward text messages\u003c/h2\u003e\u003cp\u003eTo get started, begin by installing the application on your device and launching it. Once successfully installed, you can proceed to add new forwarding rules. Simply locate the floating button positioned in the bottom right corner of the app’s interface and give it a press. This action will initiate the process of creating a new forwarding rule tailored to your specific requirements.\u003c/p\u003e\u003cimg src=\"/android-sms-forwarding/1.png\" width=\"270px\" height=\"480px\" class=\"auto-width\" alt=\"Incoming SMS forwarder main screen\" title=\"Incoming SMS forwarder main screen\"/\u003e\u003cp\u003eTo configure your SMS forwarding, enter the sender’s number or name. Typically, the sender’s identifier is a numeric value, but in certain cases, it might be an alphanumeric name. For convenience, it is recommended to copy the sender information from your default SMS messenger application.\u003c/p\u003e\u003cp\u003eIf you wish to forward all incoming SMS messages, simply enter an asterisk (*) instead of a specific number or name.\u003c/p\u003e\u003cp\u003eNext, specify the URL to which you want the text messages to be forwarded. This URL serves as the destination for your forwarded messages. Once you have entered the necessary details, simply press the “ADD” button to create and save the forwarding rule.\u003c/p\u003e\u003cimg src=\"/android-sms-forwarding/2.png\" width=\"270px\" height=\"480px\" class=\"auto-width\" alt=\"Incoming SMS forwarder new forwarding rule dialog\" title=\"Incoming SMS forwarder new forwarding rule dialog\"/\u003e\u003cp\u003eAfter successfully creating a text message forwarding rule, you will find it listed in the app’s interface. This list provides an overview of all your configured forwarding rules for easy management and reference. If you wish to make any modifications or remove a rule altogether, simply locate the corresponding rule in the list and press the “Delete” button.\u003c/p\u003e\u003cimg src=\"/android-sms-forwarding/3.png\" width=\"270px\" height=\"480px\" class=\"auto-width\" alt=\"Incoming SMS forwarder delete forwarding rule dialog\" title=\"Incoming SMS forwarder delete forwarding rule dialog\"/\u003e\u003cp\u003eStarting from this point onward, each incoming SMS will undergo a comparison process with the sender’s specified number or name that you have entered. In the event of a match, the text message will be forwarded to the URL you provided.\u003c/p\u003e\u003cp\u003eIt is important to note that the forwarded message will be sent as a request with a JSON payload. This payload contains the relevant information from the original SMS message. To help you better understand the structure, here is an example of a JSON payload that you can expect:\u003c/p\u003e\u003cpre\u003e\u003ccode class=\"hljs json\"\u003e{\n  \u003cspan class=\"hljs-attr\"\u003e\u0026#34;from\u0026#34;\u003c/span\u003e: \u003cspan class=\"hljs-string\"\u003e\u0026#34;123456789\u0026#34;\u003c/span\u003e,\n  \u003cspan class=\"hljs-attr\"\u003e\u0026#34;text\u0026#34;\u003c/span\u003e: \u003cspan class=\"hljs-string\"\u003e\u0026#34;example SMS content\u0026#34;\u003c/span\u003e\n}\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eIn the event that your phone is not connected to the internet or encounters a temporary loss of connection while attempting to send a forwarded SMS, rest assured that the application is designed to handle such scenarios. Upon the recovery of internet connectivity, the application will automatically initiate up to 10 retry attempts to ensure the successful delivery of the message.\u003c/p\u003e\u003cp\u003eSimilarly, if a request to the provided URL does not yield a successful response (i.e., the response code is not in the 2XX range), the application will also trigger the retry mechanism. This ensures that even if the initial attempt encounters a failure, subsequent attempts will be made to achieve a successful delivery.\u003c/p\u003e\u003cp\u003eTo prevent overwhelming the network or server, there is a delay between each retry attempt. The initial delay is set at a minimum of 10 seconds. Subsequent delays follow an exponential progression, with each delay doubling the previous one. For instance, the second delay will be 20 seconds, the third delay will be 40 seconds, the fourth delay will be 80 seconds, and so on.\u003c/p\u003e\u003cp\u003eFor more detailed information and specific references, you can refer to the App \u003ca href=\"https://github.com/bogkonstantin/android_income_sms_gateway_webhook#incoming-sms-to-url-forwarder\" target=\"_blank\" rel=\"noopener\"\u003erepository\u003c/a\u003e where you can access the actual documentation and source-code of the application.\u003c/p\u003e\u003ch2 id=\"SMS-forwarder-internals-in-Java\"\u003e\u003ca href=\"#SMS-forwarder-internals-in-Java\" class=\"headerlink\" title=\"SMS forwarder internals in Java\"\u003e\u003c/a\u003eSMS forwarder internals in Java\u003c/h2\u003e\u003cp\u003eIf you’re curious about the inner workings of the application and have a familiarity with the Java programming language, this section provides code snippets to shed light on how the app operates internally.\u003c/p\u003e\u003cp\u003eAll relevant files are conveniently located in the \u003ca href=\"https://github.com/bogkonstantin/android_income_sms_gateway_webhook/tree/master/app/src/main/java/tech/bogomolov/incomingsmsgateway\" target=\"_blank\" rel=\"noopener\"\u003emain\u003c/a\u003e folder, ensuring easy access and organization.\u003c/p\u003e\u003cp\u003eUpon launching the app, the initial step involves invoking the \u003ca href=\"https://github.com/bogkonstantin/android_income_sms_gateway_webhook/blob/e38f4642c59859680f9d1ec016cf78cd17e0ab3e/app/src/main/java/tech/bogomolov/incomingsmsgateway/MainActivity.java#L53\" target=\"_blank\" rel=\"noopener\"\u003eonCreate\u003c/a\u003e function. This function serves as the entry point and performs essential tasks. One of the key tasks is checking for the RECEIVE_SMS permission and requesting it if it hasn’t been granted already.\u003c/p\u003e\u003cp\u003eThe subsequent step revolves around rendering the SMS forwarding rules. Each rule consists of a sender’s number or name and a corresponding URL. These rules are managed using the \u003ca href=\"https://github.com/bogkonstantin/android_income_sms_gateway_webhook/blob/master/app/src/main/java/tech/bogomolov/incomingsmsgateway/ForwardingConfig.java\" target=\"_blank\" rel=\"noopener\"\u003eForwardingConfig\u003c/a\u003e class, which acts as an abstraction layer on top of the Android \u003ca href=\"https://developer.android.com/training/data-storage/shared-preferences\" target=\"_blank\" rel=\"noopener\"\u003eSharedPreferences\u003c/a\u003e class.\u003c/p\u003e\u003cp\u003eThe user interface of the app is designed with simplicity in mind, providing an intuitive experience that allows users to effortlessly add or delete forwarding rules according to their preferences.\u003c/p\u003e\u003cp\u003eAnother crucial component of the app is the \u003ca href=\"https://github.com/bogkonstantin/android_income_sms_gateway_webhook/blob/master/app/src/main/java/tech/bogomolov/incomingsmsgateway/SmsReceiver.java\" target=\"_blank\" rel=\"noopener\"\u003eSmsReceiver\u003c/a\u003e. This component is declared as an intent filter in the \u003ca href=\"https://github.com/bogkonstantin/android_income_sms_gateway_webhook/blob/e38f4642c59859680f9d1ec016cf78cd17e0ab3e/app/src/main/AndroidManifest.xml#L31\" target=\"_blank\" rel=\"noopener\"\u003eAndroidManifest.xml\u003c/a\u003e file, enabling it to listen for incoming SMS messages.\u003c/p\u003e\u003cp\u003eWhen your phone receives an SMS, the onReceive function within the SmsReceiver class is triggered. This function plays a pivotal role in processing the received SMS. It retrieves the existing forwarding rules and proceeds to determine if the received text message matches any of the defined rules, ensuring that the message is appropriately handled based on the defined criteria.\u003c/p\u003e\u003cpre\u003e\u003ccode class=\"hljs java\"\u003eString sender = message.getOriginatingAddress();\n\n\u003cspan class=\"hljs-keyword\"\u003efor\u003c/span\u003e (ForwardingConfig config : configs) {\n    \u003cspan class=\"hljs-keyword\"\u003eif\u003c/span\u003e (sender.equals(config.getSender()) || config.getSender().equals(asterisk)) {\n        JSONObject messageJson = \u003cspan class=\"hljs-keyword\"\u003ethis\u003c/span\u003e.prepareMessage(sender, message.getMessageBody());\n        \u003cspan class=\"hljs-keyword\"\u003ethis\u003c/span\u003e.callWebHook(config.getUrl(), messageJson.toString());\n    }\n}\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eFollowing the matching of the received text message with a forwarding rule, the subsequent step involves sending the text message to the designated URL. To accomplish this task, the app utilizes the \u003ca href=\"https://developer.android.com/topic/libraries/architecture/workmanager\" target=\"_blank\" rel=\"noopener\"\u003eWorkManager\u003c/a\u003e, which offers several advantages. One notable advantage is that tasks scheduled through WorkManager are designed to persist and continue running even if the app is closed or the phone restarts. This ensures reliable message forwarding and convenient handling of retry attempts in various scenarios.\u003c/p\u003e\u003cp\u003eWithin the app’s architecture, the SmsReceiver class passes the URL and text message to the \u003ca href=\"https://github.com/bogkonstantin/android_income_sms_gateway_webhook/blob/master/app/src/main/java/tech/bogomolov/incomingsmsgateway/WebHookWorkRequest.java\" target=\"_blank\" rel=\"noopener\"\u003eWebHookWorkRequest\u003c/a\u003e class. This class is responsible for constructing the work request that specifies the necessary conditions and constraints for performing the web hook task.\u003c/p\u003e\u003cp\u003eSpecifically, the WebHookWorkRequest is built with a NetworkType.CONNECTED constraint. This means that a working network connection is a prerequisite for the query to be executed, ensuring that the message forwarding process is carried out only when a network connection is available.\u003c/p\u003e\u003cp\u003eTo optimize the retry mechanism, a backoff criteria is implemented. This criteria includes a minimum delay of at least 10 seconds between retry attempts, with subsequent delays increasing exponentially. The simplified exponential function used for calculating the delays follows a pattern of progressive doubling, ensuring progressively longer intervals between each retry attempt.\u003c/p\u003e\u003cp\u003eThe simplified exponential function looks like this:\u003c/p\u003e\u003cpre\u003e\u003ccode class=\"hljs plain\"\u003eMath.scalb(10, attempt - 1)\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eOnce the app initiates the request to the specified URL, it proceeds to evaluate the outcome of the forwarding rule. In the event that the URL is not in the correct format or other errors are detected within the forwarding rule itself, the WebHookWorkRequest class will not proceed with any further attempts. This ensures that potential issues within the rule configuration are addressed and resolved before subsequent forwarding attempts are made.\u003c/p\u003e\u003cp\u003eHowever, if the app encounters a network error during the request or receives an error response code from the server, the WorkManager framework steps in and schedules a \u003ca href=\"https://github.com/bogkonstantin/android_income_sms_gateway_webhook/blob/e38f4642c59859680f9d1ec016cf78cd17e0ab3e/app/src/main/java/tech/bogomolov/incomingsmsgateway/WebHookWorkRequest.java#L50\" target=\"_blank\" rel=\"noopener\"\u003eretry\u003c/a\u003e. This retry mechanism ensures that temporary network disruptions or server-related issues do not hinder the successful delivery of the message. WorkManager handles the retry process, providing a reliable and efficient approach to handle temporary setbacks.\u003c/p\u003e\u003ch2 id=\"Afterword\"\u003e\u003ca href=\"#Afterword\" class=\"headerlink\" title=\"Afterword\"\u003e\u003c/a\u003eAfterword\u003c/h2\u003e\u003cp\u003eThis explanation provides a simplified overview of the app’s functionality, accompanied by code samples. If you are interested in delving deeper and exploring the complete source code of the SMS forwarder, feel free to explore the available \u003ca href=\"https://github.com/bogkonstantin/android_income_sms_gateway_webhook\" target=\"_blank\" rel=\"noopener\"\u003esource code\u003c/a\u003e. Accessing the source code will provide you with a comprehensive understanding of the implementation details and further insights into the app’s functionality and capabilities.\u003c/p\u003e\u003cbr/\u003e\u003cdiv class=\"related-posts\"\u003e\u003chr/\u003e\u003ch3\u003eRelated posts:\u003c/h3\u003e\u003cul class=\"popular-posts\"\u003e\u003cli class=\"popular-posts-item\"\u003e\u003cdiv class=\"popular-posts-title\"\u003e\u003ch3\u003e\u003ca href=\"/Facebook-Log-Id-Symfony/\" title=\"Implement Facebook login button with Symfony\" rel=\"bookmark\"\u003eImplement Facebook login button with Symfony\u003c/a\u003e\u003c/h3\u003e\u003c/div\u003e\u003c/li\u003e\u003cli class=\"popular-posts-item\"\u003e\u003cdiv class=\"popular-posts-title\"\u003e\u003ch3\u003e\u003ca href=\"/Basics-of-sound/\" title=\"Beat detection in Java for Android\" rel=\"bookmark\"\u003eBeat detection in Java for Android\u003c/a\u003e\u003c/h3\u003e\u003c/div\u003e\u003c/li\u003e\u003cli class=\"popular-posts-item\"\u003e\u003cdiv class=\"popular-posts-title\"\u003e\u003ch3\u003e\u003ca href=\"/Nodejs-production-systemd/\" title=\"How to manage Nodejs process using systemd\" rel=\"bookmark\"\u003eHow to manage Nodejs process using systemd\u003c/a\u003e\u003c/h3\u003e\u003c/div\u003e\u003c/li\u003e\u003cli class=\"popular-posts-item\"\u003e\u003cdiv class=\"popular-posts-title\"\u003e\u003ch3\u003e\u003ca href=\"/Telegram-notification-on-SSH-login/\" title=\"Send message to Telegram on any SSH login\" rel=\"bookmark\"\u003eSend message to Telegram on any SSH login\u003c/a\u003e\u003c/h3\u003e\u003c/div\u003e\u003c/li\u003e\u003cli class=\"popular-posts-item\"\u003e\u003cdiv class=\"popular-posts-title\"\u003e\u003ch3\u003e\u003ca href=\"/What-is-Big-O-notation/\" title=\"What is Big-O notation\" rel=\"bookmark\"\u003eWhat is Big-O notation\u003c/a\u003e\u003c/h3\u003e\u003c/div\u003e\u003c/li\u003e\u003c/ul\u003e\u003c/div\u003e\u003cdiv id=\"comment-container\"\u003e\u003c/div\u003e\u003cdiv id=\"disqus_thread\"\u003e\u003c/div\u003e\u003c/div\u003e",
  "Date": "2021-05-27T00:00:00Z",
  "Author": "Konstantin Bogomolov"
}