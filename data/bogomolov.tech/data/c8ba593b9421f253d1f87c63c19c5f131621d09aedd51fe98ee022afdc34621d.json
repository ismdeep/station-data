{
  "Source": "bogomolov.tech",
  "Title": "How to manage Nodejs process using systemd",
  "Link": "https://bogomolov.tech/Nodejs-production-systemd/",
  "Content": "\u003cdiv class=\"post-content\"\u003e\u003cp\u003eThis is a tutorial on how to configure systemd unit to run Nodejs application.\u003c/p\u003e\u003ch2 id=\"What-is-a-process-manager\"\u003e\u003ca href=\"#What-is-a-process-manager\" class=\"headerlink\" title=\"What is a process manager\"\u003e\u003c/a\u003eWhat is a process manager\u003c/h2\u003e\u003cp\u003eSo you make a Node.js application and want to run it on a production web server. How to do that? You can simply run a command like \u003ccode\u003enode yourapp.js\u003c/code\u003e in a bash terminal. But what if the app crashes? In that case, to automatically restart on crashes, you need a process manager. It will control your Node.js application and provide you the ability to monitor it.\u003c/p\u003e\u003cp\u003eThe most well-known Node.js process manager is a \u003ca href=\"https://github.com/Unitech/pm2\" target=\"_blank\" rel=\"noopener\"\u003epm2\u003c/a\u003e. But if you use modern Linux, you already have a systemd process manager without any additional installation.\u003c/p\u003e\u003ch2 id=\"What-is-a-systemd\"\u003e\u003ca href=\"#What-is-a-systemd\" class=\"headerlink\" title=\"What is a systemd\"\u003e\u003c/a\u003eWhat is a systemd\u003c/h2\u003e\u003cp\u003esystemd is an initialization system and service manager. It is using to run and manage services and daemons.\u003c/p\u003e\u003cul\u003e\u003cli\u003eA service is a program that responds to requests from other programs.\u003c/li\u003e\u003cli\u003eA daemon is a background and non-interactive program.\u003c/li\u003e\u003c/ul\u003e\u003cp\u003eIn systemd services are called units and configured using unit files. Each unit file should have a suffix service. So let’s do some practice and create a unit file.\u003c/p\u003e\u003ch2 id=\"How-to-create-a-unit-file\"\u003e\u003ca href=\"#How-to-create-a-unit-file\" class=\"headerlink\" title=\"How to create a unit file\"\u003e\u003c/a\u003eHow to create a unit file\u003c/h2\u003e\u003cp\u003eCreate a new file and open it for editing. I am using a CLI nano text editor. You can use any.\u003c/p\u003e\u003cpre\u003e\u003ccode class=\"hljs bash\"\u003esudo nano /etc/systemd/system/my_node_app.service\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eThen put the following content to this file. I will describe the main points below.\u003c/p\u003e\u003cpre\u003e\u003ccode class=\"hljs bash\"\u003e[Unit]\nDescription=my_node_app.js - app description here\nDocumentation=https://bogomolov.tech\nAfter=network.target\n\n[Service]\nEnvironment=NODE_PORT=3001\nEnvironment=APP_NAME=\u003cspan class=\"hljs-string\"\u003e\u0026#34;test\u0026#34;\u003c/span\u003e\nType=simple\nUser=ubuntu\nExecStart=/usr/bin/node /home/my_node_app/app.js\nRestart=on-failure\n\n[Install]\nWantedBy=multi-user.target\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eSo there are main points in this file:\u003c/p\u003e\u003cul\u003e\u003cli\u003e“After” tells systemd when to start your Node.js app after the machine boots. network.target means systemd should wait until the main networking functionality is loaded. We need that because we can’t bind Node’s app port until the network is up and running.\u003c/li\u003e\u003cli\u003e“Type=simple” tells systemd how our application loads. systemd just fork the process and run it.\u003c/li\u003e\u003cli\u003e“Restart=on-failure” tells by itself. If there is any application crash, it will restart automatically.\u003c/li\u003e\u003c/ul\u003e\u003cp\u003eRead the \u003ca href=\"https://www.freedesktop.org/software/systemd/man/systemd.service.html\" target=\"_blank\" rel=\"noopener\"\u003edocumentation\u003c/a\u003e if you need other options or more details.\u003c/p\u003e\u003ch2 id=\"Apply-configuration-and-start-service\"\u003e\u003ca href=\"#Apply-configuration-and-start-service\" class=\"headerlink\" title=\"Apply configuration and start service\"\u003e\u003c/a\u003eApply configuration and start service\u003c/h2\u003e\u003cp\u003eThe next step is to apply this unit. There is systemctl command for management systemd. Let’s reload systemd daemon at first. You have to do this every time you change service files.\u003c/p\u003e\u003cpre\u003e\u003ccode class=\"hljs bash\"\u003esudo systemctl daemon-reload\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eThen start the newly created service using the command below.\u003c/p\u003e\u003cpre\u003e\u003ccode class=\"hljs bash\"\u003esudo systemctl start my_node_app\u003c/code\u003e\u003c/pre\u003e\u003ch2 id=\"Some-useful-systemctl-commands\"\u003e\u003ca href=\"#Some-useful-systemctl-commands\" class=\"headerlink\" title=\"Some useful systemctl commands\"\u003e\u003c/a\u003eSome useful systemctl commands\u003c/h2\u003e\u003cp\u003eTo start a systemd service use the start command:\u003c/p\u003e\u003cpre\u003e\u003ccode class=\"hljs bash\"\u003esudo systemctl start application.service\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eAnd a short variant, without service suffix:\u003c/p\u003e\u003cpre\u003e\u003ccode class=\"hljs bash\"\u003esudo systemctl start application\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eTo stop the service use this command:\u003c/p\u003e\u003cpre\u003e\u003ccode class=\"hljs bash\"\u003esudo systemctl stop application.service\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eThe next two commands allow you to restart or reload the service. Reload tells the service to reload its configuration files. Restart will shut down the application and then restart it.\u003c/p\u003e\u003cpre\u003e\u003ccode class=\"hljs bash\"\u003esudo systemctl reload application.service\nsudo systemctl restart application.service\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eTo start the service automatically at the boot, you must enable it, using the next command:\u003c/p\u003e\u003cpre\u003e\u003ccode class=\"hljs bash\"\u003esudo systemctl \u003cspan class=\"hljs-built_in\"\u003eenable\u003c/span\u003e application.service\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eEnabling a service does not start it. This command will create a symbolic link from the system’s copy of the service file, usually located in /lib/systemd/system or /etc/systemd/system, into the location on a disk where systemd looks for autostart files, for example,/etc/systemd/system/network-online.target.wants\u003c/p\u003e\u003cp\u003eTo disable the service from starting automatically, use the next command:\u003c/p\u003e\u003cpre\u003e\u003ccode class=\"hljs bash\"\u003esudo systemctl \u003cspan class=\"hljs-built_in\"\u003edisable\u003c/span\u003e application.service\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eThe next command will show you the status of your application:\u003c/p\u003e\u003cpre\u003e\u003ccode class=\"hljs bash\"\u003esudo systemctl status application.service\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eAnd the last command here is to see the service logs, using journalctl.\u003c/p\u003e\u003cpre\u003e\u003ccode class=\"hljs bash\"\u003esudo journalctl -u application\u003c/code\u003e\u003c/pre\u003e\u003ch2 id=\"Afterword\"\u003e\u003ca href=\"#Afterword\" class=\"headerlink\" title=\"Afterword\"\u003e\u003c/a\u003eAfterword\u003c/h2\u003e\u003cp\u003eIt was the simplified basics to start using systemd as a process manager for your Node.js application.\u003cbr/\u003eRead \u003ca href=\"https://man7.org/linux/man-pages/man1/journalctl.1.html\" target=\"_blank\" rel=\"noopener\"\u003ejournalctl\u003c/a\u003e or \u003ca href=\"https://www.freedesktop.org/software/systemd/man/systemctl.html\" target=\"_blank\" rel=\"noopener\"\u003esystemctl\u003c/a\u003e documentation to know more details.\u003c/p\u003e\u003cbr/\u003e\u003cdiv class=\"related-posts\"\u003e\u003chr/\u003e\u003ch3\u003eRelated posts:\u003c/h3\u003e\u003cul class=\"popular-posts\"\u003e\u003cli class=\"popular-posts-item\"\u003e\u003cdiv class=\"popular-posts-title\"\u003e\u003ch3\u003e\u003ca href=\"/Facebook-Log-Id-Symfony/\" title=\"Implement Facebook login button with Symfony\" rel=\"bookmark\"\u003eImplement Facebook login button with Symfony\u003c/a\u003e\u003c/h3\u003e\u003c/div\u003e\u003c/li\u003e\u003cli class=\"popular-posts-item\"\u003e\u003cdiv class=\"popular-posts-title\"\u003e\u003ch3\u003e\u003ca href=\"/Basics-of-sound/\" title=\"Beat detection in Java for Android\" rel=\"bookmark\"\u003eBeat detection in Java for Android\u003c/a\u003e\u003c/h3\u003e\u003c/div\u003e\u003c/li\u003e\u003cli class=\"popular-posts-item\"\u003e\u003cdiv class=\"popular-posts-title\"\u003e\u003ch3\u003e\u003ca href=\"/Telegram-notification-on-SSH-login/\" title=\"Send message to Telegram on any SSH login\" rel=\"bookmark\"\u003eSend message to Telegram on any SSH login\u003c/a\u003e\u003c/h3\u003e\u003c/div\u003e\u003c/li\u003e\u003cli class=\"popular-posts-item\"\u003e\u003cdiv class=\"popular-posts-title\"\u003e\u003ch3\u003e\u003ca href=\"/What-is-Big-O-notation/\" title=\"What is Big-O notation\" rel=\"bookmark\"\u003eWhat is Big-O notation\u003c/a\u003e\u003c/h3\u003e\u003c/div\u003e\u003c/li\u003e\u003cli class=\"popular-posts-item\"\u003e\u003cdiv class=\"popular-posts-title\"\u003e\u003ch3\u003e\u003ca href=\"/android-sms-forwarding/\" title=\"SMS Forwarding - Android App Sends Texts to Webserver\" rel=\"bookmark\"\u003eSMS Forwarding - Android App Sends Texts to Webserver\u003c/a\u003e\u003c/h3\u003e\u003c/div\u003e\u003c/li\u003e\u003c/ul\u003e\u003c/div\u003e\u003cdiv id=\"comment-container\"\u003e\u003c/div\u003e\u003cdiv id=\"disqus_thread\"\u003e\u003c/div\u003e\u003c/div\u003e",
  "Date": "2021-09-26T00:00:00Z",
  "Author": "Konstantin Bogomolov"
}