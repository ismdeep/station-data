{
  "Source": "bou.ke",
  "Title": "Getting TLS certs locally because why not",
  "Link": "https://bou.ke/blog/lets-tls/",
  "Content": "\u003cdiv class=\"content\"\u003e\n\u003cdiv class=\"post\"\u003e\n  \u003ch1\u003eGetting TLS certs locally because why not\u003c/h1\u003e\n  \u003cp\u003eI have the domain \u003ccode class=\"language-plaintext highlighter-rouge\"\u003ebouke.dev\u003c/code\u003e that I use for serving local content—for example, to run \u003ca href=\"https://jekyllrb.com\" target=\"_blank\"\u003eJekyll\u003c/a\u003e on my machine. I have set up the DNS to point \u003ccode class=\"language-plaintext highlighter-rouge\"\u003e*.bouke.dev\u003c/code\u003e and \u003ccode class=\"language-plaintext highlighter-rouge\"\u003ebouke.dev\u003c/code\u003e to \u003ccode class=\"language-plaintext highlighter-rouge\"\u003e127.0.0.1\u003c/code\u003e. Because I was bored I decided to serve it over TLS as well, here’s how to do that:\u003c/p\u003e\n\n\u003col\u003e\n  \u003cli\u003eInstall \u003ca href=\"https://go-acme.github.io/lego/\" target=\"_blank\"\u003eLego\u003c/a\u003e: \u003ccode class=\"language-plaintext highlighter-rouge\"\u003ego get -u github.com/go-acme/lego/v4/cmd/lego\u003c/code\u003e\u003c/li\u003e\n  \u003cli\u003eFigure out how to configure it for your DNS Provider by \u003ca href=\"https://go-acme.github.io/lego/dns/\" target=\"_blank\"\u003ereading the docs\u003c/a\u003e\u003c/li\u003e\n  \u003cli\u003eRun \u003ccode class=\"language-plaintext highlighter-rouge\"\u003elego\u003c/code\u003e from your home directory, e.g. \u003ccode class=\"language-plaintext highlighter-rouge\"\u003elego --accept-tos -d \u0026#39;*.bouke.dev\u0026#39; -d \u0026#39;bouke.dev\u0026#39; -m \u0026lt;email\u0026gt; --dns namecheap run\u003c/code\u003e\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003cp\u003eYou should now have valid certificates under \u003ccode class=\"language-plaintext highlighter-rouge\"\u003e~/.lego/certificates\u003c/code\u003e. For example, I have one called \u003ccode class=\"language-plaintext highlighter-rouge\"\u003e~/.lego/certificates/_.bouke.dev.crt\u003c/code\u003e.\u003c/p\u003e\n\n\u003ch2 id=\"renewal\"\u003eRenewal\u003c/h2\u003e\n\n\u003cp\u003eYou should consider certificates unreliable, unless you have a renewal process in place! So, I created the following file in \u003ccode class=\"language-plaintext highlighter-rouge\"\u003e~/bin/update-cert\u003c/code\u003e:\u003c/p\u003e\n\n\u003cdiv class=\"language-sh highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"c\"\u003e#!/usr/bin/env bash\u003c/span\u003e\n\u003cspan class=\"nb\"\u003ecd\u003c/span\u003e \u003cspan class=\"nv\"\u003e$HOME\u003c/span\u003e\n\u003cspan class=\"nb\"\u003eexport \u003c/span\u003e\u003cspan class=\"nv\"\u003eNAMECHEAP_API_KEY\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e...\n\u003cspan class=\"nb\"\u003eexport \u003c/span\u003e\u003cspan class=\"nv\"\u003eNAMECHEAP_API_USER\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e...\n\u003cspan class=\"nb\"\u003eexec \u003c/span\u003elego \u003cspan class=\"nt\"\u003e--accept-tos\u003c/span\u003e \u003cspan class=\"nt\"\u003e-d\u003c/span\u003e \u003cspan class=\"s1\"\u003e\u0026#39;*.bouke.dev\u0026#39;\u003c/span\u003e \u003cspan class=\"nt\"\u003e-d\u003c/span\u003e \u003cspan class=\"s1\"\u003e\u0026#39;bouke.dev\u0026#39;\u003c/span\u003e \u003cspan class=\"nt\"\u003e-m\u003c/span\u003e \u0026lt;email\u0026gt; \u003cspan class=\"nt\"\u003e--dns\u003c/span\u003e namecheap renew\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003eDon’t forget to make it executable with \u003ccode class=\"language-plaintext highlighter-rouge\"\u003echmod +x ~/bin/update-cert\u003c/code\u003e. Then just add it to your crontab by running \u003ccode class=\"language-plaintext highlighter-rouge\"\u003ecrontab -e\u003c/code\u003e and adding:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode class=\"language-cron\"\u003e@daily $HOME/bin/update-certs\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eNow \u003ccode class=\"language-plaintext highlighter-rouge\"\u003elego\u003c/code\u003e will run daily, and keep your certificate nice and fresh. Cool!\u003c/p\u003e\n\n\u003ch2 id=\"sharing-is-caring\"\u003eSharing is caring\u003c/h2\u003e\n\n\u003cp\u003eThis process can also be used for certificates that need to be shared with other people. You can set-up a monthly scheduled job with GitHub Actions or Google Cloud Scheduler that runs something like this:\u003c/p\u003e\n\n\u003cdiv class=\"language-sh highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003elego \u003cspan class=\"nt\"\u003e--accept-tos\u003c/span\u003e \u003cspan class=\"nt\"\u003e--domains\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003eexample.dev \u003cspan class=\"nt\"\u003e--email\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003ecerts@example.com \u003cspan class=\"nt\"\u003e--dns\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003egcloud \u003cspan class=\"nt\"\u003e--pem\u003c/span\u003e \u003cspan class=\"nt\"\u003e--path\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003elego run\ngcloud secrets versions add projects/xxx/secrets/star-company-dev-cert \u003cspan class=\"nt\"\u003e--data-file\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003elego/certificates/_.company.dev.pem\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003eAnd now you can have a certificate that can be used by anyone who has access to the secret. Or if you don’t care that much you could even commit it directly to the repository automatically, since it’s just for local development anyways.\u003c/p\u003e\n\n  \u003cp\u003e\u003cspan class=\"date\"\u003eJan 2021\u003c/span\u003e\u003c/p\u003e\n\u003c/div\u003e\n\u003c/div\u003e",
  "Date": "2021-01-01T00:00:00Z",
  "Author": "bou.ke"
}