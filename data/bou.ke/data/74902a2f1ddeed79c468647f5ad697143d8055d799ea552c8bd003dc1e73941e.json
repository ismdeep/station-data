{
  "Source": "bou.ke",
  "Title": "WWDC 2020",
  "Link": "https://bou.ke/blog/wwdc-2020/",
  "Content": "\u003cdiv class=\"content\"\u003e\n\u003cdiv class=\"post\"\u003e\n  \u003ch1\u003eWWDC 2020\u003c/h1\u003e\n  \u003cp\u003eI followed WWDC this year more closely than other years, since \u003ca href=\"https://gizmopack.app\" target=\"_blank\"\u003eI released an app\u003c/a\u003e (hope to blog about that soon). Here’s some of my thoughts.\u003c/p\u003e\n\n\u003ch2 id=\"the-format-was-fantastic\"\u003eThe format was fantastic\u003c/h2\u003e\n\n\u003cp\u003eThe quality blew me away. In previous years you probably didn’t have as good as an experience as in-person, but this year they elevated the production to incredible heights. The keynote was edited together beautifully with amazing transition shots, but what’s been great is that all the session videos are super high-quality. I wonder what kind of speaking training they give the developers that do the videos, because all the ones I’ve watched articulated everything clearly, including well-timed awkward jokes. I’m sure some of these videos took many takes but it came out very well.\u003c/p\u003e\n\n\u003cp\u003eApple decided to release a portion of the sessions every day, instead of dropping them all at once. I think that was a great choice, because it makes it possible to just watch a couple every day, giving you a real ‘conference’ feeling because you’re not daunted by a huge playlist, but can rather sample from what’s available on a certain day. A lot of the sessions are also shorter than in previous years, which makes it easier to watch one in between things.\u003c/p\u003e\n\n\u003ch2 id=\"apples-product-management-leaves-me-speechless\"\u003eApple’s product management leaves me speechless\u003c/h2\u003e\n\n\u003cp\u003eThis year Apple introduced widgets for the iPhone. The way widgets work, is that your app creates a SwiftUI view which is serialized and presented at a later time, without your application running in the background. This is done so there is no battery impact from widgets.\u003c/p\u003e\n\n\u003cp\u003e\u003cem\u003eHow\u003c/em\u003e did Apple manage to plan this? Widgets requires SwiftUI, which depends on a series of Swift core language features. I am very curious how far in advance they planned this and prepared to work on compiler features, so they could implement widgets efficiently later down the line. The prerequisites seem overwhelming.\u003c/p\u003e\n\n\u003ch2 id=\"what-now\"\u003eWhat now?\u003c/h2\u003e\n\n\u003cp\u003eAll this new stuff is very inspirational. I’m considering building support for making your own widgets into GizmoPack, or possibly having it as another app. The idea being that you would be able to use the background execution of shortcuts to program your own widget. You could have it fetch an RSS feed and display the items for example.\u003c/p\u003e\n\n\u003cp\u003eI’m a bit unsure about how far to take this—I imagine having some presets at least so you can have a single tappable image, an image with a title and a subtitle, a big list of items. But what if I just go all the way and make it possible to program a complete SwiftUI tree with JSON? Then users could customize the UI as deeply as they want, at the expense of usability.\u003c/p\u003e\n\n\u003cp\u003eAfter this idea, my mind starts branching out into other possibilities. I could enable people to create their own complications for the Apple Watch, to create whole apps by generating SwiftUI on-device. I could even push a widget’s content from a webhook.\u003c/p\u003e\n\n\u003ch2 id=\"future\"\u003eFuture\u003c/h2\u003e\n\n\u003cp\u003eWhat would be rad for a future version of iOS is expanding the possibilities for apps to call shortcuts. I want users to be able to program a shortcut as an extension to any application. What if you could add your own button to Pages that would execute a shortcut and paste in the result? The integration points can be increased endlessly, turning iOS into an infinitely customizable operating system. It would not become too complicated however, since all the extensions would have the same programming model for the user.\u003c/p\u003e\n\n\u003cp\u003eOh and Shortcuts for macOS plz.\u003c/p\u003e\n\n  \u003cp\u003e\u003cspan class=\"date\"\u003eJun 2020\u003c/span\u003e\u003c/p\u003e\n\u003c/div\u003e\n\u003c/div\u003e",
  "Date": "2020-06-01T00:00:00Z",
  "Author": "bou.ke"
}