{
  "Source": "bou.ke",
  "Title": "CVE-2021-1831 Shortcuts File Read Outside of Sandbox",
  "Link": "https://bou.ke/blog/cve-2021-1831/",
  "Content": "\u003cdiv class=\"content\"\u003e\n\u003cdiv class=\"post\"\u003e\n  \u003ch1\u003eCVE-2021-1831 Shortcuts File Read Outside of Sandbox\u003c/h1\u003e\n  \u003cp\u003eiOS 14.5 included a security fix for a security issue I reported. The vulnerability is in the Shortcuts framework, which allows apps to add additional actions to Shortcuts. The issue is in \u003ca href=\"https://developer.apple.com/documentation/sirikit/infile/3152216-init\" target=\"_blank\"\u003eINFile.init(fileURL:filename:typeIdentifier:)\u003c/a\u003e, which allows the extension to return a file. The problem is there is no check that \u003ccode class=\"language-plaintext highlighter-rouge\"\u003efileURL\u003c/code\u003e is within the app sandbox of the app extension, so the extension can expose files within the sandbox of Shortcuts, making it possible to read and write files that the user should not have access to.\u003c/p\u003e\n\n\u003cp\u003eThe impact of this is not very big, you can’t edit the settings files of Shortcuts for example because those have an additional sandboxing measure applied to them. It mostly allowed for reading some files in the Shortcuts cache, which could leak cached location data for example.\u003c/p\u003e\n\n\u003cp\u003eIt was a fun vulnerability to find! Besides \u003ca href=\"https://support.apple.com/en-us/HT212317\" target=\"_blank\"\u003ean acknowledgement\u003c/a\u003e in the release notes I didn’t get any reward for it, which considering the small impact is fair in my opinion. I do think that because of the pervasiveness of the Shortcuts framework (it’s basically integrated everywhere at this point) that there is still other vulnerabilities to find.\u003c/p\u003e\n\n  \u003cp\u003e\u003cspan class=\"date\"\u003eMay 2021\u003c/span\u003e\u003c/p\u003e\n\u003c/div\u003e\n\u003c/div\u003e",
  "Date": "2021-05-01T00:00:00Z",
  "Author": "bou.ke"
}