{
  "Source": "coolshell.cn",
  "Title": "编程命名中的7+1个提示",
  "Link": "https://coolshell.cn/articles/1038.html",
  "Content": "\u003cdiv class=\"entry-content\"\u003e\n\u003cp\u003e\u003cscript async=\"\" src=\"https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3415450859608158\" crossorigin=\"anonymous\" type=\"29ed547a42c1e3d260eac57b-text/javascript\"\u003e\u003c/script\u003e前几天Neo写过《\u003ca title=\"编程中的命名设计那点事\" href=\"https://coolshell.cn/articles/990.html\"\u003e编程中的命名设计那点事\u003c/a\u003e》，这里也有另外一篇和程序命名的文章，可以从另一个角度看看。\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003e1.- 变量应该是尽可能的望文知意。千万不要使用教材中的命名方式。\u003c/strong\u003e\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003cstrong\u003e好的变量\u003c/strong\u003e：\u003cstrong\u003e \u003c/strong\u003edaysDateRange, flightNumber, carColor.\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003e坏的变量\u003c/strong\u003e： days, dRange, temp, data, aux…\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e在我们的日常工作中，有很大数量的开发人员喜欢使用短的变量名，而不是有含义的变量名。这主要是因为我们大学教科书的那些示例所造成的，人都是先入为主，所以，教科书中的那些很抽象，带着演示的变量命名影响了我们一代又一代的程序员，并影响了他们很多年。虽然那些短的，教材式的变量名，可能会让你少打一些字，但其实，这是非常非常不好的。因为软件的维护成本远远大于了软件的开发成本，如果你不取一个好的一点的变量名，那么当进行代码评审时，当进行bug fixing时，当进行代码重构时，当进行代码维护时，你的某个变量名可能会让你一头雾水，不知道所措，还可以会让你走入陷阱，造成更大的时间成本。所以，一个可阅读的代码必然和那些不错的变量名分不开，而这也能让你的软件间接上有更好的质量。\u003c/p\u003e\n\u003cp\u003e\u003cspan id=\"more-1038\"\u003e\u003c/span\u003e\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003e2.- 变量名不要太长，尽可能地简短\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003e只有简单和简短的变量名才是容易阅读的。因为你的变量名一定会用于程序语句中，所以，为了让你的程序语句看起来的简短，你的变量名也应该短一点，不然写出来的一个表达式就会显得很复杂。\u003c/p\u003e\n\u003cp\u003e当然，在有些时候，一个有含义的变量名和一个简短的变量名可能存在一些冲突。这相当锻炼我们的语言能力——如果有最精炼的词语来表达最丰富的含义。如果实在做不到，那么，取一个有含义的变量名要比取一个简短的变量名更好一些。不管怎么样，我们希望即简短又有丰富的含义，但如果不能两全，那有含义优先级更高一些。\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003cstrong\u003e坏的变量\u003c/strong\u003e：howLonDoesItTakeToOpenTheDoor， howBigIsTheMaterial…\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003e好的变量\u003c/strong\u003e：timeToOpenTheDoor， MaterialSize.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e\u003cstrong\u003e3.- 可以使用缩写，但需要有一些注释\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003e有一些时候，我们需要使用一些缩写来命名变量，比如：用usr来表示user，用gp来表示group，用conf来表示configuration，用cwd来表示current working directory，用ptr来代码point to reference，等等，等等。缩写一般要用在大家可以看得懂的，而不是为了缩写而缩短一个单词，当然，如果你把缩写后的变量名加上注释，那就更加稳妥了。关于一些约定俗成的缩写，可参看本文的\u003cstrong\u003e附录一\u003c/strong\u003e。\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003e4.- 使用合适的匈牙利命名规则\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003e这里有一篇非常不错的英文文章告诉你 《\u003ca onclick=\"if (!window.__cfRLUnblockHandlers) return false; pageTracker._trackPageview(\u0026#39;/outgoing/www.joelonsoftware.com/articles/Wrong.html\u0026#39;);\" href=\"http://www.joelonsoftware.com/articles/Wrong.html\" target=\"_blank\" data-cf-modified-29ed547a42c1e3d260eac57b-=\"\"\u003e什么是合适的匈牙利命名\u003c/a\u003e 》，这篇文章同时还告诉你如何去用他。基本上来说，匈牙利命名法主要是为变量加上某种前缀以标识这个变量的类型，或是一种方法的功能。其基本原则是：变量名＝属性＋类型＋对象描述。\u003c/p\u003e\n\u003cp\u003e比如：在描述类型方面：指针p，函数fn，长整型 l，布尔b，浮点型（有时也指文件）f，双字 dw，字符串 sz，短整型 n，双精度浮点 d，无符号 u……等等。关于更多的命名规范，请参见\u003cstrong\u003e附录二\u003c/strong\u003e。\u003c/p\u003e\n\u003cp\u003e注意，匈牙利命名也是有不好的地方的，比如你要把一个整形改成一个浮点型，你除了要改变这个变量的类型，你还要改变这个变量的名字。这是相当麻烦的。而且，在某些时候，这种前缀式的命名可以反而让你不知所措。另外，在C++中，有了类以后，这种命名方法就显得不容易去实施了。所以，合适地使用匈牙利命名方式背后的思想是很关键的。\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003e5.- 不要使用反逻辑来命名\u003c/strong\u003e\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003cstrong\u003e好的命名\u003c/strong\u003e：  IsEnabled.\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003e坏的命名：\u003c/strong\u003e IsNotEnabled.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e在阅读的时候，我们更喜欢正向的逻辑，而不是反向逻辑。这一规则不单单的命名，在条件语句中，我们也是要尽量不要使用这种反面的逻辑。如：if (! (isAdmin || isUser))，这样的语句很不符合人读代码的习惯，写成这样会更好一些——if (!isAdmin \u0026amp;\u0026amp; !isUser)。\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003e6.- 保持一致性\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003e保持所有代码的一致性。使用相同的命名规则。这外世界上没有最好的命名规范。但有一点是可以确认的，那就是在一个代码库中，应该使用一致的命名规则，即使这个规则不那么好，但整个团队使用一致的就是好的。\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003e7.- 附和应用程序的领域术语\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003e在不同的领域中，不同的观念会有非常特别和不同的意思。例如：单词“order”并不总是意味着“次顺”，有些时候，其意味着“订单”，有些时候，意味着“命令”，有些时候，意为着“规则”。所以，在某个领域中，某些单词会有不同的含义，所以，这需要我们的命令去附和这些领域。\u003c/p\u003e\n\u003cp\u003e \u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003e黄金法则- 花一些时间去思考去权衡一下你的变量名\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003e当你设计好一个的变量名一个函数名的时候，别着急去使用他，停下来，想一想，这个变量名是否合适，是否还有更好的？也许你正在使用的是一个很不好的变量名。有些时候，需要我们权衡利弊一下，可能还要去和同事讨论一下。\u003c/p\u003e\n\u003cp\u003e总之，变量名是编程的第一步，第一步走好了，后面才走得好。试想，无论是你或你的同事在使用一些好的变量名编程是一件多么轻松的事啊。\u003c/p\u003e\n\u003cp\u003e \u003c/p\u003e\n\u003ch4\u003e附录：部分的缩写规范\u003c/h4\u003e\n\u003ctable border=\"0\" align=\"center\"\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd\u003e完整单词\u003c/td\u003e\n\u003ctd\u003e缩写\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003eA\u003c/td\u003e\n\u003ctd\u003e \u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003eaverage\u003c/td\u003e\n\u003ctd\u003eavg\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003eB\u003c/td\u003e\n\u003ctd\u003e \u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003eback\u003c/td\u003e\n\u003ctd\u003ebk\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003ebackground\u003c/td\u003e\n\u003ctd\u003ebg\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003ebreak\u003c/td\u003e\n\u003ctd\u003ebrk\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003ebuffer\u003c/td\u003e\n\u003ctd\u003ebuf\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003eC\u003c/td\u003e\n\u003ctd\u003e \u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003ecolor\u003c/td\u003e\n\u003ctd\u003ecr,clr\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003econtrol\u003c/td\u003e\n\u003ctd\u003ectrl\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003eD\u003c/td\u003e\n\u003ctd\u003e \u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003edata\u003c/td\u003e\n\u003ctd\u003edat\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003edelete\u003c/td\u003e\n\u003ctd\u003edel\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003edocument\u003c/td\u003e\n\u003ctd\u003edoc\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003eE\u003c/td\u003e\n\u003ctd\u003e \u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003eedit\u003c/td\u003e\n\u003ctd\u003eedt\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003eerror\u003c/td\u003e\n\u003ctd\u003eerr\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003eescape\u003c/td\u003e\n\u003ctd\u003eesc\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003eF\u003c/td\u003e\n\u003ctd\u003e \u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003eflag\u003c/td\u003e\n\u003ctd\u003eflg\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003eform\u003c/td\u003e\n\u003ctd\u003efrm\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003eG\u003c/td\u003e\n\u003ctd\u003e \u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003egrid\u003c/td\u003e\n\u003ctd\u003egrd\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003eI\u003c/td\u003e\n\u003ctd\u003e \u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003eincrement\u003c/td\u003e\n\u003ctd\u003einc\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003einformation\u003c/td\u003e\n\u003ctd\u003einfo\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003einitial\u003c/td\u003e\n\u003ctd\u003einit\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003einsert\u003c/td\u003e\n\u003ctd\u003eins\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003eimage\u003c/td\u003e\n\u003ctd\u003eimg\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003eL\u003c/td\u003e\n\u003ctd\u003e \u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003elable\u003c/td\u003e\n\u003ctd\u003elab\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003elength\u003c/td\u003e\n\u003ctd\u003elen\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003elist\u003c/td\u003e\n\u003ctd\u003elst\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003elibrary\u003c/td\u003e\n\u003ctd\u003elib\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003eM\u003c/td\u003e\n\u003ctd\u003e \u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003emanager\u003c/td\u003e\n\u003ctd\u003emgr,mngr\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003emessage\u003c/td\u003e\n\u003ctd\u003emsg\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003eO\u003c/td\u003e\n\u003ctd\u003e \u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003eOracle\u003c/td\u003e\n\u003ctd\u003eOra\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003eP\u003c/td\u003e\n\u003ctd\u003e \u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003epanorama\u003c/td\u003e\n\u003ctd\u003epano\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003epassword\u003c/td\u003e\n\u003ctd\u003epwd\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003epicture\u003c/td\u003e\n\u003ctd\u003epic\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003epoint\u003c/td\u003e\n\u003ctd\u003ept\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003eposition\u003c/td\u003e\n\u003ctd\u003epos\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003eprint\u003c/td\u003e\n\u003ctd\u003eprn\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003eprogram\u003c/td\u003e\n\u003ctd\u003eprg\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003eS\u003c/td\u003e\n\u003ctd\u003e \u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003eserver\u003c/td\u003e\n\u003ctd\u003esrv\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003esource\u003c/td\u003e\n\u003ctd\u003esrc\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003estatistic\u003c/td\u003e\n\u003ctd\u003estat\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003estring\u003c/td\u003e\n\u003ctd\u003estr\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003eSybase\u003c/td\u003e\n\u003ctd\u003eSyb\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003eT\u003c/td\u003e\n\u003ctd\u003e \u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003etemp\u003c/td\u003e\n\u003ctd\u003etmp\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003etext\u003c/td\u003e\n\u003ctd\u003etxt\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003eU\u003c/td\u003e\n\u003ctd\u003e \u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003euser\u003c/td\u003e\n\u003ctd\u003eusr\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003eW\u003c/td\u003e\n\u003ctd\u003e \u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003ewindow\u003c/td\u003e\n\u003ctd\u003ewin,wnd\u003c/td\u003e\n\u003c/tr\u003e\n\u003c/tbody\u003e\n\u003c/table\u003e\n\u003cp\u003e \u003c/p\u003e\n\u003ch4\u003e附录二、匈牙利命名法\u003c/h4\u003e\n\u003cpre\u003e  a       Array                       数组\n  b       BOOL (int)                  布尔(整数)\n  by      Unsigned Char (Byte)        无符号字符(字节)\n  c       Char                        字符(字节)\n  cb      Count of bytes              字节数\n  cr      Color reference value       颜色(参考)值\n  cx      Count of x (Short)          x的集合(短整数)\n  dw      DWORD   (unsigned long)     双字(无符号长整数)\n  f       Flags                       标志(一般是有多位的数值)\n  fn      Function                    函数\n  g_      global                      全局的\n  h       Handle                      句柄\n  i       Integer                     整数\n  l       Long                        长整数\n  lp      Long pointer                长指针\n  m_      Data member of a class      一个类的数据成员\n  n       Short int                   短整数\n  p       Pointer                     指针\n  s       String                      字符串\n  sz      Zero terminated String      以0结尾的字符串\n  tm      Text metric                 文本规则\n  u       Unsigned int                无符号整数\n  ul      Unsigned long (ULONG)       无符号长整数\n  w       WORD (unsigned short)       无符号短整数\n  x,y     x, y coordinates (short)    坐标值/短整数\n  v       void                        空\u003c/pre\u003e\n\u003cp\u003e有关项目的全局变量用g_开始，类成员变量用m_，局部变量若函数较大则可考虑用l_用以显示说明其是局部变量。\u003c/p\u003e\n\u003cpre\u003e前缀       类型        例子\ng_      全局变量       g_Servers\nC       类或者结构体   CDocument，CPrintInfo\nm_      成员变量       m_pDoc，m_nCustomers\u003c/pre\u003e\n\u003cp\u003e\u003cstrong\u003eVC常用前缀列表：\u003c/strong\u003e\u003c/p\u003e\n\u003cpre\u003e前缀   类型   描述                      例子\nch     char    8位字符                   chGrade\nch     TCHAR   16位UNICODE类型字符       chName\nb      BOOL    布尔变量                  bEnabled\nn      int     整型                      nLength\nn      UINT    无符号整型                nLength\nw      WORD    16位无符号整型            wPos\nl      LONG    32位有符号整型            lOffset\ndw     DWORD   32位无符号整型            dwRange\np      *       内存模块指针，指针变量   pDoc\nlp     FAR*    长指针                    lpDoc\nlpsz   LPSTR   32位字符串指针           lpszName\nlpsz   LPCSTR  32位常量字符串指针       lpszName\nlpsz   LPCTSTR 32位UNICODE类型常量指针  lpszName\nh      handle  Windows对象句柄           hWnd\nlpfn   (*fn)() 回调函数指针              lpfnAbort\u003c/pre\u003e\n\u003cp\u003e\u003cstrong\u003eWindows对象名称缩写：\u003c/strong\u003e\u003c/p\u003e\n\u003cpre\u003eWindows对象 例子变量  MFC类       例子对象\nHWND        hWnd;      CWnd*       pWnd;\nHDLG        hDlg;      CDialog*    pDlg;\nHDC         hDC;       CDC*        pDC;\nHGDIOBJ     hGdiObj;   CGdiObject* pGdiObj;\nHPEN        hPen;      CPen*       pPen;\nHBRUSH      hBrush;    CBrush*     pBrush;\nHFONT       hFont;     CFont*      pFont;\nHBITMAP     hBitmap;   CBitmap*    pBitmap;\nHPALETTE    hPalette;  CPalette*   pPalette;\nHRGN        hRgn;      CRgn*       pRgn;\nHMENU       hMenu;     CMenu*      pMenu;\nHWND        hCtl;      CStatic*    pStatic;\nHWND        hCtl;      CButton*    pBtn;\nHWND        hCtl;      CEdit*      pEdit;\nHWND        hCtl;      CListBox*   pListBox;\nHWND        hCtl;      CComboBox*  pComboBox;\n\n（全文完）\u003c/pre\u003e\n\u003cp\u003e\u003c/p\u003e\n\u003cdiv style=\"margin-top: 15px; font-size: 16px;color: #cc0000;\"\u003e\n\u003cp align=\"center\"\u003e\u003cstrong\u003e（转载本站文章请注明作者和出处 \u003ca href=\"https://coolshell.cn/\"\u003e酷 壳 – CoolShell\u003c/a\u003e ，请勿用于任何商业用途）\u003c/strong\u003e\u003c/p\u003e\n\u003c/div\u003e\n\u003cdiv class=\"wp_rp_wrap  wp_rp_vertical_m\" id=\"wp_rp_first\"\u003e\u003cdiv class=\"wp_rp_content\"\u003e\u003ch3 class=\"related_post_title\"\u003e相关文章\u003c/h3\u003e\u003cul class=\"related_post wp_rp\"\u003e\u003cli\u003e\u003ca href=\"https://coolshell.cn/articles/18024.html\" class=\"wp_rp_thumbnail\"\u003e\u003cimg src=\"https://coolshell.cn/wp-content/uploads/2017/07/api-design-300x278-2-150x150.jpg\" alt=\"API设计原则 – Qt官网的设计实践总结\" width=\"150\" height=\"150\"/\u003e\u003c/a\u003e\u003ca href=\"https://coolshell.cn/articles/18024.html\" class=\"wp_rp_title\"\u003eAPI设计原则 – Qt官网的设计实践总结\u003c/a\u003e\u003c/li\u003e\u003cli\u003e\u003ca href=\"https://coolshell.cn/articles/8990.html\" class=\"wp_rp_thumbnail\"\u003e\u003cimg src=\"https://coolshell.cn/wp-content/uploads/2013/02/linus_pointer_to_pointer-150x150.jpg\" alt=\"Linus：利用二级指针删除单向链表\" width=\"150\" height=\"150\"/\u003e\u003c/a\u003e\u003ca href=\"https://coolshell.cn/articles/8990.html\" class=\"wp_rp_title\"\u003eLinus：利用二级指针删除单向链表\u003c/a\u003e\u003c/li\u003e\u003cli\u003e\u003ca href=\"https://coolshell.cn/articles/8745.html\" class=\"wp_rp_thumbnail\"\u003e\u003cimg src=\"https://coolshell.cn/wp-content/plugins/wordpress-23-related-posts-plugin/static/thumbs/8.jpg\" alt=\"如此理解面向对象编程\" width=\"150\" height=\"150\"/\u003e\u003c/a\u003e\u003ca href=\"https://coolshell.cn/articles/8745.html\" class=\"wp_rp_title\"\u003e如此理解面向对象编程\u003c/a\u003e\u003c/li\u003e\u003cli\u003e\u003ca href=\"https://coolshell.cn/articles/7886.html\" class=\"wp_rp_thumbnail\"\u003e\u003cimg src=\"https://coolshell.cn/wp-content/uploads/2012/07/muxnt-150x150.jpg\" alt=\"代码执行的效率\" width=\"150\" height=\"150\"/\u003e\u003c/a\u003e\u003ca href=\"https://coolshell.cn/articles/7886.html\" class=\"wp_rp_title\"\u003e代码执行的效率\u003c/a\u003e\u003c/li\u003e\u003cli\u003e\u003ca href=\"https://coolshell.cn/articles/5444.html\" class=\"wp_rp_thumbnail\"\u003e\u003cimg src=\"https://coolshell.cn/wp-content/plugins/wordpress-23-related-posts-plugin/static/thumbs/14.jpg\" alt=\"千万不要把 bool 设计成函数参数\" width=\"150\" height=\"150\"/\u003e\u003c/a\u003e\u003ca href=\"https://coolshell.cn/articles/5444.html\" class=\"wp_rp_title\"\u003e千万不要把 bool 设计成函数参数\u003c/a\u003e\u003c/li\u003e\u003cli\u003e\u003ca href=\"https://coolshell.cn/articles/5201.html\" class=\"wp_rp_thumbnail\"\u003e\u003cimg src=\"https://coolshell.cn/wp-content/uploads/2011/08/538efefbjw1dt8f6ua5rpg-150x150.gif\" alt=\"重构代码的7个阶段\" width=\"150\" height=\"150\"/\u003e\u003c/a\u003e\u003ca href=\"https://coolshell.cn/articles/5201.html\" class=\"wp_rp_title\"\u003e重构代码的7个阶段\u003c/a\u003e\u003c/li\u003e\u003c/ul\u003e\u003c/div\u003e\u003c/div\u003e\n\u003cdiv id=\"post-ratings-1038\" class=\"post-ratings\" itemscope=\"\" itemtype=\"https://schema.org/Article\" data-nonce=\"01857f8525\"\u003e\u003cimg id=\"rating_1038_1\" src=\"https://coolshell.cn/wp-content/plugins/wp-postratings/images/stars_crystal/rating_on.gif\" alt=\"好烂啊\" title=\"好烂啊\" onmouseover=\"if (!window.__cfRLUnblockHandlers) return false; current_rating(1038, 1, \u0026#39;好烂啊\u0026#39;);\" onmouseout=\"if (!window.__cfRLUnblockHandlers) return false; ratings_off(3.7, 4, 0);\" onclick=\"if (!window.__cfRLUnblockHandlers) return false; rate_post();\" onkeypress=\"if (!window.__cfRLUnblockHandlers) return false; rate_post();\" style=\"cursor: pointer; border: 0px;\" data-cf-modified-29ed547a42c1e3d260eac57b-=\"\"/\u003e\u003cimg id=\"rating_1038_2\" src=\"https://coolshell.cn/wp-content/plugins/wp-postratings/images/stars_crystal/rating_on.gif\" alt=\"有点差\" title=\"有点差\" onmouseover=\"if (!window.__cfRLUnblockHandlers) return false; current_rating(1038, 2, \u0026#39;有点差\u0026#39;);\" onmouseout=\"if (!window.__cfRLUnblockHandlers) return false; ratings_off(3.7, 4, 0);\" onclick=\"if (!window.__cfRLUnblockHandlers) return false; rate_post();\" onkeypress=\"if (!window.__cfRLUnblockHandlers) return false; rate_post();\" style=\"cursor: pointer; border: 0px;\" data-cf-modified-29ed547a42c1e3d260eac57b-=\"\"/\u003e\u003cimg id=\"rating_1038_3\" src=\"https://coolshell.cn/wp-content/plugins/wp-postratings/images/stars_crystal/rating_on.gif\" alt=\"凑合看看\" title=\"凑合看看\" onmouseover=\"if (!window.__cfRLUnblockHandlers) return false; current_rating(1038, 3, \u0026#39;凑合看看\u0026#39;);\" onmouseout=\"if (!window.__cfRLUnblockHandlers) return false; ratings_off(3.7, 4, 0);\" onclick=\"if (!window.__cfRLUnblockHandlers) return false; rate_post();\" onkeypress=\"if (!window.__cfRLUnblockHandlers) return false; rate_post();\" style=\"cursor: pointer; border: 0px;\" data-cf-modified-29ed547a42c1e3d260eac57b-=\"\"/\u003e\u003cimg id=\"rating_1038_4\" src=\"https://coolshell.cn/wp-content/plugins/wp-postratings/images/stars_crystal/rating_half.gif\" alt=\"还不错\" title=\"还不错\" onmouseover=\"if (!window.__cfRLUnblockHandlers) return false; current_rating(1038, 4, \u0026#39;还不错\u0026#39;);\" onmouseout=\"if (!window.__cfRLUnblockHandlers) return false; ratings_off(3.7, 4, 0);\" onclick=\"if (!window.__cfRLUnblockHandlers) return false; rate_post();\" onkeypress=\"if (!window.__cfRLUnblockHandlers) return false; rate_post();\" style=\"cursor: pointer; border: 0px;\" data-cf-modified-29ed547a42c1e3d260eac57b-=\"\"/\u003e\u003cimg id=\"rating_1038_5\" src=\"https://coolshell.cn/wp-content/plugins/wp-postratings/images/stars_crystal/rating_off.gif\" alt=\"很精彩\" title=\"很精彩\" onmouseover=\"if (!window.__cfRLUnblockHandlers) return false; current_rating(1038, 5, \u0026#39;很精彩\u0026#39;);\" onmouseout=\"if (!window.__cfRLUnblockHandlers) return false; ratings_off(3.7, 4, 0);\" onclick=\"if (!window.__cfRLUnblockHandlers) return false; rate_post();\" onkeypress=\"if (!window.__cfRLUnblockHandlers) return false; rate_post();\" style=\"cursor: pointer; border: 0px;\" data-cf-modified-29ed547a42c1e3d260eac57b-=\"\"/\u003e (\u003cstrong\u003e12\u003c/strong\u003e 人打了分，平均分： \u003cstrong\u003e3.67\u003c/strong\u003e )\u003cbr/\u003e\u003cspan class=\"post-ratings-text\" id=\"ratings_1038_text\"\u003e\u003c/span\u003e\u003cmeta itemprop=\"name\" content=\"编程命名中的7+1个提示\"/\u003e\u003cmeta itemprop=\"headline\" content=\"编程命名中的7+1个提示\"/\u003e\u003cmeta itemprop=\"description\" content=\"前几天Neo写过《编程中的命名设计那点事》，这里也有另外一篇和程序命名的文章，可以从另一个角度看看。\n\n1.- 变量应该是尽可能的望文知意。千万不要使用教材中的命名方式。\n\n\t好的变量： daysDateRange, flightNumber, carColor.\n\t坏的变量： days, dRange, temp, data, aux…\n\n在我们的日常工作中，有很大数量的开发人员喜...\"/\u003e\u003cmeta itemprop=\"datePublished\" content=\"2009-06-15T22:36:17+08:00\"/\u003e\u003cmeta itemprop=\"dateModified\" content=\"2009-07-05T21:32:20+08:00\"/\u003e\u003cmeta itemprop=\"url\" content=\"https://coolshell.cn/articles/1038.html\"/\u003e\u003cmeta itemprop=\"author\" content=\"陈皓\"/\u003e\u003cmeta itemprop=\"mainEntityOfPage\" content=\"https://coolshell.cn/articles/1038.html\"/\u003e\u003cdiv style=\"display: none;\" itemprop=\"publisher\" itemscope=\"\" itemtype=\"https://schema.org/Organization\"\u003e\u003cmeta itemprop=\"name\" content=\"酷 壳 - CoolShell\"/\u003e\u003cmeta itemprop=\"url\" content=\"https://coolshell.cn\"/\u003e\u003cdiv itemprop=\"logo\" itemscope=\"\" itemtype=\"https://schema.org/ImageObject\"\u003e\u003cmeta itemprop=\"url\" content=\"\"/\u003e\u003c/div\u003e\u003c/div\u003e\u003cdiv style=\"display: none;\" itemprop=\"aggregateRating\" itemscope=\"\" itemtype=\"https://schema.org/AggregateRating\"\u003e\u003cmeta itemprop=\"bestRating\" content=\"5\"/\u003e\u003cmeta itemprop=\"worstRating\" content=\"1\"/\u003e\u003cmeta itemprop=\"ratingValue\" content=\"3.67\"/\u003e\u003cmeta itemprop=\"ratingCount\" content=\"12\"/\u003e\u003c/div\u003e\u003c/div\u003e\u003cdiv id=\"post-ratings-1038-loading\" class=\"post-ratings-loading\"\u003e\u003cimg src=\"https://coolshell.cn/wp-content/plugins/wp-postratings/images/loading.gif\" width=\"16\" height=\"16\" class=\"post-ratings-image\"/\u003eLoading...\u003c/div\u003e\n\u003c/div\u003e",
  "Date": "2009-06-15T22:36:17+08:00",
  "Author": "陈皓"
}