{
  "Source": "coolshell.cn",
  "Title": "C++的坑真的多吗？",
  "Link": "https://coolshell.cn/articles/7992.html",
  "Content": "\u003cdiv class=\"entry-content\"\u003e\n\u003cp\u003e\u003cscript async=\"\" src=\"https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3415450859608158\" crossorigin=\"anonymous\" type=\"7a3319ad9865e2c16d993795-text/javascript\"\u003e\u003c/script\u003e先说明一下，我不希望本文变成语言争论贴。希望下面的文章能让我们客观理性地了解C++这个语言。（另，我觉得技术争论不要停留在非黑即白的二元价值观上，这样争论无非就是比谁的嗓门大，比哪一方的观点强，毫无价值。我们应该多看看技术是怎么演进的，怎么取舍的。）\u003c/p\u003e\n\u003cdiv id=\"ez-toc-container\" class=\"ez-toc-v2_0_48 counter-hierarchy ez-toc-counter ez-toc-grey ez-toc-container-direction\"\u003e\n\u003cdiv class=\"ez-toc-title-container\"\u003e\n\u003cp class=\"ez-toc-title\"\u003e目录\u003c/p\u003e\n\u003cspan class=\"ez-toc-title-toggle\"\u003e\u003c/span\u003e\u003c/div\u003e\n\u003cnav\u003e\u003cul class=\"ez-toc-list ez-toc-list-level-1 \"\u003e\u003cli class=\"ez-toc-page-1 ez-toc-heading-level-4\"\u003e\u003ca class=\"ez-toc-link ez-toc-heading-1\" href=\"#%E4%BA%8B%E7%94%B1\" title=\"事由\"\u003e事由\u003c/a\u003e\u003c/li\u003e\u003cli class=\"ez-toc-page-1 ez-toc-heading-level-4\"\u003e\u003ca class=\"ez-toc-link ez-toc-heading-2\" href=\"#C%E7%9C%9F%E7%9A%84%E6%AF%94C%E5%B7%AE%E5%90%97%EF%BC%9F\" title=\"C++真的比C差吗？\"\u003eC++真的比C差吗？\u003c/a\u003e\u003c/li\u003e\u003cli class=\"ez-toc-page-1 ez-toc-heading-level-4\"\u003e\u003ca class=\"ez-toc-link ez-toc-heading-3\" href=\"#C%E7%9A%84%E5%9D%91%E6%9C%89%E5%A4%9A%E5%B0%91%EF%BC%9F\" title=\"C++的坑有多少？\"\u003eC++的坑有多少？\u003c/a\u003e\u003c/li\u003e\u003cli class=\"ez-toc-page-1 ez-toc-heading-level-4\"\u003e\u003ca class=\"ez-toc-link ez-toc-heading-4\" href=\"#C%E7%9A%84%E5%88%9D%E8%A1%B7\" title=\"C++的初衷\"\u003eC++的初衷\u003c/a\u003e\u003c/li\u003e\u003cli class=\"ez-toc-page-1 ez-toc-heading-level-4\"\u003e\u003ca class=\"ez-toc-link ez-toc-heading-5\" href=\"#%E6%88%91%E5%AF%B9C%E7%9A%84%E6%84%9F%E6%83%85\" title=\"我对C++的感情\"\u003e我对C++的感情\u003c/a\u003e\u003c/li\u003e\u003cli class=\"ez-toc-page-1 ez-toc-heading-level-4\"\u003e\u003ca class=\"ez-toc-link ez-toc-heading-6\" href=\"#C%E7%9A%84%E6%9C%AA%E6%9D%A5\" title=\"C++的未来\"\u003eC++的未来\u003c/a\u003e\u003c/li\u003e\u003cli class=\"ez-toc-page-1 ez-toc-heading-level-4\"\u003e\u003ca class=\"ez-toc-link ez-toc-heading-7\" href=\"#%E6%80%BB%E7%BB%93\" title=\"总结\"\u003e总结\u003c/a\u003e\u003c/li\u003e\u003c/ul\u003e\u003c/nav\u003e\u003c/div\u003e\n\u003ch4\u003e\u003cspan class=\"ez-toc-section\" id=\"%E4%BA%8B%E7%94%B1\"\u003e\u003c/span\u003e事由\u003cspan class=\"ez-toc-section-end\"\u003e\u003c/span\u003e\u003c/h4\u003e\n\u003cp\u003e\u003cimg decoding=\"async\" class=\"alignright size-full wp-image-8014\" title=\"C Plus Plus\" src=\"https://coolshell.cn/wp-content/uploads/2012/08/cpp_small.jpg\" alt=\"\" width=\"300\" height=\"240\"/\u003e周五的时候，我在我的微博上发了一个贴说了一下一个网友给我发来的C++程序的规范和内存管理写的不是很好（后来我删除了，因为当事人要求），我并非批判，只是想说明其实程序员是需要一些“疫苗”的，并以此想开一个“程序员疫苗的网站”，结果，@简悦云风同学\u003ca href=\"http://weibo.com/2388714105/yvqWKkcGV\"\u003e直接回复到\u003c/a\u003e：“\u003cstrong\u003e不要用 C++ 直接用 C , 就没那么多坑了。\u003c/strong\u003e”就把这个事带入了语言之争。\u003c/p\u003e\n\u003cp\u003e我又\u003ca href=\"http://weibo.com/1401880315/yvrMMsCuT\" target=\"_blank\"\u003e发了一条微博\u003c/a\u003e：\u003c/p\u003e\n\u003cp style=\"padding-left: 30px;\"\u003e\u003ca title=\"左耳朵耗子\" href=\"http://weibo.com/1401880315/profile\"\u003e@左耳朵耗子\u003c/a\u003e \u003ca href=\"http://verified.weibo.com/verify\" target=\"_blank\"\u003e\u003cimg decoding=\"async\" title=\"新浪个人认证 \" src=\"http://img.t.sinajs.cn/t4/style/images/common/transparent.gif\" alt=\"新浪个人认证 \"/\u003e\u003c/a\u003e： \u003cspan style=\"color: #800080;\"\u003e说C++比C的坑更多的人我可以理解，但理性地思考一下。C语言的坑也不少啊，如果说C语言有90个坑，那么C++就是100个坑（另，\u003cstrong\u003e我看很多人都把C语言上的坑也归到了C++上来\u003c/strong\u003e），但是C++你得到的东西更多，封装，多态，继承扩展，泛型编程，智能指针，……，你得到了500%东西，但却只多了10%的坑，多值啊\u003c/span\u003e。\u003c/p\u003e\n\u003cp\u003e结果引来了更多的回复（只节选了一些言论）：\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e@淘宝褚霸\u003ca href=\"http://weibo.com/1915508822/yvshunX41\"\u003e也在微博里说\u003c/a\u003e：“\u003cspan style=\"color: #800080;\"\u003e自从5年前果断扔掉C++，改用了ansi c后，我的生活质量大大提升，没有各种坑坑我。\u003c/span\u003e”\u003c/li\u003e\n\u003c/ul\u003e\n\u003cul\u003e\n\u003cli\u003e@Laruence\u003ca href=\"http://weibo.com/1170999921/yvsgisAgB\" target=\"_blank\"\u003e在其微博里\u003c/a\u003e说: “\u003cspan style=\"color: #800080;\"\u003e我确实用不到, C语言灵活运用struct, 可以很好的满足这些需求.//@左耳朵耗子: 封装，继承，多态，模板，智能指针，这也用不到？这也学院派？//@Laruence: 问题是, 这些东西我都用不到… C语言是工程师搞的, C++是学院派搞的\u003c/span\u003e”\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e\u003cstrong\u003e那么，C++的坑真的多么？我还请大家理性地思考一下\u003c/strong\u003e。\u003c/p\u003e\n\u003cp\u003e\u003cspan id=\"more-7992\"\u003e\u003c/span\u003e\u003c/p\u003e\n\u003cdiv\u003e\n\u003ch4\u003e\u003cspan class=\"ez-toc-section\" id=\"C%E7%9C%9F%E7%9A%84%E6%AF%94C%E5%B7%AE%E5%90%97%EF%BC%9F\"\u003e\u003c/span\u003eC++真的比C差吗？\u003cspan class=\"ez-toc-section-end\"\u003e\u003c/span\u003e\u003c/h4\u003e\n\u003cp\u003e我们先来看一个图——《\u003ca href=\"https://coolshell.cn/articles/1850.html\" target=\"_blank\"\u003e各种程序员的嘴脏的对比\u003c/a\u003e》，从这个图上看，C程序员比C++的程序员在注释中使用fuck的字眼多一倍。这说明了什么？\u003cstrong\u003e我个人觉得这说明C程序员没有C++程序员淡定\u003c/strong\u003e。\u003c/p\u003e\n\u003c/div\u003e\n\u003cp\u003e\u003cimg decoding=\"async\" loading=\"lazy\" class=\"aligncenter\" title=\"Google Code 中程序语言出现 fuck 一词的比率\" src=\"https://coolshell.cn/wp-content/uploads/2009/11/programming_language.jpg\" alt=\"Google Code 中程序语言出现 fuck 一词的比率\" width=\"543\" height=\"303\"/\u003e\u003c/p\u003e\n\u003cp\u003e不要太纠结上图，只是轻松一下，我没那么无聊，让我们来看点真正的论据。\u003c/p\u003e\n\u003cp\u003e相信用过C++的程序员知道，C++的很多特性主要就是解决C语言中的各种不完美和缺陷：（注：\u003cstrong\u003eC89、C99中许多的改进正是从C++中所引进的\u003c/strong\u003e）\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e用namespace解决了很C函数重名的问题。\u003c/li\u003e\n\u003c/ul\u003e\n\u003cul\u003e\n\u003cli\u003e用const/inline/template代替了宏，解决了C语言中宏的各种坑。\u003c/li\u003e\n\u003c/ul\u003e\n\u003cul\u003e\n\u003cli\u003e用const的类型解决了很多C语言中变量值莫名改变的问题。\u003c/li\u003e\n\u003c/ul\u003e\n\u003cul\u003e\n\u003cli\u003e用引用代替指针，解决了C语言中指针的各种坑。这个在Java里得到彻底地体现。\u003c/li\u003e\n\u003c/ul\u003e\n\u003cul\u003e\n\u003cli\u003e用强类型检查和四种转型，解决了C语言中乱转型的各种坑。\u003c/li\u003e\n\u003c/ul\u003e\n\u003cul\u003e\n\u003cli\u003e用封装（构造，析构，拷贝构造，赋值重载）解决了C语言中各种复制一个结构体（struct）或是一个数据结构（link, hashtable, list, array等）中浅拷贝的内存问题的各种坑。\u003c/li\u003e\n\u003c/ul\u003e\n\u003cul\u003e\n\u003cli\u003e用封装让你可以在成员变量加入getter/setter，而不会像C一样只有文件级的封装。\u003c/li\u003e\n\u003c/ul\u003e\n\u003cul\u003e\n\u003cli\u003e用函数重载、函数默认参数，解决了C中扩展一个函数搞出来像func2()之类的ugly的东西。\u003c/li\u003e\n\u003c/ul\u003e\n\u003cul\u003e\n\u003cli\u003e用继承多态和RTTI解决了C中乱转struct指针和使用函数指针的诸多让代码ugly的问题。\u003c/li\u003e\n\u003c/ul\u003e\n\u003cul\u003e\n\u003cli\u003e用RAII，智能指针的方式，解决了C语言中因为出现需要释放资源的那些非常ugly的代码的问题。\u003c/li\u003e\n\u003c/ul\u003e\n\u003cul\u003e\n\u003cli\u003e用OO和GP解决各种C语言中用函数指针，对指针乱转型，及一大砣if-else搞出来的ugly的泛型。\u003c/li\u003e\n\u003c/ul\u003e\n\u003cul\u003e\n\u003cli\u003e用STL解决了C语言中算法和数据结构的N多种坑。\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv\u003e（注意：上面我没有提重载运算符和异常，前者写出来的代码并不易读和易维护（参看《\u003ca title=\"恐怖的C++语言\" href=\"https://coolshell.cn/articles/1724.html\" target=\"_blank\"\u003e恐怖的C++语言\u003c/a\u003e》后面的那个示例），坑也多，后者并不成熟（相对于Java的异常），但是我们需要知道try-catch这种方式比传统的不断地判断函数返回值和errno形成的大量的if-else在代码可读性上要好很多）\u003c/div\u003e\n\u003cp\u003e上述的这些东西填了不知有多少的C语言编程和维护的坑。\u003cstrong\u003e少用指针，多用引用，试试autoptr，用用封装，继承，多态和函数重载…… 你面对的坑只会比C少，不会多。\u003c/strong\u003e\u003c/p\u003e\n\u003ch4\u003e\u003cspan class=\"ez-toc-section\" id=\"C%E7%9A%84%E5%9D%91%E6%9C%89%E5%A4%9A%E5%B0%91%EF%BC%9F\"\u003e\u003c/span\u003eC++的坑有多少？\u003cspan class=\"ez-toc-section-end\"\u003e\u003c/span\u003e\u003c/h4\u003e\n\u003cp\u003eC++的坑真的不多，如果你能花两到三周的时候读一下《\u003ca href=\"http://book.douban.com/subject/1231590/\" target=\"_blank\"\u003eEffecitve C++\u003c/a\u003e》里的那50多个条款，你就知道C++里的坑并不多，而且，有很多条款告诉我们C++是怎么解决C的坑的。然后，你可以读读《\u003ca href=\"http://book.douban.com/subject/1967356/\" target=\"_blank\"\u003eExceptional C++\u003c/a\u003e》和《\u003ca href=\"http://book.douban.com/subject/1244943/\" target=\"_blank\"\u003eMore Exceptional C++\u003c/a\u003e》，你可以了解一下C++各种问题的解决方法和一些常见的经典错误。\u003c/p\u003e\n\u003cp\u003e当然，C++在解决了很多C语的坑的同时，也因为OO和泛型又引入了一些坑。消一些，加一些，我个人感觉上总体上只比C多10%左右吧。但是你有了开发速度更快，代码更易读，更易维护的500%的利益。\u003c/p\u003e\n\u003cp\u003e另外，不可否认的是，C++中的代码出了错误，有时候很难搞，而且似乎用C++的人会觉得C++更容易出错？我觉得主要是下面几个原因：\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003cstrong\u003eC和C++都没学好，大多数人用C++写C，所以，C的坑和C++的坑合并了。\u003c/strong\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003cul\u003e\n\u003cli\u003e\u003cstrong\u003e\u003cstrong\u003eC++太灵活了，想怎么搞就怎么搞，所以，各种不经意地滥用和乱搞。\u003c/strong\u003e\u003c/strong\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e另外，C++的编译对标准C++的实现各异，支持地也千差万别，所以会有一些比较奇怪的问题，但是如果你一般用用C++的封装，继承，多态，以及namespace，const, refernece,  inline, templete, overloap, autoptr，还有一些OO 模式，并不会出现奇怪的问题。\u003c/p\u003e\n\u003cp\u003e而对于STL中的各种坑，我觉得是程序员们还对GP（泛型编程）理解得还不够，STL是泛型编程的顶级实践！属于是大师级的作品，一般人很难理解。必需承认STL写出来的代码和编译错误的确相当复杂晦涩，太难懂了。这也是C++的一个诟病。\u003c/p\u003e\n\u003cp\u003e这和\u003ca href=\"https://coolshell.cn/articles/1724.html\" target=\"_blank\"\u003eLinus说的一样\u003c/a\u003e —— “\u003cstrong\u003eC++是一门很恐怖的语言，而比它更恐怖的是\u003cspan style=\"color: #cc0000;\"\u003e很多不合格的程序员\u003c/span\u003e在使用着它\u003c/strong\u003e”。注意我飘红了“\u003cspan style=\"color: #cc0000;\"\u003e\u003cstrong\u003e很多不合格的程序员\u003c/strong\u003e\u003c/span\u003e”！\u003c/p\u003e\n\u003cp\u003e我觉得C++并不适合初级程序员使用，C++只适合高级程序员使用（参看《\u003ca title=\"“21天教你学会C++”\" href=\"https://coolshell.cn/articles/2250.html\" target=\"_blank\"\u003e21天学好C++\u003c/a\u003e》和《\u003ca title=\"C++ 程序员自信心曲线图\" href=\"https://coolshell.cn/articles/2287.html\" target=\"_blank\"\u003eC++学习自信心曲线\u003c/a\u003e》），正如《\u003ca title=\"Why C++ ? 王者归来\" href=\"https://coolshell.cn/articles/6548.html\" target=\"_blank\"\u003eWhy C++\u003c/a\u003e》中说的，C++适合那些对开发维护效率和系统性能同时关注的高级程序员使用。\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003e这就好像飞机一样，开飞机很难，开飞机要注意的东西太多太多，对驾驶员的要求很高，但你不能说飞机这个工具很烂，开飞机的坑太多。\u003c/strong\u003e（注：我这里并不是说C++是飞机，C是汽车，C++和C的差距，比飞机到汽车的差距少太多太多，这里主要是类比，我们对待C++语言的心态！）\u003c/p\u003e\n\u003ch4\u003e\u003cspan class=\"ez-toc-section\" id=\"C%E7%9A%84%E5%88%9D%E8%A1%B7\"\u003e\u003c/span\u003eC++的初衷\u003cspan class=\"ez-toc-section-end\"\u003e\u003c/span\u003e\u003c/h4\u003e\n\u003cp\u003e理解C++设计的最佳读本是《\u003ca href=\"http://book.douban.com/subject/1096216/\" target=\"_blank\"\u003eC++演化和设计\u003c/a\u003e》，在这本书中Stroustrup说了些事：\u003c/p\u003e\n\u003cp style=\"padding-left: 30px;\"\u003e1）Stroustrup对C是非常欣赏，\u003cstrong\u003e实际上早期C++许多的工作是对于C的强化和净化\u003c/strong\u003e，并把完全兼容C作为强制性要求。C89、C99中许多的改进正是从C++中所引进。可见，Stroustrup对C语言的贡献非常之大。\u003cstrong\u003e今天不管你对C++怎么看，C++的确扩展和进化了C，对C造成了深远的影响\u003c/strong\u003e。\u003c/p\u003e\n\u003cp style=\"padding-left: 30px;\"\u003e2）Stroustrup对于C的抱怨主要来源于两个方面——在C++兼容C的过程中遇到了不少设计实现上的麻烦；以及守旧的K\u0026amp;R C程序员对Stroustrup的批评。\u003cstrong\u003e很多人说C++的恶梦就是要去兼容于C，这并不无道理（\u003c/strong\u003eJava就干的比C++彻底得多\u003cstrong\u003e）\u003c/strong\u003e，但这并不是Stroustrup考虑的，Stroustrup一边在使尽浑身解数来兼容C，另一方面在拼命地优化C。\u003c/p\u003e\n\u003cp style=\"padding-left: 30px;\"\u003e3）Stroustrup在书中直接说，C++最大的竞争对手正是C，他的目的就是——\u003cstrong\u003eC能做到的，C++也必须做到，而且要做的更好\u003c/strong\u003e。大家觉得是不是做到了？有多少做到了，有多少还没有做到？\u003c/p\u003e\n\u003cp style=\"padding-left: 30px;\"\u003e4）对于同时关注的运行效率和开发效率的程序员，Stroustrup多次强调C++的目标是——“\u003cstrong\u003e在保证效率与C语言相当的情况下，加强程序的组织性；能保证同样功能的程序，C++更短小\u003c/strong\u003e”，\u003cstrong\u003e这正是\u003cspan style=\"color: #ff0000;\"\u003e浅封装\u003c/span\u003e的核心思想\u003c/strong\u003e。而不是过渡设计的OO。（参看：\u003ca title=\"面向对象是个骗局？！\" href=\"https://coolshell.cn/articles/3036.html\" target=\"_blank\"\u003e面向对象是个骗局\u003c/a\u003e）\u003c/p\u003e\n\u003cp style=\"padding-left: 30px;\"\u003e5）这本书中举了很多例子来回应那些批评C++有运行性能问题的人。C++在其第二个版本中，引入了虚函数机制，这是C++效率最大的瓶颈了，但我个人认为虚函数就是多了一次加法运算，但让我们的代码能有更好的组织，极大增加了程序的阅读和降底了维护成本。（注：Lippman的《\u003ca href=\"http://book.douban.com/subject/1091086/\" target=\"_blank\"\u003e深入探索C++对象模型\u003c/a\u003e》也说明了C++不比C的程序在运行性能低。Bruce的《\u003ca href=\"http://book.douban.com/subject/1057170/\" target=\"_blank\"\u003eThink in C++\u003c/a\u003e》也说C++和C的性能相差只有5%）\u003c/p\u003e\n\u003cp style=\"padding-left: 30px;\"\u003e6）这本书中还讲了一些C++的痛苦的取舍，印象最深的就是多重继承，提出，拿掉，再被提出，反复很多次，大家在得与失中不断地辩论和取舍。这个过程让我最大的收获是——a) \u003cstrong\u003e对于任何一种设计都有好有坏，都只能偏重一方\u003c/strong\u003e，b) \u003cstrong\u003e完全否定式的批评是不好的心态，好的心态应该是建设性地批评\u003c/strong\u003e。\u003c/p\u003e\n\u003ch4\u003e\u003cspan class=\"ez-toc-section\" id=\"%E6%88%91%E5%AF%B9C%E7%9A%84%E6%84%9F%E6%83%85\"\u003e\u003c/span\u003e我对C++的感情\u003cspan class=\"ez-toc-section-end\"\u003e\u003c/span\u003e\u003c/h4\u003e\n\u003cp\u003e我先说说我学C++的经历。\u003c/p\u003e\n\u003cp\u003e我毕业时，是直接从C跳过C++学Java的，但是\u003cstrong\u003e学Java的时候，不知道为什么Java要设计成这样，只好回头看C++，结果学C++的时候又有很多不懂，又只得回头看C\u003c/strong\u003e，\u003cstrong\u003e最后发现，C -\u0026gt; C++ -\u0026gt; Java的过程，就是C++填C的坑，Java填C++的坑的过程\u003c/strong\u003e。\u003c/p\u003e\n\u003cp\u003e注，下面这些东西可以看到Java在填C/C++坑：\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eJava彻底废弃了指针（指针这个东西，绝对让这个社会有几百亿的损失），使用引用。\u003c/li\u003e\n\u003cli\u003eJava用GC解决了C++的各种内存问题的诟病，当然也带来了GC的问题，不过功大于过。\u003c/li\u003e\n\u003cli\u003eJava对异常的支持比C++更严格，让编程更方便了。\u003c/li\u003e\n\u003cli\u003eJava没有像C++那样的template/macro/函数对象/操作符重载，泛型太晦涩，用OO更容易一些。\u003c/li\u003e\n\u003cli\u003eJava改进了C++的构造、析构、拷贝构造、赋值。\u003c/li\u003e\n\u003cli\u003eJava对完全抛弃了C/C++这种面向过程的编程方式，并废弃了多重继承，更OO（如：用接口来代替多重继承）\u003c/li\u003e\n\u003cli\u003eJava比较彻底地解决了C/C++自称多年的跨平台技术。\u003c/li\u003e\n\u003cli\u003eJava的反射机制把这个语言提升了一个高度，在这个上面可以构建各种高级用法。\u003c/li\u003e\n\u003cli\u003eC/C++没有一些比较好的类库，比如UI，线程 ，I/O，字符串处理等。（C++0x补充了一些）\u003c/li\u003e\n\u003cli\u003e等等……\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e当然时代还在前进，这个演变的过程还在C#和Go上体现着。不过我学习了C -\u0026gt; C++  -\u0026gt; Java这个填坑演进的过程，让我明白了很多东西：\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e我明白了OO是怎么一回事，重要的是明白了OO的封装，继承，和多态是怎么实现的。（参看我以前写过的《\u003ca title=\"C++ 虚函数表解析\" href=\"https://coolshell.cn/articles/12165.html\" target=\"_blank\"\u003eC++虚函数表解析\u003c/a\u003e》和《\u003ca title=\"C++ 对象的内存布局\" href=\"https://coolshell.cn/articles/12176.html\" target=\"_blank\"\u003eC++对象内存布局\u003c/a\u003e》）\u003c/li\u003e\n\u003cli\u003e我明白了STL的泛型编程和Java的各种花哨的技术是怎么一回事，以及那些很花哨的编程方法和技术。\u003c/li\u003e\n\u003cli\u003e我明白了C，C++，Java的各中坑，这就好像玩火一样，我知道怎么玩火不会烧身了。\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e\u003cspan style=\"color: #cc0000;\"\u003e\u003cstrong\u003e我从这个学习过程中得到的最大的收获不是语言本身，而是各式各样的编程技术和方法，和技术的演进的过程，这比语言本身更重要\u003c/strong\u003e！\u003c/span\u003e（\u003cstrong\u003e在这个角度上学习，你看到的不是一个又一个的坑，你看到的是——各式各样让你可以爬得更高的梯子\u003c/strong\u003e）\u003c/p\u003e\n\u003cp\u003e我对C++的感情有三个过程：先是喜欢地要死，然后是恨地要死，现在的又爱又恨，爱的是这个语言，恨的是很多不合格的人在滥用和凌辱它。\u003c/p\u003e\n\u003ch4\u003e\u003cspan class=\"ez-toc-section\" id=\"C%E7%9A%84%E6%9C%AA%E6%9D%A5\"\u003e\u003c/span\u003eC++的未来\u003cspan class=\"ez-toc-section-end\"\u003e\u003c/span\u003e\u003c/h4\u003e\n\u003cp\u003eC++语言发展大概可以分为三个阶段（\u003ca href=\"https://zh.wikipedia.org/wiki/C%2B%2B\" target=\"_blank\"\u003e摘自Wikipedia\u003c/a\u003e）：\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e第一阶段从80年代到1995年。这一阶段C++语言基本上是传统类型上的面向对象语言，并且凭借著接近C语言的效率，在工业界使用的开发语言中占据了相当大份额；\u003c/li\u003e\n\u003cli\u003e第二阶段从1995年到2000年，这一阶段由于标准模板库（STL）和后来的Boost等程式库的出现，泛型程式设计在C++中占据了越来越多的比重性。当然，同时由于Java、C#等语言的出现和硬件价格的大规模下降，C++受到了一定的冲击；\u003c/li\u003e\n\u003cli\u003e第三阶段从2000年至今，由于以Loki、MPL等程式库为代表的产生式编程和模板元编程的出现，C++出现了发展历史上又一个新的高峰，这些新技术的出现以及和原有技术的融合，使C++已经成为当今主流程式设计语言中最复杂的一员。\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e在《\u003ca title=\"Why C++ ? 王者归来\" href=\"https://coolshell.cn/articles/6548.html\" target=\"_blank\"\u003eWhy C++? 王者归来\u003c/a\u003e》中说了 ，性能主要就是要省电，省电就是省钱，在数据中心还不明显，在手机上就更明显了，这就是为什么Android 支持C++的原因。所以，在NB的电池或是能源出现之前，\u003cstrong\u003e如果你需要注重程序的运行性能和开发效率，并更关注程序的运性能，那么，应该首选 C++\u003c/strong\u003e。这就是iOS开发也支持C++的原因。\u003c/p\u003e\n\u003cp\u003e\u003cimg decoding=\"async\" loading=\"lazy\" class=\"aligncenter\" title=\"\" src=\"https://coolshell.cn/wp-content/uploads/2012/02/WhyCPP.04.jpg\" alt=\"\" width=\"567\" height=\"318\"/\u003e\u003c/p\u003e\n\u003cp\u003e今天的C++11中不但有更多更不错的东西，而且，还填了更多原来C++的坑。（参看：\u003ca href=\"https://zh.wikipedia.org/wiki/C%2B%2B11\" target=\"_blank\"\u003eC++11 Wiki\u003c/a\u003e，\u003ca title=\"C++11 中值得关注的几大变化（详解）\" href=\"https://coolshell.cn/articles/5265.html\" target=\"_blank\"\u003eC++ 11的主要特性\u003c/a\u003e）\u003c/p\u003e\n\u003cp style=\"text-align: center;\"\u003e \u003cimg decoding=\"async\" loading=\"lazy\" title=\"\" src=\"https://coolshell.cn/wp-content/uploads/2012/02/WhyCPP.11.jpg\" alt=\"\" width=\"567\" height=\"319\"/\u003e\u003c/p\u003e\n\u003ch4\u003e\u003cspan class=\"ez-toc-section\" id=\"%E6%80%BB%E7%BB%93\"\u003e\u003c/span\u003e\u003cstrong\u003e总结\u003c/strong\u003e\u003cspan class=\"ez-toc-section-end\"\u003e\u003c/span\u003e\u003c/h4\u003e\n\u003cul\u003e\n\u003cli\u003e\u003cstrong\u003eC++并不完美，但学C++必然让你受益无穷。\u003c/strong\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003cul\u003e\n\u003cli\u003e\u003cstrong\u003e是那些不合格的、想对编程速成的程序员让C++变得坑多。\u003c/strong\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e最后，非常感谢能和“\u003cstrong\u003e@简悦云风\u003c/strong\u003e”，“\u003cstrong\u003e@淘宝诸霸\u003c/strong\u003e”，“\u003cstrong\u003e@Laruence\u003c/strong\u003e”一起讨论这个问题！无论你们的观点怎么样，我都和你们“在一起”，嘿嘿嘿……\u003c/p\u003e\n\u003cp\u003e(全文完)\u003c/p\u003e\n\u003cdiv style=\"margin-top: 15px; font-size: 16px;color: #cc0000;\"\u003e\n\u003cp align=\"center\"\u003e\u003cstrong\u003e（转载本站文章请注明作者和出处 \u003ca href=\"https://coolshell.cn/\"\u003e酷 壳 – CoolShell\u003c/a\u003e ，请勿用于任何商业用途）\u003c/strong\u003e\u003c/p\u003e\n\u003c/div\u003e\n\u003cdiv class=\"wp_rp_wrap  wp_rp_vertical_m\" id=\"wp_rp_first\"\u003e\u003cdiv class=\"wp_rp_content\"\u003e\u003ch3 class=\"related_post_title\"\u003e相关文章\u003c/h3\u003e\u003cul class=\"related_post wp_rp\"\u003e\u003cli\u003e\u003ca href=\"https://coolshell.cn/articles/20845.html\" class=\"wp_rp_thumbnail\"\u003e\u003cimg src=\"https://coolshell.cn/wp-content/uploads/2020/03/rust-social-wide-150x150.jpg\" alt=\"Rust语言的编程范式\" width=\"150\" height=\"150\"/\u003e\u003c/a\u003e\u003ca href=\"https://coolshell.cn/articles/20845.html\" class=\"wp_rp_title\"\u003eRust语言的编程范式\u003c/a\u003e\u003c/li\u003e\u003cli\u003e\u003ca href=\"https://coolshell.cn/articles/18360.html\" class=\"wp_rp_thumbnail\"\u003e\u003cimg src=\"https://coolshell.cn/wp-content/uploads/2018/05/300x262-150x150.jpg\" alt=\"程序员练级攻略（2018)  与我的专栏\" width=\"150\" height=\"150\"/\u003e\u003c/a\u003e\u003ca href=\"https://coolshell.cn/articles/18360.html\" class=\"wp_rp_title\"\u003e程序员练级攻略（2018) 与我的专栏\u003c/a\u003e\u003c/li\u003e\u003cli\u003e\u003ca href=\"https://coolshell.cn/articles/8088.html\" class=\"wp_rp_thumbnail\"\u003e\u003cimg src=\"https://coolshell.cn/wp-content/plugins/wordpress-23-related-posts-plugin/static/thumbs/7.jpg\" alt=\"对技术的态度\" width=\"150\" height=\"150\"/\u003e\u003c/a\u003e\u003ca href=\"https://coolshell.cn/articles/8088.html\" class=\"wp_rp_title\"\u003e对技术的态度\u003c/a\u003e\u003c/li\u003e\u003cli\u003e\u003ca href=\"https://coolshell.cn/articles/5576.html\" class=\"wp_rp_thumbnail\"\u003e\u003cimg src=\"https://coolshell.cn/wp-content/uploads/2011/10/00.QuickBasic_PDS_IDE-150x150.png\" alt=\"那些曾伴我走过编程之路的软件\" width=\"150\" height=\"150\"/\u003e\u003c/a\u003e\u003ca href=\"https://coolshell.cn/articles/5576.html\" class=\"wp_rp_title\"\u003e那些曾伴我走过编程之路的软件\u003c/a\u003e\u003c/li\u003e\u003cli\u003e\u003ca href=\"https://coolshell.cn/articles/4990.html\" class=\"wp_rp_thumbnail\"\u003e\u003cimg src=\"https://coolshell.cn/wp-content/uploads/2011/07/programmer-150x150.png\" alt=\"程序员技术练级攻略\" width=\"150\" height=\"150\"/\u003e\u003c/a\u003e\u003ca href=\"https://coolshell.cn/articles/4990.html\" class=\"wp_rp_title\"\u003e程序员技术练级攻略\u003c/a\u003e\u003c/li\u003e\u003cli\u003e\u003ca href=\"https://coolshell.cn/articles/4905.html\" class=\"wp_rp_thumbnail\"\u003e\u003cimg src=\"https://coolshell.cn/wp-content/plugins/wordpress-23-related-posts-plugin/static/thumbs/3.jpg\" alt=\"语言的数据亲和力\" width=\"150\" height=\"150\"/\u003e\u003c/a\u003e\u003ca href=\"https://coolshell.cn/articles/4905.html\" class=\"wp_rp_title\"\u003e语言的数据亲和力\u003c/a\u003e\u003c/li\u003e\u003c/ul\u003e\u003c/div\u003e\u003c/div\u003e\n\u003cdiv id=\"post-ratings-7992\" class=\"post-ratings\" itemscope=\"\" itemtype=\"https://schema.org/Article\" data-nonce=\"7b25f7bfcc\"\u003e\u003cimg id=\"rating_7992_1\" src=\"https://coolshell.cn/wp-content/plugins/wp-postratings/images/stars_crystal/rating_on.gif\" alt=\"好烂啊\" title=\"好烂啊\" onmouseover=\"if (!window.__cfRLUnblockHandlers) return false; current_rating(7992, 1, \u0026#39;好烂啊\u0026#39;);\" onmouseout=\"if (!window.__cfRLUnblockHandlers) return false; ratings_off(4.4, 5, 0);\" onclick=\"if (!window.__cfRLUnblockHandlers) return false; rate_post();\" onkeypress=\"if (!window.__cfRLUnblockHandlers) return false; rate_post();\" style=\"cursor: pointer; border: 0px;\" data-cf-modified-7a3319ad9865e2c16d993795-=\"\"/\u003e\u003cimg id=\"rating_7992_2\" src=\"https://coolshell.cn/wp-content/plugins/wp-postratings/images/stars_crystal/rating_on.gif\" alt=\"有点差\" title=\"有点差\" onmouseover=\"if (!window.__cfRLUnblockHandlers) return false; current_rating(7992, 2, \u0026#39;有点差\u0026#39;);\" onmouseout=\"if (!window.__cfRLUnblockHandlers) return false; ratings_off(4.4, 5, 0);\" onclick=\"if (!window.__cfRLUnblockHandlers) return false; rate_post();\" onkeypress=\"if (!window.__cfRLUnblockHandlers) return false; rate_post();\" style=\"cursor: pointer; border: 0px;\" data-cf-modified-7a3319ad9865e2c16d993795-=\"\"/\u003e\u003cimg id=\"rating_7992_3\" src=\"https://coolshell.cn/wp-content/plugins/wp-postratings/images/stars_crystal/rating_on.gif\" alt=\"凑合看看\" title=\"凑合看看\" onmouseover=\"if (!window.__cfRLUnblockHandlers) return false; current_rating(7992, 3, \u0026#39;凑合看看\u0026#39;);\" onmouseout=\"if (!window.__cfRLUnblockHandlers) return false; ratings_off(4.4, 5, 0);\" onclick=\"if (!window.__cfRLUnblockHandlers) return false; rate_post();\" onkeypress=\"if (!window.__cfRLUnblockHandlers) return false; rate_post();\" style=\"cursor: pointer; border: 0px;\" data-cf-modified-7a3319ad9865e2c16d993795-=\"\"/\u003e\u003cimg id=\"rating_7992_4\" src=\"https://coolshell.cn/wp-content/plugins/wp-postratings/images/stars_crystal/rating_on.gif\" alt=\"还不错\" title=\"还不错\" onmouseover=\"if (!window.__cfRLUnblockHandlers) return false; current_rating(7992, 4, \u0026#39;还不错\u0026#39;);\" onmouseout=\"if (!window.__cfRLUnblockHandlers) return false; ratings_off(4.4, 5, 0);\" onclick=\"if (!window.__cfRLUnblockHandlers) return false; rate_post();\" onkeypress=\"if (!window.__cfRLUnblockHandlers) return false; rate_post();\" style=\"cursor: pointer; border: 0px;\" data-cf-modified-7a3319ad9865e2c16d993795-=\"\"/\u003e\u003cimg id=\"rating_7992_5\" src=\"https://coolshell.cn/wp-content/plugins/wp-postratings/images/stars_crystal/rating_half.gif\" alt=\"很精彩\" title=\"很精彩\" onmouseover=\"if (!window.__cfRLUnblockHandlers) return false; current_rating(7992, 5, \u0026#39;很精彩\u0026#39;);\" onmouseout=\"if (!window.__cfRLUnblockHandlers) return false; ratings_off(4.4, 5, 0);\" onclick=\"if (!window.__cfRLUnblockHandlers) return false; rate_post();\" onkeypress=\"if (!window.__cfRLUnblockHandlers) return false; rate_post();\" style=\"cursor: pointer; border: 0px;\" data-cf-modified-7a3319ad9865e2c16d993795-=\"\"/\u003e (\u003cstrong\u003e52\u003c/strong\u003e 人打了分，平均分： \u003cstrong\u003e4.42\u003c/strong\u003e )\u003cbr/\u003e\u003cspan class=\"post-ratings-text\" id=\"ratings_7992_text\"\u003e\u003c/span\u003e\u003cmeta itemprop=\"name\" content=\"C++的坑真的多吗？\"/\u003e\u003cmeta itemprop=\"headline\" content=\"C++的坑真的多吗？\"/\u003e\u003cmeta itemprop=\"description\" content=\"先说明一下，我不希望本文变成语言争论贴。希望下面的文章能让我们客观理性地了解C++这个语言。（另，我觉得技术争论不要停留在非黑即白的二元价值观上，这样争论无非就是比谁的嗓门大，比哪一方的观点强，毫无价值。我们应该多看看技术是怎么演进的，怎么取舍的。）\n事由\n周五的时候，我在我的微博上发了一个贴说了一下一个网友给我发来的C++程序的规范和内存管理写的不是很好（后来我删除了，因为当事人要求），我并...\"/\u003e\u003cmeta itemprop=\"datePublished\" content=\"2012-08-06T08:12:05+08:00\"/\u003e\u003cmeta itemprop=\"dateModified\" content=\"2014-12-04T10:18:35+08:00\"/\u003e\u003cmeta itemprop=\"url\" content=\"https://coolshell.cn/articles/7992.html\"/\u003e\u003cmeta itemprop=\"author\" content=\"陈皓\"/\u003e\u003cmeta itemprop=\"mainEntityOfPage\" content=\"https://coolshell.cn/articles/7992.html\"/\u003e\u003cdiv style=\"display: none;\" itemprop=\"publisher\" itemscope=\"\" itemtype=\"https://schema.org/Organization\"\u003e\u003cmeta itemprop=\"name\" content=\"酷 壳 - CoolShell\"/\u003e\u003cmeta itemprop=\"url\" content=\"https://coolshell.cn\"/\u003e\u003cdiv itemprop=\"logo\" itemscope=\"\" itemtype=\"https://schema.org/ImageObject\"\u003e\u003cmeta itemprop=\"url\" content=\"\"/\u003e\u003c/div\u003e\u003c/div\u003e\u003cdiv style=\"display: none;\" itemprop=\"aggregateRating\" itemscope=\"\" itemtype=\"https://schema.org/AggregateRating\"\u003e\u003cmeta itemprop=\"bestRating\" content=\"5\"/\u003e\u003cmeta itemprop=\"worstRating\" content=\"1\"/\u003e\u003cmeta itemprop=\"ratingValue\" content=\"4.42\"/\u003e\u003cmeta itemprop=\"ratingCount\" content=\"52\"/\u003e\u003c/div\u003e\u003c/div\u003e\u003cdiv id=\"post-ratings-7992-loading\" class=\"post-ratings-loading\"\u003e\u003cimg src=\"https://coolshell.cn/wp-content/plugins/wp-postratings/images/loading.gif\" width=\"16\" height=\"16\" class=\"post-ratings-image\"/\u003eLoading...\u003c/div\u003e\n\u003c/div\u003e",
  "Date": "2012-08-06T08:12:05+08:00",
  "Author": "陈皓"
}