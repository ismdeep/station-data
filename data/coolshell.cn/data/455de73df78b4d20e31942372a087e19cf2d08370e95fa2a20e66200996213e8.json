{
  "Source": "coolshell.cn",
  "Title": "Eclipse开发Android应用程序入门",
  "Link": "https://coolshell.cn/articles/4270.html",
  "Content": "\u003cdiv class=\"entry-content\"\u003e\n\u003cp\u003e\u003cscript async=\"\" src=\"https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3415450859608158\" crossorigin=\"anonymous\" type=\"f6b50dc0fea53cc14b2551ad-text/javascript\"\u003e\u003c/script\u003eBy \u003ca title=\"Posts by Chris Blunt\" href=\"http://www.smashingmagazine.com/author/chris-blunt/\"\u003eChris Blunt\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003e翻译：赵锟\u003c/strong\u003e\u003cbr/\u003e\n原文出处：\u003ca href=\"http://www.smashingmagazine.com/2010/10/25/get-started-developing-for-android-with-eclipse/\"\u003ehttp://www.smashingmagazine.com/2010/10/25/get-started-developing-for-android-with-eclipse/\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003e如今的移动设备应用程序开发充满着让人振奋的东西。功能强大的硬件支持，平板电脑，多样的软件平台（塞班 OS，iOS，WebOS，Windows Phone 7…)，移动设备开发者前景充满了机会和挑战。\u003c/p\u003e\n\u003cp\u003e当你想要开始开发你的移动设备程序时，如此多的选择可能让你产生困扰。究竟应该选择神马平台？我应该学习神马语言？为你计划的项目选择神马工具？在本教程中，你将学会如何在Google公司的开源移动设备操作系统Android下开发应用程序。\u003c/p\u003e\n\u003ch3\u003e为神马选Android\u003c/h3\u003e\n\u003cp\u003eAndroid是一个基于Linux内核的开源平台， 并且被安装在来自于不同厂商的上千种设备中。Android将各种移动设备的硬件如 电子罗盘，摄像头，GPS，方向感应，等等暴露给你的应用程序。\u003cbr/\u003e\n\u003cspan id=\"more-4270\"\u003e\u003c/span\u003e\u003cbr/\u003e\nAndroid的免费开发工具可以让你以0成本开始编写你的软件。当你想向世界展示你的应用程序的时候，你可以将你的软件发布到Google的 Android 市场。向Andriod Market 发布程序只一次性的收取注册费用（25元），并且不像苹果的App Store ，对每一次的提交都要做检查，除非你的程序明显地违法，在经过一个快速检查的流程后，才能让你的程序提供给客户下载和购买。\u003c/p\u003e\n\u003cp\u003e下面是Android对于开发者的优点：\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eAndroid的SDK可以在Windows,Mac和Linux上运行，因此你不需要为了开发环境支付额外的新硬件投入。（译者注：我曾近在Win7 64x + VMWare上成功的安装Mac Snow leopard + XCode的开发环境，对于爱用盗版的人来说，这点MS优势不是很大啊）\u003c/li\u003e\n\u003cli\u003e构建于JAVA上的SDK。如果你熟悉JAVA语言，你就是事半功倍了。（译者注：这个酷壳有篇文章讨论过，大家可以参看：\u003ca href=\"https://coolshell.cn\" target=\"_blank\"\u003ehttps://coolshell.cn\u003c/a\u003e）\u003c/li\u003e\n\u003cli\u003e你只要在Android Market上发布应用程序，你将有潜在的成千上万的用户。而且你不一定非要把程序发布在Android Market上，你还可以在你的博客上发布。而且有传言，Amazon已近在最近准备搭建他们自己的Android 应用程序商店了。\u003c/li\u003e\n\u003cli\u003e除了了技术性的\u003ca href=\"https://developer.android.com/sdk/index.html\"\u003eSDK 文档\u003c/a\u003e外,还可以找到其他更多的使用者和开发者的资源。\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e闲话少说——下面让我们进入正题，开始开发我们的Android应用程序。\u003c/p\u003e\n\u003ch3\u003e安装Eclipse和Android SDK\u003c/h3\u003e\n\u003cp\u003eAndroid应用程序的推荐开发环境是带有Android开发包插件(Android Devlopment Toolkit (ADT))的Eclipse。我在这里简要说明一下安装流程。如果你需要更多的细节，Google的\u003ca href=\"https://developer.android.com/sdk/\"\u003e开发人员网页\u003c/a\u003e中详尽地解释了具体的安装配置过程\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e为你的平台下载\u003ca href=\"https://developer.android.com/\"\u003eAndroid SDK\u003c/a\u003e（Windows ， Mac OS X 或者 Linux）。\u003c/li\u003e\n\u003cli\u003e在你的硬盘上解压下载文件 (在Linux, 我使用 /opt/local/).\u003c/li\u003e\n\u003cli\u003e如果你没有安装Eclipse，下载并安装\u003ca href=\"http://eclipse.org/downloads/packages/eclipse-ide-java-developers/galileosr2\"\u003eEclipse JAVA 集成开发环境\u003c/a\u003e包。 用于编程的话, Google推荐使用Eclipse 3.5 (Galileo).\u003c/li\u003e\n\u003cli\u003e运行Eclipse 并选择\u003cem\u003eHelp-\u0026gt;Install New Software\u003c/em\u003e.\u003c/li\u003e\n\u003cli\u003e在Available Software窗口中点击Add按钮。\u003c/li\u003e\n\u003cli\u003e进入 Android Development Tools 的\u003cem\u003eName\u003c/em\u003e输入框, 在Location 输入框输入https://dl-ssl.google.com/android/eclipse/\u003c/li\u003e\n\u003cli\u003e检查可用软件中有Developer Tools并点击OK按钮。这将安装Android Development Tools 和DDMS, Android的调试工具。\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e\u003cimg decoding=\"async\" class=\"aligncenter size-full wp-image-4306\" title=\"install\" src=\"https://coolshell.cn/wp-content/uploads/2011/04/install.gif\" alt=\"\" width=\"500\" height=\"519\"/\u003e\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e点击Next和Finish按钮以完成安装，安装完成后，你需要重启你的Eclipse一次。\u003c/li\u003e\n\u003cli\u003e在Eclipse重启后，选择Window-\u0026gt;Preference 后你可以在分类列表中看到Android这一项了。\u003c/li\u003e\n\u003cli\u003e现在需要告诉Eclipse，你的Android SDK安装在什么地方。点击Android项后浏览选择你解压后的Android SDK所在的路径。例如/opt/local/android-sdk。\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e\u003cimg decoding=\"async\" loading=\"lazy\" class=\"aligncenter size-full wp-image-4303\" title=\"eclipse_android_preferences\" src=\"https://coolshell.cn/wp-content/uploads/2011/04/eclipse_android_preferences.jpg\" alt=\"\" width=\"696\" height=\"649\" srcset=\"https://coolshell.cn/wp-content/uploads/2011/04/eclipse_android_preferences.jpg 696w, https://coolshell.cn/wp-content/uploads/2011/04/eclipse_android_preferences-300x279.jpg 300w\" sizes=\"(max-width: 696px) 100vw, 696px\"/\u003e\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e点击OK按钮，保存信息。\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003e选择Android 平台\u003c/h3\u003e\n\u003cp\u003e在你开始编写Android应用程序之前，你需要为你需要开发应用程序的Android设备下载SDK平台。每个平台都有可以安装在用户设备上的不同版本的SDK。对于Android1.5或以上版本，有两个可用的平台： \u003cem\u003eAndroid Open Source Project\u003c/em\u003e 和 \u003cem\u003eGoogle\u003c/em\u003e.\u003c/p\u003e\n\u003cp\u003e\u003cem\u003eAndroid Open Source Project\u003c/em\u003e 平台是开源的，但是不包括Google公司的私有化扩展，比如Google Map。如果不选择使用Google的API，Google的地图功能就不会在你的应用程序中生效。除非你有特别的原因，否则我们推荐你选择Google平台，因为这样你可享受到Google的扩展类库提供的便利。\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e选择\u003cem\u003eWindow Android SDK and AVD Manager\u003c/em\u003e.\u003c/li\u003e\n\u003cli\u003e点击左栏中的\u003cem\u003eAvailable Packages\u003c/em\u003e 并选择选择Respository中有效的Android SDK平台。\u003c/li\u003e\n\u003cli\u003e你可以选择列表中所需要的平台，或全选下载所有有效的平台。当你选择完毕，单击\u003cem\u003eInstall Selected \u003c/em\u003e并完成安装。\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e\u003cimg decoding=\"async\" loading=\"lazy\" class=\"aligncenter size-full wp-image-4307\" title=\"sdk\" src=\"https://coolshell.cn/wp-content/uploads/2011/04/sdk.jpg\" alt=\"\" width=\"500\" height=\"291\" srcset=\"https://coolshell.cn/wp-content/uploads/2011/04/sdk.jpg 500w, https://coolshell.cn/wp-content/uploads/2011/04/sdk-300x174.jpg 300w\" sizes=\"(max-width: 500px) 100vw, 500px\"/\u003e\u003cbr/\u003e\n一旦成功的下载所有的平台后，你就可以准备开始开发Android应用程序了。\u003c/p\u003e\n\u003ch3\u003e创建一个新的Android项目\u003c/h3\u003e\n\u003cp\u003eEclipse的新建项目向导能为你创建一个新的Android项目，并生成可以开始运行的文件和代码。通过向导生成代码，可以让你马上得到一个Android程序运行的直观映像并为你提供了一个帮助你快速入门的方法：\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e选择 \u003cem\u003eFile-\u0026gt;New-\u0026gt;Project…\u003c/em\u003e\u003c/li\u003e\n\u003cli\u003e选择\u003cem\u003eAndroid Project\u003c/em\u003e\u003c/li\u003e\n\u003cli\u003e在\u003cem\u003eNew Project\u003c/em\u003e 对话框, 键入如下的设置:\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e[code]\u003cbr/\u003e\nProject Name: BrewClock\u003cbr/\u003e\nBuild Target: Google Inc. 1.6 (Api Level 4)\u003cbr/\u003e\nApplication Name: BrewClock\u003cbr/\u003e\nPackage Name: com.example.brewclock\u003cbr/\u003e\nCreate Activity: BrewClockActivity\u003cbr/\u003e\nMin SDK Version: 4\u003cbr/\u003e\n[/code]\u003c/p\u003e\n\u003cp\u003e\u003cimg decoding=\"async\" loading=\"lazy\" class=\"aligncenter size-full wp-image-4304\" title=\"eclipse_new_project_settings\" src=\"https://coolshell.cn/wp-content/uploads/2011/04/eclipse_new_project_settings.jpg\" alt=\"\" width=\"525\" height=\"1061\" srcset=\"https://coolshell.cn/wp-content/uploads/2011/04/eclipse_new_project_settings.jpg 525w, https://coolshell.cn/wp-content/uploads/2011/04/eclipse_new_project_settings-148x300.jpg 148w, https://coolshell.cn/wp-content/uploads/2011/04/eclipse_new_project_settings-506x1024.jpg 506w\" sizes=\"(max-width: 525px) 100vw, 525px\"/\u003e\u003c/p\u003e\n\u003cp\u003e在点击了完成按钮之后，Eclipse将为你创建一个新的可以运行的Android项目。注意，你通知了Eclipse生成了一个叫做BrewClockActivity的Activity。这个Activity的代码用于运行你的应用程序。生成的代码将在程序运行时非常简单地显示一条“Hello World”消息。\u003c/p\u003e\n\u003cdiv id=\"ez-toc-container\" class=\"ez-toc-v2_0_48 counter-hierarchy ez-toc-counter ez-toc-grey ez-toc-container-direction\"\u003e\n\u003cdiv class=\"ez-toc-title-container\"\u003e\n\u003cp class=\"ez-toc-title\"\u003e目录\u003c/p\u003e\n\u003cspan class=\"ez-toc-title-toggle\"\u003e\u003c/span\u003e\u003c/div\u003e\n\u003cnav\u003e\u003cul class=\"ez-toc-list ez-toc-list-level-1 \"\u003e\u003cli class=\"ez-toc-page-1 ez-toc-heading-level-4\"\u003e\u003ca class=\"ez-toc-link ez-toc-heading-1\" href=\"#%E5%8C%85\" title=\"包\"\u003e包\u003c/a\u003e\u003c/li\u003e\u003cli class=\"ez-toc-page-1 ez-toc-heading-level-4\"\u003e\u003ca class=\"ez-toc-link ez-toc-heading-2\" href=\"#SDK_%E7%89%88%E6%9C%AC\" title=\"SDK 版本\"\u003eSDK 版本\u003c/a\u003e\u003c/li\u003e\u003cli class=\"ez-toc-page-1 ez-toc-heading-level-4\"\u003e\u003ca class=\"ez-toc-link ez-toc-heading-3\" href=\"#Android_%E8%99%9A%E6%8B%9F%E8%AE%BE%E5%A4%87\" title=\"Android 虚拟设备\"\u003eAndroid 虚拟设备\u003c/a\u003e\u003c/li\u003e\u003cli class=\"ez-toc-page-1 ez-toc-heading-level-4\"\u003e\u003ca class=\"ez-toc-link ez-toc-heading-4\" href=\"#%E8%BF%90%E8%A1%8C%E4%BB%A3%E7%A0%81\" title=\"运行代码\"\u003e运行代码\u003c/a\u003e\u003c/li\u003e\u003cli class=\"ez-toc-page-1 ez-toc-heading-level-4\"\u003e\u003ca class=\"ez-toc-link ez-toc-heading-5\" href=\"#%E8%AE%BE%E8%AE%A1%E7%94%A8%E6%88%B7%E7%95%8C%E9%9D%A2\" title=\"设计用户界面\"\u003e设计用户界面\u003c/a\u003e\u003c/li\u003e\u003cli class=\"ez-toc-page-1 ez-toc-heading-level-4\"\u003e\u003ca class=\"ez-toc-link ez-toc-heading-6\" href=\"#%E5%BC%80%E5%8F%91%E7%94%A8%E6%88%B7%E7%95%8C%E9%9D%A2\" title=\"开发用户界面\"\u003e开发用户界面\u003c/a\u003e\u003c/li\u003e\u003cli class=\"ez-toc-page-1 ez-toc-heading-level-4\"\u003e\u003ca class=\"ez-toc-link ez-toc-heading-7\" href=\"#%E5%85%B3%E8%81%94%E4%BD%A0%E7%9A%84%E5%B8%83%E5%B1%80Layout%E4%B8%8E%E4%BB%A3%E7%A0%81\" title=\"关联你的布局Layout与代码\"\u003e关联你的布局Layout与代码\u003c/a\u003e\u003c/li\u003e\u003cli class=\"ez-toc-page-1 ez-toc-heading-level-4\"\u003e\u003ca class=\"ez-toc-link ez-toc-heading-8\" href=\"#%E8%B5%84%E6%BA%90%E5%AF%B9%E8%B1%A1\" title=\"资源对象\"\u003e资源对象\u003c/a\u003e\u003c/li\u003e\u003cli class=\"ez-toc-page-1 ez-toc-heading-level-4\"\u003e\u003ca class=\"ez-toc-link ez-toc-heading-9\" href=\"#%E7%9B%91%E5%90%AC%E4%BA%8B%E4%BB%B6\" title=\"监听事件\"\u003e监听事件\u003c/a\u003e\u003c/li\u003e\u003cli class=\"ez-toc-page-1 ez-toc-heading-level-4\"\u003e\u003ca class=\"ez-toc-link ez-toc-heading-10\" href=\"#%E9%81%BF%E5%85%8D%E5%9C%A8%E4%BD%A0%E7%9A%84%E4%BB%A3%E7%A0%81%E4%B8%AD%E7%A1%AC%E7%BC%96%E7%A0%81\" title=\"避免在你的代码中硬编码\"\u003e避免在你的代码中硬编码\u003c/a\u003e\u003c/li\u003e\u003cli class=\"ez-toc-page-1 ez-toc-heading-level-4\"\u003e\u003ca class=\"ez-toc-link ez-toc-heading-11\" href=\"#%E8%BF%90%E8%A1%8CBrew_Clock\" title=\"运行Brew Clock\"\u003e运行Brew Clock\u003c/a\u003e\u003c/li\u003e\u003c/ul\u003e\u003c/nav\u003e\u003c/div\u003e\n\u003ch4\u003e\u003cspan class=\"ez-toc-section\" id=\"%E5%8C%85\"\u003e\u003c/span\u003e包\u003cspan class=\"ez-toc-section-end\"\u003e\u003c/span\u003e\u003c/h4\u003e\n\u003cp\u003e包名是你的应用程序标示。当你开始准备在Android Market上发布你的应用程序的时候，Android用这个标识符精确地记录你的应用程序的更新过程，因此让包名唯一是非常重要的。尽管我们在这里使用了com.example.brewclock这样的名字空间，对于真实的应用程序，你应该选择类似于com.你的公司名.你的应用程序名 这样的包名。\u003c/p\u003e\n\u003ch4\u003e\u003cspan class=\"ez-toc-section\" id=\"SDK_%E7%89%88%E6%9C%AC\"\u003e\u003c/span\u003eSDK 版本\u003cspan class=\"ez-toc-section-end\"\u003e\u003c/span\u003e\u003c/h4\u003e\n\u003cp\u003eMin SDK Version 是你的Android程序所能运行得最早版本号。对于每个新发布的Android，SDK会增加并修改一些方法。通过选择一个版本号，Android（Android Market）会知道你的应用程序能运行在等于或晚于指定版本的设备之上。\u003c/p\u003e\n\u003ch3\u003e运行你的应用程序\u003c/h3\u003e\n\u003cp\u003e现在让我们开始在Eclipse中运行我们的应用程序。由于是第一次运行，Eclipse将会询问你的项目类型：\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e选择\u003cem\u003eRun-\u0026gt;Run\u003c/em\u003e 或 按下 \u003cem\u003eCtrl+F11\u003c/em\u003e.\u003c/li\u003e\n\u003cli\u003e选择\u003cem\u003eAndroid Application\u003c/em\u003e 并点击 \u003cem\u003eOK \u003c/em\u003e按钮.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eEclipse 将会在一个Android设备上运行一个应用程序。在这个时候，由于你没有任何Android设备，因此在运行时一定会返回一个失败，并且询问你是否要新建一个Android的虚拟设备。（AVD）\u003cbr/\u003e\n\u003cimg decoding=\"async\" loading=\"lazy\" class=\"aligncenter size-full wp-image-4305\" title=\"eclipse_no_avd\" src=\"https://coolshell.cn/wp-content/uploads/2011/04/eclipse_no_avd.jpg\" alt=\"\" width=\"534\" height=\"172\" srcset=\"https://coolshell.cn/wp-content/uploads/2011/04/eclipse_no_avd.jpg 534w, https://coolshell.cn/wp-content/uploads/2011/04/eclipse_no_avd-300x96.jpg 300w\" sizes=\"(max-width: 534px) 100vw, 534px\"/\u003e\u003c/p\u003e\n\u003ch4\u003e\u003cspan class=\"ez-toc-section\" id=\"Android_%E8%99%9A%E6%8B%9F%E8%AE%BE%E5%A4%87\"\u003e\u003c/span\u003eAndroid 虚拟设备\u003cspan class=\"ez-toc-section-end\"\u003e\u003c/span\u003e\u003c/h4\u003e\n\u003cp\u003eAndroid 虚拟设备 (AVD) 是一个模拟真实世界中Android设备的模拟器，例如移动电话或平板电脑。你可以在不买任何真实Android设备情况下，使用AVD测试你的应用。\u003c/p\u003e\n\u003cp\u003e你可以创建任意多个你喜欢的AVD，每个可以建立在不同版本的Android平台之上。对于你创建的每个Android设备，你可以配置不同的硬件属性，比如是否具有物理键盘，是否支持GPS，摄像头的像素，等等。\u003c/p\u003e\n\u003cp\u003e在你开始运行你的应用程序之前，你需要创建你的AVD，来运行指定的SDK平台（Google APIs 1.6）。\u003c/p\u003e\n\u003cp\u003e现在让我开始:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e如果还没有开始运行你的应用程序，点击run（或按下 \u003cem\u003eCtrl+F11\u003c/em\u003e）。\u003c/li\u003e\n\u003cli\u003e当目标设备弹出警告，点击\u003cem\u003eYes\u003c/em\u003e 以创建新的AVD。\u003c/li\u003e\n\u003cli\u003e单击\u003cem\u003eAndroid SDK and AVD Manager\u003c/em\u003e 对话框内的\u003cem\u003eNew\u003c/em\u003e 按钮.\u003c/li\u003e\n\u003cli\u003e为你的AVD键入如下的设置：\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e[code]\u003cbr/\u003e\nName: Android_1.6\u003cbr/\u003e\nTarget: Google APIs (Google Inc.) – API Level 4\u003cbr/\u003e\nSD Card Size: 16 MiB\u003cbr/\u003e\nSkin Built In: Default (HVGA)\u003cbr/\u003e\n[/code]\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e单击 \u003cem\u003eCreate AVD\u003c/em\u003e 让Android为你创建一个新虚拟设备。\u003c/li\u003e\n\u003cli\u003e关闭the \u003cem\u003eAndroid SDK and AVD Manager\u003c/em\u003e 对话框.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e\u003cimg decoding=\"async\" loading=\"lazy\" class=\"aligncenter size-full wp-image-4308\" title=\"sdk_manager_new_avd\" src=\"https://coolshell.cn/wp-content/uploads/2011/04/sdk_manager_new_avd.jpg\" alt=\"\" width=\"400\" height=\"574\" srcset=\"https://coolshell.cn/wp-content/uploads/2011/04/sdk_manager_new_avd.jpg 400w, https://coolshell.cn/wp-content/uploads/2011/04/sdk_manager_new_avd-209x300.jpg 209w\" sizes=\"(max-width: 400px) 100vw, 400px\"/\u003e\u003c/p\u003e\n\u003ch4\u003e\u003cspan class=\"ez-toc-section\" id=\"%E8%BF%90%E8%A1%8C%E4%BB%A3%E7%A0%81\"\u003e\u003c/span\u003e运行代码\u003cspan class=\"ez-toc-section-end\"\u003e\u003c/span\u003e\u003c/h4\u003e\n\u003cp\u003e再次运行你的应用程序（\u003cem\u003eCtrl+F11\u003c/em\u003e）。 Eclipse 将build 你的项目并运行一个新的AVD。记住，AVD模拟了一个完全的Android系统，因此你需要有耐心来等待这个缓慢的启动过程，就如同你重启真实的Android设备一样。一个好的做法是不要关闭你的AVD，直到你完成了你一天的工作。\u003cbr/\u003e\n当你的模拟器启动后，Eclipse自动地安装并运行你的应用程序。\u003c/p\u003e\n\u003cp\u003e\u003cimg decoding=\"async\" loading=\"lazy\" class=\"aligncenter size-full wp-image-4301\" title=\"app_running-550-e1287474474253\" src=\"https://coolshell.cn/wp-content/uploads/2011/04/app_running-550-e1287474474253.jpg\" alt=\"\" width=\"499\" height=\"355\" srcset=\"https://coolshell.cn/wp-content/uploads/2011/04/app_running-550-e1287474474253.jpg 499w, https://coolshell.cn/wp-content/uploads/2011/04/app_running-550-e1287474474253-300x213.jpg 300w\" sizes=\"(max-width: 499px) 100vw, 499px\"/\u003e\u003c/p\u003e\n\u003ch3\u003e开发你第一个Android应用\u003c/h3\u003e\n\u003cp\u003e生成的代码能良好的运行，但是你真正想要的是开发一个真实的应用程序。为此，我们首先果一个咸蛋的设计流程，并开始创建一个可以让你部署在Android设备上的应用。\u003c/p\u003e\n\u003cp\u003e大部分的开发者（包括我自己）都喜欢每天一杯咖啡或茶。在下一节中，你将开发一个简单的泡茶计数器应用程序来记录用户泡了多少杯茶，并为泡每杯茶做一个定时器。\u003c/p\u003e\n\u003cp\u003e你可以从\u003ca href=\"https://github.com/cblunt/brewclock\"\u003eGitHub\u003c/a\u003e下载整个教程的源代码.\u003c/p\u003e\n\u003ch4\u003e\u003cspan class=\"ez-toc-section\" id=\"%E8%AE%BE%E8%AE%A1%E7%94%A8%E6%88%B7%E7%95%8C%E9%9D%A2\"\u003e\u003c/span\u003e设计用户界面\u003cspan class=\"ez-toc-section-end\"\u003e\u003c/span\u003e\u003c/h4\u003e\n\u003cp\u003e在开发任何Android应用程序之前的第一步就是设计和开发用户界面。下面是一个我们这个应用程序的用户界面的一个概览。\u003c/p\u003e\n\u003cp\u003e\u003cimg decoding=\"async\" loading=\"lazy\" class=\"aligncenter size-full wp-image-4302\" title=\"design_sketch\" src=\"https://coolshell.cn/wp-content/uploads/2011/04/design_sketch.jpg\" alt=\"\" width=\"331\" height=\"505\" srcset=\"https://coolshell.cn/wp-content/uploads/2011/04/design_sketch.jpg 331w, https://coolshell.cn/wp-content/uploads/2011/04/design_sketch-196x300.jpg 196w\" sizes=\"(max-width: 331px) 100vw, 331px\"/\u003e\u003c/p\u003e\n\u003cp\u003e用户将能通过+和-按钮设置一个泡茶的定时器。当单击开始按钮，定时器将开始按指定的时间递减。除非用户再次点击按钮以取消计时，否则当定时器为0的时候，累计的泡茶计数brew将增加1。\u003c/p\u003e\n\u003ch4\u003e\u003cspan class=\"ez-toc-section\" id=\"%E5%BC%80%E5%8F%91%E7%94%A8%E6%88%B7%E7%95%8C%E9%9D%A2\"\u003e\u003c/span\u003e开发用户界面\u003cspan class=\"ez-toc-section-end\"\u003e\u003c/span\u003e\u003c/h4\u003e\n\u003cp\u003eAndroid 用户界面或布局\u003cem\u003elayouts\u003c/em\u003e, 是通过XML文档来描述的，可以在项目的res/layouts目录下找到。在之前运行在模拟器上代码中，我们可以看到由eclipse自动生成的布局代码在res/layouts/main.xml 中。\u003c/p\u003e\n\u003cp\u003eEclipse有一个图形化的布局设计器，通过在屏幕上的拖拽控制来完成布局的设计，然而，我却发现直接写XML并使用图形布局来预览是更容易的方式。\u003c/p\u003e\n\u003cp\u003e现在让我们对main.xml做一些工作以达到上图的效果：\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e在Eclipse中通过双击PackageExplorer的res/layouts/main.xml 来打开xml。\u003c/li\u003e\n\u003cli\u003e点击屏幕下方main.xml 来切换为xml视图。\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e将main.xml中内容改为如下的内容：\u003c/p\u003e\n\u003cp\u003e[code]\u003cbr/\u003e\n# /res/layouts/main.xml\u003cbr/\u003e\n\u0026lt;?xml version=\u0026#34;1.0\u0026#34; encoding=\u0026#34;utf-8\u0026#34;?\u0026gt;\u003cbr/\u003e\n\u0026lt;LinearLayout\u003cbr/\u003e\nxmlns:android=\u0026#34;http://schemas.android.com/apk/res/android\u0026#34;\u003cbr/\u003e\nandroid:orientation=\u0026#34;vertical\u0026#34;\u003cbr/\u003e\nandroid:layout_width=\u0026#34;fill_parent\u0026#34;\u003cbr/\u003e\nandroid:layout_height=\u0026#34;fill_parent\u0026#34;\u0026gt;\u003cbr/\u003e\n\u0026lt;LinearLayout\u003cbr/\u003e\nandroid:orientation=\u0026#34;horizontal\u0026#34;\u003cbr/\u003e\nandroid:layout_width=\u0026#34;fill_parent\u0026#34;\u003cbr/\u003e\nandroid:layout_height=\u0026#34;wrap_content\u0026#34;\u003cbr/\u003e\nandroid:padding=\u0026#34;10dip\u0026#34;\u0026gt;\u003cbr/\u003e\n\u0026lt;TextView\u003cbr/\u003e\nandroid:layout_width=\u0026#34;wrap_content\u0026#34;\u003cbr/\u003e\nandroid:layout_height=\u0026#34;wrap_content\u0026#34;\u003cbr/\u003e\nandroid:textSize=\u0026#34;20dip\u0026#34;\u003cbr/\u003e\nandroid:text=\u0026#34;Brews: \u0026#34; /\u0026gt;\u003cbr/\u003e\n\u0026lt;TextView\u003cbr/\u003e\nandroid:layout_width=\u0026#34;fill_parent\u0026#34;\u003cbr/\u003e\nandroid:layout_height=\u0026#34;wrap_content\u0026#34;\u003cbr/\u003e\nandroid:text=\u0026#34;None\u0026#34;\u003cbr/\u003e\nandroid:gravity=\u0026#34;right\u0026#34;\u003cbr/\u003e\nandroid:textSize=\u0026#34;20dip\u0026#34;\u003cbr/\u003e\nandroid:id=\u0026#34;@+id/brew_count_label\u0026#34; /\u0026gt;\u003cbr/\u003e\n\u0026lt;/LinearLayout\u0026gt;\u003cbr/\u003e\n\u0026lt;LinearLayout\u003cbr/\u003e\nandroid:orientation=\u0026#34;horizontal\u0026#34;\u003cbr/\u003e\nandroid:layout_width=\u0026#34;fill_parent\u0026#34;\u003cbr/\u003e\nandroid:layout_height=\u0026#34;wrap_content\u0026#34;\u003cbr/\u003e\nandroid:layout_weight=\u0026#34;1\u0026#34;\u003cbr/\u003e\nandroid:gravity=\u0026#34;center\u0026#34;\u003cbr/\u003e\nandroid:padding=\u0026#34;10dip\u0026#34;\u0026gt;\u003cbr/\u003e\n\u0026lt;Button\u003cbr/\u003e\nandroid:id=\u0026#34;@+id/brew_time_down\u0026#34;\u003cbr/\u003e\nandroid:layout_width=\u0026#34;wrap_content\u0026#34;\u003cbr/\u003e\nandroid:layout_height=\u0026#34;wrap_content\u0026#34;\u003cbr/\u003e\nandroid:text=\u0026#34;-\u0026#34;\u003cbr/\u003e\nandroid:textSize=\u0026#34;40dip\u0026#34; /\u0026gt;\u003cbr/\u003e\n\u0026lt;TextView\u003cbr/\u003e\nandroid:id=\u0026#34;@+id/brew_time\u0026#34;\u003cbr/\u003e\nandroid:layout_width=\u0026#34;wrap_content\u0026#34;\u003cbr/\u003e\nandroid:layout_height=\u0026#34;wrap_content\u0026#34;\u003cbr/\u003e\nandroid:text=\u0026#34;0:00\u0026#34;\u003cbr/\u003e\nandroid:textSize=\u0026#34;40dip\u0026#34;\u003cbr/\u003e\nandroid:padding=\u0026#34;10dip\u0026#34; /\u0026gt;\u003cbr/\u003e\n\u0026lt;Button\u003cbr/\u003e\nandroid:id=\u0026#34;@+id/brew_time_up\u0026#34;\u003cbr/\u003e\nandroid:layout_width=\u0026#34;wrap_content\u0026#34;\u003cbr/\u003e\nandroid:layout_height=\u0026#34;wrap_content\u0026#34;\u003cbr/\u003e\nandroid:text=\u0026#34;+\u0026#34;\u003cbr/\u003e\nandroid:textSize=\u0026#34;40dip\u0026#34; /\u0026gt;\u003cbr/\u003e\n\u0026lt;/LinearLayout\u0026gt;\u003cbr/\u003e\n\u0026lt;Button\u003cbr/\u003e\nandroid:id=\u0026#34;@+id/brew_start\u0026#34;\u003cbr/\u003e\nandroid:layout_width=\u0026#34;fill_parent\u0026#34;\u003cbr/\u003e\nandroid:layout_height=\u0026#34;wrap_content\u0026#34;\u003cbr/\u003e\nandroid:layout_gravity=\u0026#34;bottom\u0026#34;\u003cbr/\u003e\nandroid:text=\u0026#34;Start\u0026#34; /\u0026gt;\u003cbr/\u003e\n\u0026lt;/LinearLayout\u0026gt;\u003c/p\u003e\n\u003cp\u003e[/code]\u003c/p\u003e\n\u003cp\u003e正如你所见的，Android的XML布局文件是繁琐的，但却能让你控制到屏幕的各个元素。\u003c/p\u003e\n\u003cp\u003e在Android中最重要的接口元素是布局Layout容器，例如例子中使用的LinearLayout 。这些元素对于用户是不可见的,但是却扮演者例如Buttons 和TextViews这些元素的布局容器。\u003c/p\u003e\n\u003cp\u003eAndroid中有几种不同类型的布局视图layout view，每一种都用于开发不同的布局。如同LinearLayout 和AbsoluteLayout ，TableLayout 可以让你使用更为复杂的基于表格结构的布局。你可以在SDK的API文档的\u003ca href=\"https://developer.android.com/guide/topics/ui/layout-objects.html\"\u003e通用布局对象\u003c/a\u003e中查找到更多的布局。\u003c/p\u003e\n\u003ch4\u003e\u003cspan class=\"ez-toc-section\" id=\"%E5%85%B3%E8%81%94%E4%BD%A0%E7%9A%84%E5%B8%83%E5%B1%80Layout%E4%B8%8E%E4%BB%A3%E7%A0%81\"\u003e\u003c/span\u003e关联你的布局Layout与代码\u003cspan class=\"ez-toc-section-end\"\u003e\u003c/span\u003e\u003c/h4\u003e\n\u003cp\u003e保存你的布局，在Eclipse中点击\u003cem\u003eRun\u003c/em\u003e图标或按下\u003cem\u003eCtrl+F11\u003c/em\u003e重新在模拟器中运行你的程序。你现看到不是之前出现的Hello World消息了，你将看到Android显示了一个新的界面。\u003c/p\u003e\n\u003cp\u003e如果点击界面上的任何按钮，他们将期望的显示为高亮，但是不会执行任何操作。现在让我们在布局修改后改进一下我们的源码：\u003c/p\u003e\n\u003cp\u003e# /src/com/example/brewclock/BrewClockActivity.java\u003c/p\u003e\n\u003cpre data-enlighter-language=\"java\" class=\"EnlighterJSRAW\"\u003e...\nimport android.widget.Button;\nimport android.widget.TextView;\n\npublic class BrewClockActivity extends Activity {\n  /** Properties **/\n  protected Button brewAddTime;\n  protected Button brewDecreaseTime;\n  protected Button startBrew;\n  protected TextView brewCountLabel;\n  protected TextView brewTimeLabel;\n\n  ...\n }\n\u003c/pre\u003e\n\u003cp\u003e下一步,我们将修改调用onCreate。当Android启动你的应用程序的时候，Android会首先调用这个方法。 在Eclipse生成的代码中，onCreate把activity的视图设置成R.layout.main。这行代码告诉Android解释我们的布局配置XML文件，并显示它。\u003c/p\u003e\n\u003ch4\u003e\u003cspan class=\"ez-toc-section\" id=\"%E8%B5%84%E6%BA%90%E5%AF%B9%E8%B1%A1\"\u003e\u003c/span\u003e资源对象\u003cspan class=\"ez-toc-section-end\"\u003e\u003c/span\u003e\u003c/h4\u003e\n\u003cp\u003e在Android中，R是一个自动生成的对象，这是一个特殊的对象，你可以在代码中通过这个对象访问项目中的资源（布局，字符串，菜单，图标，…） 。每个资源都有一个给定的id。在上面的那个布局文件中，有一些@+id XML 属性。我们将通过这些值来关联布局中的Buttons 与TextViews和我们的代码和：\u003c/p\u003e\n\u003cp\u003e# /src/com/example/brewclock/BrewClockActivity.java\u003c/p\u003e\n\u003cpre data-enlighter-language=\"java\" class=\"EnlighterJSRAW\"\u003e...\npublic class BrewClockActivity extends Activity {\n  ...\n  public void onCreate(Bundle savedInstanceState) {\n    super.onCreate(savedInstanceState);\n    setContentView(R.layout.main);\n\n    // Connect interface elements to properties\n    brewAddTime = (Button) findViewById(R.id.brew_time_up);\n    brewDecreaseTime = (Button) findViewById(R.id.brew_time_down);\n    startBrew = (Button) findViewById(R.id.brew_start);\n    brewCountLabel = (TextView) findViewById(R.id.brew_count_label);\n    brewTimeLabel = (TextView) findViewById(R.id.brew_time);\n  }\n}\n\u003c/pre\u003e\n\u003ch4\u003e\u003cspan class=\"ez-toc-section\" id=\"%E7%9B%91%E5%90%AC%E4%BA%8B%E4%BB%B6\"\u003e\u003c/span\u003e监听事件\u003cspan class=\"ez-toc-section-end\"\u003e\u003c/span\u003e\u003c/h4\u003e\n\u003cp\u003e为了检测到用户单击我们的按钮，我们需要实现一个监听器listener。你可能会从其他的事件驱动系统中熟悉监听器或回调函数\u003cem\u003ecallbacks\u003c/em\u003e。比如Javascript/JQuery事件或Rails的回调函数。\u003c/p\u003e\n\u003cp\u003eAndroid通过Listener接口提供相似的机制，例如OnClickListener，这个接口中定义了那些会被事件触发的方法。当用户点击屏幕的时候，实现OnClickListener 接口将会通知你的应用程序，并告诉他们所按得屏幕按钮。你当然也需要告诉每个button的ClickListener，以便Android知道具体通知到那个监听器：\u003c/p\u003e\n\u003cp\u003e# /src/com/example/brewclock/BrewClockActivity.java\u003c/p\u003e\n\u003cpre data-enlighter-language=\"java\" class=\"EnlighterJSRAW\"\u003e...\n// Be sure not to import\n// `android.content.dialoginterface.OnClickListener`.\nimport android.view.View.OnClickListener;\n\npublic class BrewClockActivity extends Activity\n  implements OnClickListener {\n  ...\n  public void onCreate(Bundle savedInstanceState) {\n    ...\n    // Setup ClickListeners\n    brewAddTime.setOnClickListener(this);\n    brewDecreaseTime.setOnClickListener(this);\n    startBrew.setOnClickListener(this);\n  }\n  ...\n  public void onClick(View v) {\n    // TODO: Add code to handle button taps\n  }\n}\n\u003c/pre\u003e\n\u003cp\u003e下一步，我们将增加每个按钮按下的处理过程。我们将为Activity类增加4个属性，这些属性将用来让用户设置和记录我们泡茶时间，泡茶计数，计时器是否在运行的标志。\u003c/p\u003e\n\u003cp\u003e# /src/com/example/brewclock/BrewClockActivity.java\u003c/p\u003e\n\u003cpre data-enlighter-language=\"java\" class=\"EnlighterJSRAW\"\u003e...\npublic class BrewClockActivity extends Activity\n  implements OnClickListener {\n  ...\n  protected int brewTime = 3;\n  protected CountDownTimer brewCountDownTimer;\n  protected int brewCount = 0;\n  protected boolean isBrewing = false;\n  ...\n  public void onClick(View v) {\n    if(v == brewAddTime)\n      setBrewTime(brewTime + 1);\n    else if(v == brewDecreaseTime)\n      setBrewTime(brewTime -1);\n    else if(v == startBrew) {\n      if(isBrewing)\n        stopBrew();\n      else\n        startBrew();\n    }\n  }\n}\n\u003c/pre\u003e\n\u003cp\u003e注意我们使用了Android提供的类CountDownTimer 。这让我们非常容易的创建和开始一个简单的递减计数，这个递减计数在递减运行的时候，每当执行一个递减就发出一个通知。你将在下面的startBrew 方法中使用到这个计数器。\u003c/p\u003e\n\u003cp\u003e在下面的方法是所有处理逻辑，这些处理逻辑用于处理设置泡茶时间，开始停止计数和维护计数器。我们同样地在onCreate方法中来初始化我们的 brewTime和 brewCount变量。\u003c/p\u003e\n\u003cp\u003e将这些代码放入到不同的类中是一种好做法。但是为了简洁，我把我们所有的代码都放到了BrewClockActivity中：\u003c/p\u003e\n\u003cp\u003e# /src/com/example/brewclock/BrewClockActivity.java\u003c/p\u003e\n\u003cpre data-enlighter-language=\"java\" class=\"EnlighterJSRAW\"\u003e...\npublic class BrewClockActivity extends Activity\n  implements OnClickListener {\n  ...\n  public void onCreate(Bundle savedInstanceState) {\n    ...\n    // Set the initial brew values\n    setBrewCount(0);\n    setBrewTime(3);\n  }\n\n  /**\n   * Set an absolute value for the number of minutes to brew.\n   * Has no effect if a brew is currently running.\n   * @param minutes The number of minutes to brew.\n   */\n  public void setBrewTime(int minutes) {\n    if(isBrewing)\n      return;\n\n    brewTime = minutes;\n\n    if(brewTime \u0026lt; 1)\n      brewTime = 1;\n\n    brewTimeLabel.setText(String.valueOf(brewTime) + \u0026#34;m\u0026#34;);\n  }\n\n  /**\n   * Set the number of brews that have been made, and update\n   * the interface.\n   * @param count The new number of brews\n   */\n  public void setBrewCount(int count) {\n    brewCount = count;\n    brewCountLabel.setText(String.valueOf(brewCount));\n  }\n\n  /**\n   * Start the brew timer\n   */\n  public void startBrew() {\n    // Create a new CountDownTimer to track the brew time\n    brewCountDownTimer = new CountDownTimer(brewTime * 60 * 1000, 1000) {\n      @Override\n      public void onTick(long millisUntilFinished) {\n        brewTimeLabel.setText(String.valueOf(millisUntilFinished / 1000) + \u0026#34;s\u0026#34;);\n      }\n\n      @Override\n      public void onFinish() {\n        isBrewing = false;\n        setBrewCount(brewCount + 1);\n\n        brewTimeLabel.setText(\u0026#34;Brew Up!\u0026#34;);\n        startBrew.setText(\u0026#34;Start\u0026#34;);\n      }\n    };\n\n    brewCountDownTimer.start();\n    startBrew.setText(\u0026#34;Stop\u0026#34;);\n    isBrewing = true;\n  }\n\n  /**\n   * Stop the brew timer\n   */\n  public void stopBrew() {\n    if(brewCountDownTimer != null)\n      brewCountDownTimer.cancel();\n\n    isBrewing = false;\n    startBrew.setText(\u0026#34;Start\u0026#34;);\n  }\n  ...\n}\n\u003c/pre\u003e\n\u003cp\u003e这段代码唯一和Android相关的就是使用setText方法来设置文本的显示文字。在startBrew方法中，我们创建，并开始了一个CountDownTimer来开每秒递减计数直到计数器为0。注意，我们定义了CountDownTimer以内联方式监听onTick 和 onFinish方法。 onTick 方法将每1000毫秒（1秒）执行一次，并递减, 当计数器为0的时候，onFinish方法被调用。\u003c/p\u003e\n\u003ch4\u003e\u003cspan class=\"ez-toc-section\" id=\"%E9%81%BF%E5%85%8D%E5%9C%A8%E4%BD%A0%E7%9A%84%E4%BB%A3%E7%A0%81%E4%B8%AD%E7%A1%AC%E7%BC%96%E7%A0%81\"\u003e\u003c/span\u003e避免在你的代码中硬编码\u003cspan class=\"ez-toc-section-end\"\u003e\u003c/span\u003e\u003c/h4\u003e\n\u003cp\u003e为了使教程代码简单，我故意地在程序中将控件的标号直接写到字串中（例如： “Brew Up!”, “Start”, “Stop”） 通常，这不是一个好的做法，因为如果在大型项目中，这样做会使得修改变得麻烦。\u003c/p\u003e\n\u003cp\u003eAndroid 提供了一种简洁的方法让你使用R对象来使字符串和代码分离。R 让你在xml文件（res/values/strings.xml）定义所有你程序中字符串，并让你可以在代码中应用到这些字符串。例如：\u003c/p\u003e\n\u003cp\u003e# /res/values/strings.xml\u003c/p\u003e\n\u003cp\u003e[code]\u003cbr/\u003e\n\u0026lt;string name=\u0026#34;brew_up_label\u0026#34;\u0026gt;Brew Up!\u0026lt;/string\u0026gt;\u003cbr/\u003e\n…\u003cbr/\u003e\n[/code]\u003c/p\u003e\n\u003cp\u003e# /res/com/example/brewclock/BrewClockActivity.java\u003c/p\u003e\n\u003cp\u003e[code]\u003cbr/\u003e\n…\u003cbr/\u003e\nbrewLabel.setText(R.string.brew_up_label);\u003cbr/\u003e\n…\u003cbr/\u003e\n[/code]\u003c/p\u003e\n\u003cp\u003e现在，如果你想改变Brew Up! 字样，你只要一次性的修改strings.xml文件就行了。你的应用将生成一堆代码来保证你程序中所有使用到这些字符串的地方都能被生效！\u003c/p\u003e\n\u003ch4\u003e\u003cspan class=\"ez-toc-section\" id=\"%E8%BF%90%E8%A1%8CBrew_Clock\"\u003e\u003c/span\u003e运行Brew Clock\u003cspan class=\"ez-toc-section-end\"\u003e\u003c/span\u003e\u003c/h4\u003e\n\u003cp\u003e代码完成之后，现在是试运行程序的时候了。单击\u003cem\u003eRun\u003c/em\u003e 或 \u003cem\u003eCtrl+F11\u003c/em\u003e 在模拟器中启动我们的应用. 所有都运行良好，你将会看到你创建的用户界面在准备时间一到就可以喝你所泡的茶了！试着设置不同的时间，并点击\u003cem\u003eStart\u003c/em\u003e 观看倒计时。\u003c/p\u003e\n\u003cp\u003e\u003cimg decoding=\"async\" loading=\"lazy\" class=\"aligncenter size-full wp-image-4300\" title=\"app_finished-550-e1287474491689\" src=\"https://coolshell.cn/wp-content/uploads/2011/04/app_finished-550-e1287474491689.jpg\" alt=\"\" width=\"499\" height=\"355\" srcset=\"https://coolshell.cn/wp-content/uploads/2011/04/app_finished-550-e1287474491689.jpg 499w, https://coolshell.cn/wp-content/uploads/2011/04/app_finished-550-e1287474491689-300x213.jpg 300w\" sizes=\"(max-width: 499px) 100vw, 499px\"/\u003e\u003c/p\u003e\n\u003ch3\u003e总结\u003c/h3\u003e\n\u003cp\u003e在这个关于Android的简单介绍中，你已学会如何安装Android SDK和Eclipse的Android 开发工具插件（ADT）。你也学会如何创建一个模拟设备，并通过这个设备来测试你的应用程序。你还学会了如何开发Android应用程序。上面了那些作为标题的关键概念在以后你自己开发Android应用程序的时候将会经常用到。\u003c/p\u003e\n\u003cp\u003e我们希望，这个教程能激发你的开发移动应用程序的欲望，并步入这个令人激动的领域。Android为当前和即将到来的移动设备应用程序开发提供了一条宽广的道路。如果你已经开发你自己的移动应用，请在评论中告诉我们。\u003c/p\u003e\n\u003cp\u003e\u003cem\u003e(ik), (vf)\u003c/em\u003e\u003c/p\u003e\n\u003cp\u003e\u003cem\u003e（全文完）\u003c/em\u003e\u003c/p\u003e\n\u003cdiv style=\"margin-top: 15px; font-size: 16px;color: #cc0000;\"\u003e\n\u003cp align=\"center\"\u003e\u003cstrong\u003e（转载本站文章请注明作者和出处 \u003ca href=\"https://coolshell.cn/\"\u003e酷 壳 – CoolShell\u003c/a\u003e ，请勿用于任何商业用途）\u003c/strong\u003e\u003c/p\u003e\n\u003c/div\u003e\n\u003cdiv class=\"wp_rp_wrap  wp_rp_vertical_m\" id=\"wp_rp_first\"\u003e\u003cdiv class=\"wp_rp_content\"\u003e\u003ch3 class=\"related_post_title\"\u003e相关文章\u003c/h3\u003e\u003cul class=\"related_post wp_rp\"\u003e\u003cli\u003e\u003ca href=\"https://coolshell.cn/articles/4334.html\" class=\"wp_rp_thumbnail\"\u003e\u003cimg src=\"https://coolshell.cn/wp-content/uploads/2011/04/1_starting_point_full-150x150.jpg\" alt=\"Eclipse开发Android应用程序入门:重装上阵\" width=\"150\" height=\"150\"/\u003e\u003c/a\u003e\u003ca href=\"https://coolshell.cn/articles/4334.html\" class=\"wp_rp_title\"\u003eEclipse开发Android应用程序入门:重装上阵\u003c/a\u003e\u003c/li\u003e\u003cli\u003e\u003ca href=\"https://coolshell.cn/articles/17066.html\" class=\"wp_rp_thumbnail\"\u003e\u003cimg src=\"https://coolshell.cn/wp-content/uploads/2015/04/phishing-1-150x150.jpg\" alt=\"关于移动端的钓鱼式攻击\" width=\"150\" height=\"150\"/\u003e\u003c/a\u003e\u003ca href=\"https://coolshell.cn/articles/17066.html\" class=\"wp_rp_title\"\u003e关于移动端的钓鱼式攻击\u003c/a\u003e\u003c/li\u003e\u003cli\u003e\u003ca href=\"https://coolshell.cn/articles/12225.html\" class=\"wp_rp_thumbnail\"\u003e\u003cimg src=\"https://coolshell.cn/wp-content/uploads/2014/12/1053-DHH-150x150.jpg\" alt=\"DHH 谈混合移动应用开发\" width=\"150\" height=\"150\"/\u003e\u003c/a\u003e\u003ca href=\"https://coolshell.cn/articles/12225.html\" class=\"wp_rp_title\"\u003eDHH 谈混合移动应用开发\u003c/a\u003e\u003c/li\u003e\u003cli\u003e\u003ca href=\"https://coolshell.cn/articles/12136.html\" class=\"wp_rp_thumbnail\"\u003e\u003cimg src=\"https://coolshell.cn/wp-content/uploads/2014/11/inbox2-640x264-150x150.jpg\" alt=\"Google Inbox如何跨平台重用代码？\" width=\"150\" height=\"150\"/\u003e\u003c/a\u003e\u003ca href=\"https://coolshell.cn/articles/12136.html\" class=\"wp_rp_title\"\u003eGoogle Inbox如何跨平台重用代码？\u003c/a\u003e\u003c/li\u003e\u003cli\u003e\u003ca href=\"https://coolshell.cn/articles/4220.html\" class=\"wp_rp_thumbnail\"\u003e\u003cimg src=\"https://coolshell.cn/wp-content/plugins/wordpress-23-related-posts-plugin/static/thumbs/0.jpg\" alt=\"一些有意思的文章和资源\" width=\"150\" height=\"150\"/\u003e\u003c/a\u003e\u003ca href=\"https://coolshell.cn/articles/4220.html\" class=\"wp_rp_title\"\u003e一些有意思的文章和资源\u003c/a\u003e\u003c/li\u003e\u003cli\u003e\u003ca href=\"https://coolshell.cn/articles/3589.html\" class=\"wp_rp_thumbnail\"\u003e\u003cimg src=\"https://coolshell.cn/wp-content/plugins/wordpress-23-related-posts-plugin/static/thumbs/1.jpg\" alt=\"食客还是大厨\" width=\"150\" height=\"150\"/\u003e\u003c/a\u003e\u003ca href=\"https://coolshell.cn/articles/3589.html\" class=\"wp_rp_title\"\u003e食客还是大厨\u003c/a\u003e\u003c/li\u003e\u003c/ul\u003e\u003c/div\u003e\u003c/div\u003e\n\u003cdiv id=\"post-ratings-4270\" class=\"post-ratings\" itemscope=\"\" itemtype=\"https://schema.org/Article\" data-nonce=\"3fbc483e05\"\u003e\u003cimg id=\"rating_4270_1\" src=\"https://coolshell.cn/wp-content/plugins/wp-postratings/images/stars_crystal/rating_on.gif\" alt=\"好烂啊\" title=\"好烂啊\" onmouseover=\"if (!window.__cfRLUnblockHandlers) return false; current_rating(4270, 1, \u0026#39;好烂啊\u0026#39;);\" onmouseout=\"if (!window.__cfRLUnblockHandlers) return false; ratings_off(3.3, 4, 0);\" onclick=\"if (!window.__cfRLUnblockHandlers) return false; rate_post();\" onkeypress=\"if (!window.__cfRLUnblockHandlers) return false; rate_post();\" style=\"cursor: pointer; border: 0px;\" data-cf-modified-f6b50dc0fea53cc14b2551ad-=\"\"/\u003e\u003cimg id=\"rating_4270_2\" src=\"https://coolshell.cn/wp-content/plugins/wp-postratings/images/stars_crystal/rating_on.gif\" alt=\"有点差\" title=\"有点差\" onmouseover=\"if (!window.__cfRLUnblockHandlers) return false; current_rating(4270, 2, \u0026#39;有点差\u0026#39;);\" onmouseout=\"if (!window.__cfRLUnblockHandlers) return false; ratings_off(3.3, 4, 0);\" onclick=\"if (!window.__cfRLUnblockHandlers) return false; rate_post();\" onkeypress=\"if (!window.__cfRLUnblockHandlers) return false; rate_post();\" style=\"cursor: pointer; border: 0px;\" data-cf-modified-f6b50dc0fea53cc14b2551ad-=\"\"/\u003e\u003cimg id=\"rating_4270_3\" src=\"https://coolshell.cn/wp-content/plugins/wp-postratings/images/stars_crystal/rating_on.gif\" alt=\"凑合看看\" title=\"凑合看看\" onmouseover=\"if (!window.__cfRLUnblockHandlers) return false; current_rating(4270, 3, \u0026#39;凑合看看\u0026#39;);\" onmouseout=\"if (!window.__cfRLUnblockHandlers) return false; ratings_off(3.3, 4, 0);\" onclick=\"if (!window.__cfRLUnblockHandlers) return false; rate_post();\" onkeypress=\"if (!window.__cfRLUnblockHandlers) return false; rate_post();\" style=\"cursor: pointer; border: 0px;\" data-cf-modified-f6b50dc0fea53cc14b2551ad-=\"\"/\u003e\u003cimg id=\"rating_4270_4\" src=\"https://coolshell.cn/wp-content/plugins/wp-postratings/images/stars_crystal/rating_half.gif\" alt=\"还不错\" title=\"还不错\" onmouseover=\"if (!window.__cfRLUnblockHandlers) return false; current_rating(4270, 4, \u0026#39;还不错\u0026#39;);\" onmouseout=\"if (!window.__cfRLUnblockHandlers) return false; ratings_off(3.3, 4, 0);\" onclick=\"if (!window.__cfRLUnblockHandlers) return false; rate_post();\" onkeypress=\"if (!window.__cfRLUnblockHandlers) return false; rate_post();\" style=\"cursor: pointer; border: 0px;\" data-cf-modified-f6b50dc0fea53cc14b2551ad-=\"\"/\u003e\u003cimg id=\"rating_4270_5\" src=\"https://coolshell.cn/wp-content/plugins/wp-postratings/images/stars_crystal/rating_off.gif\" alt=\"很精彩\" title=\"很精彩\" onmouseover=\"if (!window.__cfRLUnblockHandlers) return false; current_rating(4270, 5, \u0026#39;很精彩\u0026#39;);\" onmouseout=\"if (!window.__cfRLUnblockHandlers) return false; ratings_off(3.3, 4, 0);\" onclick=\"if (!window.__cfRLUnblockHandlers) return false; rate_post();\" onkeypress=\"if (!window.__cfRLUnblockHandlers) return false; rate_post();\" style=\"cursor: pointer; border: 0px;\" data-cf-modified-f6b50dc0fea53cc14b2551ad-=\"\"/\u003e (\u003cstrong\u003e19\u003c/strong\u003e 人打了分，平均分： \u003cstrong\u003e3.32\u003c/strong\u003e )\u003cbr/\u003e\u003cspan class=\"post-ratings-text\" id=\"ratings_4270_text\"\u003e\u003c/span\u003e\u003cmeta itemprop=\"name\" content=\"Eclipse开发Android应用程序入门\"/\u003e\u003cmeta itemprop=\"headline\" content=\"Eclipse开发Android应用程序入门\"/\u003e\u003cmeta itemprop=\"description\" content=\"By Chris Blunt\n\n翻译：赵锟\n原文出处：http://www.smashingmagazine.com/2010/10/25/get-started-developing-for-android-with-eclipse/\n\n如今的移动设备应用程序开发充满着让人振奋的东西。功能强大的硬件支持，平板电脑，多样的软件平台（塞班 OS，iOS，WebOS，Windows Phon...\"/\u003e\u003cmeta itemprop=\"datePublished\" content=\"2011-04-07T16:40:36+08:00\"/\u003e\u003cmeta itemprop=\"dateModified\" content=\"2011-04-07T22:01:46+08:00\"/\u003e\u003cmeta itemprop=\"url\" content=\"https://coolshell.cn/articles/4270.html\"/\u003e\u003cmeta itemprop=\"author\" content=\"Neo\"/\u003e\u003cmeta itemprop=\"mainEntityOfPage\" content=\"https://coolshell.cn/articles/4270.html\"/\u003e\u003cdiv style=\"display: none;\" itemprop=\"publisher\" itemscope=\"\" itemtype=\"https://schema.org/Organization\"\u003e\u003cmeta itemprop=\"name\" content=\"酷 壳 - CoolShell\"/\u003e\u003cmeta itemprop=\"url\" content=\"https://coolshell.cn\"/\u003e\u003cdiv itemprop=\"logo\" itemscope=\"\" itemtype=\"https://schema.org/ImageObject\"\u003e\u003cmeta itemprop=\"url\" content=\"\"/\u003e\u003c/div\u003e\u003c/div\u003e\u003cdiv style=\"display: none;\" itemprop=\"aggregateRating\" itemscope=\"\" itemtype=\"https://schema.org/AggregateRating\"\u003e\u003cmeta itemprop=\"bestRating\" content=\"5\"/\u003e\u003cmeta itemprop=\"worstRating\" content=\"1\"/\u003e\u003cmeta itemprop=\"ratingValue\" content=\"3.32\"/\u003e\u003cmeta itemprop=\"ratingCount\" content=\"19\"/\u003e\u003c/div\u003e\u003c/div\u003e\u003cdiv id=\"post-ratings-4270-loading\" class=\"post-ratings-loading\"\u003e\u003cimg src=\"https://coolshell.cn/wp-content/plugins/wp-postratings/images/loading.gif\" width=\"16\" height=\"16\" class=\"post-ratings-image\"/\u003eLoading...\u003c/div\u003e\n\u003c/div\u003e",
  "Date": "2011-04-07T16:40:36+08:00",
  "Author": "Neo"
}