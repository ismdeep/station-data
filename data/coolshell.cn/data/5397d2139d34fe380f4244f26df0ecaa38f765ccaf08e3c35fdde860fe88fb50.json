{
  "Source": "coolshell.cn",
  "Title": "无插件Vim编程技巧",
  "Link": "https://coolshell.cn/articles/11312.html",
  "Content": "\u003cdiv class=\"entry-content\"\u003e\n\u003cp\u003e\u003cscript async=\"\" src=\"https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3415450859608158\" crossorigin=\"anonymous\" type=\"6eeed205015178b364748194-text/javascript\"\u003e\u003c/script\u003e\u003cimg decoding=\"async\" class=\"alignright  wp-image-11338\" src=\"https://coolshell.cn/wp-content/uploads/2014/03/success_vim.jpg\" alt=\"\" width=\"222\" height=\"244\" srcset=\"https://coolshell.cn/wp-content/uploads/2014/03/success_vim.jpg 309w, https://coolshell.cn/wp-content/uploads/2014/03/success_vim-273x300.jpg 273w, https://coolshell.cn/wp-content/uploads/2014/03/success_vim-246x270.jpg 246w\" sizes=\"(max-width: 222px) 100vw, 222px\"/\u003e相信大家看过《\u003ca title=\"简明 Vim 练级攻略\" href=\"https://coolshell.cn/articles/5426.html\" target=\"_blank\"\u003e简明Vim教程\u003c/a\u003e》也玩了《\u003ca title=\"游戏：VIM大冒险\" href=\"https://coolshell.cn/articles/7166.html\" target=\"_blank\"\u003eVim大冒险\u003c/a\u003e》的游戏了，相信大家对Vim都有一个好的入门了。我在这里把我日常用Vim编程的一些技巧列出来给大家看看，希望对大家有用，另外，也是一个抛砖引玉的过程，也希望大家把你们的技巧跟贴一下，我会更新到这篇文章中。另外，这篇文章里的这些技巧全都是vim原生态的，不需要你安装什么插件。\u003cstrong\u003e我的Vim的版本是7.2\u003c/strong\u003e。\u003c/p\u003e\n\u003cdiv id=\"ez-toc-container\" class=\"ez-toc-v2_0_48 counter-hierarchy ez-toc-counter ez-toc-grey ez-toc-container-direction\"\u003e\n\u003cdiv class=\"ez-toc-title-container\"\u003e\n\u003cp class=\"ez-toc-title\"\u003e目录\u003c/p\u003e\n\u003cspan class=\"ez-toc-title-toggle\"\u003e\u003c/span\u003e\u003c/div\u003e\n\u003cnav\u003e\u003cul class=\"ez-toc-list ez-toc-list-level-1 \"\u003e\u003cli class=\"ez-toc-page-1 ez-toc-heading-level-4\"\u003e\u003ca class=\"ez-toc-link ez-toc-heading-1\" href=\"#%E6%B5%8F%E8%A7%88%E4%BB%A3%E7%A0%81\" title=\"浏览代码\"\u003e浏览代码\u003c/a\u003e\u003c/li\u003e\u003cli class=\"ez-toc-page-1 ez-toc-heading-level-4\"\u003e\u003ca class=\"ez-toc-link ez-toc-heading-2\" href=\"#%E7%BC%93%E5%86%B2%E5%8C%BA\" title=\"缓冲区\"\u003e缓冲区\u003c/a\u003e\u003c/li\u003e\u003cli class=\"ez-toc-page-1 ez-toc-heading-level-4\"\u003e\u003ca class=\"ez-toc-link ez-toc-heading-3\" href=\"#%E7%AA%97%E5%8F%A3%E5%88%86%E5%B1%8F%E6%B5%8F%E8%A7%88\" title=\"窗口分屏浏览\"\u003e窗口分屏浏览\u003c/a\u003e\u003c/li\u003e\u003cli class=\"ez-toc-page-1 ez-toc-heading-level-4\"\u003e\u003ca class=\"ez-toc-link ez-toc-heading-4\" href=\"#%E5%88%86%E5%B1%8F%E5%90%8C%E6%AD%A5%E7%A7%BB%E5%8A%A8\" title=\"分屏同步移动\"\u003e分屏同步移动\u003c/a\u003e\u003c/li\u003e\u003cli class=\"ez-toc-page-1 ez-toc-heading-level-4\"\u003e\u003ca class=\"ez-toc-link ez-toc-heading-5\" href=\"#Tab%E9%A1%B5%E6%B5%8F%E8%A7%88%E7%9B%AE%E5%BD%95\" title=\"Tab页浏览目录\"\u003eTab页浏览目录\u003c/a\u003e\u003c/li\u003e\u003cli class=\"ez-toc-page-1 ez-toc-heading-level-4\"\u003e\u003ca class=\"ez-toc-link ez-toc-heading-6\" href=\"#%E4%BF%9D%E5%AD%98%E4%BC%9A%E8%AF%9D\" title=\"保存会话\"\u003e保存会话\u003c/a\u003e\u003c/li\u003e\u003cli class=\"ez-toc-page-1 ez-toc-heading-level-4\"\u003e\u003ca class=\"ez-toc-link ez-toc-heading-7\" href=\"#Quickfix\" title=\"Quickfix\"\u003eQuickfix\u003c/a\u003e\u003c/li\u003e\u003cli class=\"ez-toc-page-1 ez-toc-heading-level-4\"\u003e\u003ca class=\"ez-toc-link ez-toc-heading-8\" href=\"#%E5%85%B3%E9%94%AE%E5%AD%97%E8%A1%A5%E5%85%A8\" title=\"关键字补全\"\u003e关键字补全\u003c/a\u003e\u003c/li\u003e\u003cli class=\"ez-toc-page-1 ez-toc-heading-level-4\"\u003e\u003ca class=\"ez-toc-link ez-toc-heading-9\" href=\"#%E5%85%B6%E5%AE%83%E6%8A%80%E5%B7%A7\" title=\"其它技巧\"\u003e其它技巧\u003c/a\u003e\u003cul class=\"ez-toc-list-level-5\"\u003e\u003cli class=\"ez-toc-heading-level-5\"\u003e\u003ca class=\"ez-toc-link ez-toc-heading-10\" href=\"#%E5%AD%97%E7%AC%A6%E7%9B%B8%E5%85%B3\" title=\"字符相关\"\u003e字符相关\u003c/a\u003e\u003c/li\u003e\u003cli class=\"ez-toc-page-1 ez-toc-heading-level-5\"\u003e\u003ca class=\"ez-toc-link ez-toc-heading-11\" href=\"#%E7%BC%A9%E8%BF%9B%E7%9B%B8%E5%85%B3\" title=\"缩进相关\"\u003e缩进相关\u003c/a\u003e\u003c/li\u003e\u003cli class=\"ez-toc-page-1 ez-toc-heading-level-5\"\u003e\u003ca class=\"ez-toc-link ez-toc-heading-12\" href=\"#%E5%A4%8D%E5%88%B6%E7%B2%98%E8%B4%B4%E7%9B%B8%E5%85%B3\" title=\"复制粘贴相关\"\u003e复制粘贴相关\u003c/a\u003e\u003c/li\u003e\u003cli class=\"ez-toc-page-1 ez-toc-heading-level-5\"\u003e\u003ca class=\"ez-toc-link ez-toc-heading-13\" href=\"#%E5%85%89%E6%A0%87%E7%A7%BB%E5%8A%A8%E7%9B%B8%E5%85%B3\" title=\"光标移动相关\"\u003e光标移动相关\u003c/a\u003e\u003c/li\u003e\u003cli class=\"ez-toc-page-1 ez-toc-heading-level-5\"\u003e\u003ca class=\"ez-toc-link ez-toc-heading-14\" href=\"#%E8%AF%BB%E5%8F%96Shell%E5%91%BD%E4%BB%A4%E7%9B%B8%E5%85%B3\" title=\"读取Shell命令相关\"\u003e读取Shell命令相关\u003c/a\u003e\u003c/li\u003e\u003c/ul\u003e\u003c/li\u003e\u003cli class=\"ez-toc-page-1 ez-toc-heading-level-4\"\u003e\u003ca class=\"ez-toc-link ez-toc-heading-15\" href=\"#vim%E7%9A%84%E7%BB%88%E7%BA%A7%E6%8F%92%E4%BB%B6\" title=\"vim的终级插件\"\u003evim的终级插件\u003c/a\u003e\u003c/li\u003e\u003c/ul\u003e\u003c/nav\u003e\u003c/div\u003e\n\u003ch4\u003e\u003cspan class=\"ez-toc-section\" id=\"%E6%B5%8F%E8%A7%88%E4%BB%A3%E7%A0%81\"\u003e\u003c/span\u003e浏览代码\u003cspan class=\"ez-toc-section-end\"\u003e\u003c/span\u003e\u003c/h4\u003e\n\u003cp\u003e\u003cspan style=\"line-height: 1.5em;\"\u003e首先，我们先从浏览代码开始。有时候，我们需要看多个文件，所以，传统的做法是，我们开多个tty终端，每个tty里用Vim打开一个文件，然后来回切换。这很没有什么效率。我们希望在一个Vim里打开多个文件，甚至浏览程序目录。\u003c/span\u003e\u003c/p\u003e\n\u003cp\u003e浏览目录的命令很简单：（你也可以直接vim一个目录）\u003c/p\u003e\n\u003cblockquote\u003e\u003cp\u003e\u003cstrong\u003e:E\u003c/strong\u003e\u003c/p\u003e\u003c/blockquote\u003e\n\u003cp\u003e注意，是大写。于是，你会看到下面这样的界面：\u003c/p\u003e\n\u003cp\u003e\u003cspan id=\"more-11312\"\u003e\u003c/span\u003e\u003c/p\u003e\n\u003cp\u003e\u003cimg decoding=\"async\" loading=\"lazy\" class=\"aligncenter size-full wp-image-11314\" src=\"https://coolshell.cn/wp-content/uploads/2014/03/Explorer.png\" alt=\"\" width=\"643\" height=\"387\" srcset=\"https://coolshell.cn/wp-content/uploads/2014/03/Explorer.png 643w, https://coolshell.cn/wp-content/uploads/2014/03/Explorer-300x180.png 300w\" sizes=\"(max-width: 643px) 100vw, 643px\"/\u003e\u003c/p\u003e\n\u003cp style=\"text-align: left;\"\u003e这个界面中，\u003cstrong\u003e你可以用 j, k 键上下移动，然后回车，进入一个目录，或是找开一个文件\u003c/strong\u003e。你可以看到上面有一堆命令：\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e【 – 】 到上级目录\u003c/li\u003e\n\u003cli\u003e【D】删除文件（大写）\u003c/li\u003e\n\u003cli\u003e【R】改文件名（大写）\u003c/li\u003e\n\u003cli\u003e【s】对文件排序（小写）\u003c/li\u003e\n\u003cli\u003e【x】执行文件\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e当然，打开的文件会把现有已打开的文件给冲掉——也就是说你只看到了一个文件。\u003c/p\u003e\n\u003cp\u003e如果你要改变当前浏览的目录，或是查看当前浏览的目录，你可以使用和shell一样的命令：\u003c/p\u003e\n\u003cblockquote\u003e\u003cp\u003e\u003cstrong\u003e:cd \u0026lt;dir\u0026gt; – 改变当前目录\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003e:pwd  – 查看当前目录\u003c/strong\u003e\u003c/p\u003e\u003c/blockquote\u003e\n\u003ch4\u003e\u003cspan class=\"ez-toc-section\" id=\"%E7%BC%93%E5%86%B2%E5%8C%BA\"\u003e\u003c/span\u003e缓冲区\u003cspan class=\"ez-toc-section-end\"\u003e\u003c/span\u003e\u003c/h4\u003e\n\u003cp\u003e其实，你用:E 浏览打开的文件都没有被关闭，这些文件都在缓冲区中。你可以用下面的命令来查看缓冲区：\u003c/p\u003e\n\u003cblockquote\u003e\u003cp\u003e\u003cstrong\u003e:ls\u003c/strong\u003e\u003c/p\u003e\u003c/blockquote\u003e\n\u003cp\u003e于是，在你的Vim下，你会看到如下界面：\u003c/p\u003e\n\u003cp\u003e\u003cimg decoding=\"async\" loading=\"lazy\" class=\"aligncenter size-full wp-image-11315\" src=\"https://coolshell.cn/wp-content/uploads/2014/03/buffer_ls.png\" alt=\"\" width=\"572\" height=\"174\" srcset=\"https://coolshell.cn/wp-content/uploads/2014/03/buffer_ls.png 572w, https://coolshell.cn/wp-content/uploads/2014/03/buffer_ls-300x91.png 300w\" sizes=\"(max-width: 572px) 100vw, 572px\"/\u003e\u003c/p\u003e\n\u003cp\u003e你可以看到Vim打开了四个文件，编号是4，5，6，7，如果你要切换打开的文件，这个时候，你不要按回车（按了也没事，只不过按了就看不到:ls输出的buffer列表了），你可以使用下面的命令切换文件（buffer后面的4表示切到4号文件也就是src/http/ngx_http.c）：\u003c/p\u003e\n\u003cblockquote\u003e\u003cp\u003e\u003cstrong\u003e:buffer 4\u003c/strong\u003e\u003c/p\u003e\u003c/blockquote\u003e\n\u003cp\u003e或是：\u003c/p\u003e\n\u003cblockquote\u003e\u003cp\u003e\u003cstrong\u003e:buffer src/http/ngx_http.c\u003c/strong\u003e\u003c/p\u003e\u003c/blockquote\u003e\n\u003cp\u003e注意，\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e你可以像在Shell中输入命令按Tab键补全一样补全Vim的命令。\u003c/li\u003e\n\u003cli\u003e也可以用像gdb一样用最前面的几个字符，只要没有冲突。如：buff\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e你还可以动用如下命令，快速切换：\u003c/p\u003e\n\u003cblockquote\u003e\u003cp\u003e:bnext      缩写 :bn\u003cbr/\u003e\n:bprevious   缩写 :bp\u003cbr/\u003e\n:blast  缩写 :bl\u003cbr/\u003e\n:bfirst 缩写 :bf\u003c/p\u003e\u003c/blockquote\u003e\n\u003cp\u003e\u003cspan style=\"line-height: 1.5em;\"\u003e上图中，我们还可以看到5有一个%a，这表示当前文件，相关的标记如下：\u003c/span\u003e\u003c/p\u003e\n\u003cp style=\"padding-left: 30px;\"\u003e– （非活动的缓冲区）\u003cbr/\u003e\na （当前被激活缓冲区）\u003cbr/\u003e\nh （隐藏的缓冲区）\u003cbr/\u003e\n% （当前的缓冲区）\u003cbr/\u003e\n# （交换缓冲区）\u003cbr/\u003e\n= （只读缓冲区）\u003cbr/\u003e\n+ （已经更改的缓冲区）\u003c/p\u003e\n\u003ch4\u003e\u003cspan class=\"ez-toc-section\" id=\"%E7%AA%97%E5%8F%A3%E5%88%86%E5%B1%8F%E6%B5%8F%E8%A7%88\"\u003e\u003c/span\u003e窗口分屏浏览\u003cspan class=\"ez-toc-section-end\"\u003e\u003c/span\u003e\u003c/h4\u003e\n\u003cp\u003e相信你在《\u003ca title=\"Vim的分屏功能\" href=\"https://coolshell.cn/articles/1679.html\" target=\"_blank\"\u003eVim的窗口分屏\u003c/a\u003e》一文中，你已经知道了怎么拆分窗口了。其实，我更多的不是用拆分窗口的命令，而是用浏览文件的命令来分隔窗口。如：\u003c/p\u003e\n\u003cp\u003e把当前窗口上下分屏，并在下面进行目录浏览：\u003c/p\u003e\n\u003cblockquote\u003e\u003cp\u003e\u003cstrong\u003e:He   全称为 :Hexplore  （在下边分屏浏览目录）\u003c/strong\u003e\u003c/p\u003e\u003c/blockquote\u003e\n\u003cp\u003e如果你要在上面，你就在 :He后面加个 !，\u003c/p\u003e\n\u003cblockquote\u003e\u003cp\u003e\u003cstrong\u003e:He!  （在上分屏浏览目录）\u003c/strong\u003e\u003c/p\u003e\u003c/blockquote\u003e\n\u003cp\u003e如果你要左右分屏的话，你可以这样：\u003c/p\u003e\n\u003cblockquote\u003e\u003cp\u003e\u003cstrong\u003e:Ve 全称为 :Vexplore （在左边分屏间浏览目录，要在右边则是 :Ve!）\u003c/strong\u003e\u003c/p\u003e\u003c/blockquote\u003e\n\u003cp\u003e下图是分别用:He 和 :Ve搞出来的同时看三个文件：\u003c/p\u003e\n\u003cp style=\"text-align: center;\"\u003e\u003cimg decoding=\"async\" loading=\"lazy\" class=\"aligncenter  wp-image-11316\" src=\"https://coolshell.cn/wp-content/uploads/2014/03/WindowsExplorer.png\" alt=\"\" width=\"725\" height=\"411\" srcset=\"https://coolshell.cn/wp-content/uploads/2014/03/WindowsExplorer.png 906w, https://coolshell.cn/wp-content/uploads/2014/03/WindowsExplorer-300x170.png 300w, https://coolshell.cn/wp-content/uploads/2014/03/WindowsExplorer-900x510.png 900w\" sizes=\"(max-width: 725px) 100vw, 725px\"/\u003e\u003c/p\u003e\n\u003cp style=\"text-align: left;\"\u003e在分屏间的跳转和切换在《\u003ca title=\"Vim的分屏功能\" href=\"https://coolshell.cn/articles/1679.html\" target=\"_blank\"\u003eVim的窗口分屏\u003c/a\u003e》一文中提过了：\u003cstrong\u003e先按Ctrl + W，然后按方向键：h j k l\u003c/strong\u003e\u003c/p\u003e\n\u003ch4 style=\"text-align: left;\"\u003e\u003cspan class=\"ez-toc-section\" id=\"%E5%88%86%E5%B1%8F%E5%90%8C%E6%AD%A5%E7%A7%BB%E5%8A%A8\"\u003e\u003c/span\u003e分屏同步移动\u003cspan class=\"ez-toc-section-end\"\u003e\u003c/span\u003e\u003c/h4\u003e\n\u003cp\u003e要让两个分屏中的文件同步移动，很简单，你需要到需要同步移动的两个屏中都输入如下命令（相当于使用“铁锁连环”）：\u003c/p\u003e\n\u003cblockquote\u003e\u003cp\u003e\u003cstrong\u003e:set scb\u003c/strong\u003e\u003c/p\u003e\u003c/blockquote\u003e\n\u003cp\u003e如果你需要解开，那么就输入下面的命令：\u003c/p\u003e\n\u003cblockquote\u003e\u003cp\u003e\u003cstrong\u003e:set scb!\u003c/strong\u003e\u003c/p\u003e\u003c/blockquote\u003e\n\u003cp\u003e注：set scb 是 set scrollbind 的简写。\u003c/p\u003e\n\u003ch4\u003e\u003cspan class=\"ez-toc-section\" id=\"Tab%E9%A1%B5%E6%B5%8F%E8%A7%88%E7%9B%AE%E5%BD%95\"\u003e\u003c/span\u003eTab页浏览目录\u003cspan class=\"ez-toc-section-end\"\u003e\u003c/span\u003e\u003c/h4\u003e\n\u003cp\u003e分屏可能会让你不爽，你可能更喜欢像Chrome这样的分页式的浏览，那么你可以用下面的命令：\u003c/p\u003e\n\u003cblockquote\u003e\u003cp\u003e\u003cstrong\u003e:Te  全称是 :Texplorer\u003c/strong\u003e\u003c/p\u003e\u003c/blockquote\u003e\n\u003cp\u003e下图中，你可以看到我用Te命令打开了三页，就在顶端我们可以可以看到有三页，其中第一页Tab上的数字3表示那一页有3个文件。\u003c/p\u003e\n\u003cp\u003e\u003cimg decoding=\"async\" loading=\"lazy\" class=\"aligncenter size-full wp-image-11317\" src=\"https://coolshell.cn/wp-content/uploads/2014/03/TabExplorer.png\" alt=\"\" width=\"679\" height=\"236\" srcset=\"https://coolshell.cn/wp-content/uploads/2014/03/TabExplorer.png 679w, https://coolshell.cn/wp-content/uploads/2014/03/TabExplorer-300x104.png 300w\" sizes=\"(max-width: 679px) 100vw, 679px\"/\u003e\u003c/p\u003e\n\u003cp\u003e我们要在多个Tabe页中切换，在normal模式下，你可以使用下面三个按键（注意没有冒号）：\u003c/p\u003e\n\u003cblockquote\u003e\u003cp\u003e\u003cstrong\u003egt   – 到下一个页\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003egT  – 到前一个页\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003e{i} gt   – i是数字，到指定页，比如：5 gt 就是到第5页\u003c/strong\u003e\u003c/p\u003e\u003c/blockquote\u003e\n\u003cp\u003e你可以以使用 【:tabm {n}】来切换Tab页。\u003c/p\u003e\n\u003cp\u003egvim应该是：Ctrl+PgDn 和 Ctrl+PgUp 来在各个页中切换。\u003c/p\u003e\n\u003cp\u003e如果你想看看你现在打开的窗口和Tab的情况，你可以使用下面的命令：\u003c/p\u003e\n\u003cblockquote\u003e\u003cp\u003e\u003cstrong\u003e:tabs\u003c/strong\u003e\u003c/p\u003e\u003c/blockquote\u003e\n\u003cp\u003e于是你可以看到：\u003c/p\u003e\n\u003cp\u003e\u003cimg decoding=\"async\" loading=\"lazy\" class=\"aligncenter size-full wp-image-11318\" src=\"https://coolshell.cn/wp-content/uploads/2014/03/Tab01.png\" alt=\"\" width=\"392\" height=\"175\" srcset=\"https://coolshell.cn/wp-content/uploads/2014/03/Tab01.png 392w, https://coolshell.cn/wp-content/uploads/2014/03/Tab01-300x133.png 300w\" sizes=\"(max-width: 392px) 100vw, 392px\"/\u003e\u003c/p\u003e\n\u003cp\u003e使用如下命令可以关闭tab：（当然，我更喜欢使用传统的:q, :wq来关闭）\u003c/p\u003e\n\u003cblockquote\u003e\u003cp\u003e\u003cstrong\u003e:tabclose [i]\u003c/strong\u003e – 如果后面指定了数字，那就关闭指定页，如果没有就关闭当前页\u003c/p\u003e\u003c/blockquote\u003e\n\u003cp\u003e最后提一下，如果你在Shell命令行下，你可以使用 vim 的 -p 参数来用Tab页的方式打开多个文件，比如：\u003c/p\u003e\n\u003cblockquote\u003e\u003cp\u003e\u003cstrong\u003evim -p cool.cpp shell.cpp haoel.cpp\u003cbr/\u003e\nvim -p *.cpp\u003c/strong\u003e\u003c/p\u003e\u003c/blockquote\u003e\n\u003cp\u003e\u003cstrong\u003e注：如果你想把buffer中的文件全转成tab的话，你可以使用下面的命令\u003c/strong\u003e\u003c/p\u003e\n\u003cblockquote\u003e\u003cp\u003e\u003cstrong\u003e:bufdo tab split\u003c/strong\u003e\u003c/p\u003e\u003c/blockquote\u003e\n\u003ch4\u003e\u003cspan class=\"ez-toc-section\" id=\"%E4%BF%9D%E5%AD%98%E4%BC%9A%E8%AF%9D\"\u003e\u003c/span\u003e保存会话\u003cspan class=\"ez-toc-section-end\"\u003e\u003c/span\u003e\u003c/h4\u003e\n\u003cp\u003e如果你用Tab或Window打开了好些文件的文件，还设置了各种滚屏同步，或是行号……，那么，你可以用下面的命令来保存会话：（你有兴趣你可以看看你的 mysession.vim文件内容，也就是一个批处理文件）\u003c/p\u003e\n\u003cblockquote\u003e\u003cp\u003e\u003cstrong\u003e:mksession ~/.mysession.vim\u003c/strong\u003e\u003c/p\u003e\u003c/blockquote\u003e\n\u003cp\u003e如果文件重复，vim默认会报错，如果你想强行写入的话，你可以在mksession后加! ：\u003c/p\u003e\n\u003cblockquote\u003e\u003cp\u003e\u003cstrong\u003e:mksession! ~/.mysession.vim\u003c/strong\u003e\u003c/p\u003e\u003c/blockquote\u003e\n\u003cp\u003e于是下次，你可以这样打开这个会话：\u003c/p\u003e\n\u003cblockquote\u003e\u003cp\u003e\u003cstrong\u003evim -S ~/.mysession.vim\u003c/strong\u003e\u003c/p\u003e\u003c/blockquote\u003e\n\u003cp\u003e保存完会话后，你也没有必要一个一个Tab/Windows的去Close。你可以简单地使用：\u003c/p\u003e\n\u003cblockquote\u003e\u003cp\u003e\u003cstrong\u003e:qa   – 退出全部 \u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003e:wqa  -保存全部并退出全部\u003c/strong\u003e\u003c/p\u003e\u003c/blockquote\u003e\n\u003ch4\u003e\u003cspan class=\"ez-toc-section\" id=\"Quickfix\"\u003e\u003c/span\u003eQuickfix\u003cspan class=\"ez-toc-section-end\"\u003e\u003c/span\u003e\u003c/h4\u003e\n\u003cp\u003e假如我们有一个hello.cpp文件和一个makefile，于是我们可以直接在vim下输入 :make ， 于是就可以make这个hello.cpp文件，如果出错了，我们需要按回车返回，这个时候，我们可以使用下面的命令来把出错显到在vim的分屏中：\u003c/p\u003e\n\u003cblockquote\u003e\u003cp\u003e\u003cstrong\u003e:cw\u003c/strong\u003e\u003c/p\u003e\u003c/blockquote\u003e\n\u003cp\u003e于是，就会出现下面右边的那个样子：（是不是看上去和我一样很帅？）\u003c/p\u003e\n\u003cp\u003e\u003cimg decoding=\"async\" loading=\"lazy\" class=\"aligncenter size-full wp-image-11321\" src=\"https://coolshell.cn/wp-content/uploads/2014/03/quickfix.png\" alt=\"\" width=\"705\" height=\"385\" srcset=\"https://coolshell.cn/wp-content/uploads/2014/03/quickfix.png 705w, https://coolshell.cn/wp-content/uploads/2014/03/quickfix-300x163.png 300w\" sizes=\"(max-width: 705px) 100vw, 705px\"/\u003e\u003c/p\u003e\n\u003cp\u003e上图中左边是我的makefile，右边是我的错误百出的源代码，右边下面是quickfix窗屏。你可以看到quickfix窗屏指向的第一个错误已经定位到我们相就错误的文件行上了。\u003c/p\u003e\n\u003cp\u003e你可以使用像浏览文件那样用j, k在quckfix窗屏中上下移动到相应的错误上然后按回车，然后就可以在上面的窗屏里定位到相应的源文件的代码行。但是，如果是这样的话， 你要定位下一条错误还得用Ctrl +W 回到quickfix屏中来然后重复来过。\u003c/p\u003e\n\u003cp\u003e你可以使用下面的命令而不用回到quickfix中来：\u003c/p\u003e\n\u003cblockquote\u003e\u003cp\u003e\u003cstrong\u003e:cp 跳到上一个错误\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003e:cn 跳到下一个错误\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003e:cl 列出所有错误\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003e:cc 显示错误详细信息\u003c/strong\u003e\u003c/p\u003e\u003c/blockquote\u003e\n\u003cp\u003e下面我们来看另一个quickfix的功能。\u003c/p\u003e\n\u003cp\u003e如果你用过vim的cscope插件，你就知道cscope可以用来查找相当的代码，但cscope需要事先生成一个数据库，对一些简单的查找，其实，我们用vim的grep命令就可以了，不需要专门为之生成数据库。vim的grep命令和shell的几乎一样。\u003c/p\u003e\n\u003cp\u003e我们来看个例子：\u003c/p\u003e\n\u003cp\u003e比如我们正在浏览nginx的代码，这时，我想看看哪里用到了nginx的NGX_HTTP_VAR_INDEXED宏。于是，我可以在vim里输入如下的命令：\u003c/p\u003e\n\u003cblockquote\u003e\u003cp\u003e\u003cstrong\u003e:grep -r –include=”*.[ch]” NGX_HTTP_VAR_INDEXED src/\u003c/strong\u003e\u003c/p\u003e\u003c/blockquote\u003e\n\u003cp\u003e上面这个命令意思是递归查询src目录下所有的.c和.h文件，其中包括NGX_HTTP_VAR_INDEXED宏。然后，你就会看到vim到shell里去执行并找到了相关的文件，按回车返回vim后，别忘了用 【:cw 】把grep的输出取回来，于是我们就有下面的样子：\u003c/p\u003e\n\u003cp\u003e\u003cimg decoding=\"async\" loading=\"lazy\" class=\"aligncenter size-full wp-image-11323\" src=\"https://coolshell.cn/wp-content/uploads/2014/03/quickfix_grep.png\" alt=\"\" width=\"704\" height=\"386\" srcset=\"https://coolshell.cn/wp-content/uploads/2014/03/quickfix_grep.png 704w, https://coolshell.cn/wp-content/uploads/2014/03/quickfix_grep-300x164.png 300w\" sizes=\"(max-width: 704px) 100vw, 704px\"/\u003e\u003c/p\u003e\n\u003cp\u003e然后同上面一样，你可以用 j，k 键移动quickfix里的光标到相应的行，然后按回车定位文件，或是使用【:cn】或【:cp】来移动到定位。（这样，你会把多个文件打开到缓冲区，别忘了【:ls】来查看缓冲区）\u003c/p\u003e\n\u003cp\u003e你看，到这里，一个小小的IDE就这样产生了，而且，\u003cstrong\u003e最帅的时，我们连一点插件都没有装，也没有在.vimrc文件中配置过什么\u003c/strong\u003e。\u003c/p\u003e\n\u003ch4\u003e\u003cspan class=\"ez-toc-section\" id=\"%E5%85%B3%E9%94%AE%E5%AD%97%E8%A1%A5%E5%85%A8\"\u003e\u003c/span\u003e关键字补全\u003cspan class=\"ez-toc-section-end\"\u003e\u003c/span\u003e\u003c/h4\u003e\n\u003cp\u003e我们还是坚持不用任何插件。我们来看看是怎么个自动补全的。\u003c/p\u003e\n\u003cp\u003e在insert模式下，我们可以按如下快捷键：\u003c/p\u003e\n\u003cblockquote\u003e\u003cp\u003e【\u003cstrong\u003eCtrl +N\u003c/strong\u003e】  – 当你按下这它时，你会发现Vim就开始搜索你这个目录下的代码，搜索完成了就会出现一个下拉列表（居然是粉紫色的，真是丑死了）\u003c/p\u003e\u003c/blockquote\u003e\n\u003cp\u003e下图是我输入了ngx_http_然后按ctrl+n出现的样子，它已经帮我补全了一个，但是我不想要这个。然后，在Vim的下方我们可以看到状态变成了“关键字补全”，然后后面有^N^P的提示，意思就是告诉你还有一个Ctrl+P.\u003c/p\u003e\n\u003cp style=\"text-align: center;\"\u003e\u003cimg decoding=\"async\" loading=\"lazy\" class=\"aligncenter  wp-image-11325\" src=\"https://coolshell.cn/wp-content/uploads/2014/03/auto_complete_ctrl_n.png\" alt=\"\" width=\"635\" height=\"304\" srcset=\"https://coolshell.cn/wp-content/uploads/2014/03/auto_complete_ctrl_n.png 705w, https://coolshell.cn/wp-content/uploads/2014/03/auto_complete_ctrl_n-300x143.png 300w\" sizes=\"(max-width: 635px) 100vw, 635px\"/\u003e\u003c/p\u003e\n\u003cblockquote\u003e\u003cp\u003e【\u003cstrong\u003eCtrl + P\u003c/strong\u003e】 – 接下来你可以按这个键，于是回到原点，然后你可以按上下光标键来选择相应的Word。\u003c/p\u003e\u003c/blockquote\u003e\n\u003cp\u003e对于上面那个例子，我们按下了Ctrl+P后出现下面的这个样子。我们可以看到，光标回到了一开始我输入的位置，然后你可以干两件事，一个是继续输入（这可以帮助过滤关键词），另一个是用“光标键”上移或下移来选择下拉列表中的关键字，选好后回车，就补全了。\u003c/p\u003e\n\u003cp\u003e\u003cimg decoding=\"async\" loading=\"lazy\" class=\"aligncenter size-full wp-image-11326\" src=\"https://coolshell.cn/wp-content/uploads/2014/03/auto_complete_ctrl_p.png\" alt=\"\" width=\"707\" height=\"337\" srcset=\"https://coolshell.cn/wp-content/uploads/2014/03/auto_complete_ctrl_p.png 707w, https://coolshell.cn/wp-content/uploads/2014/03/auto_complete_ctrl_p-300x142.png 300w\" sizes=\"(max-width: 707px) 100vw, 707px\"/\u003e\u003c/p\u003e\n\u003cp\u003e与此类似的，还有更多的补齐，都在Ctrl +X下面：\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eCtrl + X 和 Ctrl + D 宏定义补齐\u003c/li\u003e\n\u003cli\u003eCtrl + X 和 Ctrl + ] 是Tag 补齐\u003c/li\u003e\n\u003cli\u003eCtrl + X 和 Ctrl + F 是文件名 补齐\u003c/li\u003e\n\u003cli\u003eCtrl + X 和 Ctrl + I 也是关键词补齐，但是关键后会有个文件名，告诉你这个关键词在哪个文件中\u003c/li\u003e\n\u003cli\u003eCtrl + X 和 Ctrl +V 是表达式补齐\u003c/li\u003e\n\u003cli\u003eCtrl + X 和 Ctrl +L 这可以对整个行补齐，变态吧。\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch4\u003e\u003cspan class=\"ez-toc-section\" id=\"%E5%85%B6%E5%AE%83%E6%8A%80%E5%B7%A7\"\u003e\u003c/span\u003e其它技巧\u003cspan class=\"ez-toc-section-end\"\u003e\u003c/span\u003e\u003c/h4\u003e\n\u003ch5\u003e\u003cspan class=\"ez-toc-section\" id=\"%E5%AD%97%E7%AC%A6%E7%9B%B8%E5%85%B3\"\u003e\u003c/span\u003e字符相关\u003cspan class=\"ez-toc-section-end\"\u003e\u003c/span\u003e\u003c/h5\u003e\n\u003cp style=\"padding-left: 30px;\"\u003e【guu 】 – 把一行的文字变成全小写。或是【Vu】\u003c/p\u003e\n\u003cp style=\"padding-left: 30px;\"\u003e【gUU】 – 把一行的文件变成全大写。或是【VU】\u003c/p\u003e\n\u003cp style=\"padding-left: 30px;\"\u003e按【v】键进入选择模式，然后移动光标选择你要的文本，按【u】转小写，按【U】转大写\u003c/p\u003e\n\u003cp style=\"padding-left: 30px;\"\u003e【ga】 –  查看光标处字符的ascii码\u003c/p\u003e\n\u003cp style=\"padding-left: 30px;\"\u003e【g8】 – 查看光标处字符的utf-8编码\u003c/p\u003e\n\u003cp style=\"padding-left: 30px;\"\u003e【gf】  – 打开光标处所指的文件 （这个命令在打到#include头文件时挺好用的，当然，仅限于有路径的）\u003c/p\u003e\n\u003cp style=\"padding-left: 30px;\"\u003e【*】或【#】在当前文件中搜索当前光标的单词\u003c/p\u003e\n\u003ch5\u003e\u003cspan class=\"ez-toc-section\" id=\"%E7%BC%A9%E8%BF%9B%E7%9B%B8%E5%85%B3\"\u003e\u003c/span\u003e缩进相关\u003cspan class=\"ez-toc-section-end\"\u003e\u003c/span\u003e\u003c/h5\u003e\n\u003cp style=\"padding-left: 30px;\"\u003e【\u0026gt;\u0026gt;】向右给它进当前行 【\u0026lt;\u0026lt;】向左缩进当前行\u003c/p\u003e\n\u003cp style=\"padding-left: 30px;\"\u003e【=】  – 缩进当前行 （和上面不一样的是，它会对齐缩进）\u003c/p\u003e\n\u003cp style=\"padding-left: 30px;\"\u003e【=%】 – 把光标位置移到语句块的括号上，然后按=%，缩进整个语句块（%是括号匹配）\u003c/p\u003e\n\u003cp style=\"padding-left: 30px;\"\u003e【G=gg】 或是 【gg=G】  – 缩进整个文件（G是到文件结尾，gg是到文件开头）\u003c/p\u003e\n\u003ch5\u003e\u003cspan class=\"ez-toc-section\" id=\"%E5%A4%8D%E5%88%B6%E7%B2%98%E8%B4%B4%E7%9B%B8%E5%85%B3\"\u003e\u003c/span\u003e复制粘贴相关\u003cspan class=\"ez-toc-section-end\"\u003e\u003c/span\u003e\u003c/h5\u003e\n\u003cp style=\"padding-left: 30px;\"\u003e按【v】 键进入选择模式，然后按h,j,k,l移动光标，选择文本，然后按 【y】 进行复制，按 【p】 进行粘贴。\u003c/p\u003e\n\u003cp style=\"padding-left: 30px;\"\u003e【dd】剪切一行（前面加个数字可以剪切n行），【p】粘贴\u003c/p\u003e\n\u003cp style=\"padding-left: 30px;\"\u003e【yy】复制一行（前面加个数字可以复制n行），【p】粘贴\u003c/p\u003e\n\u003ch5\u003e\u003cspan class=\"ez-toc-section\" id=\"%E5%85%89%E6%A0%87%E7%A7%BB%E5%8A%A8%E7%9B%B8%E5%85%B3\"\u003e\u003c/span\u003e光标移动相关\u003cspan class=\"ez-toc-section-end\"\u003e\u003c/span\u003e\u003c/h5\u003e\n\u003cp style=\"padding-left: 30px;\"\u003e【Ctrl + O】向后回退你的光标移动\u003c/p\u003e\n\u003cp style=\"padding-left: 30px;\"\u003e【Ctrl + I 】向前追赶你的光标移动\u003c/p\u003e\n\u003cp style=\"padding-left: 30px;\"\u003e这两个快捷键很有用，可以在Tab页和Windows中向前和向后trace你的光标键，这也方便你跳转光标。\u003c/p\u003e\n\u003ch5\u003e\u003cspan class=\"ez-toc-section\" id=\"%E8%AF%BB%E5%8F%96Shell%E5%91%BD%E4%BB%A4%E7%9B%B8%E5%85%B3\"\u003e\u003c/span\u003e读取Shell命令相关\u003cspan class=\"ez-toc-section-end\"\u003e\u003c/span\u003e\u003c/h5\u003e\n\u003cp style=\"padding-left: 30px;\"\u003e【:r!date】 插入日期\u003c/p\u003e\n\u003cp style=\"padding-left: 30px;\"\u003e上面这个命令，:r 是:read的缩写，!是表明要运行一个shell命令，意思是我要把shell命令的输出读到vim里来。\u003c/p\u003e\n\u003ch4\u003e\u003cspan class=\"ez-toc-section\" id=\"vim%E7%9A%84%E7%BB%88%E7%BA%A7%E6%8F%92%E4%BB%B6\"\u003e\u003c/span\u003evim的终级插件\u003cspan class=\"ez-toc-section-end\"\u003e\u003c/span\u003e\u003c/h4\u003e\n\u003cp style=\"padding-left: 30px;\"\u003eCentOS下：yum erase emacs\u003c/p\u003e\n\u003cp style=\"padding-left: 30px;\"\u003eUbuntu下：apt-get remove emacs\u003c/p\u003e\n\u003cp\u003e对了，以前本站也有一篇小短文《\u003ca href=\"https://coolshell.cn/articles/894.html\" target=\"_blank\"\u003e如何在vim中得到你最喜爱的IDE特性\u003c/a\u003e》你也可以看看。\u003c/p\u003e\n\u003cp\u003e（:wq）\u003c/p\u003e\n\u003cdiv style=\"margin-top: 15px; font-size: 16px;color: #cc0000;\"\u003e\n\u003cp align=\"center\"\u003e\u003cstrong\u003e（转载本站文章请注明作者和出处 \u003ca href=\"https://coolshell.cn/\"\u003e酷 壳 – CoolShell\u003c/a\u003e ，请勿用于任何商业用途）\u003c/strong\u003e\u003c/p\u003e\n\u003c/div\u003e\n\u003cdiv class=\"wp_rp_wrap  wp_rp_vertical_m\" id=\"wp_rp_first\"\u003e\u003cdiv class=\"wp_rp_content\"\u003e\u003ch3 class=\"related_post_title\"\u003e相关文章\u003c/h3\u003e\u003cul class=\"related_post wp_rp\"\u003e\u003cli\u003e\u003ca href=\"https://coolshell.cn/articles/5426.html\" class=\"wp_rp_thumbnail\"\u003e\u003cimg src=\"https://coolshell.cn/wp-content/uploads/2011/09/rectangular-blocks-150x150.gif\" alt=\"简明 Vim 练级攻略\" width=\"150\" height=\"150\"/\u003e\u003c/a\u003e\u003ca href=\"https://coolshell.cn/articles/5426.html\" class=\"wp_rp_title\"\u003e简明 Vim 练级攻略\u003c/a\u003e\u003c/li\u003e\u003cli\u003e\u003ca href=\"https://coolshell.cn/articles/7166.html\" class=\"wp_rp_thumbnail\"\u003e\u003cimg src=\"https://coolshell.cn/wp-content/uploads/2012/04/vimadventuresgamefun-150x150.jpg\" alt=\"游戏：VIM大冒险\" width=\"150\" height=\"150\"/\u003e\u003c/a\u003e\u003ca href=\"https://coolshell.cn/articles/7166.html\" class=\"wp_rp_title\"\u003e游戏：VIM大冒险\u003c/a\u003e\u003c/li\u003e\u003cli\u003e\u003ca href=\"https://coolshell.cn/articles/5479.html\" class=\"wp_rp_thumbnail\"\u003e\u003cimg src=\"https://coolshell.cn/wp-content/uploads/2011/09/vim_cheat_sheet_for_programmers_print-150x150.png\" alt=\"给程序员的VIM速查卡\" width=\"150\" height=\"150\"/\u003e\u003c/a\u003e\u003ca href=\"https://coolshell.cn/articles/5479.html\" class=\"wp_rp_title\"\u003e给程序员的VIM速查卡\u003c/a\u003e\u003c/li\u003e\u003cli\u003e\u003ca href=\"https://coolshell.cn/articles/1679.html\" class=\"wp_rp_thumbnail\"\u003e\u003cimg src=\"https://coolshell.cn/wp-content/uploads/2009/11/vimwindows-150x150.png\" alt=\"Vim的分屏功能\" width=\"150\" height=\"150\"/\u003e\u003c/a\u003e\u003ca href=\"https://coolshell.cn/articles/1679.html\" class=\"wp_rp_title\"\u003eVim的分屏功能\u003c/a\u003e\u003c/li\u003e\u003cli\u003e\u003ca href=\"https://coolshell.cn/articles/894.html\" class=\"wp_rp_thumbnail\"\u003e\u003cimg src=\"https://coolshell.cn/wp-content/uploads/2009/05/vimtxt_gvim_ars-150x150.jpg\" alt=\"将vim变得简单:如何在vim中得到你最喜爱的IDE特性\" width=\"150\" height=\"150\"/\u003e\u003c/a\u003e\u003ca href=\"https://coolshell.cn/articles/894.html\" class=\"wp_rp_title\"\u003e将vim变得简单:如何在vim中得到你最喜爱的IDE特性\u003c/a\u003e\u003c/li\u003e\u003cli\u003e\u003ca href=\"https://coolshell.cn/articles/1651.html\" class=\"wp_rp_thumbnail\"\u003e\u003cimg src=\"https://coolshell.cn/wp-content/plugins/wordpress-23-related-posts-plugin/static/thumbs/30.jpg\" alt=\"VIM有趣的命令\" width=\"150\" height=\"150\"/\u003e\u003c/a\u003e\u003ca href=\"https://coolshell.cn/articles/1651.html\" class=\"wp_rp_title\"\u003eVIM有趣的命令\u003c/a\u003e\u003c/li\u003e\u003c/ul\u003e\u003c/div\u003e\u003c/div\u003e\n\u003cdiv id=\"post-ratings-11312\" class=\"post-ratings\" itemscope=\"\" itemtype=\"https://schema.org/Article\" data-nonce=\"268e8c9677\"\u003e\u003cimg id=\"rating_11312_1\" src=\"https://coolshell.cn/wp-content/plugins/wp-postratings/images/stars_crystal/rating_on.gif\" alt=\"好烂啊\" title=\"好烂啊\" onmouseover=\"if (!window.__cfRLUnblockHandlers) return false; current_rating(11312, 1, \u0026#39;好烂啊\u0026#39;);\" onmouseout=\"if (!window.__cfRLUnblockHandlers) return false; ratings_off(4.2, 0, 0);\" onclick=\"if (!window.__cfRLUnblockHandlers) return false; rate_post();\" onkeypress=\"if (!window.__cfRLUnblockHandlers) return false; rate_post();\" style=\"cursor: pointer; border: 0px;\" data-cf-modified-6eeed205015178b364748194-=\"\"/\u003e\u003cimg id=\"rating_11312_2\" src=\"https://coolshell.cn/wp-content/plugins/wp-postratings/images/stars_crystal/rating_on.gif\" alt=\"有点差\" title=\"有点差\" onmouseover=\"if (!window.__cfRLUnblockHandlers) return false; current_rating(11312, 2, \u0026#39;有点差\u0026#39;);\" onmouseout=\"if (!window.__cfRLUnblockHandlers) return false; ratings_off(4.2, 0, 0);\" onclick=\"if (!window.__cfRLUnblockHandlers) return false; rate_post();\" onkeypress=\"if (!window.__cfRLUnblockHandlers) return false; rate_post();\" style=\"cursor: pointer; border: 0px;\" data-cf-modified-6eeed205015178b364748194-=\"\"/\u003e\u003cimg id=\"rating_11312_3\" src=\"https://coolshell.cn/wp-content/plugins/wp-postratings/images/stars_crystal/rating_on.gif\" alt=\"凑合看看\" title=\"凑合看看\" onmouseover=\"if (!window.__cfRLUnblockHandlers) return false; current_rating(11312, 3, \u0026#39;凑合看看\u0026#39;);\" onmouseout=\"if (!window.__cfRLUnblockHandlers) return false; ratings_off(4.2, 0, 0);\" onclick=\"if (!window.__cfRLUnblockHandlers) return false; rate_post();\" onkeypress=\"if (!window.__cfRLUnblockHandlers) return false; rate_post();\" style=\"cursor: pointer; border: 0px;\" data-cf-modified-6eeed205015178b364748194-=\"\"/\u003e\u003cimg id=\"rating_11312_4\" src=\"https://coolshell.cn/wp-content/plugins/wp-postratings/images/stars_crystal/rating_on.gif\" alt=\"还不错\" title=\"还不错\" onmouseover=\"if (!window.__cfRLUnblockHandlers) return false; current_rating(11312, 4, \u0026#39;还不错\u0026#39;);\" onmouseout=\"if (!window.__cfRLUnblockHandlers) return false; ratings_off(4.2, 0, 0);\" onclick=\"if (!window.__cfRLUnblockHandlers) return false; rate_post();\" onkeypress=\"if (!window.__cfRLUnblockHandlers) return false; rate_post();\" style=\"cursor: pointer; border: 0px;\" data-cf-modified-6eeed205015178b364748194-=\"\"/\u003e\u003cimg id=\"rating_11312_5\" src=\"https://coolshell.cn/wp-content/plugins/wp-postratings/images/stars_crystal/rating_off.gif\" alt=\"很精彩\" title=\"很精彩\" onmouseover=\"if (!window.__cfRLUnblockHandlers) return false; current_rating(11312, 5, \u0026#39;很精彩\u0026#39;);\" onmouseout=\"if (!window.__cfRLUnblockHandlers) return false; ratings_off(4.2, 0, 0);\" onclick=\"if (!window.__cfRLUnblockHandlers) return false; rate_post();\" onkeypress=\"if (!window.__cfRLUnblockHandlers) return false; rate_post();\" style=\"cursor: pointer; border: 0px;\" data-cf-modified-6eeed205015178b364748194-=\"\"/\u003e (\u003cstrong\u003e45\u003c/strong\u003e 人打了分，平均分： \u003cstrong\u003e4.22\u003c/strong\u003e )\u003cbr/\u003e\u003cspan class=\"post-ratings-text\" id=\"ratings_11312_text\"\u003e\u003c/span\u003e\u003cmeta itemprop=\"name\" content=\"无插件Vim编程技巧\"/\u003e\u003cmeta itemprop=\"headline\" content=\"无插件Vim编程技巧\"/\u003e\u003cmeta itemprop=\"description\" content=\"相信大家看过《简明Vim教程》也玩了《Vim大冒险》的游戏了，相信大家对Vim都有一个好的入门了。我在这里把我日常用Vim编程的一些技巧列出来给大家看看，希望对大家有用，另外，也是一个抛砖引玉的过程，也希望大家把你们的技巧跟贴一下，我会更新到这篇文章中。另外，这篇文章里的这些技巧全都是vim原生态的，不需要你安装什么插件。我的Vim的版本是7.2。\n浏览代码\n首先，我们先从浏览代码开始。有时候...\"/\u003e\u003cmeta itemprop=\"datePublished\" content=\"2014-03-24T08:25:29+08:00\"/\u003e\u003cmeta itemprop=\"dateModified\" content=\"2014-06-26T21:10:17+08:00\"/\u003e\u003cmeta itemprop=\"url\" content=\"https://coolshell.cn/articles/11312.html\"/\u003e\u003cmeta itemprop=\"author\" content=\"陈皓\"/\u003e\u003cmeta itemprop=\"mainEntityOfPage\" content=\"https://coolshell.cn/articles/11312.html\"/\u003e\u003cdiv style=\"display: none;\" itemprop=\"publisher\" itemscope=\"\" itemtype=\"https://schema.org/Organization\"\u003e\u003cmeta itemprop=\"name\" content=\"酷 壳 - CoolShell\"/\u003e\u003cmeta itemprop=\"url\" content=\"https://coolshell.cn\"/\u003e\u003cdiv itemprop=\"logo\" itemscope=\"\" itemtype=\"https://schema.org/ImageObject\"\u003e\u003cmeta itemprop=\"url\" content=\"\"/\u003e\u003c/div\u003e\u003c/div\u003e\u003cdiv style=\"display: none;\" itemprop=\"aggregateRating\" itemscope=\"\" itemtype=\"https://schema.org/AggregateRating\"\u003e\u003cmeta itemprop=\"bestRating\" content=\"5\"/\u003e\u003cmeta itemprop=\"worstRating\" content=\"1\"/\u003e\u003cmeta itemprop=\"ratingValue\" content=\"4.22\"/\u003e\u003cmeta itemprop=\"ratingCount\" content=\"45\"/\u003e\u003c/div\u003e\u003c/div\u003e\u003cdiv id=\"post-ratings-11312-loading\" class=\"post-ratings-loading\"\u003e\u003cimg src=\"https://coolshell.cn/wp-content/plugins/wp-postratings/images/loading.gif\" width=\"16\" height=\"16\" class=\"post-ratings-image\"/\u003eLoading...\u003c/div\u003e\n\u003c/div\u003e",
  "Date": "2014-03-24T08:25:29+08:00",
  "Author": "陈皓"
}