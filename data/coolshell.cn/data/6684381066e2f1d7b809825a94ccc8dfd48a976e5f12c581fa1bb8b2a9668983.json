{
  "Source": "coolshell.cn",
  "Title": "谁说C语言很简单？",
  "Link": "https://coolshell.cn/articles/873.html",
  "Content": "\u003cdiv class=\"entry-content\"\u003e\n\u003cp\u003e\u003cscript async=\"\" src=\"https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3415450859608158\" crossorigin=\"anonymous\" type=\"a053e0b49015c06e46a97baf-text/javascript\"\u003e\u003c/script\u003e\u003c/p\u003e\n\u003cp class=\"li-enumerate\"\u003e前两天，Neo写了一篇《\u003ca href=\"https://coolshell.cn/articles/830.html\"\u003e语言的歧义\u003c/a\u003e》其使用C语言讨论了一些语言的歧义。大家应该也顺便了解了一下C语言中的很多不可思异的东西，可能也是你从未注意到的东西。\u003c/p\u003e\n\u003cp class=\"li-enumerate\"\u003e是的，C语言并不简单，让我们来看看下面这些示例：\u003c/p\u003e\n\u003col class=\"enumerate\" type=\"1\"\u003e\n\u003cli class=\"li-enumerate\"\u003e\u003cstrong\u003e为什么下面的代码会返回0？(这题应该很简单吧)\u003cbr/\u003e\n\u003c/strong\u003e\u003cp\u003e\u003c/p\u003e\n\u003cpre class=\"verbatim\"\u003e\u003cspan style=\"color: #0000ff;\"\u003e  int x;\n  return x == (1 \u0026amp;\u0026amp; x);\n\u003c/span\u003e\u003c/pre\u003e\n\u003cp\u003e本题主要是关于C/C++中变量初始化的问题。\u003c/p\u003e\u003c/li\u003e\n\u003cp\u003e\u003cspan id=\"more-873\"\u003e\u003c/span\u003e\u003c/p\u003e\n\u003cli class=\"li-enumerate\"\u003e\u003cstrong\u003e为什么下面的代码会返回0而不是-1？\u003c/strong\u003e\n\u003cpre class=\"verbatim\"\u003e\u003cspan style=\"color: #0000ff;\"\u003e return ((1 - sizeof(int)) \u0026gt;\u0026gt; 32);\n\u003c/span\u003e\u003c/pre\u003e\n\u003cp\u003e答案：\u003ctt\u003esizeof\u003c/tt\u003e 是一个unsigned的类型，所以……\u003c/p\u003e\u003c/li\u003e\n\u003cli class=\"li-enumerate\"\u003e\u003cstrong\u003e代码作用域是一件很诡异的事，下面这个函数返回值是什么？\u003cbr/\u003e\n\u003c/strong\u003e\u003cp\u003e\u003c/p\u003e\n\u003cpre class=\"verbatim\"\u003e\u003cspan style=\"color: #0000ff;\"\u003eint x = 5;\nint f() {\n  int x = 3;\n  {\n    extern int x;\n    return x;\n  }\n}\n\u003c/span\u003e\u003c/pre\u003e\n\u003cp\u003e答案：5\u003c/p\u003e\u003c/li\u003e\n\u003cli class=\"li-enumerate\"\u003e\u003cstrong\u003e函数和函数指针可以相互转换。下面的语句哪些是合法的？\u003cbr/\u003e\n\u003c/strong\u003e\u003cp\u003e\u003c/p\u003e\n\u003cpre class=\"verbatim\"\u003e\u003cspan style=\"color: #0000ff;\"\u003eint (*pf)(void);\nint f(void)\n{\n\n   pf = \u0026amp;f; \u003cspan style=\"color: #008000;\"\u003e// 没问题\u003c/span\u003e\n   pf = ***f; \u003cspan style=\"color: #008000;\"\u003e// 取址？\u003c/span\u003e\n   pf(); \u003cspan style=\"color: #008000;\"\u003e// 函数指针可以调用？\n\u003c/span\u003e   (****pf)();  \u003cspan style=\"color: #008000;\"\u003e// 这又是什么？\u003c/span\u003e\n   (***************f)(); \u003cspan style=\"color: #008000;\"\u003e// 这个够变态了吧？\u003c/span\u003e\n}\n\u003c/span\u003e\u003c/pre\u003e\n\u003cp\u003e答案：全部合法。\u003c/p\u003e\u003c/li\u003e\n\u003cli class=\"li-enumerate\"\u003e\u003cstrong\u003e初始化可能是ISO C中最难的部分了。无论是MSVC 还是GCC 都没有完全实现。GCC 可能更接近标准。在下面的代码中，\u003ctt\u003ei.nested.y\u003c/tt\u003e 和\u003ctt\u003ei.nested.z的最终值是什么？\u003c/tt\u003e\u003c/strong\u003e\n\u003cpre class=\"verbatim\"\u003e\u003cspan style=\"color: #0000ff;\"\u003estruct {\n   int x;\n   struct {\n       int y, z;\n   } nested;\n} i = { .nested.y = 5, 6, .x = 1, 2 };\n\u003c/span\u003e\u003c/pre\u003e\n\u003cp\u003e答案：2和6\u003c/p\u003e\u003c/li\u003e\n\u003cli class=\"li-enumerate\"\u003e\u003cstrong\u003e下面这个示例是C语言的痛，main函数返回值是什么？\u003c/strong\u003e\n\u003cpre class=\"verbatim\"\u003e\u003cspan style=\"color: #0000ff;\"\u003etypedef struct\n{\n  char *key;\n  char *value;\n} T1;\n\ntypedef struct\n{\n  long type;\n  char *value;\n} T3;\n\nT1 a[] =\n{\n  {\n    \u0026#34;\u0026#34;,\n    ((char *)\u0026amp;((T3) {1, (char *) 1}))\n  }\n};\nint main() {\n   T3 *pt3 = (T3*)a[0].value;\n   return pt3-\u0026gt;value;\n}\n\u003c/span\u003e\u003c/pre\u003e\n\u003cp\u003e答案：1（你知道为什么吗？）\u003c/p\u003e\u003c/li\u003e\n\u003cli class=\"li-enumerate\"\u003e\u003cstrong\u003e下面这个例就更变态了。在GCC的文档中，这个语法是合法的，但是不知道为什么GCC并没有实现。下面的代码返回 2.\u003c/strong\u003e\n\u003cpre class=\"verbatim\"\u003e\u003cspan style=\"color: #0000ff;\"\u003e return ((int []){1,2,3,4})[1];\n\u003c/span\u003e\u003c/pre\u003e\n\u003cp\u003e \u003c/p\u003e\u003c/li\u003e\n\u003cli class=\"li-enumerate\"\u003e\u003cstrong\u003e在下面的这个示例中，有一个“bar” 函数及其函数指针 “pbar” 的两个拷贝(static 类型一般作用于语句块或文件域).\u003c/strong\u003e\n\u003cpre class=\"verbatim\"\u003e\u003cspan style=\"color: #0000ff;\"\u003e  int foo() {\n     static bar();\n     static (*pbar)() = bar;\n\n  }\n\n  static bar() {\n    return 1;\n  }\n\n  static (*pbar)() = 0;\n\u003c/span\u003e\u003c/pre\u003e\n\u003cp\u003e \u003c/p\u003e\u003c/li\u003e\n\u003cli class=\"li-enumerate\"\u003e\u003cstrong\u003e下面的这个函数返回值是什么？取决于编译器是先处理unsigned long转型，还是负号。\u003c/strong\u003e\n\u003cpre class=\"verbatim\"\u003e\u003cspan style=\"color: #0000ff;\"\u003e  unsigned long foo() {\n    return (unsigned long) - 1 / 8;\n  }\n\u003c/span\u003e\u003c/pre\u003e\n\u003cp\u003e如果是： \u003ctt\u003e((unsigned long) - 1) / 8，那将是一个很大的数。\u003cbr/\u003e\n\u003c/tt\u003e\u003ctt\u003e如果是：\u003c/tt\u003e \u003ctt\u003e(unsigned long) (- 1 / 8 )\u003c/tt\u003e, 那将是 0\u003c/p\u003e\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp class=\"li-enumerate\"\u003e是的，这样使用C语言可能很奇怪，不过我们可以从另一方面了解C语言的很多我们不常注意的特性。C语言其实并不容易。\u003c/p\u003e\n\u003cp\u003e\u003c/p\u003e\n\u003cdiv style=\"margin-top: 15px; font-size: 16px;color: #cc0000;\"\u003e\n\u003cp align=\"center\"\u003e\u003cstrong\u003e（转载本站文章请注明作者和出处 \u003ca href=\"https://coolshell.cn/\"\u003e酷 壳 – CoolShell\u003c/a\u003e ，请勿用于任何商业用途）\u003c/strong\u003e\u003c/p\u003e\n\u003c/div\u003e\n\u003cdiv class=\"wp_rp_wrap  wp_rp_vertical_m\" id=\"wp_rp_first\"\u003e\u003cdiv class=\"wp_rp_content\"\u003e\u003ch3 class=\"related_post_title\"\u003e相关文章\u003c/h3\u003e\u003cul class=\"related_post wp_rp\"\u003e\u003cli\u003e\u003ca href=\"https://coolshell.cn/articles/20845.html\" class=\"wp_rp_thumbnail\"\u003e\u003cimg src=\"https://coolshell.cn/wp-content/uploads/2020/03/rust-social-wide-150x150.jpg\" alt=\"Rust语言的编程范式\" width=\"150\" height=\"150\"/\u003e\u003c/a\u003e\u003ca href=\"https://coolshell.cn/articles/20845.html\" class=\"wp_rp_title\"\u003eRust语言的编程范式\u003c/a\u003e\u003c/li\u003e\u003cli\u003e\u003ca href=\"https://coolshell.cn/articles/18360.html\" class=\"wp_rp_thumbnail\"\u003e\u003cimg src=\"https://coolshell.cn/wp-content/uploads/2018/05/300x262-150x150.jpg\" alt=\"程序员练级攻略（2018)  与我的专栏\" width=\"150\" height=\"150\"/\u003e\u003c/a\u003e\u003ca href=\"https://coolshell.cn/articles/18360.html\" class=\"wp_rp_title\"\u003e程序员练级攻略（2018) 与我的专栏\u003c/a\u003e\u003c/li\u003e\u003cli\u003e\u003ca href=\"https://coolshell.cn/articles/18024.html\" class=\"wp_rp_thumbnail\"\u003e\u003cimg src=\"https://coolshell.cn/wp-content/uploads/2017/07/api-design-300x278-2-150x150.jpg\" alt=\"API设计原则 – Qt官网的设计实践总结\" width=\"150\" height=\"150\"/\u003e\u003c/a\u003e\u003ca href=\"https://coolshell.cn/articles/18024.html\" class=\"wp_rp_title\"\u003eAPI设计原则 – Qt官网的设计实践总结\u003c/a\u003e\u003c/li\u003e\u003cli\u003e\u003ca href=\"https://coolshell.cn/articles/12052.html\" class=\"wp_rp_thumbnail\"\u003e\u003cimg src=\"https://coolshell.cn/wp-content/plugins/wordpress-23-related-posts-plugin/static/thumbs/29.jpg\" alt=\"Leetcode 编程训练\" width=\"150\" height=\"150\"/\u003e\u003c/a\u003e\u003ca href=\"https://coolshell.cn/articles/12052.html\" class=\"wp_rp_title\"\u003eLeetcode 编程训练\u003c/a\u003e\u003c/li\u003e\u003cli\u003e\u003ca href=\"https://coolshell.cn/articles/12012.html\" class=\"wp_rp_thumbnail\"\u003e\u003cimg src=\"https://coolshell.cn/wp-content/uploads/2014/10/edsm-150x150.gif\" alt=\"State Threads 回调终结者\" width=\"150\" height=\"150\"/\u003e\u003c/a\u003e\u003ca href=\"https://coolshell.cn/articles/12012.html\" class=\"wp_rp_title\"\u003eState Threads 回调终结者\u003c/a\u003e\u003c/li\u003e\u003cli\u003e\u003ca href=\"https://coolshell.cn/articles/11466.html\" class=\"wp_rp_thumbnail\"\u003e\u003cimg src=\"https://coolshell.cn/wp-content/uploads/2014/04/c99-150x150.jpg\" alt=\"C语言的整型溢出问题\" width=\"150\" height=\"150\"/\u003e\u003c/a\u003e\u003ca href=\"https://coolshell.cn/articles/11466.html\" class=\"wp_rp_title\"\u003eC语言的整型溢出问题\u003c/a\u003e\u003c/li\u003e\u003c/ul\u003e\u003c/div\u003e\u003c/div\u003e\n\u003cdiv id=\"post-ratings-873\" class=\"post-ratings\" itemscope=\"\" itemtype=\"https://schema.org/Article\" data-nonce=\"3471d29f92\"\u003e\u003cimg id=\"rating_873_1\" src=\"https://coolshell.cn/wp-content/plugins/wp-postratings/images/stars_crystal/rating_on.gif\" alt=\"好烂啊\" title=\"好烂啊\" onmouseover=\"if (!window.__cfRLUnblockHandlers) return false; current_rating(873, 1, \u0026#39;好烂啊\u0026#39;);\" onmouseout=\"if (!window.__cfRLUnblockHandlers) return false; ratings_off(4, 0, 0);\" onclick=\"if (!window.__cfRLUnblockHandlers) return false; rate_post();\" onkeypress=\"if (!window.__cfRLUnblockHandlers) return false; rate_post();\" style=\"cursor: pointer; border: 0px;\" data-cf-modified-a053e0b49015c06e46a97baf-=\"\"/\u003e\u003cimg id=\"rating_873_2\" src=\"https://coolshell.cn/wp-content/plugins/wp-postratings/images/stars_crystal/rating_on.gif\" alt=\"有点差\" title=\"有点差\" onmouseover=\"if (!window.__cfRLUnblockHandlers) return false; current_rating(873, 2, \u0026#39;有点差\u0026#39;);\" onmouseout=\"if (!window.__cfRLUnblockHandlers) return false; ratings_off(4, 0, 0);\" onclick=\"if (!window.__cfRLUnblockHandlers) return false; rate_post();\" onkeypress=\"if (!window.__cfRLUnblockHandlers) return false; rate_post();\" style=\"cursor: pointer; border: 0px;\" data-cf-modified-a053e0b49015c06e46a97baf-=\"\"/\u003e\u003cimg id=\"rating_873_3\" src=\"https://coolshell.cn/wp-content/plugins/wp-postratings/images/stars_crystal/rating_on.gif\" alt=\"凑合看看\" title=\"凑合看看\" onmouseover=\"if (!window.__cfRLUnblockHandlers) return false; current_rating(873, 3, \u0026#39;凑合看看\u0026#39;);\" onmouseout=\"if (!window.__cfRLUnblockHandlers) return false; ratings_off(4, 0, 0);\" onclick=\"if (!window.__cfRLUnblockHandlers) return false; rate_post();\" onkeypress=\"if (!window.__cfRLUnblockHandlers) return false; rate_post();\" style=\"cursor: pointer; border: 0px;\" data-cf-modified-a053e0b49015c06e46a97baf-=\"\"/\u003e\u003cimg id=\"rating_873_4\" src=\"https://coolshell.cn/wp-content/plugins/wp-postratings/images/stars_crystal/rating_on.gif\" alt=\"还不错\" title=\"还不错\" onmouseover=\"if (!window.__cfRLUnblockHandlers) return false; current_rating(873, 4, \u0026#39;还不错\u0026#39;);\" onmouseout=\"if (!window.__cfRLUnblockHandlers) return false; ratings_off(4, 0, 0);\" onclick=\"if (!window.__cfRLUnblockHandlers) return false; rate_post();\" onkeypress=\"if (!window.__cfRLUnblockHandlers) return false; rate_post();\" style=\"cursor: pointer; border: 0px;\" data-cf-modified-a053e0b49015c06e46a97baf-=\"\"/\u003e\u003cimg id=\"rating_873_5\" src=\"https://coolshell.cn/wp-content/plugins/wp-postratings/images/stars_crystal/rating_off.gif\" alt=\"很精彩\" title=\"很精彩\" onmouseover=\"if (!window.__cfRLUnblockHandlers) return false; current_rating(873, 5, \u0026#39;很精彩\u0026#39;);\" onmouseout=\"if (!window.__cfRLUnblockHandlers) return false; ratings_off(4, 0, 0);\" onclick=\"if (!window.__cfRLUnblockHandlers) return false; rate_post();\" onkeypress=\"if (!window.__cfRLUnblockHandlers) return false; rate_post();\" style=\"cursor: pointer; border: 0px;\" data-cf-modified-a053e0b49015c06e46a97baf-=\"\"/\u003e (\u003cstrong\u003e27\u003c/strong\u003e 人打了分，平均分： \u003cstrong\u003e4.00\u003c/strong\u003e )\u003cbr/\u003e\u003cspan class=\"post-ratings-text\" id=\"ratings_873_text\"\u003e\u003c/span\u003e\u003cmeta itemprop=\"name\" content=\"谁说C语言很简单？\"/\u003e\u003cmeta itemprop=\"headline\" content=\"谁说C语言很简单？\"/\u003e\u003cmeta itemprop=\"description\" content=\"前两天，Neo写了一篇《语言的歧义》其使用C语言讨论了一些语言的歧义。大家应该也顺便了解了一下C语言中的很多不可思异的东西，可能也是你从未注意到的东西。\n是的，C语言并不简单，让我们来看看下面这些示例：\n\n\n\t为什么下面的代码会返回0？(这题应该很简单吧)\n\n  int x;\n  return x == (1 \u0026amp;\u0026amp; x);\n\n本题主要是关于C/C++中变量初始化的问题。\n\n\t...\"/\u003e\u003cmeta itemprop=\"datePublished\" content=\"2009-05-19T22:10:25+08:00\"/\u003e\u003cmeta itemprop=\"dateModified\" content=\"2009-05-19T22:12:00+08:00\"/\u003e\u003cmeta itemprop=\"url\" content=\"https://coolshell.cn/articles/873.html\"/\u003e\u003cmeta itemprop=\"author\" content=\"陈皓\"/\u003e\u003cmeta itemprop=\"mainEntityOfPage\" content=\"https://coolshell.cn/articles/873.html\"/\u003e\u003cdiv style=\"display: none;\" itemprop=\"publisher\" itemscope=\"\" itemtype=\"https://schema.org/Organization\"\u003e\u003cmeta itemprop=\"name\" content=\"酷 壳 - CoolShell\"/\u003e\u003cmeta itemprop=\"url\" content=\"https://coolshell.cn\"/\u003e\u003cdiv itemprop=\"logo\" itemscope=\"\" itemtype=\"https://schema.org/ImageObject\"\u003e\u003cmeta itemprop=\"url\" content=\"\"/\u003e\u003c/div\u003e\u003c/div\u003e\u003cdiv style=\"display: none;\" itemprop=\"aggregateRating\" itemscope=\"\" itemtype=\"https://schema.org/AggregateRating\"\u003e\u003cmeta itemprop=\"bestRating\" content=\"5\"/\u003e\u003cmeta itemprop=\"worstRating\" content=\"1\"/\u003e\u003cmeta itemprop=\"ratingValue\" content=\"4\"/\u003e\u003cmeta itemprop=\"ratingCount\" content=\"27\"/\u003e\u003c/div\u003e\u003c/div\u003e\u003cdiv id=\"post-ratings-873-loading\" class=\"post-ratings-loading\"\u003e\u003cimg src=\"https://coolshell.cn/wp-content/plugins/wp-postratings/images/loading.gif\" width=\"16\" height=\"16\" class=\"post-ratings-image\"/\u003eLoading...\u003c/div\u003e\n\u003c/div\u003e",
  "Date": "2009-05-19T22:10:25+08:00",
  "Author": "陈皓"
}