{
  "Source": "coolshell.cn",
  "Title": "你会做Web上的用户登录功能吗？",
  "Link": "https://coolshell.cn/articles/5353.html",
  "Content": "\u003cdiv class=\"entry-content\"\u003e\n\u003cp\u003e\u003cscript async=\"\" src=\"https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3415450859608158\" crossorigin=\"anonymous\" type=\"6c6a33ebbea82fdb3924f94c-text/javascript\"\u003e\u003c/script\u003eWeb上的用户登录功能应该是最基本的功能了，可是在我看过一些站点的用户登录功能后，我觉得很有必要写一篇文章教大家怎么来做用户登录功能。下面的文章告诉大家这个功能可能并没有你所想像的那么简单，这是一个关系到用户安全的功能，希望大家能从下面的文章中能知道什么样的方法才是一个好的用户登录功能。\u003cspan style=\"color: #cc0000;\"\u003e\u003cstrong\u003e以下内容，转载时请保持原文一致，并请注明作者和出处\u003c/strong\u003e\u003c/span\u003e。\u003c/p\u003e\n\u003cdiv id=\"ez-toc-container\" class=\"ez-toc-v2_0_48 counter-hierarchy ez-toc-counter ez-toc-grey ez-toc-container-direction\"\u003e\n\u003cdiv class=\"ez-toc-title-container\"\u003e\n\u003cp class=\"ez-toc-title\"\u003e目录\u003c/p\u003e\n\u003cspan class=\"ez-toc-title-toggle\"\u003e\u003c/span\u003e\u003c/div\u003e\n\u003cnav\u003e\u003cul class=\"ez-toc-list ez-toc-list-level-1 \"\u003e\u003cli class=\"ez-toc-page-1 ez-toc-heading-level-4\"\u003e\u003ca class=\"ez-toc-link ez-toc-heading-1\" href=\"#%E7%94%A8%E6%88%B7%E5%90%8D%E5%92%8C%E5%8F%A3%E4%BB%A4\" title=\"用户名和口令\"\u003e用户名和口令\u003c/a\u003e\u003c/li\u003e\u003cli class=\"ez-toc-page-1 ez-toc-heading-level-4\"\u003e\u003ca class=\"ez-toc-link ez-toc-heading-2\" href=\"#%E7%94%A8%E6%88%B7%E7%99%BB%E5%BD%95%E7%8A%B6%E6%80%81\" title=\"用户登录状态\"\u003e用户登录状态\u003c/a\u003e\u003c/li\u003e\u003cli class=\"ez-toc-page-1 ez-toc-heading-level-4\"\u003e\u003ca class=\"ez-toc-link ez-toc-heading-3\" href=\"#%E6%89%BE%E5%9B%9E%E5%8F%A3%E4%BB%A4%E7%9A%84%E5%8A%9F%E8%83%BD\" title=\"找回口令的功能\"\u003e找回口令的功能\u003c/a\u003e\u003c/li\u003e\u003cli class=\"ez-toc-page-1 ez-toc-heading-level-4\"\u003e\u003ca class=\"ez-toc-link ez-toc-heading-4\" href=\"#%E5%8F%A3%E4%BB%A4%E6%8E%A2%E6%B5%8B%E9%98%B2%E5%AE%88\" title=\"口令探测防守\"\u003e口令探测防守\u003c/a\u003e\u003c/li\u003e\u003cli class=\"ez-toc-page-1 ez-toc-heading-level-4\"\u003e\u003ca class=\"ez-toc-link ez-toc-heading-5\" href=\"#%E5%8F%82%E8%80%83%E6%96%87%E7%AB%A0\" title=\"参考文章\"\u003e参考文章\u003c/a\u003e\u003c/li\u003e\u003c/ul\u003e\u003c/nav\u003e\u003c/div\u003e\n\u003ch4\u003e\u003cspan class=\"ez-toc-section\" id=\"%E7%94%A8%E6%88%B7%E5%90%8D%E5%92%8C%E5%8F%A3%E4%BB%A4\"\u003e\u003c/span\u003e用户名和口令\u003cspan class=\"ez-toc-section-end\"\u003e\u003c/span\u003e\u003c/h4\u003e\n\u003cp\u003e首先，我们先来说说用户名和口令的事。这并不是本站第一次谈论这个事了。\u003ca title=\"如何管理并设计你的口令\" href=\"https://coolshell.cn/articles/2428.html\" target=\"_blank\"\u003e如何管理自己的口令\u003c/a\u003e让你知道怎么管理自己的口令，\u003ca title=\"破解你的口令\" href=\"https://coolshell.cn/articles/3801.html\" target=\"_blank\"\u003e破解你的口令\u003c/a\u003e让你知道在现代这样速度的计算速度下，用穷举法破解你的口令可能会是一件很轻松的事。在这里我想告诉从开发者的角度上来做设计这个用户名和口令的事。下面一几件规则：\u003c/p\u003e\n\u003cul style=\"font-weight: bold;\"\u003e\n\u003cli\u003e\u003cspan class=\"Apple-style-span\" style=\"font-weight: normal;\"\u003e\u003cstrong\u003e限制用户输入一些非常容易被破解的口令\u003c/strong\u003e。如什么qwert，123456, password之类，就像\u003ca title=\"Twitter的禁用口令\" href=\"https://coolshell.cn/articles/2451.html\" target=\"_blank\"\u003etwitter限制用户的口令\u003c/a\u003e一样做一个口令的黑名单。另外，你可以限制用户口令的长度，是否有大小写，是否有数字，你可以用你的程序做一下校验。当然，这可能会让用户感到很不爽，所以，现在很多网站都提供了UX让用户知道他的口令强度是什么样的（比如\u003ca title=\"另类UX让你输入强口令\" href=\"https://coolshell.cn/articles/3877.html\" target=\"_blank\"\u003e这个有趣的UX\u003c/a\u003e），这样可以让用户有一个选择，目的就是告诉用户——要想安全，先把口令设得好一点。\u003c/span\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003cul style=\"font-weight: bold;\"\u003e\n\u003cli\u003e\u003cspan class=\"Apple-style-span\" style=\"font-weight: normal;\"\u003e\u003cstrong\u003e千万不要明文保存用户的口令\u003c/strong\u003e。正如\u003ca title=\"如何管理并设计你的口令\" href=\"https://coolshell.cn/articles/2428.html\" target=\"_blank\"\u003e如何管理自己的口令\u003c/a\u003e所说的一样，很多时候，用户都会用相同的ID相同的口令来登录很多网站。所以，如果你的网站明文保存的话，那么，如果你的数据被你的不良员工流传出去那对用户是灾难性的。所以，用户的口令一定要加密保存，最好是用不可逆的加密，如MD5或是SHA1之类的有hash算法的不可逆的加密算法。CSDN曾明文保存过用户的口令。（另，对于国内公司的品行以及有关部门的管理方式，我不敢保证国内网站以加密的方式保存你的口令。我觉得，做为一个有良知的人，我们应该加密保存用户的口令）\u003c/span\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv\u003e\u003cspan id=\"more-5353\"\u003e\u003c/span\u003e\u003c/div\u003e\n\u003cul style=\"font-weight: bold;\"\u003e\n\u003cli\u003e\u003cspan class=\"Apple-style-span\" style=\"font-weight: normal;\"\u003e\u003cstrong\u003e是否让浏览器保存口令\u003c/strong\u003e。我们有N多的方法可以不让浏览器保存用户名和口令。但是这可能对用户来说很不爽。因为在真实世界里谁也记得不住那么多的口令。很多用户可能会使用一些密码管理工具来保存密码，浏览器只是其中一种。是否让浏览器保存这个需要你做决定，重点是看一下你的系统的安全级别是否要求比较高，如果是的话，则不要让浏览器保存密码，并在网站明显的位置告诉用户——保存口令最安全的地方只有你的大脑。\u003c/span\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003cul style=\"font-weight: bold;\"\u003e\n\u003cli\u003e\u003cspan class=\"Apple-style-span\" style=\"font-weight: normal;\"\u003e\u003cstrong\u003e口令在网上的传输\u003c/strong\u003e。因为HTTP是明文协议，所以，用户名和口令在网上也是明文发送的，这个很不安全。你可以看看\u003ca title=\"用Wireshark从http数据包中得到用户的登录信息\" href=\"http://www.blogjava.net/heyang/archive/2011/04/05/340330.html\" target=\"_blank\"\u003e这篇文章\u003c/a\u003e你就明白了。要做到加密传输就必需使用HTTPS协议。但是，在中国还是有很多网站的Web登录方式还在使用ActiveX控件，这可能成为IE6还大量存在的原因。我通常理解为这些ActiveX控件是为了反键盘记录程序的。 不过，我依然觉ActiveX控件不应该存在，因为在国外的众多安全很重要的站点上都看不到ActiveX的控件的身影。\u003c/span\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch4\u003e\u003cspan class=\"ez-toc-section\" id=\"%E7%94%A8%E6%88%B7%E7%99%BB%E5%BD%95%E7%8A%B6%E6%80%81\"\u003e\u003c/span\u003e用户登录状态\u003cspan class=\"ez-toc-section-end\"\u003e\u003c/span\u003e\u003c/h4\u003e\n\u003cp\u003e首先，我想告诉大家的是，因为HTTP是无状态的协议，也就是说，这个协议是无法记录用户访问状态的，其每次请求都是独立的无关联的，一笔是一笔。而我们的网站都是设计成多个页面的，所在页面跳转过程中我们需要知道用户的状态，尤其是用户登录的状态，这样我们在页面跳转后我们才知道是否可以让用户有权限来操作一些功能或是查看一些数据。\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003e所以，我们每个页面都需要对用户的身份进行认证\u003c/strong\u003e。当然，我们不可能让用户在每个页面上输入用户名和口令，这会让用户觉得我们的网站相当的SB。为了实现这一功能，用得最多的技术就是浏览器的cookie，我们会把用户登录的信息存放在客户端的cookie里，这样，我们每个页面都从这个cookie里获得用户是否登录的信息，从而达到记录状态，验证用户的目的。但是，你真的会用cookie吗？下面是使用cookie的一些原则。\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003cstrong\u003e千万不要在cookie中存放用户的密码\u003c/strong\u003e。加密的密码都不行。因为这个密码可以被人获取并尝试离线穷举。所以，你一定不能把用户的密码保存在cookie中。我看到太多的站点这么干了。\u003c/li\u003e\n\u003c/ul\u003e\n\u003cul\u003e\n\u003cli\u003e\u003cstrong\u003e正确设计“记住密码”\u003c/strong\u003e。这个功能简直就是一个安全隐患，我觉得并不是所有的程序员都知道怎么设计这个事。一般的设计 是——一时用户勾选了这个功能，系统会生成一个cookie，cookie包括用户名和一个固定的散列值，这个固定的散列值一直使用。这样，你就可以在所有的设备和客户上都可以登录，而且可以有多个用户同时登录。这个并不是很安全。下面是一些更为安全的方法供你参考：\u003cbr/\u003e\n\u003cspan style=\"color: #000080;\"\u003e（——\u003cem\u003e\u003cstrong\u003e更新 2011/08/26，原文中有些小错误，并且说的不清楚，重新调整了一下——\u003c/strong\u003e\u003c/em\u003e）\u003c/span\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp style=\"padding-left: 60px;\"\u003e1）在cookie中，保存三个东西——\u003cstrong\u003e用户名\u003c/strong\u003e，\u003cstrong\u003e登录序列\u003c/strong\u003e，\u003cstrong\u003e登录token\u003c/strong\u003e。\u003c/p\u003e\n\u003cp style=\"padding-left: 90px;\"\u003e\u003cstrong\u003e用户名\u003c/strong\u003e：明文存放。\u003cbr/\u003e\n\u003cstrong\u003e登录序列\u003c/strong\u003e：一个被MD5散列过的随机数，\u003cspan style=\"color: #cc0000;\"\u003e仅当强制用户输入口令时更新（如：用户修改了口令）\u003c/span\u003e。\u003cbr/\u003e\n\u003cstrong\u003e登录token\u003c/strong\u003e：一个被MD5散列过的随机数，\u003cspan style=\"color: #cc0000;\"\u003e仅一个登录session内有效，新的登录session会更新它\u003c/span\u003e。\u003c/p\u003e\n\u003cp style=\"padding-left: 60px;\"\u003e2）上述三个东西会存在服务器上，服务器的验证用户需要验证客户端cookie里的这三个事。\u003c/p\u003e\n\u003cp style=\"padding-left: 60px;\"\u003e3）这样的设计会有什么样的效果，会有下面的效果，\u003c/p\u003e\n\u003cp style=\"padding-left: 90px;\"\u003ea）\u003cstrong\u003e登录token\u003c/strong\u003e是单实例登录。意思就是一个用户只能有一个登录实例。\u003c/p\u003e\n\u003cp style=\"padding-left: 90px;\"\u003eb）\u003cstrong\u003e登录序列\u003c/strong\u003e是用来做盗用行为检测的。如果用户的cookie被盗后，盗用者使用这个cookie访问网站时，我们的系统是以为是合法用户，然后更新“\u003cstrong\u003e登录token\u003c/strong\u003e”，而真正的用户回来访问时，系统发现只有“\u003cstrong\u003e用户名\u003c/strong\u003e”和“\u003cstrong\u003e登录序列\u003c/strong\u003e”相同，但是“\u003cstrong\u003e登录token\u003c/strong\u003e” 不对，这样的话，系统就知道，这个用户可能出现了被盗用的情况，于是，系统可以清除并更改\u003cstrong\u003e登录序列 \u003c/strong\u003e和\u003cstrong\u003e \u003cstrong\u003e登录token\u003c/strong\u003e\u003c/strong\u003e，这样就可以令所有的cookie失效，并要求用户输入口令。并给警告用户系统安全。\u003c/p\u003e\n\u003cp style=\"padding-left: 60px;\"\u003e4）当然，\u003cstrong\u003e上述这样的设计还是会有一些问题，比如：同一用户的不同设备登录，甚至在同一个设备上使用不同的浏览器保登录\u003c/strong\u003e。一个设备会让另一个设备的\u003cstrong\u003e登录token\u003c/strong\u003e和\u003cstrong\u003e登录序列\u003c/strong\u003e失效，从而让其它设备和浏览器需要重新登录，并会造成cookie被盗用的假象。所以，你在服务器服还需要考虑- \u003cstrong\u003eIP 地址\u003c/strong\u003e，\u003c/p\u003e\n\u003cp style=\"padding-left: 90px;\"\u003ea) 如果以口令方式登录，我们无需更新服务器的“\u003cstrong\u003e登录序列\u003c/strong\u003e”和 “\u003cstrong\u003e登录token\u003c/strong\u003e”（但需要更新cookie）。因为我们认为口令只有真正的用户知道。\u003c/p\u003e\n\u003cp style=\"padding-left: 90px;\"\u003eb) 如果 \u003cstrong\u003eIP相同\u003c/strong\u003e ，那么，我们无需更新服务器的“\u003cstrong\u003e登录序列\u003c/strong\u003e”和 “\u003cstrong\u003e登录token\u003c/strong\u003e”（但需要更新cookie）。因为我们认为是同一用户有同一IP（当然，同一个局域网里也有同一IP，但我们认为这个局域网是用户可以控制的。网吧内并不推荐使用这一功能）。\u003c/p\u003e\n\u003cp style=\"padding-left: 90px;\"\u003ec) 如果 （\u003cstrong\u003eIP不同 \u003c/strong\u003e\u0026amp;\u0026amp;\u003cstrong\u003e 没有用口令登录\u003c/strong\u003e），那么，“\u003cstrong\u003e登录token\u003c/strong\u003e” 就会在多个IP间发生变化（登录token在两个或多个ip间被来来回回的变换），当在一定时间内达到一定次数后，系统才会真正觉得被盗用的可能性很高，此时系统在后台清除“\u003cstrong\u003e登录序列\u003c/strong\u003e”和“\u003cstrong\u003e登录token\u003c/strong\u003e“，让Cookie失效，强制用户输入口令（或是要求用户更改口令），以保证多台设备上的cookie一致。\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003cstrong\u003e不要让cookie有权限访问所有的操作\u003c/strong\u003e。否则就是XSS攻击，这个功能请参看\u003ca title=\"新浪微博的XSS攻击\" href=\"https://coolshell.cn/articles/4914.html\" target=\"_blank\"\u003e新浪微博的XSS攻击\u003c/a\u003e。下面的这些功能一定要用户输入口令：\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv style=\"padding-left: 60px;\"\u003e1）修改口令。\u003c/div\u003e\n\u003cdiv style=\"padding-left: 60px;\"\u003e2）修改电子邮件。（电子邮件通常用来找回用户密码，最好通发邮件或是发手机短信的方式修改，或者干脆就不让改一一用电子邮件做帐号名）\u003c/div\u003e\n\u003cdiv style=\"padding-left: 60px;\"\u003e3）用户的隐私信息。\u003c/div\u003e\n\u003cdiv style=\"padding-left: 60px;\"\u003e4）用户消费功能。\u003c/div\u003e\n\u003cdiv\u003e\n\u003cul\u003e\n\u003cli\u003e\u003cstrong\u003e权衡Cookie的过期时间。\u003c/strong\u003e如果是永不过期，会有很不错的用户体验，但是这也会让用户很快就忘了登录密码。如果设置上过期期限，比如2周，一个月，那么可能会好一点，但是2周和一个月后，用户依然会忘了密码。尤其是用户在一些公共电脑上，如果保存了永久cookie的话，等于泄露了帐号。所以，对于cookie的过期时间我们还需要权衡。\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/div\u003e\n\u003ch4\u003e\u003cspan class=\"ez-toc-section\" id=\"%E6%89%BE%E5%9B%9E%E5%8F%A3%E4%BB%A4%E7%9A%84%E5%8A%9F%E8%83%BD\"\u003e\u003c/span\u003e找回口令的功能\u003cspan class=\"ez-toc-section-end\"\u003e\u003c/span\u003e\u003c/h4\u003e\n\u003cp\u003e找回口令的功能一定要提供。但是很多朋友并不知道怎么来设计这个功能。我们有很多找回口令的设计，下面我逐个点评一下。\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003cstrong\u003e千万不要使用安全问答\u003c/strong\u003e。事实证明，这个环节很烦人，而且用户并不能很好的设置安全问答。什么，我的生日啊，我母亲的生日，等等。因为今天的互联网和以前不一样了，因为SNS，今天的互联比以前更真实了，我可以上facebook，开心，人人网，LinkedIn查到你的很多的真实的信息。通过这些信息我可以使用安全问答来重设你的口令。 这里需要说一下 Facebook，Facebook的安全问答很强大，还要你通过照片认人，呵呵。\u003c/li\u003e\n\u003c/ul\u003e\n\u003cul\u003e\n\u003cli\u003e\u003cstrong\u003e不要重置用户的密码\u003c/strong\u003e。因为这有可能让用户的密码遭到恶意攻击。当然，你要发个邮件给用户让其确认，用户点击邮件中的一个链接，你再重置。我并不推荐这样的方法，因为用户一般都会用笔记下来这个很难记的口令，然后登录系统，因为登录系统时使用了“记住密码”的功能，所以导致用户不会去修改密码，从而要么导到被写下来的密码被人盗取，要么又忘记了密码。\u003c/li\u003e\n\u003c/ul\u003e\n\u003cul\u003e\n\u003cli\u003e\u003cstrong\u003e好一点的做法——通过邮件自行重置\u003c/strong\u003e。当用户申请找回口令功能的时候，系统生成一个MD5唯一的随机字串（可通过UID+IP+timestamp+随机数），放在数据库中，然后设置上时限（比如1小时内），给用户发一个邮件，这个连接中包含那个MD5的字串的链接，用户通过点击那个链接来自己重新设置新的口令。\u003c/li\u003e\n\u003c/ul\u003e\n\u003cul\u003e\n\u003cli\u003e\u003cstrong\u003e更好一点的做法——多重认证\u003c/strong\u003e。比如：通过手机+邮件的方式让用户输入验证码。手机+邮件可能还不把握，因为手机要能会丢了，而我的手机可以访问我的邮箱。所以，使用U盾，SecureID（一个会变化的6位数token），或是通过人工的方式核实用户身份。当然，这主要看你的系统的安全级别了。\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch4\u003e\u003cspan class=\"ez-toc-section\" id=\"%E5%8F%A3%E4%BB%A4%E6%8E%A2%E6%B5%8B%E9%98%B2%E5%AE%88\"\u003e\u003c/span\u003e口令探测防守\u003cspan class=\"ez-toc-section-end\"\u003e\u003c/span\u003e\u003c/h4\u003e\n\u003cul\u003e\n\u003cli\u003e\u003cstrong\u003e使用验证码\u003c/strong\u003e。验证码是后台随机产生的一个短暂的验证码，这个验证码一般是一个计算机很难识别的图片。这样就可以防止以程序的方式来尝试用户的口令。事实证明，这是最简单也最有效的方式。当然，总是让用户输入那些肉眼都看不清的验证码的用户体验不好，所以，可以折中一下。比如Google，当他发现一个IP地址发出大量的搜索后，其会要求你输入验证码。当他发现同一个IP注册了3个以上的gmail邮箱后，他需要给你发短信方式或是电话方式的验证码。\u003c/li\u003e\n\u003c/ul\u003e\n\u003cul\u003e\n\u003cli\u003e\u003cstrong\u003e用户口令失败次数\u003c/strong\u003e。调置口令失败的上限，如果失败过多，则把帐号锁了，需要用户以找回口令的方式来重新激活帐号。但是，这个功能可能会被恶意人使用。最好的方法是，增加其尝试的时间成本（以前的这篇文章说过一个\u003ca title=\"如何防范密码被破解\" href=\"https://coolshell.cn/articles/2078.html\" target=\"_blank\"\u003e增加时间成本的解密算法\u003c/a\u003e）。如，两次口令尝试的间隔是5秒钟。三次以上错误，帐号被临时锁上30秒，5次以上帐号被锁1分钟，10次以上错误帐号被锁4小时……但是这会导致恶意用户用脚本来攻击，所以最好再加上验证码，验证码出错次数过多不禁止登录而是禁lP。\u003c/li\u003e\n\u003c/ul\u003e\n\u003cul\u003e\n\u003cli\u003e\u003cstrong\u003e系统全局防守\u003c/strong\u003e。上述的防守只针对某一个别用户。恶意者们深知这一点，所以，他们一般会动用“僵尸网络”轮着尝试一堆用户的口令，所以上述的那种方法可能还不够好。我们需要在系统全局域上监控所有的口令失败的次数。当然，这个需要我们平时没有受到攻击时的数据做为支持。比如你的系统，平均每天有5000次的口令错误的事件，那么你可以认为，当口令错误大幅超过这个数后，而且时间相对集中，就说明有黑客攻击。这个时候你怎么办？一般最常见使用的方法是让所有的用户输错口令后再次尝试的时间成本增加。\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv\u003e最后，再说一下，关于用户登录，使用第三方的 OAuth 和 OpenID 也不失为一个很不错的选择。\u003c/div\u003e\n\u003ch4\u003e\u003cspan class=\"ez-toc-section\" id=\"%E5%8F%82%E8%80%83%E6%96%87%E7%AB%A0\"\u003e\u003c/span\u003e参考文章\u003cspan class=\"ez-toc-section-end\"\u003e\u003c/span\u003e\u003c/h4\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"http://www.owasp.org/index.php/Guide_to_Authentication\" rel=\"nofollow\"\u003eOWASP Guide To Authentication\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"http://www.cs.umass.edu/~kevinfu/papers/webauth_tr.pdf\" rel=\"nofollow\"\u003eDos and Don’ts of Client Authentication on the Web \u003c/a\u003e（PDF）\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"http://fishbowl.pastiche.org/2004/01/19/persistent_login_cookie_best_practice/\" rel=\"nofollow\"\u003eCharles Miller’s Persistent Login Cookie Best Practice\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://en.wikipedia.org/wiki/HTTP_cookie#Drawbacks_of_cookies\" rel=\"nofollow\"\u003eWikipedia: HTTP cookie\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"http://cups.cs.cmu.edu/soups/2008/proceedings/p13Rabkin.pdf\" rel=\"nofollow\"\u003ePersonal knowledge questions for fallback authentication: Security questions in the era of Facebook \u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv\u003e（\u003cstrong\u003e以上内容，转载时请保持原文一致，并请注明作者和出处\u003c/strong\u003e）\u003c/div\u003e\n\u003cp\u003e\u003c/p\u003e\n\u003cdiv style=\"margin-top: 15px; font-size: 16px;color: #cc0000;\"\u003e\n\u003cp align=\"center\"\u003e\u003cstrong\u003e（转载本站文章请注明作者和出处 \u003ca href=\"https://coolshell.cn/\"\u003e酷 壳 – CoolShell\u003c/a\u003e ，请勿用于任何商业用途）\u003c/strong\u003e\u003c/p\u003e\n\u003c/div\u003e\n\u003cdiv class=\"wp_rp_wrap  wp_rp_vertical_m\" id=\"wp_rp_first\"\u003e\u003cdiv class=\"wp_rp_content\"\u003e\u003ch3 class=\"related_post_title\"\u003e相关文章\u003c/h3\u003e\u003cul class=\"related_post wp_rp\"\u003e\u003cli\u003e\u003ca href=\"https://coolshell.cn/articles/6193.html\" class=\"wp_rp_thumbnail\"\u003e\u003cimg src=\"https://coolshell.cn/wp-content/uploads/2011/12/63071edagw1doah4id8l4j-150x150.jpg\" alt=\"CSDN明文口令泄露的启示\" width=\"150\" height=\"150\"/\u003e\u003c/a\u003e\u003ca href=\"https://coolshell.cn/articles/6193.html\" class=\"wp_rp_title\"\u003eCSDN明文口令泄露的启示\u003c/a\u003e\u003c/li\u003e\u003cli\u003e\u003ca href=\"https://coolshell.cn/articles/3877.html\" class=\"wp_rp_thumbnail\"\u003e\u003cimg src=\"https://coolshell.cn/wp-content/plugins/wordpress-23-related-posts-plugin/static/thumbs/20.jpg\" alt=\"另类UX让你输入强口令\" width=\"150\" height=\"150\"/\u003e\u003c/a\u003e\u003ca href=\"https://coolshell.cn/articles/3877.html\" class=\"wp_rp_title\"\u003e另类UX让你输入强口令\u003c/a\u003e\u003c/li\u003e\u003cli\u003e\u003ca href=\"https://coolshell.cn/articles/3801.html\" class=\"wp_rp_thumbnail\"\u003e\u003cimg src=\"https://coolshell.cn/wp-content/uploads/2011/02/passwords-150x150.png\" alt=\"破解你的口令\" width=\"150\" height=\"150\"/\u003e\u003c/a\u003e\u003ca href=\"https://coolshell.cn/articles/3801.html\" class=\"wp_rp_title\"\u003e破解你的口令\u003c/a\u003e\u003c/li\u003e\u003cli\u003e\u003ca href=\"https://coolshell.cn/articles/2451.html\" class=\"wp_rp_thumbnail\"\u003e\u003cimg src=\"https://coolshell.cn/wp-content/plugins/wordpress-23-related-posts-plugin/static/thumbs/18.jpg\" alt=\"Twitter的禁用口令\" width=\"150\" height=\"150\"/\u003e\u003c/a\u003e\u003ca href=\"https://coolshell.cn/articles/2451.html\" class=\"wp_rp_title\"\u003eTwitter的禁用口令\u003c/a\u003e\u003c/li\u003e\u003cli\u003e\u003ca href=\"https://coolshell.cn/articles/2428.html\" class=\"wp_rp_thumbnail\"\u003e\u003cimg src=\"https://coolshell.cn/wp-content/plugins/wordpress-23-related-posts-plugin/static/thumbs/17.jpg\" alt=\"如何管理并设计你的口令\" width=\"150\" height=\"150\"/\u003e\u003c/a\u003e\u003ca href=\"https://coolshell.cn/articles/2428.html\" class=\"wp_rp_title\"\u003e如何管理并设计你的口令\u003c/a\u003e\u003c/li\u003e\u003cli\u003e\u003ca href=\"https://coolshell.cn/articles/2078.html\" class=\"wp_rp_thumbnail\"\u003e\u003cimg src=\"https://coolshell.cn/wp-content/plugins/wordpress-23-related-posts-plugin/static/thumbs/13.jpg\" alt=\"如何防范密码被破解\" width=\"150\" height=\"150\"/\u003e\u003c/a\u003e\u003ca href=\"https://coolshell.cn/articles/2078.html\" class=\"wp_rp_title\"\u003e如何防范密码被破解\u003c/a\u003e\u003c/li\u003e\u003c/ul\u003e\u003c/div\u003e\u003c/div\u003e\n\u003cdiv id=\"post-ratings-5353\" class=\"post-ratings\" itemscope=\"\" itemtype=\"https://schema.org/Article\" data-nonce=\"ddf39a08ab\"\u003e\u003cimg id=\"rating_5353_1\" src=\"https://coolshell.cn/wp-content/plugins/wp-postratings/images/stars_crystal/rating_on.gif\" alt=\"好烂啊\" title=\"好烂啊\" onmouseover=\"if (!window.__cfRLUnblockHandlers) return false; current_rating(5353, 1, \u0026#39;好烂啊\u0026#39;);\" onmouseout=\"if (!window.__cfRLUnblockHandlers) return false; ratings_off(4.4, 5, 0);\" onclick=\"if (!window.__cfRLUnblockHandlers) return false; rate_post();\" onkeypress=\"if (!window.__cfRLUnblockHandlers) return false; rate_post();\" style=\"cursor: pointer; border: 0px;\" data-cf-modified-6c6a33ebbea82fdb3924f94c-=\"\"/\u003e\u003cimg id=\"rating_5353_2\" src=\"https://coolshell.cn/wp-content/plugins/wp-postratings/images/stars_crystal/rating_on.gif\" alt=\"有点差\" title=\"有点差\" onmouseover=\"if (!window.__cfRLUnblockHandlers) return false; current_rating(5353, 2, \u0026#39;有点差\u0026#39;);\" onmouseout=\"if (!window.__cfRLUnblockHandlers) return false; ratings_off(4.4, 5, 0);\" onclick=\"if (!window.__cfRLUnblockHandlers) return false; rate_post();\" onkeypress=\"if (!window.__cfRLUnblockHandlers) return false; rate_post();\" style=\"cursor: pointer; border: 0px;\" data-cf-modified-6c6a33ebbea82fdb3924f94c-=\"\"/\u003e\u003cimg id=\"rating_5353_3\" src=\"https://coolshell.cn/wp-content/plugins/wp-postratings/images/stars_crystal/rating_on.gif\" alt=\"凑合看看\" title=\"凑合看看\" onmouseover=\"if (!window.__cfRLUnblockHandlers) return false; current_rating(5353, 3, \u0026#39;凑合看看\u0026#39;);\" onmouseout=\"if (!window.__cfRLUnblockHandlers) return false; ratings_off(4.4, 5, 0);\" onclick=\"if (!window.__cfRLUnblockHandlers) return false; rate_post();\" onkeypress=\"if (!window.__cfRLUnblockHandlers) return false; rate_post();\" style=\"cursor: pointer; border: 0px;\" data-cf-modified-6c6a33ebbea82fdb3924f94c-=\"\"/\u003e\u003cimg id=\"rating_5353_4\" src=\"https://coolshell.cn/wp-content/plugins/wp-postratings/images/stars_crystal/rating_on.gif\" alt=\"还不错\" title=\"还不错\" onmouseover=\"if (!window.__cfRLUnblockHandlers) return false; current_rating(5353, 4, \u0026#39;还不错\u0026#39;);\" onmouseout=\"if (!window.__cfRLUnblockHandlers) return false; ratings_off(4.4, 5, 0);\" onclick=\"if (!window.__cfRLUnblockHandlers) return false; rate_post();\" onkeypress=\"if (!window.__cfRLUnblockHandlers) return false; rate_post();\" style=\"cursor: pointer; border: 0px;\" data-cf-modified-6c6a33ebbea82fdb3924f94c-=\"\"/\u003e\u003cimg id=\"rating_5353_5\" src=\"https://coolshell.cn/wp-content/plugins/wp-postratings/images/stars_crystal/rating_half.gif\" alt=\"很精彩\" title=\"很精彩\" onmouseover=\"if (!window.__cfRLUnblockHandlers) return false; current_rating(5353, 5, \u0026#39;很精彩\u0026#39;);\" onmouseout=\"if (!window.__cfRLUnblockHandlers) return false; ratings_off(4.4, 5, 0);\" onclick=\"if (!window.__cfRLUnblockHandlers) return false; rate_post();\" onkeypress=\"if (!window.__cfRLUnblockHandlers) return false; rate_post();\" style=\"cursor: pointer; border: 0px;\" data-cf-modified-6c6a33ebbea82fdb3924f94c-=\"\"/\u003e (\u003cstrong\u003e50\u003c/strong\u003e 人打了分，平均分： \u003cstrong\u003e4.36\u003c/strong\u003e )\u003cbr/\u003e\u003cspan class=\"post-ratings-text\" id=\"ratings_5353_text\"\u003e\u003c/span\u003e\u003cmeta itemprop=\"name\" content=\"你会做Web上的用户登录功能吗？\"/\u003e\u003cmeta itemprop=\"headline\" content=\"你会做Web上的用户登录功能吗？\"/\u003e\u003cmeta itemprop=\"description\" content=\"Web上的用户登录功能应该是最基本的功能了，可是在我看过一些站点的用户登录功能后，我觉得很有必要写一篇文章教大家怎么来做用户登录功能。下面的文章告诉大家这个功能可能并没有你所想像的那么简单，这是一个关系到用户安全的功能，希望大家能从下面的文章中能知道什么样的方法才是一个好的用户登录功能。以下内容，转载时请保持原文一致，并请注明作者和出处。\n用户名和口令\n首先，我们先来说说用户名和口令的事。这并...\"/\u003e\u003cmeta itemprop=\"datePublished\" content=\"2011-08-25T08:48:48+08:00\"/\u003e\u003cmeta itemprop=\"dateModified\" content=\"2011-12-21T22:04:51+08:00\"/\u003e\u003cmeta itemprop=\"url\" content=\"https://coolshell.cn/articles/5353.html\"/\u003e\u003cmeta itemprop=\"author\" content=\"陈皓\"/\u003e\u003cmeta itemprop=\"mainEntityOfPage\" content=\"https://coolshell.cn/articles/5353.html\"/\u003e\u003cdiv style=\"display: none;\" itemprop=\"publisher\" itemscope=\"\" itemtype=\"https://schema.org/Organization\"\u003e\u003cmeta itemprop=\"name\" content=\"酷 壳 - CoolShell\"/\u003e\u003cmeta itemprop=\"url\" content=\"https://coolshell.cn\"/\u003e\u003cdiv itemprop=\"logo\" itemscope=\"\" itemtype=\"https://schema.org/ImageObject\"\u003e\u003cmeta itemprop=\"url\" content=\"\"/\u003e\u003c/div\u003e\u003c/div\u003e\u003cdiv style=\"display: none;\" itemprop=\"aggregateRating\" itemscope=\"\" itemtype=\"https://schema.org/AggregateRating\"\u003e\u003cmeta itemprop=\"bestRating\" content=\"5\"/\u003e\u003cmeta itemprop=\"worstRating\" content=\"1\"/\u003e\u003cmeta itemprop=\"ratingValue\" content=\"4.36\"/\u003e\u003cmeta itemprop=\"ratingCount\" content=\"50\"/\u003e\u003c/div\u003e\u003c/div\u003e\u003cdiv id=\"post-ratings-5353-loading\" class=\"post-ratings-loading\"\u003e\u003cimg src=\"https://coolshell.cn/wp-content/plugins/wp-postratings/images/loading.gif\" width=\"16\" height=\"16\" class=\"post-ratings-image\"/\u003eLoading...\u003c/div\u003e\n\u003c/div\u003e",
  "Date": "2011-08-25T08:48:48+08:00",
  "Author": "陈皓"
}