{
  "Source": "coolshell.cn",
  "Title": "Hash Collision DoS 问题",
  "Link": "https://coolshell.cn/articles/6424.html",
  "Content": "\u003cdiv class=\"entry-content\"\u003e\n\u003cp\u003e\u003cscript async=\"\" src=\"https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3415450859608158\" crossorigin=\"anonymous\" type=\"a6f54e5e621c9031a5b3fc98-text/javascript\"\u003e\u003c/script\u003e最近，除了国内明文密码的安全事件，还有一个事是比较大的，那就是 Hash Collision DoS （Hash碰撞的拒绝式服务攻击），有恶意的人会通过这个安全弱点会让你的服务器运行巨慢无比。\u003cstrong\u003e这个安全弱点利用了各语言的Hash算法的“非随机性”可以制造出N多的value不一样，但是key一样数据，然后让你的Hash表成为一张单向链表，而导致你的整个网站或是程序的运行性能以级数下降（可以很轻松的让你的CPU升到100%）\u003c/strong\u003e。目前，这个问题出现于\u003ca href=\"http://www.java.com/\"\u003eJava\u003c/a\u003e, \u003ca href=\"http://jruby.org/\"\u003eJRuby\u003c/a\u003e, \u003ca href=\"http://www.php.net/\"\u003ePHP\u003c/a\u003e, \u003ca href=\"https://python.org/\"\u003ePython\u003c/a\u003e, \u003ca href=\"http://rubini.us/\"\u003eRubinius\u003c/a\u003e, \u003ca href=\"http://www.ruby-lang.org/\"\u003eRuby\u003c/a\u003e这些语言中，主要：\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"http://www.java.com\"\u003eJava\u003c/a\u003e, 所有版本\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"http://jruby.org/\"\u003eJRuby\u003c/a\u003e \u0026lt;= 1.6.5 （目前fix在 1.6.5.1）\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"http://www.php.net/\"\u003ePHP\u003c/a\u003e \u0026lt;= 5.3.8, \u0026lt;= 5.4.0RC3 （目前fix在 5.3.9,  5.4.0RC4）\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://python.org/\"\u003ePython\u003c/a\u003e, all versions\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"http://rubini.us/\"\u003eRubinius\u003c/a\u003e, all versions\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"http://www.ruby-lang.org/\"\u003eRuby\u003c/a\u003e \u0026lt;= 1.8.7-p356 （目前fix在 1.8.7-p357, 1.9.x）\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"http://geronimo.apache.org/\"\u003eApache Geronimo\u003c/a\u003e, 所有版本\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"http://tomcat.apache.org/\"\u003eApache Tomcat\u003c/a\u003e \u0026lt;= 5.5.34, \u0026lt;= 6.0.34, \u0026lt;= 7.0.22 （目前fix在 5.5.35,  6.0.35,  7.0.23）\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"http://glassfish.java.net/\"\u003eOracle Glassfish\u003c/a\u003e \u0026lt;= 3.1.1 （目前fix在mainline）\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"http://www.eclipse.org/jetty/\"\u003eJetty\u003c/a\u003e, 所有版本\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"http://plone.org/\"\u003ePlone\u003c/a\u003e, 所有版本\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"http://rack.rubyforge.org/\"\u003eRack\u003c/a\u003e \u0026lt;= 1.3.5, \u0026lt;= 1.2.4, \u0026lt;= 1.1.2 （目前fix 在 1.4.0, 1.3.6, 1.2.5, 1.1.3）\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://code.google.com/p/v8/\"\u003eV8 JavaScript Engine\u003c/a\u003e, 所有版本\u003c/li\u003e\n\u003cli\u003eASP.NET 没有打MS11-100补丁\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e注意，Perl没有这个问题，因为Perl在N年前就fix了这个问题了。关于这个列表的更新，请参看 \u003ca href=\"http://www.ocert.org/advisories/ocert-2011-003.html\" target=\"_blank\"\u003eoCERT的2011-003报告\u003c/a\u003e，比较坑爹的是，这个问题早在2003 年就在论文《\u003ca href=\"http://www.cs.rice.edu/~scrosby/hash/CrosbyWallach_UsenixSec2003.pdf\" target=\"_blank\"\u003e通过算法复杂性进行拒绝式服务攻击\u003c/a\u003e》中被报告了，但是好像没有引起注意，尤其是Java。\u003c/p\u003e\n\u003ch4\u003e弱点攻击解释\u003c/h4\u003e\n\u003cp\u003e你可以会觉得这个问题没有什么大不了的，因为黑客是看不到hash算法的，如果你这么认为，那么你就错了，这说明对Web编程的了解还不足够底层。\u003c/p\u003e\n\u003cp\u003e\u003cspan id=\"more-6424\"\u003e\u003c/span\u003e\u003c/p\u003e\n\u003cp\u003e无论你用JSP，PHP，Python，Ruby来写后台网页的时候，在处理HTTP POST数据的时候，你的后台程序可以很容易地以访问表单字段名来访问表单值，就像下面这段程序一样：\u003c/p\u003e\n\u003cpre data-enlighter-language=\"php\" class=\"EnlighterJSRAW\"\u003e\n\n$usrname = $_POST[\u0026#39;username\u0026#39;];\n$passwd = $_POST[\u0026#39;password\u0026#39;];\n\n\u003c/pre\u003e\n\u003cp\u003e这是怎么实现的呢？这后面的东西就是Hash Map啊，所以，我可以给你后台提交一个有10K字段的表单，这些字段名都被我精心地设计过，他们全是Hash Collision ，于是你的Web Server或语言处理这个表单的时候，就会建造这个hash map，于是在每插入一个表单字段的时候，都会先遍历一遍你所有已插入的字段，于是你的服务器的CPU一下就100%了，你会觉得这10K没什么，那么我就发很多个的请求，你的服务器一下就不行了。\u003c/p\u003e\n\u003cp\u003e举个例子，你可能更容易理解：\u003c/p\u003e\n\u003cp\u003e如果你有n个值—— v1, v2, v3, … vn，把他们放到hash表中应该是足够散列的，这样性能才高：\u003c/p\u003e\n\u003cblockquote\u003e\u003cp\u003e0 -\u0026gt; v2\u003cbr/\u003e\n1 -\u0026gt; v4\u003cbr/\u003e\n2 -\u0026gt; v1\u003cbr/\u003e\n…\u003cbr/\u003e\n…\u003cbr/\u003e\nn -\u0026gt; v(x)\u003c/p\u003e\u003c/blockquote\u003e\n\u003cp\u003e但是，这个攻击可以让我造出N个值——  dos1, dos2, …., dosn，他们的hash key都是一样的（也就是Hash Collision），导致你的hash表成了下面这个样子：\u003c/p\u003e\n\u003cblockquote\u003e\u003cp\u003e0 – \u0026gt; dos1 -\u0026gt; dos2 -\u0026gt; dos3 -\u0026gt; …. -\u0026gt;dosn\u003cbr/\u003e\n1 -\u0026gt; null\u003cbr/\u003e\n2 -\u0026gt; null\u003cbr/\u003e\n…\u003cbr/\u003e\n…\u003cbr/\u003e\nn -\u0026gt; null\u003c/p\u003e\u003c/blockquote\u003e\n\u003cp\u003e于是，单向链接就这样出现了。这样一来，O(1)的搜索算法复杂度就成了O(n)，而插入N个数据的算法复杂度就成了O(n^2)，你想想这是什么样的性能。\u003c/p\u003e\n\u003cp\u003e（关于Hash表的实现，如果你忘了，那就把大学时的《数据结构》一书拿出来看看）\u003c/p\u003e\n\u003ch4\u003e  Hash Collision DoS 详解\u003c/h4\u003e\n\u003cp\u003eStackOverflow.com是个好网站， 合格的程序员都应该知道这个网站。上去一查，就看到了这个贴子“\u003ca title=\"Application vulnerability due to Non Random Hash Functions\" href=\"http://stackoverflow.com/questions/8669946/application-vulnerability-due-to-non-random-hash-functions\" target=\"_blank\"\u003eApplication vulnerability due to Non Random Hash Functions\u003c/a\u003e”。我把这个贴子里的东西摘一些过来。\u003c/p\u003e\n\u003cp\u003e首先，这些语言使用的Hash算法都是“非随机的”，如下所示，这个是Java和Oracle使用的Hash函数：\u003c/p\u003e\n\u003cpre data-enlighter-language=\"c\" class=\"EnlighterJSRAW\"\u003estatic int hash(int h)\n{\nh ^= (h \u0026gt;\u0026gt;\u0026gt; 20) ^ (h \u0026gt;\u0026gt;\u0026gt; 12);\nreturn h ^ (h \u0026gt;\u0026gt;\u0026gt; 7) ^ (h \u0026gt;\u0026gt;\u0026gt; 4);\n}\u003c/pre\u003e\n\u003cp\u003e所谓“非随机的” Hash算法，就可以猜。比如：\u003c/p\u003e\n\u003cp\u003e1）在Java里， Aa和BB这两个字符串的hash code(或hash key) 是一样的，也就是Collision 。\u003c/p\u003e\n\u003cp\u003e2）于是，我们就可以通过这两个种子生成更多的拥有同一个hash key的字符串。如：”AaAa”, “AaBB”, “BBAa”, “BBBB”。这是第一次迭代。其实就是一个排列组合，写个程序就搞定了。\u003c/p\u003e\n\u003cp\u003e3）然后，我们可以用这4个长度的字符串，构造8个长度的字符串，如下所示：\u003c/p\u003e\n\u003cpre style=\"padding-left: 30px;\"\u003e\u003ccode\u003e\u0026#34;AaAaAaAa\u0026#34;, \u0026#34;AaAaBBBB\u0026#34;, \u0026#34;AaAaAaBB\u0026#34;, \u0026#34;AaAaBBAa\u0026#34;, \n\u0026#34;BBBBAaAa\u0026#34;, \u0026#34;BBBBBBBB\u0026#34;, \u0026#34;BBBBAaBB\u0026#34;, \u0026#34;BBBBBBAa\u0026#34;, \n\u0026#34;AaBBAaAa\u0026#34;, \u0026#34;AaBBBBBB\u0026#34;, \u0026#34;AaBBAaBB\u0026#34;, \u0026#34;AaBBBBAa\u0026#34;, \n\u0026#34;BBAaAaAa\u0026#34;, \u0026#34;BBAaBBBB\u0026#34;, \u0026#34;BBAaAaBB\u0026#34;, \u0026#34;BBAaBBAa\u0026#34;,\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003e\u003ccode\u003e4）同理，我们就可以生成16个长度的，以及256个长度的字符串，总之，很容易生成N多的这样的值。\u003c/code\u003e\u003c/p\u003e\n\u003cp\u003e在攻击时，我只需要把这些数据做成一个HTTP POST 表单，然后写一个无限循环的程序，不停地提交这个表单。你用你的浏览器就可以了。当然，如果做得更精妙一点的话，把你的这个表单做成一个跨站脚本，然后找一些网站的跨站漏洞，放上去，于是能过SNS的力量就可以找到N多个用户来帮你从不同的IP来攻击某服务器。\u003c/p\u003e\n\u003cp\u003e \u003c/p\u003e\n\u003ch4\u003e防守\u003c/h4\u003e\n\u003cp\u003e要防守这样的攻击，有下面几个招：\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e打补丁，把hash算法改了。\u003c/li\u003e\n\u003cli\u003e限制POST的参数个数，限制POST的请求长度。\u003c/li\u003e\n\u003cli\u003e最好还有防火墙检测异常的请求。\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e不过，对于更底层的或是其它形式的攻击，可能就有点麻烦了。\u003c/p\u003e\n\u003cp\u003e（全文完）\u003c/p\u003e\n\u003cdiv style=\"margin-top: 15px; font-size: 16px;color: #cc0000;\"\u003e\n\u003cp align=\"center\"\u003e\u003cstrong\u003e（转载本站文章请注明作者和出处 \u003ca href=\"https://coolshell.cn/\"\u003e酷 壳 – CoolShell\u003c/a\u003e ，请勿用于任何商业用途）\u003c/strong\u003e\u003c/p\u003e\n\u003c/div\u003e\n\u003cdiv class=\"wp_rp_wrap  wp_rp_vertical_m\" id=\"wp_rp_first\"\u003e\u003cdiv class=\"wp_rp_content\"\u003e\u003ch3 class=\"related_post_title\"\u003e相关文章\u003c/h3\u003e\u003cul class=\"related_post wp_rp\"\u003e\u003cli\u003e\u003ca href=\"https://coolshell.cn/articles/9703.html\" class=\"wp_rp_thumbnail\"\u003e\u003cimg src=\"https://coolshell.cn/wp-content/uploads/2013/05/图1-3-150x150.jpg\" alt=\"无锁HashMap的原理与实现\" width=\"150\" height=\"150\"/\u003e\u003c/a\u003e\u003ca href=\"https://coolshell.cn/articles/9703.html\" class=\"wp_rp_title\"\u003e无锁HashMap的原理与实现\u003c/a\u003e\u003c/li\u003e\u003cli\u003e\u003ca href=\"https://coolshell.cn/articles/9606.html\" class=\"wp_rp_thumbnail\"\u003e\u003cimg src=\"https://coolshell.cn/wp-content/uploads/2013/05/race_condition-150x150.jpg\" alt=\"疫苗：Java HashMap的死循环\" width=\"150\" height=\"150\"/\u003e\u003c/a\u003e\u003ca href=\"https://coolshell.cn/articles/9606.html\" class=\"wp_rp_title\"\u003e疫苗：Java HashMap的死循环\u003c/a\u003e\u003c/li\u003e\u003cli\u003e\u003ca href=\"https://coolshell.cn/articles/21708.html\" class=\"wp_rp_thumbnail\"\u003e\u003cimg src=\"https://coolshell.cn/wp-content/uploads/2022/01/iStock-1175502114-150x150.png\" alt=\"网络数字身份认证术\" width=\"150\" height=\"150\"/\u003e\u003c/a\u003e\u003ca href=\"https://coolshell.cn/articles/21708.html\" class=\"wp_rp_title\"\u003e网络数字身份认证术\u003c/a\u003e\u003c/li\u003e\u003cli\u003e\u003ca href=\"https://coolshell.cn/articles/20845.html\" class=\"wp_rp_thumbnail\"\u003e\u003cimg src=\"https://coolshell.cn/wp-content/uploads/2020/03/rust-social-wide-150x150.jpg\" alt=\"Rust语言的编程范式\" width=\"150\" height=\"150\"/\u003e\u003c/a\u003e\u003ca href=\"https://coolshell.cn/articles/20845.html\" class=\"wp_rp_title\"\u003eRust语言的编程范式\u003c/a\u003e\u003c/li\u003e\u003cli\u003e\u003ca href=\"https://coolshell.cn/articles/19395.html\" class=\"wp_rp_thumbnail\"\u003e\u003cimg src=\"https://coolshell.cn/wp-content/uploads/2019/05/Authorization-360x200-1-150x150.png\" alt=\"HTTP API 认证授权术\" width=\"150\" height=\"150\"/\u003e\u003c/a\u003e\u003ca href=\"https://coolshell.cn/articles/19395.html\" class=\"wp_rp_title\"\u003eHTTP API 认证授权术\u003c/a\u003e\u003c/li\u003e\u003cli\u003e\u003ca href=\"https://coolshell.cn/articles/18360.html\" class=\"wp_rp_thumbnail\"\u003e\u003cimg src=\"https://coolshell.cn/wp-content/uploads/2018/05/300x262-150x150.jpg\" alt=\"程序员练级攻略（2018)  与我的专栏\" width=\"150\" height=\"150\"/\u003e\u003c/a\u003e\u003ca href=\"https://coolshell.cn/articles/18360.html\" class=\"wp_rp_title\"\u003e程序员练级攻略（2018) 与我的专栏\u003c/a\u003e\u003c/li\u003e\u003c/ul\u003e\u003c/div\u003e\u003c/div\u003e\n\u003cdiv id=\"post-ratings-6424\" class=\"post-ratings\" itemscope=\"\" itemtype=\"https://schema.org/Article\" data-nonce=\"91f2a1b71e\"\u003e\u003cimg id=\"rating_6424_1\" src=\"https://coolshell.cn/wp-content/plugins/wp-postratings/images/stars_crystal/rating_on.gif\" alt=\"好烂啊\" title=\"好烂啊\" onmouseover=\"if (!window.__cfRLUnblockHandlers) return false; current_rating(6424, 1, \u0026#39;好烂啊\u0026#39;);\" onmouseout=\"if (!window.__cfRLUnblockHandlers) return false; ratings_off(3.9, 4, 0);\" onclick=\"if (!window.__cfRLUnblockHandlers) return false; rate_post();\" onkeypress=\"if (!window.__cfRLUnblockHandlers) return false; rate_post();\" style=\"cursor: pointer; border: 0px;\" data-cf-modified-a6f54e5e621c9031a5b3fc98-=\"\"/\u003e\u003cimg id=\"rating_6424_2\" src=\"https://coolshell.cn/wp-content/plugins/wp-postratings/images/stars_crystal/rating_on.gif\" alt=\"有点差\" title=\"有点差\" onmouseover=\"if (!window.__cfRLUnblockHandlers) return false; current_rating(6424, 2, \u0026#39;有点差\u0026#39;);\" onmouseout=\"if (!window.__cfRLUnblockHandlers) return false; ratings_off(3.9, 4, 0);\" onclick=\"if (!window.__cfRLUnblockHandlers) return false; rate_post();\" onkeypress=\"if (!window.__cfRLUnblockHandlers) return false; rate_post();\" style=\"cursor: pointer; border: 0px;\" data-cf-modified-a6f54e5e621c9031a5b3fc98-=\"\"/\u003e\u003cimg id=\"rating_6424_3\" src=\"https://coolshell.cn/wp-content/plugins/wp-postratings/images/stars_crystal/rating_on.gif\" alt=\"凑合看看\" title=\"凑合看看\" onmouseover=\"if (!window.__cfRLUnblockHandlers) return false; current_rating(6424, 3, \u0026#39;凑合看看\u0026#39;);\" onmouseout=\"if (!window.__cfRLUnblockHandlers) return false; ratings_off(3.9, 4, 0);\" onclick=\"if (!window.__cfRLUnblockHandlers) return false; rate_post();\" onkeypress=\"if (!window.__cfRLUnblockHandlers) return false; rate_post();\" style=\"cursor: pointer; border: 0px;\" data-cf-modified-a6f54e5e621c9031a5b3fc98-=\"\"/\u003e\u003cimg id=\"rating_6424_4\" src=\"https://coolshell.cn/wp-content/plugins/wp-postratings/images/stars_crystal/rating_half.gif\" alt=\"还不错\" title=\"还不错\" onmouseover=\"if (!window.__cfRLUnblockHandlers) return false; current_rating(6424, 4, \u0026#39;还不错\u0026#39;);\" onmouseout=\"if (!window.__cfRLUnblockHandlers) return false; ratings_off(3.9, 4, 0);\" onclick=\"if (!window.__cfRLUnblockHandlers) return false; rate_post();\" onkeypress=\"if (!window.__cfRLUnblockHandlers) return false; rate_post();\" style=\"cursor: pointer; border: 0px;\" data-cf-modified-a6f54e5e621c9031a5b3fc98-=\"\"/\u003e\u003cimg id=\"rating_6424_5\" src=\"https://coolshell.cn/wp-content/plugins/wp-postratings/images/stars_crystal/rating_off.gif\" alt=\"很精彩\" title=\"很精彩\" onmouseover=\"if (!window.__cfRLUnblockHandlers) return false; current_rating(6424, 5, \u0026#39;很精彩\u0026#39;);\" onmouseout=\"if (!window.__cfRLUnblockHandlers) return false; ratings_off(3.9, 4, 0);\" onclick=\"if (!window.__cfRLUnblockHandlers) return false; rate_post();\" onkeypress=\"if (!window.__cfRLUnblockHandlers) return false; rate_post();\" style=\"cursor: pointer; border: 0px;\" data-cf-modified-a6f54e5e621c9031a5b3fc98-=\"\"/\u003e (\u003cstrong\u003e33\u003c/strong\u003e 人打了分，平均分： \u003cstrong\u003e3.85\u003c/strong\u003e )\u003cbr/\u003e\u003cspan class=\"post-ratings-text\" id=\"ratings_6424_text\"\u003e\u003c/span\u003e\u003cmeta itemprop=\"name\" content=\"Hash Collision DoS 问题\"/\u003e\u003cmeta itemprop=\"headline\" content=\"Hash Collision DoS 问题\"/\u003e\u003cmeta itemprop=\"description\" content=\"最近，除了国内明文密码的安全事件，还有一个事是比较大的，那就是 Hash Collision DoS （Hash碰撞的拒绝式服务攻击），有恶意的人会通过这个安全弱点会让你的服务器运行巨慢无比。这个安全弱点利用了各语言的Hash算法的“非随机性”可以制造出N多的value不一样，但是key一样数据，然后让你的Hash表成为一张单向链表，而导致你的整个网站或是程序的运行性能以级数下降（可以很轻松的让你...\"/\u003e\u003cmeta itemprop=\"datePublished\" content=\"2012-01-06T08:36:05+08:00\"/\u003e\u003cmeta itemprop=\"dateModified\" content=\"2012-01-06T00:27:26+08:00\"/\u003e\u003cmeta itemprop=\"url\" content=\"https://coolshell.cn/articles/6424.html\"/\u003e\u003cmeta itemprop=\"author\" content=\"陈皓\"/\u003e\u003cmeta itemprop=\"mainEntityOfPage\" content=\"https://coolshell.cn/articles/6424.html\"/\u003e\u003cdiv style=\"display: none;\" itemprop=\"publisher\" itemscope=\"\" itemtype=\"https://schema.org/Organization\"\u003e\u003cmeta itemprop=\"name\" content=\"酷 壳 - CoolShell\"/\u003e\u003cmeta itemprop=\"url\" content=\"https://coolshell.cn\"/\u003e\u003cdiv itemprop=\"logo\" itemscope=\"\" itemtype=\"https://schema.org/ImageObject\"\u003e\u003cmeta itemprop=\"url\" content=\"\"/\u003e\u003c/div\u003e\u003c/div\u003e\u003cdiv style=\"display: none;\" itemprop=\"aggregateRating\" itemscope=\"\" itemtype=\"https://schema.org/AggregateRating\"\u003e\u003cmeta itemprop=\"bestRating\" content=\"5\"/\u003e\u003cmeta itemprop=\"worstRating\" content=\"1\"/\u003e\u003cmeta itemprop=\"ratingValue\" content=\"3.85\"/\u003e\u003cmeta itemprop=\"ratingCount\" content=\"33\"/\u003e\u003c/div\u003e\u003c/div\u003e\u003cdiv id=\"post-ratings-6424-loading\" class=\"post-ratings-loading\"\u003e\u003cimg src=\"https://coolshell.cn/wp-content/plugins/wp-postratings/images/loading.gif\" width=\"16\" height=\"16\" class=\"post-ratings-image\"/\u003eLoading...\u003c/div\u003e\n\u003c/div\u003e",
  "Date": "2012-01-06T08:36:05+08:00",
  "Author": "陈皓"
}