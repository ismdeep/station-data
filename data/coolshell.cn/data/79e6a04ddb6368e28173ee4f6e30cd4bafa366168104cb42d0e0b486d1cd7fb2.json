{
  "Source": "coolshell.cn",
  "Title": "C++的std::string的“读时也拷贝”技术！",
  "Link": "https://coolshell.cn/articles/1443.html",
  "Content": "\u003cdiv class=\"entry-content\"\u003e\n\u003cp\u003e\u003cscript async=\"\" src=\"https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3415450859608158\" crossorigin=\"anonymous\" type=\"d385b2308155703c059059a8-text/javascript\"\u003e\u003c/script\u003eC++的std::string的读时也拷贝技术！\u003c/p\u003e\n\u003cp\u003e嘿嘿，你没有看错，我也没有写错，是读时也拷贝技术。什么?我的错，你之前听说写过时才拷贝，嗯，不错的确有这门技术，英文是Copy On Write，简写就是COW,非常’牛’！那么我们就来看看这个’牛’技术的效果吧。\u003c/p\u003e\n\u003cp\u003e我们先编写一段程序\u003cbr/\u003e\n\u003cspan id=\"more-1443\"\u003e\u003c/span\u003e\u003c/p\u003e\n\u003cpre data-enlighter-language=\"c\" class=\"EnlighterJSRAW\"\u003e#include \u0026lt;string\u0026gt;\n#include \u0026lt;iostream\u0026gt;\n#include \u0026lt;sys/time.h\u0026gt;\n\nstatic long getcurrenttick()\n{\n    long tick ;\n    struct timeval time_val;\n    gettimeofday(\u0026amp;time_val , NULL);\n    tick = time_val.tv_sec * 1000 + time_val.tv_usec / 1000 ;\n    return tick;\n}\n\n\nint main( )\n{\n    string the_base(1024 * 1024 * 10, \u0026#39;x\u0026#39;);\n    long begin =  getcurrenttick();\n    for( int i = 0 ;i\u0026lt; 100 ;++i ) {\n       string the_copy = the_base ;\n    }\n    fprintf(stdout,\u0026#34;耗时[%d] \\n\u0026#34;,getcurrenttick() - begin );\n}\n\u003c/pre\u003e\n\u003cp\u003e嗯，一个非常大的字符串，有10M字节的x，并且执行了100此拷贝。编译执行它，非常快，在我的虚拟机甚至不要1个毫秒。\u003c/p\u003e\n\u003cp\u003e现在我们来对这个string加点料！\u003c/p\u003e\n\u003cpre class=\"brush:c; highlight:6\"\u003eint main(void) {\n    string the_base(1024 * 1024 * 10, \u0026#39;x\u0026#39;);\n    long begin =  getcurrenttick();\n    for (int i = 0; i \u0026lt; 100; i++) {\n        string the_copy = the_base;\n        the_copy[0] = \u0026#39;y\u0026#39;;\n    }\n    fprintf(stdout,\u0026#34;耗时[%d] \\n\u0026#34;,getcurrenttick() - begin );\n}\n\u003c/pre\u003e\n\u003cp\u003e现在我们再编译并执行这断程序，居然需要4~5秒！哇！非常美妙的写时才拷贝技术，性能和功能的完美统一。\u003c/p\u003e\n\u003cp\u003e我们再来看看另外一种情况！\u003c/p\u003e\n\u003cpre class=\"brush:c\"\u003estring original = \u0026#34;hello\u0026#34;;\nchar \u0026amp; ref = original[0];\nstring clone = original;\nref = \u0026#39;y\u0026#39;;\n\u003c/pre\u003e\n\u003cp\u003e我们生成了一个string，并保留了它首字符的引用，然后复制这个string，修改string中的首字符。因为写操作只是直接的修改了内存中的指定位置，这个string就根本不能感知到有写发生，如果写时才拷贝是不成熟的，那么我们将同时会修改original和clone两个string。那岂不是灾难性的结果？幸好上述问题不会发生。clone的值肯定是没有被修改的。看来COW就是非常的牛！\u003c/p\u003e\n\u003cp\u003e以上都证明了我们的COW技术非常牛！\u003c/p\u003e\n\u003cp\u003e有太阳就有黑暗，这句说是不是有点耳熟？\u003c/p\u003e\n\u003cpre class=\"brush:c; highlight:3\"\u003eint main(void) {\n    string the_base(1024 * 1024 * 10, \u0026#39;x\u0026#39;);\n    fprintf(stdout,\u0026#34;the_base\u0026#39;s first char is [%c]\\n\u0026#34;,the_base[0] );\n    long begin =  getcurrenttick();\n    for (int i = 0; i \u0026lt; 100; i++) {\n        string the_copy = the_base;\n    }\n    fprintf(stdout,\u0026#34;耗时[%d] \\n\u0026#34;,getcurrenttick() - begin );\n}\n\u003c/pre\u003e\n\u003cp\u003e啊，居然也是4~5秒！你可能在想，我只是做了一个读，没有写嘛，这到底是怎么回事？难道还有读时也拷贝的技术！。\u003c/p\u003e\n\u003cp\u003e不错，为了避免了你通过[]操作符获取string内部指针而直接修改字符串的内容，在你使用了the_base[0]后，这个字符串的写时才拷贝技术就失效了。\u003c/p\u003e\n\u003cp\u003eC++标准的确就是这样的，C++标准认为，当你通过迭代器或[]获取到string的内部地址的时候，string并不知道你将是要读还是要写。这是它无法确定，为此，当你获取到内部引用后，为了避免不能捕获你的写操作，它在此时废止了写时才拷贝技术！\u003c/p\u003e\n\u003cp\u003e这样看来我们在使用COW的时候，一定要注意，如果你不需要对string的内部进行修改，那你就千万不要使用通过[]操作符和迭代器去获取字符串的内部地址引用，如果你一定要这么做，那么你就必须要付出代价。当然，string还提供了一些使迭代器和引用失效的方法。比如说push_back，等， 你在使用[]之后再使用迭代器之后，引用就有可能失效了。那么你又回到了COW的世界！比如下面的一个例子\u003c/p\u003e\n\u003cpre class=\"brush:c; highlight:7\"\u003eint main( )\n{\n    struct timeval time_val;\n    string the_base(1024 * 1024 * 10, \u0026#39;x\u0026#39;);\n    long begin = 0 ;\n    fprintf(stdout,\u0026#34;the_base\u0026#39;s first char is [%c]\\n\u0026#34;,the_base[0] );\n    the_base.push_back(\u0026#39;y\u0026#39;);\n    begin = getcurrenttick();\n    for( int i = 0 ;i\u0026lt; 100 ;++i ) {\n        string the_copy = the_base ;\n    }\n    fprintf(stdout,\u0026#34;耗时[%d] \\n\u0026#34;,getcurrenttick() - begin );\n}\n\u003c/pre\u003e\n\u003cp\u003e一切又恢复了正常！如果对[]返回引用进行了操作又会发生情况呢，有兴趣的朋友可以试试！结果非常令人惊讶。\u003c/p\u003e\n\u003cp\u003e另外：上述例子是在linux环境下编译的，使用STL是GNU的STL。windows上我用的是vs2003，但是非常明显vs2003一点都不支持COW。\u003c/p\u003e\n\u003cp\u003e这篇文章出自\u003ca href=\"http://ridiculousfish.com/blog/archives/2009/09/17/i-didnt-order-that-so-why-is-it-on-my-bill-episode-2/\" target=\"_blank\"\u003ehttp://ridiculousfish.com/blog/archives/2009/09/17/i-didnt-order-that-so-why-is-it-on-my-bill-episode-2/\u003c/a\u003e 这里，我使用了它的例子。但是我重新自己组织了内容。\u003c/p\u003e\n\u003cp\u003e编写这篇文章的同时，我还参考了耗子的\u003ca href=\"http://blog.csdn.net/haoel/archive/2004/06/23/24058.aspx\"\u003e《标准C＋＋类string的Copy-On-Write技术》\u003c/a\u003e一文\u003c/p\u003e\n\u003cdiv style=\"margin-top: 15px; font-size: 16px;color: #cc0000;\"\u003e\n\u003cp align=\"center\"\u003e\u003cstrong\u003e（转载本站文章请注明作者和出处 \u003ca href=\"https://coolshell.cn/\"\u003e酷 壳 - CoolShell\u003c/a\u003e ，请勿用于任何商业用途）\u003c/strong\u003e\u003c/p\u003e\n\u003c/div\u003e\n\u003cdiv class=\"wp_rp_wrap  wp_rp_vertical_m\" id=\"wp_rp_first\"\u003e\u003cdiv class=\"wp_rp_content\"\u003e\u003ch3 class=\"related_post_title\"\u003e相关文章\u003c/h3\u003e\u003cul class=\"related_post wp_rp\"\u003e\u003cli\u003e\u003ca href=\"https://coolshell.cn/articles/20845.html\" class=\"wp_rp_thumbnail\"\u003e\u003cimg src=\"https://coolshell.cn/wp-content/uploads/2020/03/rust-social-wide-150x150.jpg\" alt=\"Rust语言的编程范式\" width=\"150\" height=\"150\"/\u003e\u003c/a\u003e\u003ca href=\"https://coolshell.cn/articles/20845.html\" class=\"wp_rp_title\"\u003eRust语言的编程范式\u003c/a\u003e\u003c/li\u003e\u003cli\u003e\u003ca href=\"https://coolshell.cn/articles/18360.html\" class=\"wp_rp_thumbnail\"\u003e\u003cimg src=\"https://coolshell.cn/wp-content/uploads/2018/05/300x262-150x150.jpg\" alt=\"程序员练级攻略（2018)  与我的专栏\" width=\"150\" height=\"150\"/\u003e\u003c/a\u003e\u003ca href=\"https://coolshell.cn/articles/18360.html\" class=\"wp_rp_title\"\u003e程序员练级攻略（2018) 与我的专栏\u003c/a\u003e\u003c/li\u003e\u003cli\u003e\u003ca href=\"https://coolshell.cn/articles/18024.html\" class=\"wp_rp_thumbnail\"\u003e\u003cimg src=\"https://coolshell.cn/wp-content/uploads/2017/07/api-design-300x278-2-150x150.jpg\" alt=\"API设计原则 – Qt官网的设计实践总结\" width=\"150\" height=\"150\"/\u003e\u003c/a\u003e\u003ca href=\"https://coolshell.cn/articles/18024.html\" class=\"wp_rp_title\"\u003eAPI设计原则 – Qt官网的设计实践总结\u003c/a\u003e\u003c/li\u003e\u003cli\u003e\u003ca href=\"https://coolshell.cn/articles/12052.html\" class=\"wp_rp_thumbnail\"\u003e\u003cimg src=\"https://coolshell.cn/wp-content/plugins/wordpress-23-related-posts-plugin/static/thumbs/29.jpg\" alt=\"Leetcode 编程训练\" width=\"150\" height=\"150\"/\u003e\u003c/a\u003e\u003ca href=\"https://coolshell.cn/articles/12052.html\" class=\"wp_rp_title\"\u003eLeetcode 编程训练\u003c/a\u003e\u003c/li\u003e\u003cli\u003e\u003ca href=\"https://coolshell.cn/articles/12012.html\" class=\"wp_rp_thumbnail\"\u003e\u003cimg src=\"https://coolshell.cn/wp-content/uploads/2014/10/edsm-150x150.gif\" alt=\"State Threads 回调终结者\" width=\"150\" height=\"150\"/\u003e\u003c/a\u003e\u003ca href=\"https://coolshell.cn/articles/12012.html\" class=\"wp_rp_title\"\u003eState Threads 回调终结者\u003c/a\u003e\u003c/li\u003e\u003cli\u003e\u003ca href=\"https://coolshell.cn/articles/11466.html\" class=\"wp_rp_thumbnail\"\u003e\u003cimg src=\"https://coolshell.cn/wp-content/uploads/2014/04/c99-150x150.jpg\" alt=\"C语言的整型溢出问题\" width=\"150\" height=\"150\"/\u003e\u003c/a\u003e\u003ca href=\"https://coolshell.cn/articles/11466.html\" class=\"wp_rp_title\"\u003eC语言的整型溢出问题\u003c/a\u003e\u003c/li\u003e\u003c/ul\u003e\u003c/div\u003e\u003c/div\u003e\n\u003cdiv id=\"post-ratings-1443\" class=\"post-ratings\" itemscope=\"\" itemtype=\"https://schema.org/Article\" data-nonce=\"df54416ff1\"\u003e\u003cimg id=\"rating_1443_1\" src=\"https://coolshell.cn/wp-content/plugins/wp-postratings/images/stars_crystal/rating_on.gif\" alt=\"好烂啊\" title=\"好烂啊\" onmouseover=\"if (!window.__cfRLUnblockHandlers) return false; current_rating(1443, 1, \u0026#39;好烂啊\u0026#39;);\" onmouseout=\"if (!window.__cfRLUnblockHandlers) return false; ratings_off(3.6, 4, 0);\" onclick=\"if (!window.__cfRLUnblockHandlers) return false; rate_post();\" onkeypress=\"if (!window.__cfRLUnblockHandlers) return false; rate_post();\" style=\"cursor: pointer; border: 0px;\" data-cf-modified-d385b2308155703c059059a8-=\"\"/\u003e\u003cimg id=\"rating_1443_2\" src=\"https://coolshell.cn/wp-content/plugins/wp-postratings/images/stars_crystal/rating_on.gif\" alt=\"有点差\" title=\"有点差\" onmouseover=\"if (!window.__cfRLUnblockHandlers) return false; current_rating(1443, 2, \u0026#39;有点差\u0026#39;);\" onmouseout=\"if (!window.__cfRLUnblockHandlers) return false; ratings_off(3.6, 4, 0);\" onclick=\"if (!window.__cfRLUnblockHandlers) return false; rate_post();\" onkeypress=\"if (!window.__cfRLUnblockHandlers) return false; rate_post();\" style=\"cursor: pointer; border: 0px;\" data-cf-modified-d385b2308155703c059059a8-=\"\"/\u003e\u003cimg id=\"rating_1443_3\" src=\"https://coolshell.cn/wp-content/plugins/wp-postratings/images/stars_crystal/rating_on.gif\" alt=\"凑合看看\" title=\"凑合看看\" onmouseover=\"if (!window.__cfRLUnblockHandlers) return false; current_rating(1443, 3, \u0026#39;凑合看看\u0026#39;);\" onmouseout=\"if (!window.__cfRLUnblockHandlers) return false; ratings_off(3.6, 4, 0);\" onclick=\"if (!window.__cfRLUnblockHandlers) return false; rate_post();\" onkeypress=\"if (!window.__cfRLUnblockHandlers) return false; rate_post();\" style=\"cursor: pointer; border: 0px;\" data-cf-modified-d385b2308155703c059059a8-=\"\"/\u003e\u003cimg id=\"rating_1443_4\" src=\"https://coolshell.cn/wp-content/plugins/wp-postratings/images/stars_crystal/rating_half.gif\" alt=\"还不错\" title=\"还不错\" onmouseover=\"if (!window.__cfRLUnblockHandlers) return false; current_rating(1443, 4, \u0026#39;还不错\u0026#39;);\" onmouseout=\"if (!window.__cfRLUnblockHandlers) return false; ratings_off(3.6, 4, 0);\" onclick=\"if (!window.__cfRLUnblockHandlers) return false; rate_post();\" onkeypress=\"if (!window.__cfRLUnblockHandlers) return false; rate_post();\" style=\"cursor: pointer; border: 0px;\" data-cf-modified-d385b2308155703c059059a8-=\"\"/\u003e\u003cimg id=\"rating_1443_5\" src=\"https://coolshell.cn/wp-content/plugins/wp-postratings/images/stars_crystal/rating_off.gif\" alt=\"很精彩\" title=\"很精彩\" onmouseover=\"if (!window.__cfRLUnblockHandlers) return false; current_rating(1443, 5, \u0026#39;很精彩\u0026#39;);\" onmouseout=\"if (!window.__cfRLUnblockHandlers) return false; ratings_off(3.6, 4, 0);\" onclick=\"if (!window.__cfRLUnblockHandlers) return false; rate_post();\" onkeypress=\"if (!window.__cfRLUnblockHandlers) return false; rate_post();\" style=\"cursor: pointer; border: 0px;\" data-cf-modified-d385b2308155703c059059a8-=\"\"/\u003e (\u003cstrong\u003e15\u003c/strong\u003e 人打了分，平均分： \u003cstrong\u003e3.60\u003c/strong\u003e )\u003cbr/\u003e\u003cspan class=\"post-ratings-text\" id=\"ratings_1443_text\"\u003e\u003c/span\u003e\u003cmeta itemprop=\"name\" content=\"C++的std::string的“读时也拷贝”技术！\"/\u003e\u003cmeta itemprop=\"headline\" content=\"C++的std::string的“读时也拷贝”技术！\"/\u003e\u003cmeta itemprop=\"description\" content=\"C++的std::string的读时也拷贝技术！\n\n\n嘿嘿，你没有看错，我也没有写错，是读时也拷贝技术。什么?我的错，你之前听说写过时才拷贝，嗯，不错的确有这门技术，英文是Copy On Write，简写就是COW,非常\u0026#39;牛\u0026#39;！那么我们就来看看这个\u0026#39;牛\u0026#39;技术的效果吧。\n\n我们先编写一段程序\n\n[c]\n#include \u0026lt;string\u0026gt;\n#include \u0026lt;iostream\u0026gt;\n#...\"/\u003e\u003cmeta itemprop=\"datePublished\" content=\"2009-09-19T21:19:33+08:00\"/\u003e\u003cmeta itemprop=\"dateModified\" content=\"2009-09-20T00:58:25+08:00\"/\u003e\u003cmeta itemprop=\"url\" content=\"https://coolshell.cn/articles/1443.html\"/\u003e\u003cmeta itemprop=\"author\" content=\"Neo\"/\u003e\u003cmeta itemprop=\"mainEntityOfPage\" content=\"https://coolshell.cn/articles/1443.html\"/\u003e\u003cdiv style=\"display: none;\" itemprop=\"publisher\" itemscope=\"\" itemtype=\"https://schema.org/Organization\"\u003e\u003cmeta itemprop=\"name\" content=\"酷 壳 - CoolShell\"/\u003e\u003cmeta itemprop=\"url\" content=\"https://coolshell.cn\"/\u003e\u003cdiv itemprop=\"logo\" itemscope=\"\" itemtype=\"https://schema.org/ImageObject\"\u003e\u003cmeta itemprop=\"url\" content=\"\"/\u003e\u003c/div\u003e\u003c/div\u003e\u003cdiv style=\"display: none;\" itemprop=\"aggregateRating\" itemscope=\"\" itemtype=\"https://schema.org/AggregateRating\"\u003e\u003cmeta itemprop=\"bestRating\" content=\"5\"/\u003e\u003cmeta itemprop=\"worstRating\" content=\"1\"/\u003e\u003cmeta itemprop=\"ratingValue\" content=\"3.6\"/\u003e\u003cmeta itemprop=\"ratingCount\" content=\"15\"/\u003e\u003c/div\u003e\u003c/div\u003e\u003cdiv id=\"post-ratings-1443-loading\" class=\"post-ratings-loading\"\u003e\u003cimg src=\"https://coolshell.cn/wp-content/plugins/wp-postratings/images/loading.gif\" width=\"16\" height=\"16\" class=\"post-ratings-image\"/\u003eLoading...\u003c/div\u003e\n\u003c/div\u003e",
  "Date": "2009-09-19T21:19:33+08:00",
  "Author": "Neo"
}