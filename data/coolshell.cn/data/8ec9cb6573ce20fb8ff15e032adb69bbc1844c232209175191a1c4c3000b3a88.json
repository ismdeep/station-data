{
  "Source": "coolshell.cn",
  "Title": "K-Means 算法",
  "Link": "https://coolshell.cn/articles/7779.html",
  "Content": "\u003cdiv class=\"entry-content\"\u003e\n\u003cp\u003e\u003cscript async=\"\" src=\"https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3415450859608158\" crossorigin=\"anonymous\" type=\"048c52f0e99970ed9ac3270b-text/javascript\"\u003e\u003c/script\u003e最近在学习一些数据挖掘的算法，看到了这个算法，也许这个算法对你来说很简单，但对我来说，我是一个初学者，我在网上翻看了很多资料，发现中文社区没有把这个问题讲得很全面很清楚的文章，所以，把我的学习笔记记录下来，分享给大家。\u003c/p\u003e\n\u003cp\u003e在数据挖掘中， \u003cstrong\u003e\u003cem\u003ek\u003c/em\u003e-Means 算法\u003c/strong\u003e是一种 \u003ca title=\"Cluster analysis\" href=\"https://en.wikipedia.org/wiki/Cluster_analysis\"\u003ecluster analysis\u003c/a\u003e 的算法，其主要是来计算数据聚集的算法，主要通过不断地取离种子点最近均值的算法。\u003c/p\u003e\n\u003cdiv id=\"ez-toc-container\" class=\"ez-toc-v2_0_48 counter-hierarchy ez-toc-counter ez-toc-grey ez-toc-container-direction\"\u003e\n\u003cdiv class=\"ez-toc-title-container\"\u003e\n\u003cp class=\"ez-toc-title\"\u003e目录\u003c/p\u003e\n\u003cspan class=\"ez-toc-title-toggle\"\u003e\u003c/span\u003e\u003c/div\u003e\n\u003cnav\u003e\u003cul class=\"ez-toc-list ez-toc-list-level-1 \"\u003e\u003cli class=\"ez-toc-page-1 ez-toc-heading-level-4\"\u003e\u003ca class=\"ez-toc-link ez-toc-heading-1\" href=\"#%E9%97%AE%E9%A2%98\" title=\"问题\"\u003e问题\u003c/a\u003e\u003c/li\u003e\u003cli class=\"ez-toc-page-1 ez-toc-heading-level-4\"\u003e\u003ca class=\"ez-toc-link ez-toc-heading-2\" href=\"#%E7%AE%97%E6%B3%95%E6%A6%82%E8%A6%81\" title=\"算法概要\"\u003e算法概要\u003c/a\u003e\u003c/li\u003e\u003cli class=\"ez-toc-page-1 ez-toc-heading-level-4\"\u003e\u003ca class=\"ez-toc-link ez-toc-heading-3\" href=\"#%E6%B1%82%E7%82%B9%E7%BE%A4%E4%B8%AD%E5%BF%83%E7%9A%84%E7%AE%97%E6%B3%95\" title=\"求点群中心的算法\"\u003e求点群中心的算法\u003c/a\u003e\u003c/li\u003e\u003cli class=\"ez-toc-page-1 ez-toc-heading-level-4\"\u003e\u003ca class=\"ez-toc-link ez-toc-heading-4\" href=\"#K-Means%E7%9A%84%E6%BC%94%E7%A4%BA\" title=\"K-Means的演示\"\u003eK-Means的演示\u003c/a\u003e\u003c/li\u003e\u003cli class=\"ez-toc-page-1 ez-toc-heading-level-4\"\u003e\u003ca class=\"ez-toc-link ez-toc-heading-5\" href=\"#K-Means_%E7%AE%97%E6%B3%95\" title=\"K-Means ++ 算法\"\u003eK-Means ++ 算法\u003c/a\u003e\u003c/li\u003e\u003cli class=\"ez-toc-page-1 ez-toc-heading-level-4\"\u003e\u003ca class=\"ez-toc-link ez-toc-heading-6\" href=\"#K-Means_%E7%AE%97%E6%B3%95%E5%BA%94%E7%94%A8\" title=\"K-Means 算法应用\"\u003eK-Means 算法应用\u003c/a\u003e\u003c/li\u003e\u003c/ul\u003e\u003c/nav\u003e\u003c/div\u003e\n\u003ch4\u003e\u003cspan class=\"ez-toc-section\" id=\"%E9%97%AE%E9%A2%98\"\u003e\u003c/span\u003e问题\u003cspan class=\"ez-toc-section-end\"\u003e\u003c/span\u003e\u003c/h4\u003e\n\u003cp\u003eK-Means算法主要解决的问题如下图所示。我们可以看到，在图的左边有一些点，我们用肉眼可以看出来有四个点群，但是我们怎么通过计算机程序找出这几个点群来呢？于是就出现了我们的K-Means算法（\u003ca title=\"K-means Clustering 算法\" href=\"https://en.wikipedia.org/wiki/K-means_clustering\" target=\"_blank\"\u003eWikipedia链接\u003c/a\u003e）\u003c/p\u003e\n\u003cfigure id=\"attachment_7780\" aria-describedby=\"caption-attachment-7780\" style=\"width: 600px\" class=\"wp-caption aligncenter\"\u003e\u003cimg decoding=\"async\" class=\"size-full wp-image-7780\" title=\"K-Means 要解决的问题\" src=\"https://coolshell.cn/wp-content/uploads/2012/06/K-Means.gif\" alt=\"\" width=\"600\" height=\"300\"/\u003e\u003cfigcaption id=\"caption-attachment-7780\" class=\"wp-caption-text\"\u003eK-Means 要解决的问题\u003c/figcaption\u003e\u003c/figure\u003e\n\u003ch4\u003e\u003cspan class=\"ez-toc-section\" id=\"%E7%AE%97%E6%B3%95%E6%A6%82%E8%A6%81\"\u003e\u003c/span\u003e算法概要\u003cspan class=\"ez-toc-section-end\"\u003e\u003c/span\u003e\u003c/h4\u003e\n\u003cp\u003e这个算法其实很简单，如下图所示：\u003c/p\u003e\n\u003cp\u003e\u003cspan id=\"more-7779\"\u003e\u003c/span\u003e\u003c/p\u003e\n\u003cfigure id=\"attachment_7781\" aria-describedby=\"caption-attachment-7781\" style=\"width: 504px\" class=\"wp-caption aligncenter\"\u003e\u003cimg decoding=\"async\" loading=\"lazy\" class=\"size-full wp-image-7781\" title=\"K-Means 算法概要\" src=\"https://coolshell.cn/wp-content/uploads/2012/06/K-Means.jpg\" alt=\"K-Means 算法概要\" width=\"504\" height=\"370\" srcset=\"https://coolshell.cn/wp-content/uploads/2012/06/K-Means.jpg 504w, https://coolshell.cn/wp-content/uploads/2012/06/K-Means-300x220.jpg 300w\" sizes=\"(max-width: 504px) 100vw, 504px\"/\u003e\u003cfigcaption id=\"caption-attachment-7781\" class=\"wp-caption-text\"\u003eK-Means 算法概要\u003c/figcaption\u003e\u003c/figure\u003e\n\u003cp\u003e从上图中，我们可以看到，\u003cstrong\u003eA, B, C, D, E 是五个在图中点。而灰色的点是我们的种子点，也就是我们用来找点群的点\u003c/strong\u003e。有两个种子点，所以K=2。\u003c/p\u003e\n\u003cp\u003e然后，K-Means的算法如下：\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003e随机在图中取K（这里K=2）个种子点。\u003c/li\u003e\n\u003cli\u003e然后对图中的所有点求到这K个种子点的距离，假如点Pi离种子点Si最近，那么Pi属于Si点群。（上图中，我们可以看到A,B属于上面的种子点，C,D,E属于下面中部的种子点）\u003c/li\u003e\n\u003cli\u003e接下来，我们要移动种子点到属于他的“点群”的中心。（见图上的第三步）\u003c/li\u003e\n\u003cli\u003e然后重复第2）和第3）步，直到，种子点没有移动（我们可以看到图中的第四步上面的种子点聚合了A,B,C，下面的种子点聚合了D，E）。\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003e这个算法很简单，但是有些细节我要提一下，求距离的公式我不说了，大家有初中毕业水平的人都应该知道怎么算的。我重点想说一下“求点群中心的算法”\u003c/p\u003e\n\u003ch4\u003e\u003cspan class=\"ez-toc-section\" id=\"%E6%B1%82%E7%82%B9%E7%BE%A4%E4%B8%AD%E5%BF%83%E7%9A%84%E7%AE%97%E6%B3%95\"\u003e\u003c/span\u003e求点群中心的算法\u003cspan class=\"ez-toc-section-end\"\u003e\u003c/span\u003e\u003c/h4\u003e\n\u003cp\u003e一般来说，求点群中心点的算法你可以很简的使用各个点的X/Y坐标的平均值。不过，我这里想告诉大家另三个求中心点的的公式：\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003e1）Minkowski Distance 公式 ——\u003c/strong\u003e λ 可以随意取值，可以是负数，也可以是正数，或是无穷大。\u003c/p\u003e\n\u003cp\u003e\u003cimg decoding=\"async\" loading=\"lazy\" class=\"aligncenter size-full wp-image-7787\" title=\"Minkowski Distance 公式\" src=\"https://coolshell.cn/wp-content/uploads/2012/06/MinkowskiDistance_clip_image102.gif\" alt=\"\" width=\"131\" height=\"51\"/\u003e\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003e2）Euclidean Distance 公式 \u003c/strong\u003e—— 也就是第一个公式 λ=2 的情况\u003c/p\u003e\n\u003cp\u003e\u003cimg decoding=\"async\" loading=\"lazy\" class=\"aligncenter size-full wp-image-7784\" title=\"Euclidean Distance 公式\" src=\"https://coolshell.cn/wp-content/uploads/2012/06/EuclideanDistance_clip_image002.gif\" alt=\"\" width=\"137\" height=\"51\"/\u003e\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003e3）CityBlock Distance 公式 \u003c/strong\u003e—— 也就是第一个公式 λ=1 的情况\u003c/p\u003e\n\u003cp\u003e\u003cimg decoding=\"async\" loading=\"lazy\" class=\"aligncenter size-full wp-image-7782\" title=\"CityBlock Distance 公式\" src=\"https://coolshell.cn/wp-content/uploads/2012/06/CityBlockDistance_clip_image002.gif\" alt=\"\" width=\"111\" height=\"45\"/\u003e\u003c/p\u003e\n\u003cp\u003e这三个公式的求中心点有一些不一样的地方，我们看下图（对于第一个 λ 在 0-1之间）。\u003c/p\u003e\n\u003cp style=\"text-align: center;\"\u003e\u003cimg decoding=\"async\" loading=\"lazy\" title=\"Minkowski Mean\" src=\"https://coolshell.cn/wp-content/uploads/2012/06/Minkowski-Mean.jpg\" alt=\"\" width=\"180\" height=\"180\"/\u003e   \u003cimg decoding=\"async\" loading=\"lazy\" title=\"Euclidean distance\" src=\"https://coolshell.cn/wp-content/uploads/2012/06/Euclidean-distance.jpg\" alt=\"\" width=\"180\" height=\"180\"/\u003e  \u003cimg decoding=\"async\" loading=\"lazy\" title=\"Manhattan distance\" src=\"https://coolshell.cn/wp-content/uploads/2012/06/Manhattan-distance.jpg\" alt=\"\" width=\"180\" height=\"180\"/\u003e\u003c/p\u003e\n\u003cp style=\"text-align: center;\"\u003e\u003cstrong\u003e（1）Minkowski Distance     （2）\u003cstrong\u003eEuclidean Distance    （3） \u003cstrong\u003eCityBlock Distance\u003c/strong\u003e\u003c/strong\u003e\u003c/strong\u003e\u003c/p\u003e\n\u003cp style=\"text-align: left;\"\u003e上面这几个图的大意是他们是怎么个逼近中心的，第一个图以星形的方式，第二个图以同心圆的方式，第三个图以菱形的方式。\u003c/p\u003e\n\u003ch4 style=\"text-align: left;\"\u003e\u003cspan class=\"ez-toc-section\" id=\"K-Means%E7%9A%84%E6%BC%94%E7%A4%BA\"\u003e\u003c/span\u003eK-Means的演示\u003cspan class=\"ez-toc-section-end\"\u003e\u003c/span\u003e\u003c/h4\u003e\n\u003cp style=\"text-align: left;\"\u003e如果你以”\u003ca href=\"https://www.google.com/search?hl=zh-CN\u0026amp;q=K+Means+Demo\" target=\"_blank\"\u003eK Means Demo\u003c/a\u003e“为关键字到Google里查你可以查到很多演示。这里推荐一个演示\u003c/p\u003e\n\u003cp style=\"text-align: center;\"\u003e\u003ca href=\"http://home.dei.polimi.it/matteucc/Clustering/tutorial_html/AppletKM.html\"\u003ehttp://home.dei.polimi.it/matteucc/Clustering/tutorial_html/AppletKM.html\u003c/a\u003e\u003c/p\u003e\n\u003cp style=\"text-align: left;\"\u003e操作是，鼠标左键是初始化点，右键初始化“种子点”，然后勾选“Show History”可以看到一步一步的迭代。\u003c/p\u003e\n\u003cp style=\"text-align: left;\"\u003e注：这个演示的链接也有一个不错的 \u003ca href=\"http://home.dei.polimi.it/matteucc/Clustering/tutorial_html/index.html\" target=\"_blank\"\u003eK Means Tutorial\u003c/a\u003e 。\u003c/p\u003e\n\u003ch4 style=\"text-align: left;\"\u003e\u003cspan class=\"ez-toc-section\" id=\"K-Means_%E7%AE%97%E6%B3%95\"\u003e\u003c/span\u003eK-Means ++ 算法\u003cspan class=\"ez-toc-section-end\"\u003e\u003c/span\u003e\u003c/h4\u003e\n\u003cp\u003eK-Means主要有两个最重大的缺陷——都和初始值有关：\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e K 是事先给定的，这个 K 值的选定是非常难以估计的。很多时候，事先并不知道给定的数据集应该分成多少个类别才最合适。（ \u003ca href=\"https://en.wikipedia.org/wiki/Multispectral_pattern_recognition\" target=\"_blank\"\u003eISODATA 算法\u003c/a\u003e通过类的自动合并和分裂，得到较为合理的类型数目 K）\u003c/li\u003e\n\u003c/ul\u003e\n\u003cul\u003e\n\u003cli\u003eK-Means算法需要用初始随机种子点来搞，这个随机种子点太重要，不同的随机种子点会有得到完全不同的结果。（\u003ca href=\"https://en.wikipedia.org/wiki/K-means%2B%2B\" target=\"_blank\"\u003eK-Means++算法\u003c/a\u003e可以用来解决这个问题，其可以有效地选择初始点）\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e我在这里重点说一下 K-Means++算法步骤：\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003e先从我们的数据库随机挑个随机点当“种子点”。\u003c/li\u003e\n\u003cli\u003e对于每个点，我们都计算其和最近的一个“种子点”的距离D(\u003cvar\u003ex\u003c/var\u003e)并保存在一个数组里，然后把这些距离加起来得到Sum(D(\u003cvar\u003ex\u003c/var\u003e))。\u003c/li\u003e\n\u003cli\u003e然后，再取一个随机值，用权重的方式来取计算下一个“种子点”。这个算法的实现是，先取一个能落在Sum(D(\u003cvar\u003ex\u003c/var\u003e))中的随机值Random，然后用Random -= D(\u003cvar\u003ex\u003c/var\u003e)，直到其\u0026lt;=0，此时的点就是下一个“种子点”。\u003c/li\u003e\n\u003cli\u003e重复第（2）和第（3）步直到所有的K个种子点都被选出来。\u003c/li\u003e\n\u003cli\u003e进行K-Means算法。\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003e相关的代码你可以在这里找到“\u003ca href=\"http://rosettacode.org/wiki/K-means%2B%2B_clustering\" target=\"_blank\"\u003eimplement the K-means++ algorithm\u003c/a\u003e”(墙) 另，\u003ca href=\"http://commons.apache.org/math/api-2.1/index.html?org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.html\" rel=\"nofollow\" target=\"_blank\"\u003eApache 的通用数据学库也实现了这一算法\u003c/a\u003e\u003c/p\u003e\n\u003ch4\u003e\u003cspan class=\"ez-toc-section\" id=\"K-Means_%E7%AE%97%E6%B3%95%E5%BA%94%E7%94%A8\"\u003e\u003c/span\u003eK-Means 算法应用\u003cspan class=\"ez-toc-section-end\"\u003e\u003c/span\u003e\u003c/h4\u003e\n\u003cp\u003e看到这里，你会说，K-Means算法看来很简单，而且好像就是在玩坐标点，没什么真实用处。而且，这个算法缺陷很多，还不如人工呢。是的，前面的例子只是玩二维坐标点，的确没什么意思。但是你想一下下面的几个问题：\u003c/p\u003e\n\u003cp style=\"padding-left: 30px;\"\u003e1）如果不是二维的，是多维的，如5维的，那么，就只能用计算机来计算了。\u003c/p\u003e\n\u003cp style=\"padding-left: 30px;\"\u003e2）二维坐标点的X, Y 坐标，其实是一种向量，是一种数学抽象。现实世界中很多属性是可以抽象成向量的，比如，我们的年龄，我们的喜好，我们的商品，等等，能抽象成向量的目的就是可以让计算机知道某两个属性间的距离。如：我们认为，18岁的人离24岁的人的距离要比离12岁的距离要近，鞋子这个商品离衣服这个商品的距离要比电脑要近，等等。\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003e只要能把现实世界的物体的属性抽象成向量，就可以用K-Means算法来归类了\u003c/strong\u003e。\u003c/p\u003e\n\u003cp\u003e在 《\u003ca id=\"ctl01_lnkTitle\" href=\"http://www.cnblogs.com/leoo2sk/archive/2010/09/20/k-means.html\"\u003ek均值聚类(K-means)\u003c/a\u003e》 这篇文章中举了一个很不错的应用例子，作者用亚洲15支足球队的2005年到1010年的战绩做了一个向量表，然后用K-Means把球队归类，得出了下面的结果，呵呵。\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e亚洲一流：日本，韩国，伊朗，沙特\u003c/li\u003e\n\u003cli\u003e亚洲二流：乌兹别克斯坦，巴林，朝鲜\u003c/li\u003e\n\u003cli\u003e亚洲三流：中国，伊拉克，卡塔尔，阿联酋，泰国，越南，阿曼，印尼\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e其实，这样的业务例子还有很多，比如，分析一个公司的客户分类，这样可以对不同的客户使用不同的商业策略，或是电子商务中分析商品相似度，归类商品，从而可以使用一些不同的销售策略，等等。\u003c/p\u003e\n\u003cp\u003e最后给一个挺好的算法的幻灯片：\u003ca href=\"http://www.cs.cmu.edu/~guestrin/Class/10701-S07/Slides/clustering.pdf\"\u003ehttp://www.cs.cmu.edu/~guestrin/Class/10701-S07/Slides/clustering.pdf\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003e（全文完）\u003c/p\u003e\n\u003cdiv style=\"margin-top: 15px; font-size: 16px;color: #cc0000;\"\u003e\n\u003cp align=\"center\"\u003e\u003cstrong\u003e（转载本站文章请注明作者和出处 \u003ca href=\"https://coolshell.cn/\"\u003e酷 壳 – CoolShell\u003c/a\u003e ，请勿用于任何商业用途）\u003c/strong\u003e\u003c/p\u003e\n\u003c/div\u003e\n\u003cdiv class=\"wp_rp_wrap  wp_rp_vertical_m\" id=\"wp_rp_first\"\u003e\u003cdiv class=\"wp_rp_content\"\u003e\u003ch3 class=\"related_post_title\"\u003e相关文章\u003c/h3\u003e\u003cul class=\"related_post wp_rp\"\u003e\u003cli\u003e\u003ca href=\"https://coolshell.cn/articles/8052.html\" class=\"wp_rp_thumbnail\"\u003e\u003cimg src=\"https://coolshell.cn/wp-content/uploads/2012/08/220px-KnnClassification.svg_-150x150.png\" alt=\"K Nearest Neighbor 算法\" width=\"150\" height=\"150\"/\u003e\u003c/a\u003e\u003ca href=\"https://coolshell.cn/articles/8052.html\" class=\"wp_rp_title\"\u003eK Nearest Neighbor 算法\u003c/a\u003e\u003c/li\u003e\u003cli\u003e\u003ca href=\"https://coolshell.cn/articles/17225.html\" class=\"wp_rp_thumbnail\"\u003e\u003cimg src=\"https://coolshell.cn/wp-content/uploads/2015/08/cuckoo-150x150.jpg\" alt=\"Cuckoo Filter：设计与实现\" width=\"150\" height=\"150\"/\u003e\u003c/a\u003e\u003ca href=\"https://coolshell.cn/articles/17225.html\" class=\"wp_rp_title\"\u003eCuckoo Filter：设计与实现\u003c/a\u003e\u003c/li\u003e\u003cli\u003e\u003ca href=\"https://coolshell.cn/articles/12052.html\" class=\"wp_rp_thumbnail\"\u003e\u003cimg src=\"https://coolshell.cn/wp-content/plugins/wordpress-23-related-posts-plugin/static/thumbs/29.jpg\" alt=\"Leetcode 编程训练\" width=\"150\" height=\"150\"/\u003e\u003c/a\u003e\u003ca href=\"https://coolshell.cn/articles/12052.html\" class=\"wp_rp_title\"\u003eLeetcode 编程训练\u003c/a\u003e\u003c/li\u003e\u003cli\u003e\u003ca href=\"https://coolshell.cn/articles/11847.html\" class=\"wp_rp_thumbnail\"\u003e\u003cimg src=\"https://coolshell.cn/wp-content/uploads/2014/08/puzzle-150x150.png\" alt=\"谜题的答案和活动的心得体会\" width=\"150\" height=\"150\"/\u003e\u003c/a\u003e\u003ca href=\"https://coolshell.cn/articles/11847.html\" class=\"wp_rp_title\"\u003e谜题的答案和活动的心得体会\u003c/a\u003e\u003c/li\u003e\u003cli\u003e\u003ca href=\"https://coolshell.cn/articles/11832.html\" class=\"wp_rp_thumbnail\"\u003e\u003cimg src=\"https://coolshell.cn/wp-content/uploads/2014/08/538efefbgw1eiz9cvx78fj20rm0fmdi8-150x150.jpg\" alt=\"【活动】解迷题送礼物\" width=\"150\" height=\"150\"/\u003e\u003c/a\u003e\u003ca href=\"https://coolshell.cn/articles/11832.html\" class=\"wp_rp_title\"\u003e【活动】解迷题送礼物\u003c/a\u003e\u003c/li\u003e\u003cli\u003e\u003ca href=\"https://coolshell.cn/articles/10590.html\" class=\"wp_rp_thumbnail\"\u003e\u003cimg src=\"https://coolshell.cn/wp-content/uploads/2013/10/QR-Code-Overview-150x150.jpeg\" alt=\"二维码的生成细节和原理\" width=\"150\" height=\"150\"/\u003e\u003c/a\u003e\u003ca href=\"https://coolshell.cn/articles/10590.html\" class=\"wp_rp_title\"\u003e二维码的生成细节和原理\u003c/a\u003e\u003c/li\u003e\u003c/ul\u003e\u003c/div\u003e\u003c/div\u003e\n\u003cdiv id=\"post-ratings-7779\" class=\"post-ratings\" itemscope=\"\" itemtype=\"https://schema.org/Article\" data-nonce=\"12957e30d4\"\u003e\u003cimg id=\"rating_7779_1\" src=\"https://coolshell.cn/wp-content/plugins/wp-postratings/images/stars_crystal/rating_on.gif\" alt=\"好烂啊\" title=\"好烂啊\" onmouseover=\"if (!window.__cfRLUnblockHandlers) return false; current_rating(7779, 1, \u0026#39;好烂啊\u0026#39;);\" onmouseout=\"if (!window.__cfRLUnblockHandlers) return false; ratings_off(4.3, 5, 0);\" onclick=\"if (!window.__cfRLUnblockHandlers) return false; rate_post();\" onkeypress=\"if (!window.__cfRLUnblockHandlers) return false; rate_post();\" style=\"cursor: pointer; border: 0px;\" data-cf-modified-048c52f0e99970ed9ac3270b-=\"\"/\u003e\u003cimg id=\"rating_7779_2\" src=\"https://coolshell.cn/wp-content/plugins/wp-postratings/images/stars_crystal/rating_on.gif\" alt=\"有点差\" title=\"有点差\" onmouseover=\"if (!window.__cfRLUnblockHandlers) return false; current_rating(7779, 2, \u0026#39;有点差\u0026#39;);\" onmouseout=\"if (!window.__cfRLUnblockHandlers) return false; ratings_off(4.3, 5, 0);\" onclick=\"if (!window.__cfRLUnblockHandlers) return false; rate_post();\" onkeypress=\"if (!window.__cfRLUnblockHandlers) return false; rate_post();\" style=\"cursor: pointer; border: 0px;\" data-cf-modified-048c52f0e99970ed9ac3270b-=\"\"/\u003e\u003cimg id=\"rating_7779_3\" src=\"https://coolshell.cn/wp-content/plugins/wp-postratings/images/stars_crystal/rating_on.gif\" alt=\"凑合看看\" title=\"凑合看看\" onmouseover=\"if (!window.__cfRLUnblockHandlers) return false; current_rating(7779, 3, \u0026#39;凑合看看\u0026#39;);\" onmouseout=\"if (!window.__cfRLUnblockHandlers) return false; ratings_off(4.3, 5, 0);\" onclick=\"if (!window.__cfRLUnblockHandlers) return false; rate_post();\" onkeypress=\"if (!window.__cfRLUnblockHandlers) return false; rate_post();\" style=\"cursor: pointer; border: 0px;\" data-cf-modified-048c52f0e99970ed9ac3270b-=\"\"/\u003e\u003cimg id=\"rating_7779_4\" src=\"https://coolshell.cn/wp-content/plugins/wp-postratings/images/stars_crystal/rating_on.gif\" alt=\"还不错\" title=\"还不错\" onmouseover=\"if (!window.__cfRLUnblockHandlers) return false; current_rating(7779, 4, \u0026#39;还不错\u0026#39;);\" onmouseout=\"if (!window.__cfRLUnblockHandlers) return false; ratings_off(4.3, 5, 0);\" onclick=\"if (!window.__cfRLUnblockHandlers) return false; rate_post();\" onkeypress=\"if (!window.__cfRLUnblockHandlers) return false; rate_post();\" style=\"cursor: pointer; border: 0px;\" data-cf-modified-048c52f0e99970ed9ac3270b-=\"\"/\u003e\u003cimg id=\"rating_7779_5\" src=\"https://coolshell.cn/wp-content/plugins/wp-postratings/images/stars_crystal/rating_half.gif\" alt=\"很精彩\" title=\"很精彩\" onmouseover=\"if (!window.__cfRLUnblockHandlers) return false; current_rating(7779, 5, \u0026#39;很精彩\u0026#39;);\" onmouseout=\"if (!window.__cfRLUnblockHandlers) return false; ratings_off(4.3, 5, 0);\" onclick=\"if (!window.__cfRLUnblockHandlers) return false; rate_post();\" onkeypress=\"if (!window.__cfRLUnblockHandlers) return false; rate_post();\" style=\"cursor: pointer; border: 0px;\" data-cf-modified-048c52f0e99970ed9ac3270b-=\"\"/\u003e (\u003cstrong\u003e24\u003c/strong\u003e 人打了分，平均分： \u003cstrong\u003e4.25\u003c/strong\u003e )\u003cbr/\u003e\u003cspan class=\"post-ratings-text\" id=\"ratings_7779_text\"\u003e\u003c/span\u003e\u003cmeta itemprop=\"name\" content=\"K-Means 算法\"/\u003e\u003cmeta itemprop=\"headline\" content=\"K-Means 算法\"/\u003e\u003cmeta itemprop=\"description\" content=\"最近在学习一些数据挖掘的算法，看到了这个算法，也许这个算法对你来说很简单，但对我来说，我是一个初学者，我在网上翻看了很多资料，发现中文社区没有把这个问题讲得很全面很清楚的文章，所以，把我的学习笔记记录下来，分享给大家。\n\n在数据挖掘中， k-Means 算法是一种 cluster analysis 的算法，其主要是来计算数据聚集的算法，主要通过不断地取离种子点最近均值的算法。\n问题\nK-M...\"/\u003e\u003cmeta itemprop=\"datePublished\" content=\"2012-06-29T08:24:02+08:00\"/\u003e\u003cmeta itemprop=\"dateModified\" content=\"2012-06-29T10:15:59+08:00\"/\u003e\u003cmeta itemprop=\"url\" content=\"https://coolshell.cn/articles/7779.html\"/\u003e\u003cmeta itemprop=\"author\" content=\"陈皓\"/\u003e\u003cmeta itemprop=\"mainEntityOfPage\" content=\"https://coolshell.cn/articles/7779.html\"/\u003e\u003cdiv style=\"display: none;\" itemprop=\"publisher\" itemscope=\"\" itemtype=\"https://schema.org/Organization\"\u003e\u003cmeta itemprop=\"name\" content=\"酷 壳 - CoolShell\"/\u003e\u003cmeta itemprop=\"url\" content=\"https://coolshell.cn\"/\u003e\u003cdiv itemprop=\"logo\" itemscope=\"\" itemtype=\"https://schema.org/ImageObject\"\u003e\u003cmeta itemprop=\"url\" content=\"\"/\u003e\u003c/div\u003e\u003c/div\u003e\u003cdiv style=\"display: none;\" itemprop=\"aggregateRating\" itemscope=\"\" itemtype=\"https://schema.org/AggregateRating\"\u003e\u003cmeta itemprop=\"bestRating\" content=\"5\"/\u003e\u003cmeta itemprop=\"worstRating\" content=\"1\"/\u003e\u003cmeta itemprop=\"ratingValue\" content=\"4.25\"/\u003e\u003cmeta itemprop=\"ratingCount\" content=\"24\"/\u003e\u003c/div\u003e\u003c/div\u003e\u003cdiv id=\"post-ratings-7779-loading\" class=\"post-ratings-loading\"\u003e\u003cimg src=\"https://coolshell.cn/wp-content/plugins/wp-postratings/images/loading.gif\" width=\"16\" height=\"16\" class=\"post-ratings-image\"/\u003eLoading...\u003c/div\u003e\n\u003c/div\u003e",
  "Date": "2012-06-29T08:24:02+08:00",
  "Author": "陈皓"
}