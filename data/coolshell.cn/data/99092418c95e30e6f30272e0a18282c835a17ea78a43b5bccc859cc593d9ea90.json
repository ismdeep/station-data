{
  "Source": "coolshell.cn",
  "Title": "一些有意思的算法代码",
  "Link": "https://coolshell.cn/articles/6010.html",
  "Content": "\u003cdiv class=\"entry-content\"\u003e\n\u003cp\u003e\u003cscript async=\"\" src=\"https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3415450859608158\" crossorigin=\"anonymous\" type=\"53906f568649798e7b484dfc-text/javascript\"\u003e\u003c/script\u003eKeith Schwarz是一个斯坦福大学计算机科学系的讲师。他对编程充满了热情。他的主页上他自己正在实现各种各样的有意思的算法和数据结构，\u003ca href=\"http://www.keithschwarz.com/interesting/\"\u003ehttp://www.keithschwarz.com/interesting/\u003c/a\u003e， 目前这个网页上有88个（见下面的列表），但这位大哥要干135个，你可以看看他的\u003ca href=\"http://www.keithschwarz.com/interesting/\" target=\"_blank\"\u003eTo-Do List\u003c/a\u003e。\u003c/p\u003e\n\u003cp\u003e从这个列表上，我们可以看到，他从去年7月份就在自己实现这些东西了，我把他实现的这些算法转过来，\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e一方面我们可以学习一下这些算法和代码，因为很多东西对我来说都比较新，我以前\u003ca href=\"https://coolshell.cn/articles/2583.html\" target=\"_blank\"\u003e列举过一些经典的算法\u003c/a\u003e，\u003ca title=\"链接：算法和数据结构词典\" href=\"https://coolshell.cn/articles/1499.html\" rel=\"bookmark\"\u003e算法和数据结构词典\u003c/a\u003e，还有\u003ca title=\"链接：可视化的数据结构和算法\" href=\"https://coolshell.cn/articles/4671.html\" rel=\"bookmark\"\u003e可视化的数据结构和算法\u003c/a\u003e， 不过感觉都没有这个全。\u003c/li\u003e\n\u003c/ul\u003e\n\u003cul\u003e\n\u003cli\u003e另一方面我希望这个事可以影响到一些正在学习编程的人。看看别人是怎么学习编程的，希望对你有借鉴作用。\u003c/li\u003e\n\u003c/ul\u003e\n\u003ctable width=\"100%\" border=\"0\" cellspacing=\"0\" cellpadding=\"6\"\u003e\n\u003cthead\u003e\n\u003ctr\u003e\n\u003cth\u003eName\u003c/th\u003e\n\u003cth\u003eLink\u003c/th\u003e\n\u003cth\u003eDate Added\u003c/th\u003e\n\u003cth\u003eLanguage\u003c/th\u003e\n\u003cth\u003eDescription\u003c/th\u003e\n\u003c/tr\u003e\n\u003c/thead\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd\u003eBinomial Heap\u003c/td\u003e\n\u003ctd\u003e\u003ca href=\"http://www.keithschwarz.com/interesting/code/?dir=binomial-heap\"\u003e(link)\u003c/a\u003e\u003c/td\u003e\n\u003ctd\u003e7‑24‑2010\u003c/td\u003e\n\u003ctd\u003eC++\u003c/td\u003e\n\u003ctd\u003eAn implementation of a \u003ca href=\"https://en.wikipedia.org/wiki/Binomial_heap\"\u003ebinomial heap\u003c/a\u003e data structure for use as a priority queue.\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003eBounded Priority Queue\u003c/td\u003e\n\u003ctd\u003e\u003ca href=\"http://www.keithschwarz.com/interesting/code/?dir=bounded-pqueue\"\u003e(link)\u003c/a\u003e\u003c/td\u003e\n\u003ctd\u003e7‑24‑2010\u003c/td\u003e\n\u003ctd\u003eC++\u003c/td\u003e\n\u003ctd\u003eAn implementation of a \u003ca href=\"https://en.wikipedia.org/wiki/Priority_queue\"\u003epriority queue\u003c/a\u003e with a fixed upper limit to its size..\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003eMatrix\u003c/td\u003e\n\u003ctd\u003e\u003ca href=\"http://www.keithschwarz.com/interesting/code/?dir=matrix\"\u003e(link)\u003c/a\u003e\u003c/td\u003e\n\u003ctd\u003e7‑24‑2010\u003c/td\u003e\n\u003ctd\u003eC++\u003c/td\u003e\n\u003ctd\u003eA collection of classes for manipulating \u003ca href=\"https://en.wikipedia.org/wiki/Matrix_%28mathematics%29\"\u003ematrices\u003c/a\u003e.\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003eVList\u003c/td\u003e\n\u003ctd\u003e\u003ca href=\"http://www.keithschwarz.com/interesting/code/?dir=vlist\"\u003e(link)\u003c/a\u003e\u003c/td\u003e\n\u003ctd\u003e8‑16‑2010\u003c/td\u003e\n\u003ctd\u003eJava\u003c/td\u003e\n\u003ctd\u003eAn implementation of the \u003ctt\u003eList\u003c/tt\u003e abstraction backed by a \u003ca href=\"https://en.wikipedia.org/wiki/VList\"\u003eVList\u003c/a\u003e.\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003eFunction Wrapper\u003c/td\u003e\n\u003ctd\u003e\u003ca href=\"http://www.keithschwarz.com/interesting/code/?dir=function\"\u003e(link)\u003c/a\u003e\u003c/td\u003e\n\u003ctd\u003e8‑16‑2010\u003c/td\u003e\n\u003ctd\u003eC++\u003c/td\u003e\n\u003ctd\u003eA C++ wrapper class around unary functions.\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003eString\u003c/td\u003e\n\u003ctd\u003e\u003ca href=\"http://www.keithschwarz.com/interesting/code/?dir=string\"\u003e(link)\u003c/a\u003e\u003c/td\u003e\n\u003ctd\u003e8‑17‑2010\u003c/td\u003e\n\u003ctd\u003eC++\u003c/td\u003e\n\u003ctd\u003eAn implementation of a \u003ca href=\"https://en.wikipedia.org/wiki/String_(computer_science)\"\u003estring\u003c/a\u003e abstraction that uses the small string optimization.\u003c/td\u003e\n\u003c/tr\u003e\n\u003c/tbody\u003e\n\u003c/table\u003e\n\u003cp\u003e\u003cspan id=\"more-6010\"\u003e\u003c/span\u003e\u003c/p\u003e\n\u003ctable\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd\u003enstream\u003c/td\u003e\n\u003ctd\u003e\u003ca href=\"http://www.keithschwarz.com/interesting/code/?dir=nstream\"\u003e(link)\u003c/a\u003e\u003c/td\u003e\n\u003ctd\u003e8‑31‑2010\u003c/td\u003e\n\u003ctd\u003eC++\u003c/td\u003e\n\u003ctd\u003eAn stream class that sends and receives data over a network.\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003eSnake\u003c/td\u003e\n\u003ctd\u003e\u003ca href=\"http://www.keithschwarz.com/interesting/code/?dir=snake\"\u003e(link)\u003c/a\u003e\u003c/td\u003e\n\u003ctd\u003e8‑31‑2010\u003c/td\u003e\n\u003ctd\u003eC++\u003c/td\u003e\n\u003ctd\u003eAn implementation of the game \u003ca href=\"https://en.wikipedia.org/wiki/Snake_(video_game)\"\u003e\u003cem\u003eSnake\u003c/em\u003e\u003c/a\u003e with a rudimentary AI.\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003eMergesort\u003c/td\u003e\n\u003ctd\u003e\u003ca href=\"http://www.keithschwarz.com/interesting/code/?dir=mergesort\"\u003e(link)\u003c/a\u003e\u003c/td\u003e\n\u003ctd\u003e9‑14‑2010\u003c/td\u003e\n\u003ctd\u003eC++\u003c/td\u003e\n\u003ctd\u003eAn implementation of the \u003ca href=\"https://en.wikipedia.org/wiki/Mergesort\"\u003emergesort\u003c/a\u003e algorithm.\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003eNext Permutation\u003c/td\u003e\n\u003ctd\u003e\u003ca href=\"http://www.keithschwarz.com/interesting/code/?dir=next-permutation\"\u003e(link)\u003c/a\u003e\u003c/td\u003e\n\u003ctd\u003e10‑6‑2010\u003c/td\u003e\n\u003ctd\u003eC++\u003c/td\u003e\n\u003ctd\u003eAn implementation of the \u003ca href=\"http://www.cplusplus.com/reference/algorithm/next_permutation/\"\u003e\u003ctt\u003enext_permutation\u003c/tt\u003e\u003c/a\u003e STL algorithm.\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003eInterval Heap\u003c/td\u003e\n\u003ctd\u003e\u003ca href=\"http://www.keithschwarz.com/interesting/code/?dir=interval-heap\"\u003e(link)\u003c/a\u003e\u003c/td\u003e\n\u003ctd\u003e10‑17‑2010\u003c/td\u003e\n\u003ctd\u003eJava\u003c/td\u003e\n\u003ctd\u003eAn implementation of a \u003ca href=\"https://en.wikipedia.org/wiki/Double-ended_priority_queue\"\u003edouble-ended priority queue\u003c/a\u003e using an \u003ca href=\"http://www.mhhe.com/engcs/compsci/sahni/enrich/c9/interval.pdf\"\u003einterval heap\u003c/a\u003e.\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003eLinear-Time Selection\u003c/td\u003e\n\u003ctd\u003e\u003ca href=\"http://www.keithschwarz.com/interesting/code/?dir=median-of-medians\"\u003e(link)\u003c/a\u003e\u003c/td\u003e\n\u003ctd\u003e10‑18‑2010\u003c/td\u003e\n\u003ctd\u003eC++\u003c/td\u003e\n\u003ctd\u003eA deterministic, linear-time \u003ca href=\"https://en.wikipedia.org/wiki/Selection_algorithm\"\u003eselection algorithm\u003c/a\u003e using the \u003ca href=\"https://en.wikipedia.org/wiki/Selection_algorithm#Linear_general_selection_algorithm_-_Median_of_Medians_algorithm\"\u003emedian-of-medians\u003c/a\u003e algorithm.\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003eHeapsort\u003c/td\u003e\n\u003ctd\u003e\u003ca href=\"http://www.keithschwarz.com/interesting/code/?dir=heapsort\"\u003e(link)\u003c/a\u003e\u003c/td\u003e\n\u003ctd\u003e10‑18‑2010\u003c/td\u003e\n\u003ctd\u003eC++\u003c/td\u003e\n\u003ctd\u003eAn implementation of the \u003ca href=\"https://en.wikipedia.org/wiki/Heapsort\"\u003eheapsort\u003c/a\u003e algorithm.\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003eUnion-Find\u003c/td\u003e\n\u003ctd\u003e\u003ca href=\"http://www.keithschwarz.com/interesting/code/?dir=union-find\"\u003e(link)\u003c/a\u003e\u003c/td\u003e\n\u003ctd\u003e10‑19‑2010\u003c/td\u003e\n\u003ctd\u003eJava\u003c/td\u003e\n\u003ctd\u003eAn implementation of a \u003ca href=\"https://en.wikipedia.org/wiki/Disjoint-set_data_structure\"\u003edisjoint-set data structure\u003c/a\u003e using a disjoint set forest.\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003eRadix Sort\u003c/td\u003e\n\u003ctd\u003e\u003ca href=\"http://www.keithschwarz.com/interesting/code/?dir=radix-sort\"\u003e(link)\u003c/a\u003e\u003c/td\u003e\n\u003ctd\u003e10‑19‑2010\u003c/td\u003e\n\u003ctd\u003eC++\u003c/td\u003e\n\u003ctd\u003eAn implementation of the \u003ca href=\"https://en.wikipedia.org/wiki/Radix_sort\"\u003eradix sort\u003c/a\u003e algorithm.\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003eRational\u003c/td\u003e\n\u003ctd\u003e\u003ca href=\"http://www.keithschwarz.com/interesting/code/?dir=rational\"\u003e(link)\u003c/a\u003e\u003c/td\u003e\n\u003ctd\u003e10‑23‑2010\u003c/td\u003e\n\u003ctd\u003eC++\u003c/td\u003e\n\u003ctd\u003eA data structure representing a \u003ca href=\"https://en.wikipedia.org/wiki/Rational_number\"\u003erational number\u003c/a\u003e.\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003eDPLL\u003c/td\u003e\n\u003ctd\u003e\u003ca href=\"http://www.keithschwarz.com/interesting/code/?dir=dpll\"\u003e(link)\u003c/a\u003e\u003c/td\u003e\n\u003ctd\u003e10‑23‑2010\u003c/td\u003e\n\u003ctd\u003eHaskell\u003c/td\u003e\n\u003ctd\u003eAn implementation of the \u003ca href=\"https://en.wikipedia.org/wiki/DPLL_algorithm\"\u003eDPLL algorithm\u003c/a\u003e for solving \u003ca href=\"https://en.wikipedia.org/wiki/Boolean_satisfiability_problem\"\u003eCNF-SAT\u003c/a\u003e.\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003eSmoothsort\u003c/td\u003e\n\u003ctd\u003e\u003ca href=\"http://www.keithschwarz.com/interesting/code/?dir=smoothsort\"\u003e(link)\u003c/a\u003e\u003c/td\u003e\n\u003ctd\u003e10‑27‑2010\u003c/td\u003e\n\u003ctd\u003eC++\u003c/td\u003e\n\u003ctd\u003eAn implementation of the \u003ca href=\"http://www.keithschwarz.com/smoothsort/\"\u003esmoothsort algorithm\u003c/a\u003e, an adaptive heapsort variant.\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003eExtendible Array\u003c/td\u003e\n\u003ctd\u003e\u003ca href=\"http://www.keithschwarz.com/interesting/code/?dir=extendible-array\"\u003e(link)\u003c/a\u003e\u003c/td\u003e\n\u003ctd\u003e10‑28‑2010\u003c/td\u003e\n\u003ctd\u003eJava\u003c/td\u003e\n\u003ctd\u003eA \u003ca href=\"https://en.wikipedia.org/wiki/Dynamic_array\"\u003edynamic array\u003c/a\u003e class with O(1) worst-case runtime lookup and append.\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003eIn-Place Merge\u003c/td\u003e\n\u003ctd\u003e\u003ca href=\"http://www.keithschwarz.com/interesting/code/?dir=inplace-merge\"\u003e(link)\u003c/a\u003e\u003c/td\u003e\n\u003ctd\u003e10‑29‑2010\u003c/td\u003e\n\u003ctd\u003eC++\u003c/td\u003e\n\u003ctd\u003eAn implementation of a \u003ca href=\"https://en.wikipedia.org/wiki/Merge_algorithm\"\u003emerge algorithm\u003c/a\u003e that runs \u003ca href=\"https://en.wikipedia.org/wiki/In-place_algorithm\"\u003ein-place\u003c/a\u003e.\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003eRandom Shuffle\u003c/td\u003e\n\u003ctd\u003e\u003ca href=\"http://www.keithschwarz.com/interesting/code/?dir=random-shuffle\"\u003e(link)\u003c/a\u003e\u003c/td\u003e\n\u003ctd\u003e10‑29‑2010\u003c/td\u003e\n\u003ctd\u003eC++\u003c/td\u003e\n\u003ctd\u003eAn algorithm for generating a \u003ca href=\"https://en.wikipedia.org/wiki/Random_permutation\"\u003erandom permutation\u003c/a\u003e of a set of elements.\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003eRandom Sample\u003c/td\u003e\n\u003ctd\u003e\u003ca href=\"http://www.keithschwarz.com/interesting/code/?dir=random-sample\"\u003e(link)\u003c/a\u003e\u003c/td\u003e\n\u003ctd\u003e10‑29‑2010\u003c/td\u003e\n\u003ctd\u003eC++\u003c/td\u003e\n\u003ctd\u003eAn O(n) time, O(1) space algorithm for randomly choosing k elements out of a stream with uniform probability.\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003eNatural Mergesort\u003c/td\u003e\n\u003ctd\u003e\u003ca href=\"http://www.keithschwarz.com/interesting/code/?dir=natural-mergesort\"\u003e(link)\u003c/a\u003e\u003c/td\u003e\n\u003ctd\u003e10‑30‑2010\u003c/td\u003e\n\u003ctd\u003eC++\u003c/td\u003e\n\u003ctd\u003eAn implementation of \u003ca href=\"http://www.algorithmist.com/index.php/Merge_sort#Natural_mergesort\"\u003enatural mergesort\u003c/a\u003e, an \u003ca href=\"https://en.wikipedia.org/wiki/Adaptive_sort\"\u003eadaptive\u003c/a\u003e variant of \u003ca href=\"https://en.wikipedia.org/wiki/Merge_sort\"\u003emergesort\u003c/a\u003e.\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003eInterpolation Search\u003c/td\u003e\n\u003ctd\u003e\u003ca href=\"http://www.keithschwarz.com/interesting/code/?dir=interpolation-search\"\u003e(link)\u003c/a\u003e\u003c/td\u003e\n\u003ctd\u003e10‑31‑2010\u003c/td\u003e\n\u003ctd\u003eC++\u003c/td\u003e\n\u003ctd\u003eAn implementation of the \u003ca href=\"https://en.wikipedia.org/wiki/Interpolation_search\"\u003einterpolation search\u003c/a\u003e algorithm.\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003eIntrosort\u003c/td\u003e\n\u003ctd\u003e\u003ca href=\"http://www.keithschwarz.com/interesting/code/?dir=introsort\"\u003e(link)\u003c/a\u003e\u003c/td\u003e\n\u003ctd\u003e10‑31‑2010\u003c/td\u003e\n\u003ctd\u003eC++\u003c/td\u003e\n\u003ctd\u003eAn implementation of the \u003ca href=\"https://en.wikipedia.org/wiki/Introsort\"\u003eintrosort\u003c/a\u003e algorithm, a fast hybrid of \u003ca href=\"https://en.wikipedia.org/wiki/Quicksort\"\u003equicksort\u003c/a\u003e, \u003ca href=\"https://en.wikipedia.org/wiki/Heapsort\"\u003eheapsort\u003c/a\u003e, and\u003ca href=\"https://en.wikipedia.org/wiki/Insertion_sort\"\u003einsertion sort\u003c/a\u003e.\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003eHashed Array Tree\u003c/td\u003e\n\u003ctd\u003e\u003ca href=\"http://www.keithschwarz.com/interesting/code/?dir=hashed-array-tree\"\u003e(link)\u003c/a\u003e\u003c/td\u003e\n\u003ctd\u003e11‑3‑2010\u003c/td\u003e\n\u003ctd\u003eJava\u003c/td\u003e\n\u003ctd\u003eAn implementation of a dynamic array backed by a \u003ca href=\"https://en.wikipedia.org/wiki/Hashed_array_tree\"\u003ehashed array tree\u003c/a\u003e.\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003eRecurrence Solver\u003c/td\u003e\n\u003ctd\u003e\u003ca href=\"http://www.keithschwarz.com/interesting/code/?dir=recurrence\"\u003e(link)\u003c/a\u003e\u003c/td\u003e\n\u003ctd\u003e11‑13‑2010\u003c/td\u003e\n\u003ctd\u003eC++\u003c/td\u003e\n\u003ctd\u003eA fast algorithm for generating terms of a sequence defined by a \u003ca href=\"https://en.wikipedia.org/wiki/Recurrence_relation#Linear_homogeneous_recurrence_relations_with_constant_coefficients\"\u003elinear recurrence relation\u003c/a\u003e.\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003eFibonacci Heap\u003c/td\u003e\n\u003ctd\u003e\u003ca href=\"http://www.keithschwarz.com/interesting/code/?dir=fibonacci-heap\"\u003e(link)\u003c/a\u003e\u003c/td\u003e\n\u003ctd\u003e11‑15‑2010\u003c/td\u003e\n\u003ctd\u003eJava\u003c/td\u003e\n\u003ctd\u003eAn implementation of a priority queue backed by a \u003ca href=\"https://en.wikipedia.org/wiki/Fibonacci_heap\"\u003eFibonacci heap\u003c/a\u003e.\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003eDijkstra’s Algorithm\u003c/td\u003e\n\u003ctd\u003e\u003ca href=\"http://www.keithschwarz.com/interesting/code/?dir=dijkstra\"\u003e(link)\u003c/a\u003e\u003c/td\u003e\n\u003ctd\u003e11‑16‑2010\u003c/td\u003e\n\u003ctd\u003eJava\u003c/td\u003e\n\u003ctd\u003eAn implementation of \u003ca href=\"https://en.wikipedia.org/wiki/Dijkstra\u0026#39;s_algorithm\"\u003eDijkstra’s algorithm\u003c/a\u003e for single-source shortest paths.\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003ePrim’s Algorithm\u003c/td\u003e\n\u003ctd\u003e\u003ca href=\"http://www.keithschwarz.com/interesting/code/?dir=prim\"\u003e(link)\u003c/a\u003e\u003c/td\u003e\n\u003ctd\u003e11‑17‑2010\u003c/td\u003e\n\u003ctd\u003eJava\u003c/td\u003e\n\u003ctd\u003eAn implementation of \u003ca href=\"https://en.wikipedia.org/wiki/Prim\u0026#39;s_algorithm\"\u003ePrim’s algorithm\u003c/a\u003e for computing \u003ca href=\"https://en.wikipedia.org/wiki/Minimum_spanning_tree\"\u003eminimum spanning trees\u003c/a\u003e.\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003eKruskal’s Algorithm\u003c/td\u003e\n\u003ctd\u003e\u003ca href=\"http://www.keithschwarz.com/interesting/code/?dir=kruskal\"\u003e(link)\u003c/a\u003e\u003c/td\u003e\n\u003ctd\u003e11‑17‑2010\u003c/td\u003e\n\u003ctd\u003eJava\u003c/td\u003e\n\u003ctd\u003eAn implementation of \u003ca href=\"https://en.wikipedia.org/wiki/Kruskal\u0026#39;s_algorithm\"\u003eKruskal’s algorithm\u003c/a\u003e for computing \u003ca href=\"https://en.wikipedia.org/wiki/Minimum_spanning_tree\"\u003eminimum spanning trees\u003c/a\u003e.\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003eMajority Element\u003c/td\u003e\n\u003ctd\u003e\u003ca href=\"http://www.keithschwarz.com/interesting/code/?dir=majority-element\"\u003e(link)\u003c/a\u003e\u003c/td\u003e\n\u003ctd\u003e11‑17‑2010\u003c/td\u003e\n\u003ctd\u003eC++\u003c/td\u003e\n\u003ctd\u003eA fast, linear-time algorithm for finding the \u003ca href=\"http://www.cs.utexas.edu/~moore/best-ideas/mjrty/\"\u003emajority element\u003c/a\u003e of a data set.\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003eHaar Transform\u003c/td\u003e\n\u003ctd\u003e\u003ca href=\"http://www.keithschwarz.com/interesting/code/?dir=haar\"\u003e(link)\u003c/a\u003e\u003c/td\u003e\n\u003ctd\u003e11‑17‑2010\u003c/td\u003e\n\u003ctd\u003eC++\u003c/td\u003e\n\u003ctd\u003eA set of functions to decompose a sequence of values into a sum of \u003ca href=\"https://en.wikipedia.org/wiki/Haar_wavelet\"\u003eHaar wavelets\u003c/a\u003e.\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003eArgmax\u003c/td\u003e\n\u003ctd\u003e\u003ca href=\"http://www.keithschwarz.com/interesting/code/?dir=argmax\"\u003e(link)\u003c/a\u003e\u003c/td\u003e\n\u003ctd\u003e11‑19‑2010\u003c/td\u003e\n\u003ctd\u003eC++\u003c/td\u003e\n\u003ctd\u003eA pair of functions to compute the \u003ca href=\"https://en.wikipedia.org/wiki/Arg_max\"\u003earg min or max\u003c/a\u003e of a function on some range.\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003eDerivative\u003c/td\u003e\n\u003ctd\u003e\u003ca href=\"http://www.keithschwarz.com/interesting/code/?dir=derivative\"\u003e(link)\u003c/a\u003e\u003c/td\u003e\n\u003ctd\u003e11‑19‑2010\u003c/td\u003e\n\u003ctd\u003eC++\u003c/td\u003e\n\u003ctd\u003eA \u003ca href=\"https://en.wikipedia.org/wiki/Function_object\"\u003efunction object\u003c/a\u003e that approximates the \u003ca href=\"https://en.wikipedia.org/wiki/Derivative\"\u003ederivative\u003c/a\u003e of a function.\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003eLevenshtein Distance\u003c/td\u003e\n\u003ctd\u003e\u003ca href=\"http://www.keithschwarz.com/interesting/code/?dir=levenshtein\"\u003e(link)\u003c/a\u003e\u003c/td\u003e\n\u003ctd\u003e11‑19‑2010\u003c/td\u003e\n\u003ctd\u003eC++\u003c/td\u003e\n\u003ctd\u003eAn algorithm for computing the \u003ca href=\"https://en.wikipedia.org/wiki/Levenshtein_distance\"\u003eLevenshtein distance\u003c/a\u003e between two sequences.\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003eSkiplist\u003c/td\u003e\n\u003ctd\u003e\u003ca href=\"http://www.keithschwarz.com/interesting/code/?dir=skiplist\"\u003e(link)\u003c/a\u003e\u003c/td\u003e\n\u003ctd\u003e11‑20‑2010\u003c/td\u003e\n\u003ctd\u003eC++\u003c/td\u003e\n\u003ctd\u003eAn implementation of a \u003ca href=\"https://en.wikipedia.org/wiki/Skip_list\"\u003eskip list\u003c/a\u003e, a randomized data structure for maintaining a sorted collection.\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003evan Emde Boas Tree\u003c/td\u003e\n\u003ctd\u003e\u003ca href=\"http://www.keithschwarz.com/interesting/code/?dir=van-emde-boas-tree\"\u003e(link)\u003c/a\u003e\u003c/td\u003e\n\u003ctd\u003e11‑26‑2010\u003c/td\u003e\n\u003ctd\u003eC++\u003c/td\u003e\n\u003ctd\u003eAn implementation of a sorted associative array backed by a \u003ca href=\"https://en.wikipedia.org/wiki/Van_Emde_Boas_tree\"\u003evan Emde Boas tree\u003c/a\u003e.\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003eCuckoo HashMap\u003c/td\u003e\n\u003ctd\u003e\u003ca href=\"http://www.keithschwarz.com/interesting/code/?dir=cuckoo-hashmap\"\u003e(link)\u003c/a\u003e\u003c/td\u003e\n\u003ctd\u003e11‑27‑2010\u003c/td\u003e\n\u003ctd\u003eJava\u003c/td\u003e\n\u003ctd\u003eAn implementation of a \u003ca href=\"https://en.wikipedia.org/wiki/Hash_table\"\u003ehash table\u003c/a\u003e using \u003ca href=\"https://en.wikipedia.org/wiki/Cuckoo_hashing\"\u003ecuckoo hashing\u003c/a\u003e.\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003eNeedleman-Wunsch Algorithm\u003c/td\u003e\n\u003ctd\u003e\u003ca href=\"http://www.keithschwarz.com/interesting/code/?dir=needleman-wunsch\"\u003e(link)\u003c/a\u003e\u003c/td\u003e\n\u003ctd\u003e11‑28‑2010\u003c/td\u003e\n\u003ctd\u003eC++\u003c/td\u003e\n\u003ctd\u003eAn implementation of the \u003ca href=\"https://en.wikipedia.org/wiki/Needleman%E2%80%93Wunsch_algorithm\"\u003eNeedleman-Wunsch\u003c/a\u003e algorithm for optimal string alignment.\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003eTreap\u003c/td\u003e\n\u003ctd\u003e\u003ca href=\"http://www.keithschwarz.com/interesting/code/?dir=treap\"\u003e(link)\u003c/a\u003e\u003c/td\u003e\n\u003ctd\u003e11‑28‑2010\u003c/td\u003e\n\u003ctd\u003eC++\u003c/td\u003e\n\u003ctd\u003eAn implementation of a sorted associative array backed by a \u003ca href=\"https://en.wikipedia.org/wiki/Treap\"\u003etreap\u003c/a\u003e.\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003eFloyd-Warshall Algorithm\u003c/td\u003e\n\u003ctd\u003e\u003ca href=\"http://www.keithschwarz.com/interesting/code/?dir=floyd-warshall\"\u003e(link)\u003c/a\u003e\u003c/td\u003e\n\u003ctd\u003e12‑10‑2010\u003c/td\u003e\n\u003ctd\u003eJava\u003c/td\u003e\n\u003ctd\u003eAn implementation of the \u003ca href=\"https://en.wikipedia.org/wiki/Floyd-Warshall_algorithm\"\u003eFloyd-Warshall algorithm\u003c/a\u003e for all-pairs shortest paths in a graph.\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003ePower Iteration\u003c/td\u003e\n\u003ctd\u003e\u003ca href=\"http://www.keithschwarz.com/interesting/code/?dir=power-iteration\"\u003e(link)\u003c/a\u003e\u003c/td\u003e\n\u003ctd\u003e12‑10‑2010\u003c/td\u003e\n\u003ctd\u003eC++\u003c/td\u003e\n\u003ctd\u003eAn implementation of the \u003ca href=\"https://en.wikipedia.org/wiki/Power_iteration\"\u003epower iteration\u003c/a\u003e algorithm for finding dominant eigenvectors.\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003eEdmonds’s Matching Algorithm\u003c/td\u003e\n\u003ctd\u003e\u003ca href=\"http://www.keithschwarz.com/interesting/code/?dir=edmonds-matching\"\u003e(link)\u003c/a\u003e\u003c/td\u003e\n\u003ctd\u003e12‑15‑2010\u003c/td\u003e\n\u003ctd\u003eJava\u003c/td\u003e\n\u003ctd\u003eAn implementation of \u003ca href=\"https://en.wikipedia.org/wiki/Edmonds\u0026#39;s_matching_algorithm\"\u003eEdmonds’s matching algorithm\u003c/a\u003e for finding \u003ca href=\"https://en.wikipedia.org/wiki/Matching_(graph_theory)#Maximum_matchings\"\u003emaximum matchings\u003c/a\u003e in undirected graphs.\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003eKosaraju’s Algorithm\u003c/td\u003e\n\u003ctd\u003e\u003ca href=\"http://www.keithschwarz.com/interesting/code/?dir=kosaraju\"\u003e(link)\u003c/a\u003e\u003c/td\u003e\n\u003ctd\u003e12‑15‑2010\u003c/td\u003e\n\u003ctd\u003eJava\u003c/td\u003e\n\u003ctd\u003eAn implementation of \u003ca href=\"https://en.wikipedia.org/wiki/Kosaraju\u0026#39;s_algorithm\"\u003eKosaraju’s algorithm\u003c/a\u003e algorithm for finding \u003ca href=\"https://en.wikipedia.org/wiki/Strongly_connected_component\"\u003estrongly connected components\u003c/a\u003e of a directed graph.\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e2-SAT\u003c/td\u003e\n\u003ctd\u003e\u003ca href=\"http://www.keithschwarz.com/interesting/code/?dir=2sat\"\u003e(link)\u003c/a\u003e\u003c/td\u003e\n\u003ctd\u003e12‑15‑2010\u003c/td\u003e\n\u003ctd\u003eJava\u003c/td\u003e\n\u003ctd\u003eA linear-time algorithm for solving \u003ca href=\"https://en.wikipedia.org/wiki/2-satisfiability\"\u003e2-SAT\u003c/a\u003e.\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003eBellman-Ford Algorithm\u003c/td\u003e\n\u003ctd\u003e\u003ca href=\"http://www.keithschwarz.com/interesting/code/?dir=bellman-ford\"\u003e(link)\u003c/a\u003e\u003c/td\u003e\n\u003ctd\u003e12‑17‑2010\u003c/td\u003e\n\u003ctd\u003eJava\u003c/td\u003e\n\u003ctd\u003eAn implementation of the \u003ca href=\"https://en.wikipedia.org/wiki/Bellman%E2%80%93Ford_algorithm\"\u003eBellman-Ford\u003c/a\u003e algorithm for single-source shortest paths.\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003eTopological Sort\u003c/td\u003e\n\u003ctd\u003e\u003ca href=\"http://www.keithschwarz.com/interesting/code/?dir=topological-sort\"\u003e(link)\u003c/a\u003e\u003c/td\u003e\n\u003ctd\u003e12‑17‑2010\u003c/td\u003e\n\u003ctd\u003eJava\u003c/td\u003e\n\u003ctd\u003eAn algorithm for computing a \u003ca href=\"https://en.wikipedia.org/wiki/Topological_sorting\"\u003etopological sort\u003c/a\u003e of a directed acyclic graph.\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003eGraham Scan\u003c/td\u003e\n\u003ctd\u003e\u003ca href=\"http://www.keithschwarz.com/interesting/code/?dir=graham-scan\"\u003e(link)\u003c/a\u003e\u003c/td\u003e\n\u003ctd\u003e12‑19‑2010\u003c/td\u003e\n\u003ctd\u003eC++\u003c/td\u003e\n\u003ctd\u003eAn implementation of the \u003ca href=\"https://en.wikipedia.org/wiki/Graham_scan\"\u003eGraham scan\u003c/a\u003e for finding convex hulls in 2D space.\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003eBipartite Testing\u003c/td\u003e\n\u003ctd\u003e\u003ca href=\"http://www.keithschwarz.com/interesting/code/?dir=bipartite-verify\"\u003e(link)\u003c/a\u003e\u003c/td\u003e\n\u003ctd\u003e12‑19‑2010\u003c/td\u003e\n\u003ctd\u003eJava\u003c/td\u003e\n\u003ctd\u003eA linear-time algorithm for checking whether a directed graph is \u003ca href=\"https://en.wikipedia.org/wiki/Bipartite_graph\"\u003ebipartite\u003c/a\u003e.\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003eJohnson’s Algorithm\u003c/td\u003e\n\u003ctd\u003e\u003ca href=\"http://www.keithschwarz.com/interesting/code/?dir=johnson\"\u003e(link)\u003c/a\u003e\u003c/td\u003e\n\u003ctd\u003e12‑19‑2010\u003c/td\u003e\n\u003ctd\u003eJava\u003c/td\u003e\n\u003ctd\u003eAn implementation of \u003ca href=\"https://en.wikipedia.org/wiki/Johnson\u0026#39;s_algorithm\"\u003eJohnson’s algorithm\u003c/a\u003e for all-pairs shortest paths.\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003eStrassen Algorithm\u003c/td\u003e\n\u003ctd\u003e\u003ca href=\"http://www.keithschwarz.com/interesting/code/?dir=strassen\"\u003e(link)\u003c/a\u003e\u003c/td\u003e\n\u003ctd\u003e12‑20‑2010\u003c/td\u003e\n\u003ctd\u003eC++\u003c/td\u003e\n\u003ctd\u003eAn implementation of the \u003ca href=\"https://en.wikipedia.org/wiki/Strassen_algorithm\"\u003eStrassen algorithm\u003c/a\u003e for fast matrix multiplication.\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003eCartesian Tree Sort\u003c/td\u003e\n\u003ctd\u003e\u003ca href=\"http://www.keithschwarz.com/interesting/code/?dir=cartesian-tree-sort\"\u003e(link)\u003c/a\u003e\u003c/td\u003e\n\u003ctd\u003e12‑21‑2010\u003c/td\u003e\n\u003ctd\u003eC++\u003c/td\u003e\n\u003ctd\u003eAn implementation of \u003ca href=\"https://en.wikipedia.org/wiki/Cartesian_tree#Application_in_sorting\"\u003eCartesian tree sort\u003c/a\u003e, an adaptive, out-of-place heapsort variant.\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003eFord-Fulkerson Algorithm\u003c/td\u003e\n\u003ctd\u003e\u003ca href=\"http://www.keithschwarz.com/interesting/code/?dir=ford-fulkerson\"\u003e(link)\u003c/a\u003e\u003c/td\u003e\n\u003ctd\u003e12‑21‑2010\u003c/td\u003e\n\u003ctd\u003eJava\u003c/td\u003e\n\u003ctd\u003eAn implementation of the \u003ca href=\"https://en.wikipedia.org/wiki/Ford%E2%80%93Fulkerson_algorithm\"\u003eFord-Fulkerson\u003c/a\u003e maximum-flow algorithm.\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003eScaling Ford-Fulkerson\u003c/td\u003e\n\u003ctd\u003e\u003ca href=\"http://www.keithschwarz.com/interesting/code/?dir=ford-fulkerson-scaling\"\u003e(link)\u003c/a\u003e\u003c/td\u003e\n\u003ctd\u003e12‑22‑2010\u003c/td\u003e\n\u003ctd\u003eJava\u003c/td\u003e\n\u003ctd\u003eAn modification of the \u003ca href=\"https://en.wikipedia.org/wiki/Ford%E2%80%93Fulkerson_algorithm\"\u003eFord-Fulkerson\u003c/a\u003e maximum-flow algorithm that uses scaling to achieve polynomial time..\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003eSplay Tree\u003c/td\u003e\n\u003ctd\u003e\u003ca href=\"http://www.keithschwarz.com/interesting/code/?dir=splay-tree\"\u003e(link)\u003c/a\u003e\u003c/td\u003e\n\u003ctd\u003e12‑27‑2010\u003c/td\u003e\n\u003ctd\u003eC++\u003c/td\u003e\n\u003ctd\u003eAn implementation of a sorted associative array backed by a \u003ca href=\"https://en.wikipedia.org/wiki/Splay_tree\"\u003esplay tree\u003c/a\u003e.\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003eTernary Search Tree\u003c/td\u003e\n\u003ctd\u003e\u003ca href=\"http://www.keithschwarz.com/interesting/code/?dir=ternary-search-tree\"\u003e(link)\u003c/a\u003e\u003c/td\u003e\n\u003ctd\u003e12‑28‑2010\u003c/td\u003e\n\u003ctd\u003eC++\u003c/td\u003e\n\u003ctd\u003eAn implementation of a sorted set of strings backed by a \u003ca href=\"https://en.wikipedia.org/wiki/Ternary_search_tree\"\u003eternary search tree\u003c/a\u003e.\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003eRing Buffer\u003c/td\u003e\n\u003ctd\u003e\u003ca href=\"http://www.keithschwarz.com/interesting/code/?dir=ring-buffer\"\u003e(link)\u003c/a\u003e\u003c/td\u003e\n\u003ctd\u003e12‑30‑2010\u003c/td\u003e\n\u003ctd\u003eJava\u003c/td\u003e\n\u003ctd\u003eAn implementation of a FIFO queue using a \u003ca href=\"https://en.wikipedia.org/wiki/Circular_buffer\"\u003ering buffer\u003c/a\u003e.\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003eAVL Tree\u003c/td\u003e\n\u003ctd\u003e\u003ca href=\"http://www.keithschwarz.com/interesting/code/?dir=avl-tree\"\u003e(link)\u003c/a\u003e\u003c/td\u003e\n\u003ctd\u003e12‑30‑2010\u003c/td\u003e\n\u003ctd\u003eC++\u003c/td\u003e\n\u003ctd\u003eA sorted associative container backed by an \u003ca href=\"https://en.wikipedia.org/wiki/AVL_tree\"\u003eAVL tree\u003c/a\u003e.\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003eRabin-Karp Algorithm\u003c/td\u003e\n\u003ctd\u003e\u003ca href=\"http://www.keithschwarz.com/interesting/code/?dir=rabin-karp\"\u003e(link)\u003c/a\u003e\u003c/td\u003e\n\u003ctd\u003e1‑1‑2011\u003c/td\u003e\n\u003ctd\u003eC++\u003c/td\u003e\n\u003ctd\u003eAn implementation of the \u003ca href=\"https://en.wikipedia.org/wiki/Rabin%E2%80%93Karp_string_search_algorithm\"\u003eRabin-Karp algorithm\u003c/a\u003e for string matching.\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003eRPN Evaluator\u003c/td\u003e\n\u003ctd\u003e\u003ca href=\"http://www.keithschwarz.com/interesting/code/?dir=rpn-evaluate\"\u003e(link)\u003c/a\u003e\u003c/td\u003e\n\u003ctd\u003e1‑18‑2011\u003c/td\u003e\n\u003ctd\u003eC++ / strain\u003c/td\u003e\n\u003ctd\u003eA library to tokenize and evaluate simple arithmetic expressions in \u003ca href=\"https://en.wikipedia.org/wiki/Reverse_Polish_notation\"\u003ereverse Polish notation\u003c/a\u003e.\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003eShunting-Yard Algorithm\u003c/td\u003e\n\u003ctd\u003e\u003ca href=\"http://www.keithschwarz.com/interesting/code/?dir=shunting-yard\"\u003e(link)\u003c/a\u003e\u003c/td\u003e\n\u003ctd\u003e1‑18‑2011\u003c/td\u003e\n\u003ctd\u003eC++ / strain\u003c/td\u003e\n\u003ctd\u003eAn implementation of Dijkstra’s \u003ca href=\"https://en.wikipedia.org/wiki/Shunting-yard_algorithm\"\u003eshunting-yard algorithm\u003c/a\u003e for converting infix expressions to reverse-Polish notation.\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003eSkew Binomial Heap\u003c/td\u003e\n\u003ctd\u003e\u003ca href=\"http://www.keithschwarz.com/interesting/code/?dir=skew-binomial-heap\"\u003e(link)\u003c/a\u003e\u003c/td\u003e\n\u003ctd\u003e1‑20‑2011\u003c/td\u003e\n\u003ctd\u003eC++\u003c/td\u003e\n\u003ctd\u003eAn implementation of a priority queue backed by a \u003ca href=\"https://en.wikipedia.org/wiki/Skew_binomial_heap\"\u003eskew binomial heap\u003c/a\u003e.\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e2/3 Heap\u003c/td\u003e\n\u003ctd\u003e\u003ca href=\"http://www.keithschwarz.com/interesting/code/?dir=two-three-heap\"\u003e(link)\u003c/a\u003e\u003c/td\u003e\n\u003ctd\u003e3‑1‑2011\u003c/td\u003e\n\u003ctd\u003eC++\u003c/td\u003e\n\u003ctd\u003eAn implementation of a priority queue whose branching factor alternates at different levels to maximize performance.\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003eZeckendorf Logarithm\u003c/td\u003e\n\u003ctd\u003e\u003ca href=\"http://www.keithschwarz.com/interesting/code/?dir=zeckendorf-logarithm\"\u003e(link)\u003c/a\u003e\u003c/td\u003e\n\u003ctd\u003e3‑10‑2011\u003c/td\u003e\n\u003ctd\u003eC++\u003c/td\u003e\n\u003ctd\u003eAn algorithm based on \u003ca href=\"https://en.wikipedia.org/wiki/Zeckendorf\u0026#39;s_theorem\"\u003eZeckendorf representations\u003c/a\u003e that efficiently computes logarithms.\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003eFactoradic Permutations\u003c/td\u003e\n\u003ctd\u003e\u003ca href=\"http://www.keithschwarz.com/interesting/code/?dir=factoradic-permutation\"\u003e(link)\u003c/a\u003e\u003c/td\u003e\n\u003ctd\u003e3‑17‑2011\u003c/td\u003e\n\u003ctd\u003eC++\u003c/td\u003e\n\u003ctd\u003eA set of algorithms for generating \u003ca href=\"https://en.wikipedia.org/wiki/Permutation\"\u003epermutations\u003c/a\u003e using the \u003ca href=\"https://en.wikipedia.org/wiki/Factorial_number_system\"\u003efactoradic number system\u003c/a\u003e.\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003eBinary Cyclic Subsets\u003c/td\u003e\n\u003ctd\u003e\u003ca href=\"http://www.keithschwarz.com/interesting/code/?dir=binary-subset\"\u003e(link)\u003c/a\u003e\u003c/td\u003e\n\u003ctd\u003e3‑20‑2011\u003c/td\u003e\n\u003ctd\u003eC++\u003c/td\u003e\n\u003ctd\u003eA set of algorithms for generating \u003ca href=\"https://en.wikipedia.org/wiki/Subset\"\u003esubsets\u003c/a\u003e in \u003ca href=\"https://en.wikipedia.org/wiki/Lexicographical_order\"\u003elexicographical order\u003c/a\u003e using \u003ca href=\"http://www.keithschwarz.com/binary-subsets\"\u003ebinary numbers and cyclic shifts\u003c/a\u003e.\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003eFibonacci Iterator\u003c/td\u003e\n\u003ctd\u003e\u003ca href=\"http://www.keithschwarz.com/interesting/code/?dir=fibonacci-iterator\"\u003e(link)\u003c/a\u003e\u003c/td\u003e\n\u003ctd\u003e3‑22‑2011\u003c/td\u003e\n\u003ctd\u003eC++\u003c/td\u003e\n\u003ctd\u003eAn STL-style iterator for iterating over the \u003ca href=\"https://en.wikipedia.org/wiki/Fibonacci_number\"\u003eFibonacci numbers\u003c/a\u003e.\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003eFibonacci Search\u003c/td\u003e\n\u003ctd\u003e\u003ca href=\"http://www.keithschwarz.com/interesting/code/?dir=fibonacci-search\"\u003e(link)\u003c/a\u003e\u003c/td\u003e\n\u003ctd\u003e3‑22‑2011\u003c/td\u003e\n\u003ctd\u003eC++\u003c/td\u003e\n\u003ctd\u003eAn implementation of the \u003ca href=\"https://en.wikipedia.org/wiki/Fibonacci_search_technique\"\u003eFibonacci search\u003c/a\u003e algorithm.\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003eEuclid’s Algorithm\u003c/td\u003e\n\u003ctd\u003e\u003ca href=\"http://www.keithschwarz.com/interesting/code/?dir=euclid\"\u003e(link)\u003c/a\u003e\u003c/td\u003e\n\u003ctd\u003e4‑18‑2011\u003c/td\u003e\n\u003ctd\u003eHaskell\u003c/td\u003e\n\u003ctd\u003eAn implementation of \u003ca href=\"https://en.wikipedia.org/wiki/Euclidean_algorithm\"\u003eEuclid’s algorithm\u003c/a\u003e and applications to \u003ca href=\"https://en.wikipedia.org/wiki/Continued_fraction\"\u003econtinued fractions\u003c/a\u003e and \u003ca href=\"https://en.wikipedia.org/wiki/Extended_Euclidean_algorithm\"\u003ethe extended Euclidean algorithm\u003c/a\u003e.\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003eFind Duplicate\u003c/td\u003e\n\u003ctd\u003e\u003ca href=\"http://www.keithschwarz.com/interesting/code/?dir=find-duplicate\"\u003e(link)\u003c/a\u003e\u003c/td\u003e\n\u003ctd\u003e4‑18‑2011\u003c/td\u003e\n\u003ctd\u003ePython\u003c/td\u003e\n\u003ctd\u003eAn algorithm to find a repeated element in an array using \u003ca href=\"https://en.wikipedia.org/wiki/Cycle_detection#Tortoise_and_hare\"\u003eFloyd’s cycle-finding algorithm\u003c/a\u003e.\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003ePermutation Generator\u003c/td\u003e\n\u003ctd\u003e\u003ca href=\"http://www.keithschwarz.com/interesting/code/?dir=permutation-generator\"\u003e(link)\u003c/a\u003e\u003c/td\u003e\n\u003ctd\u003e4‑19‑2011\u003c/td\u003e\n\u003ctd\u003ePython\u003c/td\u003e\n\u003ctd\u003eA \u003ca href=\"https://en.wikipedia.org/wiki/Generator_(computer_programming)\"\u003egenerator\u003c/a\u003e for producing all \u003ca href=\"https://en.wikipedia.org/wiki/Permutation\"\u003epermutations\u003c/a\u003e of a list of elements.\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003eMatrix Find\u003c/td\u003e\n\u003ctd\u003e\u003ca href=\"http://www.keithschwarz.com/interesting/code/?dir=matrix-find\"\u003e(link)\u003c/a\u003e\u003c/td\u003e\n\u003ctd\u003e4‑19‑2011\u003c/td\u003e\n\u003ctd\u003ePython\u003c/td\u003e\n\u003ctd\u003eA solution to the classic interview question of searching a sorted matrix for a particular value.\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003eBinary GCD\u003c/td\u003e\n\u003ctd\u003e\u003ca href=\"http://www.keithschwarz.com/interesting/code/?dir=binary-gcd\"\u003e(link)\u003c/a\u003e\u003c/td\u003e\n\u003ctd\u003e4‑23‑2011\u003c/td\u003e\n\u003ctd\u003eScheme\u003c/td\u003e\n\u003ctd\u003eAn implementation of the \u003ca href=\"https://en.wikipedia.org/wiki/Binary_GCD_algorithm\"\u003ebinary GCD algorithm\u003c/a\u003e for computing greatest common divisors of nonnegative integers.\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003eKnuth-Morris-Pratt Algorithm\u003c/td\u003e\n\u003ctd\u003e\u003ca href=\"http://www.keithschwarz.com/interesting/code/?dir=knuth-morris-pratt\"\u003e(link)\u003c/a\u003e\u003c/td\u003e\n\u003ctd\u003e5‑3‑2011\u003c/td\u003e\n\u003ctd\u003ePython\u003c/td\u003e\n\u003ctd\u003eAn implementation of the \u003ca href=\"https://en.wikipedia.org/wiki/Knuth%E2%80%93Morris%E2%80%93Pratt_algorithm\"\u003eKnuth-Morris-Pratt algorithm\u003c/a\u003e for fast string matching.\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003eKadane’s Algorithm\u003c/td\u003e\n\u003ctd\u003e\u003ca href=\"http://www.keithschwarz.com/interesting/code/?dir=kadane\"\u003e(link)\u003c/a\u003e\u003c/td\u003e\n\u003ctd\u003e5‑7‑2011\u003c/td\u003e\n\u003ctd\u003eC++\u003c/td\u003e\n\u003ctd\u003eAn implementation of Kadane’s algorithm for solving the \u003ca href=\"https://en.wikipedia.org/wiki/Maximum_subarray_problem\"\u003emaximum-weight subarray problem\u003c/a\u003e.\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003eKaratsuba’s Algorithm\u003c/td\u003e\n\u003ctd\u003e\u003ca href=\"http://www.keithschwarz.com/interesting/code/?dir=karatsuba\"\u003e(link)\u003c/a\u003e\u003c/td\u003e\n\u003ctd\u003e8‑15‑2011\u003c/td\u003e\n\u003ctd\u003ePython\u003c/td\u003e\n\u003ctd\u003eAn implementation of \u003ca href=\"https://en.wikipedia.org/wiki/Karatsuba_algorithm\"\u003eKaratsuba’s algorithm\u003c/a\u003e for fast integer multiplication.\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003eMin-Stack\u003c/td\u003e\n\u003ctd\u003e\u003ca href=\"http://www.keithschwarz.com/interesting/code/?dir=min-stack\"\u003e(link)\u003c/a\u003e\u003c/td\u003e\n\u003ctd\u003e8‑15‑2011\u003c/td\u003e\n\u003ctd\u003eC++\u003c/td\u003e\n\u003ctd\u003eAn implementation of a \u003ca href=\"https://en.wikipedia.org/wiki/Stack_(data_structure)\"\u003eLIFO stack\u003c/a\u003e that supports O(1) push, pop, and find-minimum.\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003eRandom Bag\u003c/td\u003e\n\u003ctd\u003e\u003ca href=\"http://www.keithschwarz.com/interesting/code/?dir=random-bag\"\u003e(link)\u003c/a\u003e\u003c/td\u003e\n\u003ctd\u003e8‑15‑2011\u003c/td\u003e\n\u003ctd\u003ePython\u003c/td\u003e\n\u003ctd\u003eA data structure that supports insertion and removal of a uniformly-random element.\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003eMin-Queue\u003c/td\u003e\n\u003ctd\u003e\u003ca href=\"http://www.keithschwarz.com/interesting/code/?dir=min-queue\"\u003e(link)\u003c/a\u003e\u003c/td\u003e\n\u003ctd\u003e8‑15‑2011\u003c/td\u003e\n\u003ctd\u003eC++\u003c/td\u003e\n\u003ctd\u003eAn implementation of a \u003ca href=\"https://en.wikipedia.org/wiki/Queue_(data_structure)\"\u003eFIFO queue\u003c/a\u003e that supports O(1) push, pop, and find-minimum.\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003eLights-Out Solver\u003c/td\u003e\n\u003ctd\u003e\u003ca href=\"http://www.keithschwarz.com/interesting/code/?dir=lights-out\"\u003e(link)\u003c/a\u003e\u003c/td\u003e\n\u003ctd\u003e8‑29‑2011\u003c/td\u003e\n\u003ctd\u003eC++\u003c/td\u003e\n\u003ctd\u003eA solver for the game \u003ca href=\"https://en.wikipedia.org/wiki/Lights_Out_(game)\"\u003eLights Out\u003c/a\u003e using \u003ca href=\"https://en.wikipedia.org/wiki/Gaussian_elimination\"\u003eGaussian elimination\u003c/a\u003e over \u003ca href=\"https://en.wikipedia.org/wiki/GF(2)\"\u003eGF(2)\u003c/a\u003e.\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003eMaximum Single-Sell Profit\u003c/td\u003e\n\u003ctd\u003e\u003ca href=\"http://www.keithschwarz.com/interesting/code/?dir=single-sell-profit\"\u003e(link)\u003c/a\u003e\u003c/td\u003e\n\u003ctd\u003e11‑9‑2011\u003c/td\u003e\n\u003ctd\u003ePython\u003c/td\u003e\n\u003ctd\u003eFour algorithms for the \u003ca href=\"http://stackoverflow.com/q/7086464/501557\"\u003emaximum single-sell profit problem\u003c/a\u003e, each showing off a different algorithmic technique.\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003eGeneralized Kadane’s Algorithm\u003c/td\u003e\n\u003ctd\u003e\u003ca href=\"http://www.keithschwarz.com/interesting/code/?dir=generalized-kadane\"\u003e(link)\u003c/a\u003e\u003c/td\u003e\n\u003ctd\u003e11‑10‑2011\u003c/td\u003e\n\u003ctd\u003eC++\u003c/td\u003e\n\u003ctd\u003eA generalization of \u003ca href=\"https://en.wikipedia.org/wiki/Maximum_subarray_problem\"\u003eKadane’s algorithm\u003c/a\u003e for solving the maximum subarray problem subject to a \u003ca href=\"http://stackoverflow.com/q/7861387/501557\"\u003elength restriction\u003c/a\u003e.\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003eLongest Range\u003c/td\u003e\n\u003ctd\u003e\u003ca href=\"http://www.keithschwarz.com/interesting/code/?dir=longest-range\"\u003e(link)\u003c/a\u003e\u003c/td\u003e\n\u003ctd\u003e11‑19‑2011\u003c/td\u003e\n\u003ctd\u003eJava\u003c/td\u003e\n\u003ctd\u003eAn algorithm for solving the \u003ca href=\"http://stackoverflow.com/q/5415305/501557\"\u003elongest contiguous range\u003c/a\u003e problem.\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003eEgyptian Fractions\u003c/td\u003e\n\u003ctd\u003e\u003ca href=\"http://www.keithschwarz.com/interesting/code/?dir=egyptian-fraction\"\u003e(link)\u003c/a\u003e\u003c/td\u003e\n\u003ctd\u003e11‑20‑2011\u003c/td\u003e\n\u003ctd\u003ePython\u003c/td\u003e\n\u003ctd\u003eAn implementation of the \u003ca href=\"https://en.wikipedia.org/wiki/Greedy_algorithm_for_Egyptian_fractions\"\u003egreedy algorithm\u003c/a\u003e for finding \u003ca href=\"https://en.wikipedia.org/wiki/Egyptian_fraction\"\u003eEgyptian fractions\u003c/a\u003e.\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003eLL(1) Parser Generator\u003c/td\u003e\n\u003ctd\u003e\u003ca href=\"http://www.keithschwarz.com/interesting/code/?dir=ll1\"\u003e(link)\u003c/a\u003e\u003c/td\u003e\n\u003ctd\u003e11‑21‑2011\u003c/td\u003e\n\u003ctd\u003eJava\u003c/td\u003e\n\u003ctd\u003eAn \u003ca href=\"https://en.wikipedia.org/wiki/LL_parser\"\u003eLL(1) parser generator\u003c/a\u003e.\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003eLR(0) Parser Generator\u003c/td\u003e\n\u003ctd\u003e\u003ca href=\"http://www.keithschwarz.com/interesting/code/?dir=lr0\"\u003e(link)\u003c/a\u003e\u003c/td\u003e\n\u003ctd\u003e11‑23‑2011\u003c/td\u003e\n\u003ctd\u003eJava\u003c/td\u003e\n\u003ctd\u003eAn \u003ca href=\"https://en.wikipedia.org/wiki/LR_parser\"\u003eLR(0) parser generator\u003c/a\u003e.\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003eWord Ladders\u003c/td\u003e\n\u003ctd\u003e\u003ca href=\"http://www.keithschwarz.com/interesting/code/?dir=word-ladder\"\u003e(link)\u003c/a\u003e\u003c/td\u003e\n\u003ctd\u003e11‑27‑2011\u003c/td\u003e\n\u003ctd\u003eJavaScript\u003c/td\u003e\n\u003ctd\u003eA program for finding \u003ca href=\"https://en.wikipedia.org/wiki/Word_ladder\"\u003eword ladders\u003c/a\u003e between two words.\u003c/td\u003e\n\u003c/tr\u003e\n\u003c/tbody\u003e\n\u003c/table\u003e\n\u003cp\u003e（全文完）\u003c/p\u003e\n\u003cdiv style=\"margin-top: 15px; font-size: 16px;color: #cc0000;\"\u003e\n\u003cp align=\"center\"\u003e\u003cstrong\u003e（转载本站文章请注明作者和出处 \u003ca href=\"https://coolshell.cn/\"\u003e酷 壳 – CoolShell\u003c/a\u003e ，请勿用于任何商业用途）\u003c/strong\u003e\u003c/p\u003e\n\u003c/div\u003e\n\u003cdiv class=\"wp_rp_wrap  wp_rp_vertical_m\" id=\"wp_rp_first\"\u003e\u003cdiv class=\"wp_rp_content\"\u003e\u003ch3 class=\"related_post_title\"\u003e相关文章\u003c/h3\u003e\u003cul class=\"related_post wp_rp\"\u003e\u003cli\u003e\u003ca href=\"https://coolshell.cn/articles/12052.html\" class=\"wp_rp_thumbnail\"\u003e\u003cimg src=\"https://coolshell.cn/wp-content/plugins/wordpress-23-related-posts-plugin/static/thumbs/29.jpg\" alt=\"Leetcode 编程训练\" width=\"150\" height=\"150\"/\u003e\u003c/a\u003e\u003ca href=\"https://coolshell.cn/articles/12052.html\" class=\"wp_rp_title\"\u003eLeetcode 编程训练\u003c/a\u003e\u003c/li\u003e\u003cli\u003e\u003ca href=\"https://coolshell.cn/articles/4220.html\" class=\"wp_rp_thumbnail\"\u003e\u003cimg src=\"https://coolshell.cn/wp-content/plugins/wordpress-23-related-posts-plugin/static/thumbs/0.jpg\" alt=\"一些有意思的文章和资源\" width=\"150\" height=\"150\"/\u003e\u003c/a\u003e\u003ca href=\"https://coolshell.cn/articles/4220.html\" class=\"wp_rp_title\"\u003e一些有意思的文章和资源\u003c/a\u003e\u003c/li\u003e\u003cli\u003e\u003ca href=\"https://coolshell.cn/articles/9886.html\" class=\"wp_rp_thumbnail\"\u003e\u003cimg src=\"https://coolshell.cn/wp-content/plugins/wordpress-23-related-posts-plugin/static/thumbs/8.jpg\" alt=\"二叉树迭代器算法\" width=\"150\" height=\"150\"/\u003e\u003c/a\u003e\u003ca href=\"https://coolshell.cn/articles/9886.html\" class=\"wp_rp_title\"\u003e二叉树迭代器算法\u003c/a\u003e\u003c/li\u003e\u003cli\u003e\u003ca href=\"https://coolshell.cn/articles/8239.html\" class=\"wp_rp_thumbnail\"\u003e\u003cimg src=\"https://coolshell.cn/wp-content/uploads/2012/09/lock_free_bicycle-150x150.jpg\" alt=\"无锁队列的实现\" width=\"150\" height=\"150\"/\u003e\u003c/a\u003e\u003ca href=\"https://coolshell.cn/articles/8239.html\" class=\"wp_rp_title\"\u003e无锁队列的实现\u003c/a\u003e\u003c/li\u003e\u003cli\u003e\u003ca href=\"https://coolshell.cn/articles/4671.html\" class=\"wp_rp_thumbnail\"\u003e\u003cimg src=\"https://coolshell.cn/wp-content/plugins/wordpress-23-related-posts-plugin/static/thumbs/11.jpg\" alt=\"可视化的数据结构和算法\" width=\"150\" height=\"150\"/\u003e\u003c/a\u003e\u003ca href=\"https://coolshell.cn/articles/4671.html\" class=\"wp_rp_title\"\u003e可视化的数据结构和算法\u003c/a\u003e\u003c/li\u003e\u003cli\u003e\u003ca href=\"https://coolshell.cn/articles/3933.html\" class=\"wp_rp_thumbnail\"\u003e\u003cimg src=\"https://coolshell.cn/wp-content/plugins/wordpress-23-related-posts-plugin/static/thumbs/23.jpg\" alt=\"可视化的排序过程\" width=\"150\" height=\"150\"/\u003e\u003c/a\u003e\u003ca href=\"https://coolshell.cn/articles/3933.html\" class=\"wp_rp_title\"\u003e可视化的排序过程\u003c/a\u003e\u003c/li\u003e\u003c/ul\u003e\u003c/div\u003e\u003c/div\u003e\n\u003cdiv id=\"post-ratings-6010\" class=\"post-ratings\" itemscope=\"\" itemtype=\"https://schema.org/Article\" data-nonce=\"e48dcec80c\"\u003e\u003cimg id=\"rating_6010_1\" src=\"https://coolshell.cn/wp-content/plugins/wp-postratings/images/stars_crystal/rating_on.gif\" alt=\"好烂啊\" title=\"好烂啊\" onmouseover=\"if (!window.__cfRLUnblockHandlers) return false; current_rating(6010, 1, \u0026#39;好烂啊\u0026#39;);\" onmouseout=\"if (!window.__cfRLUnblockHandlers) return false; ratings_off(4.3, 5, 0);\" onclick=\"if (!window.__cfRLUnblockHandlers) return false; rate_post();\" onkeypress=\"if (!window.__cfRLUnblockHandlers) return false; rate_post();\" style=\"cursor: pointer; border: 0px;\" data-cf-modified-53906f568649798e7b484dfc-=\"\"/\u003e\u003cimg id=\"rating_6010_2\" src=\"https://coolshell.cn/wp-content/plugins/wp-postratings/images/stars_crystal/rating_on.gif\" alt=\"有点差\" title=\"有点差\" onmouseover=\"if (!window.__cfRLUnblockHandlers) return false; current_rating(6010, 2, \u0026#39;有点差\u0026#39;);\" onmouseout=\"if (!window.__cfRLUnblockHandlers) return false; ratings_off(4.3, 5, 0);\" onclick=\"if (!window.__cfRLUnblockHandlers) return false; rate_post();\" onkeypress=\"if (!window.__cfRLUnblockHandlers) return false; rate_post();\" style=\"cursor: pointer; border: 0px;\" data-cf-modified-53906f568649798e7b484dfc-=\"\"/\u003e\u003cimg id=\"rating_6010_3\" src=\"https://coolshell.cn/wp-content/plugins/wp-postratings/images/stars_crystal/rating_on.gif\" alt=\"凑合看看\" title=\"凑合看看\" onmouseover=\"if (!window.__cfRLUnblockHandlers) return false; current_rating(6010, 3, \u0026#39;凑合看看\u0026#39;);\" onmouseout=\"if (!window.__cfRLUnblockHandlers) return false; ratings_off(4.3, 5, 0);\" onclick=\"if (!window.__cfRLUnblockHandlers) return false; rate_post();\" onkeypress=\"if (!window.__cfRLUnblockHandlers) return false; rate_post();\" style=\"cursor: pointer; border: 0px;\" data-cf-modified-53906f568649798e7b484dfc-=\"\"/\u003e\u003cimg id=\"rating_6010_4\" src=\"https://coolshell.cn/wp-content/plugins/wp-postratings/images/stars_crystal/rating_on.gif\" alt=\"还不错\" title=\"还不错\" onmouseover=\"if (!window.__cfRLUnblockHandlers) return false; current_rating(6010, 4, \u0026#39;还不错\u0026#39;);\" onmouseout=\"if (!window.__cfRLUnblockHandlers) return false; ratings_off(4.3, 5, 0);\" onclick=\"if (!window.__cfRLUnblockHandlers) return false; rate_post();\" onkeypress=\"if (!window.__cfRLUnblockHandlers) return false; rate_post();\" style=\"cursor: pointer; border: 0px;\" data-cf-modified-53906f568649798e7b484dfc-=\"\"/\u003e\u003cimg id=\"rating_6010_5\" src=\"https://coolshell.cn/wp-content/plugins/wp-postratings/images/stars_crystal/rating_half.gif\" alt=\"很精彩\" title=\"很精彩\" onmouseover=\"if (!window.__cfRLUnblockHandlers) return false; current_rating(6010, 5, \u0026#39;很精彩\u0026#39;);\" onmouseout=\"if (!window.__cfRLUnblockHandlers) return false; ratings_off(4.3, 5, 0);\" onclick=\"if (!window.__cfRLUnblockHandlers) return false; rate_post();\" onkeypress=\"if (!window.__cfRLUnblockHandlers) return false; rate_post();\" style=\"cursor: pointer; border: 0px;\" data-cf-modified-53906f568649798e7b484dfc-=\"\"/\u003e (\u003cstrong\u003e26\u003c/strong\u003e 人打了分，平均分： \u003cstrong\u003e4.27\u003c/strong\u003e )\u003cbr/\u003e\u003cspan class=\"post-ratings-text\" id=\"ratings_6010_text\"\u003e\u003c/span\u003e\u003cmeta itemprop=\"name\" content=\"一些有意思的算法代码\"/\u003e\u003cmeta itemprop=\"headline\" content=\"一些有意思的算法代码\"/\u003e\u003cmeta itemprop=\"description\" content=\"Keith Schwarz是一个斯坦福大学计算机科学系的讲师。他对编程充满了热情。他的主页上他自己正在实现各种各样的有意思的算法和数据结构，http://www.keithschwarz.com/interesting/， 目前这个网页上有88个（见下面的列表），但这位大哥要干135个，你可以看看他的To-Do List。\n\n从这个列表上，我们可以看到，他从去年7月份就在自己实现这些东西了，我...\"/\u003e\u003cmeta itemprop=\"datePublished\" content=\"2011-11-29T11:11:07+08:00\"/\u003e\u003cmeta itemprop=\"dateModified\" content=\"2011-11-29T12:32:33+08:00\"/\u003e\u003cmeta itemprop=\"url\" content=\"https://coolshell.cn/articles/6010.html\"/\u003e\u003cmeta itemprop=\"author\" content=\"陈皓\"/\u003e\u003cmeta itemprop=\"mainEntityOfPage\" content=\"https://coolshell.cn/articles/6010.html\"/\u003e\u003cdiv style=\"display: none;\" itemprop=\"publisher\" itemscope=\"\" itemtype=\"https://schema.org/Organization\"\u003e\u003cmeta itemprop=\"name\" content=\"酷 壳 - CoolShell\"/\u003e\u003cmeta itemprop=\"url\" content=\"https://coolshell.cn\"/\u003e\u003cdiv itemprop=\"logo\" itemscope=\"\" itemtype=\"https://schema.org/ImageObject\"\u003e\u003cmeta itemprop=\"url\" content=\"\"/\u003e\u003c/div\u003e\u003c/div\u003e\u003cdiv style=\"display: none;\" itemprop=\"aggregateRating\" itemscope=\"\" itemtype=\"https://schema.org/AggregateRating\"\u003e\u003cmeta itemprop=\"bestRating\" content=\"5\"/\u003e\u003cmeta itemprop=\"worstRating\" content=\"1\"/\u003e\u003cmeta itemprop=\"ratingValue\" content=\"4.27\"/\u003e\u003cmeta itemprop=\"ratingCount\" content=\"26\"/\u003e\u003c/div\u003e\u003c/div\u003e\u003cdiv id=\"post-ratings-6010-loading\" class=\"post-ratings-loading\"\u003e\u003cimg src=\"https://coolshell.cn/wp-content/plugins/wp-postratings/images/loading.gif\" width=\"16\" height=\"16\" class=\"post-ratings-image\"/\u003eLoading...\u003c/div\u003e\n\u003c/div\u003e",
  "Date": "2011-11-29T11:11:07+08:00",
  "Author": "陈皓"
}