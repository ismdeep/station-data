{
  "Source": "coolshell.cn",
  "Title": "再谈javascript面向对象编程",
  "Link": "https://coolshell.cn/articles/6668.html",
  "Content": "\u003cdiv class=\"entry-content\"\u003e\n\u003cp\u003e\u003cscript async=\"\" src=\"https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3415450859608158\" crossorigin=\"anonymous\" type=\"3e802b636808d2dec89e633e-text/javascript\"\u003e\u003c/script\u003e\u003cstrong\u003e前言:\u003c/strong\u003e虽有陈皓\u003ca href=\"https://coolshell.cn/articles/6441.html\"\u003e《Javascript 面向对象编程》\u003c/a\u003e珠玉在前，但是我还是忍不住再画蛇添足的补上一篇文章，主要是因为javascript这门语言魅力。另外这篇文章是一篇入门文章，我也是才开始学习Javascript，有一点心得，才想写一篇这样文章，文章中难免有错误的地方，还请各位不吝吐槽指正\u003c/p\u003e\n\u003cdiv id=\"ez-toc-container\" class=\"ez-toc-v2_0_48 counter-hierarchy ez-toc-counter ez-toc-grey ez-toc-container-direction\"\u003e\n\u003cdiv class=\"ez-toc-title-container\"\u003e\n\u003cp class=\"ez-toc-title\"\u003e目录\u003c/p\u003e\n\u003cspan class=\"ez-toc-title-toggle\"\u003e\u003c/span\u003e\u003c/div\u003e\n\u003cnav\u003e\u003cul class=\"ez-toc-list ez-toc-list-level-1 \"\u003e\u003cli class=\"ez-toc-page-1 ez-toc-heading-level-4\"\u003e\u003ca class=\"ez-toc-link ez-toc-heading-1\" href=\"#%E5%90%90%E6%A7%BDJavascript\" title=\"吐槽Javascript\"\u003e吐槽Javascript\u003c/a\u003e\u003c/li\u003e\u003cli class=\"ez-toc-page-1 ez-toc-heading-level-4\"\u003e\u003ca class=\"ez-toc-link ez-toc-heading-2\" href=\"#_proto_%E6%88%90%E5%91%98\" title=\"__proto__成员\"\u003e__proto__成员\u003c/a\u003e\u003c/li\u003e\u003cli class=\"ez-toc-page-1 ez-toc-heading-level-4\"\u003e\u003ca class=\"ez-toc-link ez-toc-heading-3\" href=\"#%E5%87%BD%E6%95%B0%E5%AF%B9%E8%B1%A1prototype%E6%88%90%E5%91%98\" title=\"函数对象prototype成员\"\u003e函数对象prototype成员\u003c/a\u003e\u003c/li\u003e\u003cli class=\"ez-toc-page-1 ez-toc-heading-level-4\"\u003e\u003ca class=\"ez-toc-link ez-toc-heading-4\" href=\"#new_%E6%93%8D%E4%BD%9C%E7%AC%A6\" title=\"new 操作符\"\u003enew 操作符\u003c/a\u003e\u003c/li\u003e\u003cli class=\"ez-toc-page-1 ez-toc-heading-level-4\"\u003e\u003ca class=\"ez-toc-link ez-toc-heading-5\" href=\"#Pseudoclassical_%E7%BB%A7%E6%89%BF\" title=\"Pseudoclassical 继承\"\u003ePseudoclassical 继承\u003c/a\u003e\u003c/li\u003e\u003cli class=\"ez-toc-page-1 ez-toc-heading-level-4\"\u003e\u003ca class=\"ez-toc-link ez-toc-heading-6\" href=\"#Prototypal%E7%BB%A7%E6%89%BF\" title=\"Prototypal继承\"\u003ePrototypal继承\u003c/a\u003e\u003c/li\u003e\u003cli class=\"ez-toc-page-1 ez-toc-heading-level-4\"\u003e\u003ca class=\"ez-toc-link ez-toc-heading-7\" href=\"#%E5%8F%82%E8%80%83\" title=\"参考:\"\u003e参考:\u003c/a\u003e\u003c/li\u003e\u003cli class=\"ez-toc-page-1 ez-toc-heading-level-4\"\u003e\u003ca class=\"ez-toc-link ez-toc-heading-8\" href=\"#%E9%A2%98%E5%A4%96%E8%AF%9D%EF%BC%9A\" title=\"题外话：\"\u003e题外话：\u003c/a\u003e\u003c/li\u003e\u003c/ul\u003e\u003c/nav\u003e\u003c/div\u003e\n\u003ch4\u003e\u003cspan class=\"ez-toc-section\" id=\"%E5%90%90%E6%A7%BDJavascript\"\u003e\u003c/span\u003e\u003cstrong\u003e\u003cspan style=\"color: #008000\"\u003e吐槽Javascript\u003c/span\u003e\u003c/strong\u003e\u003cspan class=\"ez-toc-section-end\"\u003e\u003c/span\u003e\u003c/h4\u003e\n\u003cp\u003e初次接触Javascript，这门语言的确会让很多正规军感到诸多的不适，这种不适来自于Javascript的语法的简练和不严谨，这种不适也来自Javascript这个悲催的名称，我在想网景公司的Javascript设计者在给他起名称那天一定是脑壳进水了,让Javascript这么多年来受了这么多不白之冤，人们都认为他是Java的附属物，一个WEB玩具语言。因此才会有些人会对Javascript不屑，认为Javascript不是一门真正的语言，但是这此他们真的错了。Javascript不仅是一门语言，是一门真真正正的语言，而且他还是一门里程碑式的语言，他独创多种新的编程模式原型继承，闭包（\u003cstrong\u003e作者注：闭包不是JS首创，应该Scheme首创，prototypal inheritance 和 dynamic objects 是self语言首创，Javascript的首创并不精彩,谢谢网友的指正。\u003c/strong\u003e），对后来的动态语言产生了巨大的影响。做为当今最流行的语言（没有之一），看看git上提交的最多的语言类型就能明白。随着HTML5的登场，浏览器将在个人电脑上将大显身手，完全有替换OS的趋势的时候，Javascript做为浏览器上的一门唯一真真的语言，如同C之于 unix/linux，java之于JVM，Cobol之于MainFrame，我们也需要来重新的认真地认识和审视这门语言。另外Javascript的正式名称是：ECMAScript，这个名字明显比Javascript帅太多了！\u003cbr/\u003e\n\u003cspan id=\"more-6668\"\u003e\u003c/span\u003e\u003cbr/\u003e\n言归正传，我们切入主题——Javascript的面向对象编程。要谈Javascript的面向对象编程，我们第一步要做的事情就是忘记我们所学的面向对象编程。传统C++或Java的面向对象思维来学习Javascript的面向对象会给你带来不少困惑，让我们先忘记我们所学的，从新开始学习这门特殊的面向对象编程。既然是OO编程，要如何来理解OO编程呢，记得以前学C++，学了很久都不入门，后来有幸读了《Inside The C++ Object Model》这本大作，顿时豁然开朗，因此本文也将以对象模型的方式来探讨的Javascript的OO编程。因为Javascript 对象模型的特殊性，所以使得Javascript的继承和传统的继承非常不一样，同时也因为Javascript里面没有类，这意味着Javascript里面没有extends,implements。那么Javascript到底是如何来实现OO编程的呢？好吧，让我们开始吧，一起在Javascript的OO世界里来一次漫游\u003c/p\u003e\n\u003cp\u003e首先，我们需要先看看Javascript如何定义一个对象。下面是我们的一个对象定义：\u003c/p\u003e\n\u003cp\u003e[javascript]\u003cbr/\u003e\nvar o = {};\u003cbr/\u003e\n[/javascript]\u003c/p\u003e\n\u003cp\u003e还可以这样定义一个对象\u003c/p\u003e\n\u003cp\u003e[javascript]\u003cbr/\u003e\nfunction f() {\u003cbr/\u003e\n}\u003cbr/\u003e\n[/javascript]\u003c/p\u003e\n\u003cp\u003e对，你们没有看错，在Javascript里面，函数也是对象。\u003cbr/\u003e\n当然还可以\u003c/p\u003e\n\u003cp\u003e[javascript]\u003cbr/\u003e\nvar array1= [ 1,2,3];\u003cbr/\u003e\n[/javascript]\u003c/p\u003e\n\u003cp\u003e数组也是一个对象。\u003cbr/\u003e\n其他关于对象的基本的概念的描述，还是请各位亲们参见陈皓\u003ca href=\"https://coolshell.cn/articles/6441.html\"\u003e《Javascript 面向对象编程》\u003c/a\u003e文章。\u003cbr/\u003e\n对象都有了，唯一没有的就是class，因为在Javascript里面是没有class关键字的，算好还有function，function的存在让我们可以变通的定义类，在扩展这个主题前，我们还需要了解一个Javascript对象最重要的属性，\u003cstrong\u003e__proto__\u003c/strong\u003e成员。\u003c/p\u003e\n\u003ch4\u003e\u003cspan class=\"ez-toc-section\" id=\"_proto_%E6%88%90%E5%91%98\"\u003e\u003c/span\u003e\u003cstrong\u003e\u003cspan style=\"color: #008000\"\u003e__proto__成员\u003c/span\u003e\u003c/strong\u003e\u003cspan class=\"ez-toc-section-end\"\u003e\u003c/span\u003e\u003c/h4\u003e\n\u003cp\u003e严格的说这个成员不应该叫这个名字，__proto__是Firefox中的称呼，__proto__只有在Firefox浏览器中才能被访问到。\u003cstrong\u003e做为一个对象，当你访问其中的一个成员或方法的时候，如果这个对象中没有这个方法或成员，那么Javascript引擎将会访问这个对象的__proto__成员所指向的另外的一个对象，并在那个对象中查找指定的方法或成员，如果不能找到，那就会继续通过那个对象的__proto__成员指向的对象进行递归查找，直到这个链表结束\u003c/strong\u003e。\u003cbr/\u003e\n好了，让我们举一个例子。\u003cbr/\u003e\n比如上上面定义的数组对象array1。当我们创建出array1这个对象的时候，array1实际在Javascript引擎中的对象模型如下：\u003cbr/\u003e\n\u003cimg decoding=\"async\" class=\"aligncenter size-full wp-image-6675\" src=\"https://coolshell.cn/wp-content/uploads/2012/02/joo_1.png\" alt=\"\" width=\"416\" height=\"208\" srcset=\"https://coolshell.cn/wp-content/uploads/2012/02/joo_1.png 416w, https://coolshell.cn/wp-content/uploads/2012/02/joo_1-300x150.png 300w\" sizes=\"(max-width: 416px) 100vw, 416px\"/\u003e\u003cbr/\u003e\narray1对象具有一个length属性值为3，但是我们可以通过如下的方法来为array1增加元素：\u003c/p\u003e\n\u003cp\u003e[javascript]\u003cbr/\u003e\narray1.push(4);\u003cbr/\u003e\n[/javascript]\u003c/p\u003e\n\u003cp\u003epush这个方法来自于array1的__proto__成员指向对象的一个方法(Array.prototye.push())。正是因为所有的数组对象（通过[]来创建的）都包含有一个指向同一个具有push,reverse等方法对象(Array.prototype)的__proto__成员，才使得这些数组对象可以使用push,reverse等方法。\u003c/p\u003e\n\u003cp\u003e那么这个__proto__这个属性就相当于面向对象中的”has a”关系，这样的的话，只要我们有一个模板对象比如Array.prototype这个对象，然后把其他的对象__proto__属性指向这个对象的话就完成了一种继承的模式。不错！我们完全可以这么干。但是别高兴的太早，这个属性只在FireFox中有效，其他的浏览器虽然也有属性，但是不能通过__proto__来访问，只能通过getPrototypeOf方法进行访问，而且这个属性是只读的。看来我们要在Javascript实现继承并不是很容易的事情啊。\u003c/p\u003e\n\u003ch4\u003e\u003cspan class=\"ez-toc-section\" id=\"%E5%87%BD%E6%95%B0%E5%AF%B9%E8%B1%A1prototype%E6%88%90%E5%91%98\"\u003e\u003c/span\u003e\u003cstrong\u003e\u003cspan style=\"color: #008000\"\u003e函数对象prototype成员\u003c/span\u003e\u003c/strong\u003e\u003cspan class=\"ez-toc-section-end\"\u003e\u003c/span\u003e\u003c/h4\u003e\n\u003cp\u003e首先我们先来看一段函数prototype成员的定义，\u003c/p\u003e\n\u003cblockquote\u003e\u003cp\u003e\u003cstrong\u003eWhen a function object is created, it is given a prototype member which is an object containing a constructor member which is a reference to the function object\u003c/strong\u003e\u003cbr/\u003e\n当一个函数对象被创建时，这个函数对象就具有一个prototype成员，这个成员是一个对象，这个对象包含了一个构造子成员，这个构造子成员会指向这个函数对象。\u003c/p\u003e\u003c/blockquote\u003e\n\u003cp\u003e例如：\u003c/p\u003e\n\u003cp\u003e[javascript]\u003cbr/\u003e\nfunction Base() {\u003cbr/\u003e\nthis.id = \u0026#34;base\u0026#34;\u003cbr/\u003e\n}\u003cbr/\u003e\n[/javascript]\u003c/p\u003e\n\u003cp\u003eBase这个函数对象就具有一个prototype成员，关于构造子其实Base函数对象自身，为什么我们将这类函数称为构造子呢？原因是因为这类函数设计来和new 操作符一起使用的。为了和一般的函数对象有所区别，这类函数的首字母一般都大写。构造子的主要作用就是来创建一类相似的对象。\u003c/p\u003e\n\u003cp\u003e上面这段代码在Javascript引擎的对象模型是这样的\u003cbr/\u003e\n\u003cimg decoding=\"async\" loading=\"lazy\" class=\"aligncenter size-full wp-image-6678\" src=\"https://coolshell.cn/wp-content/uploads/2012/02/joo_2.png\" alt=\"\" width=\"382\" height=\"190\" srcset=\"https://coolshell.cn/wp-content/uploads/2012/02/joo_2.png 382w, https://coolshell.cn/wp-content/uploads/2012/02/joo_2-300x149.png 300w\" sizes=\"(max-width: 382px) 100vw, 382px\"/\u003e\u003c/p\u003e\n\u003ch4\u003e\u003cspan class=\"ez-toc-section\" id=\"new_%E6%93%8D%E4%BD%9C%E7%AC%A6\"\u003e\u003c/span\u003e\u003cstrong\u003e\u003cspan style=\"color: #008000\"\u003enew 操作符\u003c/span\u003e\u003c/strong\u003e\u003cspan class=\"ez-toc-section-end\"\u003e\u003c/span\u003e\u003c/h4\u003e\n\u003cp\u003e在有上面的基础概念的介绍之后，在加上new操作符，我们就能完成传统面向对象的class + new的方式创建对象，在Javascript中，我们将这类方式成为Pseudoclassical。\u003cbr/\u003e\n基于上面的例子，我们执行如下代码\u003c/p\u003e\n\u003cp\u003e[javascript]\u003cbr/\u003e\nvar obj = new Base();\u003cbr/\u003e\n[/javascript]\u003c/p\u003e\n\u003cp\u003e这样代码的结果是什么，我们在Javascript引擎中看到的对象模型是：\u003cbr/\u003e\n\u003cimg decoding=\"async\" loading=\"lazy\" class=\"aligncenter size-full wp-image-6680\" src=\"https://coolshell.cn/wp-content/uploads/2012/02/joo_3.png\" alt=\"\" width=\"403\" height=\"207\" srcset=\"https://coolshell.cn/wp-content/uploads/2012/02/joo_3.png 403w, https://coolshell.cn/wp-content/uploads/2012/02/joo_3-300x154.png 300w\" sizes=\"(max-width: 403px) 100vw, 403px\"/\u003e\u003c/p\u003e\n\u003cp\u003enew操作符具体干了什么呢?其实很简单，就干了三件事情。\u003c/p\u003e\n\u003cp\u003e[javascript]\u003cbr/\u003e\nvar obj = {};\u003cbr/\u003e\nobj.__proto__ = Base.prototype;\u003cbr/\u003e\nBase.call(obj);\u003cbr/\u003e\n[/javascript]\u003c/p\u003e\n\u003cp\u003e第一行，我们创建了一个空对象obj\u003cbr/\u003e\n第二行，我们将这个空对象的__proto__成员指向了Base函数对象prototype成员对象\u003cbr/\u003e\n第三行，我们将Base函数对象的this指针替换成obj，然后再调用Base函数，于是我们就给obj对象赋值了一个id成员变量，这个成员变量的值是”base”，关于call函数的用法，请参看陈皓\u003ca href=\"https://coolshell.cn/articles/6441.html\"\u003e《Javascript 面向对象编程》\u003c/a\u003e文章\u003cbr/\u003e\n如果我们给Base.prototype的对象添加一些函数会有什么效果呢？\u003cbr/\u003e\n例如代码如下：\u003c/p\u003e\n\u003cp\u003e[javascript]\u003cbr/\u003e\nBase.prototype.toString = function() {\u003cbr/\u003e\nreturn this.id;\u003cbr/\u003e\n}\u003cbr/\u003e\n[/javascript]\u003c/p\u003e\n\u003cp\u003e那么当我们使用new创建一个新对象的时候，根据__proto__的特性，toString这个方法也可以做新对象的方法被访问到。于是我们看到了：\u003cbr/\u003e\n\u003cstrong\u003e构造子中，我们来设置‘类’的成员变量（例如：例子中的id），构造子对象prototype中我们来设置‘类’的公共方法。于是通过函数对象和Javascript特有的__proto__与prototype成员及new操作符，模拟出类和类实例化的效果。\u003c/strong\u003e\u003c/p\u003e\n\u003ch4\u003e\u003cspan class=\"ez-toc-section\" id=\"Pseudoclassical_%E7%BB%A7%E6%89%BF\"\u003e\u003c/span\u003e\u003cstrong\u003e\u003cspan style=\"color: #008000\"\u003ePseudoclassical 继承\u003c/span\u003e\u003c/strong\u003e\u003cspan class=\"ez-toc-section-end\"\u003e\u003c/span\u003e\u003c/h4\u003e\n\u003cp\u003e我们模拟类，那么继承又该怎么做呢？其实很简单，我们只要将构造子的prototype指向父类即可。例如我们设计一个Derive 类。如下\u003c/p\u003e\n\u003cp\u003e[javascript]\u003cbr/\u003e\nfunction Derive(id) {\u003cbr/\u003e\nthis.id = id;\u003cbr/\u003e\n}\u003cbr/\u003e\nDerive.prototype = new Base();\u003cbr/\u003e\nDerive.prototype.test = function(id){\u003cbr/\u003e\nreturn this.id === id;\u003cbr/\u003e\n}\u003cbr/\u003e\nvar newObj = new Derive(\u0026#34;derive\u0026#34;);\u003cbr/\u003e\n[/javascript]\u003c/p\u003e\n\u003cp\u003e这段代码执行后的对象模型又是怎么样的呢？根据之前的推导，应该是如下的对象模型\u003cbr/\u003e\n\u003cimg decoding=\"async\" loading=\"lazy\" class=\"aligncenter size-full wp-image-6686\" src=\"https://coolshell.cn/wp-content/uploads/2012/02/joo_4.png\" alt=\"\" width=\"645\" height=\"216\" srcset=\"https://coolshell.cn/wp-content/uploads/2012/02/joo_4.png 645w, https://coolshell.cn/wp-content/uploads/2012/02/joo_4-300x100.png 300w\" sizes=\"(max-width: 645px) 100vw, 645px\"/\u003e\u003cbr/\u003e\n这样我们的newObj也继承了基类Base的toString方法，并且具有自身的成员id。关于这个对象模型是如何被推导出来的就留给各位同学了，参照前面的描述，推导这个对象模型应该不难。\u003cbr/\u003e\nPseudoclassical继承会让学过C++/Java的同学略微的感受到一点舒服，特别是new关键字，看到都特亲切，不过两者虽然相似，但是机理完全不同。当然不关什么样继承都是不能离不开__proto__成员的。\u003c/p\u003e\n\u003ch4\u003e\u003cspan class=\"ez-toc-section\" id=\"Prototypal%E7%BB%A7%E6%89%BF\"\u003e\u003c/span\u003e\u003cstrong\u003e\u003cspan style=\"color: #008000\"\u003ePrototypal继承\u003c/span\u003e\u003c/strong\u003e\u003cspan class=\"ez-toc-section-end\"\u003e\u003c/span\u003e\u003c/h4\u003e\n\u003cp\u003e这是Javascript的另外一种继承方式，这个继承也就是之前陈皓文章《Javascript 面向对象编程》中create函数，非常可惜的是这个是ECMAScript V5的标准，支持V5的浏览器目前看来也就是IE9，Chrome最新版本和Firefox。虽然看着多，但是做为IE6的重灾区的中国，我建议各位还是避免使用create函数。好在没有create函数之前，Javascript的使用者已经设计出了等同于这个函数的。例如：我们看看Douglas Crockford的object函数。\u003c/p\u003e\n\u003cp\u003e[javascript]\u003cbr/\u003e\nfunction object(old) {\u003cbr/\u003e\nfunction F() {};\u003cbr/\u003e\nF.prototype = old;\u003cbr/\u003e\nreturn new F();\u003cbr/\u003e\n}\u003cbr/\u003e\nvar newObj = object(oldObject);\u003cbr/\u003e\n[/javascript]\u003c/p\u003e\n\u003cp\u003e例如如下代码段\u003c/p\u003e\n\u003cp\u003e[javascript]\u003cbr/\u003e\nvar base ={\u003cbr/\u003e\nid:\u0026#34;base\u0026#34;,\u003cbr/\u003e\ntoString:function(){\u003cbr/\u003e\nreturn this.id;\u003cbr/\u003e\n}\u003cbr/\u003e\n};\u003cbr/\u003e\nvar derive = object(base);\u003cbr/\u003e\n[/javascript]\u003c/p\u003e\n\u003cp\u003e上面函数的执行后的对象模型是：\u003cbr/\u003e\n\u003cimg decoding=\"async\" loading=\"lazy\" class=\"aligncenter size-full wp-image-6688\" src=\"https://coolshell.cn/wp-content/uploads/2012/02/joo_5.png\" alt=\"\" width=\"451\" height=\"230\" srcset=\"https://coolshell.cn/wp-content/uploads/2012/02/joo_5.png 451w, https://coolshell.cn/wp-content/uploads/2012/02/joo_5-300x152.png 300w\" sizes=\"(max-width: 451px) 100vw, 451px\"/\u003e\u003cbr/\u003e\n如何形成这样的对象模型，原理也很简单，只要把object这个函数扩展一下，就能画出这个模型，怎么画留给读者自己去画吧。\u003cbr/\u003e\n这样的继承方式被称为原型继承。相对来说要比Pseudoclassical继承来的简单方便。ECMAScript V5正是因为这原因也才增加create函数，让开发者可以快速的实现原型继承。\u003cbr/\u003e\n上述两种继承方式是Javascript中最常用的继承方式。通过本文的讲解，你应该对Javascript的OO编程有了一些‘原理’级的了解了吧\u003c/p\u003e\n\u003ch4\u003e\u003cspan class=\"ez-toc-section\" id=\"%E5%8F%82%E8%80%83\"\u003e\u003c/span\u003e\u003cstrong\u003e\u003cspan style=\"color: #008000\"\u003e参考:\u003c/span\u003e\u003c/strong\u003e\u003cspan class=\"ez-toc-section-end\"\u003e\u003c/span\u003e\u003c/h4\u003e\n\u003cp\u003e\u003ca href=\"http://msdn.microsoft.com/en-us/scriptjunkie/ff852808\"\u003e《Prototypes and Inheritance in JavaScript Prototypes and Inheritance in JavaScript》\u003c/a\u003e\u003cbr/\u003e\n\u003ca href=\"http://yuiblog.com/blog/2006/11/27/video-crockford-advjs/\" target=\"_blank\"\u003eAdvance Javascript\u003c/a\u003e （Douglas Crockford 大神的视频，一定要看啊）\u003c/p\u003e\n\u003ch4\u003e\u003cspan class=\"ez-toc-section\" id=\"%E9%A2%98%E5%A4%96%E8%AF%9D%EF%BC%9A\"\u003e\u003c/span\u003e\u003cstrong\u003e\u003cspan style=\"color: #008000\"\u003e题外话：\u003c/span\u003e\u003c/strong\u003e\u003cspan class=\"ez-toc-section-end\"\u003e\u003c/span\u003e\u003c/h4\u003e\n\u003cp\u003eweb2.0后，web应用可谓飞速发展，如今在HTML5发布之际，浏览器的功能被大大强化，我感觉Browser远远在不是一个Browser那么简单了。记得C++之父曾经这样说过JAVA，JAVA不是跨平台，JAVA本身就是一个平台。如今的Browser也本身就是一个平台了，好在这个平台是基于标准的。如果Browser是平台，由于Browser安全沙箱的限制，个人电脑的资源被使用的很少，感觉Browser就是一个NC（Network Computer）？我们居然又回到了Sun最初提出的构想，Sun是不是太强大了些？\u003c/p\u003e\n\u003cdiv style=\"margin-top: 15px; font-size: 16px;color: #cc0000;\"\u003e\n\u003cp align=\"center\"\u003e\u003cstrong\u003e（转载本站文章请注明作者和出处 \u003ca href=\"https://coolshell.cn/\"\u003e酷 壳 – CoolShell\u003c/a\u003e ，请勿用于任何商业用途）\u003c/strong\u003e\u003c/p\u003e\n\u003c/div\u003e\n\u003cdiv class=\"wp_rp_wrap  wp_rp_vertical_m\" id=\"wp_rp_first\"\u003e\u003cdiv class=\"wp_rp_content\"\u003e\u003ch3 class=\"related_post_title\"\u003e相关文章\u003c/h3\u003e\u003cul class=\"related_post wp_rp\"\u003e\u003cli\u003e\u003ca href=\"https://coolshell.cn/articles/6731.html\" class=\"wp_rp_thumbnail\"\u003e\u003cimg src=\"https://coolshell.cn/wp-content/uploads/2012/03/closure-150x150.png\" alt=\"理解Javascript的闭包\" width=\"150\" height=\"150\"/\u003e\u003c/a\u003e\u003ca href=\"https://coolshell.cn/articles/6731.html\" class=\"wp_rp_title\"\u003e理解Javascript的闭包\u003c/a\u003e\u003c/li\u003e\u003cli\u003e\u003ca href=\"https://coolshell.cn/articles/6441.html\" class=\"wp_rp_thumbnail\"\u003e\u003cimg src=\"https://coolshell.cn/wp-content/plugins/wordpress-23-related-posts-plugin/static/thumbs/18.jpg\" alt=\"Javascript 面向对象编程\" width=\"150\" height=\"150\"/\u003e\u003c/a\u003e\u003ca href=\"https://coolshell.cn/articles/6441.html\" class=\"wp_rp_title\"\u003eJavascript 面向对象编程\u003c/a\u003e\u003c/li\u003e\u003cli\u003e\u003ca href=\"https://coolshell.cn/articles/5202.html\" class=\"wp_rp_thumbnail\"\u003e\u003cimg src=\"https://coolshell.cn/wp-content/plugins/wordpress-23-related-posts-plugin/static/thumbs/14.jpg\" alt=\"对象的消息模型\" width=\"150\" height=\"150\"/\u003e\u003c/a\u003e\u003ca href=\"https://coolshell.cn/articles/5202.html\" class=\"wp_rp_title\"\u003e对象的消息模型\u003c/a\u003e\u003c/li\u003e\u003cli\u003e\u003ca href=\"https://coolshell.cn/articles/18360.html\" class=\"wp_rp_thumbnail\"\u003e\u003cimg src=\"https://coolshell.cn/wp-content/uploads/2018/05/300x262-150x150.jpg\" alt=\"程序员练级攻略（2018)  与我的专栏\" width=\"150\" height=\"150\"/\u003e\u003c/a\u003e\u003ca href=\"https://coolshell.cn/articles/18360.html\" class=\"wp_rp_title\"\u003e程序员练级攻略（2018) 与我的专栏\u003c/a\u003e\u003c/li\u003e\u003cli\u003e\u003ca href=\"https://coolshell.cn/articles/17634.html\" class=\"wp_rp_thumbnail\"\u003e\u003cimg src=\"https://coolshell.cn/wp-content/uploads/2017/01/pretty-code-150x150.gif\" alt=\"Chrome开发者工具的小技巧\" width=\"150\" height=\"150\"/\u003e\u003c/a\u003e\u003ca href=\"https://coolshell.cn/articles/17634.html\" class=\"wp_rp_title\"\u003eChrome开发者工具的小技巧\u003c/a\u003e\u003c/li\u003e\u003cli\u003e\u003ca href=\"https://coolshell.cn/articles/17524.html\" class=\"wp_rp_thumbnail\"\u003e\u003cimg src=\"https://coolshell.cn/wp-content/uploads/2016/10/drawing-recursive-150x150.jpg\" alt=\"如何读懂并写出装逼的函数式代码\" width=\"150\" height=\"150\"/\u003e\u003c/a\u003e\u003ca href=\"https://coolshell.cn/articles/17524.html\" class=\"wp_rp_title\"\u003e如何读懂并写出装逼的函数式代码\u003c/a\u003e\u003c/li\u003e\u003c/ul\u003e\u003c/div\u003e\u003c/div\u003e\n\u003cdiv id=\"post-ratings-6668\" class=\"post-ratings\" itemscope=\"\" itemtype=\"https://schema.org/Article\" data-nonce=\"9d2b11aaea\"\u003e\u003cimg id=\"rating_6668_1\" src=\"https://coolshell.cn/wp-content/plugins/wp-postratings/images/stars_crystal/rating_on.gif\" alt=\"好烂啊\" title=\"好烂啊\" onmouseover=\"if (!window.__cfRLUnblockHandlers) return false; current_rating(6668, 1, \u0026#39;好烂啊\u0026#39;);\" onmouseout=\"if (!window.__cfRLUnblockHandlers) return false; ratings_off(3.7, 4, 0);\" onclick=\"if (!window.__cfRLUnblockHandlers) return false; rate_post();\" onkeypress=\"if (!window.__cfRLUnblockHandlers) return false; rate_post();\" style=\"cursor: pointer; border: 0px;\" data-cf-modified-3e802b636808d2dec89e633e-=\"\"/\u003e\u003cimg id=\"rating_6668_2\" src=\"https://coolshell.cn/wp-content/plugins/wp-postratings/images/stars_crystal/rating_on.gif\" alt=\"有点差\" title=\"有点差\" onmouseover=\"if (!window.__cfRLUnblockHandlers) return false; current_rating(6668, 2, \u0026#39;有点差\u0026#39;);\" onmouseout=\"if (!window.__cfRLUnblockHandlers) return false; ratings_off(3.7, 4, 0);\" onclick=\"if (!window.__cfRLUnblockHandlers) return false; rate_post();\" onkeypress=\"if (!window.__cfRLUnblockHandlers) return false; rate_post();\" style=\"cursor: pointer; border: 0px;\" data-cf-modified-3e802b636808d2dec89e633e-=\"\"/\u003e\u003cimg id=\"rating_6668_3\" src=\"https://coolshell.cn/wp-content/plugins/wp-postratings/images/stars_crystal/rating_on.gif\" alt=\"凑合看看\" title=\"凑合看看\" onmouseover=\"if (!window.__cfRLUnblockHandlers) return false; current_rating(6668, 3, \u0026#39;凑合看看\u0026#39;);\" onmouseout=\"if (!window.__cfRLUnblockHandlers) return false; ratings_off(3.7, 4, 0);\" onclick=\"if (!window.__cfRLUnblockHandlers) return false; rate_post();\" onkeypress=\"if (!window.__cfRLUnblockHandlers) return false; rate_post();\" style=\"cursor: pointer; border: 0px;\" data-cf-modified-3e802b636808d2dec89e633e-=\"\"/\u003e\u003cimg id=\"rating_6668_4\" src=\"https://coolshell.cn/wp-content/plugins/wp-postratings/images/stars_crystal/rating_half.gif\" alt=\"还不错\" title=\"还不错\" onmouseover=\"if (!window.__cfRLUnblockHandlers) return false; current_rating(6668, 4, \u0026#39;还不错\u0026#39;);\" onmouseout=\"if (!window.__cfRLUnblockHandlers) return false; ratings_off(3.7, 4, 0);\" onclick=\"if (!window.__cfRLUnblockHandlers) return false; rate_post();\" onkeypress=\"if (!window.__cfRLUnblockHandlers) return false; rate_post();\" style=\"cursor: pointer; border: 0px;\" data-cf-modified-3e802b636808d2dec89e633e-=\"\"/\u003e\u003cimg id=\"rating_6668_5\" src=\"https://coolshell.cn/wp-content/plugins/wp-postratings/images/stars_crystal/rating_off.gif\" alt=\"很精彩\" title=\"很精彩\" onmouseover=\"if (!window.__cfRLUnblockHandlers) return false; current_rating(6668, 5, \u0026#39;很精彩\u0026#39;);\" onmouseout=\"if (!window.__cfRLUnblockHandlers) return false; ratings_off(3.7, 4, 0);\" onclick=\"if (!window.__cfRLUnblockHandlers) return false; rate_post();\" onkeypress=\"if (!window.__cfRLUnblockHandlers) return false; rate_post();\" style=\"cursor: pointer; border: 0px;\" data-cf-modified-3e802b636808d2dec89e633e-=\"\"/\u003e (\u003cstrong\u003e20\u003c/strong\u003e 人打了分，平均分： \u003cstrong\u003e3.70\u003c/strong\u003e )\u003cbr/\u003e\u003cspan class=\"post-ratings-text\" id=\"ratings_6668_text\"\u003e\u003c/span\u003e\u003cmeta itemprop=\"name\" content=\"再谈javascript面向对象编程\"/\u003e\u003cmeta itemprop=\"headline\" content=\"再谈javascript面向对象编程\"/\u003e\u003cmeta itemprop=\"description\" content=\"前言:虽有陈皓《Javascript 面向对象编程》珠玉在前，但是我还是忍不住再画蛇添足的补上一篇文章，主要是因为javascript这门语言魅力。另外这篇文章是一篇入门文章，我也是才开始学习Javascript，有一点心得，才想写一篇这样文章，文章中难免有错误的地方，还请各位不吝吐槽指正\n吐槽Javascript\n初次接触Javascript，这门语言的确会让很多正规军感到诸多的不适，这种不...\"/\u003e\u003cmeta itemprop=\"datePublished\" content=\"2012-02-27T08:25:13+08:00\"/\u003e\u003cmeta itemprop=\"dateModified\" content=\"2012-02-27T15:36:51+08:00\"/\u003e\u003cmeta itemprop=\"url\" content=\"https://coolshell.cn/articles/6668.html\"/\u003e\u003cmeta itemprop=\"author\" content=\"Neo\"/\u003e\u003cmeta itemprop=\"mainEntityOfPage\" content=\"https://coolshell.cn/articles/6668.html\"/\u003e\u003cdiv style=\"display: none;\" itemprop=\"publisher\" itemscope=\"\" itemtype=\"https://schema.org/Organization\"\u003e\u003cmeta itemprop=\"name\" content=\"酷 壳 - CoolShell\"/\u003e\u003cmeta itemprop=\"url\" content=\"https://coolshell.cn\"/\u003e\u003cdiv itemprop=\"logo\" itemscope=\"\" itemtype=\"https://schema.org/ImageObject\"\u003e\u003cmeta itemprop=\"url\" content=\"\"/\u003e\u003c/div\u003e\u003c/div\u003e\u003cdiv style=\"display: none;\" itemprop=\"aggregateRating\" itemscope=\"\" itemtype=\"https://schema.org/AggregateRating\"\u003e\u003cmeta itemprop=\"bestRating\" content=\"5\"/\u003e\u003cmeta itemprop=\"worstRating\" content=\"1\"/\u003e\u003cmeta itemprop=\"ratingValue\" content=\"3.7\"/\u003e\u003cmeta itemprop=\"ratingCount\" content=\"20\"/\u003e\u003c/div\u003e\u003c/div\u003e\u003cdiv id=\"post-ratings-6668-loading\" class=\"post-ratings-loading\"\u003e\u003cimg src=\"https://coolshell.cn/wp-content/plugins/wp-postratings/images/loading.gif\" width=\"16\" height=\"16\" class=\"post-ratings-image\"/\u003eLoading...\u003c/div\u003e\n\u003c/div\u003e",
  "Date": "2012-02-27T08:25:13+08:00",
  "Author": "Neo"
}