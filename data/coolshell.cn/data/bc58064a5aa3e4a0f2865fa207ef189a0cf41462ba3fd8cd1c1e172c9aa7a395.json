{
  "Source": "coolshell.cn",
  "Title": "如此理解面向对象编程",
  "Link": "https://coolshell.cn/articles/8745.html",
  "Content": "\u003cdiv class=\"entry-content\"\u003e\n\u003cp\u003e\u003cscript async=\"\" src=\"https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3415450859608158\" crossorigin=\"anonymous\" type=\"88135cd553baf67b8ea329ac-text/javascript\"\u003e\u003c/script\u003e从Rob Pike 的 Google+上的一个推看到了一篇叫《\u003ca href=\"http://www.csis.pace.edu/~bergin/patterns/ppoop.html\" target=\"_blank\"\u003eUnderstanding Object Oriented Programming\u003c/a\u003e》的文章，我先把这篇文章简述一下，然后再说说老牌黑客Rob Pike的评论。\u003c/p\u003e\n\u003cp\u003e先看这篇教程是怎么来讲述OOP的。它先给了下面这个问题，这个问题需要输出一段关于操作系统的文字：假设Unix很不错，Windows很差。\u003c/p\u003e\n\u003cp\u003e这个把下面这段代码描述成是\u003cstrong\u003eHacker Solution\u003c/strong\u003e。（这帮人觉得下面这叫黑客？我估计这帮人真是没看过C语言的代码）\u003c/p\u003e\n\u003cpre data-enlighter-language=\"java\" class=\"EnlighterJSRAW\"\u003epublic class PrintOS\n{\n\tpublic static void main(final String[] args)\n\t{\n\t\tString osName = System.getProperty(\u0026#34;os.name\u0026#34;) ;\n\t\tif (osName.equals(\u0026#34;SunOS\u0026#34;) || osName.equals(\u0026#34;Linux\u0026#34;))\n\t\t{\n\t\t\tSystem.out.println(\u0026#34;This is a UNIX box and therefore good.\u0026#34;) ;\n\t\t}\n\t\telse if (osName.equals(\u0026#34;Windows NT\u0026#34;) || osName.equals(\u0026#34;Windows 95\u0026#34;))\n\t\t{\n\t\t\tSystem.out.println(\u0026#34;This is a Windows box and therefore bad.\u0026#34;) ;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tSystem.out.println(\u0026#34;This is not a box.\u0026#34;) ;\n\t\t}\n\t}\n}\u003c/pre\u003e\n\u003cp\u003e然后开始用面向对象的编程方式一步一步地进化这个代码。\u003c/p\u003e\n\u003cp\u003e先是以过程化的思路来重构之。\u003c/p\u003e\n\u003cp\u003e\u003cspan id=\"more-8745\"\u003e\u003c/span\u003e\u003c/p\u003e\n\u003cdiv id=\"ez-toc-container\" class=\"ez-toc-v2_0_48 counter-hierarchy ez-toc-counter ez-toc-grey ez-toc-container-direction\"\u003e\n\u003cdiv class=\"ez-toc-title-container\"\u003e\n\u003cp class=\"ez-toc-title\"\u003e目录\u003c/p\u003e\n\u003cspan class=\"ez-toc-title-toggle\"\u003e\u003c/span\u003e\u003c/div\u003e\n\u003cnav\u003e\u003cul class=\"ez-toc-list ez-toc-list-level-1 \"\u003e\u003cli class=\"ez-toc-page-1 ez-toc-heading-level-4\"\u003e\u003ca class=\"ez-toc-link ez-toc-heading-1\" href=\"#%E8%BF%87%E7%A8%8B%E5%8C%96%E7%9A%84%E6%96%B9%E6%A1%88\" title=\"过程化的方案\"\u003e过程化的方案\u003c/a\u003e\u003c/li\u003e\u003cli class=\"ez-toc-page-1 ez-toc-heading-level-4\"\u003e\u003ca class=\"ez-toc-link ez-toc-heading-2\" href=\"#%E5%B9%BC%E7%A8%9A%E7%9A%84%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E7%BC%96%E7%A8%8B\" title=\"幼稚的面向对象编程\"\u003e幼稚的面向对象编程\u003c/a\u003e\u003c/li\u003e\u003cli class=\"ez-toc-page-1 ez-toc-heading-level-4\"\u003e\u003ca class=\"ez-toc-link ez-toc-heading-3\" href=\"#OO%E5%A4%A7%E5%B8%88%E7%9A%84%E6%96%B9%E6%A1%88\" title=\"OO大师的方案\"\u003eOO大师的方案\u003c/a\u003e\u003c/li\u003e\u003cli class=\"ez-toc-page-1 ez-toc-heading-level-4\"\u003e\u003ca class=\"ez-toc-link ez-toc-heading-4\" href=\"#Rob_Pike%E7%9A%84%E8%AF%84%E8%AE%BA\" title=\"Rob Pike的评论\"\u003eRob Pike的评论\u003c/a\u003e\u003c/li\u003e\u003cli class=\"ez-toc-page-1 ez-toc-heading-level-4\"\u003e\u003ca class=\"ez-toc-link ez-toc-heading-5\" href=\"#%E6%88%91%E7%9A%84%E7%90%86%E8%A7%A3\" title=\"我的理解\"\u003e我的理解\u003c/a\u003e\u003c/li\u003e\u003c/ul\u003e\u003c/nav\u003e\u003c/div\u003e\n\u003ch4\u003e\u003cspan class=\"ez-toc-section\" id=\"%E8%BF%87%E7%A8%8B%E5%8C%96%E7%9A%84%E6%96%B9%E6%A1%88\"\u003e\u003c/span\u003e过程化的方案\u003cspan class=\"ez-toc-section-end\"\u003e\u003c/span\u003e\u003c/h4\u003e\n\u003cpre data-enlighter-language=\"java\" class=\"EnlighterJSRAW\"\u003epublic class PrintOS\n{\n\tprivate static String unixBox()\n\t{\n\t\treturn \u0026#34;This is a UNIX box and therefore good.\u0026#34; ;\n\t}\n\tprivate static String windowsBox()\n  \t{\n\t\treturn \u0026#34;This is a Windows box and therefore bad.\u0026#34; ;\n\t}\n\tprivate static String defaultBox()\n\t{\n\t\treturn \u0026#34;This is not a box.\u0026#34; ;\n\t}\n\tprivate static String getTheString(final String osName)\n\t{\n\t\tif (osName.equals(\u0026#34;SunOS\u0026#34;) || osName.equals(\u0026#34;Linux\u0026#34;))\n\t\t{\n\t\t\treturn unixBox() ;\n\t\t}\n\t\telse if (osName.equals(\u0026#34;Windows NT\u0026#34;) ||osName.equals(\u0026#34;Windows 95\u0026#34;))\n\t\t{\n\t\t\treturn windowsBox() ;\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn defaultBox() ;\n\t\t}\n  \t}\n\tpublic static void main(final String[] args)\n\t{\n\t\tSystem.out.println(getTheString(System.getProperty(\u0026#34;os.name\u0026#34;))) ;\n\t}\n}\u003c/pre\u003e\n\u003cp\u003e然后是一个幼稚的面向对象的思路。\u003c/p\u003e\n\u003ch4\u003e\u003cspan class=\"ez-toc-section\" id=\"%E5%B9%BC%E7%A8%9A%E7%9A%84%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E7%BC%96%E7%A8%8B\"\u003e\u003c/span\u003e幼稚的面向对象编程\u003cspan class=\"ez-toc-section-end\"\u003e\u003c/span\u003e\u003c/h4\u003e\n\u003cpre data-enlighter-language=\"java\" class=\"EnlighterJSRAW\"\u003epublic class PrintOS\n{\n\tpublic static void main(final String[] args)\n  \t{\n\t\tSystem.out.println(OSDiscriminator.getBoxSpecifier().getStatement()) ;\n \t}\n}\u003c/pre\u003e\n\u003cp\u003e \u003c/p\u003e\n\u003cpre data-enlighter-language=\"java\" class=\"EnlighterJSRAW\"\u003epublic class OSDiscriminator // Factory Pattern\n{\n\tprivate static BoxSpecifier theBoxSpecifier = null ;\n  \tpublic static BoxSpecifier getBoxSpecifier()\n\t{\n\t\tif (theBoxSpecifier == null)\n\t\t{\n\t\t\tString osName = System.getProperty(\u0026#34;os.name\u0026#34;) ;\n \t\t\tif (osName.equals(\u0026#34;SunOS\u0026#34;) || osName.equals(\u0026#34;Linux\u0026#34;))\n \t\t\t{\n\t\t\t\ttheBoxSpecifier = new UNIXBox() ;\n\t\t\t}\n\t\t\telse if (osName.equals(\u0026#34;Windows NT\u0026#34;) || osName.equals(\u0026#34;Windows 95\u0026#34;))\n\t\t\t{\n\t\t\t\ttheBoxSpecifier = new WindowsBox() ;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\ttheBoxSpecifier = new DefaultBox () ;\n\t\t\t}\n\t\t}\n\t\treturn theBoxSpecifier ;\n\t}\n}\u003c/pre\u003e\n\u003cp\u003e \u003c/p\u003e\n\u003cpre data-enlighter-language=\"java\" class=\"EnlighterJSRAW\"\u003epublic interface BoxSpecifier\n{\n\tString getStatement() ;\n}\u003c/pre\u003e\n\u003cp\u003e \u003c/p\u003e\n\u003cpre data-enlighter-language=\"java\" class=\"EnlighterJSRAW\"\u003epublic class DefaultBox implements BoxSpecifier\n{\n\tpublic String getStatement()\n\t{\n\t\treturn \u0026#34;This is not a box.\u0026#34; ;\n  \t}\n}\u003c/pre\u003e\n\u003cp\u003e \u003c/p\u003e\n\u003cpre data-enlighter-language=\"java\" class=\"EnlighterJSRAW\"\u003epublic class UNIXBox implements BoxSpecifier\n{\n\tpublic String getStatement()\n\t{\n\t\treturn \u0026#34;This is a UNIX box and therefore good.\u0026#34; ;\n  \t}\n}\u003c/pre\u003e\n\u003cp\u003e \u003c/p\u003e\n\u003cpre data-enlighter-language=\"java\" class=\"EnlighterJSRAW\"\u003epublic class WindowsBox implements BoxSpecifier\n{\n  \tpublic String getStatement()\n\t{\n\t\treturn \u0026#34;This is a Windows box and therefore bad.\u0026#34; ;\n\t}\n}\u003c/pre\u003e\n\u003cp\u003e他们觉得上面这段代码没有消除if语句，他们说这叫代码的“logic bottleneck”（逻辑瓶颈），因为如果你要增加一个操作系统的判断的话，你不但要加个类，还要改那段if-else的语句。\u003c/p\u003e\n\u003cp\u003e所以，他们整出一个叫Sophisticated的面向对象的解决方案。\u003c/p\u003e\n\u003ch4\u003e\u003cspan class=\"ez-toc-section\" id=\"OO%E5%A4%A7%E5%B8%88%E7%9A%84%E6%96%B9%E6%A1%88\"\u003e\u003c/span\u003eOO大师的方案\u003cspan class=\"ez-toc-section-end\"\u003e\u003c/span\u003e\u003c/h4\u003e\n\u003cp\u003e注意其中的Design Pattern\u003c/p\u003e\n\u003cpre data-enlighter-language=\"java\" class=\"EnlighterJSRAW\"\u003epublic class PrintOS\n{\n  \tpublic static void main(final String[] args)\n  \t{\n\t\tSystem.out.println(OSDiscriminator.getBoxSpecifier().getStatement()) ;\n  \t}\n}\u003c/pre\u003e\n\u003cpre data-enlighter-language=\"java\" class=\"EnlighterJSRAW\"\u003epublic class OSDiscriminator // Factory Pattern\n{\n  \tprivate static java.util.HashMap storage = new java.util.HashMap() ;\n\n \tpublic static BoxSpecifier getBoxSpecifier()\n\t{\n\t\tBoxSpecifier value = (BoxSpecifier)storage.get(System.getProperty(\u0026#34;os.name\u0026#34;)) ;\n\t\tif (value == null)\n\t\t\treturn DefaultBox.value ;\n\t\treturn value ;\n \t}\n  \tpublic static void register(final String key, final BoxSpecifier value)\n  \t{\n\t\tstorage.put(key, value) ; // Should guard against null keys, actually.\n  \t}\n  \tstatic\n  \t{\n\t\tWindowsBox.register() ;\n  \t\tUNIXBox.register() ;\n  \t\tMacBox.register() ;\n  \t}\n}\u003c/pre\u003e\n\u003cpre data-enlighter-language=\"java\" class=\"EnlighterJSRAW\"\u003epublic interface BoxSpecifier\n{\n  \tString getStatement() ;\n}\u003c/pre\u003e\n\u003cpre data-enlighter-language=\"java\" class=\"EnlighterJSRAW\"\u003epublic class DefaultBox implements BoxSpecifier // Singleton Pattern\n{\n\tpublic static final DefaultBox value = new DefaultBox () ;\n\tprivate DefaultBox() { }\n\tpublic String getStatement()\n\t{\n\t\treturn \u0026#34;This is not a box.\u0026#34; ;\n\t}\n}\u003c/pre\u003e\n\u003cpre data-enlighter-language=\"java\" class=\"EnlighterJSRAW\"\u003epublic class UNIXBox implements BoxSpecifier // Singleton Pattern\n{\n \tpublic static final UNIXBox value = new UNIXBox() ;\n\tprivate UNIXBox() { }\n\tpublic  String getStatement()\n   \t{\n\t\treturn \u0026#34;This is a UNIX box and therefore good.\u0026#34; ;\n \t}\n  \tpublic static final void register()\n  \t{\n\t\tOSDiscriminator.register(\u0026#34;SunOS\u0026#34;, value) ;\n  \t\tOSDiscriminator.register(\u0026#34;Linux\u0026#34;, value) ;\n \t}\n}\u003c/pre\u003e\n\u003cpre data-enlighter-language=\"java\" class=\"EnlighterJSRAW\"\u003epublic class WindowsBox implements BoxSpecifier  // Singleton Pattern\n{\n\tpublic  static final WindowsBox value = new WindowsBox() ;\n\tprivate WindowsBox() { }\n\tpublic String getStatement()\n\t{\n\t\treturn \u0026#34;This is a Windows box and therefore bad.\u0026#34; ;\n  \t}\n  \tpublic static final void register()\n  \t{\n\t\tOSDiscriminator.register(\u0026#34;Windows NT\u0026#34;, value) ;\n  \t\tOSDiscriminator.register(\u0026#34;Windows 95\u0026#34;, value) ;\n\t}\n}\u003c/pre\u003e\n\u003cpre data-enlighter-language=\"java\" class=\"EnlighterJSRAW\"\u003epublic class MacBox implements BoxSpecifier // Singleton Pattern\n{\n \tpublic static final MacBox value = new MacBox() ;\n\tprivate MacBox() { }\n\tpublic  String getStatement()\n   \t{\n\t\treturn \u0026#34;This is a Macintosh box and therefore far superior.\u0026#34; ;\n \t}\n  \tpublic static final void register()\n  \t{\n\t\tOSDiscriminator.register(\u0026#34;Mac OS\u0026#34;, value) ;\n \t}\n}\u003c/pre\u003e\n\u003cp\u003e作者还非常的意地说，他加了一个“Mac OS”的东西。\u003cstrong\u003e老实说，当我看到最后这段OO大师搞出来的代码，我快要吐了\u003c/strong\u003e。我瞬间想到了两件事：一个是以前酷壳上的《\u003ca style=\"line-height: 13px;\" title=\"面向对象是个骗局？！\" href=\"https://coolshell.cn/articles/3036.html\" target=\"_blank\"\u003e面向对象是个骗局\u003c/a\u003e》和 《\u003ca style=\"line-height: 13px;\" title=\"各种流行的编程风格\" href=\"https://coolshell.cn/articles/2058.html\" target=\"_blank\"\u003e各种流行的编程方式\u003c/a\u003e》中说的“设计模式驱动编程”，另一个我想到了那些被敏捷洗过脑的程序员和咨询师，也是这种德行。\u003c/p\u003e\n\u003cp\u003e于是我去看了一下第一作者\u003ca href=\"http://csis.pace.edu/~bergin/\" target=\"_blank\"\u003eJoseph Bergin的主页\u003c/a\u003e，这个Ph.D是果然刚刚完成了一本关于敏捷和模式的书。\u003c/p\u003e\n\u003ch4\u003e\u003cspan class=\"ez-toc-section\" id=\"Rob_Pike%E7%9A%84%E8%AF%84%E8%AE%BA\"\u003e\u003c/span\u003eRob Pike的评论\u003cspan class=\"ez-toc-section-end\"\u003e\u003c/span\u003e\u003c/h4\u003e\n\u003cp\u003e（Rob Pike是当年在Bell lab里和Ken一起搞Unix的主儿，后来和Ken开发了UTF-8，现在还和Ken一起搞Go语言。注：不要以为Ken和Dennis是基友，其实他们才是真正的老基友！）\u003c/p\u003e\n\u003cp\u003eRob Pike在他的\u003ca href=\"https://plus.google.com/101960720994009339267/posts/hoJdanihKwb\" target=\"_blank\"\u003eGoogle+的这贴\u003c/a\u003e里评论到这篇文章——\u003c/p\u003e\n\u003cp\u003e他并不确认这篇文章是不是搞笑？但是他觉得这些个写这篇文章是很认真的。他说他要评论这篇文章是因为他们是一名Hacker，至少这个词出现在这篇文章的术语中。\u003c/p\u003e\n\u003cp\u003e他说，这个程序根本就不需要什么Object，只需要一张小小的配置表格，里面配置了对应的操作系统和你想输出的文本。这不就完了。这么简单的设计，非常容易地扩展，他们那个所谓的Hack Solution完全就是笨拙的代码。后面那些所谓的代码进化相当疯狂和愚蠢的，这个完全误导了对编程的认知。\u003c/p\u003e\n\u003cp\u003e然后，他还说，\u003cstrong\u003e他觉得这些OO的狂热份子非常害怕数据，他们喜欢用多层的类的关系来完成一个本来只需要检索三行数据表的工作\u003c/strong\u003e。他说他曾经听说有人在他的工作种用各种OO的东西来替换While循环。（我听说中国Thoughtworks那帮搞敏捷的人的确喜欢用Object来替换所有的if-else语句，他们甚至还喜欢把函数的行数限制在10行以内）\u003c/p\u003e\n\u003cp\u003e他还给了一个链接\u003ca href=\"http://prog21.dadgum.com/156.html\"\u003ehttp://prog21.dadgum.com/156.html\u003c/a\u003e，你可以读一读。最后他说，\u003cstrong\u003eOOP的本质就是——对数据和与之关联的行为进行编程\u003c/strong\u003e。便就算是这样也不完全对，因为：\u003c/p\u003e\n\u003cp style=\"text-align: center;\"\u003e\u003cstrong\u003eSometimes data is just data and functions are just functions.\u003c/strong\u003e\u003c/p\u003e\n\u003ch4\u003e\u003cspan class=\"ez-toc-section\" id=\"%E6%88%91%E7%9A%84%E7%90%86%E8%A7%A3\"\u003e\u003c/span\u003e我的理解\u003cspan class=\"ez-toc-section-end\"\u003e\u003c/span\u003e\u003c/h4\u003e\n\u003cp\u003e我觉得，这篇文章的例子举得太差了，差得感觉就像是OO的高级黑。面向对象编程注重的是：\u003cstrong\u003e1）数据和其行为的打包封装，2）程序的接口和实现的解耦\u003c/strong\u003e。你那怕，举一个多个开关和多个电器的例子，不然就像STL中，一个排序算法对多个不同容器的例子，都比这个例子要好得多得多。老实说，Java SDK里太多这样的东西了。\u003c/p\u003e\n\u003cp\u003e我以前给一些公司讲一些设计模式的培训课，我一再提到，\u003cstrong\u003e那23个经典的设计模式和OO半毛钱关系没有\u003c/strong\u003e，只不过人家用OO来实现罢了。\u003cstrong\u003e设计模式就三个准则：1）中意于组合而不是继承，2）依赖于接口而不是实现，3）高内聚，低耦合。你看，这完全就是Unix的设计准则\u003c/strong\u003e。\u003c/p\u003e\n\u003cp\u003e（全文完）\u003c/p\u003e\n\u003cdiv style=\"margin-top: 15px; font-size: 16px;color: #cc0000;\"\u003e\n\u003cp align=\"center\"\u003e\u003cstrong\u003e（转载本站文章请注明作者和出处 \u003ca href=\"https://coolshell.cn/\"\u003e酷 壳 – CoolShell\u003c/a\u003e ，请勿用于任何商业用途）\u003c/strong\u003e\u003c/p\u003e\n\u003c/div\u003e\n\u003cdiv class=\"wp_rp_wrap  wp_rp_vertical_m\" id=\"wp_rp_first\"\u003e\u003cdiv class=\"wp_rp_content\"\u003e\u003ch3 class=\"related_post_title\"\u003e相关文章\u003c/h3\u003e\u003cul class=\"related_post wp_rp\"\u003e\u003cli\u003e\u003ca href=\"https://coolshell.cn/articles/4535.html\" class=\"wp_rp_thumbnail\"\u003e\u003cimg src=\"https://coolshell.cn/wp-content/plugins/wordpress-23-related-posts-plugin/static/thumbs/1.jpg\" alt=\"一些软件设计的原则\" width=\"150\" height=\"150\"/\u003e\u003c/a\u003e\u003ca href=\"https://coolshell.cn/articles/4535.html\" class=\"wp_rp_title\"\u003e一些软件设计的原则\u003c/a\u003e\u003c/li\u003e\u003cli\u003e\u003ca href=\"https://coolshell.cn/articles/3036.html\" class=\"wp_rp_thumbnail\"\u003e\u003cimg src=\"https://coolshell.cn/wp-content/plugins/wordpress-23-related-posts-plugin/static/thumbs/19.jpg\" alt=\"面向对象是个骗局？！\" width=\"150\" height=\"150\"/\u003e\u003c/a\u003e\u003ca href=\"https://coolshell.cn/articles/3036.html\" class=\"wp_rp_title\"\u003e面向对象是个骗局？！\u003c/a\u003e\u003c/li\u003e\u003cli\u003e\u003ca href=\"https://coolshell.cn/articles/18024.html\" class=\"wp_rp_thumbnail\"\u003e\u003cimg src=\"https://coolshell.cn/wp-content/uploads/2017/07/api-design-300x278-2-150x150.jpg\" alt=\"API设计原则 – Qt官网的设计实践总结\" width=\"150\" height=\"150\"/\u003e\u003c/a\u003e\u003ca href=\"https://coolshell.cn/articles/18024.html\" class=\"wp_rp_title\"\u003eAPI设计原则 – Qt官网的设计实践总结\u003c/a\u003e\u003c/li\u003e\u003cli\u003e\u003ca href=\"https://coolshell.cn/articles/9949.html\" class=\"wp_rp_thumbnail\"\u003e\u003cimg src=\"https://coolshell.cn/wp-content/uploads/2013/07/inverted-bookshelf_thumb-150x150.jpg\" alt=\"IoC/DIP其实是一种管理思想\" width=\"150\" height=\"150\"/\u003e\u003c/a\u003e\u003ca href=\"https://coolshell.cn/articles/9949.html\" class=\"wp_rp_title\"\u003eIoC/DIP其实是一种管理思想\u003c/a\u003e\u003c/li\u003e\u003cli\u003e\u003ca href=\"https://coolshell.cn/articles/8990.html\" class=\"wp_rp_thumbnail\"\u003e\u003cimg src=\"https://coolshell.cn/wp-content/uploads/2013/02/linus_pointer_to_pointer-150x150.jpg\" alt=\"Linus：利用二级指针删除单向链表\" width=\"150\" height=\"150\"/\u003e\u003c/a\u003e\u003ca href=\"https://coolshell.cn/articles/8990.html\" class=\"wp_rp_title\"\u003eLinus：利用二级指针删除单向链表\u003c/a\u003e\u003c/li\u003e\u003cli\u003e\u003ca href=\"https://coolshell.cn/articles/8961.html\" class=\"wp_rp_thumbnail\"\u003e\u003cimg src=\"https://coolshell.cn/wp-content/uploads/2013/01/kiss-150x150.png\" alt=\"从面向对象的设计模式看软件设计\" width=\"150\" height=\"150\"/\u003e\u003c/a\u003e\u003ca href=\"https://coolshell.cn/articles/8961.html\" class=\"wp_rp_title\"\u003e从面向对象的设计模式看软件设计\u003c/a\u003e\u003c/li\u003e\u003c/ul\u003e\u003c/div\u003e\u003c/div\u003e\n\u003cdiv id=\"post-ratings-8745\" class=\"post-ratings\" itemscope=\"\" itemtype=\"https://schema.org/Article\" data-nonce=\"40c5d915fc\"\u003e\u003cimg id=\"rating_8745_1\" src=\"https://coolshell.cn/wp-content/plugins/wp-postratings/images/stars_crystal/rating_on.gif\" alt=\"好烂啊\" title=\"好烂啊\" onmouseover=\"if (!window.__cfRLUnblockHandlers) return false; current_rating(8745, 1, \u0026#39;好烂啊\u0026#39;);\" onmouseout=\"if (!window.__cfRLUnblockHandlers) return false; ratings_off(4.3, 5, 0);\" onclick=\"if (!window.__cfRLUnblockHandlers) return false; rate_post();\" onkeypress=\"if (!window.__cfRLUnblockHandlers) return false; rate_post();\" style=\"cursor: pointer; border: 0px;\" data-cf-modified-88135cd553baf67b8ea329ac-=\"\"/\u003e\u003cimg id=\"rating_8745_2\" src=\"https://coolshell.cn/wp-content/plugins/wp-postratings/images/stars_crystal/rating_on.gif\" alt=\"有点差\" title=\"有点差\" onmouseover=\"if (!window.__cfRLUnblockHandlers) return false; current_rating(8745, 2, \u0026#39;有点差\u0026#39;);\" onmouseout=\"if (!window.__cfRLUnblockHandlers) return false; ratings_off(4.3, 5, 0);\" onclick=\"if (!window.__cfRLUnblockHandlers) return false; rate_post();\" onkeypress=\"if (!window.__cfRLUnblockHandlers) return false; rate_post();\" style=\"cursor: pointer; border: 0px;\" data-cf-modified-88135cd553baf67b8ea329ac-=\"\"/\u003e\u003cimg id=\"rating_8745_3\" src=\"https://coolshell.cn/wp-content/plugins/wp-postratings/images/stars_crystal/rating_on.gif\" alt=\"凑合看看\" title=\"凑合看看\" onmouseover=\"if (!window.__cfRLUnblockHandlers) return false; current_rating(8745, 3, \u0026#39;凑合看看\u0026#39;);\" onmouseout=\"if (!window.__cfRLUnblockHandlers) return false; ratings_off(4.3, 5, 0);\" onclick=\"if (!window.__cfRLUnblockHandlers) return false; rate_post();\" onkeypress=\"if (!window.__cfRLUnblockHandlers) return false; rate_post();\" style=\"cursor: pointer; border: 0px;\" data-cf-modified-88135cd553baf67b8ea329ac-=\"\"/\u003e\u003cimg id=\"rating_8745_4\" src=\"https://coolshell.cn/wp-content/plugins/wp-postratings/images/stars_crystal/rating_on.gif\" alt=\"还不错\" title=\"还不错\" onmouseover=\"if (!window.__cfRLUnblockHandlers) return false; current_rating(8745, 4, \u0026#39;还不错\u0026#39;);\" onmouseout=\"if (!window.__cfRLUnblockHandlers) return false; ratings_off(4.3, 5, 0);\" onclick=\"if (!window.__cfRLUnblockHandlers) return false; rate_post();\" onkeypress=\"if (!window.__cfRLUnblockHandlers) return false; rate_post();\" style=\"cursor: pointer; border: 0px;\" data-cf-modified-88135cd553baf67b8ea329ac-=\"\"/\u003e\u003cimg id=\"rating_8745_5\" src=\"https://coolshell.cn/wp-content/plugins/wp-postratings/images/stars_crystal/rating_half.gif\" alt=\"很精彩\" title=\"很精彩\" onmouseover=\"if (!window.__cfRLUnblockHandlers) return false; current_rating(8745, 5, \u0026#39;很精彩\u0026#39;);\" onmouseout=\"if (!window.__cfRLUnblockHandlers) return false; ratings_off(4.3, 5, 0);\" onclick=\"if (!window.__cfRLUnblockHandlers) return false; rate_post();\" onkeypress=\"if (!window.__cfRLUnblockHandlers) return false; rate_post();\" style=\"cursor: pointer; border: 0px;\" data-cf-modified-88135cd553baf67b8ea329ac-=\"\"/\u003e (\u003cstrong\u003e63\u003c/strong\u003e 人打了分，平均分： \u003cstrong\u003e4.25\u003c/strong\u003e )\u003cbr/\u003e\u003cspan class=\"post-ratings-text\" id=\"ratings_8745_text\"\u003e\u003c/span\u003e\u003cmeta itemprop=\"name\" content=\"如此理解面向对象编程\"/\u003e\u003cmeta itemprop=\"headline\" content=\"如此理解面向对象编程\"/\u003e\u003cmeta itemprop=\"description\" content=\"从Rob Pike 的 Google+上的一个推看到了一篇叫《Understanding Object Oriented Programming》的文章，我先把这篇文章简述一下，然后再说说老牌黑客Rob Pike的评论。\n\n先看这篇教程是怎么来讲述OOP的。它先给了下面这个问题，这个问题需要输出一段关于操作系统的文字：假设Unix很不错，Windows很差。\n\n这个把下面这段代码描述成是H...\"/\u003e\u003cmeta itemprop=\"datePublished\" content=\"2012-12-13T08:19:28+08:00\"/\u003e\u003cmeta itemprop=\"dateModified\" content=\"2012-12-13T10:08:10+08:00\"/\u003e\u003cmeta itemprop=\"url\" content=\"https://coolshell.cn/articles/8745.html\"/\u003e\u003cmeta itemprop=\"author\" content=\"陈皓\"/\u003e\u003cmeta itemprop=\"mainEntityOfPage\" content=\"https://coolshell.cn/articles/8745.html\"/\u003e\u003cdiv style=\"display: none;\" itemprop=\"publisher\" itemscope=\"\" itemtype=\"https://schema.org/Organization\"\u003e\u003cmeta itemprop=\"name\" content=\"酷 壳 - CoolShell\"/\u003e\u003cmeta itemprop=\"url\" content=\"https://coolshell.cn\"/\u003e\u003cdiv itemprop=\"logo\" itemscope=\"\" itemtype=\"https://schema.org/ImageObject\"\u003e\u003cmeta itemprop=\"url\" content=\"\"/\u003e\u003c/div\u003e\u003c/div\u003e\u003cdiv style=\"display: none;\" itemprop=\"aggregateRating\" itemscope=\"\" itemtype=\"https://schema.org/AggregateRating\"\u003e\u003cmeta itemprop=\"bestRating\" content=\"5\"/\u003e\u003cmeta itemprop=\"worstRating\" content=\"1\"/\u003e\u003cmeta itemprop=\"ratingValue\" content=\"4.25\"/\u003e\u003cmeta itemprop=\"ratingCount\" content=\"63\"/\u003e\u003c/div\u003e\u003c/div\u003e\u003cdiv id=\"post-ratings-8745-loading\" class=\"post-ratings-loading\"\u003e\u003cimg src=\"https://coolshell.cn/wp-content/plugins/wp-postratings/images/loading.gif\" width=\"16\" height=\"16\" class=\"post-ratings-image\"/\u003eLoading...\u003c/div\u003e\n\u003c/div\u003e",
  "Date": "2012-12-13T08:19:28+08:00",
  "Author": "陈皓"
}