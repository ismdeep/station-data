{
  "Source": "coolshell.cn",
  "Title": "程序员技术练级攻略",
  "Link": "https://coolshell.cn/articles/4990.html",
  "Content": "\u003cdiv class=\"entry-content\"\u003e\n\u003cp\u003e\u003cscript async=\"\" src=\"https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3415450859608158\" crossorigin=\"anonymous\" type=\"482e50188306a5122a0e92bf-text/javascript\"\u003e\u003c/script\u003e\u003cimg decoding=\"async\" class=\"alignright size-full wp-image-5006\" title=\"程序员技术练级入略\" src=\"https://coolshell.cn/wp-content/uploads/2011/07/programmer.png\" alt=\"\" width=\"258\" height=\"300\" srcset=\"https://coolshell.cn/wp-content/uploads/2011/07/programmer.png 258w, https://coolshell.cn/wp-content/uploads/2011/07/programmer-232x270.png 232w\" sizes=\"(max-width: 258px) 100vw, 258px\"/\u003e\u003cstrong\u003e\u003cspan style=\"color: #cc0000; font-size: 16pt;\"\u003e注：该文最新的版本在这里\u003c/span\u003e《\u003ca style=\"font-size: 16pt;\" href=\"https://coolshell.cn/articles/18360.html\"\u003e程序员技术练级攻略（2018版）\u003c/a\u003e》\u003cspan style=\"color: #cc0000; font-size: 16pt;\"\u003e（需要付费阅读）\u003c/span\u003e\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003e月光博客6月12日发表了《\u003ca href=\"https://www.williamlong.info/archives/2700.html\" target=\"_blank\" rel=\"noopener\"\u003e写给新手程序员的一封信\u003c/a\u003e》，翻译自《\u003ca href=\"http://blog.akash.im/an-open-letter-to-those-who-want-to-start\" target=\"_blank\" rel=\"noopener\"\u003eAn open letter to those who want to start programming\u003c/a\u003e》，我的朋友（他在本站的id是\u003ca href=\"https://coolshell.cn/?author=3\" target=\"_blank\" rel=\"noopener\"\u003eMailper\u003c/a\u003e）告诉我，他希望在酷壳上看到一篇更具操作性的文章。因为他也是喜欢编程和技术的家伙，于是，我让他把他的一些学习Python和Web编程的一些点滴总结一下。于是他给我发来了一些他的心得和经历，我在把他的心得做了不多的增改，并根据我的经历增加了“进阶”一节。\u003cstrong\u003e这是一篇由新手和我这个老家伙根据我们的经历完成的文章\u003c/strong\u003e。\u003c/p\u003e\n\u003cp\u003e我的这个朋友把这篇文章取名叫Build Your Programming Technical Skills，我实在不知道用中文怎么翻译，但我在写的过程中，\u003cstrong\u003e我觉得这很像一个打网游做任务升级的一个过程，所以取名叫“技术练级攻略”，题目有点大，呵呵，这个标题纯粹是为了好玩\u003c/strong\u003e。\u003cstrong\u003e这里仅仅是在分享Mailper和我个人的学习经历。\u003c/strong\u003e（注：省去了我作为一个初学者曾经学习过的一些技术(今天明显过时了)，如：Delphi/Power builder，也省去了我学过的一些我觉得没意思的技术Lotus Notes/ActiveX/COM/ADO/ATL/.NET ……）\u003c/p\u003e\n\u003cdiv id=\"ez-toc-container\" class=\"ez-toc-v2_0_48 counter-hierarchy ez-toc-counter ez-toc-grey ez-toc-container-direction\"\u003e\n\u003cdiv class=\"ez-toc-title-container\"\u003e\n\u003cp class=\"ez-toc-title\"\u003e目录\u003c/p\u003e\n\u003cspan class=\"ez-toc-title-toggle\"\u003e\u003c/span\u003e\u003c/div\u003e\n\u003cnav\u003e\u003cul class=\"ez-toc-list ez-toc-list-level-1 \"\u003e\u003cli class=\"ez-toc-page-1 ez-toc-heading-level-4\"\u003e\u003ca class=\"ez-toc-link ez-toc-heading-1\" href=\"#%E5%89%8D%E8%A8%80\" title=\"前言\"\u003e前言\u003c/a\u003e\u003c/li\u003e\u003cli class=\"ez-toc-page-1 ez-toc-heading-level-4\"\u003e\u003ca class=\"ez-toc-link ez-toc-heading-2\" href=\"#%E5%90%AF%E8%92%99%E5%85%A5%E9%97%A8\" title=\"启蒙入门\"\u003e启蒙入门\u003c/a\u003e\u003c/li\u003e\u003cli class=\"ez-toc-page-1 ez-toc-heading-level-4\"\u003e\u003ca class=\"ez-toc-link ez-toc-heading-3\" href=\"#%E8%BF%9B%E9%98%B6%E5%8A%A0%E6%B7%B1\" title=\"进阶加深\"\u003e进阶加深\u003c/a\u003e\u003c/li\u003e\u003cli class=\"ez-toc-page-1 ez-toc-heading-level-4\"\u003e\u003ca class=\"ez-toc-link ez-toc-heading-4\" href=\"#%E9%AB%98%E7%BA%A7%E6%B7%B1%E5%85%A5\" title=\"高级深入\"\u003e高级深入\u003c/a\u003e\u003c/li\u003e\u003c/ul\u003e\u003c/nav\u003e\u003c/div\u003e\n\u003ch4\u003e\u003cspan class=\"ez-toc-section\" id=\"%E5%89%8D%E8%A8%80\"\u003e\u003c/span\u003e前言\u003cspan class=\"ez-toc-section-end\"\u003e\u003c/span\u003e\u003c/h4\u003e\n\u003cp\u003e你是否觉得自己从学校毕业的时候只做过小玩具一样的程序？\u003cwbr/\u003e走入职场后哪怕没有什么经验也可以把以下这些课外练习走一遍（朋友的抱怨：学校课程总是从理论出发，\u003cwbr/\u003e作业项目都看不出有什么实际作用，不如从工作中的需求出发）\u003c/p\u003e\n\u003cp\u003e建议：\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e不要乱买书，不要乱追新技术新名词，\u003cwbr/\u003e基础的东西经过很长时间积累而且还会在未来至少10年通用。\u003c/li\u003e\n\u003cli\u003e回顾一下历史，看看历史上时间线上技术的发展，你才能明白明天会是什么样。\u003c/li\u003e\n\u003cli\u003e一定要动手，例子不管多么简单，\u003cwbr/\u003e建议至少自己手敲一遍看看是否理解了里头的细枝末节。\u003c/li\u003e\n\u003cli\u003e一定要学会思考，思考为什么要这样，而不是那样。还要举一反三地思考。\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e\u003cstrong\u003e注\u003c/strong\u003e：你也许会很奇怪为什么下面的东西很偏Unix/Linux，这是因为我觉得Windows下的编程可能会在未来很没有前途，原因如下：\u003c/p\u003e\n\u003cp\u003e\u003cspan id=\"more-4990\"\u003e\u003c/span\u003e\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e现在的用户界面几乎被两个东西主宰了，1）Web，2）移动设备iOS或Android。Windows的图形界面不吃香了。\u003c/li\u003e\n\u003cli\u003e越来越多的企业在用成本低性能高的Linux和各种开源技术来构架其系统，Windows的成本太高了。\u003c/li\u003e\n\u003cli\u003e微软的东西变得太快了，很不持久，他们完全是在玩弄程序员。详情参见《\u003ca title=\"Windows编程革命简史\" href=\"https://coolshell.cn/articles/3008.html\" target=\"_blank\" rel=\"noopener\"\u003eWindows编程革命史\u003c/a\u003e》\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e所以，我个人认为以后的趋势是前端是Web+移动，后端是Linux+开源。开发这边基本上没Windows什么事。\u003c/p\u003e\n\u003ch4\u003e\u003cspan class=\"ez-toc-section\" id=\"%E5%90%AF%E8%92%99%E5%85%A5%E9%97%A8\"\u003e\u003c/span\u003e启蒙入门\u003cspan class=\"ez-toc-section-end\"\u003e\u003c/span\u003e\u003c/h4\u003e\n\u003cp\u003e\u003cstrong\u003e1、 学习一门脚本语言，例如Python/Ruby\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003e可以让你摆脱对底层语言的恐惧感，脚本语言可以让你很快开发出能用得上的小程序。实践项目:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e处理文本文件，或者csv (关键词 python csv, python open, python sys) 读一个本地文件，逐行处理（例如 word count，或者处理log）\u003c/li\u003e\n\u003cli\u003e遍历本地文件系统 (sys, os, path)，例如写一个程序统计一个目录下所有文件大小并按各种条件排序并保存结果\u003c/li\u003e\n\u003cli\u003e跟数据库打交道 (python sqlite)，写一个小脚本统计数据库里条目数量\u003c/li\u003e\n\u003cli\u003e学会用各种print之类简单粗暴的方式进行调试\u003c/li\u003e\n\u003cli\u003e学会用Google (phrase, domain, use reader to follow tech blogs)\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e为什么要学脚本语言，因为他们实在是太方便了，很多时候我们需要写点小工具或是脚本来帮我们解决问题，你就会发现正规的编程语言太难用了。\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003e2、 用熟一种程序员的编辑器(不是IDE) 和一些基本工具\u003c/strong\u003e\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eVim / Emacs / Notepad++，学会如何配置代码补全，外观，外部命令等。\u003c/li\u003e\n\u003cli\u003eSource Insight (或 ctag)\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e使用这些东西不是为了Cool，而是这些编辑器在查看、修改代码/配置文章/日志会更快更有效率。\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003e3、 熟悉Unix/Linux Shell和常见的命令行\u003c/strong\u003e\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e如果你用windows，至少学会用虚拟机里的linux， vmware player是免费的，装个Ubuntu吧\u003c/li\u003e\n\u003cli\u003e一定要少用少用图形界面。\u003c/li\u003e\n\u003cli\u003e学会使用man来查看帮助\u003c/li\u003e\n\u003cli\u003e文件系统结构和基本操作 ls/chmod/chown/rm/find/ln/cat/mount/mkdir/tar/gzip …\u003c/li\u003e\n\u003cli\u003e学会使用一些文本操作命令 sed/awk/grep/tail/less/more …\u003c/li\u003e\n\u003cli\u003e学会使用一些管理命令 ps/top/lsof/netstat/kill/tcpdump/iptables/dd…\u003c/li\u003e\n\u003cli\u003e了解/etc目录下的各种配置文章，学会查看/var/log下的系统日志，以及/proc下的系统运行信息\u003c/li\u003e\n\u003cli\u003e了解正则表达式，使用正则表达式来查找文件。\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e对于程序员来说Unix/Linux比Windows简单多了。（参看我四年前CSDN的博文《\u003ca href=\"http://blog.csdn.net/haoel/article/details/1533720\" target=\"_blank\" rel=\"noopener\"\u003e其实Unix很简单\u003c/a\u003e》）学会使用Unix/Linux你会发现图形界面在某些时候实在是太难用了，相当地相当地降低工作效率。\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003e4、 学习Web基础（HTML/CSS/JS) + 服务器端技术 (LAMP)\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003e未来必然是Web的世界，学习WEB基础的最佳网站是\u003ca href=\"http://www.w3school.com.cn/\" target=\"_blank\" rel=\"noopener\"\u003eW3School\u003c/a\u003e。\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e学习HTML基本语法\u003c/li\u003e\n\u003cli\u003e学习CSS如何选中HTML元素并应用一些基本样式（关键词：box model）\u003c/li\u003e\n\u003cli\u003e学会用  Firefox + Firebug 或 chrome 查看你觉得很炫的网页结构，并动态修改。\u003c/li\u003e\n\u003cli\u003e学习使用Javascript操纵HTML元件。理解DOM和动态网页（\u003ca href=\"http://oreilly.com/catalog/9780596527402\" target=\"_blank\" rel=\"noopener\"\u003ehttp://oreilly.com/catalog/9780596527402\u003c/a\u003e) 网上有免费的章节，足够用了。或参看 \u003ca href=\"http://www.w3school.com.cn/htmldom/index.asp\" target=\"_blank\" rel=\"noopener\"\u003eDOM\u003c/a\u003e 。\u003c/li\u003e\n\u003cli\u003e学会用  Firefox + Firebug 或 chrome 调试Javascript代码（设置断点，查看变量，性能，控制台等）\u003c/li\u003e\n\u003cli\u003e在一台机器上配置\u003ca href=\"www.apache.org\" target=\"_blank\" rel=\"noopener\"\u003eApache \u003c/a\u003e或 \u003ca href=\"nginx.net\" target=\"_blank\" rel=\"noopener\"\u003eNginx\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e学习\u003ca href=\"www.php.net\" target=\"_blank\" rel=\"noopener\"\u003ePHP\u003c/a\u003e，让后台PHP和前台HTML进行数据交互，对服务器相应浏览器请求形成初步认识。实现一个表单提交和反显的功能。\u003c/li\u003e\n\u003cli\u003e把PHP连接本地或者远程数据库 MySQL（MySQL 和 SQL现学现用够了）\u003c/li\u003e\n\u003cli\u003e跟完一个名校的网络编程课程（例如：\u003ca href=\"http://www.stanford.edu/~ouster/cgi-bin/cs142-fall10/index.php\" target=\"_blank\" rel=\"noopener\"\u003ehttp://www.stanford.edu/~ouster/cgi-bin/cs142-fall10/index.php\u003c/a\u003e ) 不要觉得需要多于一学期时间，大学生是全职一学期选3-5门课，你业余时间一定可以跟上\u003c/li\u003e\n\u003cli\u003e学习一个javascript库（例如jQuery 或 ExtJS）+  Ajax (异步读入一个服务器端图片或者数据库内容）+JSON数据格式。\u003c/li\u003e\n\u003cli\u003eHTTP: The Definitive Guide 读完前4章你就明白你每天上网用浏览器的时候发生的事情了(proxy, gateway, browsers)\u003c/li\u003e\n\u003cli\u003e做个小网站（例如：一个小的留言板，支持用户登录，Cookie/Session，增、删、改、查，上传图片附件，分页显示）\u003c/li\u003e\n\u003cli\u003e买个域名，租个空间，做个自己的网站。\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch4\u003e\u003cspan class=\"ez-toc-section\" id=\"%E8%BF%9B%E9%98%B6%E5%8A%A0%E6%B7%B1\"\u003e\u003c/span\u003e进阶加深\u003cspan class=\"ez-toc-section-end\"\u003e\u003c/span\u003e\u003c/h4\u003e\n\u003cp\u003e\u003cstrong\u003e1、 C语言和操作系统调用\u003c/strong\u003e\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e重新学C语言，理解指针和内存模型，用C语言实现一下各种经典的算法和数据结构。推荐《\u003ca href=\"http://product.china-pub.com/197050\"\u003e计算机程序设计艺术\u003c/a\u003e》、《\u003ca href=\"http://product.china-pub.com/31701\" target=\"_blank\" rel=\"noopener\"\u003e算法导论\u003c/a\u003e》和《\u003ca href=\"http://product.china-pub.com/209243\" target=\"_blank\" rel=\"noopener\"\u003e编程珠玑\u003c/a\u003e》。\u003c/li\u003e\n\u003cli\u003e学习\u003ca title=\"（麻省理工免费课程）计算机科学和编程导论\" href=\"https://coolshell.cn/articles/3723.html\" target=\"_blank\" rel=\"noopener\"\u003e（麻省理工免费课程）计算机科学和编程导论\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e学习\u003ca title=\"（麻省理工免费课程）C语言内存管理和C++面向对象编程\" href=\"https://coolshell.cn/articles/2474.html\" target=\"_blank\" rel=\"noopener\"\u003e（麻省理工免费课程）C语言内存管理\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e学习Unix/Linux系统调用（\u003ca href=\"http://product.china-pub.com/30181\" target=\"_blank\" rel=\"noopener\"\u003eUnix高级环境编程\u003c/a\u003e），，了解系统层面的东西。\n\u003cul\u003e\n\u003cli\u003e用这些系统知识操作一下文件系统，用户（实现一个可以拷贝目录树的小程序）\u003c/li\u003e\n\u003cli\u003e用fork/wait/waitpid写一个多进程的程序，用pthread写一个多线程带同步或互斥的程序。多进程多进程购票的程序。\u003c/li\u003e\n\u003cli\u003e用signal/kill/raise/alarm/pause/sigprocmask实现一个多进程间的信号量通信的程序。\u003c/li\u003e\n\u003cli\u003e学会使用gcc和gdb来编程和调试程序（参看我的《\u003ca href=\"blog.csdn.net/haoel/article/details/2879\" target=\"_blank\" rel=\"noopener\"\u003e用gdb调试程序\u003c/a\u003e》）\u003c/li\u003e\n\u003cli\u003e学会使用makefile来编译程序。（参看我的《\u003ca href=\"blog.csdn.net/haoel/article/details/2886\" target=\"_blank\" rel=\"noopener\"\u003e跟我一起写makefile\u003c/a\u003e》）\u003c/li\u003e\n\u003cli\u003eIPC和Socket的东西可以放到高级中来实践。\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e学习Windows SDK编程（\u003ca href=\"http://product.china-pub.com/52880\" target=\"_blank\" rel=\"noopener\"\u003eWindows 程序设计 \u003c/a\u003e，\u003ca href=\"http://product.china-pub.com/3804\" target=\"_blank\" rel=\"noopener\"\u003eMFC程序设计\u003c/a\u003e）\n\u003cul\u003e\n\u003cli\u003e写一个窗口，了解WinMain/WinProcedure，以及Windows的消息机制。\u003c/li\u003e\n\u003cli\u003e写一些程序来操作Windows SDK中的资源文件或是各种图形控件，以及作图的编程。\u003c/li\u003e\n\u003cli\u003e学习如何使用MSDN查看相关的SDK函数，各种WM_消息以及一些例程。\u003c/li\u003e\n\u003cli\u003e这本书中有很多例程，在实践中请不要照抄，试着自己写一个自己的例程。\u003c/li\u003e\n\u003cli\u003e不用太多于精通这些东西，因为GUI正在被Web取代，主要是了解一下Windows 图形界面的编程。@\u003ca title=\"virushuo\" href=\"https://twitter.com/#!/virushuo\" data-user-id=\"49913\"\u003evirushuo\u003c/a\u003e 说：“ 我觉得GUI确实不那么热门了，但充分理解GUI工作原理是很重要的。包括移动设备开发，如果没有基础知识仍然很吃力。或者说移动设备开发必须理解GUI工作，或者在win那边学，或者在mac/iOS上学”。\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e\u003cstrong\u003e2、学习Java\u003c/strong\u003e\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eJava 的学习主要是看经典的Core Java 《\u003ca href=\"http://product.china-pub.com/208978\" target=\"_blank\" rel=\"noopener\"\u003eJava 核心技术编程\u003c/a\u003e》和《\u003ca href=\"http://product.china-pub.com/34838\" target=\"_blank\" rel=\"noopener\"\u003eJava编程思想\u003c/a\u003e》（有两卷，我仅链了第一卷，足够了，因为Java的图形界面了解就可以了）\u003c/li\u003e\n\u003cli\u003e学习JDK，学会查阅Java API Doc \u003ca href=\"http://download.oracle.com/javase/6/docs/api/\"\u003ehttp://download.oracle.com/javase/6/docs/api/\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e了解一下Java这种虚拟机语言和C和Python语言在编译和执行上的差别。从C、Java、Python思考一下“跨平台”这种技术。\u003c/li\u003e\n\u003cli\u003e学会使用IDE Eclipse，使用Eclipse 编译，调试和开发Java程序。\u003c/li\u003e\n\u003cli\u003e建一个Tomcat的网站，尝试一下JSP/Servlet/JDBC/MySQL的Web开发。把前面所说的那个PHP的小项目试着用JSP和Servlet实现一下。\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv\u003e\u003cstrong\u003e3、Web的安全与架构\u003c/strong\u003e\u003c/div\u003e\n\u003cdiv\u003e\n\u003cul\u003e\n\u003cli\u003e学习HTML5，网上有很多很多教程，以前\u003ca href=\"https://coolshell.cn\" target=\"_blank\" rel=\"noopener\"\u003e酷壳\u003c/a\u003e也介绍过很多，我在这里就不罗列了。\u003c/li\u003e\n\u003cli\u003e学习Web开发的安全问题（参考\u003ca title=\"新浪微博的XSS攻击\" href=\"https://coolshell.cn/articles/4914.html\" target=\"_blank\" rel=\"noopener\"\u003e新浪微博被攻击的这个事\u003c/a\u003e，以及\u003ca href=\"http://guides.rubyonrails.org/security.html\" target=\"_blank\" rel=\"noopener\"\u003eRuby的这篇文章\u003c/a\u003e）\u003c/li\u003e\n\u003cli\u003e学习HTTP Server的rewrite机制，Nginx的反向代理机制，\u003ca href=\"https://en.wikipedia.org/wiki/Fast_CGI\" target=\"_blank\" rel=\"noopener\"\u003efast-cgi\u003c/a\u003e（如：\u003ca href=\" http://php-fpm.org/\" target=\"_blank\" rel=\"noopener\"\u003ePHP-FPM\u003c/a\u003e）\u003c/li\u003e\n\u003cli\u003e学习Web的静态页面缓存技术。\u003c/li\u003e\n\u003cli\u003e学习Web的异步工作流处理，数据Cache，数据分区，负载均衡，水平扩展的构架。\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003e实践任务：\u003c/strong\u003e\n\u003cul\u003e\n\u003cli\u003e使用HTML5的canvas 制作一些Web动画。\u003c/li\u003e\n\u003cli\u003e尝试在前面开发过的那个Web应用中进行SQL注入，JS注入，以及XSS攻击。\u003c/li\u003e\n\u003cli\u003e把前面开发过的那个Web应用改成构造在Nginx + PHP-FPM + 静态页面缓存的网站\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/div\u003e\n\u003cp\u003e\u003cstrong\u003e4、学习关系型数据库\u003c/strong\u003e\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e你可以安装MSSQLServer或MySQL来学习数据库。\u003c/li\u003e\n\u003cli\u003e学习教科书里数据库设计的那几个范式，1NF，2NF，3NF，……\u003c/li\u003e\n\u003cli\u003e学习数据库的存过，触发器，视图，建索引，游标等。\u003c/li\u003e\n\u003cli\u003e学习SQL语句，明白表连接的各种概念（参看《\u003ca title=\"图解SQL的Join\" href=\"https://coolshell.cn/articles/3463.html\"\u003eSQL  Join的图示\u003c/a\u003e》）\u003c/li\u003e\n\u003cli\u003e学习如何优化数据库查询（参看《\u003ca title=\"MySQL性能优化的最佳20+条经验\" href=\"https://coolshell.cn/articles/1846.html\"\u003eMySQL的优化\u003c/a\u003e》）\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003e实践任务\u003c/strong\u003e：设计一个论坛的数据库，至少满足3NF，使用SQL语句查询本周，本月的最新文章，评论最多的文章，最活跃用户。\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e\u003cstrong\u003e5、一些开发工具\u003c/strong\u003e\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e学会使用SVN或Git来管理程序版本。\u003c/li\u003e\n\u003cli\u003e学会使用JUnit来对Java进行单元测试。\u003c/li\u003e\n\u003cli\u003e学习C语言和Java语言的coding standard 或 coding guideline。（我N年前写过一篇关C语言非常简单的文章——《\u003ca href=\"http://blog.csdn.net/haoel/article/category/9200/2\" target=\"_blank\" rel=\"noopener\"\u003e编程修养\u003c/a\u003e》，这样的东西你可以上网查一下，一大堆）。\u003c/li\u003e\n\u003cli\u003e推荐阅读《\u003ca href=\"http://product.china-pub.com/28351\" target=\"_blank\" rel=\"noopener\"\u003e代码大全\u003c/a\u003e》《\u003ca href=\"http://product.china-pub.com/196374\" target=\"_blank\" rel=\"noopener\"\u003e重构\u003c/a\u003e》《\u003ca href=\"http://product.china-pub.com/196266\" target=\"_blank\" rel=\"noopener\"\u003e代码整洁之道\u003c/a\u003e》\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch4\u003e\u003cspan class=\"ez-toc-section\" id=\"%E9%AB%98%E7%BA%A7%E6%B7%B1%E5%85%A5\"\u003e\u003c/span\u003e高级深入\u003cspan class=\"ez-toc-section-end\"\u003e\u003c/span\u003e\u003c/h4\u003e\n\u003cp\u003e\u003cstrong\u003e1、C++ / Java 和面向对象\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003e我个人以为学好C++，Java也就是举手之劳。但是C++的学习曲线相当的陡。不过，我觉得C++是最需要学好的语言了。参看两篇趣文“\u003ca title=\"C++ 程序员自信心曲线图\" href=\"https://coolshell.cn/articles/2287.html\" target=\"_blank\" rel=\"noopener\"\u003eC++学习信心图\u003c/a\u003e” 和“\u003ca title=\"“21天教你学会C++”\" href=\"https://coolshell.cn/articles/2250.html\" target=\"_blank\" rel=\"noopener\"\u003e21天学好C++\u003c/a\u003e”\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e学习\u003ca title=\"（麻省理工免费课程）C语言内存管理和C++面向对象编程\" href=\"https://coolshell.cn/articles/2474.html\" target=\"_blank\" rel=\"noopener\"\u003e（麻省理工免费课程）C++面向对象编程\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e读我的 “\u003ca title=\"如何学好C++语言\" href=\"https://coolshell.cn/articles/4119.html\" target=\"_blank\" rel=\"noopener\"\u003e如何学好C++\u003c/a\u003e”中所推荐的那些书至少两遍以上（如果你对C++的理解能够深入到像我所写的《\u003ca title=\"C++ 虚函数表解析\" href=\"https://coolshell.cn/articles/12165.html\" target=\"_blank\" rel=\"noopener\"\u003eC++虚函数表解析\u003c/a\u003e》或是《\u003ca title=\"C++ 对象的内存布局\" href=\"https://coolshell.cn/articles/12176.html\" target=\"_blank\" rel=\"noopener\"\u003eC++对象内存存局\u003c/a\u003e》，或是《\u003ca title=\"C/C++返回内部静态成员的陷阱\" href=\"https://coolshell.cn/articles/12192.html\" target=\"_blank\" rel=\"noopener\"\u003eC/C++返回内部静态成员的陷阱\u003c/a\u003e》那就非常不错了）\u003c/li\u003e\n\u003cli\u003e然后反思为什么C++要干成这样，Java则不是？你一定要学会对比C++和Java的不同。比如，Java中的初始化，垃圾回收，接口，异常，虚函数，等等。\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003e实践任务：\u003c/strong\u003e\n\u003cul\u003e\n\u003cli\u003e用C++实现一个BigInt，支持128位的整形的加减乘除的操作。\u003c/li\u003e\n\u003cli\u003e用C++封装一个数据结构的容量，比如hash table。\u003c/li\u003e\n\u003cli\u003e用C++封装并实现一个智能指针（一定要使用模板）。\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e《\u003ca href=\"http://product.china-pub.com/25961\" target=\"_blank\" rel=\"noopener\"\u003e设计模式\u003c/a\u003e》必需一读，两遍以上，思考一下，这23个模式的应用场景。主要是两点：1）钟爱组合而不是继承，2）钟爱接口而不是实现。（也推荐《\u003ca href=\"http://product.china-pub.com/27862\"\u003e深入浅出设计模式\u003c/a\u003e》）\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003e实践任务：\u003c/strong\u003e\n\u003cul\u003e\n\u003cli\u003e使用工厂模式实现一个内存池。\u003c/li\u003e\n\u003cli\u003e使用策略模式制做一个类其可以把文本文件进行左对齐，右对齐和中对齐。\u003c/li\u003e\n\u003cli\u003e使用命令模式实现一个命令行计算器，并支持undo和redo。\u003c/li\u003e\n\u003cli\u003e使用修饰模式实现一个酒店的房间价格订价策略——旺季，服务，VIP、旅行团、等影响价格的因素。\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e学习STL的用法和其设计概念  – 容器，算法，迭代器，函数子。如果可能，请读一下其源码。\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003e实践任务：\u003c/strong\u003e尝试使用面向对象、STL，设计模式、和WindowsSDK图形编程的各种技能\n\u003cul\u003e\n\u003cli\u003e做一个贪吃蛇或是俄罗斯方块的游戏。支持不同的级别和难度。\u003c/li\u003e\n\u003cli\u003e做一个文件浏览器，可以浏览目录下的文件，并可以对不同的文件有不同的操作，文本文件可以打开编辑，执行文件则执行之，mp3或avi文件可以播放，图片文件可以展示图片。\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e学习C++的一些类库的设计，如： MFC（看看候捷老师的《\u003ca href=\"http://product.china-pub.com/3565\" target=\"_blank\" rel=\"noopener\"\u003e深入浅出MFC\u003c/a\u003e》） ，Boost, ACE,  CPPUnit，STL （STL可能会太难了，但是如果你能了解其中的设计模式和设计那就太好了，如果你能深入到我写的《\u003ca href=\"http://blog.csdn.net/haoel/article/details/24058\" target=\"_blank\" rel=\"noopener\"\u003eSTL string类的写时拷贝技术\u003c/a\u003e》那就非常不错了，ACE需要很强在的系统知识，参见后面的“加强对系统的了解”）\u003c/li\u003e\n\u003cli\u003eJava是真正的面向对象的语言，Java的设计模式多得不能再多，也是用来学习面向对象的设计模式的最佳语言了（参看\u003ca title=\"JDK里的设计模式\" href=\"https://coolshell.cn/articles/3320.html\" target=\"_blank\" rel=\"noopener\"\u003eJava中的设计模式\u003c/a\u003e）。\u003c/li\u003e\n\u003cli\u003e推荐阅读《\u003ca href=\"http://product.china-pub.com/195040\"\u003eEffective Java\u003c/a\u003e》 and 《\u003ca href=\"http://product.china-pub.com/197212\"\u003eJava解惑\u003c/a\u003e》\u003c/li\u003e\n\u003cli\u003e学习Java的框架，Java的框架也是多，如Spring, Hibernate，Struts 等等，主要是学习Java的设计，如IoC等。\u003c/li\u003e\n\u003cli\u003eJava的技术也是烂多，重点学习J2EE架构以及JMS， RMI, 等消息传递和远程调用的技术。\u003c/li\u003e\n\u003cli\u003e学习使用Java做Web Service （\u003ca href=\"http://download.oracle.com/docs/cd/E17802_01/webservices/webservices/docs/2.0/tutorial/doc/\" target=\"_blank\" rel=\"noopener\"\u003e官方教程在这里\u003c/a\u003e）\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003e实践任务： \u003c/strong\u003e尝试在Spring或Hibernate框架下构建一个有网络的Web Service的远程调用程序，并可以在两个Service中通过JMS传递消息。\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eC++和Java都不是能在短时间内能学好的，C++玩是的深，Java玩的是广，我建议两者选一个。我个人的学习经历是：\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e深究C++（我深究C/C++了十来年了）\u003c/li\u003e\n\u003cli\u003e学习Java的各种设计模式。\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e\u003cstrong\u003e2、加强系统了解\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003e重要阅读下面的几本书：\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e《\u003ca href=\"http://product.china-pub.com/197413\" target=\"_blank\" rel=\"noopener\"\u003eUnix编程艺术\u003c/a\u003e》了解Unix系统领域中的设计和开发哲学、思想文化体系、原则与经验。你一定会有一种醍醐灌顶的感觉。\u003c/li\u003e\n\u003cli\u003e《\u003ca href=\"http://product.china-pub.com/196770\" target=\"_blank\" rel=\"noopener\"\u003eUnix网络编程卷1，套接字\u003c/a\u003e》这是一本看完你就明白网络编程的书。重要注意TCP、UDP，以及多路复用的系统调用select/poll/epoll的差别。\u003c/li\u003e\n\u003cli\u003e《\u003ca href=\"http://product.china-pub.com/35\" target=\"_blank\" rel=\"noopener\"\u003eTCP/IP详解 卷1:协议\u003c/a\u003e》- 这是一本看完后你就可以当网络黑客的书。了解以太网的的运作原理，了解TCP/IP的协议，运作原理以及如何TCP的调优。\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003e实践任务：\u003c/strong\u003e\n\u003cul\u003e\n\u003cli\u003e理解什么是阻塞（同步IO），非阻塞（异步IO），多路复用（select, poll, epoll）的IO技术。\u003c/li\u003e\n\u003cli\u003e写一个网络聊天程序，有聊天服务器和多个聊天客户端（服务端用UDP对部分或所有的的聊天客户端进Multicast或Broadcast）。\u003c/li\u003e\n\u003cli\u003e写一个简易的HTTP服务器。\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e《\u003ca href=\"http://product.china-pub.com/196859\" target=\"_blank\" rel=\"noopener\"\u003eUnix网络编程卷2，进程间通信\u003c/a\u003e》信号量，管道，共享内存，消息等各种IPC…… 这些技术好像有点老掉牙了，不过还是值得了解。\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003e实践任务：\u003c/strong\u003e\n\u003cul\u003e\n\u003cli\u003e主要实践各种IPC进程序通信的方法。\u003c/li\u003e\n\u003cli\u003e尝试写一个管道程序，父子进程通过管道交换数据。\u003c/li\u003e\n\u003cli\u003e尝试写一个共享内存的程序，两个进程通过共享内存交换一个C的结构体数组。\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e学习《\u003ca href=\"http://product.china-pub.com/209058\" target=\"_blank\" rel=\"noopener\"\u003eWindows核心编程\u003c/a\u003e》一书。把CreateProcess，Windows线程、线程调度、线程同步（Event,  信号量，互斥量）、异步I/O，内存管理，DLL，这几大块搞精通。\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003e实践任务：\u003c/strong\u003e使用CreateProcess启动一个记事本或IE，并监控该程序的运行。把前面写过的那个简易的HTTP服务用线程池实现一下。写一个DLL的钩子程序监控指定窗口的关闭事件，或是记录某个窗口的按键。\u003c/li\u003e\n\u003cli\u003e有了多线程、多进程通信，TCP/IP，套接字，C++和设计模式的基本，你可以研究一下ACE了。使用ACE重写上述的聊天程序和HTTP服务器（带线程池）\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003e实践任务：\u003c/strong\u003e通过以上的所有知识，尝试\n\u003cul\u003e\n\u003cli\u003e写一个服务端给客户端传大文件，要求把100M的带宽用到80%以上。（注意，磁盘I/O和网络I/O可能会很有问题，想一想怎么解决，另外，请注意网络传输最大单元MTU）\u003c/li\u003e\n\u003cli\u003e了解BT下载的工作原理，用多进程的方式模拟BT下载的原理。\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e\u003cstrong\u003e3、系统架构\u003c/strong\u003e\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e负载均衡。HASH式的，纯动态式的。（可以到Google学术里搜一些\u003ca href=\"https://scholar.google.com.hk/scholar?q=%E8%B4%9F%E8%BD%BD%E5%9D%87%E8%A1%A1\u0026amp;hl=zh-CN\u0026amp;as_sdt=0\u0026amp;as_vis=1\u0026amp;oi=scholart\" target=\"_blank\" rel=\"noopener\"\u003e关于负载均衡的文章\u003c/a\u003e读读）\u003c/li\u003e\n\u003cli\u003e多层分布式系统 – 客户端服务结点层、计算结点层、数据cache层，数据层。J2EE是经典的多层结构。\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://en.wikipedia.org/wiki/Content_delivery_network\" target=\"_blank\" rel=\"noopener\"\u003eCDN系统\u003c/a\u003e – 就近访问，内容边缘化。\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://en.wikipedia.org/wiki/Peer-to-peer\" target=\"_blank\" rel=\"noopener\"\u003eP2P式系统\u003c/a\u003e，研究一下BT和电驴的算法。比如：\u003ca href=\"https://en.wikipedia.org/wiki/Distributed_hash_table\" target=\"_blank\" rel=\"noopener\"\u003eDHT算法\u003c/a\u003e。\u003c/li\u003e\n\u003cli\u003e服务器备份，双机备份系统（Live-Standby和Live-Live系统），两台机器如何通过心跳监测对方？集群主结点备份。\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://en.wikipedia.org/wiki/Virtualization\" target=\"_blank\" rel=\"noopener\"\u003e虚拟化技术\u003c/a\u003e，使用这个技术，可以把操作系统当应用程序一下切换或重新配置和部署。\u003c/li\u003e\n\u003cli\u003e学习\u003ca href=\"http://thrift.apache.org/\" target=\"_blank\" rel=\"noopener\"\u003eThrift\u003c/a\u003e，二进制的高性能的通讯中间件，支持数据(对象)序列化和多种类型的RPC服务。\u003c/li\u003e\n\u003cli\u003e学习\u003ca href=\"http://hadoop.apache.org/\" target=\"_blank\" rel=\"noopener\"\u003eHadoop\u003c/a\u003e。Hadoop框架中最核心的设计就是：MapReduce和HDFS。MapReduce的思想是由Google的一篇论文所提及而被广为流传的，简单的一句话解释MapReduce就是“任务的分解与结果的汇总”。HDFS是Hadoop分布式文件系统（Hadoop Distributed File System）的缩写，为分布式计算存储提供了底层支持。\u003c/li\u003e\n\u003cli\u003e了解\u003ca href=\"https://en.wikipedia.org/wiki/NoSQL\" target=\"_blank\" rel=\"noopener\"\u003eNoSQL数据库\u003c/a\u003e（有人说可能是一个\u003ca title=\"那些炒作过度的技术和概念\" href=\"https://coolshell.cn/articles/3609.html\" target=\"_blank\" rel=\"noopener\"\u003e过渡炒作的技术\u003c/a\u003e），不过因为超大规模以及高并发的纯动态型网站日渐成为主流，而SNS类网站在数据存取过程中有着实时性等刚性需求，这使得目前NoSQL数据库慢慢成了人们所关注的焦点，并大有成为取代关系型数据库而成为未来主流数据存储模式的趋势。当前NoSQL数据库很多，大部分都是开源的，其中比较知名的有：MemcacheDB、Redis、Tokyo Cabinet(升级版为Kyoto Cabinet)、Flare、MongoDB、CouchDB、Cassandra、Voldemort等。\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e写了那么多，回顾一下，觉得自己相当的有成就感。希望大家不要吓着，我自己这十来年也在不断地学习，今天我也在学习中，人生本来就是一个不断学习和练级的过程。\u003cstrong\u003e不过，一定有漏的，也有不对的，还希望大家补充和更正\u003c/strong\u003e。（\u003cspan style=\"color: #cc0000;\"\u003e\u003cstrong\u003e我会根据大家的反馈随时更新此文\u003c/strong\u003e\u003c/span\u003e）欢迎大家通过我的微博（\u003ca href=\"http://weibo.com/haoel\" target=\"_blank\" rel=\"noopener\"\u003e@左耳朵耗子\u003c/a\u003e）和twitter（@\u003ca href=\"https://twitter.com/haoel\" target=\"_blank\" rel=\"noopener\"\u003ehaoel\u003c/a\u003e）和我交流。\u003c/p\u003e\n\u003cp\u003e\u003cem\u003e\u003cstrong\u003e—– 更新  2011/07/19 —–\u003c/strong\u003e\u003c/em\u003e\u003c/p\u003e\n\u003cp\u003e1）有朋友奇怪为什么我在这篇文章开头说了web+移动，却没有在后面提到iOS/Android的前端开发。因为我心里有一种感觉，移动设备上的UI最终也会被Javascript取代。大家可以用iPhone或Android看看google+，你就会明白了。\u003c/p\u003e\n\u003cp\u003e2）有朋友说我这里的东西太多了，不能为了学习而学习，我非常同意。我在文章的前面也说了要思考。另外，千万不要以为我说的这些东西是一些新的技术，这份攻略里95%以上的全是基础。而且都是久经考验的基础技术。即是可以让你一通百通的技术，也是可以让你找到一份不错工作的技术。\u003c/p\u003e\n\u003cp\u003e3）有朋友说学这些东西学完都40了，还不如想想怎么去挣钱。我想告诉大家，一是我今年还没有40岁，二是学无止境啊，三是我不觉得挣钱有多难，难的是怎么让你值那么多钱？无论是打工还是创业，是什么东西让你自己的价值，让你公司的价值更值钱？别的地方我不敢说，对于互联网或IT公司来说，技术实力绝对是其中之一。\u003c/p\u003e\n\u003cp\u003e4）有朋友说技术都是工具，不应该如此痴迷这句话没有错，有时候我们需要更多的是抬起头来看看技术以外的事情，或者是说我们在作技术的时候不去思考为什么会有这个技术，为什么不是别的，问题不在于技术，问题在于我们死读书，读死书，成了技术的书呆子。\u003c/p\u003e\n\u003cp\u003e5） 对于NoSQL，最近比较火，但我对其有点保守，所以，我只是说了解就可以。对于Hadoop，我觉得其在分布式系统上有巨大的潜力，所以需要学习。 对于关系型数据库，的确是很重要的东西，这点是我的疏忽，在原文里补充。\u003c/p\u003e\n\u003cp\u003e（全文完）\u003c/p\u003e\n\u003chr/\u003e\n\u003cp\u003e\u003cstrong\u003e\u003cspan style=\"color: #cc0000; font-size: 16pt;\"\u003e注：该文最新的版本在这里\u003c/span\u003e《\u003ca style=\"font-size: 16pt;\" href=\"https://coolshell.cn/articles/18360.html\"\u003e程序员技术练级攻略（2018版）\u003c/a\u003e》\u003cspan style=\"color: #cc0000; font-size: 16pt;\"\u003e（需要付费阅读）\u003c/span\u003e\u003c/strong\u003e\u003c/p\u003e\n\u003cdiv style=\"margin-top: 15px; font-size: 16px;color: #cc0000;\"\u003e\n\u003cp align=\"center\"\u003e\u003cstrong\u003e（转载本站文章请注明作者和出处 \u003ca href=\"https://coolshell.cn/\"\u003e酷 壳 – CoolShell\u003c/a\u003e ，请勿用于任何商业用途）\u003c/strong\u003e\u003c/p\u003e\n\u003c/div\u003e\n\u003cdiv class=\"wp_rp_wrap  wp_rp_vertical_m\" id=\"wp_rp_first\"\u003e\u003cdiv class=\"wp_rp_content\"\u003e\u003ch3 class=\"related_post_title\"\u003e相关文章\u003c/h3\u003e\u003cul class=\"related_post wp_rp\"\u003e\u003cli\u003e\u003ca href=\"https://coolshell.cn/articles/18360.html\" class=\"wp_rp_thumbnail\"\u003e\u003cimg src=\"https://coolshell.cn/wp-content/uploads/2018/05/300x262-150x150.jpg\" alt=\"程序员练级攻略（2018)  与我的专栏\" width=\"150\" height=\"150\"/\u003e\u003c/a\u003e\u003ca href=\"https://coolshell.cn/articles/18360.html\" class=\"wp_rp_title\"\u003e程序员练级攻略（2018) 与我的专栏\u003c/a\u003e\u003c/li\u003e\u003cli\u003e\u003ca href=\"https://coolshell.cn/articles/8088.html\" class=\"wp_rp_thumbnail\"\u003e\u003cimg src=\"https://coolshell.cn/wp-content/plugins/wordpress-23-related-posts-plugin/static/thumbs/7.jpg\" alt=\"对技术的态度\" width=\"150\" height=\"150\"/\u003e\u003c/a\u003e\u003ca href=\"https://coolshell.cn/articles/8088.html\" class=\"wp_rp_title\"\u003e对技术的态度\u003c/a\u003e\u003c/li\u003e\u003cli\u003e\u003ca href=\"https://coolshell.cn/articles/4102.html\" class=\"wp_rp_thumbnail\"\u003e\u003cimg src=\"https://coolshell.cn/wp-content/plugins/wordpress-23-related-posts-plugin/static/thumbs/25.jpg\" alt=\"如何学好C语言\" width=\"150\" height=\"150\"/\u003e\u003c/a\u003e\u003ca href=\"https://coolshell.cn/articles/4102.html\" class=\"wp_rp_title\"\u003e如何学好C语言\u003c/a\u003e\u003c/li\u003e\u003cli\u003e\u003ca href=\"https://coolshell.cn/articles/4758.html\" class=\"wp_rp_thumbnail\"\u003e\u003cimg src=\"https://coolshell.cn/wp-content/plugins/wordpress-23-related-posts-plugin/static/thumbs/30.jpg\" alt=\"如何写出无法维护的代码\" width=\"150\" height=\"150\"/\u003e\u003c/a\u003e\u003ca href=\"https://coolshell.cn/articles/4758.html\" class=\"wp_rp_title\"\u003e如何写出无法维护的代码\u003c/a\u003e\u003c/li\u003e\u003cli\u003e\u003ca href=\"https://coolshell.cn/articles/1992.html\" class=\"wp_rp_thumbnail\"\u003e\u003cimg src=\"https://coolshell.cn/wp-content/uploads/2009/12/language-fanboys-150x150.jpg\" alt=\"程序员眼中的编程语言\" width=\"150\" height=\"150\"/\u003e\u003c/a\u003e\u003ca href=\"https://coolshell.cn/articles/1992.html\" class=\"wp_rp_title\"\u003e程序员眼中的编程语言\u003c/a\u003e\u003c/li\u003e\u003cli\u003e\u003ca href=\"https://coolshell.cn/articles/19219.html\" class=\"wp_rp_thumbnail\"\u003e\u003cimg src=\"https://coolshell.cn/wp-content/uploads/2019/03/linux.ninja_-150x150.png\" alt=\"打造高效的工作环境 – Shell 篇\" width=\"150\" height=\"150\"/\u003e\u003c/a\u003e\u003ca href=\"https://coolshell.cn/articles/19219.html\" class=\"wp_rp_title\"\u003e打造高效的工作环境 – Shell 篇\u003c/a\u003e\u003c/li\u003e\u003c/ul\u003e\u003c/div\u003e\u003c/div\u003e\n\u003cdiv id=\"post-ratings-4990\" class=\"post-ratings\" itemscope=\"\" itemtype=\"https://schema.org/Article\" data-nonce=\"a3c9e23ab8\"\u003e\u003cimg id=\"rating_4990_1\" src=\"https://coolshell.cn/wp-content/plugins/wp-postratings/images/stars_crystal/rating_on.gif\" alt=\"好烂啊\" title=\"好烂啊\" onmouseover=\"if (!window.__cfRLUnblockHandlers) return false; current_rating(4990, 1, \u0026#39;好烂啊\u0026#39;);\" onmouseout=\"if (!window.__cfRLUnblockHandlers) return false; ratings_off(4.7, 5, 0);\" onclick=\"if (!window.__cfRLUnblockHandlers) return false; rate_post();\" onkeypress=\"if (!window.__cfRLUnblockHandlers) return false; rate_post();\" style=\"cursor: pointer; border: 0px;\" data-cf-modified-482e50188306a5122a0e92bf-=\"\"/\u003e\u003cimg id=\"rating_4990_2\" src=\"https://coolshell.cn/wp-content/plugins/wp-postratings/images/stars_crystal/rating_on.gif\" alt=\"有点差\" title=\"有点差\" onmouseover=\"if (!window.__cfRLUnblockHandlers) return false; current_rating(4990, 2, \u0026#39;有点差\u0026#39;);\" onmouseout=\"if (!window.__cfRLUnblockHandlers) return false; ratings_off(4.7, 5, 0);\" onclick=\"if (!window.__cfRLUnblockHandlers) return false; rate_post();\" onkeypress=\"if (!window.__cfRLUnblockHandlers) return false; rate_post();\" style=\"cursor: pointer; border: 0px;\" data-cf-modified-482e50188306a5122a0e92bf-=\"\"/\u003e\u003cimg id=\"rating_4990_3\" src=\"https://coolshell.cn/wp-content/plugins/wp-postratings/images/stars_crystal/rating_on.gif\" alt=\"凑合看看\" title=\"凑合看看\" onmouseover=\"if (!window.__cfRLUnblockHandlers) return false; current_rating(4990, 3, \u0026#39;凑合看看\u0026#39;);\" onmouseout=\"if (!window.__cfRLUnblockHandlers) return false; ratings_off(4.7, 5, 0);\" onclick=\"if (!window.__cfRLUnblockHandlers) return false; rate_post();\" onkeypress=\"if (!window.__cfRLUnblockHandlers) return false; rate_post();\" style=\"cursor: pointer; border: 0px;\" data-cf-modified-482e50188306a5122a0e92bf-=\"\"/\u003e\u003cimg id=\"rating_4990_4\" src=\"https://coolshell.cn/wp-content/plugins/wp-postratings/images/stars_crystal/rating_on.gif\" alt=\"还不错\" title=\"还不错\" onmouseover=\"if (!window.__cfRLUnblockHandlers) return false; current_rating(4990, 4, \u0026#39;还不错\u0026#39;);\" onmouseout=\"if (!window.__cfRLUnblockHandlers) return false; ratings_off(4.7, 5, 0);\" onclick=\"if (!window.__cfRLUnblockHandlers) return false; rate_post();\" onkeypress=\"if (!window.__cfRLUnblockHandlers) return false; rate_post();\" style=\"cursor: pointer; border: 0px;\" data-cf-modified-482e50188306a5122a0e92bf-=\"\"/\u003e\u003cimg id=\"rating_4990_5\" src=\"https://coolshell.cn/wp-content/plugins/wp-postratings/images/stars_crystal/rating_half.gif\" alt=\"很精彩\" title=\"很精彩\" onmouseover=\"if (!window.__cfRLUnblockHandlers) return false; current_rating(4990, 5, \u0026#39;很精彩\u0026#39;);\" onmouseout=\"if (!window.__cfRLUnblockHandlers) return false; ratings_off(4.7, 5, 0);\" onclick=\"if (!window.__cfRLUnblockHandlers) return false; rate_post();\" onkeypress=\"if (!window.__cfRLUnblockHandlers) return false; rate_post();\" style=\"cursor: pointer; border: 0px;\" data-cf-modified-482e50188306a5122a0e92bf-=\"\"/\u003e (\u003cstrong\u003e323\u003c/strong\u003e 人打了分，平均分： \u003cstrong\u003e4.74\u003c/strong\u003e )\u003cbr/\u003e\u003cspan class=\"post-ratings-text\" id=\"ratings_4990_text\"\u003e\u003c/span\u003e\u003cmeta itemprop=\"name\" content=\"程序员技术练级攻略\"/\u003e\u003cmeta itemprop=\"headline\" content=\"程序员技术练级攻略\"/\u003e\u003cmeta itemprop=\"description\" content=\"注：该文最新的版本在这里《程序员技术练级攻略（2018版）》（需要付费阅读）\n\n月光博客6月12日发表了《写给新手程序员的一封信》，翻译自《An open letter to those who want to start programming》，我的朋友（他在本站的id是Mailper）告诉我，他希望在酷壳上看到一篇更具操作性的文章。因为他也是喜欢编程和技术的家伙，于是，我让他把他的一些学习P...\"/\u003e\u003cmeta itemprop=\"datePublished\" content=\"2011-07-18T10:31:22+08:00\"/\u003e\u003cmeta itemprop=\"dateModified\" content=\"2018-06-09T10:13:21+08:00\"/\u003e\u003cmeta itemprop=\"url\" content=\"https://coolshell.cn/articles/4990.html\"/\u003e\u003cmeta itemprop=\"author\" content=\"陈皓\"/\u003e\u003cmeta itemprop=\"mainEntityOfPage\" content=\"https://coolshell.cn/articles/4990.html\"/\u003e\u003cdiv style=\"display: none;\" itemprop=\"publisher\" itemscope=\"\" itemtype=\"https://schema.org/Organization\"\u003e\u003cmeta itemprop=\"name\" content=\"酷 壳 - CoolShell\"/\u003e\u003cmeta itemprop=\"url\" content=\"https://coolshell.cn\"/\u003e\u003cdiv itemprop=\"logo\" itemscope=\"\" itemtype=\"https://schema.org/ImageObject\"\u003e\u003cmeta itemprop=\"url\" content=\"\"/\u003e\u003c/div\u003e\u003c/div\u003e\u003cdiv style=\"display: none;\" itemprop=\"aggregateRating\" itemscope=\"\" itemtype=\"https://schema.org/AggregateRating\"\u003e\u003cmeta itemprop=\"bestRating\" content=\"5\"/\u003e\u003cmeta itemprop=\"worstRating\" content=\"1\"/\u003e\u003cmeta itemprop=\"ratingValue\" content=\"4.74\"/\u003e\u003cmeta itemprop=\"ratingCount\" content=\"323\"/\u003e\u003c/div\u003e\u003c/div\u003e\u003cdiv id=\"post-ratings-4990-loading\" class=\"post-ratings-loading\"\u003e\u003cimg src=\"https://coolshell.cn/wp-content/plugins/wp-postratings/images/loading.gif\" width=\"16\" height=\"16\" class=\"post-ratings-image\"/\u003eLoading...\u003c/div\u003e\n\u003c/div\u003e",
  "Date": "2011-07-18T10:31:22+08:00",
  "Author": "陈皓"
}