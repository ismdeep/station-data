{
  "Source": "coolshell.cn",
  "Title": "sed 简明教程",
  "Link": "https://coolshell.cn/articles/9104.html",
  "Content": "\u003cdiv class=\"entry-content\"\u003e\n\u003cp\u003e\u003cscript async=\"\" src=\"https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3415450859608158\" crossorigin=\"anonymous\" type=\"3165672fc61195e401039eea-text/javascript\"\u003e\u003c/script\u003e\u003cimg decoding=\"async\" class=\"alignright wp-image-9126\" src=\"https://coolshell.cn/wp-content/uploads/2013/02/sed-superman.png\" alt=\"\" width=\"216\" height=\"216\" srcset=\"https://coolshell.cn/wp-content/uploads/2013/02/sed-superman.png 270w, https://coolshell.cn/wp-content/uploads/2013/02/sed-superman-150x150.png 150w, https://coolshell.cn/wp-content/uploads/2013/02/sed-superman-200x200.png 200w\" sizes=\"(max-width: 216px) 100vw, 216px\"/\u003eawk于1977年出生，今年36岁本命年，sed比awk大2-3岁，awk就像林妹妹，sed就是宝玉哥哥了。所以 \u003ca title=\"AWK 简明教程\" href=\"https://coolshell.cn/articles/9070.html\" target=\"_blank\" rel=\"noopener noreferrer\"\u003e林妹妹跳了个Topless\u003c/a\u003e，他的哥哥sed坐不住了，也一定要出来抖一抖。\u003c/p\u003e\n\u003cp\u003esed全名叫stream editor，流编辑器，用程序的方式来编辑文本，相当的hacker啊。sed基本上就是玩正则模式匹配，所以，玩sed的人，正则表达式一般都比较强。\u003c/p\u003e\n\u003cp\u003e同样，本篇文章不会说sed的全部东西，你可以参看\u003ca href=\"http://www.gnu.org/software/sed/manual/sed.html\" target=\"_blank\" rel=\"noopener noreferrer\"\u003esed的手册\u003c/a\u003e，我这里主要还是想和大家竞争一下那些从手机指缝间或马桶里流走的时间，用这些时间来学习一些东西。当然，接下来的还是要靠大家自己双手。\u003c/p\u003e\n\u003cdiv id=\"ez-toc-container\" class=\"ez-toc-v2_0_48 counter-hierarchy ez-toc-counter ez-toc-grey ez-toc-container-direction\"\u003e\n\u003cdiv class=\"ez-toc-title-container\"\u003e\n\u003cp class=\"ez-toc-title\"\u003e目录\u003c/p\u003e\n\u003cspan class=\"ez-toc-title-toggle\"\u003e\u003c/span\u003e\u003c/div\u003e\n\u003cnav\u003e\u003cul class=\"ez-toc-list ez-toc-list-level-1 \"\u003e\u003cli class=\"ez-toc-page-1 ez-toc-heading-level-4\"\u003e\u003ca class=\"ez-toc-link ez-toc-heading-1\" href=\"#%E7%94%A8s%E5%91%BD%E4%BB%A4%E6%9B%BF%E6%8D%A2\" title=\"用s命令替换\"\u003e用s命令替换\u003c/a\u003e\u003c/li\u003e\u003cli class=\"ez-toc-page-1 ez-toc-heading-level-4\"\u003e\u003ca class=\"ez-toc-link ez-toc-heading-2\" href=\"#%E5%A4%9A%E4%B8%AA%E5%8C%B9%E9%85%8D\" title=\"多个匹配\"\u003e多个匹配\u003c/a\u003e\u003c/li\u003e\u003cli class=\"ez-toc-page-1 ez-toc-heading-level-4\"\u003e\u003ca class=\"ez-toc-link ez-toc-heading-3\" href=\"#%E5%9C%86%E6%8B%AC%E5%8F%B7%E5%8C%B9%E9%85%8D\" title=\"圆括号匹配\"\u003e圆括号匹配\u003c/a\u003e\u003c/li\u003e\u003cli class=\"ez-toc-page-1 ez-toc-heading-level-4\"\u003e\u003ca class=\"ez-toc-link ez-toc-heading-4\" href=\"#sed%E7%9A%84%E5%91%BD%E4%BB%A4\" title=\"sed的命令\"\u003esed的命令\u003c/a\u003e\u003cul class=\"ez-toc-list-level-5\"\u003e\u003cli class=\"ez-toc-heading-level-5\"\u003e\u003ca class=\"ez-toc-link ez-toc-heading-5\" href=\"#N%E5%91%BD%E4%BB%A4\" title=\"N命令\"\u003eN命令\u003c/a\u003e\u003c/li\u003e\u003cli class=\"ez-toc-page-1 ez-toc-heading-level-5\"\u003e\u003ca class=\"ez-toc-link ez-toc-heading-6\" href=\"#a%E5%91%BD%E4%BB%A4%E5%92%8Ci%E5%91%BD%E4%BB%A4\" title=\"a命令和i命令\"\u003ea命令和i命令\u003c/a\u003e\u003c/li\u003e\u003cli class=\"ez-toc-page-1 ez-toc-heading-level-5\"\u003e\u003ca class=\"ez-toc-link ez-toc-heading-7\" href=\"#c%E5%91%BD%E4%BB%A4\" title=\"c命令\"\u003ec命令\u003c/a\u003e\u003c/li\u003e\u003cli class=\"ez-toc-page-1 ez-toc-heading-level-5\"\u003e\u003ca class=\"ez-toc-link ez-toc-heading-8\" href=\"#d%E5%91%BD%E4%BB%A4\" title=\"d命令\"\u003ed命令\u003c/a\u003e\u003c/li\u003e\u003cli class=\"ez-toc-page-1 ez-toc-heading-level-5\"\u003e\u003ca class=\"ez-toc-link ez-toc-heading-9\" href=\"#p%E5%91%BD%E4%BB%A4\" title=\"p命令\"\u003ep命令\u003c/a\u003e\u003c/li\u003e\u003c/ul\u003e\u003c/li\u003e\u003cli class=\"ez-toc-page-1 ez-toc-heading-level-4\"\u003e\u003ca class=\"ez-toc-link ez-toc-heading-10\" href=\"#%E5%87%A0%E4%B8%AA%E7%9F%A5%E8%AF%86%E7%82%B9\" title=\"几个知识点\"\u003e几个知识点\u003c/a\u003e\u003cul class=\"ez-toc-list-level-5\"\u003e\u003cli class=\"ez-toc-heading-level-5\"\u003e\u003ca class=\"ez-toc-link ez-toc-heading-11\" href=\"#Pattern_Space\" title=\"Pattern Space\"\u003ePattern Space\u003c/a\u003e\u003c/li\u003e\u003cli class=\"ez-toc-page-1 ez-toc-heading-level-5\"\u003e\u003ca class=\"ez-toc-link ez-toc-heading-12\" href=\"#Address\" title=\"Address\"\u003eAddress\u003c/a\u003e\u003c/li\u003e\u003cli class=\"ez-toc-page-1 ez-toc-heading-level-5\"\u003e\u003ca class=\"ez-toc-link ez-toc-heading-13\" href=\"#%E5%91%BD%E4%BB%A4%E6%89%93%E5%8C%85\" title=\"命令打包\"\u003e命令打包\u003c/a\u003e\u003c/li\u003e\u003cli class=\"ez-toc-page-1 ez-toc-heading-level-5\"\u003e\u003ca class=\"ez-toc-link ez-toc-heading-14\" href=\"#Hold_Space\" title=\"Hold Space\"\u003eHold Space\u003c/a\u003e\u003c/li\u003e\u003c/ul\u003e\u003c/li\u003e\u003c/ul\u003e\u003c/nav\u003e\u003c/div\u003e\n\u003ch4\u003e\u003cspan class=\"ez-toc-section\" id=\"%E7%94%A8s%E5%91%BD%E4%BB%A4%E6%9B%BF%E6%8D%A2\"\u003e\u003c/span\u003e用s命令替换\u003cspan class=\"ez-toc-section-end\"\u003e\u003c/span\u003e\u003c/h4\u003e\n\u003cp\u003e我使用下面的这段文本做演示：\u003c/p\u003e\n\u003cpre data-enlighter-language=\"shell\" class=\"EnlighterJSRAW\"\u003e$ cat pets.txt\nThis is my cat\n  my cat\u0026#39;s name is betty\nThis is my dog\n  my dog\u0026#39;s name is frank\nThis is my fish\n  my fish\u0026#39;s name is george\nThis is my goat\n  my goat\u0026#39;s name is adam\u003c/pre\u003e\n\u003cp\u003e把其中的my字符串替换成Hao Chen’s，下面的语句应该很好理解（s表示替换命令，/my/表示匹配my，/Hao Chen’s/表示把匹配替换成Hao Chen’s，/g 表示一行上的替换所有的匹配）：\u003c/p\u003e\n\u003cpre data-enlighter-language=\"shell\" class=\"EnlighterJSRAW\"\u003e$ sed \u0026#34;s/my/Hao Chen\u0026#39;s/g\u0026#34; pets.txt\nThis is Hao Chen\u0026#39;s cat\n  Hao Chen\u0026#39;s cat\u0026#39;s name is betty\nThis is Hao Chen\u0026#39;s dog\n  Hao Chen\u0026#39;s dog\u0026#39;s name is frank\nThis is Hao Chen\u0026#39;s fish\n  Hao Chen\u0026#39;s fish\u0026#39;s name is george\nThis is Hao Chen\u0026#39;s goat\n  Hao Chen\u0026#39;s goat\u0026#39;s name is adam\u003c/pre\u003e\n\u003cp\u003e注意：如果你要使用单引号，那么你没办法通过\\’这样来转义，就有双引号就可以了，在双引号内可以用\\”来转义。\u003c/p\u003e\n\u003cp\u003e\u003cspan id=\"more-9104\"\u003e\u003c/span\u003e\u003c/p\u003e\n\u003cp\u003e再注意：上面的sed并没有对文件的内容改变，只是把处理过后的内容输出，如果你要写回文件，你可以使用重定向，如：\u003c/p\u003e\n\u003cp\u003e\u003ccode data-enlighter-language=\"shell\" class=\"EnlighterJSRAW\"\u003e$ sed \u0026#34;s/my/Hao Chen\u0026#39;s/g\u0026#34; pets.txt \u0026gt; hao_pets.txt\u003c/code\u003e\u003c/p\u003e\n\u003cp\u003e或使用 -i 参数直接修改文件内容：\u003c/p\u003e\n\u003cp\u003e\u003ccode data-enlighter-language=\"shell\" class=\"EnlighterJSRAW\"\u003e$ sed -i \u0026#34;s/my/Hao Chen\u0026#39;s/g\u0026#34; pets.txt\u003c/code\u003e\u003c/p\u003e\n\u003cp\u003e在每一行最前面加点东西：\u003c/p\u003e\n\u003cpre data-enlighter-language=\"shell\" class=\"EnlighterJSRAW\"\u003e$ sed \u0026#39;s/^/#/g\u0026#39; pets.txt\n#This is my cat\n#  my cat\u0026#39;s name is betty\n#This is my dog\n#  my dog\u0026#39;s name is frank\n#This is my fish\n#  my fish\u0026#39;s name is george\n#This is my goat\n#  my goat\u0026#39;s name is adam\u003c/pre\u003e\n\u003cp\u003e在每一行最后面加点东西：\u003c/p\u003e\n\u003cpre data-enlighter-language=\"shell\" class=\"EnlighterJSRAW\"\u003e$ sed \u0026#39;s/$/ --- /g\u0026#39; pets.txt\nThis is my cat ---\n  my cat\u0026#39;s name is betty ---\nThis is my dog ---\n  my dog\u0026#39;s name is frank ---\nThis is my fish ---\n  my fish\u0026#39;s name is george ---\nThis is my goat ---\n  my goat\u0026#39;s name is adam ---\u003c/pre\u003e\n\u003cp\u003e顺手介绍一下正则表达式的一些最基本的东西：\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e \u003ccode\u003e^\u003c/code\u003e 表示一行的开头。如：\u003ccode\u003e/^#/\u003c/code\u003e 以#开头的匹配。\u003c/li\u003e\n\u003cli\u003e \u003ccode\u003e$\u003c/code\u003e 表示一行的结尾。如：\u003ccode\u003e/}$/\u003c/code\u003e 以}结尾的匹配。\u003c/li\u003e\n\u003cli\u003e \u003ccode\u003e\\\u0026lt;\u003c/code\u003e 表示词首。 如：\u003ccode\u003e\\\u0026lt;abc\u003c/code\u003e 表示以 abc 为首的詞。\u003c/li\u003e\n\u003cli\u003e \u003ccode\u003e\\\u0026gt;\u003c/code\u003e 表示词尾。 如：\u003ccode\u003eabc\\\u0026gt;\u003c/code\u003e 表示以 abc 結尾的詞。\u003c/li\u003e\n\u003cli\u003e \u003ccode\u003e.\u003c/code\u003e 表示任何单个字符。\u003c/li\u003e\n\u003cli\u003e \u003ccode\u003e*\u003c/code\u003e 表示某个字符出现了0次或多次。\u003c/li\u003e\n\u003cli\u003e \u003ccode\u003e[ ]\u003c/code\u003e 字符集合。 如：\u003ccode\u003e[abc]\u003c/code\u003e 表示匹配a或b或c，还有 \u003ccode\u003e[a-zA-Z]\u003c/code\u003e 表示匹配所有的26个字符。如果其中有^表示反，如 \u003ccode\u003e[^a]\u003c/code\u003e 表示非a的字符\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e正规则表达式是一些很牛的事，比如我们要去掉某html中的tags：\u003c/p\u003e\n\u003cpre data-enlighter-language=\"html\" class=\"EnlighterJSRAW\"\u003e\n\n\u0026lt;b\u0026gt;This\u0026lt;/b\u0026gt; is what \u0026lt;span style=\u0026#34;text-decoration: underline;\u0026#34;\u0026gt;I\u0026lt;/span\u0026gt; meant. Understand?\n\n\u003c/pre\u003e\n\u003cp\u003e看看我们的sed命令\u003c/p\u003e\n\u003cpre data-enlighter-language=\"shell\" class=\"EnlighterJSRAW\"\u003e# 如果你这样搞的话，就会有问题\n$ sed \u0026#39;s/\u0026lt;.*\u0026gt;//g\u0026#39; html.txt\n Understand?\n\n# 要解决上面的那个问题，就得像下面这样。\n# 其中的\u0026#39;[^\u0026gt;]\u0026#39; 指定了除了\u0026gt;的字符重复0次或多次。\n$ sed \u0026#39;s/\u0026lt;[^\u0026gt;]*\u0026gt;//g\u0026#39; html.txt\nThis is what I meant. Understand?\u003c/pre\u003e\n\u003cp\u003e我们再来看看指定需要替换的内容：\u003c/p\u003e\n\u003cpre data-enlighter-language=\"shell\" class=\"EnlighterJSRAW\" data-enlighter-highlight=\"4\"\u003e$ sed \u0026#34;3s/my/your/g\u0026#34; pets.txt\nThis is my cat\n  my cat\u0026#39;s name is betty\nThis is your dog\n  my dog\u0026#39;s name is frank\nThis is my fish\n  my fish\u0026#39;s name is george\nThis is my goat\n  my goat\u0026#39;s name is adam\u003c/pre\u003e\n\u003cp\u003e下面的命令只替换第3到第6行的文本。\u003c/p\u003e\n\u003cpre data-enlighter-language=\"shell\" class=\"EnlighterJSRAW\" data-enlighter-highlight=\"4,5,6,7\"\u003e$ sed \u0026#34;3,6s/my/your/g\u0026#34; pets.txt\nThis is my cat\n  my cat\u0026#39;s name is betty\nThis is your dog\n  your dog\u0026#39;s name is frank\nThis is your fish\n  your fish\u0026#39;s name is george\nThis is my goat\n  my goat\u0026#39;s name is adam\u003c/pre\u003e\n\u003cp\u003e \u003c/p\u003e\n\u003cpre data-enlighter-language=\"shell\" class=\"EnlighterJSRAW\"\u003e$ cat my.txt\nThis is my cat, my cat\u0026#39;s name is betty\nThis is my dog, my dog\u0026#39;s name is frank\nThis is my fish, my fish\u0026#39;s name is george\nThis is my goat, my goat\u0026#39;s name is adam\u003c/pre\u003e\n\u003cp\u003e只替换每一行的第一个s：\u003c/p\u003e\n\u003cpre data-enlighter-language=\"shell\" class=\"EnlighterJSRAW\"\u003e$ sed \u0026#39;s/s/S/1\u0026#39; my.txt\nThiS is my cat, my cat\u0026#39;s name is betty\nThiS is my dog, my dog\u0026#39;s name is frank\nThiS is my fish, my fish\u0026#39;s name is george\nThiS is my goat, my goat\u0026#39;s name is adam\u003c/pre\u003e\n\u003cp\u003e只替换每一行的第二个s：\u003c/p\u003e\n\u003cpre data-enlighter-language=\"shell\" class=\"EnlighterJSRAW\"\u003e$ sed \u0026#39;s/s/S/2\u0026#39; my.txt\nThis iS my cat, my cat\u0026#39;s name is betty\nThis iS my dog, my dog\u0026#39;s name is frank\nThis iS my fish, my fish\u0026#39;s name is george\nThis iS my goat, my goat\u0026#39;s name is adam\u003c/pre\u003e\n\u003cp\u003e只替换第一行的第3个以后的s：\u003c/p\u003e\n\u003cpre data-enlighter-language=\"shell\" class=\"EnlighterJSRAW\"\u003e$ sed \u0026#39;s/s/S/3g\u0026#39; my.txt\nThis is my cat, my cat\u0026#39;S name iS betty\nThis is my dog, my dog\u0026#39;S name iS frank\nThis is my fiSh, my fiSh\u0026#39;S name iS george\nThis is my goat, my goat\u0026#39;S name iS adam\u003c/pre\u003e\n\u003ch4\u003e\u003cspan class=\"ez-toc-section\" id=\"%E5%A4%9A%E4%B8%AA%E5%8C%B9%E9%85%8D\"\u003e\u003c/span\u003e多个匹配\u003cspan class=\"ez-toc-section-end\"\u003e\u003c/span\u003e\u003c/h4\u003e\n\u003cp\u003e如果我们需要一次替换多个模式，可参看下面的示例：（第一个模式把第一行到第三行的my替换成your，第二个则把第3行以后的This替换成了That）\u003c/p\u003e\n\u003cpre data-enlighter-language=\"shell\" class=\"EnlighterJSRAW\"\u003e$ sed \u0026#39;1,3s/my/your/g; 3,$s/This/That/g\u0026#39; my.txt\nThis is your cat, your cat\u0026#39;s name is betty\nThis is your dog, your dog\u0026#39;s name is frank\nThat is your fish, your fish\u0026#39;s name is george\nThat is my goat, my goat\u0026#39;s name is adam\u003c/pre\u003e\n\u003cp\u003e上面的命令等价于：（注：下面使用的是sed的-e命令行参数）\u003c/p\u003e\n\u003cp\u003e\u003ccode data-enlighter-language=\"shell\" class=\"EnlighterJSRAW\"\u003esed -e \u0026#39;1,3s/my/your/g\u0026#39; -e \u0026#39;3,$s/This/That/g\u0026#39; my.txt\u003c/code\u003e\u003c/p\u003e\n\u003cp\u003e我们可以使用\u0026amp;来当做被匹配的变量，然后可以在基本左右加点东西。如下所示：\u003c/p\u003e\n\u003cpre data-enlighter-language=\"shell\" class=\"EnlighterJSRAW\"\u003e$ sed \u0026#39;s/my/[\u0026amp;]/g\u0026#39; my.txt\nThis is [my] cat, [my] cat\u0026#39;s name is betty\nThis is [my] dog, [my] dog\u0026#39;s name is frank\nThis is [my] fish, [my] fish\u0026#39;s name is george\nThis is [my] goat, [my] goat\u0026#39;s name is adam\u003c/pre\u003e\n\u003ch4\u003e\u003cspan class=\"ez-toc-section\" id=\"%E5%9C%86%E6%8B%AC%E5%8F%B7%E5%8C%B9%E9%85%8D\"\u003e\u003c/span\u003e圆括号匹配\u003cspan class=\"ez-toc-section-end\"\u003e\u003c/span\u003e\u003c/h4\u003e\n\u003cp\u003e使用圆括号匹配的示例：（圆括号括起来的正则表达式所匹配的字符串会可以当成变量来使用，sed中使用的是\\1,\\2…）\u003c/p\u003e\n\u003cpre data-enlighter-language=\"shell\" class=\"EnlighterJSRAW\"\u003e$ sed \u0026#39;s/This is my \\([^,\u0026amp;]*\\),.*is \\(.*\\)/\\1:\\2/g\u0026#39; my.txt\ncat:betty\ndog:frank\nfish:george\ngoat:adam\u003c/pre\u003e\n\u003cp\u003e上面这个例子中的正则表达式有点复杂，解开如下（去掉转义字符）：\u003c/p\u003e\n\u003cp\u003e正则为：This is my ([^,]*),.*is (.*)\u003cbr/\u003e\n匹配为：This is my (cat),……….is (betty)\u003c/p\u003e\n\u003cp\u003e然后：\\1就是cat，\\2就是betty\u003c/p\u003e\n\u003ch4\u003e\u003cspan class=\"ez-toc-section\" id=\"sed%E7%9A%84%E5%91%BD%E4%BB%A4\"\u003e\u003c/span\u003esed的命令\u003cspan class=\"ez-toc-section-end\"\u003e\u003c/span\u003e\u003c/h4\u003e\n\u003cp\u003e让我们回到最一开始的例子pets.txt，让我们来看几个命令：\u003c/p\u003e\n\u003ch5\u003e\u003cspan class=\"ez-toc-section\" id=\"N%E5%91%BD%E4%BB%A4\"\u003e\u003c/span\u003eN命令\u003cspan class=\"ez-toc-section-end\"\u003e\u003c/span\u003e\u003c/h5\u003e\n\u003cp\u003e先来看N命令 —— 把下一行的内容纳入当成缓冲区做匹配。\u003c/p\u003e\n\u003cp\u003e下面的的示例会把原文本中的偶数行纳入奇数行匹配，而s只匹配并替换一次，所以，就成了下面的结果：\u003c/p\u003e\n\u003cpre data-enlighter-language=\"shell\" class=\"EnlighterJSRAW\"\u003e$ sed \u0026#39;N;s/my/your/\u0026#39; pets.txt\nThis is your cat\n  my cat\u0026#39;s name is betty\nThis is your dog\n  my dog\u0026#39;s name is frank\nThis is your fish\n  my fish\u0026#39;s name is george\nThis is your goat\n  my goat\u0026#39;s name is adam\u003c/pre\u003e\n\u003cp\u003e也就是说，原来的文件成了：\u003c/p\u003e\n\u003cpre data-enlighter-language=\"shell\" class=\"EnlighterJSRAW\"\u003eThis is my cat\\n  my cat\u0026#39;s name is betty\nThis is my dog\\n  my dog\u0026#39;s name is frank\nThis is my fish\\n  my fish\u0026#39;s name is george\nThis is my goat\\n  my goat\u0026#39;s name is adam\u003c/pre\u003e\n\u003cp\u003e这样一来，下面的例子你就明白了，\u003c/p\u003e\n\u003cpre data-enlighter-language=\"shell\" class=\"EnlighterJSRAW\"\u003e$ sed \u0026#39;N;s/\\n/,/\u0026#39; pets.txt\nThis is my cat,  my cat\u0026#39;s name is betty\nThis is my dog,  my dog\u0026#39;s name is frank\nThis is my fish,  my fish\u0026#39;s name is george\nThis is my goat,  my goat\u0026#39;s name is adam\u003c/pre\u003e\n\u003ch5\u003e\u003cspan class=\"ez-toc-section\" id=\"a%E5%91%BD%E4%BB%A4%E5%92%8Ci%E5%91%BD%E4%BB%A4\"\u003e\u003c/span\u003ea命令和i命令\u003cspan class=\"ez-toc-section-end\"\u003e\u003c/span\u003e\u003c/h5\u003e\n\u003cp\u003ea命令就是append， i命令就是insert，它们是用来添加行的。如：\u003c/p\u003e\n\u003cpre data-enlighter-language=\"shell\" class=\"EnlighterJSRAW\" data-enlighter-highlight=\"2,12\"\u003e# 其中的1i表明，其要在第1行前插入一行（insert）\n$ sed \u0026#34;1 i This is my monkey, my monkey\u0026#39;s name is wukong\u0026#34; my.txt\nThis is my monkey, my monkey\u0026#39;s name is wukong\nThis is my cat, my cat\u0026#39;s name is betty\nThis is my dog, my dog\u0026#39;s name is frank\nThis is my fish, my fish\u0026#39;s name is george\nThis is my goat, my goat\u0026#39;s name is adam\n\n# 其中的1a表明，其要在最后一行后追加一行（append）\n$ sed \u0026#34;$ a This is my monkey, my monkey\u0026#39;s name is wukong\u0026#34; my.txt\nThis is my cat, my cat\u0026#39;s name is betty\nThis is my monkey, my monkey\u0026#39;s name is wukong\nThis is my dog, my dog\u0026#39;s name is frank\nThis is my fish, my fish\u0026#39;s name is george\nThis is my goat, my goat\u0026#39;s name is adam\u003c/pre\u003e\n\u003cp\u003e我们可以运用匹配来添加文本：\u003c/p\u003e\n\u003cpre data-enlighter-language=\"shell\" class=\"EnlighterJSRAW\" data-enlighter-highlight=\"6\"\u003e# 注意其中的/fish/a，这意思是匹配到/fish/后就追加一行\n$ sed \u0026#34;/fish/a This is my monkey, my monkey\u0026#39;s name is wukong\u0026#34; my.txt\nThis is my cat, my cat\u0026#39;s name is betty\nThis is my dog, my dog\u0026#39;s name is frank\nThis is my fish, my fish\u0026#39;s name is george\nThis is my monkey, my monkey\u0026#39;s name is wukong\nThis is my goat, my goat\u0026#39;s name is adam\u003c/pre\u003e\n\u003cp\u003e下面这个例子是对每一行都挺插入：\u003c/p\u003e\n\u003cpre data-enlighter-language=\"shell\" class=\"EnlighterJSRAW\"\u003e$ sed \u0026#34;/my/a ----\u0026#34; my.txt\nThis is my cat, my cat\u0026#39;s name is betty\n----\nThis is my dog, my dog\u0026#39;s name is frank\n----\nThis is my fish, my fish\u0026#39;s name is george\n----\nThis is my goat, my goat\u0026#39;s name is adam\n----\u003c/pre\u003e\n\u003ch5\u003e\u003cspan class=\"ez-toc-section\" id=\"c%E5%91%BD%E4%BB%A4\"\u003e\u003c/span\u003ec命令\u003cspan class=\"ez-toc-section-end\"\u003e\u003c/span\u003e\u003c/h5\u003e\n\u003cp\u003ec 命令是替换匹配行\u003c/p\u003e\n\u003cpre data-enlighter-language=\"shell\" class=\"EnlighterJSRAW\"\u003e$ sed \u0026#34;2 c This is my monkey, my monkey\u0026#39;s name is wukong\u0026#34; my.txt\nThis is my cat, my cat\u0026#39;s name is betty\nThis is my monkey, my monkey\u0026#39;s name is wukong\nThis is my fish, my fish\u0026#39;s name is george\nThis is my goat, my goat\u0026#39;s name is adam\n\n$ sed \u0026#34;/fish/c This is my monkey, my monkey\u0026#39;s name is wukong\u0026#34; my.txt\nThis is my cat, my cat\u0026#39;s name is betty\nThis is my dog, my dog\u0026#39;s name is frank\nThis is my monkey, my monkey\u0026#39;s name is wukong\nThis is my goat, my goat\u0026#39;s name is adam\u003c/pre\u003e\n\u003ch5\u003e\u003cspan class=\"ez-toc-section\" id=\"d%E5%91%BD%E4%BB%A4\"\u003e\u003c/span\u003ed命令\u003cspan class=\"ez-toc-section-end\"\u003e\u003c/span\u003e\u003c/h5\u003e\n\u003cp\u003e删除匹配行\u003c/p\u003e\n\u003cpre data-enlighter-language=\"shell\" class=\"EnlighterJSRAW\"\u003e$ sed \u0026#39;/fish/d\u0026#39; my.txt\nThis is my cat, my cat\u0026#39;s name is betty\nThis is my dog, my dog\u0026#39;s name is frank\nThis is my goat, my goat\u0026#39;s name is adam\n\n$ sed \u0026#39;2d\u0026#39; my.txt\nThis is my cat, my cat\u0026#39;s name is betty\nThis is my fish, my fish\u0026#39;s name is george\nThis is my goat, my goat\u0026#39;s name is adam\n\n$ sed \u0026#39;2,$d\u0026#39; my.txt\nThis is my cat, my cat\u0026#39;s name is betty\u003c/pre\u003e\n\u003ch5\u003e\u003cspan class=\"ez-toc-section\" id=\"p%E5%91%BD%E4%BB%A4\"\u003e\u003c/span\u003ep命令\u003cspan class=\"ez-toc-section-end\"\u003e\u003c/span\u003e\u003c/h5\u003e\n\u003cp\u003e打印命令\u003c/p\u003e\n\u003cp\u003e你可以把这个命令当成grep式的命令\u003c/p\u003e\n\u003cpre data-enlighter-language=\"shell\" class=\"EnlighterJSRAW\"\u003e# 匹配fish并输出，可以看到fish的那一行被打了两遍，\n# 这是因为sed处理时会把处理的信息输出\n$ sed \u0026#39;/fish/p\u0026#39; my.txt\nThis is my cat, my cat\u0026#39;s name is betty\nThis is my dog, my dog\u0026#39;s name is frank\nThis is my fish, my fish\u0026#39;s name is george\nThis is my fish, my fish\u0026#39;s name is george\nThis is my goat, my goat\u0026#39;s name is adam\n\n# 使用n参数就好了\n$ sed -n \u0026#39;/fish/p\u0026#39; my.txt\nThis is my fish, my fish\u0026#39;s name is george\n\n# 从一个模式到另一个模式\n$ sed -n \u0026#39;/dog/,/fish/p\u0026#39; my.txt\nThis is my dog, my dog\u0026#39;s name is frank\nThis is my fish, my fish\u0026#39;s name is george\n\n#从第一行打印到匹配fish成功的那一行\n$ sed -n \u0026#39;1,/fish/p\u0026#39; my.txt\nThis is my cat, my cat\u0026#39;s name is betty\nThis is my dog, my dog\u0026#39;s name is frank\nThis is my fish, my fish\u0026#39;s name is george\u003c/pre\u003e\n\u003ch4\u003e\u003cspan class=\"ez-toc-section\" id=\"%E5%87%A0%E4%B8%AA%E7%9F%A5%E8%AF%86%E7%82%B9\"\u003e\u003c/span\u003e几个知识点\u003cspan class=\"ez-toc-section-end\"\u003e\u003c/span\u003e\u003c/h4\u003e\n\u003cp\u003e好了，下面我们要介绍四个sed的基本知识点：\u003c/p\u003e\n\u003ch5\u003e\u003cspan class=\"ez-toc-section\" id=\"Pattern_Space\"\u003e\u003c/span\u003ePattern Space\u003cspan class=\"ez-toc-section-end\"\u003e\u003c/span\u003e\u003c/h5\u003e\n\u003cp\u003e第零个是关于-n参数的，大家也许没看懂，没关系，我们来看一下sed处理文本的伪代码，并了解一下Pattern Space的概念：\u003c/p\u003e\n\u003cpre data-enlighter-language=\"c\" class=\"EnlighterJSRAW\"\u003eforeach line in file {\n    //放入把行Pattern_Space\n    Pattern_Space \u0026lt;= line;\n\n    // 对每个pattern space执行sed命令\n    Pattern_Space \u0026lt;= EXEC(sed_cmd, Pattern_Space);\n\n    // 如果没有指定 -n 则输出处理后的Pattern_Space\n    if (sed option hasn\u0026#39;t \u0026#34;-n\u0026#34;)  {\n       print Pattern_Space\n    }\n}\u003c/pre\u003e\n\u003ch5\u003e\u003cspan class=\"ez-toc-section\" id=\"Address\"\u003e\u003c/span\u003eAddress\u003cspan class=\"ez-toc-section-end\"\u003e\u003c/span\u003e\u003c/h5\u003e\n\u003cp\u003e第一个是关于address，几乎上述所有的命令都是这样的（注：其中的!表示匹配成功后是否执行命令）\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003e[address[,address]][!]{cmd}\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eaddress可以是一个数字，也可以是一个模式，你可以通过逗号要分隔两个address 表示两个address的区间，参执行命令cmd，伪代码如下：\u003c/p\u003e\n\u003cpre data-enlighter-language=\"c\" class=\"EnlighterJSRAW\"\u003ebool bexec = false\nforeach line in file {\n    if ( match(address1) ){\n        bexec = true;\n    }\n\n    if ( bexec == true) {\n        EXEC(sed_cmd);\n    }\n\n    if ( match (address2) ) {\n        bexec = false;\n    }\n}\u003c/pre\u003e\n\u003cp\u003e关于address可以使用相对位置，如：\u003c/p\u003e\n\u003cpre data-enlighter-language=\"shell\" class=\"EnlighterJSRAW\"\u003e# 其中的+3表示后面连续3行\n$ sed \u0026#39;/dog/,+3s/^/# /g\u0026#39; pets.txt\nThis is my cat\n  my cat\u0026#39;s name is betty\n# This is my dog\n#   my dog\u0026#39;s name is frank\n# This is my fish\n#   my fish\u0026#39;s name is george\nThis is my goat\n  my goat\u0026#39;s name is adam\u003c/pre\u003e\n\u003ch5\u003e\u003cspan class=\"ez-toc-section\" id=\"%E5%91%BD%E4%BB%A4%E6%89%93%E5%8C%85\"\u003e\u003c/span\u003e命令打包\u003cspan class=\"ez-toc-section-end\"\u003e\u003c/span\u003e\u003c/h5\u003e\n\u003cp\u003e第二个是cmd可以是多个，它们可以用分号分开，可以用大括号括起来作为嵌套命令。下面是几个例子：\u003c/p\u003e\n\u003cpre data-enlighter-language=\"shell\" class=\"EnlighterJSRAW\" data-enlighter-highlight=\"12,21,31\"\u003e$ cat pets.txt\nThis is my cat\n  my cat\u0026#39;s name is betty\nThis is my dog\n  my dog\u0026#39;s name is frank\nThis is my fish\n  my fish\u0026#39;s name is george\nThis is my goat\n  my goat\u0026#39;s name is adam\n\n# 对3行到第6行，执行命令/This/d\n$ sed \u0026#39;3,6 {/This/d}\u0026#39; pets.txt\nThis is my cat\n  my cat\u0026#39;s name is betty\n  my dog\u0026#39;s name is frank\n  my fish\u0026#39;s name is george\nThis is my goat\n  my goat\u0026#39;s name is adam\n\n# 对3行到第6行，匹配/This/成功后，再匹配/fish/，成功后执行d命令\n$ sed \u0026#39;3,6 {/This/{/fish/d}}\u0026#39; pets.txt\nThis is my cat\n  my cat\u0026#39;s name is betty\nThis is my dog\n  my dog\u0026#39;s name is frank\n  my fish\u0026#39;s name is george\nThis is my goat\n  my goat\u0026#39;s name is adam\n\n# 从第一行到最后一行，如果匹配到This，则删除之；如果前面有空格，则去除空格\n$ sed \u0026#39;1,${/This/d;s/^ *//g}\u0026#39; pets.txt\nmy cat\u0026#39;s name is betty\nmy dog\u0026#39;s name is frank\nmy fish\u0026#39;s name is george\nmy goat\u0026#39;s name is adam \u003c/pre\u003e\n\u003ch5\u003e\u003cspan class=\"ez-toc-section\" id=\"Hold_Space\"\u003e\u003c/span\u003eHold Space\u003cspan class=\"ez-toc-section-end\"\u003e\u003c/span\u003e\u003c/h5\u003e\n\u003cp\u003e第三个我们再来看一下 Hold Space\u003c/p\u003e\n\u003cp\u003e接下来，我们需要了解一下Hold Space的概念，我们先来看四个命令：\u003c/p\u003e\n\u003cp\u003eg： 将hold space中的内容拷贝到pattern space中，原来pattern space里的内容清除\u003cbr/\u003e\nG： 将hold space中的内容append到pattern space\\n后\u003cbr/\u003e\nh： 将pattern space中的内容拷贝到hold space中，原来的hold space里的内容被清除\u003cbr/\u003e\nH： 将pattern space中的内容append到hold space\\n后\u003cbr/\u003e\nx： 交换pattern space和hold space的内容\u003c/p\u003e\n\u003cp\u003e这些命令有什么用？我们来看两个示例吧，用到的示例文件是：\u003c/p\u003e\n\u003cpre data-enlighter-language=\"shell\" class=\"EnlighterJSRAW\"\u003e$ cat t.txt\none\ntwo\nthree\u003c/pre\u003e\n\u003cp\u003e第一个示例：\u003c/p\u003e\n\u003cpre data-enlighter-language=\"shell\" class=\"EnlighterJSRAW\" data-enlighter-highlight=\"1\"\u003e$ sed \u0026#39;H;g\u0026#39; t.txt\none\n\none\ntwo\n\none\ntwo\nthree\u003c/pre\u003e\n\u003cp\u003e是不是有点没看懂，我作个图你就看懂了。\u003c/p\u003e\n\u003cp\u003e\u003cimg decoding=\"async\" loading=\"lazy\" class=\"aligncenter size-full wp-image-9118\" src=\"https://coolshell.cn/wp-content/uploads/2013/02/sed_demo_00.jpg\" alt=\"\" width=\"592\" height=\"404\" srcset=\"https://coolshell.cn/wp-content/uploads/2013/02/sed_demo_00.jpg 592w, https://coolshell.cn/wp-content/uploads/2013/02/sed_demo_00-300x204.jpg 300w\" sizes=\"(max-width: 592px) 100vw, 592px\"/\u003e\u003c/p\u003e\n\u003cp\u003e第二个示例，反序了一个文件的行：\u003c/p\u003e\n\u003cpre data-enlighter-language=\"shell\" class=\"EnlighterJSRAW\" data-enlighter-highlight=\"1\"\u003e$ sed \u0026#39;1!G;h;$!d\u0026#39; t.txt\nthree\ntwo\none\u003c/pre\u003e\n\u003cp\u003e其中的 ‘1!G;h;$!d’ 可拆解为三个命令\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e1!G —— 只有第一行不执行G命令，将hold space中的内容append回到pattern space\u003c/li\u003e\n\u003cli\u003eh —— 第一行都执行h命令，将pattern space中的内容拷贝到hold space中\u003c/li\u003e\n\u003cli\u003e$!d —— 除了最后一行不执行d命令，其它行都执行d命令，删除当前行\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e这个执行序列很难理解，做个图如下大家就明白了：\u003c/p\u003e\n\u003cp\u003e\u003cimg decoding=\"async\" loading=\"lazy\" class=\"aligncenter size-full wp-image-9110\" src=\"https://coolshell.cn/wp-content/uploads/2013/02/sed_demo.jpg\" alt=\"\" width=\"623\" height=\"316\" srcset=\"https://coolshell.cn/wp-content/uploads/2013/02/sed_demo.jpg 623w, https://coolshell.cn/wp-content/uploads/2013/02/sed_demo-300x152.jpg 300w\" sizes=\"(max-width: 623px) 100vw, 623px\"/\u003e\u003c/p\u003e\n\u003cp\u003e就先说这么多吧，希望对大家有用。\u003c/p\u003e\n\u003cp\u003e（全文完）\u003c/p\u003e\n\u003cdiv style=\"margin-top: 15px; font-size: 16px;color: #cc0000;\"\u003e\n\u003cp align=\"center\"\u003e\u003cstrong\u003e（转载本站文章请注明作者和出处 \u003ca href=\"https://coolshell.cn/\"\u003e酷 壳 – CoolShell\u003c/a\u003e ，请勿用于任何商业用途）\u003c/strong\u003e\u003c/p\u003e\n\u003c/div\u003e\n\u003cdiv class=\"wp_rp_wrap  wp_rp_vertical_m\" id=\"wp_rp_first\"\u003e\u003cdiv class=\"wp_rp_content\"\u003e\u003ch3 class=\"related_post_title\"\u003e相关文章\u003c/h3\u003e\u003cul class=\"related_post wp_rp\"\u003e\u003cli\u003e\u003ca href=\"https://coolshell.cn/articles/18360.html\" class=\"wp_rp_thumbnail\"\u003e\u003cimg src=\"https://coolshell.cn/wp-content/uploads/2018/05/300x262-150x150.jpg\" alt=\"程序员练级攻略（2018)  与我的专栏\" width=\"150\" height=\"150\"/\u003e\u003c/a\u003e\u003ca href=\"https://coolshell.cn/articles/18360.html\" class=\"wp_rp_title\"\u003e程序员练级攻略（2018) 与我的专栏\u003c/a\u003e\u003c/li\u003e\u003cli\u003e\u003ca href=\"https://coolshell.cn/articles/17998.html\" class=\"wp_rp_thumbnail\"\u003e\u003cimg src=\"https://coolshell.cn/wp-content/uploads/2017/07/systemd-1-150x150.jpeg\" alt=\"Linux PID 1 和 Systemd\" width=\"150\" height=\"150\"/\u003e\u003c/a\u003e\u003ca href=\"https://coolshell.cn/articles/17998.html\" class=\"wp_rp_title\"\u003eLinux PID 1 和 Systemd\u003c/a\u003e\u003c/li\u003e\u003cli\u003e\u003ca href=\"https://coolshell.cn/articles/12103.html\" class=\"wp_rp_thumbnail\"\u003e\u003cimg src=\"https://coolshell.cn/wp-content/uploads/2014/11/tux-fork-150x150.gif\" alt=\"vfork 挂掉的一个问题\" width=\"150\" height=\"150\"/\u003e\u003c/a\u003e\u003ca href=\"https://coolshell.cn/articles/12103.html\" class=\"wp_rp_title\"\u003evfork 挂掉的一个问题\u003c/a\u003e\u003c/li\u003e\u003cli\u003e\u003ca href=\"https://coolshell.cn/articles/11847.html\" class=\"wp_rp_thumbnail\"\u003e\u003cimg src=\"https://coolshell.cn/wp-content/uploads/2014/08/puzzle-150x150.png\" alt=\"谜题的答案和活动的心得体会\" width=\"150\" height=\"150\"/\u003e\u003c/a\u003e\u003ca href=\"https://coolshell.cn/articles/11847.html\" class=\"wp_rp_title\"\u003e谜题的答案和活动的心得体会\u003c/a\u003e\u003c/li\u003e\u003cli\u003e\u003ca href=\"https://coolshell.cn/articles/9070.html\" class=\"wp_rp_thumbnail\"\u003e\u003cimg src=\"https://coolshell.cn/wp-content/uploads/2013/02/awk-150x150.jpg\" alt=\"AWK 简明教程\" width=\"150\" height=\"150\"/\u003e\u003c/a\u003e\u003ca href=\"https://coolshell.cn/articles/9070.html\" class=\"wp_rp_title\"\u003eAWK 简明教程\u003c/a\u003e\u003c/li\u003e\u003cli\u003e\u003ca href=\"https://coolshell.cn/articles/8883.html\" class=\"wp_rp_thumbnail\"\u003e\u003cimg src=\"https://coolshell.cn/wp-content/uploads/2013/01/linux-bash-300x225-150x150.jpg\" alt=\"应该知道的Linux技巧\" width=\"150\" height=\"150\"/\u003e\u003c/a\u003e\u003ca href=\"https://coolshell.cn/articles/8883.html\" class=\"wp_rp_title\"\u003e应该知道的Linux技巧\u003c/a\u003e\u003c/li\u003e\u003c/ul\u003e\u003c/div\u003e\u003c/div\u003e\n\u003cdiv id=\"post-ratings-9104\" class=\"post-ratings\" itemscope=\"\" itemtype=\"https://schema.org/Article\" data-nonce=\"d158d79007\"\u003e\u003cimg id=\"rating_9104_1\" src=\"https://coolshell.cn/wp-content/plugins/wp-postratings/images/stars_crystal/rating_on.gif\" alt=\"好烂啊\" title=\"好烂啊\" onmouseover=\"if (!window.__cfRLUnblockHandlers) return false; current_rating(9104, 1, \u0026#39;好烂啊\u0026#39;);\" onmouseout=\"if (!window.__cfRLUnblockHandlers) return false; ratings_off(4.6, 5, 0);\" onclick=\"if (!window.__cfRLUnblockHandlers) return false; rate_post();\" onkeypress=\"if (!window.__cfRLUnblockHandlers) return false; rate_post();\" style=\"cursor: pointer; border: 0px;\" data-cf-modified-3165672fc61195e401039eea-=\"\"/\u003e\u003cimg id=\"rating_9104_2\" src=\"https://coolshell.cn/wp-content/plugins/wp-postratings/images/stars_crystal/rating_on.gif\" alt=\"有点差\" title=\"有点差\" onmouseover=\"if (!window.__cfRLUnblockHandlers) return false; current_rating(9104, 2, \u0026#39;有点差\u0026#39;);\" onmouseout=\"if (!window.__cfRLUnblockHandlers) return false; ratings_off(4.6, 5, 0);\" onclick=\"if (!window.__cfRLUnblockHandlers) return false; rate_post();\" onkeypress=\"if (!window.__cfRLUnblockHandlers) return false; rate_post();\" style=\"cursor: pointer; border: 0px;\" data-cf-modified-3165672fc61195e401039eea-=\"\"/\u003e\u003cimg id=\"rating_9104_3\" src=\"https://coolshell.cn/wp-content/plugins/wp-postratings/images/stars_crystal/rating_on.gif\" alt=\"凑合看看\" title=\"凑合看看\" onmouseover=\"if (!window.__cfRLUnblockHandlers) return false; current_rating(9104, 3, \u0026#39;凑合看看\u0026#39;);\" onmouseout=\"if (!window.__cfRLUnblockHandlers) return false; ratings_off(4.6, 5, 0);\" onclick=\"if (!window.__cfRLUnblockHandlers) return false; rate_post();\" onkeypress=\"if (!window.__cfRLUnblockHandlers) return false; rate_post();\" style=\"cursor: pointer; border: 0px;\" data-cf-modified-3165672fc61195e401039eea-=\"\"/\u003e\u003cimg id=\"rating_9104_4\" src=\"https://coolshell.cn/wp-content/plugins/wp-postratings/images/stars_crystal/rating_on.gif\" alt=\"还不错\" title=\"还不错\" onmouseover=\"if (!window.__cfRLUnblockHandlers) return false; current_rating(9104, 4, \u0026#39;还不错\u0026#39;);\" onmouseout=\"if (!window.__cfRLUnblockHandlers) return false; ratings_off(4.6, 5, 0);\" onclick=\"if (!window.__cfRLUnblockHandlers) return false; rate_post();\" onkeypress=\"if (!window.__cfRLUnblockHandlers) return false; rate_post();\" style=\"cursor: pointer; border: 0px;\" data-cf-modified-3165672fc61195e401039eea-=\"\"/\u003e\u003cimg id=\"rating_9104_5\" src=\"https://coolshell.cn/wp-content/plugins/wp-postratings/images/stars_crystal/rating_half.gif\" alt=\"很精彩\" title=\"很精彩\" onmouseover=\"if (!window.__cfRLUnblockHandlers) return false; current_rating(9104, 5, \u0026#39;很精彩\u0026#39;);\" onmouseout=\"if (!window.__cfRLUnblockHandlers) return false; ratings_off(4.6, 5, 0);\" onclick=\"if (!window.__cfRLUnblockHandlers) return false; rate_post();\" onkeypress=\"if (!window.__cfRLUnblockHandlers) return false; rate_post();\" style=\"cursor: pointer; border: 0px;\" data-cf-modified-3165672fc61195e401039eea-=\"\"/\u003e (\u003cstrong\u003e117\u003c/strong\u003e 人打了分，平均分： \u003cstrong\u003e4.61\u003c/strong\u003e )\u003cbr/\u003e\u003cspan class=\"post-ratings-text\" id=\"ratings_9104_text\"\u003e\u003c/span\u003e\u003cmeta itemprop=\"name\" content=\"sed 简明教程\"/\u003e\u003cmeta itemprop=\"headline\" content=\"sed 简明教程\"/\u003e\u003cmeta itemprop=\"description\" content=\"awk于1977年出生，今年36岁本命年，sed比awk大2-3岁，awk就像林妹妹，sed就是宝玉哥哥了。所以 林妹妹跳了个Topless，他的哥哥sed坐不住了，也一定要出来抖一抖。\n\nsed全名叫stream editor，流编辑器，用程序的方式来编辑文本，相当的hacker啊。sed基本上就是玩正则模式匹配，所以，玩sed的人，正则表达式一般都比较强。\n\n同样，本篇文章不会说sed...\"/\u003e\u003cmeta itemprop=\"datePublished\" content=\"2013-02-20T08:36:48+08:00\"/\u003e\u003cmeta itemprop=\"dateModified\" content=\"2017-07-13T14:02:33+08:00\"/\u003e\u003cmeta itemprop=\"url\" content=\"https://coolshell.cn/articles/9104.html\"/\u003e\u003cmeta itemprop=\"author\" content=\"陈皓\"/\u003e\u003cmeta itemprop=\"mainEntityOfPage\" content=\"https://coolshell.cn/articles/9104.html\"/\u003e\u003cdiv style=\"display: none;\" itemprop=\"publisher\" itemscope=\"\" itemtype=\"https://schema.org/Organization\"\u003e\u003cmeta itemprop=\"name\" content=\"酷 壳 - CoolShell\"/\u003e\u003cmeta itemprop=\"url\" content=\"https://coolshell.cn\"/\u003e\u003cdiv itemprop=\"logo\" itemscope=\"\" itemtype=\"https://schema.org/ImageObject\"\u003e\u003cmeta itemprop=\"url\" content=\"\"/\u003e\u003c/div\u003e\u003c/div\u003e\u003cdiv style=\"display: none;\" itemprop=\"aggregateRating\" itemscope=\"\" itemtype=\"https://schema.org/AggregateRating\"\u003e\u003cmeta itemprop=\"bestRating\" content=\"5\"/\u003e\u003cmeta itemprop=\"worstRating\" content=\"1\"/\u003e\u003cmeta itemprop=\"ratingValue\" content=\"4.61\"/\u003e\u003cmeta itemprop=\"ratingCount\" content=\"117\"/\u003e\u003c/div\u003e\u003c/div\u003e\u003cdiv id=\"post-ratings-9104-loading\" class=\"post-ratings-loading\"\u003e\u003cimg src=\"https://coolshell.cn/wp-content/plugins/wp-postratings/images/loading.gif\" width=\"16\" height=\"16\" class=\"post-ratings-image\"/\u003eLoading...\u003c/div\u003e\n\u003c/div\u003e",
  "Date": "2013-02-20T08:36:48+08:00",
  "Author": "陈皓"
}