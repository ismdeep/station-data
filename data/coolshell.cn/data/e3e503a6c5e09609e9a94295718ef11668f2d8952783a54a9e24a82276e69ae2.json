{
  "Source": "coolshell.cn",
  "Title": "一个fork的面试题",
  "Link": "https://coolshell.cn/articles/7965.html",
  "Content": "\u003cdiv class=\"entry-content\"\u003e\n\u003cp\u003e\u003cscript async=\"\" src=\"https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3415450859608158\" crossorigin=\"anonymous\" type=\"cd0277a69211fe7bd75ae5e6-text/javascript\"\u003e\u003c/script\u003e前两天有人问了个关于Unix的fork()系统调用的面试题，这个题正好是我大约十年前找工作时某公司问我的一个题，我觉得比较有趣，写篇文章与大家分享一下。这个题是这样的：\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003e题目：请问下面的程序一共输出多少个“-”？\u003c/strong\u003e\u003c/p\u003e\n\u003cpre data-enlighter-language=\"c\" class=\"EnlighterJSRAW\"\u003e#include \u0026lt;stdio.h\u0026gt;\n#include \u0026lt;sys/types.h\u0026gt;\n#include \u0026lt;unistd.h\u0026gt;\n\nint main(void)\n{\n   int i;\n   for(i=0; i\u0026lt;2; i++){\n      fork();\n      printf(\u0026#34;-\u0026#34;);\n   }\n\n   wait(NULL);\n   wait(NULL);\n\n   return 0;\n}\n\u003c/pre\u003e\n\u003cp\u003e如果你对fork()的机制比较熟悉的话，这个题并不难，输出应该是6个“-”，但是，实际上这个程序会很tricky地输出8个“-”。\u003c/p\u003e\n\u003cp\u003e要讲清这个题，我们首先需要知道fork()系统调用的特性，\u003c/p\u003e\n\u003cp\u003e\u003cspan id=\"more-7965\"\u003e\u003c/span\u003e\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003efork()系统调用是Unix下以自身进程创建子进程的系统调用，一次调用，两次返回，如果返回是0，则是子进程，如果返回值\u0026gt;0，则是父进程（返回值是子进程的pid），这是众为周知的。\u003c/li\u003e\n\u003c/ul\u003e\n\u003cul\u003e\n\u003cli\u003e还有一个很重要的东西是，在fork()的调用处，整个父进程空间会原模原样地复制到子进程中，包括指令，变量值，程序调用栈，环境变量，缓冲区，等等。\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e所以，上面的那个程序为什么会输入8个“-”，这是因为printf(“-“);语句有buffer，所以，对于上述程序，printf(“-“);把“-”放到了缓存中，并没有真正的输出（参看《\u003ca title=\"C语言的谜题\" href=\"https://coolshell.cn/articles/945.html\" target=\"_blank\"\u003eC语言的迷题\u003c/a\u003e》中的第一题），\u003cstrong\u003e在fork的时候，缓存被复制到了子进程空间\u003c/strong\u003e，所以，就多了两个，就成了8个，而不是6个。\u003c/p\u003e\n\u003cp\u003e另外，多说一下，我们知道，Unix下的设备有“\u003ca href=\"https://en.wikipedia.org/wiki/Device_file#Block_devices\" target=\"_blank\"\u003e块设备\u003c/a\u003e”和“\u003ca href=\"https://en.wikipedia.org/wiki/Device_file#Character_devices\" target=\"_blank\"\u003e字符设备\u003c/a\u003e”的概念，所谓块设备，就是以一块一块的数据存取的设备，字符设备是一次存取一个字符的设备。磁盘、内存都是块设备，字符设备如键盘和串口。\u003cstrong\u003e块设备一般都有缓存，而字符设备一般都没有缓存\u003c/strong\u003e。\u003c/p\u003e\n\u003cp\u003e对于上面的问题，我们如果修改一下上面的printf的那条语句为：\u003c/p\u003e\n\u003cp\u003e\u003ccode data-enlighter-language=\"c\" class=\"EnlighterJSRAW\"\u003eprintf(\u0026#34;-\\n\u0026#34;);\u003c/code\u003e\u003c/p\u003e\n\u003cp\u003e或是\u003c/p\u003e\n\u003cpre data-enlighter-language=\"c\" class=\"EnlighterJSRAW\"\u003e printf(\u0026#34;-\u0026#34;);\nfflush(stdout);\u003c/pre\u003e\n\u003cp\u003e就没有问题了（就是6个“-”了），因为程序遇到“\\n”，或是EOF，或是缓中区满，或是文件描述符关闭，或是主动flush，或是程序退出，就会把数据刷出缓冲区。需要注意的是，标准输出是行缓冲，所以遇到“\\n”的时候会刷出缓冲区，但对于磁盘这个块设备来说，“\\n”并不会引起缓冲区刷出的动作，那是全缓冲，你可以使用setvbuf来设置缓冲区大小，或是用fflush刷缓存。\u003c/p\u003e\n\u003cp\u003e我估计有些朋友可能对于fork()还不是很了解，那么我们把上面的程序改成下面这样：\u003c/p\u003e\n\u003cpre data-enlighter-language=\"c\" class=\"EnlighterJSRAW\"\u003e#include \u0026lt;stdio.h\u0026gt;\n#include \u0026lt;sys/types.h\u0026gt;\n#include \u0026lt;unistd.h\u0026gt;\nint main(void)\n{\n   int i;\n   for(i=0; i\u0026lt;2; i++){\n      fork();\n      //注意：下面的printf有“\\n”\n      printf(\u0026#34;ppid=%d, pid=%d, i=%d \\n\u0026#34;, getppid(), getpid(), i);\n   }\n   sleep(10); //让进程停留十秒，这样我们可以用pstree查看一下进程树\n   return 0;\n}\n\u003c/pre\u003e\n\u003cp\u003e于是，上面这段程序会输出下面的结果，（注：编译出的可执行的程序名为fork）\u003c/p\u003e\n\u003cpre data-enlighter-language=\"shell\" class=\"EnlighterJSRAW\"\u003eppid=8858, pid=8518, i=0\nppid=8858, pid=8518, i=1\nppid=8518, pid=8519, i=0\nppid=8518, pid=8519, i=1\nppid=8518, pid=8520, i=1\nppid=8519, pid=8521, i=1\n\n$ pstree -p | grep fork\n|-bash(8858)-+-fork(8518)-+-fork(8519)---fork(8521)\n|            |            `-fork(8520)\u003c/pre\u003e\n\u003cp\u003e面对这样的图你可能还是看不懂，没事，我好事做到底，画个图给你看看：\u003c/p\u003e\n\u003cp\u003e\u003cimg decoding=\"async\" class=\"aligncenter size-full wp-image-7968\" title=\"fork 程序调用图\" src=\"https://coolshell.cn/wp-content/uploads/2012/07/fork01jpg.jpg\" alt=\"\" width=\"620\" height=\"407\" srcset=\"https://coolshell.cn/wp-content/uploads/2012/07/fork01jpg.jpg 620w, https://coolshell.cn/wp-content/uploads/2012/07/fork01jpg-300x197.jpg 300w, https://coolshell.cn/wp-content/uploads/2012/07/fork01jpg-411x270.jpg 411w\" sizes=\"(max-width: 620px) 100vw, 620px\"/\u003e\u003c/p\u003e\n\u003cp\u003e注意：上图中的我用了几个色彩，相同颜色的是同一个进程。于是，我们的pstree的图示就可以成为下面这个样子：（下图中的颜色与上图对应）\u003c/p\u003e\n\u003cp\u003e\u003cimg decoding=\"async\" loading=\"lazy\" class=\"aligncenter size-full wp-image-7969\" title=\"fork进程树\" src=\"https://coolshell.cn/wp-content/uploads/2012/07/fork02.jpg\" alt=\"\" width=\"437\" height=\"97\" srcset=\"https://coolshell.cn/wp-content/uploads/2012/07/fork02.jpg 437w, https://coolshell.cn/wp-content/uploads/2012/07/fork02-300x66.jpg 300w\" sizes=\"(max-width: 437px) 100vw, 437px\"/\u003e\u003c/p\u003e\n\u003cp\u003e这样，对于printf(“-“);这个语句，我们就可以很清楚的知道，哪个子进程复制了父进程标准输出缓中区里的的内容，而导致了多次输出了。（如下图所示，就是我阴影并双边框了那两个子进程）\u003c/p\u003e\n\u003cp\u003e\u003cimg decoding=\"async\" loading=\"lazy\" class=\"aligncenter size-full wp-image-7970\" title=\"fork程序执行图\" src=\"https://coolshell.cn/wp-content/uploads/2012/07/fork03.jpg\" alt=\"\" width=\"626\" height=\"415\" srcset=\"https://coolshell.cn/wp-content/uploads/2012/07/fork03.jpg 626w, https://coolshell.cn/wp-content/uploads/2012/07/fork03-300x198.jpg 300w\" sizes=\"(max-width: 626px) 100vw, 626px\"/\u003e\u003c/p\u003e\n\u003cp\u003e现在你明白了吧。（另，对于图中的我本人拙劣的配色，请见谅!）\u003c/p\u003e\n\u003cp\u003e（全文完）\u003c/p\u003e\n\u003cdiv style=\"margin-top: 15px; font-size: 16px;color: #cc0000;\"\u003e\n\u003cp align=\"center\"\u003e\u003cstrong\u003e（转载本站文章请注明作者和出处 \u003ca href=\"https://coolshell.cn/\"\u003e酷 壳 – CoolShell\u003c/a\u003e ，请勿用于任何商业用途）\u003c/strong\u003e\u003c/p\u003e\n\u003c/div\u003e\n\u003cdiv class=\"wp_rp_wrap  wp_rp_vertical_m\" id=\"wp_rp_first\"\u003e\u003cdiv class=\"wp_rp_content\"\u003e\u003ch3 class=\"related_post_title\"\u003e相关文章\u003c/h3\u003e\u003cul class=\"related_post wp_rp\"\u003e\u003cli\u003e\u003ca href=\"https://coolshell.cn/articles/4162.html\" class=\"wp_rp_thumbnail\"\u003e\u003cimg src=\"https://coolshell.cn/wp-content/plugins/wordpress-23-related-posts-plugin/static/thumbs/0.jpg\" alt=\"又一个有趣的面试题\" width=\"150\" height=\"150\"/\u003e\u003c/a\u003e\u003ca href=\"https://coolshell.cn/articles/4162.html\" class=\"wp_rp_title\"\u003e又一个有趣的面试题\u003c/a\u003e\u003c/li\u003e\u003cli\u003e\u003ca href=\"https://coolshell.cn/articles/3961.html\" class=\"wp_rp_thumbnail\"\u003e\u003cimg src=\"https://coolshell.cn/wp-content/plugins/wordpress-23-related-posts-plugin/static/thumbs/21.jpg\" alt=\"“火柴棍式”程序员面试题\" width=\"150\" height=\"150\"/\u003e\u003c/a\u003e\u003ca href=\"https://coolshell.cn/articles/3961.html\" class=\"wp_rp_title\"\u003e“火柴棍式”程序员面试题\u003c/a\u003e\u003c/li\u003e\u003cli\u003e\u003ca href=\"https://coolshell.cn/articles/3738.html\" class=\"wp_rp_thumbnail\"\u003e\u003cimg src=\"https://coolshell.cn/wp-content/plugins/wordpress-23-related-posts-plugin/static/thumbs/26.jpg\" alt=\"打印质数的各种算法\" width=\"150\" height=\"150\"/\u003e\u003c/a\u003e\u003ca href=\"https://coolshell.cn/articles/3738.html\" class=\"wp_rp_title\"\u003e打印质数的各种算法\u003c/a\u003e\u003c/li\u003e\u003cli\u003e\u003ca href=\"https://coolshell.cn/articles/3445.html\" class=\"wp_rp_thumbnail\"\u003e\u003cimg src=\"https://coolshell.cn/wp-content/plugins/wordpress-23-related-posts-plugin/static/thumbs/14.jpg\" alt=\"输出从1到1000的数\" width=\"150\" height=\"150\"/\u003e\u003c/a\u003e\u003ca href=\"https://coolshell.cn/articles/3445.html\" class=\"wp_rp_title\"\u003e输出从1到1000的数\u003c/a\u003e\u003c/li\u003e\u003cli\u003e\u003ca href=\"https://coolshell.cn/articles/1532.html\" class=\"wp_rp_thumbnail\"\u003e\u003cimg src=\"https://coolshell.cn/wp-content/plugins/wordpress-23-related-posts-plugin/static/thumbs/24.jpg\" alt=\"到处都是Unix的胎记\" width=\"150\" height=\"150\"/\u003e\u003c/a\u003e\u003ca href=\"https://coolshell.cn/articles/1532.html\" class=\"wp_rp_title\"\u003e到处都是Unix的胎记\u003c/a\u003e\u003c/li\u003e\u003cli\u003e\u003ca href=\"https://coolshell.cn/articles/18360.html\" class=\"wp_rp_thumbnail\"\u003e\u003cimg src=\"https://coolshell.cn/wp-content/uploads/2018/05/300x262-150x150.jpg\" alt=\"程序员练级攻略（2018)  与我的专栏\" width=\"150\" height=\"150\"/\u003e\u003c/a\u003e\u003ca href=\"https://coolshell.cn/articles/18360.html\" class=\"wp_rp_title\"\u003e程序员练级攻略（2018) 与我的专栏\u003c/a\u003e\u003c/li\u003e\u003c/ul\u003e\u003c/div\u003e\u003c/div\u003e\n\u003cdiv id=\"post-ratings-7965\" class=\"post-ratings\" itemscope=\"\" itemtype=\"https://schema.org/Article\" data-nonce=\"10b272f925\"\u003e\u003cimg id=\"rating_7965_1\" src=\"https://coolshell.cn/wp-content/plugins/wp-postratings/images/stars_crystal/rating_on.gif\" alt=\"好烂啊\" title=\"好烂啊\" onmouseover=\"if (!window.__cfRLUnblockHandlers) return false; current_rating(7965, 1, \u0026#39;好烂啊\u0026#39;);\" onmouseout=\"if (!window.__cfRLUnblockHandlers) return false; ratings_off(4.7, 5, 0);\" onclick=\"if (!window.__cfRLUnblockHandlers) return false; rate_post();\" onkeypress=\"if (!window.__cfRLUnblockHandlers) return false; rate_post();\" style=\"cursor: pointer; border: 0px;\" data-cf-modified-cd0277a69211fe7bd75ae5e6-=\"\"/\u003e\u003cimg id=\"rating_7965_2\" src=\"https://coolshell.cn/wp-content/plugins/wp-postratings/images/stars_crystal/rating_on.gif\" alt=\"有点差\" title=\"有点差\" onmouseover=\"if (!window.__cfRLUnblockHandlers) return false; current_rating(7965, 2, \u0026#39;有点差\u0026#39;);\" onmouseout=\"if (!window.__cfRLUnblockHandlers) return false; ratings_off(4.7, 5, 0);\" onclick=\"if (!window.__cfRLUnblockHandlers) return false; rate_post();\" onkeypress=\"if (!window.__cfRLUnblockHandlers) return false; rate_post();\" style=\"cursor: pointer; border: 0px;\" data-cf-modified-cd0277a69211fe7bd75ae5e6-=\"\"/\u003e\u003cimg id=\"rating_7965_3\" src=\"https://coolshell.cn/wp-content/plugins/wp-postratings/images/stars_crystal/rating_on.gif\" alt=\"凑合看看\" title=\"凑合看看\" onmouseover=\"if (!window.__cfRLUnblockHandlers) return false; current_rating(7965, 3, \u0026#39;凑合看看\u0026#39;);\" onmouseout=\"if (!window.__cfRLUnblockHandlers) return false; ratings_off(4.7, 5, 0);\" onclick=\"if (!window.__cfRLUnblockHandlers) return false; rate_post();\" onkeypress=\"if (!window.__cfRLUnblockHandlers) return false; rate_post();\" style=\"cursor: pointer; border: 0px;\" data-cf-modified-cd0277a69211fe7bd75ae5e6-=\"\"/\u003e\u003cimg id=\"rating_7965_4\" src=\"https://coolshell.cn/wp-content/plugins/wp-postratings/images/stars_crystal/rating_on.gif\" alt=\"还不错\" title=\"还不错\" onmouseover=\"if (!window.__cfRLUnblockHandlers) return false; current_rating(7965, 4, \u0026#39;还不错\u0026#39;);\" onmouseout=\"if (!window.__cfRLUnblockHandlers) return false; ratings_off(4.7, 5, 0);\" onclick=\"if (!window.__cfRLUnblockHandlers) return false; rate_post();\" onkeypress=\"if (!window.__cfRLUnblockHandlers) return false; rate_post();\" style=\"cursor: pointer; border: 0px;\" data-cf-modified-cd0277a69211fe7bd75ae5e6-=\"\"/\u003e\u003cimg id=\"rating_7965_5\" src=\"https://coolshell.cn/wp-content/plugins/wp-postratings/images/stars_crystal/rating_half.gif\" alt=\"很精彩\" title=\"很精彩\" onmouseover=\"if (!window.__cfRLUnblockHandlers) return false; current_rating(7965, 5, \u0026#39;很精彩\u0026#39;);\" onmouseout=\"if (!window.__cfRLUnblockHandlers) return false; ratings_off(4.7, 5, 0);\" onclick=\"if (!window.__cfRLUnblockHandlers) return false; rate_post();\" onkeypress=\"if (!window.__cfRLUnblockHandlers) return false; rate_post();\" style=\"cursor: pointer; border: 0px;\" data-cf-modified-cd0277a69211fe7bd75ae5e6-=\"\"/\u003e (\u003cstrong\u003e72\u003c/strong\u003e 人打了分，平均分： \u003cstrong\u003e4.67\u003c/strong\u003e )\u003cbr/\u003e\u003cspan class=\"post-ratings-text\" id=\"ratings_7965_text\"\u003e\u003c/span\u003e\u003cmeta itemprop=\"name\" content=\"一个fork的面试题\"/\u003e\u003cmeta itemprop=\"headline\" content=\"一个fork的面试题\"/\u003e\u003cmeta itemprop=\"description\" content=\"前两天有人问了个关于Unix的fork()系统调用的面试题，这个题正好是我大约十年前找工作时某公司问我的一个题，我觉得比较有趣，写篇文章与大家分享一下。这个题是这样的：\n\n题目：请问下面的程序一共输出多少个“-”？\n\n[c]\n#include \u0026lt;stdio.h\u0026gt;\n#include \u0026lt;sys/types.h\u0026gt;\n#include \u0026lt;unistd.h\u0026gt;\n\nint main(void)\n{\n...\"/\u003e\u003cmeta itemprop=\"datePublished\" content=\"2012-08-01T08:20:46+08:00\"/\u003e\u003cmeta itemprop=\"dateModified\" content=\"2018-08-29T23:02:26+08:00\"/\u003e\u003cmeta itemprop=\"url\" content=\"https://coolshell.cn/articles/7965.html\"/\u003e\u003cmeta itemprop=\"author\" content=\"陈皓\"/\u003e\u003cmeta itemprop=\"mainEntityOfPage\" content=\"https://coolshell.cn/articles/7965.html\"/\u003e\u003cdiv style=\"display: none;\" itemprop=\"publisher\" itemscope=\"\" itemtype=\"https://schema.org/Organization\"\u003e\u003cmeta itemprop=\"name\" content=\"酷 壳 - CoolShell\"/\u003e\u003cmeta itemprop=\"url\" content=\"https://coolshell.cn\"/\u003e\u003cdiv itemprop=\"logo\" itemscope=\"\" itemtype=\"https://schema.org/ImageObject\"\u003e\u003cmeta itemprop=\"url\" content=\"\"/\u003e\u003c/div\u003e\u003c/div\u003e\u003cdiv style=\"display: none;\" itemprop=\"aggregateRating\" itemscope=\"\" itemtype=\"https://schema.org/AggregateRating\"\u003e\u003cmeta itemprop=\"bestRating\" content=\"5\"/\u003e\u003cmeta itemprop=\"worstRating\" content=\"1\"/\u003e\u003cmeta itemprop=\"ratingValue\" content=\"4.67\"/\u003e\u003cmeta itemprop=\"ratingCount\" content=\"72\"/\u003e\u003c/div\u003e\u003c/div\u003e\u003cdiv id=\"post-ratings-7965-loading\" class=\"post-ratings-loading\"\u003e\u003cimg src=\"https://coolshell.cn/wp-content/plugins/wp-postratings/images/loading.gif\" width=\"16\" height=\"16\" class=\"post-ratings-image\"/\u003eLoading...\u003c/div\u003e\n\u003c/div\u003e",
  "Date": "2012-08-01T08:20:46+08:00",
  "Author": "陈皓"
}