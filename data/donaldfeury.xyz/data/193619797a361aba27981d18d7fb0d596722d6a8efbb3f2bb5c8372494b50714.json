{
  "Source": "donaldfeury.xyz",
  "Title": "This is how to do upserting in MongoDB",
  "Link": "https://donaldfeury.xyz/this-is-how-to-do-upserting-in-mongodb/",
  "Content": "\u003csection class=\"gh-content gh-canvas\"\u003e\n        \u003cp\u003eFor a full overview of MongoDB and all my posts on it, check out my \u003ca href=\"https://donaldfeury.xyz/introduction-to-mongodb/\"\u003eoverview\u003c/a\u003e.\u003c/p\u003e\u003cp\u003eUpserting is a database concept that combines inserting and updating that MongoDB supports. To perform an upsert during an update operation, you must pass an additional argument to the \u003ccode\u003eupdate\u003c/code\u003e, \u003ccode\u003eupdateOne\u003c/code\u003e, or \u003ccode\u003eupdateMany\u003c/code\u003e methods.\u003c/p\u003e\u003cp\u003eWith the given data inserted in a collection called \u003ccode\u003eusers\u003c/code\u003e:\u003c/p\u003e\u003cpre\u003e\u003ccode class=\"language-javascript\"\u003edb.users.insertMany([\n\t{\n\t\t_id: 1,\n\t\tname: \u0026#34;John Doe\u0026#34;,\n\t\temail: \u0026#34;doe@doe.com\u0026#34;,\n\t\tadmin: true\n\t},\n\t{\n\t\t_id: 2,\n\t\tname: \u0026#34;Jane Doe\u0026#34;,\n\t\temail: \u0026#34;jane@doe.com\u0026#34;,\n\t\tadmin: true\n\t},\n\t{\n\t\t_id: 3,\n\t\tname: \u0026#34;Billy Bob\u0026#34;,\n\t\temail: \u0026#34;billy@bob.com\u0026#34;,\n\t\tadmin: false\n\t},\n\t{\n\t\t_id: 4\n\t\tname: \u0026#34;Steve Stevenson\u0026#34;,\n\t\temail: \u0026#34;steve@test.com\u0026#34;,\n\t\tadmin: true\n\t},\n])\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eIf the following command is used:\u003c/p\u003e\u003cpre\u003e\u003ccode class=\"language-javascript\"\u003edb.users.updateOne({_id: 5}, {$set: {admin: true}})\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eIt won\u0026#39;t do anything as there is no document matching the query of \u003ccode\u003e_id = 5\u003c/code\u003e.\u003c/p\u003e\u003cp\u003eIf upserting is enabled:\u003c/p\u003e\u003cpre\u003e\u003ccode class=\"language-javascript\"\u003edb.users.updateOne(\n\t{_id: 5},\n\t{ $set: { admin: true } },\n\t{ upsert: true }\n)\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eSince there is no document matching the query, a new document is inserting using the given \u003ccode\u003e_id\u003c/code\u003e and the result of the update operators.\u003c/p\u003e\u003cp\u003e\u003ca href=\"https://donaldfeury.xyz/get-all-the-documents-out-of-a-collection-in-mongodb/\"\u003eUse the find method to read data back out of MongoDB\u003c/a\u003e to check the collection:\u003c/p\u003e\u003cpre\u003e\u003ccode class=\"language-javascript\"\u003edb.users.find()\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eWill yield:\u003c/p\u003e\u003cpre\u003e\u003ccode class=\"language-json\"\u003e{\n\t_id: 1,\n\tname: \u0026#34;John Doe\u0026#34;,\n\temail: \u0026#34;doe@doe.com\u0026#34;,\n\tadmin: true\n},\n{\n\t_id: 2,\n\tname: \u0026#34;Jane Doe\u0026#34;,\n\temail: \u0026#34;jane@doe.com\u0026#34;,\n\tadmin: true\n},\n{\n\t_id: 3,\n\tname: \u0026#34;Billy Bob\u0026#34;,\n\temail: \u0026#34;billy@bob.com\u0026#34;,\n\tadmin: false\n},\n{\n\t_id: 4\n\tname: \u0026#34;Steve Stevenson\u0026#34;,\n\temail: \u0026#34;steve@test.com\u0026#34;,\n\tadmin: true\n},\n{\n\t_id: 5\n\tadmin: true\n}\n\u003c/code\u003e\u003c/pre\u003e\u003chr/\u003e\u003cp\u003eDid you find this information useful? If so, consider heading over to my \u003ca href=\"https://donaldfeury.xyz/donate/\"\u003edonation\u003c/a\u003e page and drop me some support.\u003c/p\u003e\u003cp\u003eWant to ask a question or just chat? Contact me \u003ca href=\"https://donaldfeury.xyz/contact\"\u003ehere\u003c/a\u003e\u003c/p\u003e\n    \u003c/section\u003e",
  "Date": "2021-08-22T18:25:14Z",
  "Author": "Donald Feury"
}