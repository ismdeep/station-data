{
  "Source": "donaldfeury.xyz",
  "Title": "When to use MongoDB aggregations instead of queries",
  "Link": "https://donaldfeury.xyz/when-to-use-mongodb-aggregations-instead-of-queries/",
  "Content": "\u003csection class=\"gh-content gh-canvas\"\u003e\n        \u003cp\u003eFor a full overview of MongoDB and all my posts on it, check out my \u003ca href=\"https://donaldfeury.xyz/introduction-to-mongodb/\"\u003eoverview\u003c/a\u003e.\u003c/p\u003e\u003cp\u003eWhen it comes to reading data out of your MongoDB instance you have two options, a query using the standard query language or an aggregation pipeline. While you can often use either for many use cases, there are differences in how they are used and what use cases they are a good fit for.\u003c/p\u003e\u003cp\u003eFor use with the following examples you can insert the following documents into your MongoDB instance:\u003c/p\u003e\u003cdiv class=\"kg-card kg-callout-card kg-callout-card-pink\"\u003e\u003cdiv class=\"kg-callout-emoji\"\u003eðŸ’¡\u003c/div\u003e\u003cdiv class=\"kg-callout-text\"\u003e\u003cstrong\u003eIf you haven\u0026#39;t inserted multiple documents into MongoDB before, you can \u003ca href=\"https://donaldfeury.xyz/how-to-bulk-insert-documents-into-a-mongodb-collection/\"\u003eread about that here\u003c/a\u003e.\u003c/strong\u003e\u003c/div\u003e\u003c/div\u003e\u003cpre\u003e\u003ccode class=\"language-javascript\"\u003edb.podcasts.insertMany([\n\t{id: 1, name: \u0026#34;Podcast 1\u0026#34;, category: \u0026#34;Business\u0026#34;, rss: \u0026#34;https://mypodcast1.com/podcast/rss\u0026#34;},\n\t{id: 2, name: \u0026#34;Podcast 2\u0026#34;, category: \u0026#34;Business\u0026#34;, rss: \u0026#34;https://podcast2.net/rss\u0026#34;},\n\t{id: 3, name: \u0026#34;Podcast 3\u0026#34;, category: \u0026#34;Health \u0026amp; Wellness\u0026#34;, rss: \u0026#34;https://podcast3.xyz/feed/rss\u0026#34;},\n\t{id: 4, name: \u0026#34;Podcast 4\u0026#34;, category: \u0026#34;Technology\u0026#34;, rss: \u0026#34;https://podcast4.com/rss\u0026#34;}\n]);\n\ndb.episodes.insertMany([\n\t{podcast_id: 3, title: \u0026#34;Anabolic Recipes\u0026#34;, published_on: \u0026#34;2020-01-02\u0026#34;},\n\t{podcast_id: 4, title: \u0026#34;Getting Going with Go\u0026#34;, published_on: \u0026#34;2021-02-24\u0026#34;},\n\t{podcast_id: 1, title: \u0026#34;Talk About Money Early\u0026#34;, published_on: \u0026#34;2022-01-01\u0026#34;},\n\t{podcast_id: 1, title: \u0026#34;Charge More by Saying No\u0026#34;, publshed_on: \u0026#34;2021-12-01\u0026#34;},\n\t{podcast_id: 2, title: \u0026#34;Candidate Interview Strategies\u0026#34;, published_on: \u0026#34;2020-05-01\u0026#34;},\n\t{podcast_id: 4, title: \u0026#34;The Magic of Pattern Matching\u0026#34;, published_on: \u0026#34;2022-01-01\u0026#34;}\n]);\n\u003c/code\u003e\u003c/pre\u003e\u003ch2 id=\"ease-of-use\"\u003eEase of use\u003c/h2\u003e\u003cp\u003eMongoDB\u0026#39;s query language and its related methods are meant to be straightforward to use. Compared to aggregations they are easier to read and are less prone to error.\u003c/p\u003e\u003cp\u003eTake the example of wanting to filter out and return only certain documents. Using the query language is as simple as passing in an object describing how to filter the objects to the \u003ccode\u003efind\u003c/code\u003e method.\u003c/p\u003e\u003cdiv class=\"kg-card kg-callout-card kg-callout-card-pink\"\u003e\u003cdiv class=\"kg-callout-emoji\"\u003eðŸ’¡\u003c/div\u003e\u003cdiv class=\"kg-callout-text\"\u003e\u003cstrong\u003eYou can read more about \u003ca href=\"https://donaldfeury.xyz/how-to-retrieve-specific-documents-from-mongodb-using-filters/\"\u003eusing the find method here\u003c/a\u003e.Â \u003c/strong\u003e\u003c/div\u003e\u003c/div\u003e\u003cpre\u003e\u003ccode class=\"language-javascript\"\u003edb.podcasts.find({category: \u0026#34;Business\u0026#34;});\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eTo do the same thing with an aggregation would require the use of \u003ccode\u003e$match\u003c/code\u003e aggregation stage.\u003c/p\u003e\u003cpre\u003e\u003ccode class=\"language-javascript\"\u003edb.podcasts.aggregate([\n { $match: {\n \tcategory: \u0026#34;Business\u0026#34;\n }}\n]);\n\u003c/code\u003e\u003c/pre\u003e\u003ch2 id=\"use-case\"\u003eUse Case\u003c/h2\u003e\u003cp\u003eWhile the strength of the standard query language is its simplicity, that also limits what problems it can solve. Aggregations are essentially the opposite, harder to use but much more powerful, allowing them to accomplish certain use cases that are unable to be done by simple queries.\u003c/p\u003e\u003cp\u003eThe standard query language is a good solution for:\u003c/p\u003e\u003cul\u003e\u003cli\u003eReturning/affecting only certain documents that match provided filter\u003c/li\u003e\u003cli\u003eWhen reading data back out, only including certain fields\u003c/li\u003e\u003c/ul\u003e\u003cp\u003eAnything that falls outside the scope of those scenarios is either \u003cem\u003ebetter\u003c/em\u003e done or required to be done by aggregations.\u003c/p\u003e\u003cp\u003eOne such example and the earliest one I personally needed to use aggregations was when wanting to perform an operation similar to a join in a SQL query.\u003c/p\u003e\u003cp\u003eThis simply cannot be done using the available query methods and language but CAN be accomplished using the \u003ccode\u003e$lookup\u003c/code\u003e aggregation stage.\u003c/p\u003e\u003cp\u003eWhat if we wanted to get all of our podcasts including each episode associated with that podcast:\u003c/p\u003e\u003cpre\u003e\u003ccode class=\"language-javascript\"\u003edb.podcasts.aggregate([\n\t{ $lookup: {\n\t\tfrom: \u0026#34;episodes\u0026#34;,\n\t\tlocalField: \u0026#34;id\u0026#34;,\n\t\tforeignField: \u0026#34;podcast_id\u0026#34;,\n\t\tas: \u0026#34;episodes\u0026#34;\n\t}}\n]);\n\u003c/code\u003e\u003c/pre\u003e\u003cdiv class=\"kg-card kg-callout-card kg-callout-card-pink\"\u003e\u003cdiv class=\"kg-callout-emoji\"\u003eðŸ’¡\u003c/div\u003e\u003cdiv class=\"kg-callout-text\"\u003e\u003cstrong\u003eWant to know how to do a JOIN in MongoDB? \u003ca href=\"https://donaldfeury.xyz/how-to-perform-a-join-in-mongodb\"\u003eRead here to learn how to do just that.\u003c/a\u003e\u003c/strong\u003e\u003c/div\u003e\u003c/div\u003e\u003chr/\u003e\u003cp\u003eDid you find this information useful? If so, consider heading over to my \u003ca href=\"https://donaldfeury.xyz/donate/\"\u003edonation\u003c/a\u003e page and drop me some support.\u003c/p\u003e\u003cp\u003eWant to ask a question or just chat? Contact me \u003ca href=\"https://donaldfeury.xyz/contact\"\u003ehere\u003c/a\u003e\u003c/p\u003e\u003cp\u003e\u003c/p\u003e\n    \u003c/section\u003e",
  "Date": "2022-01-24T01:54:50Z",
  "Author": "Donald Feury"
}