{
  "Source": "donaldfeury.xyz",
  "Title": "Replace the Audio in a Video Using FFmpeg",
  "Link": "https://donaldfeury.xyz/replace-the-audio-in-a-video-using-ffmpeg/",
  "Content": "\u003csection class=\"gh-content gh-canvas\"\u003e\n        \u003cp\u003eI had someone email me asking how to solve the following problem:\u003c/p\u003e\u003cblockquote\u003eI would like to take video A, video B, and replace the audio in video A with the audio from video B\u003c/blockquote\u003e\u003cp\u003eThe approach they were trying was as follows:\u003c/p\u003e\u003col\u003e\u003cli\u003eExtract only the video from video A\u003c/li\u003e\u003cli\u003eExtract only the audio from video B, while also transcoding it a codec he needed it to be in\u003c/li\u003e\u003cli\u003eMerge these two files\u003c/li\u003e\u003c/ol\u003e\u003cp\u003eNow, this approach is fine but he encountered an issue. He claimed to need the audio in the WAV file format but the WAV format wasn\u0026#39;t compatible with the codec he needed to transcode the audio into.\u003c/p\u003e\u003cp\u003eSo what does he do?\u003c/p\u003e\u003cp\u003eI showed him you can do all this in one command, avoiding this file format issue, while also not creating the intermittent files.\u003c/p\u003e\u003cp\u003eLet me show you the example I showed him and I will break it down.\u003c/p\u003e\u003cfigure class=\"kg-card kg-embed-card\"\u003e\u003ciframe width=\"200\" height=\"113\" src=\"https://www.youtube.com/embed/fXdaNnAe_MA?feature=oembed\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen=\"\"\u003e\u003c/iframe\u003e\u003c/figure\u003e\u003cpre\u003e\u003ccode class=\"language-sh\"\u003eVIDEO=$1\nAUDIO=$2\nOUTPUT=$3\n\nffmpeg -an -i $VIDEO -vn -i $AUDIO -map [0:v] -map [1:a] -c:v copy -c:a pcm_s8_planar $OUTPUT\n\u003c/code\u003e\u003c/pre\u003e\u003cblockquote\u003eVIDEO=$1\u003c/blockquote\u003e\u003cp\u003eThis is the file he wants to use the video stream from, in his case, it\u0026#39;s video A.\u003c/p\u003e\u003cblockquote\u003eAUDIO=$2\u003c/blockquote\u003e\u003cp\u003eThis is the file he wants to use the audio from, making this video B.\u003c/p\u003e\u003cblockquote\u003eOUTPUT=$3\u003c/blockquote\u003e\u003cp\u003eThe file path to save the combined result to.\u003c/p\u003e\u003cblockquote\u003e-an -i $VIDEO\u003c/blockquote\u003e\u003cp\u003eThe \u003cstrong\u003e-an\u003c/strong\u003e option before the input means \u003cstrong\u003eignore the audio stream\u003c/strong\u003e. This will give us only the video stream for this file. It also speeds up the command by avoiding having to read the audio stream.\u003c/p\u003e\u003cblockquote\u003e-vn -i $AUDIO\u003c/blockquote\u003e\u003cp\u003eThe \u003cstrong\u003e-vn\u003c/strong\u003e option before the input means \u003cstrong\u003eignore the video stream\u003c/strong\u003e. This will give us only the audio stream for this file. It also speeds up the command by avoiding having to read the video stream.\u003c/p\u003e\u003cblockquote\u003e-map [0:v] -map [1:a]\u003c/blockquote\u003e\u003cp\u003eThe \u003cstrong\u003e-map\u003c/strong\u003e options make it so that we explicitly tell \u003cstrong\u003eFFmpeg\u003c/strong\u003e what streams of data to write out to the output, instead of it just figuring it out. This may have not been needed but I\u0026#39;d rather be explicit when I need to be.\u003c/p\u003e\u003cblockquote\u003e-c:v copy -c:a pcm_s8_planar $OUTPUT\u003c/blockquote\u003e\u003cp\u003eThe \u003cstrong\u003e-c:v copy\u003c/strong\u003e option makes so \u003cstrong\u003eFFmpeg\u003c/strong\u003e just copies the video stream over, avoiding a decode and re-encode. This makes it really fast.\u003c/p\u003e\u003cp\u003ethe \u003cstrong\u003e-c:a pcm_s8_planar\u003c/strong\u003e option transcodes the audio stream to the codec he needed it to be in.\u003c/p\u003e\u003cp\u003eLastly, we just tell \u003cstrong\u003eFFmpeg\u003c/strong\u003e to use the output path given\u003c/p\u003e\u003cp\u003e\u003cstrong\u003eaaannnddddd...\u003c/strong\u003e\u003c/p\u003e\u003cp\u003e\u003cstrong\u003eDrum roll please...\u003c/strong\u003e\u003c/p\u003e\u003cp\u003eIt worked like a charm! He was very happy to be able to continue with his project.\u003c/p\u003e\u003chr/\u003e\u003cp\u003eDid you find this information useful? If so, consider heading over to my \u003ca href=\"https://donaldfeury.xyz/donate/\"\u003edonation\u003c/a\u003e page and drop me some support.\u003c/p\u003e\u003cp\u003eWant to ask a question or just chat? Contact me \u003ca href=\"https://donaldfeury.xyz/contact\"\u003ehere\u003c/a\u003e\u003c/p\u003e\n    \u003c/section\u003e",
  "Date": "2021-06-27T02:02:24Z",
  "Author": "Donald Feury"
}