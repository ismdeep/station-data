{
  "Source": "dunwu",
  "Title": "Spring IoC 依赖来源",
  "Link": "https://dunwu.github.io/blog/pages/a5f257/",
  "Content": "\u003cdiv class=\"post-body\" itemprop=\"articleBody\"\u003e\u003ch1 id=\"Spring-IoC-依赖来源\"\u003e\u003ca href=\"#Spring-IoC-依赖来源\" class=\"headerlink\" title=\"Spring IoC 依赖来源\"\u003e\u003c/a\u003eSpring IoC 依赖来源\u003c/h1\u003e\u003ch2 id=\"依赖查找的来源\"\u003e\u003ca href=\"#依赖查找的来源\" class=\"headerlink\" title=\"依赖查找的来源\"\u003e\u003c/a\u003e依赖查找的来源\u003c/h2\u003e\u003cp\u003e查找来源\u003c/p\u003e\n\u003ctable\u003e\n\u003cthead\u003e\n\u003ctr\u003e\n\u003cth\u003e来源\u003c/th\u003e\n\u003cth\u003e配置元数据\u003c/th\u003e\n\u003c/tr\u003e\n\u003c/thead\u003e\n\u003ctbody\u003e\u003ctr\u003e\n\u003ctd\u003eSpring BeanDefinition\u003c/td\u003e\n\u003ctd\u003e\u003ccode\u003e\u0026lt;bean id =\u0026#34;user\u0026#34; class=\u0026#34;xxx.xxx.User\u0026#34;\u0026gt;\u003c/code\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003c/td\u003e\n\u003ctd\u003e\u003ccode\u003e@Bean public User user() {...}\u003c/code\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003c/td\u003e\n\u003ctd\u003e\u003ccode\u003eBeanDefinitionBuilder\u003c/code\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e单例对象\u003c/td\u003e\n\u003ctd\u003eAPI 实现\u003c/td\u003e\n\u003c/tr\u003e\n\u003c/tbody\u003e\u003c/table\u003e\n\u003cp\u003eSpring 內建 BeanDefintion\u003c/p\u003e\n\u003ctable\u003e\n\u003cthead\u003e\n\u003ctr\u003e\n\u003cth\u003eBean 名称\u003c/th\u003e\n\u003cth\u003eBean 实例\u003c/th\u003e\n\u003cth\u003e使用场景\u003c/th\u003e\n\u003c/tr\u003e\n\u003c/thead\u003e\n\u003ctbody\u003e\u003ctr\u003e\n\u003ctd\u003eorg.springframework.context.annotation.internalConfigurationAnnotationProcessor\u003c/td\u003e\n\u003ctd\u003eConfigurationClassPostProcessor 对象\u003c/td\u003e\n\u003ctd\u003e处理 Spring 配置类\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003eorg.springframework.context.annotation.internalAutowiredAnnotationProcessor\u003c/td\u003e\n\u003ctd\u003eAutowiredAnnotationBeanPostProcessor 对象\u003c/td\u003e\n\u003ctd\u003e处理 @Autowired 以及 @Value 注解\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003eorg.springframework.context.annotation.internalCommonAnnotationProcessor\u003c/td\u003e\n\u003ctd\u003eCommonAnnotationBeanPostProcessor 对象\u003c/td\u003e\n\u003ctd\u003e（条件激活）处理 JSR-250 注解，如 @PostConstruct 等\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003eorg.springframework.context.event.internalEventListenerProcessor\u003c/td\u003e\n\u003ctd\u003eEventListenerMethodProcessor 对象\u003c/td\u003e\n\u003ctd\u003e处理标注 @EventListener 的 Spring 事件监听方法\u003c/td\u003e\n\u003c/tr\u003e\n\u003c/tbody\u003e\u003c/table\u003e\n\u003cp\u003eSpring 內建单例对象\u003c/p\u003e\n\u003ctable\u003e\n\u003cthead\u003e\n\u003ctr\u003e\n\u003cth\u003eBean 名称\u003c/th\u003e\n\u003cth\u003eBean 实例\u003c/th\u003e\n\u003cth\u003e使用场景\u003c/th\u003e\n\u003c/tr\u003e\n\u003c/thead\u003e\n\u003ctbody\u003e\u003ctr\u003e\n\u003ctd\u003eenvironment\u003c/td\u003e\n\u003ctd\u003eEnvironment 对象\u003c/td\u003e\n\u003ctd\u003e外部化配置以及 Profiles\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003esystemProperties\u003c/td\u003e\n\u003ctd\u003ejava.util.Properties 对象\u003c/td\u003e\n\u003ctd\u003eJava 系统属性\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003esystemEnvironment\u003c/td\u003e\n\u003ctd\u003ejava.util.Map 对象\u003c/td\u003e\n\u003ctd\u003e操作系统环境变量\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003emessageSource\u003c/td\u003e\n\u003ctd\u003eMessageSource 对象\u003c/td\u003e\n\u003ctd\u003e国际化文案\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003elifecycleProcessor\u003c/td\u003e\n\u003ctd\u003eLifecycleProcessor 对象\u003c/td\u003e\n\u003ctd\u003eLifecycle Bean 处理器\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003eapplicationEventMulticaster\u003c/td\u003e\n\u003ctd\u003eApplicationEventMulticaster 对象\u003c/td\u003e\n\u003ctd\u003eSpring 事件广播器\u003c/td\u003e\n\u003c/tr\u003e\n\u003c/tbody\u003e\u003c/table\u003e\n\u003ch2 id=\"依赖注入的来源\"\u003e\u003ca href=\"#依赖注入的来源\" class=\"headerlink\" title=\"依赖注入的来源\"\u003e\u003c/a\u003e依赖注入的来源\u003c/h2\u003e\u003ctable\u003e\n\u003cthead\u003e\n\u003ctr\u003e\n\u003cth\u003e来源\u003c/th\u003e\n\u003cth\u003e配置元数据\u003c/th\u003e\n\u003c/tr\u003e\n\u003c/thead\u003e\n\u003ctbody\u003e\u003ctr\u003e\n\u003ctd\u003eSpring BeanDefinition\u003c/td\u003e\n\u003ctd\u003e\u003ccode\u003e\u0026lt;bean id =\u0026#34;user\u0026#34; class=\u0026#34;xxx.xxx.User\u0026#34;\u0026gt;\u003c/code\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003c/td\u003e\n\u003ctd\u003e\u003ccode\u003e@Bean public User user() {...}\u003c/code\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003c/td\u003e\n\u003ctd\u003e\u003ccode\u003eBeanDefinitionBuilder\u003c/code\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e单例对象\u003c/td\u003e\n\u003ctd\u003eAPI 实现\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e非 Spring 容器管理对象\u003c/td\u003e\n\u003ctd\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003c/tbody\u003e\u003c/table\u003e\n\u003ch2 id=\"Spring-容器管理和游离对象\"\u003e\u003ca href=\"#Spring-容器管理和游离对象\" class=\"headerlink\" title=\"Spring 容器管理和游离对象\"\u003e\u003c/a\u003eSpring 容器管理和游离对象\u003c/h2\u003e\u003ctable\u003e\n\u003cthead\u003e\n\u003ctr\u003e\n\u003cth\u003e来源\u003c/th\u003e\n\u003cth\u003eSpring Bean 对象\u003c/th\u003e\n\u003cth\u003e生命周期管理\u003c/th\u003e\n\u003cth\u003e配置元信息\u003c/th\u003e\n\u003cth\u003e使用场景\u003c/th\u003e\n\u003c/tr\u003e\n\u003c/thead\u003e\n\u003ctbody\u003e\u003ctr\u003e\n\u003ctd\u003eSpring BeanDefinition\u003c/td\u003e\n\u003ctd\u003e是\u003c/td\u003e\n\u003ctd\u003e是\u003c/td\u003e\n\u003ctd\u003e有\u003c/td\u003e\n\u003ctd\u003e依赖查找、依赖注入\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e单体对象\u003c/td\u003e\n\u003ctd\u003e是\u003c/td\u003e\n\u003ctd\u003e否\u003c/td\u003e\n\u003ctd\u003e无\u003c/td\u003e\n\u003ctd\u003e依赖查找、依赖注入\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003eResolvable Dependency\u003c/td\u003e\n\u003ctd\u003e否\u003c/td\u003e\n\u003ctd\u003e否\u003c/td\u003e\n\u003ctd\u003e无\u003c/td\u003e\n\u003ctd\u003e依赖注入\u003c/td\u003e\n\u003c/tr\u003e\n\u003c/tbody\u003e\u003c/table\u003e\n\u003ch2 id=\"Spring-BeanDefinition-作为依赖来源\"\u003e\u003ca href=\"#Spring-BeanDefinition-作为依赖来源\" class=\"headerlink\" title=\"Spring BeanDefinition 作为依赖来源\"\u003e\u003c/a\u003eSpring BeanDefinition 作为依赖来源\u003c/h2\u003e\u003cul\u003e\n\u003cli\u003e元数据：\u003ccode\u003eBeanDefinition\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003e注册：\u003ccode\u003eBeanDefinitionRegistry#registerBeanDefinition\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003e类型：延迟和非延迟\u003c/li\u003e\n\u003cli\u003e顺序：Bean 生命周期顺序按照注册顺序\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"单例对象作为依赖来源\"\u003e\u003ca href=\"#单例对象作为依赖来源\" class=\"headerlink\" title=\"单例对象作为依赖来源\"\u003e\u003c/a\u003e单例对象作为依赖来源\u003c/h2\u003e\u003cul\u003e\n\u003cli\u003e要素\u003cul\u003e\n\u003cli\u003e来源：外部普通 Java 对象（不一定是 POJO）\u003c/li\u003e\n\u003cli\u003e注册：\u003ccode\u003eSingletonBeanRegistry#registerSingleton\u003c/code\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e限制\u003cul\u003e\n\u003cli\u003e无生命周期管理\u003c/li\u003e\n\u003cli\u003e无法实现延迟初始化 Bean\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"非-Spring-对象容器管理对象作为依赖来源\"\u003e\u003ca href=\"#非-Spring-对象容器管理对象作为依赖来源\" class=\"headerlink\" title=\"非 Spring 对象容器管理对象作为依赖来源\"\u003e\u003c/a\u003e非 Spring 对象容器管理对象作为依赖来源\u003c/h2\u003e\u003cul\u003e\n\u003cli\u003e要素\u003cul\u003e\n\u003cli\u003e注册：\u003ccode\u003eConfigurableListableBeanFactory#registerResolvableDependency\u003c/code\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e限制\u003cul\u003e\n\u003cli\u003e无生命周期管理\u003c/li\u003e\n\u003cli\u003e无法实现延迟初始化 Bean\u003c/li\u003e\n\u003cli\u003e无法通过依赖查找\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"外部化配置作为依赖来源\"\u003e\u003ca href=\"#外部化配置作为依赖来源\" class=\"headerlink\" title=\"外部化配置作为依赖来源\"\u003e\u003c/a\u003e外部化配置作为依赖来源\u003c/h2\u003e\u003cul\u003e\n\u003cli\u003e要素\u003cul\u003e\n\u003cli\u003e类型：非常规 Spring 对象依赖来源\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e限制\u003cul\u003e\n\u003cli\u003e无生命周期管理\u003c/li\u003e\n\u003cli\u003e无法实现延迟初始化 Bean\u003c/li\u003e\n\u003cli\u003e无法通过依赖查找\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"问题\"\u003e\u003ca href=\"#问题\" class=\"headerlink\" title=\"问题\"\u003e\u003c/a\u003e问题\u003c/h2\u003e\u003cp\u003e注入和查找的依赖来源是否相同？\u003c/p\u003e\n\u003cp\u003e否，依赖查找的来源仅限于 Spring \u003ccode\u003eBeanDefinition\u003c/code\u003e 以及单例对象，而依赖注入的来源还包括 Resolvable Dependency 以及 \u003ccode\u003e@Value\u003c/code\u003e 所标注的外部化配置\u003c/p\u003e\n\u003cp\u003e单例对象能在 IoC 容器启动后注册吗？\u003c/p\u003e\n\u003cp\u003e可以的，单例对象的注册与 \u003ccode\u003eBeanDefinition\u003c/code\u003e 不同，\u003ccode\u003eBeanDefinition\u003c/code\u003e 会被 \u003ccode\u003eConfigurableListableBeanFactory#freezeConfiguration()\u003c/code\u003e 方法影响，从而冻结注册，单例对象则没有这个限制。\u003c/p\u003e\n\u003cp\u003eSpring 依赖注入的来源有哪些？\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eSpring \u003ccode\u003eBeanDefinition\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003e单例对象\u003c/li\u003e\n\u003cli\u003eResolvable Dependency\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003e@Value\u003c/code\u003e 外部化配置\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"参考资料\"\u003e\u003ca href=\"#参考资料\" class=\"headerlink\" title=\"参考资料\"\u003e\u003c/a\u003e参考资料\u003c/h2\u003e\u003cul\u003e\n\u003cli\u003e\u003ca target=\"_blank\" rel=\"noopener\" href=\"https://docs.spring.io/spring-framework/docs/current/spring-framework-reference/core.html#beans\"\u003eSpring 官方文档之 Core Technologies\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca target=\"_blank\" rel=\"noopener\" href=\"https://time.geekbang.org/course/intro/265\"\u003e《小马哥讲 Spring 核心编程思想》\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n    \u003c/div\u003e",
  "Date": "2022-12-20T12:33:51Z",
  "Author": "钝悟 ◾ Dunwu"
}