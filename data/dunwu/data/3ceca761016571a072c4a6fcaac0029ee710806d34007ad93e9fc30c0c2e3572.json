{
  "Source": "dunwu",
  "Title": "Flink ETL",
  "Link": "https://dunwu.github.io/blog/pages/6c8f32/",
  "Content": "\u003cdiv class=\"post-body\" itemprop=\"articleBody\"\u003e\u003ch1 id=\"Flink-ETL\"\u003e\u003ca href=\"#Flink-ETL\" class=\"headerlink\" title=\"Flink ETL\"\u003e\u003c/a\u003eFlink ETL\u003c/h1\u003e\u003cp\u003eApache Flink 的一种常见应用场景是 ETL（抽取、转换、加载）管道任务。从一个或多个数据源获取数据，进行一些转换操作和信息补充，将结果存储起来。在这个教程中，我们将介绍如何使用 Flink 的 DataStream API 实现这类应用。\u003c/p\u003e\n\u003cp\u003e这里注意，Flink 的 \u003ca target=\"_blank\" rel=\"noopener\" href=\"https://nightlies.apache.org/flink/flink-docs-release-1.14/zh/docs/dev/table/overview/\"\u003eTable 和 SQL API\u003c/a\u003e 完全可以满足很多 ETL 使用场景。但无论你最终是否直接使用 DataStream API，对这里介绍的基本知识有扎实的理解都是有价值的。\u003c/p\u003e\n\u003ch2 id=\"无状态的转换\"\u003e\u003ca href=\"#无状态的转换\" class=\"headerlink\" title=\"无状态的转换\"\u003e\u003c/a\u003e无状态的转换\u003c/h2\u003e\u003cp\u003e本节涵盖了 \u003ccode\u003emap()\u003c/code\u003e 和 \u003ccode\u003eflatmap()\u003c/code\u003e，这两种算子可以用来实现无状态转换的基本操作。\u003c/p\u003e\n\u003ch3 id=\"map\"\u003e\u003ca href=\"#map\" class=\"headerlink\" title=\"map()\"\u003e\u003c/a\u003e\u003ccode\u003emap()\u003c/code\u003e\u003c/h3\u003e\u003cp\u003e在第一个练习中，你将过滤出租车行程数据中的事件。在同一代码仓库中，有一个 \u003ccode\u003eGeoUtils\u003c/code\u003e 类，提供了一个静态方法 \u003ccode\u003eGeoUtils.mapToGridCell(float lon, float lat)\u003c/code\u003e，它可以将位置坐标（经度，维度）映射到 100x100 米的对应不同区域的网格单元。\u003c/p\u003e\n\u003cp\u003e现在让我们为每个出租车行程时间的数据对象增加 \u003ccode\u003estartCell\u003c/code\u003e 和 \u003ccode\u003eendCell\u003c/code\u003e 字段。你可以创建一个继承 \u003ccode\u003eTaxiRide\u003c/code\u003e 的 \u003ccode\u003eEnrichedRide\u003c/code\u003e 类，添加这些字段：\u003c/p\u003e\n\u003cfigure class=\"highlight java\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e8\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e9\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e10\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e11\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e12\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e13\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e14\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e15\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e16\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e17\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e18\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e19\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e20\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"keyword\"\u003epublic\u003c/span\u003e \u003cspan class=\"keyword\"\u003estatic\u003c/span\u003e \u003cspan class=\"keyword\"\u003eclass\u003c/span\u003e \u003cspan class=\"title class_\"\u003eEnrichedRide\u003c/span\u003e \u003cspan class=\"keyword\"\u003eextends\u003c/span\u003e \u003cspan class=\"title class_\"\u003eTaxiRide\u003c/span\u003e {\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"keyword\"\u003epublic\u003c/span\u003e \u003cspan class=\"type\"\u003eint\u003c/span\u003e startCell;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"keyword\"\u003epublic\u003c/span\u003e \u003cspan class=\"type\"\u003eint\u003c/span\u003e endCell;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"keyword\"\u003epublic\u003c/span\u003e \u003cspan class=\"title function_\"\u003eEnrichedRide\u003c/span\u003e\u003cspan class=\"params\"\u003e()\u003c/span\u003e {}\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"keyword\"\u003epublic\u003c/span\u003e \u003cspan class=\"title function_\"\u003eEnrichedRide\u003c/span\u003e\u003cspan class=\"params\"\u003e(TaxiRide ride)\u003c/span\u003e {\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        \u003cspan class=\"built_in\"\u003ethis\u003c/span\u003e.rideId = ride.rideId;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        \u003cspan class=\"built_in\"\u003ethis\u003c/span\u003e.isStart = ride.isStart;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        ...\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        \u003cspan class=\"built_in\"\u003ethis\u003c/span\u003e.startCell = GeoUtils.mapToGridCell(ride.startLon, ride.startLat);\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        \u003cspan class=\"built_in\"\u003ethis\u003c/span\u003e.endCell = GeoUtils.mapToGridCell(ride.endLon, ride.endLat);\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    }\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"keyword\"\u003epublic\u003c/span\u003e String \u003cspan class=\"title function_\"\u003etoString\u003c/span\u003e\u003cspan class=\"params\"\u003e()\u003c/span\u003e {\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        \u003cspan class=\"keyword\"\u003ereturn\u003c/span\u003e \u003cspan class=\"built_in\"\u003esuper\u003c/span\u003e.toString() + \u003cspan class=\"string\"\u003e\u0026#34;,\u0026#34;\u003c/span\u003e +\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e            Integer.toString(\u003cspan class=\"built_in\"\u003ethis\u003c/span\u003e.startCell) + \u003cspan class=\"string\"\u003e\u0026#34;,\u0026#34;\u003c/span\u003e +\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e            Integer.toString(\u003cspan class=\"built_in\"\u003ethis\u003c/span\u003e.endCell);\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    }\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e}\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e然后你可以创建一个应用来转换这个流\u003c/p\u003e\n\u003cfigure class=\"highlight java\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003eDataStream\u0026lt;TaxiRide\u0026gt; rides = env.addSource(\u003cspan class=\"keyword\"\u003enew\u003c/span\u003e \u003cspan class=\"title class_\"\u003eTaxiRideSource\u003c/span\u003e(...));\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eDataStream\u0026lt;EnrichedRide\u0026gt; enrichedNYCRides = rides\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    .filter(\u003cspan class=\"keyword\"\u003enew\u003c/span\u003e \u003cspan class=\"title class_\"\u003eRideCleansingSolution\u003c/span\u003e.NYCFilter())\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    .map(\u003cspan class=\"keyword\"\u003enew\u003c/span\u003e \u003cspan class=\"title class_\"\u003eEnrichment\u003c/span\u003e());\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eenrichedNYCRides.print();\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e使用这个 \u003ccode\u003eMapFunction\u003c/code\u003e:\u003c/p\u003e\n\u003cfigure class=\"highlight java\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"keyword\"\u003epublic\u003c/span\u003e \u003cspan class=\"keyword\"\u003estatic\u003c/span\u003e \u003cspan class=\"keyword\"\u003eclass\u003c/span\u003e \u003cspan class=\"title class_\"\u003eEnrichment\u003c/span\u003e \u003cspan class=\"keyword\"\u003eimplements\u003c/span\u003e \u003cspan class=\"title class_\"\u003eMapFunction\u003c/span\u003e\u0026lt;TaxiRide, EnrichedRide\u0026gt; {\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"meta\"\u003e@Override\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"keyword\"\u003epublic\u003c/span\u003e EnrichedRide \u003cspan class=\"title function_\"\u003emap\u003c/span\u003e\u003cspan class=\"params\"\u003e(TaxiRide taxiRide)\u003c/span\u003e \u003cspan class=\"keyword\"\u003ethrows\u003c/span\u003e Exception {\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        \u003cspan class=\"keyword\"\u003ereturn\u003c/span\u003e \u003cspan class=\"keyword\"\u003enew\u003c/span\u003e \u003cspan class=\"title class_\"\u003eEnrichedRide\u003c/span\u003e(taxiRide);\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    }\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e}\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003ch3 id=\"flatmap\"\u003e\u003ca href=\"#flatmap\" class=\"headerlink\" title=\"flatmap()\"\u003e\u003c/a\u003e\u003ccode\u003eflatmap()\u003c/code\u003e\u003c/h3\u003e\u003cp\u003e\u003ccode\u003eMapFunction\u003c/code\u003e 只适用于一对一的转换：对每个进入算子的流元素，\u003ccode\u003emap()\u003c/code\u003e 将仅输出一个转换后的元素。对于除此以外的场景，你将要使用 \u003ccode\u003eflatmap()\u003c/code\u003e。\u003c/p\u003e\n\u003cfigure class=\"highlight java\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003eDataStream\u0026lt;TaxiRide\u0026gt; rides = env.addSource(\u003cspan class=\"keyword\"\u003enew\u003c/span\u003e \u003cspan class=\"title class_\"\u003eTaxiRideSource\u003c/span\u003e(...));\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eDataStream\u0026lt;EnrichedRide\u0026gt; enrichedNYCRides = rides\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    .flatMap(\u003cspan class=\"keyword\"\u003enew\u003c/span\u003e \u003cspan class=\"title class_\"\u003eNYCEnrichment\u003c/span\u003e());\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eenrichedNYCRides.print();\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e其中用到的 \u003ccode\u003eFlatMapFunction\u003c/code\u003e :\u003c/p\u003e\n\u003cfigure class=\"highlight java\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e8\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e9\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e10\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"keyword\"\u003epublic\u003c/span\u003e \u003cspan class=\"keyword\"\u003estatic\u003c/span\u003e \u003cspan class=\"keyword\"\u003eclass\u003c/span\u003e \u003cspan class=\"title class_\"\u003eNYCEnrichment\u003c/span\u003e \u003cspan class=\"keyword\"\u003eimplements\u003c/span\u003e \u003cspan class=\"title class_\"\u003eFlatMapFunction\u003c/span\u003e\u0026lt;TaxiRide, EnrichedRide\u0026gt; {\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"meta\"\u003e@Override\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"keyword\"\u003epublic\u003c/span\u003e \u003cspan class=\"keyword\"\u003evoid\u003c/span\u003e \u003cspan class=\"title function_\"\u003eflatMap\u003c/span\u003e\u003cspan class=\"params\"\u003e(TaxiRide taxiRide, Collector\u0026lt;EnrichedRide\u0026gt; out)\u003c/span\u003e \u003cspan class=\"keyword\"\u003ethrows\u003c/span\u003e Exception {\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        FilterFunction\u0026lt;TaxiRide\u0026gt; valid = \u003cspan class=\"keyword\"\u003enew\u003c/span\u003e \u003cspan class=\"title class_\"\u003eRideCleansing\u003c/span\u003e.NYCFilter();\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        \u003cspan class=\"keyword\"\u003eif\u003c/span\u003e (valid.filter(taxiRide)) {\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e            out.collect(\u003cspan class=\"keyword\"\u003enew\u003c/span\u003e \u003cspan class=\"title class_\"\u003eEnrichedRide\u003c/span\u003e(taxiRide));\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        }\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    }\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e}\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e使用接口中提供的 \u003ccode\u003eCollector\u003c/code\u003e ，\u003ccode\u003eflatmap()\u003c/code\u003e 可以输出你想要的任意数量的元素，也可以一个都不发。\u003c/p\u003e\n\u003ch2 id=\"Keyed-Streams\"\u003e\u003ca href=\"#Keyed-Streams\" class=\"headerlink\" title=\"Keyed Streams\"\u003e\u003c/a\u003eKeyed Streams\u003c/h2\u003e\u003ch3 id=\"keyBy\"\u003e\u003ca href=\"#keyBy\" class=\"headerlink\" title=\"keyBy()\"\u003e\u003c/a\u003e\u003ccode\u003ekeyBy()\u003c/code\u003e\u003c/h3\u003e\u003cp\u003e将一个流根据其中的一些属性来进行分区是十分有用的，这样我们可以使所有具有相同属性的事件分到相同的组里。例如，如果你想找到从每个网格单元出发的最远的出租车行程。按 SQL 查询的方式来考虑，这意味着要对 \u003ccode\u003estartCell\u003c/code\u003e 进行 GROUP BY 再排序，在 Flink 中这部分可以用 \u003ccode\u003ekeyBy(KeySelector)\u003c/code\u003e 实现。\u003c/p\u003e\n\u003cfigure class=\"highlight java\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003erides\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    .flatMap(\u003cspan class=\"keyword\"\u003enew\u003c/span\u003e \u003cspan class=\"title class_\"\u003eNYCEnrichment\u003c/span\u003e())\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    .keyBy(enrichedRide -\u0026gt; enrichedRide.startCell)\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e每个 \u003ccode\u003ekeyBy\u003c/code\u003e 会通过 shuffle 来为数据流进行重新分区。总体来说这个开销是很大的，它涉及网络通信、序列化和反序列化。\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"https://nightlies.apache.org/flink/flink-docs-release-1.14/fig/keyBy.png\" alt=\"keyBy and network shuffle\"/\u003e\u003c/p\u003e\n\u003ch3 id=\"通过计算得到键\"\u003e\u003ca href=\"#通过计算得到键\" class=\"headerlink\" title=\"通过计算得到键\"\u003e\u003c/a\u003e通过计算得到键\u003c/h3\u003e\u003cp\u003eKeySelector 不仅限于从事件中抽取键。你也可以按想要的方式计算得到键值，只要最终结果是确定的，并且实现了 \u003ccode\u003ehashCode()\u003c/code\u003e 和 \u003ccode\u003eequals()\u003c/code\u003e。这些限制条件不包括产生随机数或者返回 Arrays 或 Enums 的 KeySelector，但你可以用元组和 POJO 来组成键，只要他们的元素遵循上述条件。\u003c/p\u003e\n\u003cp\u003e键必须按确定的方式产生，因为它们会在需要的时候被重新计算，而不是一直被带在流记录中。\u003c/p\u003e\n\u003cp\u003e例如，比起创建一个新的带有 \u003ccode\u003estartCell\u003c/code\u003e 字段的 \u003ccode\u003eEnrichedRide\u003c/code\u003e 类，用这个字段作为 key：\u003c/p\u003e\n\u003cfigure class=\"highlight java\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003ekeyBy(enrichedRide -\u0026gt; enrichedRide.startCell)\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e我们更倾向于这样做：\u003c/p\u003e\n\u003cfigure class=\"highlight java\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003ekeyBy(ride -\u0026gt; GeoUtils.mapToGridCell(ride.startLon, ride.startLat))\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003ch3 id=\"Keyed-Stream-的聚合\"\u003e\u003ca href=\"#Keyed-Stream-的聚合\" class=\"headerlink\" title=\"Keyed Stream 的聚合\"\u003e\u003c/a\u003eKeyed Stream 的聚合\u003c/h3\u003e\u003cp\u003e以下代码为每个行程结束事件创建了一个新的包含 \u003ccode\u003estartCell\u003c/code\u003e 和时长（分钟）的元组流：\u003c/p\u003e\n\u003cfigure class=\"highlight java\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e8\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e9\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e10\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e11\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e12\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e13\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e14\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e15\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"keyword\"\u003eimport\u003c/span\u003e org.joda.time.Interval;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eDataStream\u0026lt;Tuple2\u0026lt;Integer, Minutes\u0026gt;\u0026gt; minutesByStartCell = enrichedNYCRides\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    .flatMap(\u003cspan class=\"keyword\"\u003enew\u003c/span\u003e \u003cspan class=\"title class_\"\u003eFlatMapFunction\u003c/span\u003e\u0026lt;EnrichedRide, Tuple2\u0026lt;Integer, Minutes\u0026gt;\u0026gt;() {\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        \u003cspan class=\"meta\"\u003e@Override\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        \u003cspan class=\"keyword\"\u003epublic\u003c/span\u003e \u003cspan class=\"keyword\"\u003evoid\u003c/span\u003e \u003cspan class=\"title function_\"\u003eflatMap\u003c/span\u003e\u003cspan class=\"params\"\u003e(EnrichedRide ride,\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"params\"\u003e                            Collector\u0026lt;Tuple2\u0026lt;Integer, Minutes\u0026gt;\u0026gt; out)\u003c/span\u003e \u003cspan class=\"keyword\"\u003ethrows\u003c/span\u003e Exception {\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e            \u003cspan class=\"keyword\"\u003eif\u003c/span\u003e (!ride.isStart) {\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e                \u003cspan class=\"type\"\u003eInterval\u003c/span\u003e \u003cspan class=\"variable\"\u003erideInterval\u003c/span\u003e \u003cspan class=\"operator\"\u003e=\u003c/span\u003e \u003cspan class=\"keyword\"\u003enew\u003c/span\u003e \u003cspan class=\"title class_\"\u003eInterval\u003c/span\u003e(ride.startTime, ride.endTime);\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e                \u003cspan class=\"type\"\u003eMinutes\u003c/span\u003e \u003cspan class=\"variable\"\u003eduration\u003c/span\u003e \u003cspan class=\"operator\"\u003e=\u003c/span\u003e rideInterval.toDuration().toStandardMinutes();\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e                out.collect(\u003cspan class=\"keyword\"\u003enew\u003c/span\u003e \u003cspan class=\"title class_\"\u003eTuple2\u003c/span\u003e\u0026lt;\u0026gt;(ride.startCell, duration));\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e            }\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        }\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    });\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e现在就可以产生一个流，对每个 \u003ccode\u003estartCell\u003c/code\u003e 仅包含那些最长行程的数据。\u003c/p\u003e\n\u003cp\u003e有很多种方法表示使用哪个字段作为键。前面使用 \u003ccode\u003eEnrichedRide\u003c/code\u003e POJO 的例子，用字段名来指定键。而这个使用 \u003ccode\u003eTuple2\u003c/code\u003e 对象的例子中，用字段在元组中的序号（从 0 开始）来指定键。\u003c/p\u003e\n\u003cfigure class=\"highlight java\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003eminutesByStartCell\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  .keyBy(value -\u0026gt; value.f0) \u003cspan class=\"comment\"\u003e// .keyBy(value -\u0026gt; value.startCell)\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  .maxBy(\u003cspan class=\"number\"\u003e1\u003c/span\u003e) \u003cspan class=\"comment\"\u003e// duration\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  .print();\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e现在每次行程时长达到新的最大值，都会输出一条新记录，例如下面这个对应 50797 网格单元的数据：\u003c/p\u003e\n\u003cfigure class=\"highlight erlang-repl\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e8\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e9\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e10\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e11\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e12\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e13\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e...\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta prompt_\"\u003e4\u0026gt; \u003c/span\u003e(\u003cspan class=\"number\"\u003e64549\u003c/span\u003e,\u003cspan class=\"number\"\u003e5\u003c/span\u003eM)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta prompt_\"\u003e4\u0026gt; \u003c/span\u003e(\u003cspan class=\"number\"\u003e46298\u003c/span\u003e,\u003cspan class=\"number\"\u003e18\u003c/span\u003eM)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta prompt_\"\u003e1\u0026gt; \u003c/span\u003e(\u003cspan class=\"number\"\u003e51549\u003c/span\u003e,\u003cspan class=\"number\"\u003e14\u003c/span\u003eM)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta prompt_\"\u003e1\u0026gt; \u003c/span\u003e(\u003cspan class=\"number\"\u003e53043\u003c/span\u003e,\u003cspan class=\"number\"\u003e13\u003c/span\u003eM)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta prompt_\"\u003e1\u0026gt; \u003c/span\u003e(\u003cspan class=\"number\"\u003e56031\u003c/span\u003e,\u003cspan class=\"number\"\u003e22\u003c/span\u003eM)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta prompt_\"\u003e1\u0026gt; \u003c/span\u003e(\u003cspan class=\"number\"\u003e50797\u003c/span\u003e,\u003cspan class=\"number\"\u003e6\u003c/span\u003eM)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e...\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta prompt_\"\u003e1\u0026gt; \u003c/span\u003e(\u003cspan class=\"number\"\u003e50797\u003c/span\u003e,\u003cspan class=\"number\"\u003e8\u003c/span\u003eM)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e...\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta prompt_\"\u003e1\u0026gt; \u003c/span\u003e(\u003cspan class=\"number\"\u003e50797\u003c/span\u003e,\u003cspan class=\"number\"\u003e11\u003c/span\u003eM)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e...\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta prompt_\"\u003e1\u0026gt; \u003c/span\u003e(\u003cspan class=\"number\"\u003e50797\u003c/span\u003e,\u003cspan class=\"number\"\u003e12\u003c/span\u003eM)\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003ch3 id=\"（隐式的）状态\"\u003e\u003ca href=\"#（隐式的）状态\" class=\"headerlink\" title=\"（隐式的）状态\"\u003e\u003c/a\u003e（隐式的）状态\u003c/h3\u003e\u003cp\u003e这是培训中第一个涉及到有状态流的例子。尽管状态的处理是透明的，Flink 必须跟踪每个不同的键的最大时长。\u003c/p\u003e\n\u003cp\u003e只要应用中有状态，你就应该考虑状态的大小。如果键值的数量是无限的，那 Flink 的状态需要的空间也同样是无限的。\u003c/p\u003e\n\u003cp\u003e在流处理场景中，考虑有限窗口的聚合往往比整个流聚合更有意义。\u003c/p\u003e\n\u003ch3 id=\"reduce-和其他聚合算子\"\u003e\u003ca href=\"#reduce-和其他聚合算子\" class=\"headerlink\" title=\"reduce() 和其他聚合算子\"\u003e\u003c/a\u003e\u003ccode\u003ereduce()\u003c/code\u003e 和其他聚合算子\u003c/h3\u003e\u003cp\u003e上面用到的 \u003ccode\u003emaxBy()\u003c/code\u003e 只是 Flink 中 \u003ccode\u003eKeyedStream\u003c/code\u003e 上众多聚合函数中的一个。还有一个更通用的 \u003ccode\u003ereduce()\u003c/code\u003e 函数可以用来实现你的自定义聚合。\u003c/p\u003e\n\u003ch2 id=\"有状态的转换\"\u003e\u003ca href=\"#有状态的转换\" class=\"headerlink\" title=\"有状态的转换\"\u003e\u003c/a\u003e有状态的转换\u003c/h2\u003e\u003ch3 id=\"Flink-为什么要参与状态管理？\"\u003e\u003ca href=\"#Flink-为什么要参与状态管理？\" class=\"headerlink\" title=\"Flink 为什么要参与状态管理？\"\u003e\u003c/a\u003eFlink 为什么要参与状态管理？\u003c/h3\u003e\u003cp\u003e在 Flink 不参与管理状态的情况下，你的应用也可以使用状态，但 Flink 为其管理状态提供了一些引人注目的特性：\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003cstrong\u003e本地性\u003c/strong\u003e: Flink 状态是存储在使用它的机器本地的，并且可以以内存访问速度来获取\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003e持久性\u003c/strong\u003e: Flink 状态是容错的，例如，它可以自动按一定的时间间隔产生 checkpoint，并且在任务失败后进行恢复\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003e纵向可扩展性\u003c/strong\u003e: Flink 状态可以存储在集成的 RocksDB 实例中，这种方式下可以通过增加本地磁盘来扩展空间\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003e横向可扩展性\u003c/strong\u003e: Flink 状态可以随着集群的扩缩容重新分布\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003e可查询性\u003c/strong\u003e: Flink 状态可以通过使用 \u003ca target=\"_blank\" rel=\"noopener\" href=\"https://nightlies.apache.org/flink/flink-docs-release-1.14/zh/docs/dev/datastream/fault-tolerance/queryable_state/\"\u003e状态查询 API\u003c/a\u003e 从外部进行查询。\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e在本节中你将学习如何使用 Flink 的 API 来管理 keyed state。\u003c/p\u003e\n\u003ch3 id=\"Rich-Functions\"\u003e\u003ca href=\"#Rich-Functions\" class=\"headerlink\" title=\"Rich Functions\"\u003e\u003c/a\u003eRich Functions\u003c/h3\u003e\u003cp\u003e至此，你已经看到了 Flink 的几种函数接口，包括 \u003ccode\u003eFilterFunction\u003c/code\u003e， \u003ccode\u003eMapFunction\u003c/code\u003e，和 \u003ccode\u003eFlatMapFunction\u003c/code\u003e。这些都是单一抽象方法模式。\u003c/p\u003e\n\u003cp\u003e对其中的每一个接口，Flink 同样提供了一个所谓 “rich” 的变体，如 \u003ccode\u003eRichFlatMapFunction\u003c/code\u003e，其中增加了以下方法，包括：\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003eopen(Configuration c)\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eclose()\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003egetRuntimeContext()\u003c/code\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e\u003ccode\u003eopen()\u003c/code\u003e 仅在算子初始化时调用一次。可以用来加载一些静态数据，或者建立外部服务的链接等。\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003egetRuntimeContext()\u003c/code\u003e 为整套潜在有趣的东西提供了一个访问途径，最明显的，它是你创建和访问 Flink 状态的途径。\u003c/p\u003e\n\u003ch3 id=\"一个使用-Keyed-State-的例子\"\u003e\u003ca href=\"#一个使用-Keyed-State-的例子\" class=\"headerlink\" title=\"一个使用 Keyed State 的例子\"\u003e\u003c/a\u003e一个使用 Keyed State 的例子\u003c/h3\u003e\u003cp\u003e在这个例子里，想象你有一个要去重的事件数据流，对每个键只保留第一个事件。下面是完成这个功能的应用，使用一个名为 \u003ccode\u003eDeduplicator\u003c/code\u003e 的 \u003ccode\u003eRichFlatMapFunction\u003c/code\u003e ：\u003c/p\u003e\n\u003cfigure class=\"highlight java\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e8\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e9\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e10\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e11\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e12\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e13\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e14\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e15\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e16\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"keyword\"\u003eprivate\u003c/span\u003e \u003cspan class=\"keyword\"\u003estatic\u003c/span\u003e \u003cspan class=\"keyword\"\u003eclass\u003c/span\u003e \u003cspan class=\"title class_\"\u003eEvent\u003c/span\u003e {\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"keyword\"\u003epublic\u003c/span\u003e \u003cspan class=\"keyword\"\u003efinal\u003c/span\u003e String key;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"keyword\"\u003epublic\u003c/span\u003e \u003cspan class=\"keyword\"\u003efinal\u003c/span\u003e \u003cspan class=\"type\"\u003elong\u003c/span\u003e timestamp;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    ...\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e}\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"keyword\"\u003epublic\u003c/span\u003e \u003cspan class=\"keyword\"\u003estatic\u003c/span\u003e \u003cspan class=\"keyword\"\u003evoid\u003c/span\u003e \u003cspan class=\"title function_\"\u003emain\u003c/span\u003e\u003cspan class=\"params\"\u003e(String[] args)\u003c/span\u003e \u003cspan class=\"keyword\"\u003ethrows\u003c/span\u003e Exception {\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"type\"\u003eStreamExecutionEnvironment\u003c/span\u003e \u003cspan class=\"variable\"\u003eenv\u003c/span\u003e \u003cspan class=\"operator\"\u003e=\u003c/span\u003e StreamExecutionEnvironment.getExecutionEnvironment();\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    env.addSource(\u003cspan class=\"keyword\"\u003enew\u003c/span\u003e \u003cspan class=\"title class_\"\u003eEventSource\u003c/span\u003e())\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        .keyBy(e -\u0026gt; e.key)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        .flatMap(\u003cspan class=\"keyword\"\u003enew\u003c/span\u003e \u003cspan class=\"title class_\"\u003eDeduplicator\u003c/span\u003e())\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        .print();\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    env.execute();\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e}\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e为了实现这个功能，\u003ccode\u003eDeduplicator\u003c/code\u003e 需要记录每个键是否已经有了相应的记录。它将通过使用 Flink 的 \u003cem\u003ekeyed state\u003c/em\u003e 接口来做这件事。\u003c/p\u003e\n\u003cp\u003e当你使用像这样的 keyed stream 的时候，Flink 会为每个状态中管理的条目维护一个键值存储。\u003c/p\u003e\n\u003cp\u003eFlink 支持几种不同方式的 keyed state，这个例子使用的是最简单的一个，叫做 \u003ccode\u003eValueState\u003c/code\u003e。意思是对于 \u003cem\u003e每个键\u003c/em\u003e ，Flink 将存储一个单一的对象 —— 在这个例子中，存储的是一个 \u003ccode\u003eBoolean\u003c/code\u003e 类型的对象。\u003c/p\u003e\n\u003cp\u003e我们的 \u003ccode\u003eDeduplicator\u003c/code\u003e 类有两个方法：\u003ccode\u003eopen()\u003c/code\u003e 和 \u003ccode\u003eflatMap()\u003c/code\u003e。\u003ccode\u003eopen()\u003c/code\u003e 方法通过定义 \u003ccode\u003eValueStateDescriptor\u0026lt;Boolean\u0026gt;\u003c/code\u003e 建立了管理状态的使用。构造器的参数定义了这个状态的名字（“keyHasBeenSeen”），并且为如何序列化这些对象提供了信息（在这个例子中的 \u003ccode\u003eTypes.BOOLEAN\u003c/code\u003e）。\u003c/p\u003e\n\u003cfigure class=\"highlight java\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e8\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e9\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e10\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e11\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e12\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e13\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e14\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e15\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e16\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e17\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"keyword\"\u003epublic\u003c/span\u003e \u003cspan class=\"keyword\"\u003estatic\u003c/span\u003e \u003cspan class=\"keyword\"\u003eclass\u003c/span\u003e \u003cspan class=\"title class_\"\u003eDeduplicator\u003c/span\u003e \u003cspan class=\"keyword\"\u003eextends\u003c/span\u003e \u003cspan class=\"title class_\"\u003eRichFlatMapFunction\u003c/span\u003e\u0026lt;Event, Event\u0026gt; {\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    ValueState\u0026lt;Boolean\u0026gt; keyHasBeenSeen;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"meta\"\u003e@Override\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"keyword\"\u003epublic\u003c/span\u003e \u003cspan class=\"keyword\"\u003evoid\u003c/span\u003e \u003cspan class=\"title function_\"\u003eopen\u003c/span\u003e\u003cspan class=\"params\"\u003e(Configuration conf)\u003c/span\u003e {\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        ValueStateDescriptor\u0026lt;Boolean\u0026gt; desc = \u003cspan class=\"keyword\"\u003enew\u003c/span\u003e \u003cspan class=\"title class_\"\u003eValueStateDescriptor\u003c/span\u003e\u0026lt;\u0026gt;(\u003cspan class=\"string\"\u003e\u0026#34;keyHasBeenSeen\u0026#34;\u003c/span\u003e, Types.BOOLEAN);\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        keyHasBeenSeen = getRuntimeContext().getState(desc);\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    }\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"meta\"\u003e@Override\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"keyword\"\u003epublic\u003c/span\u003e \u003cspan class=\"keyword\"\u003evoid\u003c/span\u003e \u003cspan class=\"title function_\"\u003eflatMap\u003c/span\u003e\u003cspan class=\"params\"\u003e(Event event, Collector\u0026lt;Event\u0026gt; out)\u003c/span\u003e \u003cspan class=\"keyword\"\u003ethrows\u003c/span\u003e Exception {\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        \u003cspan class=\"keyword\"\u003eif\u003c/span\u003e (keyHasBeenSeen.value() == \u003cspan class=\"literal\"\u003enull\u003c/span\u003e) {\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e            out.collect(event);\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e            keyHasBeenSeen.update(\u003cspan class=\"literal\"\u003etrue\u003c/span\u003e);\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        }\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    }\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e}\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e当 flatMap 方法调用 \u003ccode\u003ekeyHasBeenSeen.value()\u003c/code\u003e 时，Flink 会在 \u003cem\u003e当前键的上下文\u003c/em\u003e 中检索状态值，只有当状态为 \u003ccode\u003enull\u003c/code\u003e 时，才会输出当前事件。这种情况下，它同时也将更新 \u003ccode\u003ekeyHasBeenSeen\u003c/code\u003e 为 \u003ccode\u003etrue\u003c/code\u003e。\u003c/p\u003e\n\u003cp\u003e这种访问和更新按键分区的状态的机制也许看上去很神奇，因为在 \u003ccode\u003eDeduplicator\u003c/code\u003e 的实现中，键不是明确可见的。当 Flink 运行时调用 \u003ccode\u003eRichFlatMapFunction\u003c/code\u003e 的 \u003ccode\u003eopen\u003c/code\u003e 方法时， 是没有事件的，所以这个时候上下文中不含有任何键。但当它调用 \u003ccode\u003eflatMap\u003c/code\u003e 方法，被处理的事件的键在运行时中就是可用的了，并且被用来确定操作哪个 Flink 状态后端的入口。\u003c/p\u003e\n\u003cp\u003e部署在分布式集群时，将会有很多 \u003ccode\u003eDeduplicator\u003c/code\u003e 的实例，每一个实例将负责整个键空间的互斥子集中的一个。所以，当你看到一个单独的 \u003ccode\u003eValueState\u003c/code\u003e，比如\u003c/p\u003e\n\u003cfigure class=\"highlight java\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003eValueState\u0026lt;Boolean\u0026gt; keyHasBeenSeen;\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e要理解这个代表的不仅仅是一个单独的布尔类型变量，而是一个分布式的共享键值存储。\u003c/p\u003e\n\u003ch3 id=\"清理状态\"\u003e\u003ca href=\"#清理状态\" class=\"headerlink\" title=\"清理状态\"\u003e\u003c/a\u003e清理状态\u003c/h3\u003e\u003cp\u003e上面例子有一个潜在的问题：当键空间是无界的时候将发生什么？Flink 会对每个使用过的键都存储一个 \u003ccode\u003eBoolean\u003c/code\u003e 类型的实例。如果是键是有限的集合还好，但在键无限增长的应用中，清除再也不会使用的状态是很必要的。这通过在状态对象上调用 \u003ccode\u003eclear()\u003c/code\u003e 来实现，如下：\u003c/p\u003e\n\u003cfigure class=\"highlight java\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003ekeyHasBeenSeen.clear()\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e对一个给定的键值，你也许想在它一段时间不使用后来做这件事。当学习 \u003ccode\u003eProcessFunction\u003c/code\u003e 的相关章节时，你将看到在事件驱动的应用中怎么用定时器来做这个。\u003c/p\u003e\n\u003cp\u003e也可以选择使用 \u003ca target=\"_blank\" rel=\"noopener\" href=\"https://nightlies.apache.org/flink/flink-docs-release-1.14/zh/docs/dev/datastream/fault-tolerance/state/#state-time-to-live-ttl\"\u003e状态的过期时间（TTL）\u003c/a\u003e，为状态描述符配置你想要旧状态自动被清除的时间。\u003c/p\u003e\n\u003ch3 id=\"Non-keyed-State\"\u003e\u003ca href=\"#Non-keyed-State\" class=\"headerlink\" title=\"Non-keyed State\"\u003e\u003c/a\u003eNon-keyed State\u003c/h3\u003e\u003cp\u003e在没有键的上下文中我们也可以使用 Flink 管理的状态。这也被称作 \u003ca target=\"_blank\" rel=\"noopener\" href=\"https://nightlies.apache.org/flink/flink-docs-release-1.14/zh/docs/dev/datastream/fault-tolerance/state/#operator-state\"\u003e算子的状态\u003c/a\u003e。它包含的接口是很不一样的，由于对用户定义的函数来说使用 non-keyed state 是不太常见的，所以这里就不多介绍了。这个特性最常用于 source 和 sink 的实现。\u003c/p\u003e\n\u003ch2 id=\"Connected-Streams\"\u003e\u003ca href=\"#Connected-Streams\" class=\"headerlink\" title=\"Connected Streams\"\u003e\u003c/a\u003eConnected Streams\u003c/h2\u003e\u003cp\u003e相比于下面这种预先定义的转换：\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"https://nightlies.apache.org/flink/flink-docs-release-1.14/fig/transformation.svg\" alt=\"simple transformation\"/\u003e\u003c/p\u003e\n\u003cp\u003e有时你想要更灵活地调整转换的某些功能，比如数据流的阈值、规则或者其他参数。Flink 支持这种需求的模式称为 \u003cem\u003econnected streams\u003c/em\u003e ，一个单独的算子有两个输入流。\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"https://nightlies.apache.org/flink/flink-docs-release-1.14/fig/connected-streams.svg\" alt=\"connected streams\"/\u003e\u003c/p\u003e\n\u003cp\u003econnected stream 也可以被用来实现流的关联。\u003c/p\u003e\n\u003ch3 id=\"示例\"\u003e\u003ca href=\"#示例\" class=\"headerlink\" title=\"示例\"\u003e\u003c/a\u003e示例\u003c/h3\u003e\u003cp\u003e在这个例子中，一个控制流是用来指定哪些词需要从 \u003ccode\u003estreamOfWords\u003c/code\u003e 里过滤掉的。 一个称为 \u003ccode\u003eControlFunction\u003c/code\u003e 的 \u003ccode\u003eRichCoFlatMapFunction\u003c/code\u003e 作用于连接的流来实现这个功能。\u003c/p\u003e\n\u003cfigure class=\"highlight java\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e8\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e9\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e10\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e11\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e12\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e13\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e14\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e15\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e16\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e17\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e18\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"keyword\"\u003epublic\u003c/span\u003e \u003cspan class=\"keyword\"\u003estatic\u003c/span\u003e \u003cspan class=\"keyword\"\u003evoid\u003c/span\u003e \u003cspan class=\"title function_\"\u003emain\u003c/span\u003e\u003cspan class=\"params\"\u003e(String[] args)\u003c/span\u003e \u003cspan class=\"keyword\"\u003ethrows\u003c/span\u003e Exception {\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"type\"\u003eStreamExecutionEnvironment\u003c/span\u003e \u003cspan class=\"variable\"\u003eenv\u003c/span\u003e \u003cspan class=\"operator\"\u003e=\u003c/span\u003e StreamExecutionEnvironment.getExecutionEnvironment();\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    DataStream\u0026lt;String\u0026gt; control = env\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        .fromElements(\u003cspan class=\"string\"\u003e\u0026#34;DROP\u0026#34;\u003c/span\u003e, \u003cspan class=\"string\"\u003e\u0026#34;IGNORE\u0026#34;\u003c/span\u003e)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        .keyBy(x -\u0026gt; x);\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    DataStream\u0026lt;String\u0026gt; streamOfWords = env\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        .fromElements(\u003cspan class=\"string\"\u003e\u0026#34;Apache\u0026#34;\u003c/span\u003e, \u003cspan class=\"string\"\u003e\u0026#34;DROP\u0026#34;\u003c/span\u003e, \u003cspan class=\"string\"\u003e\u0026#34;Flink\u0026#34;\u003c/span\u003e, \u003cspan class=\"string\"\u003e\u0026#34;IGNORE\u0026#34;\u003c/span\u003e)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        .keyBy(x -\u0026gt; x);\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    control\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        .connect(streamOfWords)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        .flatMap(\u003cspan class=\"keyword\"\u003enew\u003c/span\u003e \u003cspan class=\"title class_\"\u003eControlFunction\u003c/span\u003e())\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        .print();\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    env.execute();\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e}\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e这里注意两个流只有键一致的时候才能连接。 \u003ccode\u003ekeyBy\u003c/code\u003e 的作用是将流数据分区，当 keyed stream 被连接时，他们必须按相同的方式分区。这样保证了两个流中所有键相同的事件发到同一个实例上。这样也使按键关联两个流成为可能。\u003c/p\u003e\n\u003cp\u003e在这个例子中，两个流都是 \u003ccode\u003eDataStream\u0026lt;String\u0026gt;\u003c/code\u003e 类型的，并且都将字符串作为键。正如你将在下面看到的，\u003ccode\u003eRichCoFlatMapFunction\u003c/code\u003e 在状态中存了一个布尔类型的变量，这个变量被两个流共享。\u003c/p\u003e\n\u003cfigure class=\"highlight java\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e8\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e9\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e10\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e11\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e12\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e13\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e14\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e15\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e16\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e17\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e18\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e19\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e20\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e21\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"keyword\"\u003epublic\u003c/span\u003e \u003cspan class=\"keyword\"\u003estatic\u003c/span\u003e \u003cspan class=\"keyword\"\u003eclass\u003c/span\u003e \u003cspan class=\"title class_\"\u003eControlFunction\u003c/span\u003e \u003cspan class=\"keyword\"\u003eextends\u003c/span\u003e \u003cspan class=\"title class_\"\u003eRichCoFlatMapFunction\u003c/span\u003e\u0026lt;String, String, String\u0026gt; {\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"keyword\"\u003eprivate\u003c/span\u003e ValueState\u0026lt;Boolean\u0026gt; blocked;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"meta\"\u003e@Override\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"keyword\"\u003epublic\u003c/span\u003e \u003cspan class=\"keyword\"\u003evoid\u003c/span\u003e \u003cspan class=\"title function_\"\u003eopen\u003c/span\u003e\u003cspan class=\"params\"\u003e(Configuration config)\u003c/span\u003e {\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        blocked = getRuntimeContext()\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e            .getState(\u003cspan class=\"keyword\"\u003enew\u003c/span\u003e \u003cspan class=\"title class_\"\u003eValueStateDescriptor\u003c/span\u003e\u0026lt;\u0026gt;(\u003cspan class=\"string\"\u003e\u0026#34;blocked\u0026#34;\u003c/span\u003e, Boolean.class));\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    }\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"meta\"\u003e@Override\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"keyword\"\u003epublic\u003c/span\u003e \u003cspan class=\"keyword\"\u003evoid\u003c/span\u003e \u003cspan class=\"title function_\"\u003eflatMap1\u003c/span\u003e\u003cspan class=\"params\"\u003e(String control_value, Collector\u0026lt;String\u0026gt; out)\u003c/span\u003e \u003cspan class=\"keyword\"\u003ethrows\u003c/span\u003e Exception {\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        blocked.update(Boolean.TRUE);\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    }\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"meta\"\u003e@Override\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"keyword\"\u003epublic\u003c/span\u003e \u003cspan class=\"keyword\"\u003evoid\u003c/span\u003e \u003cspan class=\"title function_\"\u003eflatMap2\u003c/span\u003e\u003cspan class=\"params\"\u003e(String data_value, Collector\u0026lt;String\u0026gt; out)\u003c/span\u003e \u003cspan class=\"keyword\"\u003ethrows\u003c/span\u003e Exception {\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        \u003cspan class=\"keyword\"\u003eif\u003c/span\u003e (blocked.value() == \u003cspan class=\"literal\"\u003enull\u003c/span\u003e) {\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e            out.collect(data_value);\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        }\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    }\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e}\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e\u003ccode\u003eRichCoFlatMapFunction\u003c/code\u003e 是一种可以被用于一对连接流的 \u003ccode\u003eFlatMapFunction\u003c/code\u003e，并且它可以调用 rich function 的接口。这意味着它可以是有状态的。\u003c/p\u003e\n\u003cp\u003e布尔变量 \u003ccode\u003eblocked\u003c/code\u003e 被用于记录在数据流 \u003ccode\u003econtrol\u003c/code\u003e 中出现过的键（在这个例子中是单词），并且这些单词从 \u003ccode\u003estreamOfWords\u003c/code\u003e 过滤掉。这是 \u003cem\u003ekeyed\u003c/em\u003e state，并且它是被两个流共享的，这也是为什么两个流必须有相同的键值空间。\u003c/p\u003e\n\u003cp\u003e在 Flink 运行时中，\u003ccode\u003eflatMap1\u003c/code\u003e 和 \u003ccode\u003eflatMap2\u003c/code\u003e 在连接流有新元素到来时被调用 —— 在我们的例子中，\u003ccode\u003econtrol\u003c/code\u003e 流中的元素会进入 \u003ccode\u003eflatMap1\u003c/code\u003e，\u003ccode\u003estreamOfWords\u003c/code\u003e 中的元素会进入 \u003ccode\u003eflatMap2\u003c/code\u003e。这是由两个流连接的顺序决定的，本例中为 \u003ccode\u003econtrol.connect(streamOfWords)\u003c/code\u003e。\u003c/p\u003e\n\u003cp\u003e认识到你没法控制 \u003ccode\u003eflatMap1\u003c/code\u003e 和 \u003ccode\u003eflatMap2\u003c/code\u003e 的调用顺序是很重要的。这两个输入流是相互竞争的关系，Flink 运行时将根据从一个流或另一个流中消费的事件做它要做的。对于需要保证时间和/或顺序的场景，你会发现在 Flink 的管理状态中缓存事件一直到它们能够被处理是必须的。（注意：如果你真的感到绝望，可以使用自定义的算子实现 \u003ccode\u003eInputSelectable\u003c/code\u003e 接口，在两输入算子消费它的输入流时增加一些顺序上的限制。）\u003c/p\u003e\n\u003ch2 id=\"参考资料\"\u003e\u003ca href=\"#参考资料\" class=\"headerlink\" title=\"参考资料\"\u003e\u003c/a\u003e参考资料\u003c/h2\u003e\u003cul\u003e\n\u003cli\u003e\u003ca target=\"_blank\" rel=\"noopener\" href=\"https://nightlies.apache.org/flink/flink-docs-release-1.14/zh/\"\u003eFlink 官方文档\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n    \u003c/div\u003e",
  "Date": "2022-02-17T14:28:55Z",
  "Author": "钝悟 ◾ Dunwu"
}