{
  "Source": "dunwu",
  "Title": "Java 容器之 Queue",
  "Link": "https://dunwu.github.io/blog/pages/ffa963/",
  "Content": "\u003cdiv class=\"post-body\" itemprop=\"articleBody\"\u003e\u003ch1 id=\"Java-容器之-Queue\"\u003e\u003ca href=\"#Java-容器之-Queue\" class=\"headerlink\" title=\"Java 容器之 Queue\"\u003e\u003c/a\u003eJava 容器之 Queue\u003c/h1\u003e\u003ch2 id=\"Queue-简介\"\u003e\u003ca href=\"#Queue-简介\" class=\"headerlink\" title=\"Queue 简介\"\u003e\u003c/a\u003eQueue 简介\u003c/h2\u003e\u003cdiv align=\"center\"\u003e\n\u003cimg src=\"https://raw.githubusercontent.com/dunwu/images/master/cs/java/javacore/container/Queue-diagrams.png\"/\u003e\n\u003c/div\u003e\n\n\u003ch3 id=\"Queue-接口\"\u003e\u003ca href=\"#Queue-接口\" class=\"headerlink\" title=\"Queue 接口\"\u003e\u003c/a\u003eQueue 接口\u003c/h3\u003e\u003cp\u003e\u003ccode\u003eQueue\u003c/code\u003e 接口定义如下：\u003c/p\u003e\n\u003cfigure class=\"highlight java\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"keyword\"\u003epublic\u003c/span\u003e \u003cspan class=\"keyword\"\u003einterface\u003c/span\u003e \u003cspan class=\"title class_\"\u003eQueue\u003c/span\u003e\u0026lt;E\u0026gt; \u003cspan class=\"keyword\"\u003eextends\u003c/span\u003e \u003cspan class=\"title class_\"\u003eCollection\u003c/span\u003e\u0026lt;E\u0026gt; {}\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003ch3 id=\"AbstractQueue-抽象类\"\u003e\u003ca href=\"#AbstractQueue-抽象类\" class=\"headerlink\" title=\"AbstractQueue 抽象类\"\u003e\u003c/a\u003eAbstractQueue 抽象类\u003c/h3\u003e\u003cp\u003e\u003cstrong\u003e\u003ccode\u003eAbstractQueue\u003c/code\u003e 类提供 \u003ccode\u003eQueue\u003c/code\u003e 接口的核心实现\u003c/strong\u003e，以最大限度地减少实现 \u003ccode\u003eQueue\u003c/code\u003e 接口所需的工作。\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003eAbstractQueue\u003c/code\u003e 抽象类定义如下：\u003c/p\u003e\n\u003cfigure class=\"highlight java\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"keyword\"\u003epublic\u003c/span\u003e \u003cspan class=\"keyword\"\u003eabstract\u003c/span\u003e \u003cspan class=\"keyword\"\u003eclass\u003c/span\u003e \u003cspan class=\"title class_\"\u003eAbstractQueue\u003c/span\u003e\u0026lt;E\u0026gt;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"keyword\"\u003eextends\u003c/span\u003e \u003cspan class=\"title class_\"\u003eAbstractCollection\u003c/span\u003e\u0026lt;E\u0026gt;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"keyword\"\u003eimplements\u003c/span\u003e \u003cspan class=\"title class_\"\u003eQueue\u003c/span\u003e\u0026lt;E\u0026gt; {}\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003ch3 id=\"Deque-接口\"\u003e\u003ca href=\"#Deque-接口\" class=\"headerlink\" title=\"Deque 接口\"\u003e\u003c/a\u003eDeque 接口\u003c/h3\u003e\u003cp\u003eDeque 接口是 double ended queue 的缩写，即\u003cstrong\u003e双端队列\u003c/strong\u003e。Deque 继承 Queue 接口，并扩展支持\u003cstrong\u003e在队列的两端插入和删除元素\u003c/strong\u003e。\u003c/p\u003e\n\u003cp\u003e所以提供了特定的方法，如:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e尾部插入时需要的 \u003ca target=\"_blank\" rel=\"noopener\" href=\"https://docs.oracle.com/javase/9/docs/api/java/util/Deque.html#addLast-E-\"\u003eaddLast(e)\u003c/a\u003e、\u003ca target=\"_blank\" rel=\"noopener\" href=\"https://docs.oracle.com/javase/9/docs/api/java/util/Deque.html#offerLast-E-\"\u003eofferLast(e)\u003c/a\u003e。\u003c/li\u003e\n\u003cli\u003e尾部删除所需要的 \u003ca target=\"_blank\" rel=\"noopener\" href=\"https://docs.oracle.com/javase/9/docs/api/java/util/Deque.html#removeLast--\"\u003eremoveLast()\u003c/a\u003e、\u003ca target=\"_blank\" rel=\"noopener\" href=\"https://docs.oracle.com/javase/9/docs/api/java/util/Deque.html#pollLast--\"\u003epollLast()\u003c/a\u003e。\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e大多数的实现对元素的数量没有限制，但这个接口既支持有容量限制的 deque，也支持没有固定大小限制的。\u003c/p\u003e\n\u003ch2 id=\"ArrayDeque\"\u003e\u003ca href=\"#ArrayDeque\" class=\"headerlink\" title=\"ArrayDeque\"\u003e\u003c/a\u003eArrayDeque\u003c/h2\u003e\u003cp\u003e\u003ccode\u003eArrayDeque\u003c/code\u003e 是 \u003ccode\u003eDeque\u003c/code\u003e 的顺序表实现。\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003eArrayDeque\u003c/code\u003e 用一个动态数组实现了栈和队列所需的所有操作。\u003c/p\u003e\n\u003ch2 id=\"LinkedList\"\u003e\u003ca href=\"#LinkedList\" class=\"headerlink\" title=\"LinkedList\"\u003e\u003c/a\u003eLinkedList\u003c/h2\u003e\u003cp\u003e\u003ccode\u003eLinkedList\u003c/code\u003e 是 \u003ccode\u003eDeque\u003c/code\u003e 的链表实现。\u003c/p\u003e\n\u003cp\u003e示例：\u003c/p\u003e\n\u003cfigure class=\"highlight java\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e8\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e9\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e10\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e11\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e12\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e13\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e14\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e15\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e16\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e17\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e18\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e19\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e20\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e21\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e22\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e23\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e24\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e25\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e26\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e27\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e28\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e29\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e30\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"keyword\"\u003epublic\u003c/span\u003e \u003cspan class=\"keyword\"\u003eclass\u003c/span\u003e \u003cspan class=\"title class_\"\u003eLinkedListQueueDemo\u003c/span\u003e {\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"keyword\"\u003epublic\u003c/span\u003e \u003cspan class=\"keyword\"\u003estatic\u003c/span\u003e \u003cspan class=\"keyword\"\u003evoid\u003c/span\u003e \u003cspan class=\"title function_\"\u003emain\u003c/span\u003e\u003cspan class=\"params\"\u003e(String[] args)\u003c/span\u003e {\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        \u003cspan class=\"comment\"\u003e//add()和remove()方法在失败的时候会抛出异常(不推荐)\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        Queue\u0026lt;String\u0026gt; queue = \u003cspan class=\"keyword\"\u003enew\u003c/span\u003e \u003cspan class=\"title class_\"\u003eLinkedList\u003c/span\u003e\u0026lt;\u0026gt;();\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        queue.offer(\u003cspan class=\"string\"\u003e\u0026#34;a\u0026#34;\u003c/span\u003e); \u003cspan class=\"comment\"\u003e// 入队\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        queue.offer(\u003cspan class=\"string\"\u003e\u0026#34;b\u0026#34;\u003c/span\u003e); \u003cspan class=\"comment\"\u003e// 入队\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        queue.offer(\u003cspan class=\"string\"\u003e\u0026#34;c\u0026#34;\u003c/span\u003e); \u003cspan class=\"comment\"\u003e// 入队\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        \u003cspan class=\"keyword\"\u003efor\u003c/span\u003e (String q : queue) {\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e            System.out.println(q);\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        }\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        System.out.println(\u003cspan class=\"string\"\u003e\u0026#34;===\u0026#34;\u003c/span\u003e);\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        System.out.println(\u003cspan class=\"string\"\u003e\u0026#34;poll=\u0026#34;\u003c/span\u003e + queue.poll()); \u003cspan class=\"comment\"\u003e// 出队\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        \u003cspan class=\"keyword\"\u003efor\u003c/span\u003e (String q : queue) {\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e            System.out.println(q);\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        }\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        System.out.println(\u003cspan class=\"string\"\u003e\u0026#34;===\u0026#34;\u003c/span\u003e);\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        System.out.println(\u003cspan class=\"string\"\u003e\u0026#34;element=\u0026#34;\u003c/span\u003e + queue.element()); \u003cspan class=\"comment\"\u003e//返回第一个元素\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        \u003cspan class=\"keyword\"\u003efor\u003c/span\u003e (String q : queue) {\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e            System.out.println(q);\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        }\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        System.out.println(\u003cspan class=\"string\"\u003e\u0026#34;===\u0026#34;\u003c/span\u003e);\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        System.out.println(\u003cspan class=\"string\"\u003e\u0026#34;peek=\u0026#34;\u003c/span\u003e + queue.peek()); \u003cspan class=\"comment\"\u003e//返回第一个元素\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        \u003cspan class=\"keyword\"\u003efor\u003c/span\u003e (String q : queue) {\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e            System.out.println(q);\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        }\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    }\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e}\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003ch2 id=\"PriorityQueue\"\u003e\u003ca href=\"#PriorityQueue\" class=\"headerlink\" title=\"PriorityQueue\"\u003e\u003c/a\u003ePriorityQueue\u003c/h2\u003e\u003cp\u003e\u003ccode\u003ePriorityQueue\u003c/code\u003e 类定义如下：\u003c/p\u003e\n\u003cfigure class=\"highlight java\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"keyword\"\u003epublic\u003c/span\u003e \u003cspan class=\"keyword\"\u003eclass\u003c/span\u003e \u003cspan class=\"title class_\"\u003ePriorityQueue\u003c/span\u003e\u0026lt;E\u0026gt; \u003cspan class=\"keyword\"\u003eextends\u003c/span\u003e \u003cspan class=\"title class_\"\u003eAbstractQueue\u003c/span\u003e\u0026lt;E\u0026gt;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"keyword\"\u003eimplements\u003c/span\u003e \u003cspan class=\"title class_\"\u003ejava\u003c/span\u003e.io.Serializable {}\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e\u003ccode\u003ePriorityQueue\u003c/code\u003e 要点：\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003ePriorityQueue\u003c/code\u003e 实现了 \u003ccode\u003eSerializable\u003c/code\u003e，支持序列化。\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003ePriorityQueue\u003c/code\u003e 类是无界优先级队列。\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003ePriorityQueue\u003c/code\u003e 中的元素根据自然顺序或 \u003ccode\u003eComparator\u003c/code\u003e 提供的顺序排序。\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003ePriorityQueue\u003c/code\u003e 不接受 null 值元素。\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003ePriorityQueue\u003c/code\u003e 不是线程安全的。\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"参考资料\"\u003e\u003ca href=\"#参考资料\" class=\"headerlink\" title=\"参考资料\"\u003e\u003c/a\u003e参考资料\u003c/h2\u003e\u003cul\u003e\n\u003cli\u003e\u003ca target=\"_blank\" rel=\"noopener\" href=\"http://www.importnew.com/28053.html\"\u003e解读 Java 并发队列 BlockingQueue\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n    \u003c/div\u003e",
  "Date": "2020-02-21T08:26:21Z",
  "Author": "钝悟 ◾ Dunwu"
}