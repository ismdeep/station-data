{
  "Source": "dunwu",
  "Title": "Java 网络编程",
  "Link": "https://dunwu.github.io/blog/pages/e4c818/",
  "Content": "\u003cdiv class=\"post-body\" itemprop=\"articleBody\"\u003e\u003ch1 id=\"Java-网络编程\"\u003e\u003ca href=\"#Java-网络编程\" class=\"headerlink\" title=\"Java 网络编程\"\u003e\u003c/a\u003eJava 网络编程\u003c/h1\u003e\u003cblockquote\u003e\n\u003cp\u003e\u003cstrong\u003e\u003cem\u003e关键词：\u003ccode\u003eSocket\u003c/code\u003e、\u003ccode\u003eServerSocket\u003c/code\u003e、\u003ccode\u003eDatagramPacket\u003c/code\u003e、\u003ccode\u003eDatagramSocket\u003c/code\u003e\u003c/em\u003e\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003e网络编程是指编写运行在多个设备（计算机）的程序，这些设备都通过网络连接起来。\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003ejava.net\u003c/code\u003e 包中提供了低层次的网络通信细节。你可以直接使用这些类和接口，来专注于解决问题，而不用关注通信细节。\u003c/p\u003e\n\u003cp\u003ejava.net 包中提供了两种常见的网络协议的支持：\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003cstrong\u003eTCP\u003c/strong\u003e - TCP 是传输控制协议的缩写，它保障了两个应用程序之间的可靠通信。通常用于互联网协议，被称 TCP/ IP。\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eUDP\u003c/strong\u003e - UDP 是用户数据报协议的缩写，一个无连接的协议。提供了应用程序之间要发送的数据的数据包。\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/blockquote\u003e\n\u003ch2 id=\"Socket-和-ServerSocket\"\u003e\u003ca href=\"#Socket-和-ServerSocket\" class=\"headerlink\" title=\"Socket 和 ServerSocket\"\u003e\u003c/a\u003eSocket 和 ServerSocket\u003c/h2\u003e\u003cp\u003e套接字（Socket）使用 TCP 提供了两台计算机之间的通信机制。 客户端程序创建一个套接字，并尝试连接服务器的套接字。\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eJava 通过 Socket 和 ServerSocket 实现对 TCP 的支持\u003c/strong\u003e。Java 中的 Socket 通信可以简单理解为：**\u003ccode\u003ejava.net.Socket\u003c/code\u003e 代表客户端，\u003ccode\u003ejava.net.ServerSocket\u003c/code\u003e 代表服务端**，二者可以建立连接，然后通信。\u003c/p\u003e\n\u003cp\u003e以下为 Socket 通信中建立建立的基本流程：\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e服务器实例化一个 \u003ccode\u003eServerSocket\u003c/code\u003e 对象，表示服务器绑定一个端口。\u003c/li\u003e\n\u003cli\u003e服务器调用 \u003ccode\u003eServerSocket\u003c/code\u003e 的 \u003ccode\u003eaccept()\u003c/code\u003e 方法，该方法将一直等待，直到客户端连接到服务器的绑定端口（即监听端口）。\u003c/li\u003e\n\u003cli\u003e服务器监听端口时，客户端实例化一个 \u003ccode\u003eSocket\u003c/code\u003e 对象，指定服务器名称和端口号来请求连接。\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eSocket\u003c/code\u003e 类的构造函数试图将客户端连接到指定的服务器和端口号。如果通信被建立，则在客户端创建一个 Socket 对象能够与服务器进行通信。\u003c/li\u003e\n\u003cli\u003e在服务器端，\u003ccode\u003eaccept()\u003c/code\u003e 方法返回服务器上一个新的 \u003ccode\u003eSocket\u003c/code\u003e 引用，该引用连接到客户端的 \u003ccode\u003eSocket\u003c/code\u003e 。\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e连接建立后，可以通过使用 IO 流进行通信。每一个 \u003ccode\u003eSocket\u003c/code\u003e 都有一个输出流和一个输入流。客户端的输出流连接到服务器端的输入流，而客户端的输入流连接到服务器端的输出流。\u003c/p\u003e\n\u003cp\u003eTCP 是一个双向的通信协议，因此数据可以通过两个数据流在同一时间发送，以下是一些类提供的一套完整的有用的方法来实现 sockets。\u003c/p\u003e\n\u003ch3 id=\"ServerSocket\"\u003e\u003ca href=\"#ServerSocket\" class=\"headerlink\" title=\"ServerSocket\"\u003e\u003c/a\u003eServerSocket\u003c/h3\u003e\u003cp\u003e服务器程序通过使用 \u003ccode\u003ejava.net.ServerSocket\u003c/code\u003e 类以获取一个端口，并且监听客户端请求连接此端口的请求。\u003c/p\u003e\n\u003ch4 id=\"ServerSocket-构造方法\"\u003e\u003ca href=\"#ServerSocket-构造方法\" class=\"headerlink\" title=\"ServerSocket 构造方法\"\u003e\u003c/a\u003eServerSocket 构造方法\u003c/h4\u003e\u003cp\u003e\u003ccode\u003eServerSocket\u003c/code\u003e 有多个构造方法：\u003c/p\u003e\n\u003ctable\u003e\n\u003cthead\u003e\n\u003ctr\u003e\n\u003cth\u003e\u003cstrong\u003e方法\u003c/strong\u003e\u003c/th\u003e\n\u003cth\u003e\u003cstrong\u003e描述\u003c/strong\u003e\u003c/th\u003e\n\u003c/tr\u003e\n\u003c/thead\u003e\n\u003ctbody\u003e\u003ctr\u003e\n\u003ctd\u003e\u003ccode\u003eServerSocket()\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003e创建非绑定服务器套接字。\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003ccode\u003eServerSocket(int port)\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003e创建绑定到特定端口的服务器套接字。\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003ccode\u003eServerSocket(int port, int backlog)\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003e利用指定的 \u003ccode\u003ebacklog\u003c/code\u003e 创建服务器套接字并将其绑定到指定的本地端口号。\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003ccode\u003eServerSocket(int port, int backlog, InetAddress address)\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003e使用指定的端口、监听 \u003ccode\u003ebacklog\u003c/code\u003e 和要绑定到的本地 IP 地址创建服务器。\u003c/td\u003e\n\u003c/tr\u003e\n\u003c/tbody\u003e\u003c/table\u003e\n\u003ch4 id=\"ServerSocket-常用方法\"\u003e\u003ca href=\"#ServerSocket-常用方法\" class=\"headerlink\" title=\"ServerSocket 常用方法\"\u003e\u003c/a\u003eServerSocket 常用方法\u003c/h4\u003e\u003cp\u003e创建非绑定服务器套接字。 如果 \u003ccode\u003eServerSocket\u003c/code\u003e 构造方法没有抛出异常，就意味着你的应用程序已经成功绑定到指定的端口，并且侦听客户端请求。\u003c/p\u003e\n\u003cp\u003e这里有一些 \u003ccode\u003eServerSocket\u003c/code\u003e 类的常用方法：\u003c/p\u003e\n\u003ctable\u003e\n\u003cthead\u003e\n\u003ctr\u003e\n\u003cth\u003e\u003cstrong\u003e方法\u003c/strong\u003e\u003c/th\u003e\n\u003cth\u003e\u003cstrong\u003e描述\u003c/strong\u003e\u003c/th\u003e\n\u003c/tr\u003e\n\u003c/thead\u003e\n\u003ctbody\u003e\u003ctr\u003e\n\u003ctd\u003e\u003ccode\u003eint getLocalPort()\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003e返回此套接字在其上侦听的端口。\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003ccode\u003eSocket accept()\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003e监听并接受到此套接字的连接。\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003ccode\u003evoid setSoTimeout(int timeout)\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003e通过指定超时值启用/禁用 \u003ccode\u003eSO_TIMEOUT\u003c/code\u003e，以毫秒为单位。\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003ccode\u003evoid bind(SocketAddress host, int backlog)\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003e将 \u003ccode\u003eServerSocket\u003c/code\u003e 绑定到特定地址（IP 地址和端口号）。\u003c/td\u003e\n\u003c/tr\u003e\n\u003c/tbody\u003e\u003c/table\u003e\n\u003ch3 id=\"Socket\"\u003e\u003ca href=\"#Socket\" class=\"headerlink\" title=\"Socket\"\u003e\u003c/a\u003eSocket\u003c/h3\u003e\u003cp\u003e\u003ccode\u003ejava.net.Socket\u003c/code\u003e 类代表客户端和服务器都用来互相沟通的套接字。客户端要获取一个 \u003ccode\u003eSocket\u003c/code\u003e 对象通过实例化 ，而 服务器获得一个 \u003ccode\u003eSocket\u003c/code\u003e 对象则通过 \u003ccode\u003eaccept()\u003c/code\u003e 方法 a 的返回值。\u003c/p\u003e\n\u003ch4 id=\"Socket-构造方法\"\u003e\u003ca href=\"#Socket-构造方法\" class=\"headerlink\" title=\"Socket 构造方法\"\u003e\u003c/a\u003eSocket 构造方法\u003c/h4\u003e\u003cp\u003e\u003ccode\u003eSocket\u003c/code\u003e 类有 5 个构造方法：\u003c/p\u003e\n\u003ctable\u003e\n\u003cthead\u003e\n\u003ctr\u003e\n\u003cth\u003e\u003cstrong\u003e方法\u003c/strong\u003e\u003c/th\u003e\n\u003cth\u003e\u003cstrong\u003e描述\u003c/strong\u003e\u003c/th\u003e\n\u003c/tr\u003e\n\u003c/thead\u003e\n\u003ctbody\u003e\u003ctr\u003e\n\u003ctd\u003e\u003ccode\u003eSocket()\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003e通过系统默认类型的 \u003ccode\u003eSocketImpl\u003c/code\u003e 创建未连接套接字\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003ccode\u003eSocket(String host, int port)\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003e创建一个流套接字并将其连接到指定主机上的指定端口号。\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003ccode\u003eSocket(InetAddress host, int port)\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003e创建一个流套接字并将其连接到指定 IP 地址的指定端口号。\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003ccode\u003eSocket(String host, int port, InetAddress localAddress, int localPort)\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003e创建一个套接字并将其连接到指定远程主机上的指定远程端口。\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003ccode\u003eSocket(InetAddress host, int port, InetAddress localAddress, int localPort)\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003e创建一个套接字并将其连接到指定远程地址上的指定远程端口。\u003c/td\u003e\n\u003c/tr\u003e\n\u003c/tbody\u003e\u003c/table\u003e\n\u003cp\u003e当 Socket 构造方法返回，并没有简单的实例化了一个 Socket 对象，它实际上会尝试连接到指定的服务器和端口。\u003c/p\u003e\n\u003ch4 id=\"Socket-常用方法\"\u003e\u003ca href=\"#Socket-常用方法\" class=\"headerlink\" title=\"Socket 常用方法\"\u003e\u003c/a\u003eSocket 常用方法\u003c/h4\u003e\u003cp\u003e下面列出了一些感兴趣的方法，注意客户端和服务器端都有一个 Socket 对象，所以无论客户端还是服务端都能够调用这些方法。\u003c/p\u003e\n\u003ctable\u003e\n\u003cthead\u003e\n\u003ctr\u003e\n\u003cth\u003e\u003cstrong\u003e方法\u003c/strong\u003e\u003c/th\u003e\n\u003cth\u003e\u003cstrong\u003e描述\u003c/strong\u003e\u003c/th\u003e\n\u003c/tr\u003e\n\u003c/thead\u003e\n\u003ctbody\u003e\u003ctr\u003e\n\u003ctd\u003e\u003ccode\u003evoid connect(SocketAddress host, int timeout)\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003e将此套接字连接到服务器，并指定一个超时值。\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003ccode\u003eInetAddress getInetAddress()\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003e返回套接字连接的地址。\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003ccode\u003eint getPort()\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003e返回此套接字连接到的远程端口。\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003ccode\u003eint getLocalPort()\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003e返回此套接字绑定到的本地端口。\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003ccode\u003eSocketAddress getRemoteSocketAddress()\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003e返回此套接字连接的端点的地址，如果未连接则返回 null。\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003ccode\u003eInputStream getInputStream()\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003e返回此套接字的输入流。\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003ccode\u003eOutputStream getOutputStream()\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003e返回此套接字的输出流。\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003ccode\u003evoid close()\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003e关闭此套接字。\u003c/td\u003e\n\u003c/tr\u003e\n\u003c/tbody\u003e\u003c/table\u003e\n\u003ch3 id=\"Socket-通信示例\"\u003e\u003ca href=\"#Socket-通信示例\" class=\"headerlink\" title=\"Socket 通信示例\"\u003e\u003c/a\u003eSocket 通信示例\u003c/h3\u003e\u003cp\u003e服务端示例：\u003c/p\u003e\n\u003cfigure class=\"highlight java\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e8\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e9\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e10\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e11\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e12\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e13\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e14\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e15\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e16\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e17\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e18\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e19\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"keyword\"\u003epublic\u003c/span\u003e \u003cspan class=\"keyword\"\u003eclass\u003c/span\u003e \u003cspan class=\"title class_\"\u003eHelloServer\u003c/span\u003e {\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"keyword\"\u003epublic\u003c/span\u003e \u003cspan class=\"keyword\"\u003estatic\u003c/span\u003e \u003cspan class=\"keyword\"\u003evoid\u003c/span\u003e \u003cspan class=\"title function_\"\u003emain\u003c/span\u003e\u003cspan class=\"params\"\u003e(String[] args)\u003c/span\u003e \u003cspan class=\"keyword\"\u003ethrows\u003c/span\u003e Exception {\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        \u003cspan class=\"comment\"\u003e// Socket 服务端\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        \u003cspan class=\"comment\"\u003e// 服务器在8888端口上监听\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        \u003cspan class=\"type\"\u003eServerSocket\u003c/span\u003e \u003cspan class=\"variable\"\u003eserver\u003c/span\u003e \u003cspan class=\"operator\"\u003e=\u003c/span\u003e \u003cspan class=\"keyword\"\u003enew\u003c/span\u003e \u003cspan class=\"title class_\"\u003eServerSocket\u003c/span\u003e(\u003cspan class=\"number\"\u003e8888\u003c/span\u003e);\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        System.out.println(\u003cspan class=\"string\"\u003e\u0026#34;服务器运行中，等待客户端连接。\u0026#34;\u003c/span\u003e);\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        \u003cspan class=\"comment\"\u003e// 得到连接，程序进入到阻塞状态\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        \u003cspan class=\"type\"\u003eSocket\u003c/span\u003e \u003cspan class=\"variable\"\u003eclient\u003c/span\u003e \u003cspan class=\"operator\"\u003e=\u003c/span\u003e server.accept();\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        \u003cspan class=\"comment\"\u003e// 打印流输出最方便\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        \u003cspan class=\"type\"\u003ePrintStream\u003c/span\u003e \u003cspan class=\"variable\"\u003eout\u003c/span\u003e \u003cspan class=\"operator\"\u003e=\u003c/span\u003e \u003cspan class=\"keyword\"\u003enew\u003c/span\u003e \u003cspan class=\"title class_\"\u003ePrintStream\u003c/span\u003e(client.getOutputStream());\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        \u003cspan class=\"comment\"\u003e// 向客户端输出信息\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        out.println(\u003cspan class=\"string\"\u003e\u0026#34;hello world\u0026#34;\u003c/span\u003e);\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        client.close();\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        server.close();\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        System.out.println(\u003cspan class=\"string\"\u003e\u0026#34;服务器已向客户端发送消息，退出。\u0026#34;\u003c/span\u003e);\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    }\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e}\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e客户端示例：\u003c/p\u003e\n\u003cfigure class=\"highlight java\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e8\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e9\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e10\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e11\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e12\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e13\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e14\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e15\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"keyword\"\u003epublic\u003c/span\u003e \u003cspan class=\"keyword\"\u003eclass\u003c/span\u003e \u003cspan class=\"title class_\"\u003eHelloClient\u003c/span\u003e {\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"keyword\"\u003epublic\u003c/span\u003e \u003cspan class=\"keyword\"\u003estatic\u003c/span\u003e \u003cspan class=\"keyword\"\u003evoid\u003c/span\u003e \u003cspan class=\"title function_\"\u003emain\u003c/span\u003e\u003cspan class=\"params\"\u003e(String[] args)\u003c/span\u003e \u003cspan class=\"keyword\"\u003ethrows\u003c/span\u003e Exception {\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        \u003cspan class=\"comment\"\u003e// Socket 客户端\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        \u003cspan class=\"type\"\u003eSocket\u003c/span\u003e \u003cspan class=\"variable\"\u003eclient\u003c/span\u003e \u003cspan class=\"operator\"\u003e=\u003c/span\u003e \u003cspan class=\"keyword\"\u003enew\u003c/span\u003e \u003cspan class=\"title class_\"\u003eSocket\u003c/span\u003e(\u003cspan class=\"string\"\u003e\u0026#34;localhost\u0026#34;\u003c/span\u003e, \u003cspan class=\"number\"\u003e8888\u003c/span\u003e);\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        \u003cspan class=\"type\"\u003eInputStreamReader\u003c/span\u003e \u003cspan class=\"variable\"\u003einputStreamReader\u003c/span\u003e \u003cspan class=\"operator\"\u003e=\u003c/span\u003e \u003cspan class=\"keyword\"\u003enew\u003c/span\u003e \u003cspan class=\"title class_\"\u003eInputStreamReader\u003c/span\u003e(client.getInputStream());\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        \u003cspan class=\"comment\"\u003e// 一次性接收完成\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        \u003cspan class=\"type\"\u003eBufferedReader\u003c/span\u003e \u003cspan class=\"variable\"\u003ebuf\u003c/span\u003e \u003cspan class=\"operator\"\u003e=\u003c/span\u003e \u003cspan class=\"keyword\"\u003enew\u003c/span\u003e \u003cspan class=\"title class_\"\u003eBufferedReader\u003c/span\u003e(inputStreamReader);\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        \u003cspan class=\"type\"\u003eString\u003c/span\u003e \u003cspan class=\"variable\"\u003estr\u003c/span\u003e \u003cspan class=\"operator\"\u003e=\u003c/span\u003e buf.readLine();\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        buf.close();\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        client.close();\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        System.out.println(\u003cspan class=\"string\"\u003e\u0026#34;客户端接收到服务器消息：\u0026#34;\u003c/span\u003e + str + \u003cspan class=\"string\"\u003e\u0026#34;，退出\u0026#34;\u003c/span\u003e);\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    }\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e}\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003ch2 id=\"DatagramSocket-和-DatagramPacket\"\u003e\u003ca href=\"#DatagramSocket-和-DatagramPacket\" class=\"headerlink\" title=\"DatagramSocket 和 DatagramPacket\"\u003e\u003c/a\u003eDatagramSocket 和 DatagramPacket\u003c/h2\u003e\u003cp\u003eJava 通过 \u003ccode\u003eDatagramSocket\u003c/code\u003e 和 \u003ccode\u003eDatagramPacket\u003c/code\u003e 实现对 UDP 协议的支持。\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003eDatagramPacket\u003c/code\u003e：数据包类\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eDatagramSocket\u003c/code\u003e：通信类\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eUDP 服务端示例：\u003c/p\u003e\n\u003cfigure class=\"highlight java\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e8\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e9\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e10\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e11\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e12\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e13\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"keyword\"\u003epublic\u003c/span\u003e \u003cspan class=\"keyword\"\u003eclass\u003c/span\u003e \u003cspan class=\"title class_\"\u003eUDPServer\u003c/span\u003e {\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"keyword\"\u003epublic\u003c/span\u003e \u003cspan class=\"keyword\"\u003estatic\u003c/span\u003e \u003cspan class=\"keyword\"\u003evoid\u003c/span\u003e \u003cspan class=\"title function_\"\u003emain\u003c/span\u003e\u003cspan class=\"params\"\u003e(String[] args)\u003c/span\u003e \u003cspan class=\"keyword\"\u003ethrows\u003c/span\u003e Exception { \u003cspan class=\"comment\"\u003e// 所有异常抛出\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        \u003cspan class=\"type\"\u003eString\u003c/span\u003e \u003cspan class=\"variable\"\u003estr\u003c/span\u003e \u003cspan class=\"operator\"\u003e=\u003c/span\u003e \u003cspan class=\"string\"\u003e\u0026#34;hello World!!!\u0026#34;\u003c/span\u003e;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        \u003cspan class=\"type\"\u003eDatagramSocket\u003c/span\u003e \u003cspan class=\"variable\"\u003eds\u003c/span\u003e \u003cspan class=\"operator\"\u003e=\u003c/span\u003e \u003cspan class=\"keyword\"\u003enew\u003c/span\u003e \u003cspan class=\"title class_\"\u003eDatagramSocket\u003c/span\u003e(\u003cspan class=\"number\"\u003e3000\u003c/span\u003e); \u003cspan class=\"comment\"\u003e// 服务端在3000端口上等待服务器发送信息\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        \u003cspan class=\"type\"\u003eDatagramPacket\u003c/span\u003e \u003cspan class=\"variable\"\u003edp\u003c/span\u003e \u003cspan class=\"operator\"\u003e=\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e            \u003cspan class=\"keyword\"\u003enew\u003c/span\u003e \u003cspan class=\"title class_\"\u003eDatagramPacket\u003c/span\u003e(str.getBytes(), str.length(), InetAddress.getByName(\u003cspan class=\"string\"\u003e\u0026#34;localhost\u0026#34;\u003c/span\u003e), \u003cspan class=\"number\"\u003e9000\u003c/span\u003e); \u003cspan class=\"comment\"\u003e// 所有的信息使用buf保存\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        System.out.println(\u003cspan class=\"string\"\u003e\u0026#34;发送信息。\u0026#34;\u003c/span\u003e);\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        ds.send(dp); \u003cspan class=\"comment\"\u003e// 发送信息出去\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        ds.close();\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    }\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e}\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003eUDP 客户端示例：\u003c/p\u003e\n\u003cfigure class=\"highlight java\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e8\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e9\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e10\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e11\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e12\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e13\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"keyword\"\u003epublic\u003c/span\u003e \u003cspan class=\"keyword\"\u003eclass\u003c/span\u003e \u003cspan class=\"title class_\"\u003eUDPClient\u003c/span\u003e {\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"keyword\"\u003epublic\u003c/span\u003e \u003cspan class=\"keyword\"\u003estatic\u003c/span\u003e \u003cspan class=\"keyword\"\u003evoid\u003c/span\u003e \u003cspan class=\"title function_\"\u003emain\u003c/span\u003e\u003cspan class=\"params\"\u003e(String[] args)\u003c/span\u003e \u003cspan class=\"keyword\"\u003ethrows\u003c/span\u003e Exception { \u003cspan class=\"comment\"\u003e// 所有异常抛出\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        \u003cspan class=\"type\"\u003ebyte\u003c/span\u003e[] buf = \u003cspan class=\"keyword\"\u003enew\u003c/span\u003e \u003cspan class=\"title class_\"\u003ebyte\u003c/span\u003e[\u003cspan class=\"number\"\u003e1024\u003c/span\u003e]; \u003cspan class=\"comment\"\u003e// 开辟空间，以接收数据\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        \u003cspan class=\"type\"\u003eDatagramSocket\u003c/span\u003e \u003cspan class=\"variable\"\u003eds\u003c/span\u003e \u003cspan class=\"operator\"\u003e=\u003c/span\u003e \u003cspan class=\"keyword\"\u003enew\u003c/span\u003e \u003cspan class=\"title class_\"\u003eDatagramSocket\u003c/span\u003e(\u003cspan class=\"number\"\u003e9000\u003c/span\u003e); \u003cspan class=\"comment\"\u003e// 客户端在9000端口上等待服务器发送信息\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        \u003cspan class=\"type\"\u003eDatagramPacket\u003c/span\u003e \u003cspan class=\"variable\"\u003edp\u003c/span\u003e \u003cspan class=\"operator\"\u003e=\u003c/span\u003e \u003cspan class=\"keyword\"\u003enew\u003c/span\u003e \u003cspan class=\"title class_\"\u003eDatagramPacket\u003c/span\u003e(buf, \u003cspan class=\"number\"\u003e1024\u003c/span\u003e); \u003cspan class=\"comment\"\u003e// 所有的信息使用buf保存\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        ds.receive(dp); \u003cspan class=\"comment\"\u003e// 接收数据\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        \u003cspan class=\"type\"\u003eString\u003c/span\u003e \u003cspan class=\"variable\"\u003estr\u003c/span\u003e \u003cspan class=\"operator\"\u003e=\u003c/span\u003e \u003cspan class=\"keyword\"\u003enew\u003c/span\u003e \u003cspan class=\"title class_\"\u003eString\u003c/span\u003e(dp.getData(), \u003cspan class=\"number\"\u003e0\u003c/span\u003e, dp.getLength()) + \u003cspan class=\"string\"\u003e\u0026#34;from \u0026#34;\u003c/span\u003e + dp.getAddress().getHostAddress() + \u003cspan class=\"string\"\u003e\u0026#34;：\u0026#34;\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e            + dp.getPort();\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        System.out.println(str); \u003cspan class=\"comment\"\u003e// 输出内容\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    }\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e}\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003ch2 id=\"InetAddress\"\u003e\u003ca href=\"#InetAddress\" class=\"headerlink\" title=\"InetAddress\"\u003e\u003c/a\u003eInetAddress\u003c/h2\u003e\u003cp\u003e\u003ccode\u003eInetAddress\u003c/code\u003e 类表示互联网协议(IP)地址。\u003c/p\u003e\n\u003cp\u003e没有公有的构造函数，只能通过静态方法来创建实例。\u003c/p\u003e\n\u003cfigure class=\"highlight java\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003eInetAddress.getByName(String host);\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eInetAddress.getByAddress(\u003cspan class=\"type\"\u003ebyte\u003c/span\u003e[] address);\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003ch2 id=\"URL\"\u003e\u003ca href=\"#URL\" class=\"headerlink\" title=\"URL\"\u003e\u003c/a\u003eURL\u003c/h2\u003e\u003cp\u003e可以直接从 URL 中读取字节流数据。\u003c/p\u003e\n\u003cfigure class=\"highlight java\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e8\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e9\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e10\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e11\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e12\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e13\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e14\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e15\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e16\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e17\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e18\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e19\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e20\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"keyword\"\u003epublic\u003c/span\u003e \u003cspan class=\"keyword\"\u003estatic\u003c/span\u003e \u003cspan class=\"keyword\"\u003evoid\u003c/span\u003e \u003cspan class=\"title function_\"\u003emain\u003c/span\u003e\u003cspan class=\"params\"\u003e(String[] args)\u003c/span\u003e \u003cspan class=\"keyword\"\u003ethrows\u003c/span\u003e IOException {\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"type\"\u003eURL\u003c/span\u003e \u003cspan class=\"variable\"\u003eurl\u003c/span\u003e \u003cspan class=\"operator\"\u003e=\u003c/span\u003e \u003cspan class=\"keyword\"\u003enew\u003c/span\u003e \u003cspan class=\"title class_\"\u003eURL\u003c/span\u003e(\u003cspan class=\"string\"\u003e\u0026#34;http://www.baidu.com\u0026#34;\u003c/span\u003e);\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"comment\"\u003e/* 字节流 */\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"type\"\u003eInputStream\u003c/span\u003e \u003cspan class=\"variable\"\u003eis\u003c/span\u003e \u003cspan class=\"operator\"\u003e=\u003c/span\u003e url.openStream();\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"comment\"\u003e/* 字符流 */\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"type\"\u003eInputStreamReader\u003c/span\u003e \u003cspan class=\"variable\"\u003eisr\u003c/span\u003e \u003cspan class=\"operator\"\u003e=\u003c/span\u003e \u003cspan class=\"keyword\"\u003enew\u003c/span\u003e \u003cspan class=\"title class_\"\u003eInputStreamReader\u003c/span\u003e(is, \u003cspan class=\"string\"\u003e\u0026#34;utf-8\u0026#34;\u003c/span\u003e);\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"comment\"\u003e/* 提供缓存功能 */\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"type\"\u003eBufferedReader\u003c/span\u003e \u003cspan class=\"variable\"\u003ebr\u003c/span\u003e \u003cspan class=\"operator\"\u003e=\u003c/span\u003e \u003cspan class=\"keyword\"\u003enew\u003c/span\u003e \u003cspan class=\"title class_\"\u003eBufferedReader\u003c/span\u003e(isr);\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    String line;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"keyword\"\u003ewhile\u003c/span\u003e ((line = br.readLine()) != \u003cspan class=\"literal\"\u003enull\u003c/span\u003e) {\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        System.out.println(line);\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    }\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    br.close();\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e}\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003ch2 id=\"参考资料\"\u003e\u003ca href=\"#参考资料\" class=\"headerlink\" title=\"参考资料\"\u003e\u003c/a\u003e参考资料\u003c/h2\u003e\u003cul\u003e\n\u003cli\u003e\u003ca target=\"_blank\" rel=\"noopener\" href=\"https://www.runoob.com/java/java-networking.html\"\u003eJava 网络编程\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n    \u003c/div\u003e",
  "Date": "2020-02-19T10:54:21Z",
  "Author": "钝悟 ◾ Dunwu"
}