{
  "Source": "dunwu",
  "Title": "Spring Bean 作用域",
  "Link": "https://dunwu.github.io/blog/pages/8289f5/",
  "Content": "\u003cdiv class=\"post-body\" itemprop=\"articleBody\"\u003e\u003ch1 id=\"Spring-Bean-作用域\"\u003e\u003ca href=\"#Spring-Bean-作用域\" class=\"headerlink\" title=\"Spring Bean 作用域\"\u003e\u003c/a\u003eSpring Bean 作用域\u003c/h1\u003e\u003ch2 id=\"Spring-Bean-作用域-1\"\u003e\u003ca href=\"#Spring-Bean-作用域-1\" class=\"headerlink\" title=\"Spring Bean 作用域\"\u003e\u003c/a\u003eSpring Bean 作用域\u003c/h2\u003e\u003ctable\u003e\n\u003cthead\u003e\n\u003ctr\u003e\n\u003cth\u003e来源\u003c/th\u003e\n\u003cth\u003e说明\u003c/th\u003e\n\u003c/tr\u003e\n\u003c/thead\u003e\n\u003ctbody\u003e\u003ctr\u003e\n\u003ctd\u003esingleton\u003c/td\u003e\n\u003ctd\u003e默认 Spring Bean 作用域，一个 BeanFactory 有且仅有一个实例\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003eprototype\u003c/td\u003e\n\u003ctd\u003e原型作用域，每次依赖查找和依赖注入生成新 Bean 对象\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003erequest\u003c/td\u003e\n\u003ctd\u003e将 Spring Bean 存储在 ServletRequest 上下文中\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003esession\u003c/td\u003e\n\u003ctd\u003e将 Spring Bean 存储在 HttpSession 中\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003eapplication\u003c/td\u003e\n\u003ctd\u003e将 Spring Bean 存储在 ServletContext 中\u003c/td\u003e\n\u003c/tr\u003e\n\u003c/tbody\u003e\u003c/table\u003e\n\u003ch2 id=\"“singleton”-Bean-作用域\"\u003e\u003ca href=\"#“singleton”-Bean-作用域\" class=\"headerlink\" title=\"“singleton” Bean 作用域\"\u003e\u003c/a\u003e“singleton” Bean 作用域\u003c/h2\u003e\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/dunwu/images/master/snap/20221221170833.png\"/\u003e\u003c/p\u003e\n\u003ch2 id=\"“prototype”-Bean-作用域\"\u003e\u003ca href=\"#“prototype”-Bean-作用域\" class=\"headerlink\" title=\"“prototype” Bean 作用域\"\u003e\u003c/a\u003e“prototype” Bean 作用域\u003c/h2\u003e\u003cp\u003eSpring 容器没有办法管理 prototype Bean 的完整生命周期，也没有办法记录实例的存在。销毁回调方法将不会执行，可以利用 \u003ccode\u003eBeanPostProcessor\u003c/code\u003e 进行清扫工作。\u003c/p\u003e\n\u003ch2 id=\"“request”-Bean-作用域\"\u003e\u003ca href=\"#“request”-Bean-作用域\" class=\"headerlink\" title=\"“request” Bean 作用域\"\u003e\u003c/a\u003e“request” Bean 作用域\u003c/h2\u003e\u003cul\u003e\n\u003cli\u003e配置\u003cul\u003e\n\u003cli\u003eXML - \u003ccode\u003e\u0026lt;bean class=\u0026#34;...\u0026#34; scope = “request\u0026#34; /\u0026gt;\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003eJava 注解 - \u003ccode\u003e@RequestScope\u003c/code\u003e 或 \u003ccode\u003e@Scope(WebApplicationContext.SCOPE_REQUEST)\u003c/code\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e实现\u003cul\u003e\n\u003cli\u003eAPI - RequestScope\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"“session”-Bean-作用域\"\u003e\u003ca href=\"#“session”-Bean-作用域\" class=\"headerlink\" title=\"“session” Bean 作用域\"\u003e\u003c/a\u003e“session” Bean 作用域\u003c/h2\u003e\u003cul\u003e\n\u003cli\u003e配置\u003cul\u003e\n\u003cli\u003eXML - \u003ccode\u003e\u0026lt;bean class=\u0026#34;...\u0026#34; scope = “session\u0026#34; /\u0026gt;\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003eJava 注解 - \u003ccode\u003e@SessionScope\u003c/code\u003e 或 \u003ccode\u003e@Scope(WebApplicationContext.SCOPE_SESSION)\u003c/code\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e实现\u003cul\u003e\n\u003cli\u003eAPI - SessionScope\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"“application”-Bean-作用域\"\u003e\u003ca href=\"#“application”-Bean-作用域\" class=\"headerlink\" title=\"“application” Bean 作用域\"\u003e\u003c/a\u003e“application” Bean 作用域\u003c/h2\u003e\u003cul\u003e\n\u003cli\u003e配置\u003cul\u003e\n\u003cli\u003eXML - \u003ccode\u003e\u0026lt;bean class=\u0026#34;...\u0026#34; scope = “application\u0026#34; /\u0026gt;\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003eJava 注解 - \u003ccode\u003e@ApplicationScope\u003c/code\u003e 或 \u003ccode\u003e@Scope(WebApplicationContext.SCOPE_APPLICATION)\u003c/code\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e实现\u003cul\u003e\n\u003cli\u003eAPI - ServletContextScope\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"自定义-Bean-作用域\"\u003e\u003ca href=\"#自定义-Bean-作用域\" class=\"headerlink\" title=\"自定义 Bean 作用域\"\u003e\u003c/a\u003e自定义 Bean 作用域\u003c/h2\u003e\u003cul\u003e\n\u003cli\u003e\u003cp\u003e实现 Scope\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003eorg.springframework.beans.factory.config.Scope\u003c/code\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e注册 Scope\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eAPI - \u003ccode\u003eorg.springframework.beans.factory.config.ConfigurableBeanFactory#registerScope\u003c/code\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e配置\u003c/p\u003e\n\u003cfigure class=\"highlight xml\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e8\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"tag\"\u003e\u0026lt;\u003cspan class=\"name\"\u003ebean\u003c/span\u003e \u003cspan class=\"attr\"\u003eclass\u003c/span\u003e=\u003cspan class=\"string\"\u003e\u0026#34;org.springframework.beans.factory.config.CustomScopeConfigurer\u0026#34;\u003c/span\u003e\u0026gt;\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  \u003cspan class=\"tag\"\u003e\u0026lt;\u003cspan class=\"name\"\u003eproperty\u003c/span\u003e \u003cspan class=\"attr\"\u003ename\u003c/span\u003e=\u003cspan class=\"string\"\u003e\u0026#34;scopes\u0026#34;\u003c/span\u003e\u0026gt;\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"tag\"\u003e\u0026lt;\u003cspan class=\"name\"\u003emap\u003c/span\u003e\u0026gt;\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e      \u003cspan class=\"tag\"\u003e\u0026lt;\u003cspan class=\"name\"\u003eentry\u003c/span\u003e \u003cspan class=\"attr\"\u003ekey\u003c/span\u003e=\u003cspan class=\"string\"\u003e\u0026#34;...\u0026#34;\u003c/span\u003e\u0026gt;\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e      \u003cspan class=\"tag\"\u003e\u0026lt;/\u003cspan class=\"name\"\u003eentry\u003c/span\u003e\u0026gt;\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"tag\"\u003e\u0026lt;/\u003cspan class=\"name\"\u003emap\u003c/span\u003e\u0026gt;\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  \u003cspan class=\"tag\"\u003e\u0026lt;/\u003cspan class=\"name\"\u003eproperty\u003c/span\u003e\u0026gt;\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"tag\"\u003e\u0026lt;/\u003cspan class=\"name\"\u003ebean\u003c/span\u003e\u0026gt;\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"问题\"\u003e\u003ca href=\"#问题\" class=\"headerlink\" title=\"问题\"\u003e\u003c/a\u003e问题\u003c/h2\u003e\u003cp\u003eSpring 內建的 Bean 作用域有几种？\u003c/p\u003e\n\u003cp\u003esingleton、prototype、request、session、application 以及 websocket\u003c/p\u003e\n\u003cp\u003esingleton Bean 是否在一个应用是唯一的？\u003c/p\u003e\n\u003cp\u003e否。singleton bean 仅在当前 Spring IoC 容器（BeanFactory）中是单例对象。\u003c/p\u003e\n\u003cp\u003eapplication Bean 是否可以被其他方案替代？\u003c/p\u003e\n\u003cp\u003e可以的，实际上，“application” Bean 与“singleton” Bean 没有本质区别\u003c/p\u003e\n\u003ch2 id=\"参考资料\"\u003e\u003ca href=\"#参考资料\" class=\"headerlink\" title=\"参考资料\"\u003e\u003c/a\u003e参考资料\u003c/h2\u003e\u003cul\u003e\n\u003cli\u003e\u003ca target=\"_blank\" rel=\"noopener\" href=\"https://docs.spring.io/spring-framework/docs/current/spring-framework-reference/core.html#beans\"\u003eSpring 官方文档之 Core Technologies\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca target=\"_blank\" rel=\"noopener\" href=\"https://time.geekbang.org/course/intro/265\"\u003e《小马哥讲 Spring 核心编程思想》\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n    \u003c/div\u003e",
  "Date": "2022-12-21T03:42:00Z",
  "Author": "钝悟 ◾ Dunwu"
}