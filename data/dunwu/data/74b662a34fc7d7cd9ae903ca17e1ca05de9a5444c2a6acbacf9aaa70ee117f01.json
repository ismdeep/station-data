{
  "Source": "dunwu",
  "Title": "Mybatis原理",
  "Link": "https://dunwu.github.io/blog/pages/d55184/",
  "Content": "\u003cdiv class=\"post-body\" itemprop=\"articleBody\"\u003e\u003ch1 id=\"Mybatis-原理\"\u003e\u003ca href=\"#Mybatis-原理\" class=\"headerlink\" title=\"Mybatis 原理\"\u003e\u003c/a\u003eMybatis 原理\u003c/h1\u003e\u003cblockquote\u003e\n\u003cp\u003eMybatis 的前身就是 iBatis ，是一款优秀的持久层框架，它支持自定义 SQL、存储过程以及高级映射。本文以一个 Mybatis 完整示例为切入点，结合 Mybatis 底层源码分析，图文并茂的讲解 Mybatis 的核心工作机制。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003ch2 id=\"Mybatis-完整示例\"\u003e\u003ca href=\"#Mybatis-完整示例\" class=\"headerlink\" title=\"Mybatis 完整示例\"\u003e\u003c/a\u003eMybatis 完整示例\u003c/h2\u003e\u003cblockquote\u003e\n\u003cp\u003e这里，我将以一个入门级的示例来演示 Mybatis 是如何工作的。\u003c/p\u003e\n\u003cp\u003e注：本文后面章节中的原理、源码部分也将基于这个示例来进行讲解。\u003c/p\u003e\n\u003cp\u003e\u003ca target=\"_blank\" rel=\"noopener\" href=\"https://github.com/dunwu/spring-tutorial/blob/master/codes/data/spring-data-mybatis/src/main/java/io/github/dunwu/spring/orm/MybatisDemo.java\"\u003e完整示例源码地址\u003c/a\u003e\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003ch3 id=\"数据库准备\"\u003e\u003ca href=\"#数据库准备\" class=\"headerlink\" title=\"数据库准备\"\u003e\u003c/a\u003e数据库准备\u003c/h3\u003e\u003cp\u003e在本示例中，需要针对一张用户表进行 CRUD 操作。其数据模型如下：\u003c/p\u003e\n\u003cfigure class=\"highlight sql\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e8\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e9\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e10\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e11\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e12\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e13\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"keyword\"\u003eCREATE\u003c/span\u003e \u003cspan class=\"keyword\"\u003eTABLE\u003c/span\u003e IF \u003cspan class=\"keyword\"\u003eNOT\u003c/span\u003e \u003cspan class=\"keyword\"\u003eEXISTS\u003c/span\u003e \u003cspan class=\"keyword\"\u003euser\u003c/span\u003e (\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    id      \u003cspan class=\"type\"\u003eBIGINT\u003c/span\u003e(\u003cspan class=\"number\"\u003e10\u003c/span\u003e) UNSIGNED \u003cspan class=\"keyword\"\u003eNOT\u003c/span\u003e \u003cspan class=\"keyword\"\u003eNULL\u003c/span\u003e AUTO_INCREMENT COMMENT \u003cspan class=\"string\"\u003e\u0026#39;Id\u0026#39;\u003c/span\u003e,\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    name    \u003cspan class=\"type\"\u003eVARCHAR\u003c/span\u003e(\u003cspan class=\"number\"\u003e10\u003c/span\u003e)         \u003cspan class=\"keyword\"\u003eNOT\u003c/span\u003e \u003cspan class=\"keyword\"\u003eNULL\u003c/span\u003e \u003cspan class=\"keyword\"\u003eDEFAULT\u003c/span\u003e \u003cspan class=\"string\"\u003e\u0026#39;\u0026#39;\u003c/span\u003e COMMENT \u003cspan class=\"string\"\u003e\u0026#39;用户名\u0026#39;\u003c/span\u003e,\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    age     \u003cspan class=\"type\"\u003eINT\u003c/span\u003e(\u003cspan class=\"number\"\u003e3\u003c/span\u003e)              \u003cspan class=\"keyword\"\u003eNOT\u003c/span\u003e \u003cspan class=\"keyword\"\u003eNULL\u003c/span\u003e \u003cspan class=\"keyword\"\u003eDEFAULT\u003c/span\u003e \u003cspan class=\"number\"\u003e0\u003c/span\u003e COMMENT \u003cspan class=\"string\"\u003e\u0026#39;年龄\u0026#39;\u003c/span\u003e,\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    address \u003cspan class=\"type\"\u003eVARCHAR\u003c/span\u003e(\u003cspan class=\"number\"\u003e32\u003c/span\u003e)         \u003cspan class=\"keyword\"\u003eNOT\u003c/span\u003e \u003cspan class=\"keyword\"\u003eNULL\u003c/span\u003e \u003cspan class=\"keyword\"\u003eDEFAULT\u003c/span\u003e \u003cspan class=\"string\"\u003e\u0026#39;\u0026#39;\u003c/span\u003e COMMENT \u003cspan class=\"string\"\u003e\u0026#39;地址\u0026#39;\u003c/span\u003e,\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    email   \u003cspan class=\"type\"\u003eVARCHAR\u003c/span\u003e(\u003cspan class=\"number\"\u003e32\u003c/span\u003e)         \u003cspan class=\"keyword\"\u003eNOT\u003c/span\u003e \u003cspan class=\"keyword\"\u003eNULL\u003c/span\u003e \u003cspan class=\"keyword\"\u003eDEFAULT\u003c/span\u003e \u003cspan class=\"string\"\u003e\u0026#39;\u0026#39;\u003c/span\u003e COMMENT \u003cspan class=\"string\"\u003e\u0026#39;邮件\u0026#39;\u003c/span\u003e,\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"keyword\"\u003ePRIMARY\u003c/span\u003e KEY (id)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e) COMMENT \u003cspan class=\"operator\"\u003e=\u003c/span\u003e \u003cspan class=\"string\"\u003e\u0026#39;用户表\u0026#39;\u003c/span\u003e;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"keyword\"\u003eINSERT\u003c/span\u003e \u003cspan class=\"keyword\"\u003eINTO\u003c/span\u003e \u003cspan class=\"keyword\"\u003euser\u003c/span\u003e (name, age, address, email)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"keyword\"\u003eVALUES\u003c/span\u003e (\u003cspan class=\"string\"\u003e\u0026#39;张三\u0026#39;\u003c/span\u003e, \u003cspan class=\"number\"\u003e18\u003c/span\u003e, \u003cspan class=\"string\"\u003e\u0026#39;北京\u0026#39;\u003c/span\u003e, \u003cspan class=\"string\"\u003e\u0026#39;xxx@163.com\u0026#39;\u003c/span\u003e);\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"keyword\"\u003eINSERT\u003c/span\u003e \u003cspan class=\"keyword\"\u003eINTO\u003c/span\u003e \u003cspan class=\"keyword\"\u003euser\u003c/span\u003e (name, age, address, email)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"keyword\"\u003eVALUES\u003c/span\u003e (\u003cspan class=\"string\"\u003e\u0026#39;李四\u0026#39;\u003c/span\u003e, \u003cspan class=\"number\"\u003e19\u003c/span\u003e, \u003cspan class=\"string\"\u003e\u0026#39;上海\u0026#39;\u003c/span\u003e, \u003cspan class=\"string\"\u003e\u0026#39;xxx@163.com\u0026#39;\u003c/span\u003e);\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003ch3 id=\"添加-Mybatis\"\u003e\u003ca href=\"#添加-Mybatis\" class=\"headerlink\" title=\"添加 Mybatis\"\u003e\u003c/a\u003e添加 Mybatis\u003c/h3\u003e\u003cp\u003e如果使用 Maven 来构建项目，则需将下面的依赖代码置于 pom.xml 文件中：\u003c/p\u003e\n\u003cfigure class=\"highlight xml\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"tag\"\u003e\u0026lt;\u003cspan class=\"name\"\u003edependency\u003c/span\u003e\u0026gt;\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  \u003cspan class=\"tag\"\u003e\u0026lt;\u003cspan class=\"name\"\u003egroupId\u003c/span\u003e\u0026gt;\u003c/span\u003eorg.Mybatis\u003cspan class=\"tag\"\u003e\u0026lt;/\u003cspan class=\"name\"\u003egroupId\u003c/span\u003e\u0026gt;\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  \u003cspan class=\"tag\"\u003e\u0026lt;\u003cspan class=\"name\"\u003eartifactId\u003c/span\u003e\u0026gt;\u003c/span\u003eMybatis\u003cspan class=\"tag\"\u003e\u0026lt;/\u003cspan class=\"name\"\u003eartifactId\u003c/span\u003e\u0026gt;\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  \u003cspan class=\"tag\"\u003e\u0026lt;\u003cspan class=\"name\"\u003eversion\u003c/span\u003e\u0026gt;\u003c/span\u003ex.x.x\u003cspan class=\"tag\"\u003e\u0026lt;/\u003cspan class=\"name\"\u003eversion\u003c/span\u003e\u0026gt;\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"tag\"\u003e\u0026lt;/\u003cspan class=\"name\"\u003edependency\u003c/span\u003e\u0026gt;\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003ch3 id=\"Mybatis-配置\"\u003e\u003ca href=\"#Mybatis-配置\" class=\"headerlink\" title=\"Mybatis 配置\"\u003e\u003c/a\u003eMybatis 配置\u003c/h3\u003e\u003cp\u003eXML 配置文件中包含了对 Mybatis 系统的核心设置，包括获取数据库连接实例的数据源（DataSource）以及决定事务作用域和控制方式的事务管理器（TransactionManager）。\u003c/p\u003e\n\u003cp\u003e本示例中只是给出最简化的配置。\u003c/p\u003e\n\u003cp\u003e【示例】Mybatis-config.xml 文件\u003c/p\u003e\n\u003cfigure class=\"highlight xml\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e8\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e9\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e10\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e11\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e12\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e13\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e14\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e15\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e16\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e17\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e18\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e19\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e20\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e\u0026lt;?xml version=\u003cspan class=\"string\"\u003e\u0026#34;1.0\u0026#34;\u003c/span\u003e encoding=\u003cspan class=\"string\"\u003e\u0026#34;utf-8\u0026#34;\u003c/span\u003e?\u0026gt;\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e\u0026lt;!DOCTYPE \u003cspan class=\"keyword\"\u003econfiguration\u003c/span\u003e \u003cspan class=\"keyword\"\u003ePUBLIC\u003c/span\u003e \u003cspan class=\"string\"\u003e\u0026#34;-//Mybatis.org//DTD Config 3.0//EN\u0026#34;\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e  \u003cspan class=\"string\"\u003e\u0026#34;http://Mybatis.org/dtd/Mybatis-3-config.dtd\u0026#34;\u003c/span\u003e\u0026gt;\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"tag\"\u003e\u0026lt;\u003cspan class=\"name\"\u003econfiguration\u003c/span\u003e\u0026gt;\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  \u003cspan class=\"tag\"\u003e\u0026lt;\u003cspan class=\"name\"\u003eenvironments\u003c/span\u003e \u003cspan class=\"attr\"\u003edefault\u003c/span\u003e=\u003cspan class=\"string\"\u003e\u0026#34;development\u0026#34;\u003c/span\u003e\u0026gt;\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"tag\"\u003e\u0026lt;\u003cspan class=\"name\"\u003eenvironment\u003c/span\u003e \u003cspan class=\"attr\"\u003eid\u003c/span\u003e=\u003cspan class=\"string\"\u003e\u0026#34;development\u0026#34;\u003c/span\u003e\u0026gt;\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e      \u003cspan class=\"tag\"\u003e\u0026lt;\u003cspan class=\"name\"\u003etransactionManager\u003c/span\u003e \u003cspan class=\"attr\"\u003etype\u003c/span\u003e=\u003cspan class=\"string\"\u003e\u0026#34;JDBC\u0026#34;\u003c/span\u003e /\u0026gt;\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e      \u003cspan class=\"tag\"\u003e\u0026lt;\u003cspan class=\"name\"\u003edataSource\u003c/span\u003e \u003cspan class=\"attr\"\u003etype\u003c/span\u003e=\u003cspan class=\"string\"\u003e\u0026#34;POOLED\u0026#34;\u003c/span\u003e\u0026gt;\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        \u003cspan class=\"tag\"\u003e\u0026lt;\u003cspan class=\"name\"\u003eproperty\u003c/span\u003e \u003cspan class=\"attr\"\u003ename\u003c/span\u003e=\u003cspan class=\"string\"\u003e\u0026#34;driver\u0026#34;\u003c/span\u003e \u003cspan class=\"attr\"\u003evalue\u003c/span\u003e=\u003cspan class=\"string\"\u003e\u0026#34;com.mysql.cj.jdbc.Driver\u0026#34;\u003c/span\u003e /\u0026gt;\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        \u003cspan class=\"tag\"\u003e\u0026lt;\u003cspan class=\"name\"\u003eproperty\u003c/span\u003e \u003cspan class=\"attr\"\u003ename\u003c/span\u003e=\u003cspan class=\"string\"\u003e\u0026#34;url\u0026#34;\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"tag\"\u003e                  \u003cspan class=\"attr\"\u003evalue\u003c/span\u003e=\u003cspan class=\"string\"\u003e\u0026#34;jdbc:mysql://127.0.0.1:3306/spring_tutorial?serverTimezone=UTC\u0026#34;\u003c/span\u003e /\u0026gt;\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        \u003cspan class=\"tag\"\u003e\u0026lt;\u003cspan class=\"name\"\u003eproperty\u003c/span\u003e \u003cspan class=\"attr\"\u003ename\u003c/span\u003e=\u003cspan class=\"string\"\u003e\u0026#34;username\u0026#34;\u003c/span\u003e \u003cspan class=\"attr\"\u003evalue\u003c/span\u003e=\u003cspan class=\"string\"\u003e\u0026#34;root\u0026#34;\u003c/span\u003e /\u0026gt;\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        \u003cspan class=\"tag\"\u003e\u0026lt;\u003cspan class=\"name\"\u003eproperty\u003c/span\u003e \u003cspan class=\"attr\"\u003ename\u003c/span\u003e=\u003cspan class=\"string\"\u003e\u0026#34;password\u0026#34;\u003c/span\u003e \u003cspan class=\"attr\"\u003evalue\u003c/span\u003e=\u003cspan class=\"string\"\u003e\u0026#34;root\u0026#34;\u003c/span\u003e /\u0026gt;\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e      \u003cspan class=\"tag\"\u003e\u0026lt;/\u003cspan class=\"name\"\u003edataSource\u003c/span\u003e\u0026gt;\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"tag\"\u003e\u0026lt;/\u003cspan class=\"name\"\u003eenvironment\u003c/span\u003e\u0026gt;\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  \u003cspan class=\"tag\"\u003e\u0026lt;/\u003cspan class=\"name\"\u003eenvironments\u003c/span\u003e\u0026gt;\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  \u003cspan class=\"tag\"\u003e\u0026lt;\u003cspan class=\"name\"\u003emappers\u003c/span\u003e\u0026gt;\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"tag\"\u003e\u0026lt;\u003cspan class=\"name\"\u003emapper\u003c/span\u003e \u003cspan class=\"attr\"\u003eresource\u003c/span\u003e=\u003cspan class=\"string\"\u003e\u0026#34;Mybatis/mapper/UserMapper.xml\u0026#34;\u003c/span\u003e /\u0026gt;\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  \u003cspan class=\"tag\"\u003e\u0026lt;/\u003cspan class=\"name\"\u003emappers\u003c/span\u003e\u0026gt;\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"tag\"\u003e\u0026lt;/\u003cspan class=\"name\"\u003econfiguration\u003c/span\u003e\u0026gt;\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003e说明：上面的配置文件中仅仅指定了数据源连接方式和 User 表的映射配置文件。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003ch3 id=\"Mapper\"\u003e\u003ca href=\"#Mapper\" class=\"headerlink\" title=\"Mapper\"\u003e\u003c/a\u003eMapper\u003c/h3\u003e\u003ch4 id=\"Mapper-xml\"\u003e\u003ca href=\"#Mapper-xml\" class=\"headerlink\" title=\"Mapper.xml\"\u003e\u003c/a\u003eMapper.xml\u003c/h4\u003e\u003cp\u003e个人理解，Mapper.xml 文件可以看做是 Mybatis 的 JDBC SQL 模板。\u003c/p\u003e\n\u003cp\u003e【示例】UserMapper.xml 文件\u003c/p\u003e\n\u003cp\u003e下面是一个通过 Mybatis Generator 自动生成的完整的 Mapper 文件。\u003c/p\u003e\n\u003cfigure class=\"highlight xml\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e8\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e9\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e10\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e11\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e12\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e13\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e14\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e15\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e16\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e17\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e18\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e19\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e20\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e21\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e22\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e23\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e24\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e25\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e26\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e27\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e28\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e29\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e30\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e31\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e32\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e33\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e34\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e35\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e36\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e37\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e38\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e\u0026lt;?xml version=\u003cspan class=\"string\"\u003e\u0026#34;1.0\u0026#34;\u003c/span\u003e encoding=\u003cspan class=\"string\"\u003e\u0026#34;UTF-8\u0026#34;\u003c/span\u003e?\u0026gt;\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e\u0026lt;!DOCTYPE \u003cspan class=\"keyword\"\u003emapper\u003c/span\u003e \u003cspan class=\"keyword\"\u003ePUBLIC\u003c/span\u003e \u003cspan class=\"string\"\u003e\u0026#34;-//Mybatis.org//DTD Mapper 3.0//EN\u0026#34;\u003c/span\u003e \u003cspan class=\"string\"\u003e\u0026#34;http://Mybatis.org/dtd/Mybatis-3-mapper.dtd\u0026#34;\u003c/span\u003e\u0026gt;\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"tag\"\u003e\u0026lt;\u003cspan class=\"name\"\u003emapper\u003c/span\u003e \u003cspan class=\"attr\"\u003enamespace\u003c/span\u003e=\u003cspan class=\"string\"\u003e\u0026#34;io.github.dunwu.spring.orm.mapper.UserMapper\u0026#34;\u003c/span\u003e\u0026gt;\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  \u003cspan class=\"tag\"\u003e\u0026lt;\u003cspan class=\"name\"\u003eresultMap\u003c/span\u003e \u003cspan class=\"attr\"\u003eid\u003c/span\u003e=\u003cspan class=\"string\"\u003e\u0026#34;BaseResultMap\u0026#34;\u003c/span\u003e \u003cspan class=\"attr\"\u003etype\u003c/span\u003e=\u003cspan class=\"string\"\u003e\u0026#34;io.github.dunwu.spring.orm.entity.User\u0026#34;\u003c/span\u003e\u0026gt;\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"tag\"\u003e\u0026lt;\u003cspan class=\"name\"\u003eid\u003c/span\u003e \u003cspan class=\"attr\"\u003ecolumn\u003c/span\u003e=\u003cspan class=\"string\"\u003e\u0026#34;id\u0026#34;\u003c/span\u003e \u003cspan class=\"attr\"\u003ejdbcType\u003c/span\u003e=\u003cspan class=\"string\"\u003e\u0026#34;BIGINT\u0026#34;\u003c/span\u003e \u003cspan class=\"attr\"\u003eproperty\u003c/span\u003e=\u003cspan class=\"string\"\u003e\u0026#34;id\u0026#34;\u003c/span\u003e /\u0026gt;\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"tag\"\u003e\u0026lt;\u003cspan class=\"name\"\u003eresult\u003c/span\u003e \u003cspan class=\"attr\"\u003ecolumn\u003c/span\u003e=\u003cspan class=\"string\"\u003e\u0026#34;name\u0026#34;\u003c/span\u003e \u003cspan class=\"attr\"\u003ejdbcType\u003c/span\u003e=\u003cspan class=\"string\"\u003e\u0026#34;VARCHAR\u0026#34;\u003c/span\u003e \u003cspan class=\"attr\"\u003eproperty\u003c/span\u003e=\u003cspan class=\"string\"\u003e\u0026#34;name\u0026#34;\u003c/span\u003e /\u0026gt;\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"tag\"\u003e\u0026lt;\u003cspan class=\"name\"\u003eresult\u003c/span\u003e \u003cspan class=\"attr\"\u003ecolumn\u003c/span\u003e=\u003cspan class=\"string\"\u003e\u0026#34;age\u0026#34;\u003c/span\u003e \u003cspan class=\"attr\"\u003ejdbcType\u003c/span\u003e=\u003cspan class=\"string\"\u003e\u0026#34;INTEGER\u0026#34;\u003c/span\u003e \u003cspan class=\"attr\"\u003eproperty\u003c/span\u003e=\u003cspan class=\"string\"\u003e\u0026#34;age\u0026#34;\u003c/span\u003e /\u0026gt;\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"tag\"\u003e\u0026lt;\u003cspan class=\"name\"\u003eresult\u003c/span\u003e \u003cspan class=\"attr\"\u003ecolumn\u003c/span\u003e=\u003cspan class=\"string\"\u003e\u0026#34;address\u0026#34;\u003c/span\u003e \u003cspan class=\"attr\"\u003ejdbcType\u003c/span\u003e=\u003cspan class=\"string\"\u003e\u0026#34;VARCHAR\u0026#34;\u003c/span\u003e \u003cspan class=\"attr\"\u003eproperty\u003c/span\u003e=\u003cspan class=\"string\"\u003e\u0026#34;address\u0026#34;\u003c/span\u003e /\u0026gt;\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"tag\"\u003e\u0026lt;\u003cspan class=\"name\"\u003eresult\u003c/span\u003e \u003cspan class=\"attr\"\u003ecolumn\u003c/span\u003e=\u003cspan class=\"string\"\u003e\u0026#34;email\u0026#34;\u003c/span\u003e \u003cspan class=\"attr\"\u003ejdbcType\u003c/span\u003e=\u003cspan class=\"string\"\u003e\u0026#34;VARCHAR\u0026#34;\u003c/span\u003e \u003cspan class=\"attr\"\u003eproperty\u003c/span\u003e=\u003cspan class=\"string\"\u003e\u0026#34;email\u0026#34;\u003c/span\u003e /\u0026gt;\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  \u003cspan class=\"tag\"\u003e\u0026lt;/\u003cspan class=\"name\"\u003eresultMap\u003c/span\u003e\u0026gt;\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  \u003cspan class=\"tag\"\u003e\u0026lt;\u003cspan class=\"name\"\u003edelete\u003c/span\u003e \u003cspan class=\"attr\"\u003eid\u003c/span\u003e=\u003cspan class=\"string\"\u003e\u0026#34;deleteByPrimaryKey\u0026#34;\u003c/span\u003e \u003cspan class=\"attr\"\u003eparameterType\u003c/span\u003e=\u003cspan class=\"string\"\u003e\u0026#34;java.lang.Long\u0026#34;\u003c/span\u003e\u0026gt;\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    delete from user\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    where id = #{id,jdbcType=BIGINT}\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  \u003cspan class=\"tag\"\u003e\u0026lt;/\u003cspan class=\"name\"\u003edelete\u003c/span\u003e\u0026gt;\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  \u003cspan class=\"tag\"\u003e\u0026lt;\u003cspan class=\"name\"\u003einsert\u003c/span\u003e \u003cspan class=\"attr\"\u003eid\u003c/span\u003e=\u003cspan class=\"string\"\u003e\u0026#34;insert\u0026#34;\u003c/span\u003e \u003cspan class=\"attr\"\u003eparameterType\u003c/span\u003e=\u003cspan class=\"string\"\u003e\u0026#34;io.github.dunwu.spring.orm.entity.User\u0026#34;\u003c/span\u003e\u0026gt;\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    insert into user (id, name, age,\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e      address, email)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    values (#{id,jdbcType=BIGINT}, #{name,jdbcType=VARCHAR}, #{age,jdbcType=INTEGER},\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e      #{address,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR})\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  \u003cspan class=\"tag\"\u003e\u0026lt;/\u003cspan class=\"name\"\u003einsert\u003c/span\u003e\u0026gt;\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  \u003cspan class=\"tag\"\u003e\u0026lt;\u003cspan class=\"name\"\u003eupdate\u003c/span\u003e \u003cspan class=\"attr\"\u003eid\u003c/span\u003e=\u003cspan class=\"string\"\u003e\u0026#34;updateByPrimaryKey\u0026#34;\u003c/span\u003e \u003cspan class=\"attr\"\u003eparameterType\u003c/span\u003e=\u003cspan class=\"string\"\u003e\u0026#34;io.github.dunwu.spring.orm.entity.User\u0026#34;\u003c/span\u003e\u0026gt;\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    update user\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    set name = #{name,jdbcType=VARCHAR},\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e      age = #{age,jdbcType=INTEGER},\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e      address = #{address,jdbcType=VARCHAR},\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e      email = #{email,jdbcType=VARCHAR}\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    where id = #{id,jdbcType=BIGINT}\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  \u003cspan class=\"tag\"\u003e\u0026lt;/\u003cspan class=\"name\"\u003eupdate\u003c/span\u003e\u0026gt;\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  \u003cspan class=\"tag\"\u003e\u0026lt;\u003cspan class=\"name\"\u003eselect\u003c/span\u003e \u003cspan class=\"attr\"\u003eid\u003c/span\u003e=\u003cspan class=\"string\"\u003e\u0026#34;selectByPrimaryKey\u0026#34;\u003c/span\u003e \u003cspan class=\"attr\"\u003eparameterType\u003c/span\u003e=\u003cspan class=\"string\"\u003e\u0026#34;java.lang.Long\u0026#34;\u003c/span\u003e \u003cspan class=\"attr\"\u003eresultMap\u003c/span\u003e=\u003cspan class=\"string\"\u003e\u0026#34;BaseResultMap\u0026#34;\u003c/span\u003e\u0026gt;\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    select id, name, age, address, email\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    from user\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    where id = #{id,jdbcType=BIGINT}\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  \u003cspan class=\"tag\"\u003e\u0026lt;/\u003cspan class=\"name\"\u003eselect\u003c/span\u003e\u0026gt;\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  \u003cspan class=\"tag\"\u003e\u0026lt;\u003cspan class=\"name\"\u003eselect\u003c/span\u003e \u003cspan class=\"attr\"\u003eid\u003c/span\u003e=\u003cspan class=\"string\"\u003e\u0026#34;selectAll\u0026#34;\u003c/span\u003e \u003cspan class=\"attr\"\u003eresultMap\u003c/span\u003e=\u003cspan class=\"string\"\u003e\u0026#34;BaseResultMap\u0026#34;\u003c/span\u003e\u0026gt;\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    select id, name, age, address, email\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    from user\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  \u003cspan class=\"tag\"\u003e\u0026lt;/\u003cspan class=\"name\"\u003eselect\u003c/span\u003e\u0026gt;\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"tag\"\u003e\u0026lt;/\u003cspan class=\"name\"\u003emapper\u003c/span\u003e\u0026gt;\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003ch4 id=\"Mapper-java\"\u003e\u003ca href=\"#Mapper-java\" class=\"headerlink\" title=\"Mapper.java\"\u003e\u003c/a\u003eMapper.java\u003c/h4\u003e\u003cp\u003eMapper.java 文件是 Mapper.xml 对应的 Java 对象。\u003c/p\u003e\n\u003cp\u003e【示例】UserMapper.java 文件\u003c/p\u003e\n\u003cfigure class=\"highlight java\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e8\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e9\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e10\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e11\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e12\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e13\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"keyword\"\u003epublic\u003c/span\u003e \u003cspan class=\"keyword\"\u003einterface\u003c/span\u003e \u003cspan class=\"title class_\"\u003eUserMapper\u003c/span\u003e {\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"type\"\u003eint\u003c/span\u003e \u003cspan class=\"title function_\"\u003edeleteByPrimaryKey\u003c/span\u003e\u003cspan class=\"params\"\u003e(Long id)\u003c/span\u003e;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"type\"\u003eint\u003c/span\u003e \u003cspan class=\"title function_\"\u003einsert\u003c/span\u003e\u003cspan class=\"params\"\u003e(User record)\u003c/span\u003e;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    User \u003cspan class=\"title function_\"\u003eselectByPrimaryKey\u003c/span\u003e\u003cspan class=\"params\"\u003e(Long id)\u003c/span\u003e;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    List\u0026lt;User\u0026gt; \u003cspan class=\"title function_\"\u003eselectAll\u003c/span\u003e\u003cspan class=\"params\"\u003e()\u003c/span\u003e;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"type\"\u003eint\u003c/span\u003e \u003cspan class=\"title function_\"\u003eupdateByPrimaryKey\u003c/span\u003e\u003cspan class=\"params\"\u003e(User record)\u003c/span\u003e;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e}\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e对比 UserMapper.java 和 UserMapper.xml 文件，不难发现：\u003c/p\u003e\n\u003cp\u003eUserMapper.java 中的方法和 UserMapper.xml 的 CRUD 语句元素（ \u003ccode\u003e\u0026lt;insert\u0026gt;\u003c/code\u003e、\u003ccode\u003e\u0026lt;delete\u0026gt;\u003c/code\u003e、\u003ccode\u003e\u0026lt;update\u0026gt;\u003c/code\u003e、\u003ccode\u003e\u0026lt;select\u0026gt;\u003c/code\u003e）存在一一对应关系。\u003c/p\u003e\n\u003cp\u003e在 Mybatis 中，正是通过方法的全限定名，将二者绑定在一起。\u003c/p\u003e\n\u003ch4 id=\"数据实体-java\"\u003e\u003ca href=\"#数据实体-java\" class=\"headerlink\" title=\"数据实体.java\"\u003e\u003c/a\u003e数据实体.java\u003c/h4\u003e\u003cp\u003e【示例】User.java 文件\u003c/p\u003e\n\u003cfigure class=\"highlight java\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e8\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e9\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e10\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e11\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e12\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"keyword\"\u003epublic\u003c/span\u003e \u003cspan class=\"keyword\"\u003eclass\u003c/span\u003e \u003cspan class=\"title class_\"\u003eUser\u003c/span\u003e {\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"keyword\"\u003eprivate\u003c/span\u003e Long id;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"keyword\"\u003eprivate\u003c/span\u003e String name;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"keyword\"\u003eprivate\u003c/span\u003e Integer age;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"keyword\"\u003eprivate\u003c/span\u003e String address;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"keyword\"\u003eprivate\u003c/span\u003e String email;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e}\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e\u003ccode\u003e\u0026lt;insert\u0026gt;\u003c/code\u003e、\u003ccode\u003e\u0026lt;delete\u0026gt;\u003c/code\u003e、\u003ccode\u003e\u0026lt;update\u0026gt;\u003c/code\u003e、\u003ccode\u003e\u0026lt;select\u0026gt;\u003c/code\u003e 的 \u003ccode\u003eparameterType\u003c/code\u003e 属性以及 \u003ccode\u003e\u0026lt;resultMap\u0026gt;\u003c/code\u003e 的 \u003ccode\u003etype\u003c/code\u003e 属性都可能会绑定到数据实体。这样就可以把 JDBC 操作的输入输出和 JavaBean 结合起来，更加方便、易于理解。\u003c/p\u003e\n\u003ch3 id=\"测试程序\"\u003e\u003ca href=\"#测试程序\" class=\"headerlink\" title=\"测试程序\"\u003e\u003c/a\u003e测试程序\u003c/h3\u003e\u003cp\u003e【示例】MybatisDemo.java 文件\u003c/p\u003e\n\u003cfigure class=\"highlight java\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e8\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e9\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e10\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e11\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e12\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e13\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e14\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e15\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e16\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e17\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e18\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e19\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e20\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e21\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e22\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"keyword\"\u003epublic\u003c/span\u003e \u003cspan class=\"keyword\"\u003eclass\u003c/span\u003e \u003cspan class=\"title class_\"\u003eMybatisDemo\u003c/span\u003e {\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"keyword\"\u003epublic\u003c/span\u003e \u003cspan class=\"keyword\"\u003estatic\u003c/span\u003e \u003cspan class=\"keyword\"\u003evoid\u003c/span\u003e \u003cspan class=\"title function_\"\u003emain\u003c/span\u003e\u003cspan class=\"params\"\u003e(String[] args)\u003c/span\u003e \u003cspan class=\"keyword\"\u003ethrows\u003c/span\u003e Exception {\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        \u003cspan class=\"comment\"\u003e// 1. 加载 Mybatis 配置文件，创建 SqlSessionFactory\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        \u003cspan class=\"comment\"\u003e// 注：在实际的应用中，SqlSessionFactory 应该是单例\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        \u003cspan class=\"type\"\u003eInputStream\u003c/span\u003e \u003cspan class=\"variable\"\u003einputStream\u003c/span\u003e \u003cspan class=\"operator\"\u003e=\u003c/span\u003e Resources.getResourceAsStream(\u003cspan class=\"string\"\u003e\u0026#34;Mybatis/Mybatis-config.xml\u0026#34;\u003c/span\u003e);\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        \u003cspan class=\"type\"\u003eSqlSessionFactoryBuilder\u003c/span\u003e \u003cspan class=\"variable\"\u003ebuilder\u003c/span\u003e \u003cspan class=\"operator\"\u003e=\u003c/span\u003e \u003cspan class=\"keyword\"\u003enew\u003c/span\u003e \u003cspan class=\"title class_\"\u003eSqlSessionFactoryBuilder\u003c/span\u003e();\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        \u003cspan class=\"type\"\u003eSqlSessionFactory\u003c/span\u003e \u003cspan class=\"variable\"\u003efactory\u003c/span\u003e \u003cspan class=\"operator\"\u003e=\u003c/span\u003e builder.build(inputStream);\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        \u003cspan class=\"comment\"\u003e// 2. 创建一个 SqlSession 实例，进行数据库操作\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        \u003cspan class=\"type\"\u003eSqlSession\u003c/span\u003e \u003cspan class=\"variable\"\u003esqlSession\u003c/span\u003e \u003cspan class=\"operator\"\u003e=\u003c/span\u003e factory.openSession();\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        \u003cspan class=\"comment\"\u003e// 3. Mapper 映射并执行\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        \u003cspan class=\"type\"\u003eLong\u003c/span\u003e \u003cspan class=\"variable\"\u003eparams\u003c/span\u003e \u003cspan class=\"operator\"\u003e=\u003c/span\u003e \u003cspan class=\"number\"\u003e1L\u003c/span\u003e;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        List\u0026lt;User\u0026gt; list = sqlSession.selectList(\u003cspan class=\"string\"\u003e\u0026#34;io.github.dunwu.spring.orm.mapper.UserMapper.selectByPrimaryKey\u0026#34;\u003c/span\u003e, params);\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        \u003cspan class=\"keyword\"\u003efor\u003c/span\u003e (User user : list) {\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e            System.out.println(\u003cspan class=\"string\"\u003e\u0026#34;user name: \u0026#34;\u003c/span\u003e + user.getName());\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        }\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        \u003cspan class=\"comment\"\u003e// 输出：user name: 张三\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    }\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e}\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003e说明：\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003eSqlSession\u003c/code\u003e 接口是 Mybatis API 核心中的核心，它代表了 Mybatis 和数据库的一次完整会话。\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eMybatis 会解析配置，并根据配置创建 \u003ccode\u003eSqlSession\u003c/code\u003e 。\u003c/li\u003e\n\u003cli\u003e然后，Mybatis 将 Mapper 映射为 \u003ccode\u003eSqlSession\u003c/code\u003e，然后传递参数，执行 SQL 语句并获取结果。\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/blockquote\u003e\n\u003ch2 id=\"Mybatis-生命周期\"\u003e\u003ca href=\"#Mybatis-生命周期\" class=\"headerlink\" title=\"Mybatis 生命周期\"\u003e\u003c/a\u003eMybatis 生命周期\u003c/h2\u003e\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/dunwu/images/master/snap/20210510113446.png\" alt=\"img\"/\u003e\u003c/p\u003e\n\u003ch3 id=\"SqlSessionFactoryBuilder\"\u003e\u003ca href=\"#SqlSessionFactoryBuilder\" class=\"headerlink\" title=\"SqlSessionFactoryBuilder\"\u003e\u003c/a\u003eSqlSessionFactoryBuilder\u003c/h3\u003e\u003ch4 id=\"SqlSessionFactoryBuilder-的职责\"\u003e\u003ca href=\"#SqlSessionFactoryBuilder-的职责\" class=\"headerlink\" title=\"SqlSessionFactoryBuilder 的职责\"\u003e\u003c/a\u003eSqlSessionFactoryBuilder 的职责\u003c/h4\u003e\u003cp\u003e\u003cstrong\u003e\u003ccode\u003eSqlSessionFactoryBuilder\u003c/code\u003e 负责创建 \u003ccode\u003eSqlSessionFactory\u003c/code\u003e 实例\u003c/strong\u003e。\u003ccode\u003eSqlSessionFactoryBuilder\u003c/code\u003e 可以从 XML 配置文件或一个预先定制的 \u003ccode\u003eConfiguration\u003c/code\u003e 的实例构建出 \u003ccode\u003eSqlSessionFactory\u003c/code\u003e 的实例。\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003eConfiguration\u003c/code\u003e 类包含了对一个 \u003ccode\u003eSqlSessionFactory\u003c/code\u003e 实例你可能关心的所有内容。\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/dunwu/images/master/snap/20210508173040.png\" alt=\"img\"/\u003e\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003eSqlSessionFactoryBuilder\u003c/code\u003e 应用了建造者设计模式，它有五个 \u003ccode\u003ebuild\u003c/code\u003e 方法，允许你通过不同的资源创建 \u003ccode\u003eSqlSessionFactory\u003c/code\u003e 实例。\u003c/p\u003e\n\u003cfigure class=\"highlight java\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003eSqlSessionFactory \u003cspan class=\"title function_\"\u003ebuild\u003c/span\u003e\u003cspan class=\"params\"\u003e(InputStream inputStream)\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eSqlSessionFactory \u003cspan class=\"title function_\"\u003ebuild\u003c/span\u003e\u003cspan class=\"params\"\u003e(InputStream inputStream, String environment)\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eSqlSessionFactory \u003cspan class=\"title function_\"\u003ebuild\u003c/span\u003e\u003cspan class=\"params\"\u003e(InputStream inputStream, Properties properties)\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eSqlSessionFactory \u003cspan class=\"title function_\"\u003ebuild\u003c/span\u003e\u003cspan class=\"params\"\u003e(InputStream inputStream, String env, Properties props)\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eSqlSessionFactory \u003cspan class=\"title function_\"\u003ebuild\u003c/span\u003e\u003cspan class=\"params\"\u003e(Configuration config)\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003ch4 id=\"SqlSessionFactoryBuilder-的生命周期\"\u003e\u003ca href=\"#SqlSessionFactoryBuilder-的生命周期\" class=\"headerlink\" title=\"SqlSessionFactoryBuilder 的生命周期\"\u003e\u003c/a\u003eSqlSessionFactoryBuilder 的生命周期\u003c/h4\u003e\u003cp\u003e\u003ccode\u003eSqlSessionFactoryBuilder\u003c/code\u003e 可以被实例化、使用和丢弃，一旦创建了 \u003ccode\u003eSqlSessionFactory\u003c/code\u003e，就不再需要它了。 因此 \u003ccode\u003eSqlSessionFactoryBuilder\u003c/code\u003e 实例的最佳作用域是方法作用域（也就是局部方法变量）。你可以重用 \u003ccode\u003eSqlSessionFactoryBuilder\u003c/code\u003e 来创建多个 \u003ccode\u003eSqlSessionFactory\u003c/code\u003e 实例，但最好还是不要一直保留着它，以保证所有的 XML 解析资源可以被释放给更重要的事情。\u003c/p\u003e\n\u003ch3 id=\"SqlSessionFactory\"\u003e\u003ca href=\"#SqlSessionFactory\" class=\"headerlink\" title=\"SqlSessionFactory\"\u003e\u003c/a\u003eSqlSessionFactory\u003c/h3\u003e\u003ch4 id=\"SqlSessionFactory-职责\"\u003e\u003ca href=\"#SqlSessionFactory-职责\" class=\"headerlink\" title=\"SqlSessionFactory 职责\"\u003e\u003c/a\u003eSqlSessionFactory 职责\u003c/h4\u003e\u003cp\u003e\u003cstrong\u003e\u003ccode\u003eSqlSessionFactory\u003c/code\u003e 负责创建 \u003ccode\u003eSqlSession\u003c/code\u003e 实例。\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/dunwu/images/master/snap/20210510105641.png\" alt=\"img\"/\u003e\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003eSqlSessionFactory\u003c/code\u003e 应用了工厂设计模式，它提供了一组方法，用于创建 SqlSession 实例。\u003c/p\u003e\n\u003cfigure class=\"highlight java\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e8\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e9\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003eSqlSession \u003cspan class=\"title function_\"\u003eopenSession\u003c/span\u003e\u003cspan class=\"params\"\u003e()\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eSqlSession \u003cspan class=\"title function_\"\u003eopenSession\u003c/span\u003e\u003cspan class=\"params\"\u003e(\u003cspan class=\"type\"\u003eboolean\u003c/span\u003e autoCommit)\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eSqlSession \u003cspan class=\"title function_\"\u003eopenSession\u003c/span\u003e\u003cspan class=\"params\"\u003e(Connection connection)\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eSqlSession \u003cspan class=\"title function_\"\u003eopenSession\u003c/span\u003e\u003cspan class=\"params\"\u003e(TransactionIsolationLevel level)\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eSqlSession \u003cspan class=\"title function_\"\u003eopenSession\u003c/span\u003e\u003cspan class=\"params\"\u003e(ExecutorType execType, TransactionIsolationLevel level)\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eSqlSession \u003cspan class=\"title function_\"\u003eopenSession\u003c/span\u003e\u003cspan class=\"params\"\u003e(ExecutorType execType)\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eSqlSession \u003cspan class=\"title function_\"\u003eopenSession\u003c/span\u003e\u003cspan class=\"params\"\u003e(ExecutorType execType, \u003cspan class=\"type\"\u003eboolean\u003c/span\u003e autoCommit)\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eSqlSession \u003cspan class=\"title function_\"\u003eopenSession\u003c/span\u003e\u003cspan class=\"params\"\u003e(ExecutorType execType, Connection connection)\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eConfiguration \u003cspan class=\"title function_\"\u003egetConfiguration\u003c/span\u003e\u003cspan class=\"params\"\u003e()\u003c/span\u003e;\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e方法说明：\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e默认的 \u003ccode\u003eopenSession()\u003c/code\u003e 方法没有参数，它会创建具备如下特性的 \u003ccode\u003eSqlSession\u003c/code\u003e：\u003cul\u003e\n\u003cli\u003e事务作用域将会开启（也就是不自动提交）。\u003c/li\u003e\n\u003cli\u003e将由当前环境配置的 \u003ccode\u003eDataSource\u003c/code\u003e 实例中获取 \u003ccode\u003eConnection\u003c/code\u003e 对象。\u003c/li\u003e\n\u003cli\u003e事务隔离级别将会使用驱动或数据源的默认设置。\u003c/li\u003e\n\u003cli\u003e预处理语句不会被复用，也不会批量处理更新。\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eTransactionIsolationLevel\u003c/code\u003e 表示事务隔离级别，它对应着 JDBC 的五个事务隔离级别。\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eExecutorType\u003c/code\u003e 枚举类型定义了三个值:\u003cul\u003e\n\u003cli\u003e\u003ccode\u003eExecutorType.SIMPLE\u003c/code\u003e：该类型的执行器没有特别的行为。它为每个语句的执行创建一个新的预处理语句。\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eExecutorType.REUSE\u003c/code\u003e：该类型的执行器会复用预处理语句。\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eExecutorType.BATCH\u003c/code\u003e：该类型的执行器会批量执行所有更新语句，如果 SELECT 在多个更新中间执行，将在必要时将多条更新语句分隔开来，以方便理解。\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch4 id=\"SqlSessionFactory-生命周期\"\u003e\u003ca href=\"#SqlSessionFactory-生命周期\" class=\"headerlink\" title=\"SqlSessionFactory 生命周期\"\u003e\u003c/a\u003eSqlSessionFactory 生命周期\u003c/h4\u003e\u003cp\u003e\u003ccode\u003eSqlSessionFactory\u003c/code\u003e 应该以单例形式在应用的运行期间一直存在。\u003c/p\u003e\n\u003ch3 id=\"SqlSession\"\u003e\u003ca href=\"#SqlSession\" class=\"headerlink\" title=\"SqlSession\"\u003e\u003c/a\u003eSqlSession\u003c/h3\u003e\u003ch4 id=\"SqlSession-职责\"\u003e\u003ca href=\"#SqlSession-职责\" class=\"headerlink\" title=\"SqlSession 职责\"\u003e\u003c/a\u003eSqlSession 职责\u003c/h4\u003e\u003cp\u003e\u003cstrong\u003eMybatis 的主要 Java 接口就是 \u003ccode\u003eSqlSession\u003c/code\u003e。它包含了所有执行语句，获取映射器和管理事务等方法。\u003c/strong\u003e\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e详细内容可以参考：“ \u003ca target=\"_blank\" rel=\"noopener\" href=\"http://www.mybatis.org/Mybatis-3/zh/java-api.html#sqlSessions\"\u003eMybatis 官方文档之 SqlSessions\u003c/a\u003e ” 。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003eSqlSession 类的方法可以按照下图进行大致分类：\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/dunwu/images/master/snap/20210510110638.png\" alt=\"img\"/\u003e\u003c/p\u003e\n\u003ch4 id=\"SqlSession-生命周期\"\u003e\u003ca href=\"#SqlSession-生命周期\" class=\"headerlink\" title=\"SqlSession 生命周期\"\u003e\u003c/a\u003eSqlSession 生命周期\u003c/h4\u003e\u003cp\u003e\u003ccode\u003eSqlSessions\u003c/code\u003e 是由 \u003ccode\u003eSqlSessionFactory\u003c/code\u003e 实例创建的；而 \u003ccode\u003eSqlSessionFactory\u003c/code\u003e 是由 \u003ccode\u003eSqlSessionFactoryBuilder\u003c/code\u003e 创建的。\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e🔔 注意：当 Mybatis 与一些依赖注入框架（如 Spring 或者 Guice）同时使用时，\u003ccode\u003eSqlSessions\u003c/code\u003e 将被依赖注入框架所创建，所以你不需要使用 \u003ccode\u003eSqlSessionFactoryBuilder\u003c/code\u003e 或者 \u003ccode\u003eSqlSessionFactory\u003c/code\u003e。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003e\u003cstrong\u003e每个线程都应该有它自己的 \u003ccode\u003eSqlSession\u003c/code\u003e 实例。\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003eSqlSession\u003c/code\u003e 的实例不是线程安全的，因此是不能被共享的，所以它的最佳的作用域是请求或方法作用域。 绝对不能将 \u003ccode\u003eSqlSession\u003c/code\u003e 实例的引用放在一个类的静态域，甚至一个类的实例变量也不行。 也绝不能将 \u003ccode\u003eSqlSession\u003c/code\u003e 实例的引用放在任何类型的托管作用域中，比如 Servlet 框架中的 \u003ccode\u003eHttpSession\u003c/code\u003e。 正确在 Web 中使用 \u003ccode\u003eSqlSession\u003c/code\u003e 的场景是：每次收到的 HTTP 请求，就可以打开一个 \u003ccode\u003eSqlSession\u003c/code\u003e，返回一个响应，就关闭它。\u003c/p\u003e\n\u003cp\u003e编程模式：\u003c/p\u003e\n\u003cfigure class=\"highlight java\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"keyword\"\u003etry\u003c/span\u003e (\u003cspan class=\"type\"\u003eSqlSession\u003c/span\u003e \u003cspan class=\"variable\"\u003esession\u003c/span\u003e \u003cspan class=\"operator\"\u003e=\u003c/span\u003e sqlSessionFactory.openSession()) {\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  \u003cspan class=\"comment\"\u003e// 你的应用逻辑代码\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e}\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003ch3 id=\"映射器\"\u003e\u003ca href=\"#映射器\" class=\"headerlink\" title=\"映射器\"\u003e\u003c/a\u003e映射器\u003c/h3\u003e\u003ch4 id=\"映射器职责\"\u003e\u003ca href=\"#映射器职责\" class=\"headerlink\" title=\"映射器职责\"\u003e\u003c/a\u003e映射器职责\u003c/h4\u003e\u003cp\u003e映射器是一些由用户创建的、绑定 SQL 语句的接口。\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003eSqlSession\u003c/code\u003e 中的 \u003ccode\u003einsert\u003c/code\u003e、\u003ccode\u003eupdate\u003c/code\u003e、\u003ccode\u003edelete\u003c/code\u003e 和 \u003ccode\u003eselect\u003c/code\u003e 方法都很强大，但也有些繁琐。更通用的方式是使用映射器类来执行映射语句。\u003cstrong\u003e一个映射器类就是一个仅需声明与 \u003ccode\u003eSqlSession\u003c/code\u003e 方法相匹配的方法的接口类\u003c/strong\u003e。\u003c/p\u003e\n\u003cp\u003eMybatis 将配置文件中的每一个 \u003ccode\u003e\u0026lt;mapper\u0026gt;\u003c/code\u003e 节点抽象为一个 \u003ccode\u003eMapper\u003c/code\u003e 接口，而这个接口中声明的方法和跟 \u003ccode\u003e\u0026lt;mapper\u0026gt;\u003c/code\u003e 节点中的 \u003ccode\u003e\u0026lt;select|update|delete|insert\u0026gt;\u003c/code\u003e 节点相对应，即 \u003ccode\u003e\u0026lt;select|update|delete|insert\u0026gt;\u003c/code\u003e 节点的 id 值为 Mapper 接口中的方法名称，\u003ccode\u003eparameterType\u003c/code\u003e 值表示 Mapper 对应方法的入参类型，而 \u003ccode\u003eresultMap\u003c/code\u003e 值则对应了 Mapper 接口表示的返回值类型或者返回结果集的元素类型。\u003c/p\u003e\n\u003cp\u003eMybatis 会根据相应的接口声明的方法信息，通过动态代理机制生成一个 Mapper 实例；Mybatis 会根据这个方法的方法名和参数类型，确定 Statement Id，然后和 SqlSession 进行映射，底层还是通过 SqlSession 完成和数据库的交互。\u003c/p\u003e\n\u003cp\u003e下面的示例展示了一些方法签名以及它们是如何映射到 \u003ccode\u003eSqlSession\u003c/code\u003e 上的。\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/dunwu/images/master/snap/20210512111723.png\" alt=\"img\"/\u003e\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e\u003cstrong\u003e注意\u003c/strong\u003e\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e映射器接口不需要去实现任何接口或继承自任何类。只要方法可以被唯一标识对应的映射语句就可以了。\u003c/li\u003e\n\u003cli\u003e映射器接口可以继承自其他接口。当使用 XML 来构建映射器接口时要保证语句被包含在合适的命名空间中。而且，唯一的限制就是你不能在两个继承关系的接口中拥有相同的方法签名（潜在的危险做法不可取）。\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/blockquote\u003e\n\u003ch4 id=\"映射器生命周期\"\u003e\u003ca href=\"#映射器生命周期\" class=\"headerlink\" title=\"映射器生命周期\"\u003e\u003c/a\u003e映射器生命周期\u003c/h4\u003e\u003cp\u003e映射器接口的实例是从 \u003ccode\u003eSqlSession\u003c/code\u003e 中获得的。因此从技术层面讲，任何映射器实例的最大作用域是和请求它们的 \u003ccode\u003eSqlSession\u003c/code\u003e 相同的。尽管如此，映射器实例的最佳作用域是方法作用域。 也就是说，映射器实例应该在调用它们的方法中被请求，用过之后即可丢弃。\u003c/p\u003e\n\u003cp\u003e编程模式：\u003c/p\u003e\n\u003cfigure class=\"highlight java\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"keyword\"\u003etry\u003c/span\u003e (\u003cspan class=\"type\"\u003eSqlSession\u003c/span\u003e \u003cspan class=\"variable\"\u003esession\u003c/span\u003e \u003cspan class=\"operator\"\u003e=\u003c/span\u003e sqlSessionFactory.openSession()) {\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  \u003cspan class=\"type\"\u003eBlogMapper\u003c/span\u003e \u003cspan class=\"variable\"\u003emapper\u003c/span\u003e \u003cspan class=\"operator\"\u003e=\u003c/span\u003e session.getMapper(BlogMapper.class);\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  \u003cspan class=\"comment\"\u003e// 你的应用逻辑代码\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e}\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003cstrong\u003e映射器注解\u003c/strong\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eMybatis 是一个 XML 驱动的框架。配置信息是基于 XML 的，而且映射语句也是定义在 XML 中的。Mybatis 3 以后，支持注解配置。注解配置基于配置 API；而配置 API 基于 XML 配置。\u003c/p\u003e\n\u003cp\u003eMybatis 支持诸如 \u003ccode\u003e@Insert\u003c/code\u003e、\u003ccode\u003e@Update\u003c/code\u003e、\u003ccode\u003e@Delete\u003c/code\u003e、\u003ccode\u003e@Select\u003c/code\u003e、\u003ccode\u003e@Result\u003c/code\u003e 等注解。\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e详细内容请参考：\u003ca target=\"_blank\" rel=\"noopener\" href=\"http://www.mybatis.org/Mybatis-3/zh/java-api.html#sqlSessions\"\u003eMybatis 官方文档之 sqlSessions\u003c/a\u003e，其中列举了 Mybatis 支持的注解清单，以及基本用法。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003ch2 id=\"Mybatis-的架构\"\u003e\u003ca href=\"#Mybatis-的架构\" class=\"headerlink\" title=\"Mybatis 的架构\"\u003e\u003c/a\u003eMybatis 的架构\u003c/h2\u003e\u003cp\u003e从 Mybatis 代码实现的角度来看，Mybatis 的主要组件有以下几个：\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003cstrong\u003eSqlSession\u003c/strong\u003e - 作为 Mybatis 工作的主要顶层 API，表示和数据库交互的会话，完成必要数据库增删改查功能。\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eExecutor\u003c/strong\u003e - Mybatis 执行器，是 Mybatis 调度的核心，负责 SQL 语句的生成和查询缓存的维护。\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eStatementHandler\u003c/strong\u003e - 封装了 JDBC Statement 操作，负责对 JDBC statement 的操作，如设置参数、将 Statement 结果集转换成 List 集合。\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eParameterHandler\u003c/strong\u003e - 负责对用户传递的参数转换成 JDBC Statement 所需要的参数。\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eResultSetHandler\u003c/strong\u003e - 负责将 JDBC 返回的 ResultSet 结果集对象转换成 List 类型的集合。\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eTypeHandler\u003c/strong\u003e - 负责 java 数据类型和 jdbc 数据类型之间的映射和转换。\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eMappedStatement\u003c/strong\u003e - \u003ccode\u003eMappedStatement\u003c/code\u003e 维护了一条 \u003ccode\u003e\u0026lt;select|update|delete|insert\u0026gt;\u003c/code\u003e 节点的封装。\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eSqlSource\u003c/strong\u003e - 负责根据用户传递的 parameterObject，动态地生成 SQL 语句，将信息封装到 BoundSql 对象中，并返回。\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eBoundSql\u003c/strong\u003e - 表示动态生成的 SQL 语句以及相应的参数信息。\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eConfiguration\u003c/strong\u003e - Mybatis 所有的配置信息都维持在 Configuration 对象之中。\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e这些组件的架构层次如下：\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/dunwu/images/master/snap/20210512114852.png\" alt=\"img\"/\u003e\u003c/p\u003e\n\u003ch3 id=\"配置层\"\u003e\u003ca href=\"#配置层\" class=\"headerlink\" title=\"配置层\"\u003e\u003c/a\u003e配置层\u003c/h3\u003e\u003cp\u003e配置层决定了 Mybatis 的工作方式。\u003c/p\u003e\n\u003cp\u003eMybatis 提供了两种配置方式：\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e基于 XML 配置文件的方式\u003c/li\u003e\n\u003cli\u003e基于 Java API 的方式\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e\u003ccode\u003eSqlSessionFactoryBuilder\u003c/code\u003e 会根据配置创建 \u003ccode\u003eSqlSessionFactory\u003c/code\u003e ；\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003eSqlSessionFactory\u003c/code\u003e 负责创建 \u003ccode\u003eSqlSessions\u003c/code\u003e 。\u003c/p\u003e\n\u003ch3 id=\"接口层\"\u003e\u003ca href=\"#接口层\" class=\"headerlink\" title=\"接口层\"\u003e\u003c/a\u003e接口层\u003c/h3\u003e\u003cp\u003e接口层负责和数据库交互的方式。\u003c/p\u003e\n\u003cp\u003eMybatis 和数据库的交互有两种方式：\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003cstrong\u003e使用 SqlSession\u003c/strong\u003e：SqlSession 封装了所有执行语句，获取映射器和管理事务的方法。\u003cul\u003e\n\u003cli\u003e用户只需要传入 Statement Id 和查询参数给 SqlSession 对象，就可以很方便的和数据库进行交互。\u003c/li\u003e\n\u003cli\u003e这种方式的缺点是不符合面向对象编程的范式。\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003e使用 Mapper 接口\u003c/strong\u003e：Mybatis 会根据相应的接口声明的方法信息，通过动态代理机制生成一个 Mapper 实例；Mybatis 会根据这个方法的方法名和参数类型，确定 Statement Id，然后和 SqlSession 进行映射，底层还是通过 SqlSession 完成和数据库的交互。\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"数据处理层\"\u003e\u003ca href=\"#数据处理层\" class=\"headerlink\" title=\"数据处理层\"\u003e\u003c/a\u003e数据处理层\u003c/h3\u003e\u003cp\u003e数据处理层可以说是 Mybatis 的核心，从大的方面上讲，它要完成两个功能：\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e根据传参 \u003ccode\u003eStatement\u003c/code\u003e 和参数构建动态 SQL 语句\u003cul\u003e\n\u003cli\u003e动态语句生成可以说是 Mybatis 框架非常优雅的一个设计，Mybatis 通过传入的参数值，\u003cstrong\u003e使用 Ognl 来动态地构造 SQL 语句\u003c/strong\u003e，使得 Mybatis 有很强的灵活性和扩展性。\u003c/li\u003e\n\u003cli\u003e参数映射指的是对于 java 数据类型和 jdbc 数据类型之间的转换：这里有包括两个过程：查询阶段，我们要将 java 类型的数据，转换成 jdbc 类型的数据，通过 \u003ccode\u003epreparedStatement.setXXX()\u003c/code\u003e 来设值；另一个就是对 resultset 查询结果集的 jdbcType 数据转换成 java 数据类型。\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e执行 SQL 语句以及处理响应结果集 ResultSet\u003cul\u003e\n\u003cli\u003e动态 SQL 语句生成之后，Mybatis 将执行 SQL 语句，并将可能返回的结果集转换成 \u003ccode\u003eList\u0026lt;E\u0026gt;\u003c/code\u003e 列表。\u003c/li\u003e\n\u003cli\u003eMybatis 在对结果集的处理中，支持结果集关系一对多和多对一的转换，并且有两种支持方式，一种为嵌套查询语句的查询，还有一种是嵌套结果集的查询。\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"框架支撑层\"\u003e\u003ca href=\"#框架支撑层\" class=\"headerlink\" title=\"框架支撑层\"\u003e\u003c/a\u003e框架支撑层\u003c/h3\u003e\u003cul\u003e\n\u003cli\u003e\u003cp\u003e\u003cstrong\u003e事务管理机制\u003c/strong\u003e - Mybatis 将事务抽象成了 Transaction 接口。Mybatis 的事务管理分为两种形式：\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e使用 JDBC 的事务管理机制：即利用 \u003ccode\u003ejava.sql.Connection\u003c/code\u003e 对象完成对事务的提交（\u003ccode\u003ecommit\u003c/code\u003e）、回滚（\u003ccode\u003erollback\u003c/code\u003e）、关闭（\u003ccode\u003eclose\u003c/code\u003e）等。\u003c/li\u003e\n\u003cli\u003e使用 MANAGED 的事务管理机制：Mybatis 自身不会去实现事务管理，而是让程序的容器如（JBOSS，Weblogic）来实现对事务的管理。\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e\u003cstrong\u003e连接池管理\u003c/strong\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e\u003cstrong\u003eSQL 语句的配置\u003c/strong\u003e - 支持两种方式：\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003exml 配置\u003c/li\u003e\n\u003cli\u003e注解配置\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e缓存机制 - Mybatis 采用两级缓存结构\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003cstrong\u003e一级缓存是 Session 会话级别的缓存\u003c/strong\u003e - 一级缓存又被称之为本地缓存。一般而言，一个 \u003ccode\u003eSqlSession\u003c/code\u003e 对象会使用一个 \u003ccode\u003eExecutor\u003c/code\u003e 对象来完成会话操作，\u003ccode\u003eExecutor\u003c/code\u003e 对象会维护一个 Cache 缓存，以提高查询性能。\u003cul\u003e\n\u003cli\u003e一级缓存的生命周期是 Session 会话级别的。\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003e二级缓存是 Application 应用级别的缓存\u003c/strong\u003e - 用户配置了 \u003ccode\u003e\u0026#34;cacheEnabled=true\u0026#34;\u003c/code\u003e，才会开启二级缓存。\u003cul\u003e\n\u003cli\u003e如果开启了二级缓存，\u003ccode\u003eSqlSession\u003c/code\u003e 会先使用 \u003ccode\u003eCachingExecutor\u003c/code\u003e 对象来处理查询请求。\u003ccode\u003eCachingExecutor\u003c/code\u003e 会在二级缓存中查看是否有匹配的数据，如果匹配，则直接返回缓存结果；如果缓存中没有，再交给真正的 \u003ccode\u003eExecutor\u003c/code\u003e 对象来完成查询，之后 \u003ccode\u003eCachingExecutor\u003c/code\u003e 会将真正 \u003ccode\u003eExecutor\u003c/code\u003e 返回的查询结果放置到缓存中，然后在返回给用户。\u003c/li\u003e\n\u003cli\u003e二级缓存的生命周期是应用级别的。\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/dunwu/images/master/snap/20210512185709.png\" alt=\"img\"/\u003e\u003c/p\u003e\n\u003ch2 id=\"SqlSession-内部工作机制\"\u003e\u003ca href=\"#SqlSession-内部工作机制\" class=\"headerlink\" title=\"SqlSession 内部工作机制\"\u003e\u003c/a\u003eSqlSession 内部工作机制\u003c/h2\u003e\u003cp\u003e从前文，我们已经了解了，Mybatis 封装了对数据库的访问，把对数据库的会话和事务控制放到了 SqlSession 对象中。那么具体是如何工作的呢？接下来，我们通过源码解读来进行分析。\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/dunwu/images/master/snap/20210512173437.png\" alt=\"img\"/\u003e\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003eSqlSession\u003c/code\u003e 对于 insert、update、delete、select 的内部处理机制基本上大同小异。所以，接下来，我会以一次完整的 select 查询流程为例讲解 \u003ccode\u003eSqlSession\u003c/code\u003e 内部的工作机制。相信读者如果理解了 select 的处理流程，对于其他 CRUD 操作也能做到一通百通。\u003c/p\u003e\n\u003ch3 id=\"SqlSession-子组件\"\u003e\u003ca href=\"#SqlSession-子组件\" class=\"headerlink\" title=\"SqlSession 子组件\"\u003e\u003c/a\u003eSqlSession 子组件\u003c/h3\u003e\u003cp\u003e前面的内容已经介绍了：SqlSession 是 Mybatis 的顶层接口，它提供了所有执行语句，获取映射器和管理事务等方法。\u003c/p\u003e\n\u003cp\u003e实际上，SqlSession 是通过聚合多个子组件，让每个子组件负责各自功能的方式，实现了任务的下发。\u003c/p\u003e\n\u003cp\u003e在了解各个子组件工作机制前，先让我们简单认识一下 SqlSession 的核心子组件。\u003c/p\u003e\n\u003ch4 id=\"Executor\"\u003e\u003ca href=\"#Executor\" class=\"headerlink\" title=\"Executor\"\u003e\u003c/a\u003eExecutor\u003c/h4\u003e\u003cp\u003eExecutor 即执行器，它负责生成动态 SQL 以及管理缓存。\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/dunwu/images/master/snap/20210512150000.png\" alt=\"img\"/\u003e\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003eExecutor\u003c/code\u003e 即执行器接口。\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eBaseExecutor\u003c/code\u003e 是 \u003ccode\u003eExecutor\u003c/code\u003e 的抽象类，它采用了模板方法设计模式，内置了一些共性方法，而将定制化方法留给子类去实现。\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eSimpleExecutor\u003c/code\u003e 是最简单的执行器。它只会直接执行 SQL，不会做额外的事。\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eBatchExecutor\u003c/code\u003e 是批处理执行器。它的作用是通过批处理来优化性能。值得注意的是，批量更新操作，由于内部有缓存机制，使用完后需要调用 \u003ccode\u003eflushStatements\u003c/code\u003e 来清除缓存。\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eReuseExecutor\u003c/code\u003e 是可重用的执行器。重用的对象是 \u003ccode\u003eStatement\u003c/code\u003e，也就是说，该执行器会缓存同一个 SQL 的 \u003ccode\u003eStatement\u003c/code\u003e，避免重复创建 \u003ccode\u003eStatement\u003c/code\u003e。其内部的实现是通过一个 \u003ccode\u003eHashMap\u003c/code\u003e 来维护 \u003ccode\u003eStatement\u003c/code\u003e 对象的。由于当前 \u003ccode\u003eMap\u003c/code\u003e 只在该 session 中有效，所以使用完后需要调用 \u003ccode\u003eflushStatements\u003c/code\u003e 来清除 Map。\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eCachingExecutor\u003c/code\u003e 是缓存执行器。它只在启用二级缓存时才会用到。\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch4 id=\"StatementHandler\"\u003e\u003ca href=\"#StatementHandler\" class=\"headerlink\" title=\"StatementHandler\"\u003e\u003c/a\u003eStatementHandler\u003c/h4\u003e\u003cp\u003e\u003ccode\u003eStatementHandler\u003c/code\u003e 对象负责设置 \u003ccode\u003eStatement\u003c/code\u003e 对象中的查询参数、处理 JDBC 返回的 resultSet，将 resultSet 加工为 List 集合返回。\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003eStatementHandler\u003c/code\u003e 的家族成员：\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/dunwu/images/master/snap/20210512160243.png\" alt=\"img\"/\u003e\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003eStatementHandler\u003c/code\u003e 是接口；\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eBaseStatementHandler\u003c/code\u003e 是实现 \u003ccode\u003eStatementHandler\u003c/code\u003e 的抽象类，内置一些共性方法；\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eSimpleStatementHandler\u003c/code\u003e 负责处理 \u003ccode\u003eStatement\u003c/code\u003e；\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003ePreparedStatementHandler\u003c/code\u003e 负责处理 \u003ccode\u003ePreparedStatement\u003c/code\u003e；\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eCallableStatementHandler\u003c/code\u003e 负责处理 \u003ccode\u003eCallableStatement\u003c/code\u003e。\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eRoutingStatementHandler\u003c/code\u003e 负责代理 \u003ccode\u003eStatementHandler\u003c/code\u003e 具体子类，根据 \u003ccode\u003eStatement\u003c/code\u003e 类型，选择实例化 \u003ccode\u003eSimpleStatementHandler\u003c/code\u003e、\u003ccode\u003ePreparedStatementHandler\u003c/code\u003e、\u003ccode\u003eCallableStatementHandler\u003c/code\u003e。\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch4 id=\"ParameterHandler\"\u003e\u003ca href=\"#ParameterHandler\" class=\"headerlink\" title=\"ParameterHandler\"\u003e\u003c/a\u003eParameterHandler\u003c/h4\u003e\u003cp\u003e\u003ccode\u003eParameterHandler\u003c/code\u003e 负责将传入的 Java 对象转换 JDBC 类型对象，并为 \u003ccode\u003ePreparedStatement\u003c/code\u003e 的动态 SQL 填充数值。\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003eParameterHandler\u003c/code\u003e 只有一个具体实现类，即 \u003ccode\u003eDefaultParameterHandler\u003c/code\u003e。\u003c/p\u003e\n\u003ch4 id=\"ResultSetHandler\"\u003e\u003ca href=\"#ResultSetHandler\" class=\"headerlink\" title=\"ResultSetHandler\"\u003e\u003c/a\u003eResultSetHandler\u003c/h4\u003e\u003cp\u003e\u003ccode\u003eResultSetHandler\u003c/code\u003e 负责两件事：\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e处理 \u003ccode\u003eStatement\u003c/code\u003e 执行后产生的结果集，生成结果列表\u003c/li\u003e\n\u003cli\u003e处理存储过程执行后的输出参数\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e\u003ccode\u003eResultSetHandler\u003c/code\u003e 只有一个具体实现类，即 \u003ccode\u003eDefaultResultSetHandler\u003c/code\u003e。\u003c/p\u003e\n\u003ch4 id=\"TypeHandler\"\u003e\u003ca href=\"#TypeHandler\" class=\"headerlink\" title=\"TypeHandler\"\u003e\u003c/a\u003eTypeHandler\u003c/h4\u003e\u003cp\u003eTypeHandler 负责将 Java 对象类型和 JDBC 类型进行相互转换。\u003c/p\u003e\n\u003ch3 id=\"SqlSession-和-Mapper\"\u003e\u003ca href=\"#SqlSession-和-Mapper\" class=\"headerlink\" title=\"SqlSession 和 Mapper\"\u003e\u003c/a\u003eSqlSession 和 Mapper\u003c/h3\u003e\u003cp\u003e先来回忆一下 Mybatis 完整示例章节的 测试程序部分的代码。\u003c/p\u003e\n\u003cp\u003eMybatisDemo.java 文件中的代码片段：\u003c/p\u003e\n\u003cfigure class=\"highlight java\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e8\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e9\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"comment\"\u003e// 2. 创建一个 SqlSession 实例，进行数据库操作\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"type\"\u003eSqlSession\u003c/span\u003e \u003cspan class=\"variable\"\u003esqlSession\u003c/span\u003e \u003cspan class=\"operator\"\u003e=\u003c/span\u003e factory.openSession();\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"comment\"\u003e// 3. Mapper 映射并执行\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"type\"\u003eLong\u003c/span\u003e \u003cspan class=\"variable\"\u003eparams\u003c/span\u003e \u003cspan class=\"operator\"\u003e=\u003c/span\u003e \u003cspan class=\"number\"\u003e1L\u003c/span\u003e;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eList\u0026lt;User\u0026gt; list = sqlSession.selectList(\u003cspan class=\"string\"\u003e\u0026#34;io.github.dunwu.spring.orm.mapper.UserMapper.selectByPrimaryKey\u0026#34;\u003c/span\u003e, params);\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"keyword\"\u003efor\u003c/span\u003e (User user : list) {\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    System.out.println(\u003cspan class=\"string\"\u003e\u0026#34;user name: \u0026#34;\u003c/span\u003e + user.getName());\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e}\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e示例代码中，给 sqlSession 对象的传递一个配置的 Sql 语句的 Statement Id 和参数，然后返回结果\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003eio.github.dunwu.spring.orm.mapper.UserMapper.selectByPrimaryKey\u003c/code\u003e 是配置在 \u003ccode\u003eUserMapper.xml\u003c/code\u003e 的 Statement ID，params 是 SQL 参数。\u003c/p\u003e\n\u003cp\u003eUserMapper.xml 文件中的代码片段：\u003c/p\u003e\n\u003cfigure class=\"highlight xml\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"tag\"\u003e\u0026lt;\u003cspan class=\"name\"\u003eselect\u003c/span\u003e \u003cspan class=\"attr\"\u003eid\u003c/span\u003e=\u003cspan class=\"string\"\u003e\u0026#34;selectByPrimaryKey\u0026#34;\u003c/span\u003e \u003cspan class=\"attr\"\u003eparameterType\u003c/span\u003e=\u003cspan class=\"string\"\u003e\u0026#34;java.lang.Long\u0026#34;\u003c/span\u003e \u003cspan class=\"attr\"\u003eresultMap\u003c/span\u003e=\u003cspan class=\"string\"\u003e\u0026#34;BaseResultMap\u0026#34;\u003c/span\u003e\u0026gt;\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  select id, name, age, address, email\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  from user\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  where id = #{id,jdbcType=BIGINT}\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"tag\"\u003e\u0026lt;/\u003cspan class=\"name\"\u003eselect\u003c/span\u003e\u0026gt;\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003eMybatis 通过方法的全限定名，将 SqlSession 和 Mapper 相互映射起来。\u003c/p\u003e\n\u003ch3 id=\"SqlSession-和-Executor\"\u003e\u003ca href=\"#SqlSession-和-Executor\" class=\"headerlink\" title=\"SqlSession 和 Executor\"\u003e\u003c/a\u003eSqlSession 和 Executor\u003c/h3\u003e\u003cp\u003e\u003ccode\u003eorg.apache.ibatis.session.defaults.DefaultSqlSession\u003c/code\u003e 中 \u003ccode\u003eselectList\u003c/code\u003e 方法的源码：\u003c/p\u003e\n\u003cfigure class=\"highlight java\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e8\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e9\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e10\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e11\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e12\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e13\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e14\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e15\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e16\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e17\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e18\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e19\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e20\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e21\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e22\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e23\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e@Override\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"keyword\"\u003epublic\u003c/span\u003e \u0026lt;E\u0026gt; List\u0026lt;E\u0026gt; \u003cspan class=\"title function_\"\u003eselectList\u003c/span\u003e\u003cspan class=\"params\"\u003e(String statement)\u003c/span\u003e {\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  \u003cspan class=\"keyword\"\u003ereturn\u003c/span\u003e \u003cspan class=\"built_in\"\u003ethis\u003c/span\u003e.selectList(statement, \u003cspan class=\"literal\"\u003enull\u003c/span\u003e);\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e}\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e@Override\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"keyword\"\u003epublic\u003c/span\u003e \u0026lt;E\u0026gt; List\u0026lt;E\u0026gt; \u003cspan class=\"title function_\"\u003eselectList\u003c/span\u003e\u003cspan class=\"params\"\u003e(String statement, Object parameter)\u003c/span\u003e {\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  \u003cspan class=\"keyword\"\u003ereturn\u003c/span\u003e \u003cspan class=\"built_in\"\u003ethis\u003c/span\u003e.selectList(statement, parameter, RowBounds.DEFAULT);\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e}\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e@Override\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"keyword\"\u003epublic\u003c/span\u003e \u0026lt;E\u0026gt; List\u0026lt;E\u0026gt; \u003cspan class=\"title function_\"\u003eselectList\u003c/span\u003e\u003cspan class=\"params\"\u003e(String statement, Object parameter, RowBounds rowBounds)\u003c/span\u003e {\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  \u003cspan class=\"keyword\"\u003etry\u003c/span\u003e {\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"comment\"\u003e// 1. 根据 Statement Id，在配置对象 Configuration 中查找和配置文件相对应的 MappedStatement\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"type\"\u003eMappedStatement\u003c/span\u003e \u003cspan class=\"variable\"\u003ems\u003c/span\u003e \u003cspan class=\"operator\"\u003e=\u003c/span\u003e configuration.getMappedStatement(statement);\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"comment\"\u003e// 2. 将 SQL 语句交由执行器 Executor 处理\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"keyword\"\u003ereturn\u003c/span\u003e executor.query(ms, wrapCollection(parameter), rowBounds, Executor.NO_RESULT_HANDLER);\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  } \u003cspan class=\"keyword\"\u003ecatch\u003c/span\u003e (Exception e) {\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"keyword\"\u003ethrow\u003c/span\u003e ExceptionFactory.wrapException(\u003cspan class=\"string\"\u003e\u0026#34;Error querying database.  Cause: \u0026#34;\u003c/span\u003e + e, e);\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  } \u003cspan class=\"keyword\"\u003efinally\u003c/span\u003e {\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    ErrorContext.instance().reset();\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  }\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e}\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e说明：\u003c/p\u003e\n\u003cp\u003eMybatis 所有的配置信息都维持在 \u003ccode\u003eConfiguration\u003c/code\u003e 对象之中。中维护了一个 \u003ccode\u003eMap\u0026lt;String, MappedStatement\u0026gt;\u003c/code\u003e 对象。其中，key 为 Mapper 方法的全限定名（对于本例而言，key 就是 \u003ccode\u003eio.github.dunwu.spring.orm.mapper.UserMapper.selectByPrimaryKey\u003c/code\u003e ），value 为 \u003ccode\u003eMappedStatement\u003c/code\u003e 对象。所以，传入 Statement Id 就可以从 Map 中找到对应的 \u003ccode\u003eMappedStatement\u003c/code\u003e。\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003eMappedStatement\u003c/code\u003e 维护了一个 Mapper 方法的元数据信息，其数据组织可以参考下面的 debug 截图：\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/dunwu/images/master/snap/20210511150650.png\" alt=\"img\"/\u003e\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e小结：\u003c/p\u003e\n\u003cp\u003e通过 “SqlSession 和 Mapper” 以及 “SqlSession 和 Executor” 这两节，我们已经知道：\u003c/p\u003e\n\u003cp\u003eSqlSession 的职能是：根据 Statement ID, 在 \u003ccode\u003eConfiguration\u003c/code\u003e 中获取到对应的 \u003ccode\u003eMappedStatement\u003c/code\u003e 对象，然后调用 \u003ccode\u003eExecutor\u003c/code\u003e 来执行具体的操作。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003ch3 id=\"Executor-工作流程\"\u003e\u003ca href=\"#Executor-工作流程\" class=\"headerlink\" title=\"Executor 工作流程\"\u003e\u003c/a\u003eExecutor 工作流程\u003c/h3\u003e\u003cp\u003e继续上一节的流程，\u003ccode\u003eSqlSession\u003c/code\u003e 将 SQL 语句交由执行器 \u003ccode\u003eExecutor\u003c/code\u003e 处理。\u003ccode\u003eExecutor\u003c/code\u003e 又做了哪些事儿呢？\u003c/p\u003e\n\u003cp\u003e（1）执行器查询入口\u003c/p\u003e\n\u003cfigure class=\"highlight java\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"keyword\"\u003epublic\u003c/span\u003e \u0026lt;E\u0026gt; List\u0026lt;E\u0026gt; \u003cspan class=\"title function_\"\u003equery\u003c/span\u003e\u003cspan class=\"params\"\u003e(MappedStatement ms, Object parameter, RowBounds rowBounds, ResultHandler resultHandler)\u003c/span\u003e \u003cspan class=\"keyword\"\u003ethrows\u003c/span\u003e SQLException {\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\t\u003cspan class=\"comment\"\u003e// 1. 根据传参，动态生成需要执行的 SQL 语句，用 BoundSql 对象表示\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"type\"\u003eBoundSql\u003c/span\u003e \u003cspan class=\"variable\"\u003eboundSql\u003c/span\u003e \u003cspan class=\"operator\"\u003e=\u003c/span\u003e ms.getBoundSql(parameter);\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"comment\"\u003e// 2. 根据传参，创建一个缓存Key\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"type\"\u003eCacheKey\u003c/span\u003e \u003cspan class=\"variable\"\u003ekey\u003c/span\u003e \u003cspan class=\"operator\"\u003e=\u003c/span\u003e createCacheKey(ms, parameter, rowBounds, boundSql);\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"keyword\"\u003ereturn\u003c/span\u003e query(ms, parameter, rowBounds, resultHandler, key, boundSql);\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e }\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e执行器查询入口主要做两件事：\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003cstrong\u003e生成动态 SQL\u003c/strong\u003e：根据传参，动态生成需要执行的 SQL 语句，用 BoundSql 对象表示。\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003e管理缓存\u003c/strong\u003e：根据传参，创建一个缓存 Key。\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e（2）执行器查询第二入口\u003c/p\u003e\n\u003cfigure class=\"highlight java\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e8\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e9\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e10\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e11\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e12\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e13\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e14\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e15\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e16\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e17\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e18\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e19\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e20\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e@SuppressWarnings(\u0026#34;unchecked\u0026#34;)\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e@Override\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"keyword\"\u003epublic\u003c/span\u003e \u0026lt;E\u0026gt; List\u0026lt;E\u0026gt; \u003cspan class=\"title function_\"\u003equery\u003c/span\u003e\u003cspan class=\"params\"\u003e(MappedStatement ms, Object parameter, RowBounds rowBounds, ResultHandler resultHandler, CacheKey key, BoundSql boundSql)\u003c/span\u003e \u003cspan class=\"keyword\"\u003ethrows\u003c/span\u003e SQLException {\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  \u003cspan class=\"comment\"\u003e// 略\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  List\u0026lt;E\u0026gt; list;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  \u003cspan class=\"keyword\"\u003etry\u003c/span\u003e {\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    queryStack++;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    list = resultHandler == \u003cspan class=\"literal\"\u003enull\u003c/span\u003e ? (List\u0026lt;E\u0026gt;) localCache.getObject(key) : \u003cspan class=\"literal\"\u003enull\u003c/span\u003e;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"comment\"\u003e// 3. 缓存中有值，则直接从缓存中取数据；否则，查询数据库\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"keyword\"\u003eif\u003c/span\u003e (list != \u003cspan class=\"literal\"\u003enull\u003c/span\u003e) {\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e      handleLocallyCachedOutputParameters(ms, key, parameter, boundSql);\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    } \u003cspan class=\"keyword\"\u003eelse\u003c/span\u003e {\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e      list = queryFromDatabase(ms, parameter, rowBounds, resultHandler, key, boundSql);\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    }\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  } \u003cspan class=\"keyword\"\u003efinally\u003c/span\u003e {\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    queryStack--;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  }\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  \u003cspan class=\"comment\"\u003e// 略\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  \u003cspan class=\"keyword\"\u003ereturn\u003c/span\u003e list;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e}\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e实际查询方法主要的职能是判断缓存 key 是否能命中缓存：\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e命中，则将缓存中数据返回；\u003c/li\u003e\n\u003cli\u003e不命中，则查询数据库：\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e（3）查询数据库\u003c/p\u003e\n\u003cfigure class=\"highlight java\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e8\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e9\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e10\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e11\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e12\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e13\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e14\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e15\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"keyword\"\u003eprivate\u003c/span\u003e \u0026lt;E\u0026gt; List\u0026lt;E\u0026gt; \u003cspan class=\"title function_\"\u003equeryFromDatabase\u003c/span\u003e\u003cspan class=\"params\"\u003e(MappedStatement ms, Object parameter, RowBounds rowBounds, ResultHandler resultHandler, CacheKey key, BoundSql boundSql)\u003c/span\u003e \u003cspan class=\"keyword\"\u003ethrows\u003c/span\u003e SQLException {\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  List\u0026lt;E\u0026gt; list;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  localCache.putObject(key, EXECUTION_PLACEHOLDER);\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  \u003cspan class=\"keyword\"\u003etry\u003c/span\u003e {\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"comment\"\u003e// 4. 执行查询，获取 List 结果，并将查询的结果更新本地缓存中\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    list = doQuery(ms, parameter, rowBounds, resultHandler, boundSql);\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  } \u003cspan class=\"keyword\"\u003efinally\u003c/span\u003e {\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    localCache.removeObject(key);\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  }\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  localCache.putObject(key, list);\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  \u003cspan class=\"keyword\"\u003eif\u003c/span\u003e (ms.getStatementType() == StatementType.CALLABLE) {\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    localOutputParameterCache.putObject(key, parameter);\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  }\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  \u003cspan class=\"keyword\"\u003ereturn\u003c/span\u003e list;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e}\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e\u003ccode\u003equeryFromDatabase\u003c/code\u003e 方法的职责是调用 doQuery，向数据库发起查询，并将返回的结果更新到本地缓存。\u003c/p\u003e\n\u003cp\u003e（4）实际查询方法\u003c/p\u003e\n\u003cp\u003eSimpleExecutor 类的 doQuery()方法实现\u003c/p\u003e\n\u003cfigure class=\"highlight java\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e8\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e9\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e10\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e11\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e12\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e13\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e14\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e15\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e@Override\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"keyword\"\u003epublic\u003c/span\u003e \u0026lt;E\u0026gt; List\u0026lt;E\u0026gt; \u003cspan class=\"title function_\"\u003edoQuery\u003c/span\u003e\u003cspan class=\"params\"\u003e(MappedStatement ms, Object parameter, RowBounds rowBounds, ResultHandler resultHandler, BoundSql boundSql)\u003c/span\u003e \u003cspan class=\"keyword\"\u003ethrows\u003c/span\u003e SQLException {\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  \u003cspan class=\"type\"\u003eStatement\u003c/span\u003e \u003cspan class=\"variable\"\u003estmt\u003c/span\u003e \u003cspan class=\"operator\"\u003e=\u003c/span\u003e \u003cspan class=\"literal\"\u003enull\u003c/span\u003e;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  \u003cspan class=\"keyword\"\u003etry\u003c/span\u003e {\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"type\"\u003eConfiguration\u003c/span\u003e \u003cspan class=\"variable\"\u003econfiguration\u003c/span\u003e \u003cspan class=\"operator\"\u003e=\u003c/span\u003e ms.getConfiguration();\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"comment\"\u003e// 5. 根据既有的参数，创建StatementHandler对象来执行查询操作\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"type\"\u003eStatementHandler\u003c/span\u003e \u003cspan class=\"variable\"\u003ehandler\u003c/span\u003e \u003cspan class=\"operator\"\u003e=\u003c/span\u003e configuration.newStatementHandler(wrapper, ms, parameter, rowBounds, resultHandler, boundSql);\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"comment\"\u003e// 6. 创建java.Sql.Statement对象，传递给StatementHandler对象\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    stmt = prepareStatement(handler, ms.getStatementLog());\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"comment\"\u003e// 7. 调用StatementHandler.query()方法，返回List结果\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"keyword\"\u003ereturn\u003c/span\u003e handler.query(stmt, resultHandler);\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  } \u003cspan class=\"keyword\"\u003efinally\u003c/span\u003e {\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    closeStatement(stmt);\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  }\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e}\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e上述的 Executor.query()方法几经转折，最后会创建一个 \u003ccode\u003eStatementHandler\u003c/code\u003e 对象，然后将必要的参数传递给 \u003ccode\u003eStatementHandler\u003c/code\u003e，使用 \u003ccode\u003eStatementHandler\u003c/code\u003e 来完成对数据库的查询，最终返回 List 结果集。\u003cbr/\u003e从上面的代码中我们可以看出，\u003ccode\u003eExecutor\u003c/code\u003e 的功能和作用是：\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003e\u003cp\u003e根据传递的参数，完成 SQL 语句的动态解析，生成 BoundSql 对象，供 \u003ccode\u003eStatementHandler\u003c/code\u003e 使用；\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e为查询创建缓存，以提高性能\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e创建 JDBC 的 \u003ccode\u003eStatement\u003c/code\u003e 连接对象，传递给 \u003ccode\u003eStatementHandler\u003c/code\u003e 对象，返回 List 查询结果。\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003eprepareStatement() 方法的实现：\u003c/p\u003e\n\u003cfigure class=\"highlight java\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e8\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"keyword\"\u003eprivate\u003c/span\u003e Statement \u003cspan class=\"title function_\"\u003eprepareStatement\u003c/span\u003e\u003cspan class=\"params\"\u003e(StatementHandler handler, Log statementLog)\u003c/span\u003e \u003cspan class=\"keyword\"\u003ethrows\u003c/span\u003e SQLException {\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  Statement stmt;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  \u003cspan class=\"type\"\u003eConnection\u003c/span\u003e \u003cspan class=\"variable\"\u003econnection\u003c/span\u003e \u003cspan class=\"operator\"\u003e=\u003c/span\u003e getConnection(statementLog);\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  stmt = handler.prepare(connection, transaction.getTimeout());\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  \u003cspan class=\"comment\"\u003e//对创建的Statement对象设置参数，即设置SQL 语句中 ? 设置为指定的参数\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  handler.parameterize(stmt);\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  \u003cspan class=\"keyword\"\u003ereturn\u003c/span\u003e stmt;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e}\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e对于 JDBC 的 \u003ccode\u003ePreparedStatement\u003c/code\u003e 类型的对象，创建的过程中，我们使用的是 SQL 语句字符串会包含 若干个? 占位符，我们其后再对占位符进行设值。\u003c/p\u003e\n\u003ch3 id=\"StatementHandler-工作流程\"\u003e\u003ca href=\"#StatementHandler-工作流程\" class=\"headerlink\" title=\"StatementHandler 工作流程\"\u003e\u003c/a\u003eStatementHandler 工作流程\u003c/h3\u003e\u003cp\u003e\u003ccode\u003eStatementHandler\u003c/code\u003e 有一个子类 \u003ccode\u003eRoutingStatementHandler\u003c/code\u003e，它负责代理其他 \u003ccode\u003eStatementHandler\u003c/code\u003e 子类的工作。\u003c/p\u003e\n\u003cp\u003e它会根据配置的 \u003ccode\u003eStatement\u003c/code\u003e 类型，选择实例化相应的 \u003ccode\u003eStatementHandler\u003c/code\u003e，然后由其代理对象完成工作。\u003c/p\u003e\n\u003cp\u003e【源码】RoutingStatementHandler\u003c/p\u003e\n\u003cfigure class=\"highlight java\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e8\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e9\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e10\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e11\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e12\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e13\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e14\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e15\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e16\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e17\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"keyword\"\u003epublic\u003c/span\u003e \u003cspan class=\"title function_\"\u003eRoutingStatementHandler\u003c/span\u003e\u003cspan class=\"params\"\u003e(Executor executor, MappedStatement ms, Object parameter, RowBounds rowBounds, ResultHandler resultHandler, BoundSql boundSql)\u003c/span\u003e {\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  \u003cspan class=\"keyword\"\u003eswitch\u003c/span\u003e (ms.getStatementType()) {\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"keyword\"\u003ecase\u003c/span\u003e STATEMENT:\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e      delegate = \u003cspan class=\"keyword\"\u003enew\u003c/span\u003e \u003cspan class=\"title class_\"\u003eSimpleStatementHandler\u003c/span\u003e(executor, ms, parameter, rowBounds, resultHandler, boundSql);\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e      \u003cspan class=\"keyword\"\u003ebreak\u003c/span\u003e;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"keyword\"\u003ecase\u003c/span\u003e PREPARED:\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e      delegate = \u003cspan class=\"keyword\"\u003enew\u003c/span\u003e \u003cspan class=\"title class_\"\u003ePreparedStatementHandler\u003c/span\u003e(executor, ms, parameter, rowBounds, resultHandler, boundSql);\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e      \u003cspan class=\"keyword\"\u003ebreak\u003c/span\u003e;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"keyword\"\u003ecase\u003c/span\u003e CALLABLE:\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e      delegate = \u003cspan class=\"keyword\"\u003enew\u003c/span\u003e \u003cspan class=\"title class_\"\u003eCallableStatementHandler\u003c/span\u003e(executor, ms, parameter, rowBounds, resultHandler, boundSql);\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e      \u003cspan class=\"keyword\"\u003ebreak\u003c/span\u003e;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"keyword\"\u003edefault\u003c/span\u003e:\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e      \u003cspan class=\"keyword\"\u003ethrow\u003c/span\u003e \u003cspan class=\"keyword\"\u003enew\u003c/span\u003e \u003cspan class=\"title class_\"\u003eExecutorException\u003c/span\u003e(\u003cspan class=\"string\"\u003e\u0026#34;Unknown statement type: \u0026#34;\u003c/span\u003e + ms.getStatementType());\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  }\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e}\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e【源码】\u003ccode\u003eRoutingStatementHandler\u003c/code\u003e 的 \u003ccode\u003eparameterize\u003c/code\u003e 方法源码\u003c/p\u003e\n\u003cp\u003e【源码】\u003ccode\u003ePreparedStatementHandler\u003c/code\u003e 的 \u003ccode\u003eparameterize\u003c/code\u003e 方法源码\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003eStatementHandler\u003c/code\u003e 使用 \u003ccode\u003eParameterHandler\u003c/code\u003e 对象来完成对 \u003ccode\u003eStatement\u003c/code\u003e 的赋值。\u003c/p\u003e\n\u003cfigure class=\"highlight java\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e@Override\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"keyword\"\u003epublic\u003c/span\u003e \u003cspan class=\"keyword\"\u003evoid\u003c/span\u003e \u003cspan class=\"title function_\"\u003eparameterize\u003c/span\u003e\u003cspan class=\"params\"\u003e(Statement statement)\u003c/span\u003e \u003cspan class=\"keyword\"\u003ethrows\u003c/span\u003e SQLException {\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  \u003cspan class=\"comment\"\u003e// 使用 ParameterHandler 对象来完成对 Statement 的设值\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  parameterHandler.setParameters((PreparedStatement) statement);\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e}\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e【源码】\u003ccode\u003eStatementHandler\u003c/code\u003e 的 \u003ccode\u003equery\u003c/code\u003e 方法源码\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003eStatementHandler\u003c/code\u003e 使用 \u003ccode\u003eResultSetHandler\u003c/code\u003e 对象来完成对 \u003ccode\u003eResultSet\u003c/code\u003e 的处理。\u003c/p\u003e\n\u003cfigure class=\"highlight java\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e@Override\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"keyword\"\u003epublic\u003c/span\u003e \u0026lt;E\u0026gt; List\u0026lt;E\u0026gt; \u003cspan class=\"title function_\"\u003equery\u003c/span\u003e\u003cspan class=\"params\"\u003e(Statement statement, ResultHandler resultHandler)\u003c/span\u003e \u003cspan class=\"keyword\"\u003ethrows\u003c/span\u003e SQLException {\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  \u003cspan class=\"type\"\u003ePreparedStatement\u003c/span\u003e \u003cspan class=\"variable\"\u003eps\u003c/span\u003e \u003cspan class=\"operator\"\u003e=\u003c/span\u003e (PreparedStatement) statement;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  ps.execute();\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  \u003cspan class=\"comment\"\u003e// 使用ResultHandler来处理ResultSet\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  \u003cspan class=\"keyword\"\u003ereturn\u003c/span\u003e resultSetHandler.handleResultSets(ps);\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e}\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003ch3 id=\"ParameterHandler-工作流程\"\u003e\u003ca href=\"#ParameterHandler-工作流程\" class=\"headerlink\" title=\"ParameterHandler 工作流程\"\u003e\u003c/a\u003eParameterHandler 工作流程\u003c/h3\u003e\u003cp\u003e【源码】\u003ccode\u003eDefaultParameterHandler\u003c/code\u003e 的 \u003ccode\u003esetParameters\u003c/code\u003e 方法\u003c/p\u003e\n\u003cfigure class=\"highlight java\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e8\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e9\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e10\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e11\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e12\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e13\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e14\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e15\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e16\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e17\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e18\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e19\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e20\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e21\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e22\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e23\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e24\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e25\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e26\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e27\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e28\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e29\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e30\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e31\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e32\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e33\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e34\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e35\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e36\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e37\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e38\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e39\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e40\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e \u003cspan class=\"meta\"\u003e@Override\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e \u003cspan class=\"keyword\"\u003epublic\u003c/span\u003e \u003cspan class=\"keyword\"\u003evoid\u003c/span\u003e \u003cspan class=\"title function_\"\u003esetParameters\u003c/span\u003e\u003cspan class=\"params\"\u003e(PreparedStatement ps)\u003c/span\u003e {\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"comment\"\u003e// parameterMappings 是对占位符 #{} 对应参数的封装\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e   List\u0026lt;ParameterMapping\u0026gt; parameterMappings = boundSql.getParameterMappings();\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e   \u003cspan class=\"keyword\"\u003eif\u003c/span\u003e (parameterMappings != \u003cspan class=\"literal\"\u003enull\u003c/span\u003e) {\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e     \u003cspan class=\"keyword\"\u003efor\u003c/span\u003e (\u003cspan class=\"type\"\u003eint\u003c/span\u003e \u003cspan class=\"variable\"\u003ei\u003c/span\u003e \u003cspan class=\"operator\"\u003e=\u003c/span\u003e \u003cspan class=\"number\"\u003e0\u003c/span\u003e; i \u0026lt; parameterMappings.size(); i++) {\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e       \u003cspan class=\"type\"\u003eParameterMapping\u003c/span\u003e \u003cspan class=\"variable\"\u003eparameterMapping\u003c/span\u003e \u003cspan class=\"operator\"\u003e=\u003c/span\u003e parameterMappings.get(i);\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e       \u003cspan class=\"comment\"\u003e// 不处理存储过程中的参数\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e       \u003cspan class=\"keyword\"\u003eif\u003c/span\u003e (parameterMapping.getMode() != ParameterMode.OUT) {\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e         Object value;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e         \u003cspan class=\"type\"\u003eString\u003c/span\u003e \u003cspan class=\"variable\"\u003epropertyName\u003c/span\u003e \u003cspan class=\"operator\"\u003e=\u003c/span\u003e parameterMapping.getProperty();\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e         \u003cspan class=\"keyword\"\u003eif\u003c/span\u003e (boundSql.hasAdditionalParameter(propertyName)) { \u003cspan class=\"comment\"\u003e// issue #448 ask first for additional params\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e           \u003cspan class=\"comment\"\u003e// 获取对应的实际数值\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e           value = boundSql.getAdditionalParameter(propertyName);\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e         } \u003cspan class=\"keyword\"\u003eelse\u003c/span\u003e \u003cspan class=\"keyword\"\u003eif\u003c/span\u003e (parameterObject == \u003cspan class=\"literal\"\u003enull\u003c/span\u003e) {\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e           value = \u003cspan class=\"literal\"\u003enull\u003c/span\u003e;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e         } \u003cspan class=\"keyword\"\u003eelse\u003c/span\u003e \u003cspan class=\"keyword\"\u003eif\u003c/span\u003e (typeHandlerRegistry.hasTypeHandler(parameterObject.getClass())) {\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e           value = parameterObject;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e         } \u003cspan class=\"keyword\"\u003eelse\u003c/span\u003e {\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e           \u003cspan class=\"comment\"\u003e// 获取对象中相应的属性或查找 Map 对象中的值\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e           \u003cspan class=\"type\"\u003eMetaObject\u003c/span\u003e \u003cspan class=\"variable\"\u003emetaObject\u003c/span\u003e \u003cspan class=\"operator\"\u003e=\u003c/span\u003e configuration.newMetaObject(parameterObject);\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e           value = metaObject.getValue(propertyName);\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e         }\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e         \u003cspan class=\"type\"\u003eTypeHandler\u003c/span\u003e \u003cspan class=\"variable\"\u003etypeHandler\u003c/span\u003e \u003cspan class=\"operator\"\u003e=\u003c/span\u003e parameterMapping.getTypeHandler();\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e         \u003cspan class=\"type\"\u003eJdbcType\u003c/span\u003e \u003cspan class=\"variable\"\u003ejdbcType\u003c/span\u003e \u003cspan class=\"operator\"\u003e=\u003c/span\u003e parameterMapping.getJdbcType();\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e         \u003cspan class=\"keyword\"\u003eif\u003c/span\u003e (value == \u003cspan class=\"literal\"\u003enull\u003c/span\u003e \u0026amp;\u0026amp; jdbcType == \u003cspan class=\"literal\"\u003enull\u003c/span\u003e) {\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e           jdbcType = configuration.getJdbcTypeForNull();\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e         }\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e         \u003cspan class=\"keyword\"\u003etry\u003c/span\u003e {\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e           \u003cspan class=\"comment\"\u003e// 通过 TypeHandler 将 Java 对象参数转为 JDBC 类型的参数\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e           \u003cspan class=\"comment\"\u003e// 然后，将数值动态绑定到 PreparedStaement 中\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e           typeHandler.setParameter(ps, i + \u003cspan class=\"number\"\u003e1\u003c/span\u003e, value, jdbcType);\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e         } \u003cspan class=\"keyword\"\u003ecatch\u003c/span\u003e (TypeException | SQLException e) {\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e           \u003cspan class=\"keyword\"\u003ethrow\u003c/span\u003e \u003cspan class=\"keyword\"\u003enew\u003c/span\u003e \u003cspan class=\"title class_\"\u003eTypeException\u003c/span\u003e(\u003cspan class=\"string\"\u003e\u0026#34;Could not set parameters for mapping: \u0026#34;\u003c/span\u003e + parameterMapping + \u003cspan class=\"string\"\u003e\u0026#34;. Cause: \u0026#34;\u003c/span\u003e + e, e);\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e         }\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e       }\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e     }\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e   }\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e }\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003ch3 id=\"ResultSetHandler-工作流程\"\u003e\u003ca href=\"#ResultSetHandler-工作流程\" class=\"headerlink\" title=\"ResultSetHandler 工作流程\"\u003e\u003c/a\u003eResultSetHandler 工作流程\u003c/h3\u003e\u003cp\u003e\u003ccode\u003eResultSetHandler\u003c/code\u003e 的实现可以概括为：将 \u003ccode\u003eStatement\u003c/code\u003e 执行后的结果集，按照 \u003ccode\u003eMapper\u003c/code\u003e 文件中配置的 \u003ccode\u003eResultType\u003c/code\u003e 或 \u003ccode\u003eResultMap\u003c/code\u003e 来转换成对应的 JavaBean 对象，最后将结果返回。\u003c/p\u003e\n\u003cp\u003e【源码】\u003ccode\u003eDefaultResultSetHandler\u003c/code\u003e 的 \u003ccode\u003ehandleResultSets\u003c/code\u003e 方法\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003ehandleResultSets\u003c/code\u003e 方法是 \u003ccode\u003eDefaultResultSetHandler\u003c/code\u003e 的最关键方法。其实现如下：\u003c/p\u003e\n\u003cfigure class=\"highlight java\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e8\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e9\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e10\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e11\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e12\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e13\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e14\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e15\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e16\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e17\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e18\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e19\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e20\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e21\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e22\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e23\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e24\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e25\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e26\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e27\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e28\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e29\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e30\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e31\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e32\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e33\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e34\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e35\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e36\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e37\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e38\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e39\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e@Override\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"keyword\"\u003epublic\u003c/span\u003e List\u0026lt;Object\u0026gt; \u003cspan class=\"title function_\"\u003ehandleResultSets\u003c/span\u003e\u003cspan class=\"params\"\u003e(Statement stmt)\u003c/span\u003e \u003cspan class=\"keyword\"\u003ethrows\u003c/span\u003e SQLException {\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  ErrorContext.instance().activity(\u003cspan class=\"string\"\u003e\u0026#34;handling results\u0026#34;\u003c/span\u003e).object(mappedStatement.getId());\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  \u003cspan class=\"keyword\"\u003efinal\u003c/span\u003e List\u0026lt;Object\u0026gt; multipleResults = \u003cspan class=\"keyword\"\u003enew\u003c/span\u003e \u003cspan class=\"title class_\"\u003eArrayList\u003c/span\u003e\u0026lt;\u0026gt;();\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  \u003cspan class=\"type\"\u003eint\u003c/span\u003e \u003cspan class=\"variable\"\u003eresultSetCount\u003c/span\u003e \u003cspan class=\"operator\"\u003e=\u003c/span\u003e \u003cspan class=\"number\"\u003e0\u003c/span\u003e;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  \u003cspan class=\"comment\"\u003e// 第一个结果集\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  \u003cspan class=\"type\"\u003eResultSetWrapper\u003c/span\u003e \u003cspan class=\"variable\"\u003ersw\u003c/span\u003e \u003cspan class=\"operator\"\u003e=\u003c/span\u003e getFirstResultSet(stmt);\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  List\u0026lt;ResultMap\u0026gt; resultMaps = mappedStatement.getResultMaps();\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  \u003cspan class=\"comment\"\u003e// 判断结果集的数量\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  \u003cspan class=\"type\"\u003eint\u003c/span\u003e \u003cspan class=\"variable\"\u003eresultMapCount\u003c/span\u003e \u003cspan class=\"operator\"\u003e=\u003c/span\u003e resultMaps.size();\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  validateResultMapsCount(rsw, resultMapCount);\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  \u003cspan class=\"comment\"\u003e// 遍历处理结果集\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  \u003cspan class=\"keyword\"\u003ewhile\u003c/span\u003e (rsw != \u003cspan class=\"literal\"\u003enull\u003c/span\u003e \u0026amp;\u0026amp; resultMapCount \u0026gt; resultSetCount) {\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"type\"\u003eResultMap\u003c/span\u003e \u003cspan class=\"variable\"\u003eresultMap\u003c/span\u003e \u003cspan class=\"operator\"\u003e=\u003c/span\u003e resultMaps.get(resultSetCount);\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    handleResultSet(rsw, resultMap, multipleResults, \u003cspan class=\"literal\"\u003enull\u003c/span\u003e);\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    rsw = getNextResultSet(stmt);\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    cleanUpAfterHandlingResultSet();\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    resultSetCount++;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  }\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  String[] resultSets = mappedStatement.getResultSets();\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  \u003cspan class=\"keyword\"\u003eif\u003c/span\u003e (resultSets != \u003cspan class=\"literal\"\u003enull\u003c/span\u003e) {\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"keyword\"\u003ewhile\u003c/span\u003e (rsw != \u003cspan class=\"literal\"\u003enull\u003c/span\u003e \u0026amp;\u0026amp; resultSetCount \u0026lt; resultSets.length) {\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e      \u003cspan class=\"type\"\u003eResultMapping\u003c/span\u003e \u003cspan class=\"variable\"\u003eparentMapping\u003c/span\u003e \u003cspan class=\"operator\"\u003e=\u003c/span\u003e nextResultMaps.get(resultSets[resultSetCount]);\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e      \u003cspan class=\"keyword\"\u003eif\u003c/span\u003e (parentMapping != \u003cspan class=\"literal\"\u003enull\u003c/span\u003e) {\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        \u003cspan class=\"type\"\u003eString\u003c/span\u003e \u003cspan class=\"variable\"\u003enestedResultMapId\u003c/span\u003e \u003cspan class=\"operator\"\u003e=\u003c/span\u003e parentMapping.getNestedResultMapId();\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        \u003cspan class=\"type\"\u003eResultMap\u003c/span\u003e \u003cspan class=\"variable\"\u003eresultMap\u003c/span\u003e \u003cspan class=\"operator\"\u003e=\u003c/span\u003e configuration.getResultMap(nestedResultMapId);\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        handleResultSet(rsw, resultMap, \u003cspan class=\"literal\"\u003enull\u003c/span\u003e, parentMapping);\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e      }\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e      rsw = getNextResultSet(stmt);\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e      cleanUpAfterHandlingResultSet();\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e      resultSetCount++;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    }\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  }\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  \u003cspan class=\"keyword\"\u003ereturn\u003c/span\u003e collapseSingleResultList(multipleResults);\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e}\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003ch2 id=\"参考资料\"\u003e\u003ca href=\"#参考资料\" class=\"headerlink\" title=\"参考资料\"\u003e\u003c/a\u003e参考资料\u003c/h2\u003e\u003cul\u003e\n\u003cli\u003e\u003cstrong\u003e官方\u003c/strong\u003e\u003cul\u003e\n\u003cli\u003e\u003ca target=\"_blank\" rel=\"noopener\" href=\"https://github.com/Mybatis/Mybatis-3\"\u003eMybatis Github\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca target=\"_blank\" rel=\"noopener\" href=\"http://www.mybatis.org/Mybatis-3/\"\u003eMybatis 官网\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003e文章\u003c/strong\u003e\u003cul\u003e\n\u003cli\u003e\u003ca target=\"_blank\" rel=\"noopener\" href=\"https://blog.csdn.net/luanlouis/article/details/40422941\"\u003e深入理解 Mybatis 原理\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca target=\"_blank\" rel=\"noopener\" href=\"https://github.com/tuguangquan/Mybatis\"\u003eMybatis 源码中文注释\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca target=\"_blank\" rel=\"noopener\" href=\"https://juejin.im/post/5cee8b61e51d455d88219ea4\"\u003eMybatis 中强大的 resultMap\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\n    \u003c/div\u003e",
  "Date": "2022-02-17T14:34:30Z",
  "Author": "钝悟 ◾ Dunwu"
}