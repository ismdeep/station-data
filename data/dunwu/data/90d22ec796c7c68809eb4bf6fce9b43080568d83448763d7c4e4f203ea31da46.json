{
  "Source": "dunwu",
  "Title": "Redis 实战",
  "Link": "https://dunwu.github.io/blog/pages/1fc9c4/",
  "Content": "\u003cdiv class=\"post-body\" itemprop=\"articleBody\"\u003e\u003ch1 id=\"Redis-实战\"\u003e\u003ca href=\"#Redis-实战\" class=\"headerlink\" title=\"Redis 实战\"\u003e\u003c/a\u003eRedis 实战\u003c/h1\u003e\u003ch2 id=\"缓存\"\u003e\u003ca href=\"#缓存\" class=\"headerlink\" title=\"缓存\"\u003e\u003c/a\u003e缓存\u003c/h2\u003e\u003cp\u003e缓存是 Redis 最常见的应用场景。\u003c/p\u003e\n\u003cp\u003eRedis 有多种数据类型，以及丰富的操作命令，并且有着高性能、高可用的特性，非常适合用于分布式缓存。\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e缓存应用的基本原理，请参考 \u003ca href=\"https://dunwu.github.io/design/distributed/%E5%88%86%E5%B8%83%E5%BC%8F%E7%BC%93%E5%AD%98.html\"\u003e\u003cstrong\u003e缓存基本原理\u003c/strong\u003e\u003c/a\u003e 第四 ~ 第六节内容。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003ch2 id=\"BitMap-和-BloomFilter\"\u003e\u003ca href=\"#BitMap-和-BloomFilter\" class=\"headerlink\" title=\"BitMap 和 BloomFilter\"\u003e\u003c/a\u003eBitMap 和 BloomFilter\u003c/h2\u003e\u003cp\u003eRedis 除了 5 种基本数据类型外，还支持 BitMap 和 BloomFilter（即布隆过滤器，可以通过 Redis Module 支持）。\u003c/p\u003e\n\u003cp\u003eBitMap 和 BloomFilter 都可以用于解决缓存穿透问题。要点在于：过滤一些不可能存在的数据。\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e什么是缓存穿透，可以参考：\u003ca href=\"https://dunwu.github.io/design/distributed/%E5%88%86%E5%B8%83%E5%BC%8F%E7%BC%93%E5%AD%98.html\"\u003e\u003cstrong\u003e缓存基本原理\u003c/strong\u003e\u003c/a\u003e\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003e小数据量可以用 BitMap，大数据量可以用布隆过滤器。\u003c/p\u003e\n\u003ch2 id=\"分布式锁\"\u003e\u003ca href=\"#分布式锁\" class=\"headerlink\" title=\"分布式锁\"\u003e\u003c/a\u003e分布式锁\u003c/h2\u003e\u003cp\u003e使用 Redis 作为分布式锁，基本要点如下：\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003cstrong\u003e互斥性\u003c/strong\u003e - 使用 \u003ccode\u003esetnx\u003c/code\u003e 抢占锁。\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003e避免永远不释放锁\u003c/strong\u003e - 使用 \u003ccode\u003eexpire\u003c/code\u003e 加一个过期时间，避免一直不释放锁，导致阻塞。\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003e原子性\u003c/strong\u003e - setnx 和 expire 必须合并为一个原子指令，避免 setnx 后，机器崩溃，没来得及设置 expire，从而导致锁永不释放。\u003c/li\u003e\n\u003c/ul\u003e\n\u003cblockquote\u003e\n\u003cp\u003e更多分布式锁的实现方式及细节，请参考：\u003ca href=\"https://dunwu.github.io/waterdrop/pages/40ac64/\"\u003e分布式锁基本原理\u003c/a\u003e\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003e根据 Redis 的特性，在实际应用中，存在一些应用小技巧。\u003c/p\u003e\n\u003ch2 id=\"keys-和-scan\"\u003e\u003ca href=\"#keys-和-scan\" class=\"headerlink\" title=\"keys 和 scan\"\u003e\u003c/a\u003ekeys 和 scan\u003c/h2\u003e\u003cp\u003e使用 \u003ccode\u003ekeys\u003c/code\u003e 指令可以扫出指定模式的 key 列表。\u003c/p\u003e\n\u003cp\u003e如果这个 redis 正在给线上的业务提供服务，那使用 \u003ccode\u003ekeys\u003c/code\u003e 指令会有什么问题？\u003c/p\u003e\n\u003cp\u003e首先，Redis 是单线程的。\u003ccode\u003ekeys\u003c/code\u003e 指令会导致线程阻塞一段时间，线上服务会停顿，直到指令执行完毕，服务才能恢复。\u003c/p\u003e\n\u003cp\u003e这个时候可以使用 \u003ccode\u003escan\u003c/code\u003e 指令，\u003ccode\u003escan\u003c/code\u003e 指令可以无阻塞的提取出指定模式的 key 列表，但是会有一定的重复概率，在客户端做一次去重就可以了，但是整体所花费的时间会比直接用 \u003ccode\u003ekeys\u003c/code\u003e 指令长。\u003c/p\u003e\n\u003cp\u003e不过，增量式迭代命令也不是没有缺点的： 举个例子， 使用 \u003ccode\u003eSMEMBERS\u003c/code\u003e 命令可以返回集合键当前包含的所有元素， 但是对于 \u003ccode\u003eSCAN\u003c/code\u003e 这类增量式迭代命令来说， 因为在对键进行增量式迭代的过程中， 键可能会被修改， 所以增量式迭代命令只能对被返回的元素提供有限的保证 。\u003c/p\u003e\n\u003ch2 id=\"大-Key-如何处理\"\u003e\u003ca href=\"#大-Key-如何处理\" class=\"headerlink\" title=\"大 Key 如何处理\"\u003e\u003c/a\u003e大 Key 如何处理\u003c/h2\u003e\u003cblockquote\u003e\n\u003cp\u003e什么是 Redis 大 key？\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003e大 key 并不是指 key 的值很大，而是 key 对应的 value 很大。\u003c/p\u003e\n\u003cp\u003e一般而言，下面这两种情况被称为大 key：\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eString 类型的值大于 10 KB；\u003c/li\u003e\n\u003cli\u003eHash、List、Set、ZSet 类型的元素的个数超过 5000 个；\u003c/li\u003e\n\u003c/ul\u003e\n\u003cblockquote\u003e\n\u003cp\u003e大 key 会造成什么问题？\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003e大 key 会带来以下四种影响：\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003cstrong\u003e客户端超时阻塞\u003c/strong\u003e。由于 Redis 执行命令是单线程处理，然后在操作大 key 时会比较耗时，那么就会阻塞 Redis，从客户端这一视角看，就是很久很久都没有响应。\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003e引发网络阻塞\u003c/strong\u003e。每次获取大 key 产生的网络流量较大，如果一个 key 的大小是 1 MB，每秒访问量为 1000，那么每秒会产生 1000MB 的流量，这对于普通千兆网卡的服务器来说是灾难性的。\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003e阻塞工作线程\u003c/strong\u003e。如果使用 del 删除大 key 时，会阻塞工作线程，这样就没办法处理后续的命令。\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003e内存分布不均\u003c/strong\u003e。集群模型在 slot 分片均匀情况下，会出现数据和查询倾斜情况，部分有大 key 的 Redis 节点占用内存多，QPS 也会比较大。\u003c/li\u003e\n\u003c/ul\u003e\n\u003cblockquote\u003e\n\u003cp\u003e如何找到大 key ？\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003e\u003cstrong\u003e\u003cem\u003e1、redis-cli –bigkeys 查找大 key\u003c/em\u003e\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003e可以通过 redis-cli –bigkeys 命令查找大 key：\u003c/p\u003e\n\u003cfigure class=\"highlight shell\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003eredis-cli -h 127.0.0.1 -p 6379 -a \u0026#34;password\u0026#34; -- bigkeys\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e使用的时候注意事项：\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e最好选择在从节点上执行该命令。因为主节点上执行时，会阻塞主节点；\u003c/li\u003e\n\u003cli\u003e如果没有从节点，那么可以选择在 Redis 实例业务压力的低峰阶段进行扫描查询，以免影响到实例的正常运行；或者可以使用 -i 参数控制扫描间隔，避免长时间扫描降低 Redis 实例的性能。\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e该方式的不足之处：\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e这个方法只能返回每种类型中最大的那个 bigkey，无法得到大小排在前 N 位的 bigkey；\u003c/li\u003e\n\u003cli\u003e对于集合类型来说，这个方法只统计集合元素个数的多少，而不是实际占用的内存量。但是，一个集合中的元素个数多，并不一定占用的内存就多。因为，有可能每个元素占用的内存很小，这样的话，即使元素个数有很多，总内存开销也不大；\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e\u003cstrong\u003e\u003cem\u003e2、使用 SCAN 命令查找大 key\u003c/em\u003e\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003e使用 SCAN 命令对数据库扫描，然后用 TYPE 命令获取返回的每一个 key 的类型。\u003c/p\u003e\n\u003cp\u003e对于 String 类型，可以直接使用 STRLEN 命令获取字符串的长度，也就是占用的内存空间字节数。\u003c/p\u003e\n\u003cp\u003e对于集合类型来说，有两种方法可以获得它占用的内存大小：\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e如果能够预先从业务层知道集合元素的平均大小，那么，可以使用下面的命令获取集合元素的个数，然后乘以集合元素的平均大小，这样就能获得集合占用的内存大小了。List 类型：\u003ccode\u003eLLEN\u003c/code\u003e 命令；Hash 类型：\u003ccode\u003eHLEN\u003c/code\u003e 命令；Set 类型：\u003ccode\u003eSCARD\u003c/code\u003e 命令；Sorted Set 类型：\u003ccode\u003eZCARD\u003c/code\u003e 命令；\u003c/li\u003e\n\u003cli\u003e如果不能提前知道写入集合的元素大小，可以使用 \u003ccode\u003eMEMORY USAGE\u003c/code\u003e 命令（需要 Redis 4.0 及以上版本），查询一个键值对占用的内存空间。\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e\u003cstrong\u003e\u003cem\u003e3、使用 RdbTools 工具查找大 key\u003c/em\u003e\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003e使用 RdbTools 第三方开源工具，可以用来解析 Redis 快照（RDB）文件，找到其中的大 key。\u003c/p\u003e\n\u003cp\u003e比如，下面这条命令，将大于 10 kb 的 key 输出到一个表格文件。\u003c/p\u003e\n\u003cfigure class=\"highlight shell\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003erdb dump.rdb -c memory --bytes 10240 -f redis.csv\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003e如何删除大 key？\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003e删除操作的本质是要释放键值对占用的内存空间，不要小瞧内存的释放过程。\u003c/p\u003e\n\u003cp\u003e释放内存只是第一步，为了更加高效地管理内存空间，在应用程序释放内存时，操作系统需要把释放掉的内存块插入一个空闲内存块的链表，以便后续进行管理和再分配。这个过程本身需要一定时间，而且会阻塞当前释放内存的应用程序。\u003c/p\u003e\n\u003cp\u003e所以，如果一下子释放了大量内存，空闲内存块链表操作时间就会增加，相应地就会造成 Redis 主线程的阻塞，如果主线程发生了阻塞，其他所有请求可能都会超时，超时越来越多，会造成 Redis 连接耗尽，产生各种异常。\u003c/p\u003e\n\u003cp\u003e因此，删除大 key 这一个动作，我们要小心。具体要怎么做呢？这里给出两种方法：\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e分批次删除\u003c/li\u003e\n\u003cli\u003e异步删除（Redis 4.0 版本以上）\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e\u003cstrong\u003e\u003cem\u003e1、分批次删除\u003c/em\u003e\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003e对于\u003cstrong\u003e删除大 Hash\u003c/strong\u003e，使用 \u003ccode\u003ehscan\u003c/code\u003e 命令，每次获取 100 个字段，再用 \u003ccode\u003ehdel\u003c/code\u003e 命令，每次删除 1 个字段。\u003c/p\u003e\n\u003cp\u003ePython 代码：\u003c/p\u003e\n\u003cfigure class=\"highlight python\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e8\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e9\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e10\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"keyword\"\u003edef\u003c/span\u003e \u003cspan class=\"title function_\"\u003edel_large_hash\u003c/span\u003e():\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  r = redis.StrictRedis(host=\u003cspan class=\"string\"\u003e\u0026#39;redis-host1\u0026#39;\u003c/span\u003e, port=\u003cspan class=\"number\"\u003e6379\u003c/span\u003e)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    large_hash_key =\u003cspan class=\"string\"\u003e\u0026#34;xxx\u0026#34;\u003c/span\u003e \u003cspan class=\"comment\"\u003e#要删除的大hash键名\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    cursor = \u003cspan class=\"string\"\u003e\u0026#39;0\u0026#39;\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"keyword\"\u003ewhile\u003c/span\u003e cursor != \u003cspan class=\"number\"\u003e0\u003c/span\u003e:\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        \u003cspan class=\"comment\"\u003e# 使用 hscan 命令，每次获取 100 个字段\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        cursor, data = r.hscan(large_hash_key, cursor=cursor, count=\u003cspan class=\"number\"\u003e100\u003c/span\u003e)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        \u003cspan class=\"keyword\"\u003efor\u003c/span\u003e item \u003cspan class=\"keyword\"\u003ein\u003c/span\u003e data.items():\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e                \u003cspan class=\"comment\"\u003e# 再用 hdel 命令，每次删除1个字段\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e                r.hdel(large_hash_key, item[\u003cspan class=\"number\"\u003e0\u003c/span\u003e])\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e对于\u003cstrong\u003e删除大 List\u003c/strong\u003e，通过 \u003ccode\u003eltrim\u003c/code\u003e 命令，每次删除少量元素。\u003c/p\u003e\n\u003cp\u003ePython 代码：\u003c/p\u003e\n\u003cfigure class=\"highlight python\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"keyword\"\u003edef\u003c/span\u003e \u003cspan class=\"title function_\"\u003edel_large_list\u003c/span\u003e():\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  r = redis.StrictRedis(host=\u003cspan class=\"string\"\u003e\u0026#39;redis-host1\u0026#39;\u003c/span\u003e, port=\u003cspan class=\"number\"\u003e6379\u003c/span\u003e)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  large_list_key = \u003cspan class=\"string\"\u003e\u0026#39;xxx\u0026#39;\u003c/span\u003e  \u003cspan class=\"comment\"\u003e#要删除的大list的键名\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  \u003cspan class=\"keyword\"\u003ewhile\u003c/span\u003e r.llen(large_list_key)\u0026gt;\u003cspan class=\"number\"\u003e0\u003c/span\u003e:\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e      \u003cspan class=\"comment\"\u003e#每次只删除最右100个元素\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e      r.ltrim(large_list_key, \u003cspan class=\"number\"\u003e0\u003c/span\u003e, -\u003cspan class=\"number\"\u003e101\u003c/span\u003e)\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e对于\u003cstrong\u003e删除大 Set\u003c/strong\u003e，使用 \u003ccode\u003esscan\u003c/code\u003e 命令，每次扫描集合中 100 个元素，再用 \u003ccode\u003esrem\u003c/code\u003e 命令每次删除一个键。\u003c/p\u003e\n\u003cp\u003ePython 代码：\u003c/p\u003e\n\u003cfigure class=\"highlight python\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e8\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e9\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e10\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"keyword\"\u003edef\u003c/span\u003e \u003cspan class=\"title function_\"\u003edel_large_set\u003c/span\u003e():\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  r = redis.StrictRedis(host=\u003cspan class=\"string\"\u003e\u0026#39;redis-host1\u0026#39;\u003c/span\u003e, port=\u003cspan class=\"number\"\u003e6379\u003c/span\u003e)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  large_set_key = \u003cspan class=\"string\"\u003e\u0026#39;xxx\u0026#39;\u003c/span\u003e   \u003cspan class=\"comment\"\u003e# 要删除的大set的键名\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  cursor = \u003cspan class=\"string\"\u003e\u0026#39;0\u0026#39;\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  \u003cspan class=\"keyword\"\u003ewhile\u003c/span\u003e cursor != \u003cspan class=\"number\"\u003e0\u003c/span\u003e:\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"comment\"\u003e# 使用 sscan 命令，每次扫描集合中 100 个元素\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    cursor, data = r.sscan(large_set_key, cursor=cursor, count=\u003cspan class=\"number\"\u003e100\u003c/span\u003e)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"keyword\"\u003efor\u003c/span\u003e item \u003cspan class=\"keyword\"\u003ein\u003c/span\u003e data:\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e      \u003cspan class=\"comment\"\u003e# 再用 srem 命令每次删除一个键\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e      r.srem(large_size_key, item)\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e对于\u003cstrong\u003e删除大 ZSet\u003c/strong\u003e，使用 \u003ccode\u003ezremrangebyrank\u003c/code\u003e 命令，每次删除 top 100 个元素。\u003c/p\u003e\n\u003cp\u003ePython 代码：\u003c/p\u003e\n\u003cfigure class=\"highlight python\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"keyword\"\u003edef\u003c/span\u003e \u003cspan class=\"title function_\"\u003edel_large_sortedset\u003c/span\u003e():\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  r = redis.StrictRedis(host=\u003cspan class=\"string\"\u003e\u0026#39;large_sortedset_key\u0026#39;\u003c/span\u003e, port=\u003cspan class=\"number\"\u003e6379\u003c/span\u003e)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  large_sortedset_key=\u003cspan class=\"string\"\u003e\u0026#39;xxx\u0026#39;\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  \u003cspan class=\"keyword\"\u003ewhile\u003c/span\u003e r.zcard(large_sortedset_key)\u0026gt;\u003cspan class=\"number\"\u003e0\u003c/span\u003e:\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"comment\"\u003e# 使用 zremrangebyrank 命令，每次删除 top 100个元素\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    r.zremrangebyrank(large_sortedset_key,\u003cspan class=\"number\"\u003e0\u003c/span\u003e,\u003cspan class=\"number\"\u003e99\u003c/span\u003e)\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e\u003cstrong\u003e\u003cem\u003e2、异步删除\u003c/em\u003e\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003e从 Redis 4.0 版本开始，可以采用\u003cstrong\u003e异步删除\u003c/strong\u003e法，\u003cstrong\u003e用 unlink 命令代替 del 来删除\u003c/strong\u003e。\u003c/p\u003e\n\u003cp\u003e这样 Redis 会将这个 key 放入到一个异步线程中进行删除，这样不会阻塞主线程。\u003c/p\u003e\n\u003cp\u003e除了主动调用 unlink 命令实现异步删除之外，我们还可以通过配置参数，达到某些条件的时候自动进行异步删除。\u003c/p\u003e\n\u003cp\u003e主要有 4 种场景，默认都是关闭的：\u003c/p\u003e\n\u003cfigure class=\"highlight text\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003elazyfree-lazy-eviction no\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003elazyfree-lazy-expire no\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003elazyfree-lazy-server-del\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003enoslave-lazy-flush no\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e它们代表的含义如下：\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003elazyfree-lazy-eviction：表示当 Redis 运行内存超过 maxmeory 时，是否开启 lazy free 机制删除；\u003c/li\u003e\n\u003cli\u003elazyfree-lazy-expire：表示设置了过期时间的键值，当过期之后是否开启 lazy free 机制删除；\u003c/li\u003e\n\u003cli\u003elazyfree-lazy-server-del：有些指令在处理已存在的键时，会带有一个隐式的 del 键的操作，比如 rename 命令，当目标键已存在，Redis 会先删除目标键，如果这些目标键是一个 big key，就会造成阻塞删除的问题，此配置表示在这种场景中是否开启 lazy free 机制删除；\u003c/li\u003e\n\u003cli\u003eslave-lazy-flush：针对 slave (从节点) 进行全量数据同步，slave 在加载 master 的 RDB 文件前，会运行 flushall 来清理自己的数据，它表示此时是否开启 lazy free 机制删除。\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e建议开启其中的 lazyfree-lazy-eviction、lazyfree-lazy-expire、lazyfree-lazy-server-del 等配置，这样就可以有效的提高主线程的执行效率。\u003c/p\u003e\n\u003ch2 id=\"最受欢迎文章\"\u003e\u003ca href=\"#最受欢迎文章\" class=\"headerlink\" title=\"最受欢迎文章\"\u003e\u003c/a\u003e最受欢迎文章\u003c/h2\u003e\u003cp\u003e选出最受欢迎文章，需要支持对文章进行评分。\u003c/p\u003e\n\u003ch3 id=\"对文章进行投票\"\u003e\u003ca href=\"#对文章进行投票\" class=\"headerlink\" title=\"对文章进行投票\"\u003e\u003c/a\u003e对文章进行投票\u003c/h3\u003e\u003cp\u003e（1）使用 HASH 存储文章\u003c/p\u003e\n\u003cp\u003e使用 \u003ccode\u003eHASH\u003c/code\u003e 类型存储文章信息。其中：key 是文章 ID；field 是文章的属性 key；value 是属性对应值。\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/dunwu/images/master/snap/20200225143038.jpg\" alt=\"img\"/\u003e\u003c/p\u003e\n\u003cp\u003e操作：\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e存储文章信息 - 使用 \u003ccode\u003eHSET\u003c/code\u003e 或 \u003ccode\u003eHMGET\u003c/code\u003e 命令\u003c/li\u003e\n\u003cli\u003e查询文章信息 - 使用 \u003ccode\u003eHGETALL\u003c/code\u003e 命令\u003c/li\u003e\n\u003cli\u003e添加投票 - 使用 \u003ccode\u003eHINCRBY\u003c/code\u003e 命令\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e（2）使用 \u003ccode\u003eZSET\u003c/code\u003e 针对不同维度集合排序\u003c/p\u003e\n\u003cp\u003e使用 \u003ccode\u003eZSET\u003c/code\u003e 类型分别存储按照时间排序和按照评分排序的文章 ID 集合。\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/dunwu/images/master/snap/20200225145742.jpg\" alt=\"img\"/\u003e\u003c/p\u003e\n\u003cp\u003e操作：\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e添加记录 - 使用 \u003ccode\u003eZADD\u003c/code\u003e 命令\u003c/li\u003e\n\u003cli\u003e添加分数 - 使用 \u003ccode\u003eZINCRBY\u003c/code\u003e 命令\u003c/li\u003e\n\u003cli\u003e取出多篇文章 - 使用 \u003ccode\u003eZREVRANGE\u003c/code\u003e 命令\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e（3）为了防止重复投票，使用 \u003ccode\u003eSET\u003c/code\u003e 类型记录每篇文章 ID 对应的投票集合。\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/dunwu/images/master/snap/20200225150105.jpg\" alt=\"img\"/\u003e\u003c/p\u003e\n\u003cp\u003e操作：\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e添加投票者 - 使用 \u003ccode\u003eSADD\u003c/code\u003e 命令\u003c/li\u003e\n\u003cli\u003e设置有效期 - 使用 \u003ccode\u003eEXPIRE\u003c/code\u003e 命令\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e（4）假设 user:115423 给 article:100408 投票，分别需要高更新评分排序集合以及投票集合。\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/dunwu/images/master/snap/20200225150138.jpg\" alt=\"img\"/\u003e\u003c/p\u003e\n\u003cp\u003e当需要对一篇文章投票时，程序需要用 ZSCORE 命令检查记录文章发布时间的有序集合，判断文章的发布时间是否超过投票有效期（比如：一星期）。\u003c/p\u003e\n\u003cfigure class=\"highlight java\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e8\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e9\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e10\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e11\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e12\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e13\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e14\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e15\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e16\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e17\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e18\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e19\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e20\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e21\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"keyword\"\u003epublic\u003c/span\u003e \u003cspan class=\"keyword\"\u003evoid\u003c/span\u003e \u003cspan class=\"title function_\"\u003earticleVote\u003c/span\u003e\u003cspan class=\"params\"\u003e(Jedis conn, String user, String article)\u003c/span\u003e {\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"comment\"\u003e// 计算文章的投票截止时间。\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"type\"\u003elong\u003c/span\u003e \u003cspan class=\"variable\"\u003ecutoff\u003c/span\u003e \u003cspan class=\"operator\"\u003e=\u003c/span\u003e (System.currentTimeMillis() / \u003cspan class=\"number\"\u003e1000\u003c/span\u003e) - ONE_WEEK_IN_SECONDS;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"comment\"\u003e// 检查是否还可以对文章进行投票\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"comment\"\u003e// （虽然使用散列也可以获取文章的发布时间，\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"comment\"\u003e// 但有序集合返回的文章发布时间为浮点数，\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"comment\"\u003e// 可以不进行转换直接使用）。\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"keyword\"\u003eif\u003c/span\u003e (conn.zscore(\u003cspan class=\"string\"\u003e\u0026#34;time:\u0026#34;\u003c/span\u003e, article) \u0026lt; cutoff) {\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        \u003cspan class=\"keyword\"\u003ereturn\u003c/span\u003e;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    }\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"comment\"\u003e// 从article:id标识符（identifier）里面取出文章的ID。\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"type\"\u003eString\u003c/span\u003e \u003cspan class=\"variable\"\u003earticleId\u003c/span\u003e \u003cspan class=\"operator\"\u003e=\u003c/span\u003e article.substring(article.indexOf(\u003cspan class=\"string\"\u003e\u0026#39;:\u0026#39;\u003c/span\u003e) + \u003cspan class=\"number\"\u003e1\u003c/span\u003e);\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"comment\"\u003e// 如果用户是第一次为这篇文章投票，那么增加这篇文章的投票数量和评分。\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"keyword\"\u003eif\u003c/span\u003e (conn.sadd(\u003cspan class=\"string\"\u003e\u0026#34;voted:\u0026#34;\u003c/span\u003e + articleId, user) == \u003cspan class=\"number\"\u003e1\u003c/span\u003e) {\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        conn.zincrby(\u003cspan class=\"string\"\u003e\u0026#34;score:\u0026#34;\u003c/span\u003e, VOTE_SCORE, article);\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        conn.hincrBy(article, \u003cspan class=\"string\"\u003e\u0026#34;votes\u0026#34;\u003c/span\u003e, \u003cspan class=\"number\"\u003e1\u003c/span\u003e);\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    }\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e}\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003ch3 id=\"发布并获取文章\"\u003e\u003ca href=\"#发布并获取文章\" class=\"headerlink\" title=\"发布并获取文章\"\u003e\u003c/a\u003e发布并获取文章\u003c/h3\u003e\u003cp\u003e发布文章：\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e添加文章 - 使用 \u003ccode\u003eINCR\u003c/code\u003e 命令计算新的文章 ID，填充文章信息，然后用 \u003ccode\u003eHSET\u003c/code\u003e 命令或 \u003ccode\u003eHMSET\u003c/code\u003e 命令写入到 \u003ccode\u003eHASH\u003c/code\u003e 结构中。\u003c/li\u003e\n\u003cli\u003e将文章作者 ID 添加到投票名单 - 使用 \u003ccode\u003eSADD\u003c/code\u003e 命令添加到代表投票名单的 \u003ccode\u003eSET\u003c/code\u003e 结构中。\u003c/li\u003e\n\u003cli\u003e设置投票有效期 - 使用 \u003ccode\u003eEXPIRE\u003c/code\u003e 命令设置投票有效期。\u003c/li\u003e\n\u003c/ul\u003e\n\u003cfigure class=\"highlight java\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e8\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e9\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e10\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e11\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e12\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e13\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e14\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e15\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e16\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e17\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e18\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e19\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e20\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e21\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e22\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e23\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e24\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e25\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e26\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e27\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"keyword\"\u003epublic\u003c/span\u003e String \u003cspan class=\"title function_\"\u003epostArticle\u003c/span\u003e\u003cspan class=\"params\"\u003e(Jedis conn, String user, String title, String link)\u003c/span\u003e {\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"comment\"\u003e// 生成一个新的文章ID。\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"type\"\u003eString\u003c/span\u003e \u003cspan class=\"variable\"\u003earticleId\u003c/span\u003e \u003cspan class=\"operator\"\u003e=\u003c/span\u003e String.valueOf(conn.incr(\u003cspan class=\"string\"\u003e\u0026#34;article:\u0026#34;\u003c/span\u003e));\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"type\"\u003eString\u003c/span\u003e \u003cspan class=\"variable\"\u003evoted\u003c/span\u003e \u003cspan class=\"operator\"\u003e=\u003c/span\u003e \u003cspan class=\"string\"\u003e\u0026#34;voted:\u0026#34;\u003c/span\u003e + articleId;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"comment\"\u003e// 将发布文章的用户添加到文章的已投票用户名单里面，\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    conn.sadd(voted, user);\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"comment\"\u003e// 然后将这个名单的过期时间设置为一周（第3章将对过期时间作更详细的介绍）。\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    conn.expire(voted, ONE_WEEK_IN_SECONDS);\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"type\"\u003elong\u003c/span\u003e \u003cspan class=\"variable\"\u003enow\u003c/span\u003e \u003cspan class=\"operator\"\u003e=\u003c/span\u003e System.currentTimeMillis() / \u003cspan class=\"number\"\u003e1000\u003c/span\u003e;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"type\"\u003eString\u003c/span\u003e \u003cspan class=\"variable\"\u003earticle\u003c/span\u003e \u003cspan class=\"operator\"\u003e=\u003c/span\u003e \u003cspan class=\"string\"\u003e\u0026#34;article:\u0026#34;\u003c/span\u003e + articleId;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"comment\"\u003e// 将文章信息存储到一个散列里面。\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    HashMap\u0026lt;String, String\u0026gt; articleData = \u003cspan class=\"keyword\"\u003enew\u003c/span\u003e \u003cspan class=\"title class_\"\u003eHashMap\u003c/span\u003e\u0026lt;String, String\u0026gt;();\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    articleData.put(\u003cspan class=\"string\"\u003e\u0026#34;title\u0026#34;\u003c/span\u003e, title);\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    articleData.put(\u003cspan class=\"string\"\u003e\u0026#34;link\u0026#34;\u003c/span\u003e, link);\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    articleData.put(\u003cspan class=\"string\"\u003e\u0026#34;user\u0026#34;\u003c/span\u003e, user);\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    articleData.put(\u003cspan class=\"string\"\u003e\u0026#34;now\u0026#34;\u003c/span\u003e, String.valueOf(now));\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    articleData.put(\u003cspan class=\"string\"\u003e\u0026#34;votes\u0026#34;\u003c/span\u003e, \u003cspan class=\"string\"\u003e\u0026#34;1\u0026#34;\u003c/span\u003e);\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    conn.hmset(article, articleData);\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"comment\"\u003e// 将文章添加到根据发布时间排序的有序集合和根据评分排序的有序集合里面。\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    conn.zadd(\u003cspan class=\"string\"\u003e\u0026#34;score:\u0026#34;\u003c/span\u003e, now + VOTE_SCORE, article);\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    conn.zadd(\u003cspan class=\"string\"\u003e\u0026#34;time:\u0026#34;\u003c/span\u003e, now, article);\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"keyword\"\u003ereturn\u003c/span\u003e articleId;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e}\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e分页查询最受欢迎文章：\u003c/p\u003e\n\u003cp\u003e使用 \u003ccode\u003eZINTERSTORE\u003c/code\u003e 命令根据页码、每页记录数、排序号，根据评分值从大到小分页查出文章 ID 列表。\u003c/p\u003e\n\u003cfigure class=\"highlight java\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e8\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e9\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e10\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e11\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e12\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e13\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e14\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e15\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e16\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e17\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"keyword\"\u003epublic\u003c/span\u003e List\u0026lt;Map\u0026lt;String, String\u0026gt;\u0026gt; \u003cspan class=\"title function_\"\u003egetArticles\u003c/span\u003e\u003cspan class=\"params\"\u003e(Jedis conn, \u003cspan class=\"type\"\u003eint\u003c/span\u003e page, String order)\u003c/span\u003e {\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"comment\"\u003e// 设置获取文章的起始索引和结束索引。\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"type\"\u003eint\u003c/span\u003e \u003cspan class=\"variable\"\u003estart\u003c/span\u003e \u003cspan class=\"operator\"\u003e=\u003c/span\u003e (page - \u003cspan class=\"number\"\u003e1\u003c/span\u003e) * ARTICLES_PER_PAGE;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"type\"\u003eint\u003c/span\u003e \u003cspan class=\"variable\"\u003eend\u003c/span\u003e \u003cspan class=\"operator\"\u003e=\u003c/span\u003e start + ARTICLES_PER_PAGE - \u003cspan class=\"number\"\u003e1\u003c/span\u003e;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"comment\"\u003e// 获取多个文章ID。\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    Set\u0026lt;String\u0026gt; ids = conn.zrevrange(order, start, end);\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    List\u0026lt;Map\u0026lt;String, String\u0026gt;\u0026gt; articles = \u003cspan class=\"keyword\"\u003enew\u003c/span\u003e \u003cspan class=\"title class_\"\u003eArrayList\u003c/span\u003e\u0026lt;\u0026gt;();\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"comment\"\u003e// 根据文章ID获取文章的详细信息。\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"keyword\"\u003efor\u003c/span\u003e (String id : ids) {\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        Map\u0026lt;String, String\u0026gt; articleData = conn.hgetAll(id);\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        articleData.put(\u003cspan class=\"string\"\u003e\u0026#34;id\u0026#34;\u003c/span\u003e, id);\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        articles.add(articleData);\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    }\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"keyword\"\u003ereturn\u003c/span\u003e articles;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e}\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003ch3 id=\"对文章进行分组\"\u003e\u003ca href=\"#对文章进行分组\" class=\"headerlink\" title=\"对文章进行分组\"\u003e\u003c/a\u003e对文章进行分组\u003c/h3\u003e\u003cp\u003e如果文章需要分组，功能需要分为两块：\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e记录文章属于哪个群组\u003c/li\u003e\n\u003cli\u003e负责取出群组里的文章\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e将文章添加、删除群组：\u003c/p\u003e\n\u003cfigure class=\"highlight java\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e8\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e9\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e10\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e11\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e12\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"keyword\"\u003epublic\u003c/span\u003e \u003cspan class=\"keyword\"\u003evoid\u003c/span\u003e \u003cspan class=\"title function_\"\u003eaddRemoveGroups\u003c/span\u003e\u003cspan class=\"params\"\u003e(Jedis conn, String articleId, String[] toAdd, String[] toRemove)\u003c/span\u003e {\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"comment\"\u003e// 构建存储文章信息的键名。\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"type\"\u003eString\u003c/span\u003e \u003cspan class=\"variable\"\u003earticle\u003c/span\u003e \u003cspan class=\"operator\"\u003e=\u003c/span\u003e \u003cspan class=\"string\"\u003e\u0026#34;article:\u0026#34;\u003c/span\u003e + articleId;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"comment\"\u003e// 将文章添加到它所属的群组里面。\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"keyword\"\u003efor\u003c/span\u003e (String group : toAdd) {\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        conn.sadd(\u003cspan class=\"string\"\u003e\u0026#34;group:\u0026#34;\u003c/span\u003e + group, article);\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    }\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"comment\"\u003e// 从群组里面移除文章。\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"keyword\"\u003efor\u003c/span\u003e (String group : toRemove) {\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        conn.srem(\u003cspan class=\"string\"\u003e\u0026#34;group:\u0026#34;\u003c/span\u003e + group, article);\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    }\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e}\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e取出群组里的文章：\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/dunwu/images/master/snap/20200225214210.jpg\" alt=\"img\"/\u003e\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e通过对存储群组文章的集合和存储文章评分的有序集合执行 \u003ccode\u003eZINTERSTORE\u003c/code\u003e 命令，可以得到按照文章评分排序的群组文章。\u003c/li\u003e\n\u003cli\u003e通过对存储群组文章的集合和存储文章发布时间的有序集合执行 \u003ccode\u003eZINTERSTORE\u003c/code\u003e 命令，可以得到按照文章发布时间排序的群组文章。\u003c/li\u003e\n\u003c/ul\u003e\n\u003cfigure class=\"highlight java\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e8\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e9\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e10\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e11\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e12\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e13\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e14\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"keyword\"\u003epublic\u003c/span\u003e List\u0026lt;Map\u0026lt;String, String\u0026gt;\u0026gt; \u003cspan class=\"title function_\"\u003egetGroupArticles\u003c/span\u003e\u003cspan class=\"params\"\u003e(Jedis conn, String group, \u003cspan class=\"type\"\u003eint\u003c/span\u003e page, String order)\u003c/span\u003e {\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"comment\"\u003e// 为每个群组的每种排列顺序都创建一个键。\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"type\"\u003eString\u003c/span\u003e \u003cspan class=\"variable\"\u003ekey\u003c/span\u003e \u003cspan class=\"operator\"\u003e=\u003c/span\u003e order + group;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"comment\"\u003e// 检查是否有已缓存的排序结果，如果没有的话就现在进行排序。\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"keyword\"\u003eif\u003c/span\u003e (!conn.exists(key)) {\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        \u003cspan class=\"comment\"\u003e// 根据评分或者发布时间，对群组文章进行排序。\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        \u003cspan class=\"type\"\u003eZParams\u003c/span\u003e \u003cspan class=\"variable\"\u003eparams\u003c/span\u003e \u003cspan class=\"operator\"\u003e=\u003c/span\u003e \u003cspan class=\"keyword\"\u003enew\u003c/span\u003e \u003cspan class=\"title class_\"\u003eZParams\u003c/span\u003e().aggregate(ZParams.Aggregate.MAX);\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        conn.zinterstore(key, params, \u003cspan class=\"string\"\u003e\u0026#34;group:\u0026#34;\u003c/span\u003e + group, order);\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        \u003cspan class=\"comment\"\u003e// 让Redis在60秒钟之后自动删除这个有序集合。\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        conn.expire(key, \u003cspan class=\"number\"\u003e60\u003c/span\u003e);\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    }\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"comment\"\u003e// 调用之前定义的getArticles函数来进行分页并获取文章数据。\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"keyword\"\u003ereturn\u003c/span\u003e getArticles(conn, page, key);\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e}\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003ch2 id=\"管理令牌\"\u003e\u003ca href=\"#管理令牌\" class=\"headerlink\" title=\"管理令牌\"\u003e\u003c/a\u003e管理令牌\u003c/h2\u003e\u003cp\u003e网站一般会以 Cookie、Session、令牌这类信息存储用户身份信息。\u003c/p\u003e\n\u003cp\u003e可以将 Cookie/Session/令牌 和用户的映射关系存储在 \u003ccode\u003eHASH\u003c/code\u003e 结构。\u003c/p\u003e\n\u003cp\u003e下面以令牌来举例。\u003c/p\u003e\n\u003ch3 id=\"查询令牌\"\u003e\u003ca href=\"#查询令牌\" class=\"headerlink\" title=\"查询令牌\"\u003e\u003c/a\u003e查询令牌\u003c/h3\u003e\u003cfigure class=\"highlight java\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"keyword\"\u003epublic\u003c/span\u003e String \u003cspan class=\"title function_\"\u003echeckToken\u003c/span\u003e\u003cspan class=\"params\"\u003e(Jedis conn, String token)\u003c/span\u003e {\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"comment\"\u003e// 尝试获取并返回令牌对应的用户。\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"keyword\"\u003ereturn\u003c/span\u003e conn.hget(\u003cspan class=\"string\"\u003e\u0026#34;login:\u0026#34;\u003c/span\u003e, token);\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e}\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003ch3 id=\"更新令牌\"\u003e\u003ca href=\"#更新令牌\" class=\"headerlink\" title=\"更新令牌\"\u003e\u003c/a\u003e更新令牌\u003c/h3\u003e\u003cul\u003e\n\u003cli\u003e用户每次访问页面，可以记录下令牌和当前时间戳的映射关系，存入一个 \u003ccode\u003eZSET\u003c/code\u003e 结构中，以便分析用户是否活跃，继而可以周期性清理最老的令牌，统计当前在线用户数等行为。\u003c/li\u003e\n\u003cli\u003e用户如果正在浏览商品，可以记录到用户最近浏览过的商品有序集合中（集合可以限定数量，超过数量进行裁剪），存入到一个 \u003ccode\u003eZSET\u003c/code\u003e 结构中，以便分析用户最近可能感兴趣的商品，以便推荐商品。\u003c/li\u003e\n\u003c/ul\u003e\n\u003cfigure class=\"highlight java\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e8\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e9\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e10\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e11\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e12\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e13\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e14\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e15\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"keyword\"\u003epublic\u003c/span\u003e \u003cspan class=\"keyword\"\u003evoid\u003c/span\u003e \u003cspan class=\"title function_\"\u003eupdateToken\u003c/span\u003e\u003cspan class=\"params\"\u003e(Jedis conn, String token, String user, String item)\u003c/span\u003e {\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"comment\"\u003e// 获取当前时间戳。\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"type\"\u003elong\u003c/span\u003e \u003cspan class=\"variable\"\u003etimestamp\u003c/span\u003e \u003cspan class=\"operator\"\u003e=\u003c/span\u003e System.currentTimeMillis() / \u003cspan class=\"number\"\u003e1000\u003c/span\u003e;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"comment\"\u003e// 维持令牌与已登录用户之间的映射。\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    conn.hset(\u003cspan class=\"string\"\u003e\u0026#34;login:\u0026#34;\u003c/span\u003e, token, user);\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"comment\"\u003e// 记录令牌最后一次出现的时间。\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    conn.zadd(\u003cspan class=\"string\"\u003e\u0026#34;recent:\u0026#34;\u003c/span\u003e, timestamp, token);\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"keyword\"\u003eif\u003c/span\u003e (item != \u003cspan class=\"literal\"\u003enull\u003c/span\u003e) {\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        \u003cspan class=\"comment\"\u003e// 记录用户浏览过的商品。\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        conn.zadd(\u003cspan class=\"string\"\u003e\u0026#34;viewed:\u0026#34;\u003c/span\u003e + token, timestamp, item);\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        \u003cspan class=\"comment\"\u003e// 移除旧的记录，只保留用户最近浏览过的25个商品。\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        conn.zremrangeByRank(\u003cspan class=\"string\"\u003e\u0026#34;viewed:\u0026#34;\u003c/span\u003e + token, \u003cspan class=\"number\"\u003e0\u003c/span\u003e, -\u003cspan class=\"number\"\u003e26\u003c/span\u003e);\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        conn.zincrby(\u003cspan class=\"string\"\u003e\u0026#34;viewed:\u0026#34;\u003c/span\u003e, -\u003cspan class=\"number\"\u003e1\u003c/span\u003e, item);\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    }\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e}\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003ch3 id=\"清理令牌\"\u003e\u003ca href=\"#清理令牌\" class=\"headerlink\" title=\"清理令牌\"\u003e\u003c/a\u003e清理令牌\u003c/h3\u003e\u003cp\u003e上一节提到，更新令牌时，将令牌和当前时间戳的映射关系，存入一个 \u003ccode\u003eZSET\u003c/code\u003e 结构中。所以可以通过排序得知哪些令牌最老。如果没有清理操作，更新令牌占用的内存会不断膨胀，直到导致机器宕机。\u003c/p\u003e\n\u003cp\u003e比如：最多允许存储 1000 万条令牌信息，周期性检查，一旦发现记录数超出 1000 万条，将 ZSET 从新到老排序，将超出 1000 万条的记录清除。\u003c/p\u003e\n\u003cfigure class=\"highlight java\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e8\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e9\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e10\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e11\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e12\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e13\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e14\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e15\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e16\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e17\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e18\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e19\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e20\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e21\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e22\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e23\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e24\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e25\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e26\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e27\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e28\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e29\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e30\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e31\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e32\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e33\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e34\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e35\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e36\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e37\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e38\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e39\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e40\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e41\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e42\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e43\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e44\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e45\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e46\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e47\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e48\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e49\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e50\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e51\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e52\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"keyword\"\u003epublic\u003c/span\u003e \u003cspan class=\"keyword\"\u003estatic\u003c/span\u003e \u003cspan class=\"keyword\"\u003eclass\u003c/span\u003e \u003cspan class=\"title class_\"\u003eCleanSessionsThread\u003c/span\u003e \u003cspan class=\"keyword\"\u003eextends\u003c/span\u003e \u003cspan class=\"title class_\"\u003eThread\u003c/span\u003e {\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"keyword\"\u003eprivate\u003c/span\u003e Jedis conn;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"keyword\"\u003eprivate\u003c/span\u003e \u003cspan class=\"type\"\u003eint\u003c/span\u003e limit;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"keyword\"\u003eprivate\u003c/span\u003e \u003cspan class=\"keyword\"\u003evolatile\u003c/span\u003e \u003cspan class=\"type\"\u003eboolean\u003c/span\u003e quit;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"keyword\"\u003epublic\u003c/span\u003e \u003cspan class=\"title function_\"\u003eCleanSessionsThread\u003c/span\u003e\u003cspan class=\"params\"\u003e(\u003cspan class=\"type\"\u003eint\u003c/span\u003e limit)\u003c/span\u003e {\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        \u003cspan class=\"built_in\"\u003ethis\u003c/span\u003e.conn = \u003cspan class=\"keyword\"\u003enew\u003c/span\u003e \u003cspan class=\"title class_\"\u003eJedis\u003c/span\u003e(\u003cspan class=\"string\"\u003e\u0026#34;localhost\u0026#34;\u003c/span\u003e);\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        \u003cspan class=\"built_in\"\u003ethis\u003c/span\u003e.conn.select(\u003cspan class=\"number\"\u003e15\u003c/span\u003e);\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        \u003cspan class=\"built_in\"\u003ethis\u003c/span\u003e.limit = limit;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    }\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"keyword\"\u003epublic\u003c/span\u003e \u003cspan class=\"keyword\"\u003evoid\u003c/span\u003e \u003cspan class=\"title function_\"\u003equit\u003c/span\u003e\u003cspan class=\"params\"\u003e()\u003c/span\u003e {\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        quit = \u003cspan class=\"literal\"\u003etrue\u003c/span\u003e;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    }\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"meta\"\u003e@Override\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"keyword\"\u003epublic\u003c/span\u003e \u003cspan class=\"keyword\"\u003evoid\u003c/span\u003e \u003cspan class=\"title function_\"\u003erun\u003c/span\u003e\u003cspan class=\"params\"\u003e()\u003c/span\u003e {\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        \u003cspan class=\"keyword\"\u003ewhile\u003c/span\u003e (!quit) {\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e            \u003cspan class=\"comment\"\u003e// 找出目前已有令牌的数量。\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e            \u003cspan class=\"type\"\u003elong\u003c/span\u003e \u003cspan class=\"variable\"\u003esize\u003c/span\u003e \u003cspan class=\"operator\"\u003e=\u003c/span\u003e conn.zcard(\u003cspan class=\"string\"\u003e\u0026#34;recent:\u0026#34;\u003c/span\u003e);\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e            \u003cspan class=\"comment\"\u003e// 令牌数量未超过限制，休眠并在之后重新检查。\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e            \u003cspan class=\"keyword\"\u003eif\u003c/span\u003e (size \u0026lt;= limit) {\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e                \u003cspan class=\"keyword\"\u003etry\u003c/span\u003e {\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e                    sleep(\u003cspan class=\"number\"\u003e1000\u003c/span\u003e);\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e                } \u003cspan class=\"keyword\"\u003ecatch\u003c/span\u003e (InterruptedException ie) {\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e                    Thread.currentThread().interrupt();\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e                }\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e                \u003cspan class=\"keyword\"\u003econtinue\u003c/span\u003e;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e            }\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e            \u003cspan class=\"comment\"\u003e// 获取需要移除的令牌ID。\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e            \u003cspan class=\"type\"\u003elong\u003c/span\u003e \u003cspan class=\"variable\"\u003eendIndex\u003c/span\u003e \u003cspan class=\"operator\"\u003e=\u003c/span\u003e Math.min(size - limit, \u003cspan class=\"number\"\u003e100\u003c/span\u003e);\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e            Set\u0026lt;String\u0026gt; tokenSet = conn.zrange(\u003cspan class=\"string\"\u003e\u0026#34;recent:\u0026#34;\u003c/span\u003e, \u003cspan class=\"number\"\u003e0\u003c/span\u003e, endIndex - \u003cspan class=\"number\"\u003e1\u003c/span\u003e);\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e            String[] tokens = tokenSet.toArray(\u003cspan class=\"keyword\"\u003enew\u003c/span\u003e \u003cspan class=\"title class_\"\u003eString\u003c/span\u003e[tokenSet.size()]);\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e            \u003cspan class=\"comment\"\u003e// 为那些将要被删除的令牌构建键名。\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e            ArrayList\u0026lt;String\u0026gt; sessionKeys = \u003cspan class=\"keyword\"\u003enew\u003c/span\u003e \u003cspan class=\"title class_\"\u003eArrayList\u003c/span\u003e\u0026lt;String\u0026gt;();\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e            \u003cspan class=\"keyword\"\u003efor\u003c/span\u003e (String token : tokens) {\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e                sessionKeys.add(\u003cspan class=\"string\"\u003e\u0026#34;viewed:\u0026#34;\u003c/span\u003e + token);\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e            }\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e            \u003cspan class=\"comment\"\u003e// 移除最旧的那些令牌。\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e            conn.del(sessionKeys.toArray(\u003cspan class=\"keyword\"\u003enew\u003c/span\u003e \u003cspan class=\"title class_\"\u003eString\u003c/span\u003e[sessionKeys.size()]));\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e            conn.hdel(\u003cspan class=\"string\"\u003e\u0026#34;login:\u0026#34;\u003c/span\u003e, tokens);\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e            conn.zrem(\u003cspan class=\"string\"\u003e\u0026#34;recent:\u0026#34;\u003c/span\u003e, tokens);\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        }\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    }\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e}\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003ch2 id=\"参考资料\"\u003e\u003ca href=\"#参考资料\" class=\"headerlink\" title=\"参考资料\"\u003e\u003c/a\u003e参考资料\u003c/h2\u003e\u003cul\u003e\n\u003cli\u003e\u003ca target=\"_blank\" rel=\"noopener\" href=\"https://item.jd.com/11791607.html\"\u003e《Redis 实战》\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca target=\"_blank\" rel=\"noopener\" href=\"https://item.jd.com/11486101.html\"\u003e《Redis 设计与实现》\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n    \u003c/div\u003e",
  "Date": "2020-06-24T02:45:38Z",
  "Author": "钝悟 ◾ Dunwu"
}