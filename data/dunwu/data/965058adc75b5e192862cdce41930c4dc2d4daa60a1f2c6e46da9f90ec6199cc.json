{
  "Source": "dunwu",
  "Title": "ZXing 快速入门",
  "Link": "https://dunwu.github.io/blog/pages/b563af/",
  "Content": "\u003cdiv class=\"post-body\" itemprop=\"articleBody\"\u003e\u003ch1 id=\"ZXing-快速入门\"\u003e\u003ca href=\"#ZXing-快速入门\" class=\"headerlink\" title=\"ZXing 快速入门\"\u003e\u003c/a\u003eZXing 快速入门\u003c/h1\u003e\u003ch2 id=\"简介\"\u003e\u003ca href=\"#简介\" class=\"headerlink\" title=\"简介\"\u003e\u003c/a\u003e简介\u003c/h2\u003e\u003cp\u003e\u003ccode\u003eZXing\u003c/code\u003e 是一个开源 Java 类库用于解析多种格式的 1D/2D 条形码。目标是能够对 QR 编码、Data Matrix、UPC 的 1D 条形码进行解码。 其提供了多种平台下的客户端包括：J2ME、J2SE 和 Android。\u003c/p\u003e\n\u003cp\u003e官网：\u003ca target=\"_blank\" rel=\"noopener\" href=\"https://github.com/zxing/zxing\"\u003e\u003cu\u003eZXing github 仓库\u003c/u\u003e\u003c/a\u003e\u003c/p\u003e\n\u003ch2 id=\"实战\"\u003e\u003ca href=\"#实战\" class=\"headerlink\" title=\"实战\"\u003e\u003c/a\u003e实战\u003c/h2\u003e\u003cp\u003e\u003cstrong\u003e\u003cem\u003e本例演示如何在一个非 android 的 Java 项目中使用 ZXing 来生成、解析二维码图片。\u003c/em\u003e\u003c/strong\u003e\u003c/p\u003e\n\u003ch3 id=\"安装\"\u003e\u003ca href=\"#安装\" class=\"headerlink\" title=\"安装\"\u003e\u003c/a\u003e安装\u003c/h3\u003e\u003cp\u003emaven 项目只需引入依赖：\u003c/p\u003e\n\u003cfigure class=\"highlight xml\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e8\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e9\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e10\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"tag\"\u003e\u0026lt;\u003cspan class=\"name\"\u003edependency\u003c/span\u003e\u0026gt;\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  \u003cspan class=\"tag\"\u003e\u0026lt;\u003cspan class=\"name\"\u003egroupId\u003c/span\u003e\u0026gt;\u003c/span\u003ecom.google.zxing\u003cspan class=\"tag\"\u003e\u0026lt;/\u003cspan class=\"name\"\u003egroupId\u003c/span\u003e\u0026gt;\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  \u003cspan class=\"tag\"\u003e\u0026lt;\u003cspan class=\"name\"\u003eartifactId\u003c/span\u003e\u0026gt;\u003c/span\u003ecore\u003cspan class=\"tag\"\u003e\u0026lt;/\u003cspan class=\"name\"\u003eartifactId\u003c/span\u003e\u0026gt;\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  \u003cspan class=\"tag\"\u003e\u0026lt;\u003cspan class=\"name\"\u003eversion\u003c/span\u003e\u0026gt;\u003c/span\u003e3.3.0\u003cspan class=\"tag\"\u003e\u0026lt;/\u003cspan class=\"name\"\u003eversion\u003c/span\u003e\u0026gt;\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"tag\"\u003e\u0026lt;/\u003cspan class=\"name\"\u003edependency\u003c/span\u003e\u0026gt;\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"tag\"\u003e\u0026lt;\u003cspan class=\"name\"\u003edependency\u003c/span\u003e\u0026gt;\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  \u003cspan class=\"tag\"\u003e\u0026lt;\u003cspan class=\"name\"\u003egroupId\u003c/span\u003e\u0026gt;\u003c/span\u003ecom.google.zxing\u003cspan class=\"tag\"\u003e\u0026lt;/\u003cspan class=\"name\"\u003egroupId\u003c/span\u003e\u0026gt;\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  \u003cspan class=\"tag\"\u003e\u0026lt;\u003cspan class=\"name\"\u003eartifactId\u003c/span\u003e\u0026gt;\u003c/span\u003ejavase\u003cspan class=\"tag\"\u003e\u0026lt;/\u003cspan class=\"name\"\u003eartifactId\u003c/span\u003e\u0026gt;\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  \u003cspan class=\"tag\"\u003e\u0026lt;\u003cspan class=\"name\"\u003eversion\u003c/span\u003e\u0026gt;\u003c/span\u003e3.3.0\u003cspan class=\"tag\"\u003e\u0026lt;/\u003cspan class=\"name\"\u003eversion\u003c/span\u003e\u0026gt;\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"tag\"\u003e\u0026lt;/\u003cspan class=\"name\"\u003edependency\u003c/span\u003e\u0026gt;\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e如果非 maven 项目，就去官网下载发布版本：\u003ca target=\"_blank\" rel=\"noopener\" href=\"https://github.com/zxing/zxing/releases\"\u003e\u003cu\u003e下载地址\u003c/u\u003e\u003c/a\u003e\u003c/p\u003e\n\u003ch3 id=\"生成二维码图片\"\u003e\u003ca href=\"#生成二维码图片\" class=\"headerlink\" title=\"生成二维码图片\"\u003e\u003c/a\u003e生成二维码图片\u003c/h3\u003e\u003cp\u003eZXing 生成二维码图片有以下步骤：\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003e\u003ccode\u003ecom.google.zxing.MultiFormatWriter\u003c/code\u003e 根据内容以及图像编码参数生成图像 2D 矩阵。\u003c/li\u003e\n\u003cli\u003e​ \u003ccode\u003ecom.google.zxing.client.j2se.MatrixToImageWriter\u003c/code\u003e 根据图像矩阵生成图片文件或图片缓存 \u003ccode\u003eBufferedImage\u003c/code\u003e 。\u003c/li\u003e\n\u003c/ol\u003e\n\u003cfigure class=\"highlight java\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e8\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e9\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"keyword\"\u003epublic\u003c/span\u003e \u003cspan class=\"keyword\"\u003evoid\u003c/span\u003e \u003cspan class=\"title function_\"\u003eencode\u003c/span\u003e\u003cspan class=\"params\"\u003e(String content, String filepath)\u003c/span\u003e \u003cspan class=\"keyword\"\u003ethrows\u003c/span\u003e WriterException, IOException {\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e \u003cspan class=\"type\"\u003eint\u003c/span\u003e \u003cspan class=\"variable\"\u003ewidth\u003c/span\u003e \u003cspan class=\"operator\"\u003e=\u003c/span\u003e \u003cspan class=\"number\"\u003e100\u003c/span\u003e;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e \u003cspan class=\"type\"\u003eint\u003c/span\u003e \u003cspan class=\"variable\"\u003eheight\u003c/span\u003e \u003cspan class=\"operator\"\u003e=\u003c/span\u003e \u003cspan class=\"number\"\u003e100\u003c/span\u003e;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e Map\u0026lt;EncodeHintType, Object\u0026gt; encodeHints = \u003cspan class=\"keyword\"\u003enew\u003c/span\u003e \u003cspan class=\"title class_\"\u003eHashMap\u003c/span\u003e\u0026lt;EncodeHintType, Object\u0026gt;();\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e encodeHints.put(EncodeHintType.CHARACTER_SET, \u003cspan class=\"string\"\u003e\u0026#34;UTF-8\u0026#34;\u003c/span\u003e);\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e \u003cspan class=\"type\"\u003eBitMatrix\u003c/span\u003e \u003cspan class=\"variable\"\u003ebitMatrix\u003c/span\u003e \u003cspan class=\"operator\"\u003e=\u003c/span\u003e \u003cspan class=\"keyword\"\u003enew\u003c/span\u003e \u003cspan class=\"title class_\"\u003eMultiFormatWriter\u003c/span\u003e().encode(content, BarcodeFormat.QR_CODE, width, height, encodeHints);\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e \u003cspan class=\"type\"\u003ePath\u003c/span\u003e \u003cspan class=\"variable\"\u003epath\u003c/span\u003e \u003cspan class=\"operator\"\u003e=\u003c/span\u003e FileSystems.getDefault().getPath(filepath);\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e MatrixToImageWriter.writeToPath(bitMatrix, \u003cspan class=\"string\"\u003e\u0026#34;png\u0026#34;\u003c/span\u003e, path);\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e}\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003ch3 id=\"解析二维码图片\"\u003e\u003ca href=\"#解析二维码图片\" class=\"headerlink\" title=\"解析二维码图片\"\u003e\u003c/a\u003e解析二维码图片\u003c/h3\u003e\u003cp\u003eZXing 解析二维码图片有以下步骤：\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003e\u003cp\u003e使用 \u003ccode\u003ejavax.imageio.ImageIO\u003c/code\u003e 读取图片文件，并存为一个 \u003ccode\u003ejava.awt.image.BufferedImage\u003c/code\u003e 对象。\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e将 \u003ccode\u003ejava.awt.image.BufferedImage\u003c/code\u003e 转换为 ZXing 能识别的 \u003ccode\u003ecom.google.zxing.BinaryBitmap\u003c/code\u003e 对象。\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e\u003ccode\u003ecom.google.zxing.MultiFormatReader\u003c/code\u003e 根据图像解码参数来解析 \u003ccode\u003ecom.google.zxing.BinaryBitmap\u003c/code\u003e 。\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ol\u003e\n\u003cfigure class=\"highlight java\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e8\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e9\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e10\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"keyword\"\u003epublic\u003c/span\u003e String \u003cspan class=\"title function_\"\u003edecode\u003c/span\u003e\u003cspan class=\"params\"\u003e(String filepath)\u003c/span\u003e \u003cspan class=\"keyword\"\u003ethrows\u003c/span\u003e IOException, NotFoundException {\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e \u003cspan class=\"type\"\u003eBufferedImage\u003c/span\u003e \u003cspan class=\"variable\"\u003ebufferedImage\u003c/span\u003e \u003cspan class=\"operator\"\u003e=\u003c/span\u003e ImageIO.read(\u003cspan class=\"keyword\"\u003enew\u003c/span\u003e \u003cspan class=\"title class_\"\u003eFileInputStream\u003c/span\u003e(filepath));\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e \u003cspan class=\"type\"\u003eLuminanceSource\u003c/span\u003e \u003cspan class=\"variable\"\u003esource\u003c/span\u003e \u003cspan class=\"operator\"\u003e=\u003c/span\u003e \u003cspan class=\"keyword\"\u003enew\u003c/span\u003e \u003cspan class=\"title class_\"\u003eBufferedImageLuminanceSource\u003c/span\u003e(bufferedImage);\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e \u003cspan class=\"type\"\u003eBinarizer\u003c/span\u003e \u003cspan class=\"variable\"\u003ebinarizer\u003c/span\u003e \u003cspan class=\"operator\"\u003e=\u003c/span\u003e \u003cspan class=\"keyword\"\u003enew\u003c/span\u003e \u003cspan class=\"title class_\"\u003eHybridBinarizer\u003c/span\u003e(source);\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e \u003cspan class=\"type\"\u003eBinaryBitmap\u003c/span\u003e \u003cspan class=\"variable\"\u003ebitmap\u003c/span\u003e \u003cspan class=\"operator\"\u003e=\u003c/span\u003e \u003cspan class=\"keyword\"\u003enew\u003c/span\u003e \u003cspan class=\"title class_\"\u003eBinaryBitmap\u003c/span\u003e(binarizer);\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e HashMap\u0026lt;DecodeHintType, Object\u0026gt; decodeHints = \u003cspan class=\"keyword\"\u003enew\u003c/span\u003e \u003cspan class=\"title class_\"\u003eHashMap\u003c/span\u003e\u0026lt;DecodeHintType, Object\u0026gt;();\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e decodeHints.put(DecodeHintType.CHARACTER_SET, \u003cspan class=\"string\"\u003e\u0026#34;UTF-8\u0026#34;\u003c/span\u003e);\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e \u003cspan class=\"type\"\u003eResult\u003c/span\u003e \u003cspan class=\"variable\"\u003eresult\u003c/span\u003e \u003cspan class=\"operator\"\u003e=\u003c/span\u003e \u003cspan class=\"keyword\"\u003enew\u003c/span\u003e \u003cspan class=\"title class_\"\u003eMultiFormatReader\u003c/span\u003e().decode(bitmap, decodeHints);\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e \u003cspan class=\"keyword\"\u003ereturn\u003c/span\u003e result.getText();\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e}\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e完整参考示例：\u003ca target=\"_blank\" rel=\"noopener\" href=\"https://github.com/dunwu/JavaParty/blob/master/toolbox/image/src/test/java/org/zp/image/QRCodeUtilTest.java\"\u003e\u003cu\u003e测试例代码\u003c/u\u003e\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003e以下是一个生成的二维码图片示例：\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"http://upload-images.jianshu.io/upload_images/3101171-26b73730088f0ab8.png\" alt=\"img\"/\u003e\u003c/p\u003e\n\u003ch2 id=\"参考\"\u003e\u003ca href=\"#参考\" class=\"headerlink\" title=\"参考\"\u003e\u003c/a\u003e参考\u003c/h2\u003e\u003cp\u003e\u003ca target=\"_blank\" rel=\"noopener\" href=\"https://github.com/zxing/zxing\"\u003eZXing github 仓库\u003c/a\u003e\u003c/p\u003e\n\n    \u003c/div\u003e",
  "Date": "2022-02-17T14:34:30Z",
  "Author": "钝悟 ◾ Dunwu"
}