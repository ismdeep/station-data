{
  "Source": "dunwu",
  "Title": "SpringBoot Actuator 快速入门",
  "Link": "https://dunwu.github.io/blog/pages/c013cc/",
  "Content": "\u003cdiv class=\"post-body\" itemprop=\"articleBody\"\u003e\u003ch1 id=\"SpringBoot-Actuator-快速入门\"\u003e\u003ca href=\"#SpringBoot-Actuator-快速入门\" class=\"headerlink\" title=\"SpringBoot Actuator 快速入门\"\u003e\u003c/a\u003eSpringBoot Actuator 快速入门\u003c/h1\u003e\u003cp\u003e\u003ca target=\"_blank\" rel=\"noopener\" href=\"https://github.com/spring-projects/spring-boot/tree/v2.7.0/spring-boot-project/spring-boot-actuator\"\u003e\u003ccode\u003espring-boot-actuator\u003c/code\u003e\u003c/a\u003e 模块提供了 Spring Boot 的所有生产就绪功能。启用这些功能的推荐方法是添加 \u003ccode\u003espring-boot-starter-actuator\u003c/code\u003e 依赖。\u003c/p\u003e\n\u003cp\u003e如果是 Maven 项目，添加以下依赖：\u003c/p\u003e\n\u003cfigure class=\"highlight xml\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"tag\"\u003e\u0026lt;\u003cspan class=\"name\"\u003edependencies\u003c/span\u003e\u0026gt;\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"tag\"\u003e\u0026lt;\u003cspan class=\"name\"\u003edependency\u003c/span\u003e\u0026gt;\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        \u003cspan class=\"tag\"\u003e\u0026lt;\u003cspan class=\"name\"\u003egroupId\u003c/span\u003e\u0026gt;\u003c/span\u003eorg.springframework.boot\u003cspan class=\"tag\"\u003e\u0026lt;/\u003cspan class=\"name\"\u003egroupId\u003c/span\u003e\u0026gt;\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        \u003cspan class=\"tag\"\u003e\u0026lt;\u003cspan class=\"name\"\u003eartifactId\u003c/span\u003e\u0026gt;\u003c/span\u003espring-boot-starter-actuator\u003cspan class=\"tag\"\u003e\u0026lt;/\u003cspan class=\"name\"\u003eartifactId\u003c/span\u003e\u0026gt;\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"tag\"\u003e\u0026lt;/\u003cspan class=\"name\"\u003edependency\u003c/span\u003e\u0026gt;\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"tag\"\u003e\u0026lt;/\u003cspan class=\"name\"\u003edependencies\u003c/span\u003e\u0026gt;\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e如果是 Gradle 项目，添加以下声明：\u003c/p\u003e\n\u003cfigure class=\"highlight groovy\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003edependencies {\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    implementation \u003cspan class=\"string\"\u003e\u0026#39;org.springframework.boot:spring-boot-starter-actuator\u0026#39;\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e}\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003ch2 id=\"端点（Endpoint）\"\u003e\u003ca href=\"#端点（Endpoint）\" class=\"headerlink\" title=\"端点（Endpoint）\"\u003e\u003c/a\u003e端点（Endpoint）\u003c/h2\u003e\u003cp\u003eActuator Endpoint 使 Spring Boot 用户可以监控应用，并和应用进行交互。Spring Boot 内置了许多 端点，并允许用户自定义端点。例如，\u003ccode\u003ehealth\u003c/code\u003e 端点提供基本的应用健康信息。\u003c/p\u003e\n\u003cp\u003e用户可以启用或禁用每个单独的端点并通过 HTTP 或 JMX 暴露它们（使它们可远程访问）。当端点被启用和公开时，它被认为是可用的。内置端点仅在可用时才会自动配置。大多数应用程序选择通过 HTTP 公开。例如，默认情况下，\u003ccode\u003ehealth\u003c/code\u003e 端点映射到 \u003ccode\u003e/actuator/health\u003c/code\u003e。\u003c/p\u003e\n\u003ch3 id=\"启用端点\"\u003e\u003ca href=\"#启用端点\" class=\"headerlink\" title=\"启用端点\"\u003e\u003c/a\u003e启用端点\u003c/h3\u003e\u003cp\u003e默认情况下，除了 \u003ccode\u003eshutdown\u003c/code\u003e 之外的所有端点都已启用。要配置端点的启用，请使用 \u003ccode\u003emanagement.endpoint.\u0026lt;id\u0026gt;.enabled\u003c/code\u003e 属性。以下示例启用 \u003ccode\u003eshutdown\u003c/code\u003e 端点：\u003c/p\u003e\n\u003cfigure class=\"highlight properties\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"attr\"\u003emanagement.endpoint.shutdown.enabled\u003c/span\u003e=\u003cspan class=\"string\"\u003etrue\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e如果您希望端点是明确指定才启用，请将 \u003ccode\u003emanagement.endpoints.enabled-by-default\u003c/code\u003e 属性设置为 false 并根据需要明确指定启用的端点，以下为示例：\u003c/p\u003e\n\u003cfigure class=\"highlight properties\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"attr\"\u003emanagement.endpoints.enabled-by-default\u003c/span\u003e=\u003cspan class=\"string\"\u003efalse\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"attr\"\u003emanagement.endpoint.info.enabled\u003c/span\u003e=\u003cspan class=\"string\"\u003etrue\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003ch3 id=\"暴露端点\"\u003e\u003ca href=\"#暴露端点\" class=\"headerlink\" title=\"暴露端点\"\u003e\u003c/a\u003e暴露端点\u003c/h3\u003e\u003cp\u003e由于端点可能包含敏感信息，您应该仔细考虑何时暴露它们。下表显示了内置端点的默认曝光：\u003c/p\u003e\n\u003ctable\u003e\n\u003cthead\u003e\n\u003ctr\u003e\n\u003cth align=\"left\"\u003eID\u003c/th\u003e\n\u003cth align=\"left\"\u003eJMX\u003c/th\u003e\n\u003cth align=\"left\"\u003eWeb\u003c/th\u003e\n\u003c/tr\u003e\n\u003c/thead\u003e\n\u003ctbody\u003e\u003ctr\u003e\n\u003ctd align=\"left\"\u003e\u003ccode\u003eauditevents\u003c/code\u003e\u003c/td\u003e\n\u003ctd align=\"left\"\u003eYes\u003c/td\u003e\n\u003ctd align=\"left\"\u003eNo\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd align=\"left\"\u003e\u003ccode\u003ebeans\u003c/code\u003e\u003c/td\u003e\n\u003ctd align=\"left\"\u003eYes\u003c/td\u003e\n\u003ctd align=\"left\"\u003eNo\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd align=\"left\"\u003e\u003ccode\u003ecaches\u003c/code\u003e\u003c/td\u003e\n\u003ctd align=\"left\"\u003eYes\u003c/td\u003e\n\u003ctd align=\"left\"\u003eNo\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd align=\"left\"\u003e\u003ccode\u003econditions\u003c/code\u003e\u003c/td\u003e\n\u003ctd align=\"left\"\u003eYes\u003c/td\u003e\n\u003ctd align=\"left\"\u003eNo\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd align=\"left\"\u003e\u003ccode\u003econfigprops\u003c/code\u003e\u003c/td\u003e\n\u003ctd align=\"left\"\u003eYes\u003c/td\u003e\n\u003ctd align=\"left\"\u003eNo\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd align=\"left\"\u003e\u003ccode\u003eenv\u003c/code\u003e\u003c/td\u003e\n\u003ctd align=\"left\"\u003eYes\u003c/td\u003e\n\u003ctd align=\"left\"\u003eNo\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd align=\"left\"\u003e\u003ccode\u003eflyway\u003c/code\u003e\u003c/td\u003e\n\u003ctd align=\"left\"\u003eYes\u003c/td\u003e\n\u003ctd align=\"left\"\u003eNo\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd align=\"left\"\u003e\u003ccode\u003ehealth\u003c/code\u003e\u003c/td\u003e\n\u003ctd align=\"left\"\u003eYes\u003c/td\u003e\n\u003ctd align=\"left\"\u003eYes\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd align=\"left\"\u003e\u003ccode\u003eheapdump\u003c/code\u003e\u003c/td\u003e\n\u003ctd align=\"left\"\u003eN/A\u003c/td\u003e\n\u003ctd align=\"left\"\u003eNo\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd align=\"left\"\u003e\u003ccode\u003ehttptrace\u003c/code\u003e\u003c/td\u003e\n\u003ctd align=\"left\"\u003eYes\u003c/td\u003e\n\u003ctd align=\"left\"\u003eNo\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd align=\"left\"\u003e\u003ccode\u003einfo\u003c/code\u003e\u003c/td\u003e\n\u003ctd align=\"left\"\u003eYes\u003c/td\u003e\n\u003ctd align=\"left\"\u003eNo\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd align=\"left\"\u003e\u003ccode\u003eintegrationgraph\u003c/code\u003e\u003c/td\u003e\n\u003ctd align=\"left\"\u003eYes\u003c/td\u003e\n\u003ctd align=\"left\"\u003eNo\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd align=\"left\"\u003e\u003ccode\u003ejolokia\u003c/code\u003e\u003c/td\u003e\n\u003ctd align=\"left\"\u003eN/A\u003c/td\u003e\n\u003ctd align=\"left\"\u003eNo\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd align=\"left\"\u003e\u003ccode\u003elogfile\u003c/code\u003e\u003c/td\u003e\n\u003ctd align=\"left\"\u003eN/A\u003c/td\u003e\n\u003ctd align=\"left\"\u003eNo\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd align=\"left\"\u003e\u003ccode\u003eloggers\u003c/code\u003e\u003c/td\u003e\n\u003ctd align=\"left\"\u003eYes\u003c/td\u003e\n\u003ctd align=\"left\"\u003eNo\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd align=\"left\"\u003e\u003ccode\u003eliquibase\u003c/code\u003e\u003c/td\u003e\n\u003ctd align=\"left\"\u003eYes\u003c/td\u003e\n\u003ctd align=\"left\"\u003eNo\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd align=\"left\"\u003e\u003ccode\u003emetrics\u003c/code\u003e\u003c/td\u003e\n\u003ctd align=\"left\"\u003eYes\u003c/td\u003e\n\u003ctd align=\"left\"\u003eNo\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd align=\"left\"\u003e\u003ccode\u003emappings\u003c/code\u003e\u003c/td\u003e\n\u003ctd align=\"left\"\u003eYes\u003c/td\u003e\n\u003ctd align=\"left\"\u003eNo\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd align=\"left\"\u003e\u003ccode\u003eprometheus\u003c/code\u003e\u003c/td\u003e\n\u003ctd align=\"left\"\u003eN/A\u003c/td\u003e\n\u003ctd align=\"left\"\u003eNo\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd align=\"left\"\u003e\u003ccode\u003equartz\u003c/code\u003e\u003c/td\u003e\n\u003ctd align=\"left\"\u003eYes\u003c/td\u003e\n\u003ctd align=\"left\"\u003eNo\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd align=\"left\"\u003e\u003ccode\u003escheduledtasks\u003c/code\u003e\u003c/td\u003e\n\u003ctd align=\"left\"\u003eYes\u003c/td\u003e\n\u003ctd align=\"left\"\u003eNo\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd align=\"left\"\u003e\u003ccode\u003esessions\u003c/code\u003e\u003c/td\u003e\n\u003ctd align=\"left\"\u003eYes\u003c/td\u003e\n\u003ctd align=\"left\"\u003eNo\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd align=\"left\"\u003e\u003ccode\u003eshutdown\u003c/code\u003e\u003c/td\u003e\n\u003ctd align=\"left\"\u003eYes\u003c/td\u003e\n\u003ctd align=\"left\"\u003eNo\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd align=\"left\"\u003e\u003ccode\u003estartup\u003c/code\u003e\u003c/td\u003e\n\u003ctd align=\"left\"\u003eYes\u003c/td\u003e\n\u003ctd align=\"left\"\u003eNo\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd align=\"left\"\u003e\u003ccode\u003ethreaddump\u003c/code\u003e\u003c/td\u003e\n\u003ctd align=\"left\"\u003eYes\u003c/td\u003e\n\u003ctd align=\"left\"\u003eNo\u003c/td\u003e\n\u003c/tr\u003e\n\u003c/tbody\u003e\u003c/table\u003e\n\u003cp\u003e要更改暴露的端点，请使用以下特定于技术的包含和排除属性：\u003c/p\u003e\n\u003ctable\u003e\n\u003cthead\u003e\n\u003ctr\u003e\n\u003cth align=\"left\"\u003eProperty\u003c/th\u003e\n\u003cth align=\"left\"\u003eDefault\u003c/th\u003e\n\u003c/tr\u003e\n\u003c/thead\u003e\n\u003ctbody\u003e\u003ctr\u003e\n\u003ctd align=\"left\"\u003e\u003ccode\u003emanagement.endpoints.jmx.exposure.exclude\u003c/code\u003e\u003c/td\u003e\n\u003ctd align=\"left\"\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd align=\"left\"\u003e\u003ccode\u003emanagement.endpoints.jmx.exposure.include\u003c/code\u003e\u003c/td\u003e\n\u003ctd align=\"left\"\u003e\u003ccode\u003e*\u003c/code\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd align=\"left\"\u003e\u003ccode\u003emanagement.endpoints.web.exposure.exclude\u003c/code\u003e\u003c/td\u003e\n\u003ctd align=\"left\"\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd align=\"left\"\u003e\u003ccode\u003emanagement.endpoints.web.exposure.include\u003c/code\u003e\u003c/td\u003e\n\u003ctd align=\"left\"\u003e\u003ccode\u003ehealth\u003c/code\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003c/tbody\u003e\u003c/table\u003e\n\u003cp\u003e\u003ccode\u003einclude\u003c/code\u003e 属性列出了暴露的端点的 ID。 \u003ccode\u003eexclude\u003c/code\u003e 属性列出了不应暴露的端点的 ID。 \u003ccode\u003eexclude\u003c/code\u003e 属性优先于 \u003ccode\u003einclude\u003c/code\u003e 属性。您可以使用端点 ID 列表配置包含和排除属性。\u003c/p\u003e\n\u003cp\u003e例如，仅暴露 \u003ccode\u003ehealth\u003c/code\u003e 和 info 端点，其他端点都不通过 JMX 暴露，可以按如下配置：\u003c/p\u003e\n\u003cfigure class=\"highlight properties\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"attr\"\u003emanagement.endpoints.jmx.exposure.include\u003c/span\u003e=\u003cspan class=\"string\"\u003ehealth,info\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e注意：\u003ccode\u003e*\u003c/code\u003e 可用于选择所有端点。\u003c/p\u003e\n\u003ch3 id=\"安全\"\u003e\u003ca href=\"#安全\" class=\"headerlink\" title=\"安全\"\u003e\u003c/a\u003e安全\u003c/h3\u003e\u003cp\u003e出于安全考虑，只有 \u003ccode\u003e/health\u003c/code\u003e 端点会通过 HTTP 方式暴露。用户可以通过 \u003ccode\u003emanagement.endpoints.web.exposure.include\u003c/code\u003e 决定哪些端点可以通过 HTTP 方式暴露。\u003c/p\u003e\n\u003cp\u003e如果 Spring Security 在类路径上并且不存在其他 \u003ccode\u003eWebSecurityConfigurerAdapter\u003c/code\u003e 或 \u003ccode\u003eSecurityFilterChain\u003c/code\u003e bean，则除 \u003ccode\u003e/health\u003c/code\u003e 之外的所有 actuator 都由 Spring Boot 自动启用安全控制。如果用户自定义了 \u003ccode\u003eWebSecurityConfigurerAdapter\u003c/code\u003e 或 \u003ccode\u003eSecurityFilterChain\u003c/code\u003e bean，Spring Boot 不再启用安全控制，由用户自行控制访问规则。\u003c/p\u003e\n\u003cp\u003e如果您希望为 HTTP 端点定义安全控制（例如，只允许具有特定角色的用户访问它们），Spring Boot 提供了一些方便的 \u003ccode\u003eRequestMatcher\u003c/code\u003e 对象，您可以将它们与 Spring Security 结合使用。\u003c/p\u003e\n\u003cp\u003e下面是一个典型的 Spring Security 配置示例：\u003c/p\u003e\n\u003cfigure class=\"highlight java\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e8\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e9\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e10\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e11\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e12\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e@Configuration(proxyBeanMethods = false)\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"keyword\"\u003epublic\u003c/span\u003e \u003cspan class=\"keyword\"\u003eclass\u003c/span\u003e \u003cspan class=\"title class_\"\u003eMySecurityConfiguration\u003c/span\u003e {\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"meta\"\u003e@Bean\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"keyword\"\u003epublic\u003c/span\u003e SecurityFilterChain \u003cspan class=\"title function_\"\u003esecurityFilterChain\u003c/span\u003e\u003cspan class=\"params\"\u003e(HttpSecurity http)\u003c/span\u003e \u003cspan class=\"keyword\"\u003ethrows\u003c/span\u003e Exception {\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        http.requestMatcher(EndpointRequest.toAnyEndpoint())\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e                .authorizeRequests((requests) -\u0026gt; requests.anyRequest().hasRole(\u003cspan class=\"string\"\u003e\u0026#34;ENDPOINT_ADMIN\u0026#34;\u003c/span\u003e));\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        http.httpBasic();\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        \u003cspan class=\"keyword\"\u003ereturn\u003c/span\u003e http.build();\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    }\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e}\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e前面的示例使用 EndpointRequest.toAnyEndpoint() 将请求匹配到任何端点，然后确保所有端点都具有 ENDPOINT_ADMIN 角色。 EndpointRequest 上还提供了其他几种匹配器方法。\u003c/p\u003e\n\u003cp\u003e如果希望无需身份验证即可访问所有执行器端点。可以通过更改 management.endpoints.web.exposure.include 属性来做到这一点，如下所示：\u003c/p\u003e\n\u003cfigure class=\"highlight properties\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"attr\"\u003emanagement.endpoints.web.exposure.include\u003c/span\u003e=\u003cspan class=\"string\"\u003e*\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e此外，如果存在 Spring Security，您将需要添加自定义安全配置，以允许未经身份验证的访问端点，如以下示例所示：\u003c/p\u003e\n\u003cfigure class=\"highlight java\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e8\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e9\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e10\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e11\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e@Configuration(proxyBeanMethods = false)\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"keyword\"\u003epublic\u003c/span\u003e \u003cspan class=\"keyword\"\u003eclass\u003c/span\u003e \u003cspan class=\"title class_\"\u003eMySecurityConfiguration\u003c/span\u003e {\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"meta\"\u003e@Bean\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"keyword\"\u003epublic\u003c/span\u003e SecurityFilterChain \u003cspan class=\"title function_\"\u003esecurityFilterChain\u003c/span\u003e\u003cspan class=\"params\"\u003e(HttpSecurity http)\u003c/span\u003e \u003cspan class=\"keyword\"\u003ethrows\u003c/span\u003e Exception {\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        http.requestMatcher(EndpointRequest.toAnyEndpoint())\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e                .authorizeRequests((requests) -\u0026gt; requests.anyRequest().permitAll());\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        \u003cspan class=\"keyword\"\u003ereturn\u003c/span\u003e http.build();\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    }\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e}\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e由于 Spring Boot 依赖于 Spring Security 的默认设置，因此 CSRF 保护默认开启。这意味着在使用默认安全配置时，需要 POST（关闭和记录器端点）、PUT 或 DELETE 的执行器端点会收到 403（禁止）错误。\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e建议仅在创建非浏览器客户端使用的服务时完全禁用 CSRF 保护。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003ch3 id=\"配置端点\"\u003e\u003ca href=\"#配置端点\" class=\"headerlink\" title=\"配置端点\"\u003e\u003c/a\u003e配置端点\u003c/h3\u003e\u003cp\u003e端点会自动缓存对不带任何参数的读操作的响应数据。要配置端点缓存响应的时间量，请使用其 \u003ccode\u003ecache.time-to-live\u003c/code\u003e 属性。以下示例将 bean 端点缓存的生存时间设置为 10 秒：\u003c/p\u003e\n\u003cfigure class=\"highlight properties\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"attr\"\u003emanagement.endpoint.beans.cache.time-to-live\u003c/span\u003e=\u003cspan class=\"string\"\u003e10s\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003ch3 id=\"Actuator-Web-端点的超媒体\"\u003e\u003ca href=\"#Actuator-Web-端点的超媒体\" class=\"headerlink\" title=\"Actuator Web 端点的超媒体\"\u003e\u003c/a\u003eActuator Web 端点的超媒体\u003c/h3\u003e\u003cp\u003eSpring Boot Actuator 中内置了一个“发现页面”端点，其中包含了所有端点的链接。默认情况下，“发现页面”在 \u003ccode\u003e/actuator\u003c/code\u003e 上可用。\u003c/p\u003e\n\u003cp\u003e要禁用“发现页面”，请将以下属性添加到您的应用程序属性中：\u003c/p\u003e\n\u003cfigure class=\"highlight properties\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"attr\"\u003emanagement.endpoints.web.discovery.enabled\u003c/span\u003e=\u003cspan class=\"string\"\u003efalse\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e配置自定义管理上下文路径后，“发现页面”会自动从 \u003ccode\u003e/actuator\u003c/code\u003e 移动到应用管理上下文的根目录。例如，如果管理上下文路径是 \u003ccode\u003e/management\u003c/code\u003e，则发现页面可从 \u003ccode\u003e/management\u003c/code\u003e 获得。当管理上下文路径设置为 / 时，发现页面被禁用以防止与其他映射发生冲突的可能性。\u003c/p\u003e\n\u003ch3 id=\"跨域支持\"\u003e\u003ca href=\"#跨域支持\" class=\"headerlink\" title=\"跨域支持\"\u003e\u003c/a\u003e跨域支持\u003c/h3\u003e\u003cp\u003eCORS 是一种 W3C 规范，可让用户以灵活的方式指定授权哪种跨域请求。如果使用 Spring MVC 或 Spring WebFlux，则可以配置 Actuator 的 Web 端点以支持此类场景。\u003c/p\u003e\n\u003cp\u003eCORS 支持默认是禁用的，只有在设置 \u003ccode\u003emanagement.endpoints.web.cors.allowed-origins\u003c/code\u003e 属性后才会启用。以下配置允许来自 example.com 域的 GET 和 POST 调用：\u003c/p\u003e\n\u003cfigure class=\"highlight properties\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"attr\"\u003emanagement.endpoints.web.cors.allowed-origins\u003c/span\u003e=\u003cspan class=\"string\"\u003ehttps://example.com\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"attr\"\u003emanagement.endpoints.web.cors.allowed-methods\u003c/span\u003e=\u003cspan class=\"string\"\u003eGET,POST\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003ch3 id=\"自定义端点\"\u003e\u003ca href=\"#自定义端点\" class=\"headerlink\" title=\"自定义端点\"\u003e\u003c/a\u003e自定义端点\u003c/h3\u003e\u003cp\u003e如果添加带有 \u003ccode\u003e@Endpoint\u003c/code\u003e 注释的 \u003ccode\u003e@Bean\u003c/code\u003e，则任何带有 \u003ccode\u003e@ReadOperation\u003c/code\u003e、\u003ccode\u003e@WriteOperation\u003c/code\u003e 或 \u003ccode\u003e@DeleteOperation\u003c/code\u003e 注释的方法都会自动通过 JMX 公开，并且在 Web 应用程序中，也可以通过 HTTP 公开。可以使用 Jersey、Spring MVC 或 Spring WebFlux 通过 HTTP 公开端点。如果 Jersey 和 Spring MVC 都可用，则使用 Spring MVC。\u003c/p\u003e\n\u003cp\u003e以下示例公开了一个返回自定义对象的读取操作：\u003c/p\u003e\n\u003cfigure class=\"highlight java\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e@ReadOperation\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"keyword\"\u003epublic\u003c/span\u003e CustomData \u003cspan class=\"title function_\"\u003egetData\u003c/span\u003e\u003cspan class=\"params\"\u003e()\u003c/span\u003e {\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"keyword\"\u003ereturn\u003c/span\u003e \u003cspan class=\"keyword\"\u003enew\u003c/span\u003e \u003cspan class=\"title class_\"\u003eCustomData\u003c/span\u003e(\u003cspan class=\"string\"\u003e\u0026#34;test\u0026#34;\u003c/span\u003e, \u003cspan class=\"number\"\u003e5\u003c/span\u003e);\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e}\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e您还可以使用 \u003ccode\u003e@JmxEndpoint\u003c/code\u003e 或 \u003ccode\u003e@WebEndpoint\u003c/code\u003e 编写特定技术的端点。这些端点仅限于各自的技术。例如，\u003ccode\u003e@WebEndpoint\u003c/code\u003e 仅通过 HTTP 而不是通过 JMX 公开。\u003c/p\u003e\n\u003cp\u003e您可以使用 \u003ccode\u003e@EndpointWebExtension\u003c/code\u003e 和 \u003ccode\u003e@EndpointJmxExtension\u003c/code\u003e 编写特定技术的扩展。这些注释让您可以提供特定技术的操作来扩充现有端点。\u003c/p\u003e\n\u003cp\u003e最后，如果您需要访问 Web 框架的功能，您可以实现 servlet 或 Spring \u003ccode\u003e@Controller\u003c/code\u003e 和 \u003ccode\u003e@RestController\u003c/code\u003e 端点，但代价是它们无法通过 JMX 或使用不同的 Web 框架获得。\u003c/p\u003e\n\u003ch2 id=\"通过-HTTP-进行监控和管理\"\u003e\u003ca href=\"#通过-HTTP-进行监控和管理\" class=\"headerlink\" title=\"通过 HTTP 进行监控和管理\"\u003e\u003c/a\u003e通过 HTTP 进行监控和管理\u003c/h2\u003e\u003ch3 id=\"自定义管理端点路径\"\u003e\u003ca href=\"#自定义管理端点路径\" class=\"headerlink\" title=\"自定义管理端点路径\"\u003e\u003c/a\u003e自定义管理端点路径\u003c/h3\u003e\u003cp\u003e如果是 Web 应用，Spring Boot Actuator 会自动将所有启用的端点通过 HTTP 方式暴露。默认约定是使用前缀为 \u003ccode\u003e/actuator\u003c/code\u003e 的端点的 id 作为 URL 路径。例如，健康被暴露为 \u003ccode\u003e/actuator/health\u003c/code\u003e。\u003c/p\u003e\n\u003cp\u003e有时，自定义管理端点的前缀很有用。例如，您的应用程序可能已经将 \u003ccode\u003e/actuator\u003c/code\u003e 用于其他目的。您可以使用 \u003ccode\u003emanagement.endpoints.web.base-path\u003c/code\u003e 属性更改管理端点的前缀，如以下示例所示：\u003c/p\u003e\n\u003cfigure class=\"highlight properties\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"attr\"\u003emanagement.endpoints.web.base-path\u003c/span\u003e=\u003cspan class=\"string\"\u003e/manage\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e该示例将端点从 \u003ccode\u003e/actuator/{id}\u003c/code\u003e 更改为 \u003ccode\u003e/manage/{id}\u003c/code\u003e（例如，\u003ccode\u003e/manage/info\u003c/code\u003e）。\u003c/p\u003e\n\u003ch3 id=\"自定义管理服务器端口\"\u003e\u003ca href=\"#自定义管理服务器端口\" class=\"headerlink\" title=\"自定义管理服务器端口\"\u003e\u003c/a\u003e自定义管理服务器端口\u003c/h3\u003e\u003cfigure class=\"highlight properties\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"attr\"\u003emanagement.server.port\u003c/span\u003e=\u003cspan class=\"string\"\u003e8081\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003ch3 id=\"配置-SSL\"\u003e\u003ca href=\"#配置-SSL\" class=\"headerlink\" title=\"配置 SSL\"\u003e\u003c/a\u003e配置 SSL\u003c/h3\u003e\u003cp\u003e当配置为使用自定义端口时，还可以使用各种 \u003ccode\u003emanagement.server.ssl.*\u003c/code\u003e 属性为管理服务器配置自己的 SSL。例如，这样做可以让管理服务器在主应用程序使用 HTTPS 时通过 HTTP 可用，如以下属性设置所示：\u003c/p\u003e\n\u003cfigure class=\"highlight properties\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"attr\"\u003eserver.port\u003c/span\u003e=\u003cspan class=\"string\"\u003e8443\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"attr\"\u003eserver.ssl.enabled\u003c/span\u003e=\u003cspan class=\"string\"\u003etrue\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"attr\"\u003eserver.ssl.key-store\u003c/span\u003e=\u003cspan class=\"string\"\u003eclasspath:store.jks\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"attr\"\u003eserver.ssl.key-password\u003c/span\u003e=\u003cspan class=\"string\"\u003esecret\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"attr\"\u003emanagement.server.port\u003c/span\u003e=\u003cspan class=\"string\"\u003e8080\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"attr\"\u003emanagement.server.ssl.enabled\u003c/span\u003e=\u003cspan class=\"string\"\u003efalse\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e或者，主服务器和管理服务器都可以使用 SSL，但使用不同的密钥存储，如下所示：\u003c/p\u003e\n\u003cfigure class=\"highlight properties\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e8\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"attr\"\u003eserver.port\u003c/span\u003e=\u003cspan class=\"string\"\u003e8443\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"attr\"\u003eserver.ssl.enabled\u003c/span\u003e=\u003cspan class=\"string\"\u003etrue\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"attr\"\u003eserver.ssl.key-store\u003c/span\u003e=\u003cspan class=\"string\"\u003eclasspath:main.jks\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"attr\"\u003eserver.ssl.key-password\u003c/span\u003e=\u003cspan class=\"string\"\u003esecret\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"attr\"\u003emanagement.server.port\u003c/span\u003e=\u003cspan class=\"string\"\u003e8080\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"attr\"\u003emanagement.server.ssl.enabled\u003c/span\u003e=\u003cspan class=\"string\"\u003etrue\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"attr\"\u003emanagement.server.ssl.key-store\u003c/span\u003e=\u003cspan class=\"string\"\u003eclasspath:management.jks\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"attr\"\u003emanagement.server.ssl.key-password\u003c/span\u003e=\u003cspan class=\"string\"\u003esecret\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003ch3 id=\"自定义管理服务器地址\"\u003e\u003ca href=\"#自定义管理服务器地址\" class=\"headerlink\" title=\"自定义管理服务器地址\"\u003e\u003c/a\u003e自定义管理服务器地址\u003c/h3\u003e\u003cfigure class=\"highlight properties\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"attr\"\u003emanagement.server.port\u003c/span\u003e=\u003cspan class=\"string\"\u003e8081\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"attr\"\u003emanagement.server.address\u003c/span\u003e=\u003cspan class=\"string\"\u003e127.0.0.1\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003ch3 id=\"禁用-HTTP-端点\"\u003e\u003ca href=\"#禁用-HTTP-端点\" class=\"headerlink\" title=\"禁用 HTTP 端点\"\u003e\u003c/a\u003e禁用 HTTP 端点\u003c/h3\u003e\u003cp\u003e如果您不想通过 HTTP 方式暴露端点，可以将管理端口设置为 -1，如以下示例所示：\u003c/p\u003e\n\u003cfigure class=\"highlight properties\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"attr\"\u003emanagement.server.port\u003c/span\u003e=\u003cspan class=\"string\"\u003e-1\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e也可以通过使用 management.endpoints.web.exposure.exclude 属性来实现这一点，如以下示例所示：\u003c/p\u003e\n\u003cfigure class=\"highlight properties\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"attr\"\u003emanagement.endpoints.web.exposure.exclude\u003c/span\u003e=\u003cspan class=\"string\"\u003e*\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003ch2 id=\"通过-JMX-进行监控和管理\"\u003e\u003ca href=\"#通过-JMX-进行监控和管理\" class=\"headerlink\" title=\"通过 JMX 进行监控和管理\"\u003e\u003c/a\u003e通过 JMX 进行监控和管理\u003c/h2\u003e\u003cp\u003eJava 管理扩展 (JMX) 提供了一种标准机制来监视和管理应用程序。默认情况下，此功能未启用。您可以通过将 \u003ccode\u003espring.jmx.enabled\u003c/code\u003e 配置属性设置为 true 来打开它。 Spring Boot 将最合适的 \u003ccode\u003eMBeanServer\u003c/code\u003e 暴露为 ID 为 \u003ccode\u003embeanServer\u003c/code\u003e 的 bean。使用 Spring JMX 注释（\u003ccode\u003e@ManagedResource\u003c/code\u003e、\u003ccode\u003e@ManagedAttribute\u003c/code\u003e 或 \u003ccode\u003e@ManagedOperation\u003c/code\u003e）注释的任何 bean 都会暴露给它。\u003c/p\u003e\n\u003cp\u003e如果您的平台提供标准 \u003ccode\u003eMBeanServer\u003c/code\u003e，则 Spring Boot 会使用该标准并在必要时默认使用 VM \u003ccode\u003eMBeanServer\u003c/code\u003e。如果一切都失败了，则创建一个新的 \u003ccode\u003eMBeanServer\u003c/code\u003e。\u003c/p\u003e\n\u003cp\u003e有关更多详细信息，请参阅 \u003ca target=\"_blank\" rel=\"noopener\" href=\"https://github.com/spring-projects/spring-boot/tree/v2.7.0/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/jmx/JmxAutoConfiguration.java\"\u003e\u003ccode\u003eJmxAutoConfiguration\u003c/code\u003e\u003c/a\u003e 类。\u003c/p\u003e\n\u003cp\u003e默认情况下，Spring Boot 还将管理端点公开为 \u003ccode\u003eorg.springframework.boot\u003c/code\u003e 域下的 JMX MBean。要完全控制 JMX 域中的端点注册，请考虑注册您自己的 \u003ccode\u003eEndpointObjectNameFactory\u003c/code\u003e 实现。\u003c/p\u003e\n\u003ch3 id=\"定制化-MBean-Names\"\u003e\u003ca href=\"#定制化-MBean-Names\" class=\"headerlink\" title=\"定制化 MBean Names\"\u003e\u003c/a\u003e定制化 MBean Names\u003c/h3\u003e\u003cp\u003eMBean 的名称通常由端点的 id 生成。例如，健康端点公开为 \u003ccode\u003eorg.springframework.boot:type=Endpoint,name=Health\u003c/code\u003e。\u003c/p\u003e\n\u003cp\u003e如果您的应用程序包含多个 Spring \u003ccode\u003eApplicationContext\u003c/code\u003e，您可能会发现名称冲突。要解决此问题，您可以将 \u003ccode\u003espring.jmx.unique-names\u003c/code\u003e 属性设置为 true，以便 MBean 名称始终是唯一的。\u003c/p\u003e\n\u003cp\u003e如果需要定制，跨域按如下配置：\u003c/p\u003e\n\u003cfigure class=\"highlight properties\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"attr\"\u003espring.jmx.unique-names\u003c/span\u003e=\u003cspan class=\"string\"\u003etrue\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"attr\"\u003emanagement.endpoints.jmx.domain\u003c/span\u003e=\u003cspan class=\"string\"\u003ecom.example.myapp\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003ch3 id=\"禁用-JMX-端点\"\u003e\u003ca href=\"#禁用-JMX-端点\" class=\"headerlink\" title=\"禁用 JMX 端点\"\u003e\u003c/a\u003e禁用 JMX 端点\u003c/h3\u003e\u003cp\u003e想禁用 JMX 端点，可以按如下配置：\u003c/p\u003e\n\u003cfigure class=\"highlight stylus\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003emanagement\u003cspan class=\"selector-class\"\u003e.endpoints\u003c/span\u003e\u003cspan class=\"selector-class\"\u003e.jmx\u003c/span\u003e\u003cspan class=\"selector-class\"\u003e.exposure\u003c/span\u003e.exclude=*\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003ch3 id=\"将-Jolokia-用于基于-HTTP-的-JMX\"\u003e\u003ca href=\"#将-Jolokia-用于基于-HTTP-的-JMX\" class=\"headerlink\" title=\"将 Jolokia 用于基于 HTTP 的 JMX\"\u003e\u003c/a\u003e将 Jolokia 用于基于 HTTP 的 JMX\u003c/h3\u003e\u003cp\u003eJolokia 是一个 JMX-HTTP 的桥接工具，它提供了另一种访问 JMX bean 的方法。要使用 Jolokia，需要先添加依赖：\u003c/p\u003e\n\u003cfigure class=\"highlight xml\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"tag\"\u003e\u0026lt;\u003cspan class=\"name\"\u003edependency\u003c/span\u003e\u0026gt;\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"tag\"\u003e\u0026lt;\u003cspan class=\"name\"\u003egroupId\u003c/span\u003e\u0026gt;\u003c/span\u003eorg.jolokia\u003cspan class=\"tag\"\u003e\u0026lt;/\u003cspan class=\"name\"\u003egroupId\u003c/span\u003e\u0026gt;\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"tag\"\u003e\u0026lt;\u003cspan class=\"name\"\u003eartifactId\u003c/span\u003e\u0026gt;\u003c/span\u003ejolokia-core\u003cspan class=\"tag\"\u003e\u0026lt;/\u003cspan class=\"name\"\u003eartifactId\u003c/span\u003e\u0026gt;\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026lt;/dependency\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e然后，您可以通过将 \u003ccode\u003ejolokia\u003c/code\u003e 或 \u003ccode\u003e*\u003c/code\u003e 添加到 \u003ccode\u003eManagement.Endpoints.web.exposure.include\u003c/code\u003e 属性来暴露 Jolokia 端点。然后，您可以在管理 HTTP 服务器上使用 \u003ccode\u003e/actuator/jolokia\u003c/code\u003e 访问它。\u003c/p\u003e\n\u003ch2 id=\"日志\"\u003e\u003ca href=\"#日志\" class=\"headerlink\" title=\"日志\"\u003e\u003c/a\u003e日志\u003c/h2\u003e\u003cp\u003eSpring Boot Actuator 支持查看和配置应用日志级别。\u003c/p\u003e\n\u003cp\u003e日志级别的可选值如下：\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003eTRACE\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eDEBUG\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eINFO\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eWARN\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eERROR\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eFATAL\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eOFF\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003enull\u003c/code\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e\u003ccode\u003enull\u003c/code\u003e 表示没有显式配置。\u003c/p\u003e\n\u003ch2 id=\"指标\"\u003e\u003ca href=\"#指标\" class=\"headerlink\" title=\"指标\"\u003e\u003c/a\u003e指标\u003c/h2\u003e\u003ch2 id=\"审计\"\u003e\u003ca href=\"#审计\" class=\"headerlink\" title=\"审计\"\u003e\u003c/a\u003e审计\u003c/h2\u003e\u003cp\u003eSpring Boot Actuator 支持简单的审计功能。如果应用中启用了 Spring Security，Spring Boot Actuator 就会发布安全事件（如：“身份验证成功”、“失败”和“访问被拒绝”异常）。\u003c/p\u003e\n\u003cp\u003e可以通过在应用的配置中提供 \u003ccode\u003eAuditEventRepository\u003c/code\u003e 类型的 bean 来启用审计。为方便起见，Spring Boot 提供了一个 \u003ccode\u003eInMemoryAuditEventRepository\u003c/code\u003e。 \u003ccode\u003eInMemoryAuditEventRepository\u003c/code\u003e 的功能有限，建议仅将其用于开发环境。\u003c/p\u003e\n\u003cp\u003e如果要自定义安全事件，可以提供 \u003ccode\u003eAbstractAuthenticationAuditListener\u003c/code\u003e 和 \u003ccode\u003eAbstractAuthorizationAuditListener\u003c/code\u003e 实现。\u003c/p\u003e\n\u003cp\u003e此外，还可以将审计服务用于业务活动。为此，要么将 \u003ccode\u003eAuditEventRepository\u003c/code\u003e bean 注入组件并直接使用它，要么使用 Spring \u003ccode\u003eApplicationEventPublisher\u003c/code\u003e 发布 \u003ccode\u003eAuditApplicationEvent\u003c/code\u003e（通过实现 \u003ccode\u003eApplicationEventPublisherAware\u003c/code\u003e）。\u003c/p\u003e\n\u003ch2 id=\"HTTP-追踪\"\u003e\u003ca href=\"#HTTP-追踪\" class=\"headerlink\" title=\"HTTP 追踪\"\u003e\u003c/a\u003eHTTP 追踪\u003c/h2\u003e\u003cp\u003e用户可以通过在应用中提供 \u003ccode\u003eHttpTraceRepository\u003c/code\u003e 类型的 bean 来启用 HTTP 跟踪。Spring Boot 提供了内置的 \u003ccode\u003eInMemoryHttpTraceRepository\u003c/code\u003e，它可以存储最近 100 次（默认）请求-响应的追踪数据。与其他 HTTP 追踪解决方案相比，\u003ccode\u003eInMemoryHttpTraceRepository\u003c/code\u003e 比较受限，建议仅用于开发环境。对于生产环境，建议使用 Zipkin 或 Spring Cloud Sleuth。\u003c/p\u003e\n\u003cp\u003e或者，可以自定义 \u003ccode\u003eHttpTraceRepository\u003c/code\u003e。\u003c/p\u003e\n\u003ch2 id=\"处理监控\"\u003e\u003ca href=\"#处理监控\" class=\"headerlink\" title=\"处理监控\"\u003e\u003c/a\u003e处理监控\u003c/h2\u003e\u003cp\u003e在 spring-boot 模块中，您可以找到两个类来创建对进程监控有用的文件：\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003eApplicationPidFileWriter\u003c/code\u003e 创建一个包含应用程序 PID 的文件（默认情况下，在应用程序目录中，文件名为 \u003ccode\u003eapplication.pid\u003c/code\u003e）。\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eWebServerPortFileWriter\u003c/code\u003e 创建一个文件（或多个文件），其中包含正在运行的 Web 服务器的端口（默认情况下，在应用程序目录中，文件名为 \u003ccode\u003eapplication.port\u003c/code\u003e）。\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"参考资料\"\u003e\u003ca href=\"#参考资料\" class=\"headerlink\" title=\"参考资料\"\u003e\u003c/a\u003e参考资料\u003c/h2\u003e\u003cul\u003e\n\u003cli\u003e\u003ca target=\"_blank\" rel=\"noopener\" href=\"https://docs.spring.io/spring-boot/docs/current/reference/html/actuator.html#actuator\"\u003eSpring Boot 官方文档之 Production-ready Features\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n    \u003c/div\u003e",
  "Date": "2022-06-14T12:51:22Z",
  "Author": "钝悟 ◾ Dunwu"
}