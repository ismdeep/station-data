{
  "Source": "dunwu",
  "Title": "ZooKeeperJavaApi",
  "Link": "https://dunwu.github.io/blog/pages/3cb33a/",
  "Content": "\u003cdiv class=\"post-body\" itemprop=\"articleBody\"\u003e\u003ch1 id=\"ZooKeeper-Java-Api\"\u003e\u003ca href=\"#ZooKeeper-Java-Api\" class=\"headerlink\" title=\"ZooKeeper Java Api\"\u003e\u003c/a\u003eZooKeeper Java Api\u003c/h1\u003e\u003cblockquote\u003e\n\u003cp\u003eZooKeeper 是 Apache 的顶级项目。\u003cstrong\u003eZooKeeper 为分布式应用提供了高效且可靠的分布式协调服务，提供了诸如统一命名服务、配置管理和分布式锁等分布式的基础服务。在解决分布式数据一致性方面，ZooKeeper 并没有直接采用 Paxos 算法，而是采用了名为 ZAB 的一致性协议\u003c/strong\u003e。\u003c/p\u003e\n\u003cp\u003eZooKeeper 主要用来解决分布式集群中应用系统的一致性问题，它能提供基于类似于文件系统的目录节点树方式的数据存储。但是 ZooKeeper 并不是用来专门存储数据的，它的作用主要是用来\u003cstrong\u003e维护和监控存储数据的状态变化。通过监控这些数据状态的变化，从而可以达到基于数据的集群管理\u003c/strong\u003e。\u003c/p\u003e\n\u003cp\u003e很多大名鼎鼎的框架都基于 ZooKeeper 来实现分布式高可用，如：Dubbo、Kafka 等。\u003c/p\u003e\n\u003cp\u003eZooKeeper 官方支持 Java 和 C 的 Client API。ZooKeeper 社区为大多数语言（.NET，python 等）提供非官方 API。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003ch2 id=\"ZooKeeper-官方客户端\"\u003e\u003ca href=\"#ZooKeeper-官方客户端\" class=\"headerlink\" title=\"ZooKeeper 官方客户端\"\u003e\u003c/a\u003eZooKeeper 官方客户端\u003c/h2\u003e\u003ch3 id=\"ZooKeeper-客户端简介\"\u003e\u003ca href=\"#ZooKeeper-客户端简介\" class=\"headerlink\" title=\"ZooKeeper 客户端简介\"\u003e\u003c/a\u003eZooKeeper 客户端简介\u003c/h3\u003e\u003cp\u003e客户端和服务端交互遵循以下基本步骤：\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003e客户端连接 ZooKeeper 服务端集群任意工作节点，该节点为客户端分配会话 ID。\u003c/li\u003e\n\u003cli\u003e为了保持通信，客户端需要和服务端保持心跳（实质上就是 ping ）。否则，ZooKeeper 服务会话超时时间内未收到客户端请求，会将会话视为过期。这种情况下，客户端如果要通信，就需要重新连接。\u003c/li\u003e\n\u003cli\u003e只要会话 ID 处于活动状态，就可以执行读写 znode 操作。\u003c/li\u003e\n\u003cli\u003e所有任务完成后，客户端断开与 ZooKeeper 服务端集群的连接。如果客户端长时间不活动，则 ZooKeeper 集合将自动断开客户端。\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003eZooKeeper 官方客户端的核心是 \u003cstrong\u003e\u003ccode\u003eZooKeeper\u003c/code\u003e 类\u003c/strong\u003e。它在其构造函数中提供了连接 ZooKeeper 服务的配置选项，并提供了访问 ZooKeeper 数据的方法。\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e其主要操作如下：\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003cstrong\u003e\u003ccode\u003econnect\u003c/code\u003e\u003c/strong\u003e - 连接 ZooKeeper 服务\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003e\u003ccode\u003ecreate\u003c/code\u003e\u003c/strong\u003e - 创建 znode\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003e\u003ccode\u003eexists\u003c/code\u003e\u003c/strong\u003e - 检查 znode 是否存在及其信息\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003e\u003ccode\u003egetACL\u003c/code\u003e\u003c/strong\u003e / \u003cstrong\u003e\u003ccode\u003esetACL\u003c/code\u003e\u003c/strong\u003e- 获取/设置一个 znode 的 ACL\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003e\u003ccode\u003egetData\u003c/code\u003e\u003c/strong\u003e / \u003cstrong\u003e\u003ccode\u003esetData\u003c/code\u003e\u003c/strong\u003e- 获取/设置一个 znode 的数据\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003e\u003ccode\u003egetChildren\u003c/code\u003e\u003c/strong\u003e - 获取特定 znode 中的所有子节点\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003e\u003ccode\u003edelete\u003c/code\u003e\u003c/strong\u003e - 删除特定的 znode 及其所有子项\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003e\u003ccode\u003eclose\u003c/code\u003e\u003c/strong\u003e - 关闭连接\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/blockquote\u003e\n\u003cp\u003eZooKeeper 官方客户端的使用方法是在 maven 项目的 pom.xml 中添加：\u003c/p\u003e\n\u003cfigure class=\"highlight xml\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"tag\"\u003e\u0026lt;\u003cspan class=\"name\"\u003edependency\u003c/span\u003e\u0026gt;\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"tag\"\u003e\u0026lt;\u003cspan class=\"name\"\u003egroupId\u003c/span\u003e\u0026gt;\u003c/span\u003eorg.apache.zookeeper\u003cspan class=\"tag\"\u003e\u0026lt;/\u003cspan class=\"name\"\u003egroupId\u003c/span\u003e\u0026gt;\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"tag\"\u003e\u0026lt;\u003cspan class=\"name\"\u003eartifactId\u003c/span\u003e\u0026gt;\u003c/span\u003ezookeeper\u003cspan class=\"tag\"\u003e\u0026lt;/\u003cspan class=\"name\"\u003eartifactId\u003c/span\u003e\u0026gt;\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"tag\"\u003e\u0026lt;\u003cspan class=\"name\"\u003eversion\u003c/span\u003e\u0026gt;\u003c/span\u003e3.7.0\u003cspan class=\"tag\"\u003e\u0026lt;/\u003cspan class=\"name\"\u003eversion\u003c/span\u003e\u0026gt;\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"tag\"\u003e\u0026lt;/\u003cspan class=\"name\"\u003edependency\u003c/span\u003e\u0026gt;\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003ch3 id=\"创建连接\"\u003e\u003ca href=\"#创建连接\" class=\"headerlink\" title=\"创建连接\"\u003e\u003c/a\u003e创建连接\u003c/h3\u003e\u003cp\u003eZooKeeper 类通过其构造函数提供连接 ZooKeeper 服务的功能。其构造函数的定义如下：\u003c/p\u003e\n\u003cfigure class=\"highlight java\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003eZooKeeper(String connectionString, \u003cspan class=\"type\"\u003eint\u003c/span\u003e sessionTimeout, Watcher watcher)\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003e参数说明：\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003cstrong\u003e\u003ccode\u003econnectionString\u003c/code\u003e\u003c/strong\u003e - ZooKeeper 集群的主机列表。\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003e\u003ccode\u003esessionTimeout\u003c/code\u003e\u003c/strong\u003e - 会话超时时间（以毫秒为单位）。\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003ewatcher\u003c/strong\u003e - 实现监视机制的回调。当被监控的 znode 状态发生变化时，ZooKeeper 服务端的 \u003ccode\u003eWatcherManager\u003c/code\u003e 会主动调用传入的 Watcher ，推送状态变化给客户端。\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/blockquote\u003e\n\u003cp\u003e【示例】连接 ZooKeeper\u003c/p\u003e\n\u003cfigure class=\"highlight java\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e8\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e9\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e10\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e11\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e12\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e13\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e14\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e15\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e16\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e17\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e18\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e19\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e20\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e21\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e22\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e23\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e24\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e25\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e26\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e27\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e28\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e29\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e30\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e31\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e32\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e33\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e34\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e35\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e36\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e37\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e38\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e39\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e40\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e41\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e42\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e43\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e44\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e45\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e46\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e47\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e48\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e49\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e50\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e51\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e52\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e53\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e54\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e55\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e56\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"keyword\"\u003eimport\u003c/span\u003e org.apache.zookeeper.Watcher;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"keyword\"\u003eimport\u003c/span\u003e org.apache.zookeeper.ZooKeeper;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"keyword\"\u003eimport\u003c/span\u003e org.junit.jupiter.api.*;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"keyword\"\u003eimport\u003c/span\u003e java.io.IOException;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"keyword\"\u003eimport\u003c/span\u003e java.util.concurrent.CountDownLatch;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"comment\"\u003e/**\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"comment\"\u003e * ZooKeeper 官方客户端测试例\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"comment\"\u003e *\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"comment\"\u003e * \u003cspan class=\"doctag\"\u003e@author\u003c/span\u003e \u0026lt;a href=\u0026#34;mailto:forbreak@163.com\u0026#34;\u0026gt;Zhang Peng\u0026lt;/a\u0026gt;\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"comment\"\u003e * \u003cspan class=\"doctag\"\u003e@since\u003c/span\u003e 2022-02-19\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"comment\"\u003e */\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e@DisplayName(\u0026#34;ZooKeeper 官方客户端测试例\u0026#34;)\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"keyword\"\u003epublic\u003c/span\u003e \u003cspan class=\"keyword\"\u003eclass\u003c/span\u003e \u003cspan class=\"title class_\"\u003eZooKeeperTest\u003c/span\u003e {\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"comment\"\u003e/**\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"comment\"\u003e     * ZooKeeper 连接实例\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"comment\"\u003e     */\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"keyword\"\u003eprivate\u003c/span\u003e \u003cspan class=\"keyword\"\u003estatic\u003c/span\u003e ZooKeeper zk;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"comment\"\u003e/**\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"comment\"\u003e     * 创建 ZooKeeper 连接\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"comment\"\u003e     */\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"meta\"\u003e@BeforeAll\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"keyword\"\u003epublic\u003c/span\u003e \u003cspan class=\"keyword\"\u003estatic\u003c/span\u003e \u003cspan class=\"keyword\"\u003evoid\u003c/span\u003e \u003cspan class=\"title function_\"\u003einit\u003c/span\u003e\u003cspan class=\"params\"\u003e()\u003c/span\u003e \u003cspan class=\"keyword\"\u003ethrows\u003c/span\u003e IOException, InterruptedException {\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        \u003cspan class=\"keyword\"\u003efinal\u003c/span\u003e \u003cspan class=\"type\"\u003eString\u003c/span\u003e \u003cspan class=\"variable\"\u003eHOST\u003c/span\u003e \u003cspan class=\"operator\"\u003e=\u003c/span\u003e \u003cspan class=\"string\"\u003e\u0026#34;localhost:2181\u0026#34;\u003c/span\u003e;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        \u003cspan class=\"type\"\u003eCountDownLatch\u003c/span\u003e \u003cspan class=\"variable\"\u003elatch\u003c/span\u003e \u003cspan class=\"operator\"\u003e=\u003c/span\u003e \u003cspan class=\"keyword\"\u003enew\u003c/span\u003e \u003cspan class=\"title class_\"\u003eCountDownLatch\u003c/span\u003e(\u003cspan class=\"number\"\u003e1\u003c/span\u003e);\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        zk = \u003cspan class=\"keyword\"\u003enew\u003c/span\u003e \u003cspan class=\"title class_\"\u003eZooKeeper\u003c/span\u003e(HOST, \u003cspan class=\"number\"\u003e5000\u003c/span\u003e, watcher -\u0026gt; {\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e            \u003cspan class=\"keyword\"\u003eif\u003c/span\u003e (watcher.getState() == Watcher.Event.KeeperState.SyncConnected) {\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e                latch.countDown();\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e            }\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        });\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        latch.await();\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    }\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"comment\"\u003e/**\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"comment\"\u003e     * 关闭 ZooKeeper 连接\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"comment\"\u003e     */\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"meta\"\u003e@AfterAll\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"keyword\"\u003epublic\u003c/span\u003e \u003cspan class=\"keyword\"\u003estatic\u003c/span\u003e \u003cspan class=\"keyword\"\u003evoid\u003c/span\u003e \u003cspan class=\"title function_\"\u003edestroy\u003c/span\u003e\u003cspan class=\"params\"\u003e()\u003c/span\u003e \u003cspan class=\"keyword\"\u003ethrows\u003c/span\u003e InterruptedException {\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        \u003cspan class=\"keyword\"\u003eif\u003c/span\u003e (zk != \u003cspan class=\"literal\"\u003enull\u003c/span\u003e) {\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e            zk.close();\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        }\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    }\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"comment\"\u003e/**\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"comment\"\u003e     * 建立连接\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"comment\"\u003e     */\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"meta\"\u003e@Test\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"keyword\"\u003epublic\u003c/span\u003e \u003cspan class=\"keyword\"\u003evoid\u003c/span\u003e \u003cspan class=\"title function_\"\u003egetState\u003c/span\u003e\u003cspan class=\"params\"\u003e()\u003c/span\u003e {\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        ZooKeeper.\u003cspan class=\"type\"\u003eStates\u003c/span\u003e \u003cspan class=\"variable\"\u003estate\u003c/span\u003e \u003cspan class=\"operator\"\u003e=\u003c/span\u003e zk.getState();\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        Assertions.assertTrue(state.isAlive());\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    }\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e}\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003e说明：\u003c/p\u003e\n\u003cp\u003e添加一个 \u003ccode\u003econnect\u003c/code\u003e 方法，用于创建一个 \u003ccode\u003eZooKeeper\u003c/code\u003e 对象，用于连接到 ZooKeeper 服务。\u003c/p\u003e\n\u003cp\u003e这里 \u003ccode\u003eCountDownLatch\u003c/code\u003e 用于停止（等待）主进程，直到客户端与 ZooKeeper 集合连接。\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003eZooKeeper\u003c/code\u003e 对象通过监听器回调来监听连接状态。一旦客户端与 ZooKeeper 建立连接，监听器回调就会被调用；并且监听器回调函数调用 \u003ccode\u003eCountDownLatch\u003c/code\u003e 的 \u003ccode\u003ecountDown\u003c/code\u003e 方法来释放锁，在主进程中 \u003ccode\u003eawait\u003c/code\u003e。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003ch3 id=\"节点增删改查\"\u003e\u003ca href=\"#节点增删改查\" class=\"headerlink\" title=\"节点增删改查\"\u003e\u003c/a\u003e节点增删改查\u003c/h3\u003e\u003ch4 id=\"判断节点是否存在\"\u003e\u003ca href=\"#判断节点是否存在\" class=\"headerlink\" title=\"判断节点是否存在\"\u003e\u003c/a\u003e判断节点是否存在\u003c/h4\u003e\u003cp\u003eZooKeeper 类提供了 \u003ccode\u003eexists\u003c/code\u003e 方法来检查 znode 的存在。如果指定的 znode 存在，则返回一个 znode 的元数据。\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003eexists\u003c/code\u003e 方法的签名如下：\u003c/p\u003e\n\u003cfigure class=\"highlight pgsql\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"keyword\"\u003eexists\u003c/span\u003e(String \u003cspan class=\"type\"\u003epath\u003c/span\u003e, \u003cspan class=\"type\"\u003eboolean\u003c/span\u003e watcher)\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003cstrong\u003epath\u003c/strong\u003e- Znode 路径\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003ewatcher\u003c/strong\u003e - 布尔值，用于指定是否监视指定的 znode\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e【示例】\u003c/p\u003e\n\u003cfigure class=\"highlight java\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"type\"\u003eStat\u003c/span\u003e \u003cspan class=\"variable\"\u003estat\u003c/span\u003e \u003cspan class=\"operator\"\u003e=\u003c/span\u003e zk.exists(\u003cspan class=\"string\"\u003e\u0026#34;/\u0026#34;\u003c/span\u003e, \u003cspan class=\"literal\"\u003etrue\u003c/span\u003e);\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eAssertions.assertNotNull(stat);\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003ch4 id=\"创建节点\"\u003e\u003ca href=\"#创建节点\" class=\"headerlink\" title=\"创建节点\"\u003e\u003c/a\u003e创建节点\u003c/h4\u003e\u003cp\u003e\u003ccode\u003eZooKeeper\u003c/code\u003e 类的 \u003ccode\u003ecreate\u003c/code\u003e 方法用于在 ZooKeeper 中创建一个新节点（znode）。\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003ecreate\u003c/code\u003e 方法的签名如下：\u003c/p\u003e\n\u003cfigure class=\"highlight lua\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"built_in\"\u003ecreate\u003c/span\u003e(String \u003cspan class=\"built_in\"\u003epath\u003c/span\u003e, \u003cspan class=\"built_in\"\u003ebyte\u003c/span\u003e[] data, List\u0026lt;ACL\u0026gt; acl, CreateMode createMode)\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003cstrong\u003epath\u003c/strong\u003e - Znode 路径。例如，/myapp1，/myapp2，/myapp1/mydata1，myapp2/mydata1/myanothersubdata\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003edata\u003c/strong\u003e - 要存储在指定 znode 路径中的数据\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eacl\u003c/strong\u003e - 要创建的节点的访问控制列表。ZooKeeper API 提供了一个静态接口 \u003cstrong\u003eZooDefs.Ids\u003c/strong\u003e 来获取一些基本的 acl 列表。例如，ZooDefs.Ids.OPEN_ACL_UNSAFE 返回打开 znode 的 acl 列表。\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003ecreateMode\u003c/strong\u003e - 节点的类型，即临时，顺序或两者。这是一个\u003cstrong\u003e枚举\u003c/strong\u003e。\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e【示例】\u003c/p\u003e\n\u003cfigure class=\"highlight java\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"keyword\"\u003eprivate\u003c/span\u003e \u003cspan class=\"keyword\"\u003estatic\u003c/span\u003e \u003cspan class=\"keyword\"\u003efinal\u003c/span\u003e \u003cspan class=\"type\"\u003eString\u003c/span\u003e \u003cspan class=\"variable\"\u003epath\u003c/span\u003e \u003cspan class=\"operator\"\u003e=\u003c/span\u003e \u003cspan class=\"string\"\u003e\u0026#34;/mytest\u0026#34;\u003c/span\u003e;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"type\"\u003eString\u003c/span\u003e \u003cspan class=\"variable\"\u003etext\u003c/span\u003e \u003cspan class=\"operator\"\u003e=\u003c/span\u003e \u003cspan class=\"string\"\u003e\u0026#34;My first zookeeper app\u0026#34;\u003c/span\u003e;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003ezk.create(path, text.getBytes(), ZooDefs.Ids.OPEN_ACL_UNSAFE, CreateMode.PERSISTENT);\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"type\"\u003eStat\u003c/span\u003e \u003cspan class=\"variable\"\u003estat\u003c/span\u003e \u003cspan class=\"operator\"\u003e=\u003c/span\u003e zk.exists(path, \u003cspan class=\"literal\"\u003etrue\u003c/span\u003e);\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eAssertions.assertNotNull(stat);\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003ch4 id=\"删除节点\"\u003e\u003ca href=\"#删除节点\" class=\"headerlink\" title=\"删除节点\"\u003e\u003c/a\u003e删除节点\u003c/h4\u003e\u003cp\u003eZooKeeper 类提供了 \u003ccode\u003edelete\u003c/code\u003e 方法来删除指定的 znode。\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003edelete\u003c/code\u003e 方法的签名如下：\u003c/p\u003e\n\u003cfigure class=\"highlight pgsql\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"keyword\"\u003edelete\u003c/span\u003e(String \u003cspan class=\"type\"\u003epath\u003c/span\u003e, \u003cspan class=\"type\"\u003eint\u003c/span\u003e \u003cspan class=\"keyword\"\u003eversion\u003c/span\u003e)\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003cstrong\u003epath\u003c/strong\u003e - Znode 路径。\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eversion\u003c/strong\u003e - znode 的当前版本。\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e让我们创建一个新的 Java 应用程序来了解 ZooKeeper API 的 \u003cstrong\u003edelete\u003c/strong\u003e 功能。创建文件 \u003cstrong\u003eZKDelete.java\u003c/strong\u003e 。在 main 方法中，使用 \u003cstrong\u003eZooKeeperConnection\u003c/strong\u003e 对象创建一个 ZooKeeper 对象 \u003cstrong\u003ezk\u003c/strong\u003e 。然后，使用指定的路径和版本号调用 \u003cstrong\u003ezk\u003c/strong\u003e 对象的 \u003cstrong\u003edelete\u003c/strong\u003e 方法。\u003c/p\u003e\n\u003cp\u003e删除 znode 的完整程序代码如下：\u003c/p\u003e\n\u003cp\u003e【示例】\u003c/p\u003e\n\u003cfigure class=\"highlight java\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003ezk.delete(path, zk.exists(path, \u003cspan class=\"literal\"\u003etrue\u003c/span\u003e).getVersion());\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"type\"\u003eStat\u003c/span\u003e \u003cspan class=\"variable\"\u003estat\u003c/span\u003e \u003cspan class=\"operator\"\u003e=\u003c/span\u003e zk.exists(path, \u003cspan class=\"literal\"\u003etrue\u003c/span\u003e);\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eAssertions.assertNull(stat);\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003ch4 id=\"获取节点数据\"\u003e\u003ca href=\"#获取节点数据\" class=\"headerlink\" title=\"获取节点数据\"\u003e\u003c/a\u003e获取节点数据\u003c/h4\u003e\u003cp\u003eZooKeeper 类提供 \u003cstrong\u003egetData\u003c/strong\u003e 方法来获取附加在指定 znode 中的数据及其状态。 \u003cstrong\u003egetData\u003c/strong\u003e 方法的签名如下：\u003c/p\u003e\n\u003cfigure class=\"highlight stylus\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"function\"\u003e\u003cspan class=\"title\"\u003egetData\u003c/span\u003e\u003cspan class=\"params\"\u003e(String path, Watcher watcher, Stat stat)\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003cstrong\u003epath\u003c/strong\u003e - Znode 路径。\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003ewatcher\u003c/strong\u003e - 监听器类型的回调函数。当指定的 znode 的数据改变时，ZooKeeper 集合将通过监听器回调进行通知。这是一次性通知。\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003estat\u003c/strong\u003e - 返回 znode 的元数据。\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e【示例】\u003c/p\u003e\n\u003cfigure class=\"highlight java\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"type\"\u003ebyte\u003c/span\u003e[] data = zk.getData(path, \u003cspan class=\"literal\"\u003efalse\u003c/span\u003e, \u003cspan class=\"literal\"\u003enull\u003c/span\u003e);\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"type\"\u003eString\u003c/span\u003e \u003cspan class=\"variable\"\u003etext1\u003c/span\u003e \u003cspan class=\"operator\"\u003e=\u003c/span\u003e \u003cspan class=\"keyword\"\u003enew\u003c/span\u003e \u003cspan class=\"title class_\"\u003eString\u003c/span\u003e(data);\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eAssertions.assertEquals(text, text1);\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eSystem.out.println(text1);\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003ch4 id=\"设置节点数据\"\u003e\u003ca href=\"#设置节点数据\" class=\"headerlink\" title=\"设置节点数据\"\u003e\u003c/a\u003e设置节点数据\u003c/h4\u003e\u003cp\u003eZooKeeper 类提供 \u003cstrong\u003esetData\u003c/strong\u003e 方法来修改指定 znode 中附加的数据。 \u003cstrong\u003esetData\u003c/strong\u003e 方法的签名如下：\u003c/p\u003e\n\u003cfigure class=\"highlight arduino\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"built_in\"\u003esetData\u003c/span\u003e(\u003cspan class=\"type\"\u003eString\u003c/span\u003e path, \u003cspan class=\"type\"\u003ebyte\u003c/span\u003e[] data, \u003cspan class=\"type\"\u003eint\u003c/span\u003e version)\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003cstrong\u003epath\u003c/strong\u003e- Znode 路径\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003edata\u003c/strong\u003e - 要存储在指定 znode 路径中的数据。\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eversion\u003c/strong\u003e- znode 的当前版本。每当数据更改时，ZooKeeper 会更新 znode 的版本号。\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e【示例】\u003c/p\u003e\n\u003cfigure class=\"highlight java\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e8\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"type\"\u003eString\u003c/span\u003e \u003cspan class=\"variable\"\u003etext\u003c/span\u003e \u003cspan class=\"operator\"\u003e=\u003c/span\u003e \u003cspan class=\"string\"\u003e\u0026#34;含子节点的节点\u0026#34;\u003c/span\u003e;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003ezk.create(path, text.getBytes(), ZooDefs.Ids.OPEN_ACL_UNSAFE, CreateMode.PERSISTENT);\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003ezk.create(path + \u003cspan class=\"string\"\u003e\u0026#34;/1\u0026#34;\u003c/span\u003e, \u003cspan class=\"string\"\u003e\u0026#34;1\u0026#34;\u003c/span\u003e.getBytes(), ZooDefs.Ids.OPEN_ACL_UNSAFE, CreateMode.PERSISTENT);\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003ezk.create(path + \u003cspan class=\"string\"\u003e\u0026#34;/2\u0026#34;\u003c/span\u003e, \u003cspan class=\"string\"\u003e\u0026#34;1\u0026#34;\u003c/span\u003e.getBytes(), ZooDefs.Ids.OPEN_ACL_UNSAFE, CreateMode.PERSISTENT);\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eList\u0026lt;String\u0026gt; actualList = zk.getChildren(path, \u003cspan class=\"literal\"\u003efalse\u003c/span\u003e);\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"keyword\"\u003efor\u003c/span\u003e (String child : actualList) {\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    System.out.println(child);\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e}\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003ch4 id=\"获取子节点\"\u003e\u003ca href=\"#获取子节点\" class=\"headerlink\" title=\"获取子节点\"\u003e\u003c/a\u003e获取子节点\u003c/h4\u003e\u003cp\u003eZooKeeper 类提供 \u003cstrong\u003egetChildren\u003c/strong\u003e 方法来获取特定 znode 的所有子节点。 \u003cstrong\u003egetChildren\u003c/strong\u003e 方法的签名如下：\u003c/p\u003e\n\u003cfigure class=\"highlight stylus\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"function\"\u003e\u003cspan class=\"title\"\u003egetChildren\u003c/span\u003e\u003cspan class=\"params\"\u003e(String path, Watcher watcher)\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003cstrong\u003epath\u003c/strong\u003e - Znode 路径。\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003ewatcher\u003c/strong\u003e - 监听器类型的回调函数。当指定的 znode 被删除或 znode 下的子节点被创建/删除时，ZooKeeper 集合将进行通知。这是一次性通知。\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e【示例】\u003c/p\u003e\n\u003cfigure class=\"highlight java\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e8\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e9\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e10\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e11\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e12\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e13\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e@Test\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"keyword\"\u003epublic\u003c/span\u003e \u003cspan class=\"keyword\"\u003evoid\u003c/span\u003e \u003cspan class=\"title function_\"\u003egetChildren\u003c/span\u003e\u003cspan class=\"params\"\u003e()\u003c/span\u003e \u003cspan class=\"keyword\"\u003ethrows\u003c/span\u003e InterruptedException, KeeperException {\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"type\"\u003ebyte\u003c/span\u003e[] data = \u003cspan class=\"string\"\u003e\u0026#34;My first zookeeper app\u0026#34;\u003c/span\u003e.getBytes();\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    zk.create(path, data, ZooDefs.Ids.OPEN_ACL_UNSAFE, CreateMode.PERSISTENT);\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    zk.create(path + \u003cspan class=\"string\"\u003e\u0026#34;/1\u0026#34;\u003c/span\u003e, \u003cspan class=\"string\"\u003e\u0026#34;1\u0026#34;\u003c/span\u003e.getBytes(), ZooDefs.Ids.OPEN_ACL_UNSAFE, CreateMode.PERSISTENT);\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    zk.create(path + \u003cspan class=\"string\"\u003e\u0026#34;/2\u0026#34;\u003c/span\u003e, \u003cspan class=\"string\"\u003e\u0026#34;1\u0026#34;\u003c/span\u003e.getBytes(), ZooDefs.Ids.OPEN_ACL_UNSAFE, CreateMode.PERSISTENT);\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    List\u0026lt;String\u0026gt; actualList = zk.getChildren(path, \u003cspan class=\"literal\"\u003efalse\u003c/span\u003e);\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    List\u0026lt;String\u0026gt; expectedList = CollectionUtil.newArrayList(\u003cspan class=\"string\"\u003e\u0026#34;1\u0026#34;\u003c/span\u003e, \u003cspan class=\"string\"\u003e\u0026#34;2\u0026#34;\u003c/span\u003e);\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    Assertions.assertTrue(CollectionUtil.containsAll(expectedList, actualList));\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"keyword\"\u003efor\u003c/span\u003e (String child : actualList) {\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        System.out.println(child);\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    }\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e}\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003ch2 id=\"Curator-客户端\"\u003e\u003ca href=\"#Curator-客户端\" class=\"headerlink\" title=\"Curator 客户端\"\u003e\u003c/a\u003eCurator 客户端\u003c/h2\u003e\u003ch3 id=\"Curator-客户端简介\"\u003e\u003ca href=\"#Curator-客户端简介\" class=\"headerlink\" title=\"Curator 客户端简介\"\u003e\u003c/a\u003eCurator 客户端简介\u003c/h3\u003e\u003cp\u003eCurator 客户端的使用方法是在 maven 项目的 pom.xml 中添加：\u003c/p\u003e\n\u003cfigure class=\"highlight xml\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"tag\"\u003e\u0026lt;\u003cspan class=\"name\"\u003edependency\u003c/span\u003e\u0026gt;\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"tag\"\u003e\u0026lt;\u003cspan class=\"name\"\u003egroupId\u003c/span\u003e\u0026gt;\u003c/span\u003eorg.apache.curator\u003cspan class=\"tag\"\u003e\u0026lt;/\u003cspan class=\"name\"\u003egroupId\u003c/span\u003e\u0026gt;\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"tag\"\u003e\u0026lt;\u003cspan class=\"name\"\u003eartifactId\u003c/span\u003e\u0026gt;\u003c/span\u003ecurator-recipes\u003cspan class=\"tag\"\u003e\u0026lt;/\u003cspan class=\"name\"\u003eartifactId\u003c/span\u003e\u0026gt;\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"tag\"\u003e\u0026lt;\u003cspan class=\"name\"\u003eversion\u003c/span\u003e\u0026gt;\u003c/span\u003e5.1.0\u003cspan class=\"tag\"\u003e\u0026lt;/\u003cspan class=\"name\"\u003eversion\u003c/span\u003e\u0026gt;\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"tag\"\u003e\u0026lt;/\u003cspan class=\"name\"\u003edependency\u003c/span\u003e\u0026gt;\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003ch3 id=\"创建连接-1\"\u003e\u003ca href=\"#创建连接-1\" class=\"headerlink\" title=\"创建连接\"\u003e\u003c/a\u003e创建连接\u003c/h3\u003e\u003cfigure class=\"highlight java\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e8\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e9\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e10\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e11\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e12\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e13\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e14\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e15\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e16\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e17\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e18\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e19\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e20\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e21\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e22\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e23\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e24\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e25\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e26\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e27\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e28\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e29\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e30\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e31\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e32\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e33\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e34\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e35\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e36\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e37\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e38\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e39\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e40\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e41\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e42\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e43\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e44\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"keyword\"\u003eimport\u003c/span\u003e org.apache.curator.RetryPolicy;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"keyword\"\u003eimport\u003c/span\u003e org.apache.curator.framework.CuratorFramework;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"keyword\"\u003eimport\u003c/span\u003e org.apache.curator.framework.CuratorFrameworkFactory;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"keyword\"\u003eimport\u003c/span\u003e org.apache.curator.framework.imps.CuratorFrameworkState;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"keyword\"\u003eimport\u003c/span\u003e org.apache.curator.retry.RetryNTimes;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"keyword\"\u003eimport\u003c/span\u003e org.apache.zookeeper.CreateMode;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"keyword\"\u003eimport\u003c/span\u003e org.apache.zookeeper.ZooDefs;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"keyword\"\u003eimport\u003c/span\u003e org.junit.jupiter.api.*;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"keyword\"\u003eimport\u003c/span\u003e java.nio.charset.StandardCharsets;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"keyword\"\u003epublic\u003c/span\u003e \u003cspan class=\"keyword\"\u003eclass\u003c/span\u003e \u003cspan class=\"title class_\"\u003eCuratorTest\u003c/span\u003e {\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"comment\"\u003e/**\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"comment\"\u003e     * Curator ZooKeeper 连接实例\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"comment\"\u003e     */\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"keyword\"\u003eprivate\u003c/span\u003e \u003cspan class=\"keyword\"\u003estatic\u003c/span\u003e \u003cspan class=\"type\"\u003eCuratorFramework\u003c/span\u003e \u003cspan class=\"variable\"\u003eclient\u003c/span\u003e \u003cspan class=\"operator\"\u003e=\u003c/span\u003e \u003cspan class=\"literal\"\u003enull\u003c/span\u003e;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"keyword\"\u003eprivate\u003c/span\u003e \u003cspan class=\"keyword\"\u003estatic\u003c/span\u003e \u003cspan class=\"keyword\"\u003efinal\u003c/span\u003e \u003cspan class=\"type\"\u003eString\u003c/span\u003e \u003cspan class=\"variable\"\u003epath\u003c/span\u003e \u003cspan class=\"operator\"\u003e=\u003c/span\u003e \u003cspan class=\"string\"\u003e\u0026#34;/mytest\u0026#34;\u003c/span\u003e;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"comment\"\u003e/**\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"comment\"\u003e     * 创建连接\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"comment\"\u003e     */\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"meta\"\u003e@BeforeAll\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"keyword\"\u003epublic\u003c/span\u003e \u003cspan class=\"keyword\"\u003estatic\u003c/span\u003e \u003cspan class=\"keyword\"\u003evoid\u003c/span\u003e \u003cspan class=\"title function_\"\u003einit\u003c/span\u003e\u003cspan class=\"params\"\u003e()\u003c/span\u003e {\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        \u003cspan class=\"comment\"\u003e// 重试策略\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        \u003cspan class=\"type\"\u003eRetryPolicy\u003c/span\u003e \u003cspan class=\"variable\"\u003eretryPolicy\u003c/span\u003e \u003cspan class=\"operator\"\u003e=\u003c/span\u003e \u003cspan class=\"keyword\"\u003enew\u003c/span\u003e \u003cspan class=\"title class_\"\u003eRetryNTimes\u003c/span\u003e(\u003cspan class=\"number\"\u003e3\u003c/span\u003e, \u003cspan class=\"number\"\u003e5000\u003c/span\u003e);\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        client = CuratorFrameworkFactory.builder()\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e                                        .connectString(\u003cspan class=\"string\"\u003e\u0026#34;localhost:2181\u0026#34;\u003c/span\u003e)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e                                        .sessionTimeoutMs(\u003cspan class=\"number\"\u003e10000\u003c/span\u003e).retryPolicy(retryPolicy)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e                                        .namespace(\u003cspan class=\"string\"\u003e\u0026#34;workspace\u0026#34;\u003c/span\u003e).build();  \u003cspan class=\"comment\"\u003e//指定命名空间后，client 的所有路径操作都会以 /workspace 开头\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        client.start();\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    }\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"comment\"\u003e/**\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"comment\"\u003e     * 关闭连接\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"comment\"\u003e     */\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"meta\"\u003e@AfterAll\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"keyword\"\u003epublic\u003c/span\u003e \u003cspan class=\"keyword\"\u003estatic\u003c/span\u003e \u003cspan class=\"keyword\"\u003evoid\u003c/span\u003e \u003cspan class=\"title function_\"\u003edestroy\u003c/span\u003e\u003cspan class=\"params\"\u003e()\u003c/span\u003e {\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        \u003cspan class=\"keyword\"\u003eif\u003c/span\u003e (client != \u003cspan class=\"literal\"\u003enull\u003c/span\u003e) {\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e            client.close();\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        }\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    }\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e}\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003ch3 id=\"节点增删改查-1\"\u003e\u003ca href=\"#节点增删改查-1\" class=\"headerlink\" title=\"节点增删改查\"\u003e\u003c/a\u003e节点增删改查\u003c/h3\u003e\u003ch4 id=\"判断节点是否存在-1\"\u003e\u003ca href=\"#判断节点是否存在-1\" class=\"headerlink\" title=\"判断节点是否存在\"\u003e\u003c/a\u003e判断节点是否存在\u003c/h4\u003e\u003cfigure class=\"highlight java\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"type\"\u003eStat\u003c/span\u003e \u003cspan class=\"variable\"\u003estat\u003c/span\u003e \u003cspan class=\"operator\"\u003e=\u003c/span\u003e client.checkExists().forPath(path);\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eAssertions.assertNull(stat);\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003ch4 id=\"判读服务状态\"\u003e\u003ca href=\"#判读服务状态\" class=\"headerlink\" title=\"判读服务状态\"\u003e\u003c/a\u003e判读服务状态\u003c/h4\u003e\u003cfigure class=\"highlight java\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"type\"\u003eCuratorFrameworkState\u003c/span\u003e \u003cspan class=\"variable\"\u003estate\u003c/span\u003e \u003cspan class=\"operator\"\u003e=\u003c/span\u003e client.getState();\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eAssertions.assertEquals(CuratorFrameworkState.STARTED, state);\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003ch4 id=\"创建节点-1\"\u003e\u003ca href=\"#创建节点-1\" class=\"headerlink\" title=\"创建节点\"\u003e\u003c/a\u003e创建节点\u003c/h4\u003e\u003cfigure class=\"highlight java\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"comment\"\u003e// 创建节点\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"type\"\u003eString\u003c/span\u003e \u003cspan class=\"variable\"\u003etext\u003c/span\u003e \u003cspan class=\"operator\"\u003e=\u003c/span\u003e \u003cspan class=\"string\"\u003e\u0026#34;Hello World\u0026#34;\u003c/span\u003e;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eclient.create().creatingParentsIfNeeded()\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e      .withMode(CreateMode.PERSISTENT)      \u003cspan class=\"comment\"\u003e//节点类型\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e      .withACL(ZooDefs.Ids.OPEN_ACL_UNSAFE)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e      .forPath(path, text.getBytes(StandardCharsets.UTF_8));\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003ch4 id=\"删除节点-1\"\u003e\u003ca href=\"#删除节点-1\" class=\"headerlink\" title=\"删除节点\"\u003e\u003c/a\u003e删除节点\u003c/h4\u003e\u003cfigure class=\"highlight java\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003eclient.delete()\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e      .guaranteed()                     \u003cspan class=\"comment\"\u003e// 如果删除失败，会继续执行，直到成功\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e      .deletingChildrenIfNeeded()       \u003cspan class=\"comment\"\u003e// 如果有子节点，则递归删除\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e      .withVersion(stat.getVersion())   \u003cspan class=\"comment\"\u003e// 传入版本号，如果版本号错误则拒绝删除操作，并抛出 BadVersion 异常\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e      .forPath(path);\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003ch4 id=\"获取节点数据-1\"\u003e\u003ca href=\"#获取节点数据-1\" class=\"headerlink\" title=\"获取节点数据\"\u003e\u003c/a\u003e获取节点数据\u003c/h4\u003e\u003cfigure class=\"highlight java\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"type\"\u003ebyte\u003c/span\u003e[] data = client.getData().forPath(path);\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eAssertions.assertEquals(text, \u003cspan class=\"keyword\"\u003enew\u003c/span\u003e \u003cspan class=\"title class_\"\u003eString\u003c/span\u003e(data));\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eSystem.out.println(\u003cspan class=\"string\"\u003e\u0026#34;修改前的节点数据：\u0026#34;\u003c/span\u003e + \u003cspan class=\"keyword\"\u003enew\u003c/span\u003e \u003cspan class=\"title class_\"\u003eString\u003c/span\u003e(data));\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003ch4 id=\"设置节点数据-1\"\u003e\u003ca href=\"#设置节点数据-1\" class=\"headerlink\" title=\"设置节点数据\"\u003e\u003c/a\u003e设置节点数据\u003c/h4\u003e\u003cfigure class=\"highlight java\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"type\"\u003eString\u003c/span\u003e \u003cspan class=\"variable\"\u003etext2\u003c/span\u003e \u003cspan class=\"operator\"\u003e=\u003c/span\u003e \u003cspan class=\"string\"\u003e\u0026#34;try again\u0026#34;\u003c/span\u003e;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eclient.setData()\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e      .withVersion(client.checkExists().forPath(path).getVersion())\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e      .forPath(path, text2.getBytes(StandardCharsets.UTF_8));\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003ch4 id=\"获取子节点-1\"\u003e\u003ca href=\"#获取子节点-1\" class=\"headerlink\" title=\"获取子节点\"\u003e\u003c/a\u003e获取子节点\u003c/h4\u003e\u003cfigure class=\"highlight java\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003eList\u0026lt;String\u0026gt; children = client.getChildren().forPath(path);\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"keyword\"\u003efor\u003c/span\u003e (String s : children) {\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    System.out.println(s);\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e}\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eList\u0026lt;String\u0026gt; expectedList = CollectionUtil.newArrayList(\u003cspan class=\"string\"\u003e\u0026#34;1\u0026#34;\u003c/span\u003e, \u003cspan class=\"string\"\u003e\u0026#34;2\u0026#34;\u003c/span\u003e);\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eAssertions.assertTrue(CollectionUtil.containsAll(expectedList, children));\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003ch3 id=\"监听事件\"\u003e\u003ca href=\"#监听事件\" class=\"headerlink\" title=\"监听事件\"\u003e\u003c/a\u003e监听事件\u003c/h3\u003e\u003ch4 id=\"创建一次性监听\"\u003e\u003ca href=\"#创建一次性监听\" class=\"headerlink\" title=\"创建一次性监听\"\u003e\u003c/a\u003e创建一次性监听\u003c/h4\u003e\u003cp\u003e和 Zookeeper 原生监听一样，使用 \u003ccode\u003eusingWatcher\u003c/code\u003e 注册的监听是一次性的，即监听只会触发一次，触发后就销毁。\u003c/p\u003e\n\u003cp\u003e【示例】\u003c/p\u003e\n\u003cfigure class=\"highlight java\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e8\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e9\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e10\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e11\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e12\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e13\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e14\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e15\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e16\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"comment\"\u003e// 设置监听器\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eclient.getData().usingWatcher(\u003cspan class=\"keyword\"\u003enew\u003c/span\u003e \u003cspan class=\"title class_\"\u003eCuratorWatcher\u003c/span\u003e() {\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"keyword\"\u003epublic\u003c/span\u003e \u003cspan class=\"keyword\"\u003evoid\u003c/span\u003e \u003cspan class=\"title function_\"\u003eprocess\u003c/span\u003e\u003cspan class=\"params\"\u003e(WatchedEvent event)\u003c/span\u003e {\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        System.out.println(\u003cspan class=\"string\"\u003e\u0026#34;节点 \u0026#34;\u003c/span\u003e + event.getPath() + \u003cspan class=\"string\"\u003e\u0026#34; 发生了事件：\u0026#34;\u003c/span\u003e + event.getType());\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    }\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e}).forPath(path);\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"comment\"\u003e// 第一次修改\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eclient.setData()\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e      .withVersion(client.checkExists().forPath(path).getVersion())\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e      .forPath(path, \u003cspan class=\"string\"\u003e\u0026#34;第一次修改\u0026#34;\u003c/span\u003e.getBytes(StandardCharsets.UTF_8));\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"comment\"\u003e// 第二次修改\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eclient.setData()\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e      .withVersion(client.checkExists().forPath(path).getVersion())\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e      .forPath(path, \u003cspan class=\"string\"\u003e\u0026#34;第二次修改\u0026#34;\u003c/span\u003e.getBytes(StandardCharsets.UTF_8));\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e输出\u003c/p\u003e\n\u003cfigure class=\"highlight bash\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e节点 /mytest 发生了事件：NodeDataChanged\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e说明\u003c/p\u003e\n\u003cp\u003e修改两次数据，但是监听器只会监听第一次修改。\u003c/p\u003e\n\u003ch4 id=\"创建永久监听\"\u003e\u003ca href=\"#创建永久监听\" class=\"headerlink\" title=\"创建永久监听\"\u003e\u003c/a\u003e创建永久监听\u003c/h4\u003e\u003cp\u003eCurator 还提供了创建永久监听的 API，其使用方式如下：\u003c/p\u003e\n\u003cfigure class=\"highlight java\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e8\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e9\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e10\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e11\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e12\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e13\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e14\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e15\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e16\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e17\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e18\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e19\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e20\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e21\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e22\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e23\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e24\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"comment\"\u003e// 设置监听器\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"type\"\u003eCuratorCache\u003c/span\u003e \u003cspan class=\"variable\"\u003ecuratorCache\u003c/span\u003e \u003cspan class=\"operator\"\u003e=\u003c/span\u003e CuratorCache.builder(client, path).build();\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"type\"\u003ePathChildrenCacheListener\u003c/span\u003e \u003cspan class=\"variable\"\u003epathChildrenCacheListener\u003c/span\u003e \u003cspan class=\"operator\"\u003e=\u003c/span\u003e \u003cspan class=\"keyword\"\u003enew\u003c/span\u003e \u003cspan class=\"title class_\"\u003ePathChildrenCacheListener\u003c/span\u003e() {\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"meta\"\u003e@Override\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"keyword\"\u003epublic\u003c/span\u003e \u003cspan class=\"keyword\"\u003evoid\u003c/span\u003e \u003cspan class=\"title function_\"\u003echildEvent\u003c/span\u003e\u003cspan class=\"params\"\u003e(CuratorFramework framework, PathChildrenCacheEvent event)\u003c/span\u003e \u003cspan class=\"keyword\"\u003ethrows\u003c/span\u003e Exception {\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        System.out.println(\u003cspan class=\"string\"\u003e\u0026#34;节点 \u0026#34;\u003c/span\u003e + event.getData().getPath() + \u003cspan class=\"string\"\u003e\u0026#34; 发生了事件：\u0026#34;\u003c/span\u003e + event.getType());\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    }\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e};\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"type\"\u003eCuratorCacheListener\u003c/span\u003e \u003cspan class=\"variable\"\u003elistener\u003c/span\u003e \u003cspan class=\"operator\"\u003e=\u003c/span\u003e CuratorCacheListener.builder()\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e                                                    .forPathChildrenCache(path, client,\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e                                                        pathChildrenCacheListener)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e                                                    .build();\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003ecuratorCache.listenable().addListener(listener);\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003ecuratorCache.start();\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"comment\"\u003e// 第一次修改\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eclient.setData()\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e      .withVersion(client.checkExists().forPath(path).getVersion())\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e      .forPath(path, \u003cspan class=\"string\"\u003e\u0026#34;第一次修改\u0026#34;\u003c/span\u003e.getBytes(StandardCharsets.UTF_8));\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"comment\"\u003e// 第二次修改\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eclient.setData()\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e      .withVersion(client.checkExists().forPath(path).getVersion())\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e      .forPath(path, \u003cspan class=\"string\"\u003e\u0026#34;第二次修改\u0026#34;\u003c/span\u003e.getBytes(StandardCharsets.UTF_8));\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003ch4 id=\"监听子节点\"\u003e\u003ca href=\"#监听子节点\" class=\"headerlink\" title=\"监听子节点\"\u003e\u003c/a\u003e监听子节点\u003c/h4\u003e\u003cp\u003e这里以监听 \u003ccode\u003e/hadoop\u003c/code\u003e 下所有子节点为例，实现方式如下：\u003c/p\u003e\n\u003cfigure class=\"highlight java\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e8\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e9\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e10\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e11\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e12\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e13\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e14\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e15\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e16\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e17\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e18\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e19\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e20\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e21\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e22\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e23\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e24\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e25\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e26\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e27\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e28\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e29\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e30\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e31\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e32\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e33\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e34\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e35\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e36\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e37\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e38\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e39\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e40\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e41\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e42\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e43\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e44\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e45\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e46\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e47\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e48\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e49\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e50\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e51\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e52\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e53\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e54\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e55\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e56\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e57\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e58\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"comment\"\u003e// 创建节点\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"type\"\u003eString\u003c/span\u003e \u003cspan class=\"variable\"\u003etext\u003c/span\u003e \u003cspan class=\"operator\"\u003e=\u003c/span\u003e \u003cspan class=\"string\"\u003e\u0026#34;Hello World\u0026#34;\u003c/span\u003e;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eclient.create().creatingParentsIfNeeded()\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e      .withMode(CreateMode.PERSISTENT)      \u003cspan class=\"comment\"\u003e//节点类型\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e      .withACL(ZooDefs.Ids.OPEN_ACL_UNSAFE)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e      .forPath(path, text.getBytes(StandardCharsets.UTF_8));\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eclient.create().creatingParentsIfNeeded()\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e      .withMode(CreateMode.PERSISTENT)      \u003cspan class=\"comment\"\u003e//节点类型\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e      .withACL(ZooDefs.Ids.OPEN_ACL_UNSAFE)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e      .forPath(path + \u003cspan class=\"string\"\u003e\u0026#34;/1\u0026#34;\u003c/span\u003e, text.getBytes(StandardCharsets.UTF_8));\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eclient.create().creatingParentsIfNeeded()\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e      .withMode(CreateMode.PERSISTENT)      \u003cspan class=\"comment\"\u003e//节点类型\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e      .withACL(ZooDefs.Ids.OPEN_ACL_UNSAFE)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e      .forPath(path + \u003cspan class=\"string\"\u003e\u0026#34;/2\u0026#34;\u003c/span\u003e, text.getBytes(StandardCharsets.UTF_8));\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"comment\"\u003e// 设置监听器\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"comment\"\u003e// 第三个参数代表除了节点状态外，是否还缓存节点内容\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"type\"\u003ePathChildrenCache\u003c/span\u003e \u003cspan class=\"variable\"\u003echildrenCache\u003c/span\u003e \u003cspan class=\"operator\"\u003e=\u003c/span\u003e \u003cspan class=\"keyword\"\u003enew\u003c/span\u003e \u003cspan class=\"title class_\"\u003ePathChildrenCache\u003c/span\u003e(client, path, \u003cspan class=\"literal\"\u003etrue\u003c/span\u003e);\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"comment\"\u003e/*\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"comment\"\u003e * StartMode 代表初始化方式:\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"comment\"\u003e *    NORMAL: 异步初始化\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"comment\"\u003e *    BUILD_INITIAL_CACHE: 同步初始化\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"comment\"\u003e *    POST_INITIALIZED_EVENT: 异步并通知,初始化之后会触发 INITIALIZED 事件\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"comment\"\u003e */\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003echildrenCache.start(PathChildrenCache.StartMode.POST_INITIALIZED_EVENT);\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eList\u0026lt;ChildData\u0026gt; childDataList = childrenCache.getCurrentData();\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eSystem.out.println(\u003cspan class=\"string\"\u003e\u0026#34;当前数据节点的子节点列表：\u0026#34;\u003c/span\u003e);\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003echildDataList.forEach(x -\u0026gt; System.out.println(x.getPath()));\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003echildrenCache.getListenable().addListener(\u003cspan class=\"keyword\"\u003enew\u003c/span\u003e \u003cspan class=\"title class_\"\u003ePathChildrenCacheListener\u003c/span\u003e() {\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"keyword\"\u003epublic\u003c/span\u003e \u003cspan class=\"keyword\"\u003evoid\u003c/span\u003e \u003cspan class=\"title function_\"\u003echildEvent\u003c/span\u003e\u003cspan class=\"params\"\u003e(CuratorFramework client, PathChildrenCacheEvent event)\u003c/span\u003e {\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        \u003cspan class=\"keyword\"\u003eswitch\u003c/span\u003e (event.getType()) {\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e            \u003cspan class=\"keyword\"\u003ecase\u003c/span\u003e INITIALIZED:\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e                System.out.println(\u003cspan class=\"string\"\u003e\u0026#34;childrenCache 初始化完成\u0026#34;\u003c/span\u003e);\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e                \u003cspan class=\"keyword\"\u003ebreak\u003c/span\u003e;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e            \u003cspan class=\"keyword\"\u003ecase\u003c/span\u003e CHILD_ADDED:\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e                \u003cspan class=\"comment\"\u003e// 需要注意的是: 即使是之前已经存在的子节点，也会触发该监听，因为会把该子节点加入 childrenCache 缓存中\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e                System.out.println(\u003cspan class=\"string\"\u003e\u0026#34;增加子节点:\u0026#34;\u003c/span\u003e + event.getData().getPath());\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e                \u003cspan class=\"keyword\"\u003ebreak\u003c/span\u003e;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e            \u003cspan class=\"keyword\"\u003ecase\u003c/span\u003e CHILD_REMOVED:\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e                System.out.println(\u003cspan class=\"string\"\u003e\u0026#34;删除子节点:\u0026#34;\u003c/span\u003e + event.getData().getPath());\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e                \u003cspan class=\"keyword\"\u003ebreak\u003c/span\u003e;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e            \u003cspan class=\"keyword\"\u003ecase\u003c/span\u003e CHILD_UPDATED:\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e                System.out.println(\u003cspan class=\"string\"\u003e\u0026#34;被修改的子节点的路径:\u0026#34;\u003c/span\u003e + event.getData().getPath());\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e                System.out.println(\u003cspan class=\"string\"\u003e\u0026#34;修改后的数据:\u0026#34;\u003c/span\u003e + \u003cspan class=\"keyword\"\u003enew\u003c/span\u003e \u003cspan class=\"title class_\"\u003eString\u003c/span\u003e(event.getData().getData()));\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e                \u003cspan class=\"keyword\"\u003ebreak\u003c/span\u003e;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        }\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    }\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e});\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"comment\"\u003e// 第一次修改\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eclient.setData()\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e      .forPath(path + \u003cspan class=\"string\"\u003e\u0026#34;/1\u0026#34;\u003c/span\u003e, \u003cspan class=\"string\"\u003e\u0026#34;第一次修改\u0026#34;\u003c/span\u003e.getBytes(StandardCharsets.UTF_8));\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"comment\"\u003e// 第二次修改\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eclient.setData()\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e      .forPath(path + \u003cspan class=\"string\"\u003e\u0026#34;/1\u0026#34;\u003c/span\u003e, \u003cspan class=\"string\"\u003e\u0026#34;第二次修改\u0026#34;\u003c/span\u003e.getBytes(StandardCharsets.UTF_8));\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003ch3 id=\"ACL-权限管理\"\u003e\u003ca href=\"#ACL-权限管理\" class=\"headerlink\" title=\"ACL 权限管理\"\u003e\u003c/a\u003eACL 权限管理\u003c/h3\u003e\u003cfigure class=\"highlight java\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e8\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e9\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e10\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e11\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e12\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e13\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e14\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e15\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e16\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e17\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e18\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e19\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e20\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e21\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e22\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e23\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e24\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e25\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e26\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e27\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e28\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e29\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e30\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e31\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e32\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e33\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e34\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e35\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e36\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e37\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e38\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e39\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e40\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e41\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e42\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e43\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e44\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e45\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e46\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e47\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e48\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e49\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e50\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e51\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e52\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e53\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e54\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e55\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e56\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e57\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e58\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e59\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e60\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e61\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e62\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e63\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e64\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e65\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e66\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e67\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e68\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e69\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e70\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e71\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e72\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"keyword\"\u003epublic\u003c/span\u003e \u003cspan class=\"keyword\"\u003eclass\u003c/span\u003e \u003cspan class=\"title class_\"\u003eAclOperation\u003c/span\u003e {\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"keyword\"\u003eprivate\u003c/span\u003e \u003cspan class=\"type\"\u003eCuratorFramework\u003c/span\u003e \u003cspan class=\"variable\"\u003eclient\u003c/span\u003e \u003cspan class=\"operator\"\u003e=\u003c/span\u003e \u003cspan class=\"literal\"\u003enull\u003c/span\u003e;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"keyword\"\u003eprivate\u003c/span\u003e \u003cspan class=\"keyword\"\u003estatic\u003c/span\u003e \u003cspan class=\"keyword\"\u003efinal\u003c/span\u003e \u003cspan class=\"type\"\u003eString\u003c/span\u003e \u003cspan class=\"variable\"\u003ezkServerPath\u003c/span\u003e \u003cspan class=\"operator\"\u003e=\u003c/span\u003e \u003cspan class=\"string\"\u003e\u0026#34;192.168.0.226:2181\u0026#34;\u003c/span\u003e;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"keyword\"\u003eprivate\u003c/span\u003e \u003cspan class=\"keyword\"\u003estatic\u003c/span\u003e \u003cspan class=\"keyword\"\u003efinal\u003c/span\u003e \u003cspan class=\"type\"\u003eString\u003c/span\u003e \u003cspan class=\"variable\"\u003enodePath\u003c/span\u003e \u003cspan class=\"operator\"\u003e=\u003c/span\u003e \u003cspan class=\"string\"\u003e\u0026#34;/mytest/hdfs\u0026#34;\u003c/span\u003e;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"meta\"\u003e@Before\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"keyword\"\u003epublic\u003c/span\u003e \u003cspan class=\"keyword\"\u003evoid\u003c/span\u003e \u003cspan class=\"title function_\"\u003eprepare\u003c/span\u003e\u003cspan class=\"params\"\u003e()\u003c/span\u003e {\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        \u003cspan class=\"type\"\u003eRetryPolicy\u003c/span\u003e \u003cspan class=\"variable\"\u003eretryPolicy\u003c/span\u003e \u003cspan class=\"operator\"\u003e=\u003c/span\u003e \u003cspan class=\"keyword\"\u003enew\u003c/span\u003e \u003cspan class=\"title class_\"\u003eRetryNTimes\u003c/span\u003e(\u003cspan class=\"number\"\u003e3\u003c/span\u003e, \u003cspan class=\"number\"\u003e5000\u003c/span\u003e);\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        client = CuratorFrameworkFactory.builder()\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e                .authorization(\u003cspan class=\"string\"\u003e\u0026#34;digest\u0026#34;\u003c/span\u003e, \u003cspan class=\"string\"\u003e\u0026#34;heibai:123456\u0026#34;\u003c/span\u003e.getBytes()) \u003cspan class=\"comment\"\u003e//等价于 addauth 命令\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e                .connectString(zkServerPath)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e                .sessionTimeoutMs(\u003cspan class=\"number\"\u003e10000\u003c/span\u003e).retryPolicy(retryPolicy)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e                .namespace(\u003cspan class=\"string\"\u003e\u0026#34;workspace\u0026#34;\u003c/span\u003e).build();\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        client.start();\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    }\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"comment\"\u003e/**\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"comment\"\u003e     * 新建节点并赋予权限\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"comment\"\u003e     */\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"meta\"\u003e@Test\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"keyword\"\u003epublic\u003c/span\u003e \u003cspan class=\"keyword\"\u003evoid\u003c/span\u003e \u003cspan class=\"title function_\"\u003ecreateNodesWithAcl\u003c/span\u003e\u003cspan class=\"params\"\u003e()\u003c/span\u003e \u003cspan class=\"keyword\"\u003ethrows\u003c/span\u003e Exception {\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        List\u0026lt;ACL\u0026gt; aclList = \u003cspan class=\"keyword\"\u003enew\u003c/span\u003e \u003cspan class=\"title class_\"\u003eArrayList\u003c/span\u003e\u0026lt;\u0026gt;();\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        \u003cspan class=\"comment\"\u003e// 对密码进行加密\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        \u003cspan class=\"type\"\u003eString\u003c/span\u003e \u003cspan class=\"variable\"\u003edigest1\u003c/span\u003e \u003cspan class=\"operator\"\u003e=\u003c/span\u003e DigestAuthenticationProvider.generateDigest(\u003cspan class=\"string\"\u003e\u0026#34;heibai:123456\u0026#34;\u003c/span\u003e);\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        \u003cspan class=\"type\"\u003eString\u003c/span\u003e \u003cspan class=\"variable\"\u003edigest2\u003c/span\u003e \u003cspan class=\"operator\"\u003e=\u003c/span\u003e DigestAuthenticationProvider.generateDigest(\u003cspan class=\"string\"\u003e\u0026#34;ying:123456\u0026#34;\u003c/span\u003e);\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        \u003cspan class=\"type\"\u003eId\u003c/span\u003e \u003cspan class=\"variable\"\u003euser01\u003c/span\u003e \u003cspan class=\"operator\"\u003e=\u003c/span\u003e \u003cspan class=\"keyword\"\u003enew\u003c/span\u003e \u003cspan class=\"title class_\"\u003eId\u003c/span\u003e(\u003cspan class=\"string\"\u003e\u0026#34;digest\u0026#34;\u003c/span\u003e, digest1);\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        \u003cspan class=\"type\"\u003eId\u003c/span\u003e \u003cspan class=\"variable\"\u003euser02\u003c/span\u003e \u003cspan class=\"operator\"\u003e=\u003c/span\u003e \u003cspan class=\"keyword\"\u003enew\u003c/span\u003e \u003cspan class=\"title class_\"\u003eId\u003c/span\u003e(\u003cspan class=\"string\"\u003e\u0026#34;digest\u0026#34;\u003c/span\u003e, digest2);\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        \u003cspan class=\"comment\"\u003e// 指定所有权限\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        aclList.add(\u003cspan class=\"keyword\"\u003enew\u003c/span\u003e \u003cspan class=\"title class_\"\u003eACL\u003c/span\u003e(Perms.ALL, user01));\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        \u003cspan class=\"comment\"\u003e// 如果想要指定权限的组合，中间需要使用 | ,这里的|代表的是位运算中的 按位或\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        aclList.add(\u003cspan class=\"keyword\"\u003enew\u003c/span\u003e \u003cspan class=\"title class_\"\u003eACL\u003c/span\u003e(Perms.DELETE | Perms.CREATE, user02));\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        \u003cspan class=\"comment\"\u003e// 创建节点\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        \u003cspan class=\"type\"\u003ebyte\u003c/span\u003e[] data = \u003cspan class=\"string\"\u003e\u0026#34;abc\u0026#34;\u003c/span\u003e.getBytes();\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        client.create().creatingParentsIfNeeded()\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e                .withMode(CreateMode.PERSISTENT)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e                .withACL(aclList, \u003cspan class=\"literal\"\u003etrue\u003c/span\u003e)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e                .forPath(nodePath, data);\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    }\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"comment\"\u003e/**\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"comment\"\u003e     * 给已有节点设置权限,注意这会删除所有原来节点上已有的权限设置\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"comment\"\u003e     */\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"meta\"\u003e@Test\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"keyword\"\u003epublic\u003c/span\u003e \u003cspan class=\"keyword\"\u003evoid\u003c/span\u003e \u003cspan class=\"title function_\"\u003eSetAcl\u003c/span\u003e\u003cspan class=\"params\"\u003e()\u003c/span\u003e \u003cspan class=\"keyword\"\u003ethrows\u003c/span\u003e Exception {\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        \u003cspan class=\"type\"\u003eString\u003c/span\u003e \u003cspan class=\"variable\"\u003edigest\u003c/span\u003e \u003cspan class=\"operator\"\u003e=\u003c/span\u003e DigestAuthenticationProvider.generateDigest(\u003cspan class=\"string\"\u003e\u0026#34;admin:admin\u0026#34;\u003c/span\u003e);\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        \u003cspan class=\"type\"\u003eId\u003c/span\u003e \u003cspan class=\"variable\"\u003euser\u003c/span\u003e \u003cspan class=\"operator\"\u003e=\u003c/span\u003e \u003cspan class=\"keyword\"\u003enew\u003c/span\u003e \u003cspan class=\"title class_\"\u003eId\u003c/span\u003e(\u003cspan class=\"string\"\u003e\u0026#34;digest\u0026#34;\u003c/span\u003e, digest);\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        client.setACL()\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e                .withACL(Collections.singletonList(\u003cspan class=\"keyword\"\u003enew\u003c/span\u003e \u003cspan class=\"title class_\"\u003eACL\u003c/span\u003e(Perms.READ | Perms.DELETE, user)))\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e                .forPath(nodePath);\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    }\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"comment\"\u003e/**\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"comment\"\u003e     * 获取权限\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"comment\"\u003e     */\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"meta\"\u003e@Test\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"keyword\"\u003epublic\u003c/span\u003e \u003cspan class=\"keyword\"\u003evoid\u003c/span\u003e \u003cspan class=\"title function_\"\u003egetAcl\u003c/span\u003e\u003cspan class=\"params\"\u003e()\u003c/span\u003e \u003cspan class=\"keyword\"\u003ethrows\u003c/span\u003e Exception {\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        List\u0026lt;ACL\u0026gt; aclList = client.getACL().forPath(nodePath);\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        \u003cspan class=\"type\"\u003eACL\u003c/span\u003e \u003cspan class=\"variable\"\u003eacl\u003c/span\u003e \u003cspan class=\"operator\"\u003e=\u003c/span\u003e aclList.get(\u003cspan class=\"number\"\u003e0\u003c/span\u003e);\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        System.out.println(acl.getId().getId()\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e                           + \u003cspan class=\"string\"\u003e\u0026#34;是否有删读权限:\u0026#34;\u003c/span\u003e + (acl.getPerms() == (Perms.READ | Perms.DELETE)));\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    }\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"meta\"\u003e@After\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"keyword\"\u003epublic\u003c/span\u003e \u003cspan class=\"keyword\"\u003evoid\u003c/span\u003e \u003cspan class=\"title function_\"\u003edestroy\u003c/span\u003e\u003cspan class=\"params\"\u003e()\u003c/span\u003e {\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        \u003cspan class=\"keyword\"\u003eif\u003c/span\u003e (client != \u003cspan class=\"literal\"\u003enull\u003c/span\u003e) {\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e            client.close();\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        }\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    }\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e}\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003ch2 id=\"参考资料\"\u003e\u003ca href=\"#参考资料\" class=\"headerlink\" title=\"参考资料\"\u003e\u003c/a\u003e参考资料\u003c/h2\u003e\u003cul\u003e\n\u003cli\u003e\u003cstrong\u003e官方\u003c/strong\u003e\u003cul\u003e\n\u003cli\u003e\u003ca target=\"_blank\" rel=\"noopener\" href=\"http://zookeeper.apache.org/\"\u003eZooKeeper 官网\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca target=\"_blank\" rel=\"noopener\" href=\"https://cwiki.apache.org/confluence/display/ZOOKEEPER\"\u003eZooKeeper 官方文档\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca target=\"_blank\" rel=\"noopener\" href=\"https://github.com/apache/zookeeper\"\u003eZooKeeper Github\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003e书籍\u003c/strong\u003e\u003cul\u003e\n\u003cli\u003e\u003ca target=\"_blank\" rel=\"noopener\" href=\"https://item.jd.com/12109713.html\"\u003e《Hadoop 权威指南（第四版）》\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003e文章\u003c/strong\u003e\u003cul\u003e\n\u003cli\u003e\u003ca target=\"_blank\" rel=\"noopener\" href=\"https://www.ibm.com/developerworks/cn/opensource/os-cn-zookeeper/index.html\"\u003e分布式服务框架 ZooKeeper – 管理分布式环境中的数据\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca target=\"_blank\" rel=\"noopener\" href=\"https://www.cnblogs.com/felixzh/p/5869212.html\"\u003eZooKeeper 的功能以及工作原理\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca target=\"_blank\" rel=\"noopener\" href=\"https://github.com/heibaiying/BigData-Notes/blob/master/notes/ZooKeeper%E7%AE%80%E4%BB%8B%E5%8F%8A%E6%A0%B8%E5%BF%83%E6%A6%82%E5%BF%B5.md\"\u003eZooKeeper 简介及核心概念\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca target=\"_blank\" rel=\"noopener\" href=\"https://draveness.me/zookeeper-chubby\"\u003e详解分布式协调服务 ZooKeeper\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca target=\"_blank\" rel=\"noopener\" href=\"http://www.jasongj.com/zookeeper/fastleaderelection/\"\u003e深入浅出 Zookeeper（一） Zookeeper 架构及 FastLeaderElection 机制\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\n    \u003c/div\u003e",
  "Date": "2022-02-19T05:27:21Z",
  "Author": "钝悟 ◾ Dunwu"
}