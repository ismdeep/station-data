{
  "Source": "dunwu",
  "Title": "Java 基础语法特性",
  "Link": "https://dunwu.github.io/blog/pages/2950ba/",
  "Content": "\u003cdiv class=\"post-body\" itemprop=\"articleBody\"\u003e\u003ch1 id=\"Java-基础语法特性\"\u003e\u003ca href=\"#Java-基础语法特性\" class=\"headerlink\" title=\"Java 基础语法特性\"\u003e\u003c/a\u003eJava 基础语法特性\u003c/h1\u003e\u003ch2 id=\"注释\"\u003e\u003ca href=\"#注释\" class=\"headerlink\" title=\"注释\"\u003e\u003c/a\u003e注释\u003c/h2\u003e\u003cp\u003e空白行，或者注释的内容，都会被 Java 编译器忽略掉。\u003c/p\u003e\n\u003cp\u003eJava 支持多种注释方式，下面的示例展示了各种注释的使用方式：\u003c/p\u003e\n\u003cfigure class=\"highlight java\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e8\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e9\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e10\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e11\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e12\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e13\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"keyword\"\u003epublic\u003c/span\u003e \u003cspan class=\"keyword\"\u003eclass\u003c/span\u003e \u003cspan class=\"title class_\"\u003eHelloWorld\u003c/span\u003e {\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"comment\"\u003e/*\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"comment\"\u003e     * JavaDoc 注释\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"comment\"\u003e     */\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"keyword\"\u003epublic\u003c/span\u003e \u003cspan class=\"keyword\"\u003estatic\u003c/span\u003e \u003cspan class=\"keyword\"\u003evoid\u003c/span\u003e \u003cspan class=\"title function_\"\u003emain\u003c/span\u003e\u003cspan class=\"params\"\u003e(String[] args)\u003c/span\u003e {\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        \u003cspan class=\"comment\"\u003e// 单行注释\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        \u003cspan class=\"comment\"\u003e/* 多行注释：\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"comment\"\u003e           1. 注意点a\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"comment\"\u003e           2. 注意点b\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"comment\"\u003e         */\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        System.out.println(\u003cspan class=\"string\"\u003e\u0026#34;Hello World\u0026#34;\u003c/span\u003e);\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    }\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e}\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003ch2 id=\"基本数据类型\"\u003e\u003ca href=\"#基本数据类型\" class=\"headerlink\" title=\"基本数据类型\"\u003e\u003c/a\u003e基本数据类型\u003c/h2\u003e\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/dunwu/images/master/cs/java/javacore/xmind/Java%E5%9F%BA%E6%9C%AC%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B.svg\" alt=\"img\"/\u003e\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e👉 扩展阅读：\u003ca href=\"https://dunwu.github.io/waterdrop/pages/55d693/\"\u003e深入理解 Java 基本数据类型\u003c/a\u003e\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003ch2 id=\"变量和常量\"\u003e\u003ca href=\"#变量和常量\" class=\"headerlink\" title=\"变量和常量\"\u003e\u003c/a\u003e变量和常量\u003c/h2\u003e\u003cp\u003eJava 支持的变量类型有：\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003e局部变量\u003c/code\u003e - 类方法中的变量。\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003e成员变量（也叫实例变量）\u003c/code\u003e - 类方法外的变量，不过没有 \u003ccode\u003estatic\u003c/code\u003e 修饰。\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003e静态变量（也叫类变量）\u003c/code\u003e - 类方法外的变量，用 \u003ccode\u003estatic\u003c/code\u003e 修饰。\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e特性对比：\u003c/p\u003e\n\u003ctable\u003e\n\u003cthead\u003e\n\u003ctr\u003e\n\u003cth\u003e局部变量\u003c/th\u003e\n\u003cth\u003e实例变量（也叫成员变量）\u003c/th\u003e\n\u003cth\u003e类变量（也叫静态变量）\u003c/th\u003e\n\u003c/tr\u003e\n\u003c/thead\u003e\n\u003ctbody\u003e\u003ctr\u003e\n\u003ctd\u003e局部变量声明在方法、构造方法或者语句块中。\u003c/td\u003e\n\u003ctd\u003e实例变量声明在方法、构造方法和语句块之外。\u003c/td\u003e\n\u003ctd\u003e类变量声明在方法、构造方法和语句块之外。并且以 static 修饰。\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e局部变量在方法、构造方法、或者语句块被执行的时候创建，当它们执行完成后，变量将会被销毁。\u003c/td\u003e\n\u003ctd\u003e实例变量在对象创建的时候创建，在对象被销毁的时候销毁。\u003c/td\u003e\n\u003ctd\u003e类变量在第一次被访问时创建，在程序结束时销毁。\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e局部变量没有默认值，所以必须经过初始化，才可以使用。\u003c/td\u003e\n\u003ctd\u003e实例变量具有默认值。数值型变量的默认值是 0，布尔型变量的默认值是 false，引用类型变量的默认值是 null。变量的值可以在声明时指定，也可以在构造方法中指定。\u003c/td\u003e\n\u003ctd\u003e类变量具有默认值。数值型变量的默认值是 0，布尔型变量的默认值是 false，引用类型变量的默认值是 null。变量的值可以在声明时指定，也可以在构造方法中指定。此外，静态变量还可以在静态语句块中初始化。\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e对于局部变量，如果是基本类型，会把值直接存储在栈；如果是引用类型，会把其对象存储在堆，而把这个对象的引用（指针）存储在栈。\u003c/td\u003e\n\u003ctd\u003e实例变量存储在堆。\u003c/td\u003e\n\u003ctd\u003e类变量存储在静态存储区。\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e访问修饰符不能用于局部变量。\u003c/td\u003e\n\u003ctd\u003e访问修饰符可以用于实例变量。\u003c/td\u003e\n\u003ctd\u003e访问修饰符可以用于类变量。\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e局部变量只在声明它的方法、构造方法或者语句块中可见。\u003c/td\u003e\n\u003ctd\u003e实例变量对于类中的方法、构造方法或者语句块是可见的。一般情况下应该把实例变量设为私有。通过使用访问修饰符可以使实例变量对子类可见。\u003c/td\u003e\n\u003ctd\u003e与实例变量具有相似的可见性。但为了对类的使用者可见，大多数静态变量声明为 public 类型。\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003c/td\u003e\n\u003ctd\u003e实例变量可以直接通过变量名访问。但在静态方法以及其他类中，就应该使用完全限定名：ObejectReference.VariableName。\u003c/td\u003e\n\u003ctd\u003e静态变量可以通过：ClassName.VariableName 的方式访问。\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003c/td\u003e\n\u003ctd\u003e\u003c/td\u003e\n\u003ctd\u003e无论一个类创建了多少个对象，类只拥有类变量的一份拷贝。\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003c/td\u003e\n\u003ctd\u003e\u003c/td\u003e\n\u003ctd\u003e类变量除了被声明为常量外很少使用。\u003c/td\u003e\n\u003c/tr\u003e\n\u003c/tbody\u003e\u003c/table\u003e\n\u003cp\u003e\u003cstrong\u003e变量修饰符\u003c/strong\u003e\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003cstrong\u003e访问级别修饰符\u003c/strong\u003e\u003cul\u003e\n\u003cli\u003e如果变量是实例变量或类变量，可以添加访问级别修饰符（public/protected/private）\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003e静态修饰符\u003c/strong\u003e\u003cul\u003e\n\u003cli\u003e如果变量是类变量，需要添加 static 修饰\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003efinal\u003c/strong\u003e\u003cul\u003e\n\u003cli\u003e如果变量使用 \u003ccode\u003efinal\u003c/code\u003e 修饰符，就表示这是一个常量，不能被修改。\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"数组\"\u003e\u003ca href=\"#数组\" class=\"headerlink\" title=\"数组\"\u003e\u003c/a\u003e数组\u003c/h2\u003e\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/dunwu/images/master/cs/java/javacore/xmind/Java%E6%95%B0%E7%BB%84.svg\" alt=\"img\"/\u003e\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e👉 扩展阅读：\u003ca href=\"https://dunwu.github.io/waterdrop/pages/155518/\"\u003e深入理解 Java 数组\u003c/a\u003e\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003ch2 id=\"枚举\"\u003e\u003ca href=\"#枚举\" class=\"headerlink\" title=\"枚举\"\u003e\u003c/a\u003e枚举\u003c/h2\u003e\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/dunwu/images/master/cs/java/javacore/xmind/Java%E6%9E%9A%E4%B8%BE.svg\" alt=\"img\"/\u003e\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e👉 扩展阅读：\u003ca href=\"https://dunwu.github.io/waterdrop/pages/979887/\"\u003e深入理解 Java 枚举\u003c/a\u003e\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003ch2 id=\"操作符\"\u003e\u003ca href=\"#操作符\" class=\"headerlink\" title=\"操作符\"\u003e\u003c/a\u003e操作符\u003c/h2\u003e\u003cp\u003eJava 中支持的操作符类型如下：\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/dunwu/images/master/cs/java/javacore/xmind/Java%E6%93%8D%E4%BD%9C%E7%AC%A6.svg\" alt=\"img\"/\u003e\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e👉 扩展阅读：\u003ca target=\"_blank\" rel=\"noopener\" href=\"http://www.runoob.com/java/java-operators.html\"\u003eJava 操作符\u003c/a\u003e\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003ch2 id=\"方法\"\u003e\u003ca href=\"#方法\" class=\"headerlink\" title=\"方法\"\u003e\u003c/a\u003e方法\u003c/h2\u003e\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/dunwu/images/master/snap/20220125072221.png\" alt=\"img\"/\u003e\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e👉 扩展阅读：\u003ca href=\"https://dunwu.github.io/waterdrop/pages/7a3ffc/\"\u003e深入理解 Java 方法\u003c/a\u003e\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003ch2 id=\"控制语句\"\u003e\u003ca href=\"#控制语句\" class=\"headerlink\" title=\"控制语句\"\u003e\u003c/a\u003e控制语句\u003c/h2\u003e\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/dunwu/images/master/cs/java/javacore/xmind/Java%E6%8E%A7%E5%88%B6%E8%AF%AD%E5%8F%A5.svg\" alt=\"img\"/\u003e\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e👉 扩展阅读：\u003ca href=\"https://dunwu.github.io/waterdrop/pages/fb4f8c/\"\u003eJava 控制语句\u003c/a\u003e\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003ch2 id=\"异常\"\u003e\u003ca href=\"#异常\" class=\"headerlink\" title=\"异常\"\u003e\u003c/a\u003e异常\u003c/h2\u003e\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/dunwu/images/master/cs/java/javacore/xmind/Java%E5%BC%82%E5%B8%B8%E6%A1%86%E6%9E%B6.svg\" alt=\"img\"/\u003e\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/dunwu/images/master/cs/java/javacore/xmind/Java%E5%BC%82%E5%B8%B8.svg\" alt=\"img\"/\u003e\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e👉 扩展阅读：\u003ca href=\"https://dunwu.github.io/waterdrop/pages/37415c/\"\u003e深入理解 Java 异常\u003c/a\u003e\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003ch2 id=\"泛型\"\u003e\u003ca href=\"#泛型\" class=\"headerlink\" title=\"泛型\"\u003e\u003c/a\u003e泛型\u003c/h2\u003e\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/dunwu/images/master/cs/java/javacore/xmind/Java%E6%B3%9B%E5%9E%8B.svg\" alt=\"img\"/\u003e\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e👉 扩展阅读：\u003ca href=\"https://dunwu.github.io/waterdrop/pages/33a820/\"\u003e深入理解 Java 泛型\u003c/a\u003e\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003ch2 id=\"反射\"\u003e\u003ca href=\"#反射\" class=\"headerlink\" title=\"反射\"\u003e\u003c/a\u003e反射\u003c/h2\u003e\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/dunwu/images/master/cs/java/javacore/xmind/Java%E5%8F%8D%E5%B0%84.svg\" alt=\"img\"/\u003e\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/dunwu/images/master/cs/java/javacore/xmind/Java%E4%BB%A3%E7%90%86.svg\" alt=\"img\"/\u003e\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e👉 扩展阅读：\u003ca href=\"https://dunwu.github.io/waterdrop/pages/0d066a/\"\u003e深入理解 Java 反射和动态代理\u003c/a\u003e\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003ch2 id=\"注解\"\u003e\u003ca href=\"#注解\" class=\"headerlink\" title=\"注解\"\u003e\u003c/a\u003e注解\u003c/h2\u003e\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/dunwu/images/master/cs/java/javacore/xmind/%E6%B3%A8%E8%A7%A3%E7%AE%80%E4%BB%8B.svg\" alt=\"img\"/\u003e\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/dunwu/images/master/cs/java/javacore/xmind/%E5%85%83%E6%B3%A8%E8%A7%A3.svg\" alt=\"img\"/\u003e\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/dunwu/images/master/cs/java/javacore/xmind/%E5%86%85%E7%BD%AE%E6%B3%A8%E8%A7%A3.svg\" alt=\"img\"/\u003e\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/dunwu/images/master/cs/java/javacore/xmind/%E8%87%AA%E5%AE%9A%E4%B9%89%E6%B3%A8%E8%A7%A3.svg\" alt=\"img\"/\u003e\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e👉 扩展阅读：\u003ca href=\"https://dunwu.github.io/waterdrop/pages/ecc011/\"\u003e深入理解 Java 注解\u003c/a\u003e\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003ch2 id=\"序列化\"\u003e\u003ca href=\"#序列化\" class=\"headerlink\" title=\"序列化\"\u003e\u003c/a\u003e序列化\u003c/h2\u003e\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/dunwu/images/master/cs/java/javacore/xmind/Java%E5%BA%8F%E5%88%97%E5%8C%96.svg\" alt=\"img\"/\u003e\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e👉 扩展阅读：\u003ca href=\"https://dunwu.github.io/waterdrop/pages/2b2f0f/\"\u003eJava 序列化\u003c/a\u003e\u003c/p\u003e\n\u003c/blockquote\u003e\n\n    \u003c/div\u003e",
  "Date": "2022-01-24T23:31:16Z",
  "Author": "钝悟 ◾ Dunwu"
}