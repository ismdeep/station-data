{
  "Source": "dunwu",
  "Title": "Redis 基本数据类型",
  "Link": "https://dunwu.github.io/blog/pages/ed757c/",
  "Content": "\u003cdiv class=\"post-body\" itemprop=\"articleBody\"\u003e\u003ch1 id=\"Redis-基本数据类型\"\u003e\u003ca href=\"#Redis-基本数据类型\" class=\"headerlink\" title=\"Redis 基本数据类型\"\u003e\u003c/a\u003eRedis 基本数据类型\u003c/h1\u003e\u003cblockquote\u003e\n\u003cp\u003e关键词：\u003ccode\u003eString\u003c/code\u003e、\u003ccode\u003eHash\u003c/code\u003e、\u003ccode\u003eList\u003c/code\u003e、\u003ccode\u003eSet\u003c/code\u003e、\u003ccode\u003eZset\u003c/code\u003e\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003eRedis 提供了多种数据类型，每种数据类型有丰富的命令支持。\u003c/p\u003e\n\u003cp\u003eRedis 支持的基本数据类型：STRING、HASH、LIST、SET、ZSET\u003c/p\u003e\n\u003cp\u003eRedis 支持的高级数据类型：BitMap、HyperLogLog、GEO、Stream\u003c/p\u003e\n\u003cp\u003e使用 Redis ，不仅要了解其数据类型的特性，还需要根据业务场景，灵活的、高效的使用其数据类型来建模。\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/dunwu/images/master/snap/202309232155082.png\"/\u003e\u003c/p\u003e\n\u003ch2 id=\"String\"\u003e\u003ca href=\"#String\" class=\"headerlink\" title=\"String\"\u003e\u003c/a\u003eString\u003c/h2\u003e\u003ch3 id=\"String-简介\"\u003e\u003ca href=\"#String-简介\" class=\"headerlink\" title=\"String 简介\"\u003e\u003c/a\u003eString 简介\u003c/h3\u003e\u003cp\u003eString 类型是键值对结构。\u003c/p\u003e\n\u003cp\u003eString 类型是\u003cstrong\u003e二进制安全\u003c/strong\u003e的。二进制安全是指，String 类型不仅可以保存文本数据，还可以保存任意格式的二进制数据，如：图片、音频、视频、压缩文件等。\u003c/p\u003e\n\u003cp\u003e默认情况下，String 类型的值最大可为 \u003cstrong\u003e512 MB\u003c/strong\u003e。\u003c/p\u003e\n\u003cdiv align=\"center\"\u003e\n\u003cimg src=\"https://raw.githubusercontent.com/dunwu/images/master/cs/database/redis/redis-datatype-string.png\" width=\"400\"/\u003e\n\u003c/div\u003e\n\n\u003ch3 id=\"String-实现\"\u003e\u003ca href=\"#String-实现\" class=\"headerlink\" title=\"String 实现\"\u003e\u003c/a\u003eString 实现\u003c/h3\u003e\u003cp\u003eString 类型的底层的数据结构实现主要是 int 和 SDS（简单动态字符串）。\u003c/p\u003e\n\u003cp\u003eSDS 和我们认识的 C 字符串不太一样，之所以没有使用 C 语言的字符串表示，因为 SDS 相比于 C 的原生字符串：\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003cstrong\u003eSDS 不仅可以保存文本数据，还可以保存二进制数据\u003c/strong\u003e。因为 \u003ccode\u003eSDS\u003c/code\u003e 使用 \u003ccode\u003elen\u003c/code\u003e 属性的值而不是空字符来判断字符串是否结束，并且 SDS 的所有 API 都会以处理二进制的方式来处理 SDS 存放在 \u003ccode\u003ebuf[]\u003c/code\u003e 数组里的数据。所以 SDS 不光能存放文本数据，而且能保存图片、音频、视频、压缩文件这样的二进制数据。\u003c/li\u003e\n\u003cli\u003e**SDS 获取字符串长度的时间复杂度是 O(1)**。因为 C 语言的字符串并不记录自身长度，所以获取长度的复杂度为 O(n)；而 SDS 结构里用 \u003ccode\u003elen\u003c/code\u003e 属性记录了字符串长度，所以复杂度为 \u003ccode\u003eO(1)\u003c/code\u003e。\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eRedis 的 SDS API 是安全的，拼接字符串不会造成缓冲区溢出\u003c/strong\u003e。因为 SDS 在拼接字符串之前会检查 SDS 空间是否满足要求，如果空间不够会自动扩容，所以不会导致缓冲区溢出的问题。\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e\u003cstrong\u003e字符串对象的编码可以是 \u003ccode\u003eint\u003c/code\u003e 、 \u003ccode\u003eraw\u003c/code\u003e 或者 \u003ccode\u003eembstr\u003c/code\u003e\u003c/strong\u003e 。\u003c/p\u003e\n\u003cp\u003e字符串对象保存各类型值的编码方式：\u003c/p\u003e\n\u003ctable\u003e\n\u003cthead\u003e\n\u003ctr\u003e\n\u003cth align=\"left\"\u003e值\u003c/th\u003e\n\u003cth align=\"left\"\u003e编码\u003c/th\u003e\n\u003c/tr\u003e\n\u003c/thead\u003e\n\u003ctbody\u003e\u003ctr\u003e\n\u003ctd align=\"left\"\u003e可以用 \u003ccode\u003elong\u003c/code\u003e 类型保存的整数。\u003c/td\u003e\n\u003ctd align=\"left\"\u003e\u003ccode\u003eint\u003c/code\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd align=\"left\"\u003e可以用 \u003ccode\u003elong double\u003c/code\u003e 类型保存的浮点数。\u003c/td\u003e\n\u003ctd align=\"left\"\u003e\u003ccode\u003eembstr\u003c/code\u003e 或者 \u003ccode\u003eraw\u003c/code\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd align=\"left\"\u003e字符串值， 或者因为长度太大而没办法用 \u003ccode\u003elong\u003c/code\u003e 类型表示的整数， 又或者因为长度太大而没办法用 \u003ccode\u003elong double\u003c/code\u003e 类型表示的浮点数。\u003c/td\u003e\n\u003ctd align=\"left\"\u003e\u003ccode\u003eembstr\u003c/code\u003e 或者 \u003ccode\u003eraw\u003c/code\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003c/tbody\u003e\u003c/table\u003e\n\u003cp\u003e如果一个字符串对象保存的是整数值， 并且这个整数值可以用 \u003ccode\u003elong\u003c/code\u003e 类型来表示， 那么字符串对象会将整数值保存在字符串对象结构的 \u003ccode\u003eptr\u003c/code\u003e 属性里面（将 \u003ccode\u003evoid*\u003c/code\u003e 转换成 \u003ccode\u003elong\u003c/code\u003e ）， 并将字符串对象的编码设置为 \u003ccode\u003eint\u003c/code\u003e 。\u003c/p\u003e\n\u003cp\u003e【示例】\u003c/p\u003e\n\u003cfigure class=\"highlight shell\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta prompt_\"\u003e\u0026gt; \u003c/span\u003e\u003cspan class=\"language-bash\"\u003eSET number 10086\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eOK\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta prompt_\"\u003e\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta prompt_\"\u003e\u0026gt; \u003c/span\u003e\u003cspan class=\"language-bash\"\u003eOBJECT ENCODING number\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026#34;int\u0026#34;\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e如果字符串对象保存的是一个字符串值， 并且这个字符串值的长度大于 \u003ccode\u003e39\u003c/code\u003e 字节， 那么字符串对象将使用一个简单动态字符串（SDS）来保存这个字符串值， 并将对象的编码设置为 \u003ccode\u003eraw\u003c/code\u003e 。\u003c/p\u003e\n\u003cfigure class=\"highlight c\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e8\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u0026gt; SET story \u003cspan class=\"string\"\u003e\u0026#34;Long, long, long ago there lived a king ...\u0026#34;\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eOK\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026gt; STRLEN \u003cspan class=\"title function_\"\u003estory\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"params\"\u003e(integer)\u003c/span\u003e 43\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026gt; OBJECT ENCODING story\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026#34;raw\u0026#34;\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e如果字符串对象保存的是一个字符串值， 并且这个字符串值的长度小于等于 \u003ccode\u003e39\u003c/code\u003e 字节， 那么字符串对象将使用 \u003ccode\u003eembstr\u003c/code\u003e 编码的方式来保存这个字符串值。\u003ccode\u003eembstr\u003c/code\u003e 编码是专门用于保存短字符串的一种优化编码方式。\u003c/p\u003e\n\u003cp\u003e【示例】\u003c/p\u003e\n\u003cfigure class=\"highlight c\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u0026gt; SET msg \u003cspan class=\"string\"\u003e\u0026#34;hello\u0026#34;\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eOK\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026gt; OBJECT ENCODING msg\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"string\"\u003e\u0026#34;embstr\u0026#34;\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003ch3 id=\"String-命令\"\u003e\u003ca href=\"#String-命令\" class=\"headerlink\" title=\"String 命令\"\u003e\u003c/a\u003eString 命令\u003c/h3\u003e\u003ctable\u003e\n\u003cthead\u003e\n\u003ctr\u003e\n\u003cth\u003e命令\u003c/th\u003e\n\u003cth\u003e说明\u003c/th\u003e\n\u003c/tr\u003e\n\u003c/thead\u003e\n\u003ctbody\u003e\u003ctr\u003e\n\u003ctd\u003e\u003ccode\u003eSET\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003e存储一个字符串值\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003ccode\u003eSETNX\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003e仅当键不存在时，才存储字符串值\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003ccode\u003eGET\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003e获取指定 key 的值\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003ccode\u003eMGET\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003e获取一个或多个指定 key 的值\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003ccode\u003eINCRBY\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003e将 key 中储存的数字加上指定的增量值\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003ccode\u003eDECRBY\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003e将 key 中储存的数字减去指定的减量值\u003c/td\u003e\n\u003c/tr\u003e\n\u003c/tbody\u003e\u003c/table\u003e\n\u003cblockquote\u003e\n\u003cp\u003e更多命令请参考：\u003ca target=\"_blank\" rel=\"noopener\" href=\"https://redis.io/commands#string\"\u003eRedis String 类型官方命令文档\u003c/a\u003e\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003e【示例】SET、GET、DEL 操作\u003c/p\u003e\n\u003cfigure class=\"highlight shell\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e8\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e9\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e10\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e11\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e12\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e13\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e14\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e15\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e16\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e17\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e18\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e19\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e20\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e21\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta prompt_\"\u003e# \u003c/span\u003e\u003cspan class=\"language-bash\"\u003e将 key(name) 的 value 保存为 dunwu\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta prompt_\"\u003e\u0026gt; \u003c/span\u003e\u003cspan class=\"language-bash\"\u003e\u003cspan class=\"built_in\"\u003eset\u003c/span\u003e name dunwu\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eOK\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta prompt_\"\u003e# \u003c/span\u003e\u003cspan class=\"language-bash\"\u003e获取 key(name) 的 value\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta prompt_\"\u003e\u0026gt; \u003c/span\u003e\u003cspan class=\"language-bash\"\u003eget name\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026#34;dunwu\u0026#34;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta prompt_\"\u003e# \u003c/span\u003e\u003cspan class=\"language-bash\"\u003e将 key(name) 的 value 保存为 unknown（覆盖原 value）\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta prompt_\"\u003e\u0026gt; \u003c/span\u003e\u003cspan class=\"language-bash\"\u003e\u003cspan class=\"built_in\"\u003eset\u003c/span\u003e name unknown\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eOK\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta prompt_\"\u003e\u0026gt; \u003c/span\u003e\u003cspan class=\"language-bash\"\u003eget name\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026#34;unknown\u0026#34;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta prompt_\"\u003e# \u003c/span\u003e\u003cspan class=\"language-bash\"\u003e检查 key(name) 是否存在\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta prompt_\"\u003e\u0026gt; \u003c/span\u003e\u003cspan class=\"language-bash\"\u003eexists name\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e(integer) 1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta prompt_\"\u003e# \u003c/span\u003e\u003cspan class=\"language-bash\"\u003e删除 key(name)\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta prompt_\"\u003e\u0026gt; \u003c/span\u003e\u003cspan class=\"language-bash\"\u003edel name\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e(integer) 1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta prompt_\"\u003e\u0026gt; \u003c/span\u003e\u003cspan class=\"language-bash\"\u003eexists name\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e(integer) 0\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta prompt_\"\u003e\u0026gt; \u003c/span\u003e\u003cspan class=\"language-bash\"\u003eget name\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e(nil)\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e【示例】SETNX 操作\u003c/p\u003e\n\u003cfigure class=\"highlight shell\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e8\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e9\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e10\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e11\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e12\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta prompt_\"\u003e# \u003c/span\u003e\u003cspan class=\"language-bash\"\u003e检查 key(lock) 是否存在\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta prompt_\"\u003e\u0026gt; \u003c/span\u003e\u003cspan class=\"language-bash\"\u003eexists lock\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e(integer) 0\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta prompt_\"\u003e# \u003c/span\u003e\u003cspan class=\"language-bash\"\u003e将 key(lock) 的 value 保存为 1，保存成功\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta prompt_\"\u003e\u0026gt; \u003c/span\u003e\u003cspan class=\"language-bash\"\u003esetnx lock 1\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e(integer) 1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta prompt_\"\u003e# \u003c/span\u003e\u003cspan class=\"language-bash\"\u003e将 key(lock) 的 value 保存为 2，由于 key 已存在，保存失败\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta prompt_\"\u003e\u0026gt; \u003c/span\u003e\u003cspan class=\"language-bash\"\u003esetnx lock 2\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e(integer) 0\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta prompt_\"\u003e# \u003c/span\u003e\u003cspan class=\"language-bash\"\u003e获取 key(lock) 的 value\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta prompt_\"\u003e\u0026gt; \u003c/span\u003e\u003cspan class=\"language-bash\"\u003eget lock\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026#34;1\u0026#34;\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e【示例】MSET、MGET 操作\u003c/p\u003e\n\u003cfigure class=\"highlight shell\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e8\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta prompt_\"\u003e# \u003c/span\u003e\u003cspan class=\"language-bash\"\u003e批量设置 one、two、three 这 3 个 key\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta prompt_\"\u003e\u0026gt; \u003c/span\u003e\u003cspan class=\"language-bash\"\u003emset one 1 tow 2 three 3\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eOK\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta prompt_\"\u003e# \u003c/span\u003e\u003cspan class=\"language-bash\"\u003e批量获取 one、two、three 3 个 key 的 value\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta prompt_\"\u003e\u0026gt; \u003c/span\u003e\u003cspan class=\"language-bash\"\u003emget one tow three\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e1) \u0026#34;1\u0026#34;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2) \u0026#34;2\u0026#34;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3) \u0026#34;3\u0026#34;\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e【示例】INCR、DECR、INCRBY、DECRBY 操作\u003c/p\u003e\n\u003cfigure class=\"highlight shell\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e8\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e9\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e10\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e11\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e12\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e13\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e14\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e15\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta prompt_\"\u003e# \u003c/span\u003e\u003cspan class=\"language-bash\"\u003e将 key(counter) 的 value 保存为 0\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta prompt_\"\u003e\u0026gt; \u003c/span\u003e\u003cspan class=\"language-bash\"\u003e\u003cspan class=\"built_in\"\u003eset\u003c/span\u003e counter 0\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eOK\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta prompt_\"\u003e# \u003c/span\u003e\u003cspan class=\"language-bash\"\u003e将 key(counter) 的 value 加 1\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta prompt_\"\u003e\u0026gt; \u003c/span\u003e\u003cspan class=\"language-bash\"\u003eincr counter\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e(integer) 1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta prompt_\"\u003e# \u003c/span\u003e\u003cspan class=\"language-bash\"\u003e将 key(counter) 的 value 加 9\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta prompt_\"\u003e\u0026gt; \u003c/span\u003e\u003cspan class=\"language-bash\"\u003eincrby counter 9\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e(integer) 10\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta prompt_\"\u003e# \u003c/span\u003e\u003cspan class=\"language-bash\"\u003e将 key(counter) 的 value 减 1\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta prompt_\"\u003e\u0026gt; \u003c/span\u003e\u003cspan class=\"language-bash\"\u003edecr counter\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e(integer) 9\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta prompt_\"\u003e# \u003c/span\u003e\u003cspan class=\"language-bash\"\u003e将 key(counter) 的 value 减 9\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta prompt_\"\u003e\u0026gt; \u003c/span\u003e\u003cspan class=\"language-bash\"\u003edecrby counter 9\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e(integer) 0\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003ch3 id=\"String-应用\"\u003e\u003ca href=\"#String-应用\" class=\"headerlink\" title=\"String 应用\"\u003e\u003c/a\u003eString 应用\u003c/h3\u003e\u003cp\u003e\u003cstrong\u003e适用场景：缓存、计数器、共享 Session\u003c/strong\u003e\u003c/p\u003e\n\u003ch4 id=\"缓存对象\"\u003e\u003ca href=\"#缓存对象\" class=\"headerlink\" title=\"缓存对象\"\u003e\u003c/a\u003e缓存对象\u003c/h4\u003e\u003cp\u003e使用 String 来缓存对象有两种方式：\u003c/p\u003e\n\u003cp\u003e（1）缓存对象的 JSON 值\u003c/p\u003e\n\u003cfigure class=\"highlight shell\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta prompt_\"\u003e\u0026gt; \u003c/span\u003e\u003cspan class=\"language-bash\"\u003e\u003cspan class=\"built_in\"\u003eset\u003c/span\u003e user:1 {\u003cspan class=\"string\"\u003e\u0026#34;name\u0026#34;\u003c/span\u003e:\u003cspan class=\"string\"\u003e\u0026#34;dunwu\u0026#34;\u003c/span\u003e,\u003cspan class=\"string\"\u003e\u0026#34;sex\u0026#34;\u003c/span\u003e:\u003cspan class=\"string\"\u003e\u0026#34;man\u0026#34;\u003c/span\u003e}\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e（2）将 key 分离为 user:ID:属性的形式，采用 MSET 存储，用 MGET 获取各属性值\u003c/p\u003e\n\u003cfigure class=\"highlight shell\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta prompt_\"\u003e\u0026gt; \u003c/span\u003e\u003cspan class=\"language-bash\"\u003emset user:1:name dunwu user:1:sex man\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eOK\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta prompt_\"\u003e\u0026gt; \u003c/span\u003e\u003cspan class=\"language-bash\"\u003emget user:1:name user:1:sex\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e1) \u0026#34;dunwu\u0026#34;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2) \u0026#34;man\u0026#34;\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003ch4 id=\"计数器\"\u003e\u003ca href=\"#计数器\" class=\"headerlink\" title=\"计数器\"\u003e\u003c/a\u003e计数器\u003c/h4\u003e\u003cp\u003e【需求场景】\u003c/p\u003e\n\u003cp\u003e统计网站某内容的点击量、收藏量、点赞数等等。\u003c/p\u003e\n\u003cp\u003e【解决方案】\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e使用 Redis 的 String 类型存储一个计数器。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003e维护计数器的常见操作如下：\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e增加统计值 - 使用 \u003ccode\u003eINCR\u003c/code\u003e、\u003ccode\u003eDECR\u003c/code\u003e 命令\u003c/li\u003e\n\u003cli\u003e减少统计值 - 使用 \u003ccode\u003eINCRBY\u003c/code\u003e、\u003ccode\u003eDECRBY\u003c/code\u003e 操作\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e【示例代码】\u003c/p\u003e\n\u003cfigure class=\"highlight shell\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e8\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e9\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e10\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e11\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e12\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta prompt_\"\u003e# \u003c/span\u003e\u003cspan class=\"language-bash\"\u003e初始化 ID 为 1024 的博文访问量为 0\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta prompt_\"\u003e\u0026gt; \u003c/span\u003e\u003cspan class=\"language-bash\"\u003e\u003cspan class=\"built_in\"\u003eset\u003c/span\u003e blog:view:1024 0\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eOK\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta prompt_\"\u003e# \u003c/span\u003e\u003cspan class=\"language-bash\"\u003eID 为 1024 的博文访问量加 1\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta prompt_\"\u003e\u0026gt; \u003c/span\u003e\u003cspan class=\"language-bash\"\u003eincr blog:view:1024\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e(integer) 1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta prompt_\"\u003e# \u003c/span\u003e\u003cspan class=\"language-bash\"\u003eID 为 1024 的博文访问量加 1\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta prompt_\"\u003e\u0026gt; \u003c/span\u003e\u003cspan class=\"language-bash\"\u003eincr blog:view:1024\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e(integer) 2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta prompt_\"\u003e# \u003c/span\u003e\u003cspan class=\"language-bash\"\u003e查看 ID 为 1024 的博文访问量\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta prompt_\"\u003e\u0026gt; \u003c/span\u003e\u003cspan class=\"language-bash\"\u003eget blog:view:1024\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026#34;2\u0026#34;\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003ch4 id=\"分布式锁\"\u003e\u003ca href=\"#分布式锁\" class=\"headerlink\" title=\"分布式锁\"\u003e\u003c/a\u003e分布式锁\u003c/h4\u003e\u003cp\u003e（1）申请锁\u003c/p\u003e\n\u003cp\u003eSET 命令有个 NX 参数可以实现“key 不存在才插入”，可以用它来实现分布式锁：\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e如果 key 不存在，则显示插入成功，可以用来表示加锁成功；\u003c/li\u003e\n\u003cli\u003e如果 key 存在，则会显示插入失败，可以用来表示加锁失败。\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e一般而言，还会对分布式锁加上过期时间，分布式锁的命令如下：\u003c/p\u003e\n\u003cfigure class=\"highlight shell\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003eSET key value NX PX 30000\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cul\u003e\n\u003cli\u003ekey - 就是分布式锁的关键字；\u003c/li\u003e\n\u003cli\u003evalue - 是客户端生成的唯一的标识；\u003c/li\u003e\n\u003cli\u003eNX - 表示只有 \u003ccode\u003ekey\u003c/code\u003e 不存在的时候才会设置成功。（如果此时 redis 中存在这个 key，那么设置失败，返回 \u003ccode\u003enil\u003c/code\u003e）\u003c/li\u003e\n\u003cli\u003ePX 30000 - 表示：30s 后，key 会被删除（这意味着锁被释放了）。设置过期时间，是为了防止出现各种意外，导致锁始终无法释放的情况。\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e（2）释放锁\u003c/p\u003e\n\u003cp\u003e释放锁就是删除 key ，但是一般可以用 \u003ccode\u003elua\u003c/code\u003e 脚本删除，判断 value 一样才删除，这是为了保证释放锁操作和申请所操作是同一个客户端。由于涉及两个操作，为了保证原子性，可以使用 lua 脚本来实现，因为 Redis 执行 Lua 脚本时，是以原子性方式执行的。\u003c/p\u003e\n\u003cfigure class=\"highlight lua\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"comment\"\u003e-- 删除锁的时候，找到 key 对应的 value，跟自己传过去的 value 做比较，如果是一样的才删除。\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"keyword\"\u003eif\u003c/span\u003e redis.call(\u003cspan class=\"string\"\u003e\u0026#34;get\u0026#34;\u003c/span\u003e,KEYS[\u003cspan class=\"number\"\u003e1\u003c/span\u003e]) == ARGV[\u003cspan class=\"number\"\u003e1\u003c/span\u003e] \u003cspan class=\"keyword\"\u003ethen\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"keyword\"\u003ereturn\u003c/span\u003e redis.call(\u003cspan class=\"string\"\u003e\u0026#34;del\u0026#34;\u003c/span\u003e,KEYS[\u003cspan class=\"number\"\u003e1\u003c/span\u003e])\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"keyword\"\u003eelse\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"keyword\"\u003ereturn\u003c/span\u003e \u003cspan class=\"number\"\u003e0\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"keyword\"\u003eend\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003ch4 id=\"共享-Session-信息\"\u003e\u003ca href=\"#共享-Session-信息\" class=\"headerlink\" title=\"共享 Session 信息\"\u003e\u003c/a\u003e共享 Session 信息\u003c/h4\u003e\u003cp\u003e在分布式场景下，一个用户的 Session 如果只存储在一个服务器上，那么当负载均衡器把用户的下一个请求转发到另一个服务器上，该服务器没有用户的 Session，就可能导致用户需要重新进行登录等操作。\u003c/p\u003e\n\u003cp\u003e分布式 Session 的几种实现策略：\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003e粘性 session\u003c/li\u003e\n\u003cli\u003e应用服务器间的 session 复制共享\u003c/li\u003e\n\u003cli\u003e基于缓存的 session 共享 ✅\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003e基于缓存的 session 共享实现\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e\u003cstrong\u003e使用一个单独的存储服务器存储 Session 数据\u003c/strong\u003e，可以存在 MySQL 数据库上，也可以存在 Redis 或者 Memcached 这种内存型数据库。\u003c/p\u003e\n\u003cp\u003e缺点：需要去实现存取 Session 的代码。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cdiv align=\"center\"\u003e\n\u003cimg src=\"https://raw.githubusercontent.com/dunwu/images/master/cs/design/architecture/MultiNode-SpringSession.jpg\"/\u003e\n\u003c/div\u003e\n## Hash\n\n\u003ch3 id=\"Hash-简介\"\u003e\u003ca href=\"#Hash-简介\" class=\"headerlink\" title=\"Hash 简介\"\u003e\u003c/a\u003eHash 简介\u003c/h3\u003e\u003cdiv align=\"center\"\u003e\n\u003cimg src=\"https://raw.githubusercontent.com/dunwu/images/master/cs/database/redis/redis-datatype-hash.png\" width=\"400\"/\u003e\n\u003c/div\u003e\n\n\u003cp\u003eHash 是一个键值对（key - value）集合，其中 value 的形式如： \u003ccode\u003evalue=[{field1，value1}，...{fieldN，valueN}]\u003c/code\u003e。Hash 特别适合用于存储对象。\u003c/p\u003e\n\u003ch3 id=\"Hash-实现\"\u003e\u003ca href=\"#Hash-实现\" class=\"headerlink\" title=\"Hash 实现\"\u003e\u003c/a\u003eHash 实现\u003c/h3\u003e\u003cp\u003e哈希对象的编码可以是 \u003ccode\u003eziplist\u003c/code\u003e 或者 \u003ccode\u003ehashtable\u003c/code\u003e 。\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003eziplist\u003c/code\u003e 编码的哈希对象使用压缩列表作为底层实现，每当有新的键值对要加入到哈希对象时， 程序会先将保存了键的压缩列表节点推入到压缩列表表尾， 然后再将保存了值的压缩列表节点推入到压缩列表表尾。\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003ehashtable\u003c/code\u003e 编码的哈希对象使用字典作为底层实现， 哈希对象中的每个键值对都使用一个字典键值对来保存。\u003c/p\u003e\n\u003cp\u003e当哈希对象同时满足以下两个条件时， 使用 \u003ccode\u003eziplist\u003c/code\u003e 编码；否则，使用 \u003ccode\u003ehashtable\u003c/code\u003e 编码。\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003e哈希对象保存的所有键值对的键和值的字符串长度都小于 \u003ccode\u003e64\u003c/code\u003e 字节（可由 \u003ccode\u003ehash-max-ziplist-value\u003c/code\u003e 配置）；\u003c/li\u003e\n\u003cli\u003e哈希对象保存的键值对数量小于 \u003ccode\u003e512\u003c/code\u003e 个（可由 \u003ccode\u003ehash-max-ziplist-entries\u003c/code\u003e 配置）；\u003c/li\u003e\n\u003c/ol\u003e\n\u003cblockquote\u003e\n\u003cp\u003e注意：这两个条件的上限值是可以修改的， 具体请看配置文件中关于 \u003ccode\u003ehash-max-ziplist-value\u003c/code\u003e 选项和 \u003ccode\u003ehash-max-ziplist-entries\u003c/code\u003e 选项的说明。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003ch3 id=\"Hash-命令\"\u003e\u003ca href=\"#Hash-命令\" class=\"headerlink\" title=\"Hash 命令\"\u003e\u003c/a\u003eHash 命令\u003c/h3\u003e\u003ctable\u003e\n\u003cthead\u003e\n\u003ctr\u003e\n\u003cth\u003e命令\u003c/th\u003e\n\u003cth\u003e行为\u003c/th\u003e\n\u003c/tr\u003e\n\u003c/thead\u003e\n\u003ctbody\u003e\u003ctr\u003e\n\u003ctd\u003e\u003ccode\u003eHSET\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003e将指定字段的值设为 value\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003ccode\u003eHGET\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003e获取指定字段的值\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003ccode\u003eHGETALL\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003e获取所有键值对\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003ccode\u003eHMSET\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003e设置多个键值对\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003ccode\u003eHMGET\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003e获取所有指定字段的值\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003ccode\u003eHDEL\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003e删除指定字段\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003ccode\u003eHINCRBY\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003e为指定字段的整数值加上增量\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003ccode\u003eHKEYS\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003e获取所有字段\u003c/td\u003e\n\u003c/tr\u003e\n\u003c/tbody\u003e\u003c/table\u003e\n\u003cblockquote\u003e\n\u003cp\u003e更多命令请参考：\u003ca target=\"_blank\" rel=\"noopener\" href=\"https://redis.io/commands#hash\"\u003eRedis Hash 类型官方命令文档\u003c/a\u003e\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cfigure class=\"highlight shell\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e8\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e9\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e10\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e11\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e12\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e13\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e14\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e15\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e16\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e17\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e18\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e19\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta prompt_\"\u003e# \u003c/span\u003e\u003cspan class=\"language-bash\"\u003e存储一个哈希表key的键值\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eHSET key field value\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta prompt_\"\u003e# \u003c/span\u003e\u003cspan class=\"language-bash\"\u003e获取哈希表key对应的field键值\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eHGET key field\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta prompt_\"\u003e\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta prompt_\"\u003e# \u003c/span\u003e\u003cspan class=\"language-bash\"\u003e在一个哈希表key中存储多个键值对\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eHMSET key field value [field value...]\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta prompt_\"\u003e# \u003c/span\u003e\u003cspan class=\"language-bash\"\u003e批量获取哈希表key中多个field键值\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eHMGET key field [field ...]\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta prompt_\"\u003e# \u003c/span\u003e\u003cspan class=\"language-bash\"\u003e删除哈希表key中的field键值\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eHDEL key field [field ...]\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta prompt_\"\u003e\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta prompt_\"\u003e# \u003c/span\u003e\u003cspan class=\"language-bash\"\u003e返回哈希表key中field的数量\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eHLEN key\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta prompt_\"\u003e# \u003c/span\u003e\u003cspan class=\"language-bash\"\u003e返回哈希表key中所有的键值\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eHGETALL key\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta prompt_\"\u003e\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta prompt_\"\u003e# \u003c/span\u003e\u003cspan class=\"language-bash\"\u003e为哈希表key中field键的值加上增量n\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eHINCRBY key field n\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003ch3 id=\"Hash-应用\"\u003e\u003ca href=\"#Hash-应用\" class=\"headerlink\" title=\"Hash 应用\"\u003e\u003c/a\u003eHash 应用\u003c/h3\u003e\u003cblockquote\u003e\n\u003cp\u003e\u003cstrong\u003eHash 类型适用于存储结构化数据\u003c/strong\u003e。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003ch4 id=\"缓存对象-1\"\u003e\u003ca href=\"#缓存对象-1\" class=\"headerlink\" title=\"缓存对象\"\u003e\u003c/a\u003e缓存对象\u003c/h4\u003e\u003cp\u003eHash 类型的（key，field，value）的结构与对象的（对象 id，属性，值）的结构相似，也可以用来存储对象。\u003c/p\u003e\n\u003cp\u003e我们以用户信息为例，它在关系型数据库中的结构是这样的：\u003c/p\u003e\n\u003cp\u003e我们可以使用如下命令，将用户对象的信息存储到 Hash 类型：\u003c/p\u003e\n\u003cfigure class=\"highlight shell\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e8\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e9\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e10\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e11\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e12\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta prompt_\"\u003e# \u003c/span\u003e\u003cspan class=\"language-bash\"\u003e存储一个哈希表uid:1的键值\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta prompt_\"\u003e\u0026gt; \u003c/span\u003e\u003cspan class=\"language-bash\"\u003eHMSET uid:1 name Tom age 15\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta prompt_\"\u003e# \u003c/span\u003e\u003cspan class=\"language-bash\"\u003e存储一个哈希表uid:2的键值\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta prompt_\"\u003e\u0026gt; \u003c/span\u003e\u003cspan class=\"language-bash\"\u003eHMSET uid:2 name Jerry age 13\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta prompt_\"\u003e# \u003c/span\u003e\u003cspan class=\"language-bash\"\u003e获取哈希表用户\u003cspan class=\"built_in\"\u003eid\u003c/span\u003e为1中所有的键值\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta prompt_\"\u003e\u0026gt; \u003c/span\u003e\u003cspan class=\"language-bash\"\u003eHGETALL uid:1\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e1) \u0026#34;name\u0026#34;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2) \u0026#34;Tom\u0026#34;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3) \u0026#34;age\u0026#34;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4) \u0026#34;15\u0026#34;\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003eRedis Hash 存储其结构如下图：\u003c/p\u003e\n\u003cp\u003e在介绍 String 类型的应用场景时有所介绍，String + Json 也是存储对象的一种方式，那么存储对象时，到底用 String + json 还是用 Hash 呢？\u003c/p\u003e\n\u003cp\u003e一般对象用 String + Json 存储，对象中某些频繁变化的属性可以考虑抽出来用 Hash 类型存储。\u003c/p\u003e\n\u003ch4 id=\"购物车\"\u003e\u003ca href=\"#购物车\" class=\"headerlink\" title=\"购物车\"\u003e\u003c/a\u003e购物车\u003c/h4\u003e\u003cp\u003e【需求场景】\u003c/p\u003e\n\u003cp\u003e用户浏览电商平台，添加商品到购物车，并支持查看购物车。需要考虑未登录的情况。\u003c/p\u003e\n\u003cp\u003e【解决方案】\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e可以使用 HASH 类型来实现购物车功能。\u003c/p\u003e\n\u003cp\u003e以用户 session 为 key，存储了商品 ID 和商品数量的映射。其中，商品 id 为 field，商品数量为 value。\u003c/p\u003e\n\u003cp\u003e为什么不使用用户 ID？\u003c/p\u003e\n\u003cp\u003e因为很多场景下需要支持用户在免登陆的情况下使用购物车的，因为未登录，所以无法知道用户的用户 ID，这种情况下使用用户 session 更合适。并且由于绑定的是 session，可以在清空 session 时，顺便清空购物车缓存，更加方便。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003e维护购物车的常见操作如下：\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e添加商品 - \u003ccode\u003eHSET cart:{session} {商品id} 1\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003e添加数量 - \u003ccode\u003eHINCRBY cart:{session} {商品id} 1\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003e商品总数 - \u003ccode\u003eHLEN cart:{session}\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003e删除商品 - \u003ccode\u003eHDEL cart:{session} {商品id}\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003e获取购物车所有商品 - \u003ccode\u003eHGETALL cart:{session}\u003c/code\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e当前仅仅是将商品 ID 存储到了 Redis 中，在回显商品具体信息的时候，还需要拿着商品 id 查询一次数据库，获取完整的商品的信息。\u003c/p\u003e\n\u003ch2 id=\"List\"\u003e\u003ca href=\"#List\" class=\"headerlink\" title=\"List\"\u003e\u003c/a\u003eList\u003c/h2\u003e\u003cp\u003eRedis 中的 List 类型就是有序列表。\u003c/p\u003e\n\u003ch3 id=\"List-简介\"\u003e\u003ca href=\"#List-简介\" class=\"headerlink\" title=\"List 简介\"\u003e\u003c/a\u003eList 简介\u003c/h3\u003e\u003cdiv align=\"center\"\u003e\n\u003cimg src=\"https://raw.githubusercontent.com/dunwu/images/master/cs/database/redis/redis-datatype-list.png\" width=\"400\"/\u003e\n\u003c/div\u003e\n\n\u003cp\u003eList 列表是简单的字符串列表，\u003cstrong\u003e按照插入顺序排序\u003c/strong\u003e，可以从头部或尾部向 List 列表添加元素。\u003c/p\u003e\n\u003cp\u003e列表的最大长度为 \u003ccode\u003e2^32 - 1\u003c/code\u003e，也即每个列表支持超过 \u003ccode\u003e40 亿\u003c/code\u003e个元素。\u003c/p\u003e\n\u003ch3 id=\"List-实现\"\u003e\u003ca href=\"#List-实现\" class=\"headerlink\" title=\"List 实现\"\u003e\u003c/a\u003eList 实现\u003c/h3\u003e\u003cp\u003e列表对象的编码可以是 \u003ccode\u003eziplist\u003c/code\u003e 或者 \u003ccode\u003elinkedlist\u003c/code\u003e 。\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003eziplist\u003c/code\u003e 编码的列表对象使用压缩列表作为底层实现， 每个压缩列表节点（entry）保存了一个列表元素。\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"http://redisbook.com/_images/graphviz-a8d31075b4c0537f4eb6d84aaba1df928c67c953.png\"/\u003e\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003einkedlist\u003c/code\u003e 编码的列表对象使用双链表作为底层实现。\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"http://redisbook.com/_images/graphviz-84c0d231f30c740a431407c7aaf3851b96399590.png\"/\u003e\u003c/p\u003e\n\u003cp\u003e当列表对象可以同时满足以下两个条件时， 列表对象使用 \u003ccode\u003eziplist\u003c/code\u003e 编码；否则，使用 \u003ccode\u003elinkedlist\u003c/code\u003e 编码\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003e列表对象保存的所有字符串元素的长度都小于 \u003ccode\u003e64\u003c/code\u003e 字节；\u003c/li\u003e\n\u003cli\u003e列表对象保存的元素数量小于 \u003ccode\u003e512\u003c/code\u003e 个；\u003c/li\u003e\n\u003c/ol\u003e\n\u003cblockquote\u003e\n\u003cp\u003e注意\u003c/p\u003e\n\u003cp\u003e以上两个条件的上限值是可以修改的， 具体请看配置文件中关于 \u003ccode\u003elist-max-ziplist-value\u003c/code\u003e 选项和 \u003ccode\u003elist-max-ziplist-entries\u003c/code\u003e 选项的说明。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003ch3 id=\"List-命令\"\u003e\u003ca href=\"#List-命令\" class=\"headerlink\" title=\"List 命令\"\u003e\u003c/a\u003eList 命令\u003c/h3\u003e\u003ctable\u003e\n\u003cthead\u003e\n\u003ctr\u003e\n\u003cth\u003e命令\u003c/th\u003e\n\u003cth\u003e行为\u003c/th\u003e\n\u003c/tr\u003e\n\u003c/thead\u003e\n\u003ctbody\u003e\u003ctr\u003e\n\u003ctd\u003e\u003ccode\u003eLPUSH\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003e将给定值推入列表的右端。\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003ccode\u003eRPUSH\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003e将给定值推入列表的右端。\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003ccode\u003eLPOP\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003e从列表的左端弹出一个值，并返回被弹出的值。\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003ccode\u003eRPOP\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003e从列表的右端弹出一个值，并返回被弹出的值。\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003ccode\u003eLRANGE\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003e获取列表在给定范围上的所有值。\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003ccode\u003eLINDEX\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003e获取列表在给定位置上的单个元素。\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003ccode\u003eLREM\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003e从列表的左端弹出一个值，并返回被弹出的值。\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003ccode\u003eLTRIM\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003e只保留指定区间内的元素，删除其他元素。\u003c/td\u003e\n\u003c/tr\u003e\n\u003c/tbody\u003e\u003c/table\u003e\n\u003cblockquote\u003e\n\u003cp\u003e更多命令请参考：\u003ca target=\"_blank\" rel=\"noopener\" href=\"https://redis.io/commands#list\"\u003eRedis List 类型官方命令文档\u003c/a\u003e\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cfigure class=\"highlight shell\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e8\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e9\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e10\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e11\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e12\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e13\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e14\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e15\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e16\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta prompt_\"\u003e# \u003c/span\u003e\u003cspan class=\"language-bash\"\u003e将一个或多个值value插入到key列表的表头(最左边)，最后的值在最前面\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eLPUSH key value [value ...]\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta prompt_\"\u003e# \u003c/span\u003e\u003cspan class=\"language-bash\"\u003e将一个或多个值value插入到key列表的表尾(最右边)\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eRPUSH key value [value ...]\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta prompt_\"\u003e# \u003c/span\u003e\u003cspan class=\"language-bash\"\u003e移除并返回key列表的头元素\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eLPOP key\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta prompt_\"\u003e# \u003c/span\u003e\u003cspan class=\"language-bash\"\u003e移除并返回key列表的尾元素\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eRPOP key\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta prompt_\"\u003e\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta prompt_\"\u003e# \u003c/span\u003e\u003cspan class=\"language-bash\"\u003e返回列表key中指定区间内的元素，区间以偏移量start和stop指定，从0开始\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eLRANGE key start stop\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta prompt_\"\u003e\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta prompt_\"\u003e# \u003c/span\u003e\u003cspan class=\"language-bash\"\u003e从key列表表头弹出一个元素，没有就阻塞\u003cspan class=\"built_in\"\u003etimeout\u003c/span\u003e秒，如果\u003cspan class=\"built_in\"\u003etimeout\u003c/span\u003e=0则一直阻塞\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eBLPOP key [key ...] timeout\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta prompt_\"\u003e# \u003c/span\u003e\u003cspan class=\"language-bash\"\u003e从key列表表尾弹出一个元素，没有就阻塞\u003cspan class=\"built_in\"\u003etimeout\u003c/span\u003e秒，如果\u003cspan class=\"built_in\"\u003etimeout\u003c/span\u003e=0则一直阻塞\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eBRPOP key [key ...] timeout\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003ch3 id=\"List-应用\"\u003e\u003ca href=\"#List-应用\" class=\"headerlink\" title=\"List 应用\"\u003e\u003c/a\u003eList 应用\u003c/h3\u003e\u003ch4 id=\"消息队列\"\u003e\u003ca href=\"#消息队列\" class=\"headerlink\" title=\"消息队列\"\u003e\u003c/a\u003e消息队列\u003c/h4\u003e\u003cp\u003e消息队列在存取消息时，必须要满足三个需求，分别是\u003cstrong\u003e消息保序、处理重复的消息和保证消息可靠性\u003c/strong\u003e。\u003c/p\u003e\n\u003cp\u003eRedis 的 List 和 Stream 两种数据类型，就可以满足消息队列的这三个需求。我们先来了解下基于 List 的消息队列实现方法，后面在介绍 Stream 数据类型时候，在详细说说 Stream。\u003c/p\u003e\n\u003cp\u003e\u003cem\u003e1、如何满足消息保序需求？\u003c/em\u003e\u003c/p\u003e\n\u003cp\u003eList 本身就是按先进先出的顺序对数据进行存取的，所以，如果使用 List 作为消息队列保存消息的话，就已经能满足消息保序的需求了。\u003c/p\u003e\n\u003cp\u003eList 可以使用 LPUSH + RPOP（或者反过来，RPUSH+LPOP）命令实现消息队列。\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003cp\u003e生产者使用 \u003ccode\u003eLPUSH key value[value...]\u003c/code\u003e 将消息插入到队列的头部，如果 key 不存在则会创建一个空的队列再插入消息。\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e消费者使用 \u003ccode\u003eRPOP key\u003c/code\u003e 依次读取队列的消息，先进先出。\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e不过，在消费者读取数据时，有一个潜在的性能风险点。\u003c/p\u003e\n\u003cp\u003e在生产者往 List 中写入数据时，List 并不会主动地通知消费者有新消息写入，如果消费者想要及时处理消息，就需要在程序中不停地调用 \u003ccode\u003eRPOP\u003c/code\u003e 命令（比如使用一个 while(1) 循环）。如果有新消息写入，RPOP 命令就会返回结果，否则，RPOP 命令返回空值，再继续循环。\u003c/p\u003e\n\u003cp\u003e所以，即使没有新消息写入 List，消费者也要不停地调用 RPOP 命令，这就会导致消费者程序的 CPU 一直消耗在执行 RPOP 命令上，带来不必要的性能损失。\u003c/p\u003e\n\u003cp\u003e为了解决这个问题，Redis 提供了 BRPOP 命令。\u003cstrong\u003eBRPOP 命令也称为阻塞式读取，客户端在没有读到队列数据时，自动阻塞，直到有新的数据写入队列，再开始读取新数据\u003c/strong\u003e。和消费者程序自己不停地调用 RPOP 命令相比，这种方式能节省 CPU 开销。\u003c/p\u003e\n\u003cp\u003e\u003cem\u003e2、如何处理重复的消息？\u003c/em\u003e\u003c/p\u003e\n\u003cp\u003e消费者要实现重复消息的判断，需要 2 个方面的要求：\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e每个消息都有一个全局的 ID。\u003c/li\u003e\n\u003cli\u003e消费者要记录已经处理过的消息的 ID。当收到一条消息后，消费者程序就可以对比收到的消息 ID 和记录的已处理过的消息 ID，来判断当前收到的消息有没有经过处理。如果已经处理过，那么，消费者程序就不再进行处理了。\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e但是 \u003cstrong\u003eList 并不会为每个消息生成 ID 号，所以我们需要自行为每个消息生成一个全局唯一 ID\u003c/strong\u003e，生成之后，我们在用 LPUSH 命令把消息插入 List 时，需要在消息中包含这个全局唯一 ID。\u003c/p\u003e\n\u003cp\u003e例如，我们执行以下命令，就把一条全局 ID 为 111000102、库存量为 99 的消息插入了消息队列：\u003c/p\u003e\n\u003cfigure class=\"highlight shell\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta prompt_\"\u003e\u0026gt; \u003c/span\u003e\u003cspan class=\"language-bash\"\u003eLPUSH mq \u003cspan class=\"string\"\u003e\u0026#34;111000102:stock:99\u0026#34;\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e(integer) 1\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e\u003cem\u003e3、如何保证消息可靠性？\u003c/em\u003e\u003c/p\u003e\n\u003cp\u003e当消费者程序从 List 中读取一条消息后，List 就不会再留存这条消息了。所以，如果消费者程序在处理消息的过程出现了故障或宕机，就会导致消息没有处理完成，那么，消费者程序再次启动后，就没法再次从 List 中读取消息了。\u003c/p\u003e\n\u003cp\u003e为了留存消息，List 类型提供了 \u003ccode\u003eBRPOPLPUSH\u003c/code\u003e 命令，这个命令的\u003cstrong\u003e作用是让消费者程序从一个 List 中读取消息，同时，Redis 会把这个消息再插入到另一个 List（可以叫作备份 List）留存\u003c/strong\u003e。\u003c/p\u003e\n\u003cp\u003e这样一来，如果消费者程序读了消息但没能正常处理，等它重启后，就可以从备份 List 中重新读取消息并进行处理了。\u003c/p\u003e\n\u003cp\u003e好了，到这里可以知道基于 List 类型的消息队列，满足消息队列的三大需求（消息保序、处理重复的消息和保证消息可靠性）。\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e消息保序：使用 LPUSH + RPOP；\u003c/li\u003e\n\u003cli\u003e阻塞读取：使用 BRPOP；\u003c/li\u003e\n\u003cli\u003e重复消息处理：生产者自行实现全局唯一 ID；\u003c/li\u003e\n\u003cli\u003e消息的可靠性：使用 BRPOPLPUSH\u003c/li\u003e\n\u003c/ul\u003e\n\u003cblockquote\u003e\n\u003cp\u003eList 作为消息队列有什么缺陷？\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003e\u003cstrong\u003eList 不支持多个消费者消费同一条消息\u003c/strong\u003e，因为一旦消费者拉取一条消息后，这条消息就从 List 中删除了，无法被其它消费者再次消费。\u003c/p\u003e\n\u003cp\u003e要实现一条消息可以被多个消费者消费，那么就要将多个消费者组成一个消费组，使得多个消费者可以消费同一条消息，但是 \u003cstrong\u003eList 类型并不支持消费组的实现\u003c/strong\u003e。\u003c/p\u003e\n\u003cp\u003e这就要说起 Redis 从 5.0 版本开始提供的 Stream 数据类型了，Stream 同样能够满足消息队列的三大需求，而且它还支持“消费组”形式的消息读取。\u003c/p\u003e\n\u003ch4 id=\"输入自动补全\"\u003e\u003ca href=\"#输入自动补全\" class=\"headerlink\" title=\"输入自动补全\"\u003e\u003c/a\u003e输入自动补全\u003c/h4\u003e\u003cp\u003e【需求场景】\u003c/p\u003e\n\u003cp\u003e根据用户输入，自动补全信息，如：联系人、商品名等。\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e典型场景一 - 社交网站后台记录用户最近联系过的 100 个好友，当用户查找好友时，根据输入的关键字自动补全姓名。\u003c/li\u003e\n\u003cli\u003e典型场景二 - 电商网站后台记录用户最近浏览过的 10 件商品，当用户查找商品是，根据输入的关键字自动补全商品名称。\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e【解决方案】\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e使用 Redis 的 List 类型存储一个最近信息列表，然后在需要自动补全信息时展示相应数量的数据。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003e维护最近信息列表的常见操作如下：\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e如果指定信息经存在于最近信息列表里，那么从列表里移除。使用 \u003ccode\u003eLREM\u003c/code\u003e 命令。\u003c/li\u003e\n\u003cli\u003e将指定信息添加到最近信息列表的头部。使用 \u003ccode\u003eLPUSH\u003c/code\u003e 命令。\u003c/li\u003e\n\u003cli\u003e添加操作完成后，如果最近信息列表中的数量超过上限 N，进行裁剪操作。使用 \u003ccode\u003eLTRIM\u003c/code\u003e 命令。\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"Set\"\u003e\u003ca href=\"#Set\" class=\"headerlink\" title=\"Set\"\u003e\u003c/a\u003eSet\u003c/h2\u003e\u003cp\u003eRedis 中的 Set 类型就是无序且去重的集合。\u003c/p\u003e\n\u003ch3 id=\"Set-简介\"\u003e\u003ca href=\"#Set-简介\" class=\"headerlink\" title=\"Set 简介\"\u003e\u003c/a\u003eSet 简介\u003c/h3\u003e\u003cdiv align=\"center\"\u003e\n\u003cimg src=\"https://raw.githubusercontent.com/dunwu/images/master/cs/database/redis/redis-datatype-set.png\" width=\"400\"/\u003e\n\u003c/div\u003e\n\n\u003cp\u003eSet 类型是一个无序并唯一的键值集合，它的存储顺序不会按照插入的先后顺序进行存储。\u003c/p\u003e\n\u003cp\u003e一个集合最多可以存储 \u003ccode\u003e2^32-1\u003c/code\u003e 个元素。概念和数学中个的集合基本类似，可以交集，并集，差集等等，所以 Set 类型除了支持集合内的增删改查，同时还支持多个集合取交集、并集、差集。\u003c/p\u003e\n\u003cp\u003eSet 类型和 List 类型的区别如下：\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eList 可以存储重复元素，Set 只能存储非重复元素；\u003c/li\u003e\n\u003cli\u003eList 是按照元素的先后顺序存储元素的，而 Set 则是无序方式存储元素的。\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"Set-实现\"\u003e\u003ca href=\"#Set-实现\" class=\"headerlink\" title=\"Set 实现\"\u003e\u003c/a\u003eSet 实现\u003c/h3\u003e\u003cp\u003e集合对象的编码可以是 \u003ccode\u003eintset\u003c/code\u003e 或者 \u003ccode\u003ehashtable\u003c/code\u003e 。\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003eintset\u003c/code\u003e 编码的集合对象使用整数集合作为底层实现， 集合对象包含的所有元素都被保存在整数集合里面。\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/dunwu/images/master/snap/202309241059483.png\"/\u003e\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003ehashtable\u003c/code\u003e 编码的集合对象使用字典作为底层实现， 字典的每个键都是一个字符串对象， 每个字符串对象包含了一个集合元素， 而字典的值则全部被设置为 \u003ccode\u003eNULL\u003c/code\u003e 。\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/dunwu/images/master/snap/202309241100174.png\"/\u003e\u003c/p\u003e\n\u003cp\u003e当集合对象可以同时满足以下两个条件时，集合对象使用 \u003ccode\u003eintset\u003c/code\u003e 编码；否则，使用 \u003ccode\u003ehashtable\u003c/code\u003e 编码：\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003e集合对象保存的所有元素都是整数值；\u003c/li\u003e\n\u003cli\u003e集合对象保存的元素数量不超过 \u003ccode\u003e512\u003c/code\u003e 个；\u003c/li\u003e\n\u003c/ol\u003e\n\u003cblockquote\u003e\n\u003cp\u003e注意：第二个条件的上限值是可以修改的， 具体请看配置文件中关于 \u003ccode\u003eset-max-intset-entries\u003c/code\u003e 选项的说明。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003ch3 id=\"Set-命令\"\u003e\u003ca href=\"#Set-命令\" class=\"headerlink\" title=\"Set 命令\"\u003e\u003c/a\u003eSet 命令\u003c/h3\u003e\u003ctable\u003e\n\u003cthead\u003e\n\u003ctr\u003e\n\u003cth\u003e命令\u003c/th\u003e\n\u003cth\u003e行为\u003c/th\u003e\n\u003c/tr\u003e\n\u003c/thead\u003e\n\u003ctbody\u003e\u003ctr\u003e\n\u003ctd\u003e\u003ccode\u003eSADD\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003e将给定元素添加到集合。\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003ccode\u003eSMEMBERS\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003e返回集合包含的所有元素。\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003ccode\u003eSISMEMBER\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003e检查给定元素是否存在于集合中。\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003ccode\u003eSREM\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003e如果给定的元素存在于集合中，那么移除这个元素。\u003c/td\u003e\n\u003c/tr\u003e\n\u003c/tbody\u003e\u003c/table\u003e\n\u003cblockquote\u003e\n\u003cp\u003e更多命令请参考：\u003ca target=\"_blank\" rel=\"noopener\" href=\"https://redis.io/commands#set\"\u003eRedis Set 类型官方命令文档\u003c/a\u003e\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003eSet 常用操作：\u003c/p\u003e\n\u003cfigure class=\"highlight shell\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e8\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e9\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e10\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e11\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e12\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e13\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e14\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e15\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e16\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta prompt_\"\u003e# \u003c/span\u003e\u003cspan class=\"language-bash\"\u003e往集合key中存入元素，元素存在则忽略，若key不存在则新建\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eSADD key member [member ...]\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta prompt_\"\u003e# \u003c/span\u003e\u003cspan class=\"language-bash\"\u003e从集合key中删除元素\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eSREM key member [member ...]\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta prompt_\"\u003e# \u003c/span\u003e\u003cspan class=\"language-bash\"\u003e获取集合key中所有元素\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eSMEMBERS key\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta prompt_\"\u003e# \u003c/span\u003e\u003cspan class=\"language-bash\"\u003e获取集合key中的元素个数\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eSCARD key\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta prompt_\"\u003e\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta prompt_\"\u003e# \u003c/span\u003e\u003cspan class=\"language-bash\"\u003e判断member元素是否存在于集合key中\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eSISMEMBER key member\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta prompt_\"\u003e\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta prompt_\"\u003e# \u003c/span\u003e\u003cspan class=\"language-bash\"\u003e从集合key中随机选出count个元素，元素不从key中删除\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eSRANDMEMBER key [count]\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta prompt_\"\u003e# \u003c/span\u003e\u003cspan class=\"language-bash\"\u003e从集合key中随机选出count个元素，元素从key中删除\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eSPOP key [count]\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003eSet 运算操作：\u003c/p\u003e\n\u003cfigure class=\"highlight shell\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e8\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e9\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e10\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e11\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e12\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e13\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e14\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta prompt_\"\u003e# \u003c/span\u003e\u003cspan class=\"language-bash\"\u003e交集运算\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eSINTER key [key ...]\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta prompt_\"\u003e# \u003c/span\u003e\u003cspan class=\"language-bash\"\u003e将交集结果存入新集合destination中\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eSINTERSTORE destination key [key ...]\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta prompt_\"\u003e\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta prompt_\"\u003e# \u003c/span\u003e\u003cspan class=\"language-bash\"\u003e并集运算\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eSUNION key [key ...]\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta prompt_\"\u003e# \u003c/span\u003e\u003cspan class=\"language-bash\"\u003e将并集结果存入新集合destination中\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eSUNIONSTORE destination key [key ...]\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta prompt_\"\u003e\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta prompt_\"\u003e# \u003c/span\u003e\u003cspan class=\"language-bash\"\u003e差集运算\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eSDIFF key [key ...]\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta prompt_\"\u003e# \u003c/span\u003e\u003cspan class=\"language-bash\"\u003e将差集结果存入新集合destination中\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eSDIFFSTORE destination key [key ...]\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003ch3 id=\"Set-应用\"\u003e\u003ca href=\"#Set-应用\" class=\"headerlink\" title=\"Set 应用\"\u003e\u003c/a\u003eSet 应用\u003c/h3\u003e\u003cp\u003e集合的主要几个特性，无序、不可重复、支持并交差等操作。\u003c/p\u003e\n\u003cp\u003e因此 Set 类型比较适合用来数据去重和保障数据的唯一性，还可以用来统计多个集合的交集、错集和并集等，当我们存储的数据是无序并且需要去重的情况下，比较适合使用集合类型进行存储。\u003c/p\u003e\n\u003cp\u003e但是要提醒你一下，这里有一个潜在的风险。\u003cstrong\u003eSet 的差集、并集和交集的计算复杂度较高，在数据量较大的情况下，如果直接执行这些计算，会导致 Redis 实例阻塞\u003c/strong\u003e。\u003c/p\u003e\n\u003cp\u003e在主从集群中，为了避免主库因为 Set 做聚合计算（交集、差集、并集）时导致主库被阻塞，我们可以选择一个从库完成聚合统计，或者把数据返回给客户端，由客户端来完成聚合统计。\u003c/p\u003e\n\u003ch4 id=\"点赞\"\u003e\u003ca href=\"#点赞\" class=\"headerlink\" title=\"点赞\"\u003e\u003c/a\u003e点赞\u003c/h4\u003e\u003cp\u003eSet 类型可以保证一个用户只能点一个赞，这里举例子一个场景，key 是文章 id，value 是用户 id。\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003euid:1\u003c/code\u003e 、\u003ccode\u003euid:2\u003c/code\u003e、\u003ccode\u003euid:3\u003c/code\u003e 三个用户分别对 article:1 文章点赞了。\u003c/p\u003e\n\u003cfigure class=\"highlight shell\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e8\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e9\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta prompt_\"\u003e# \u003c/span\u003e\u003cspan class=\"language-bash\"\u003euid:1 用户对文章 article:1 点赞\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta prompt_\"\u003e\u0026gt; \u003c/span\u003e\u003cspan class=\"language-bash\"\u003eSADD article:1 uid:1\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e(integer) 1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta prompt_\"\u003e# \u003c/span\u003e\u003cspan class=\"language-bash\"\u003euid:2 用户对文章 article:1 点赞\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta prompt_\"\u003e\u0026gt; \u003c/span\u003e\u003cspan class=\"language-bash\"\u003eSADD article:1 uid:2\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e(integer) 1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta prompt_\"\u003e# \u003c/span\u003e\u003cspan class=\"language-bash\"\u003euid:3 用户对文章 article:1 点赞\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta prompt_\"\u003e\u0026gt; \u003c/span\u003e\u003cspan class=\"language-bash\"\u003eSADD article:1 uid:3\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e(integer) 1\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e\u003ccode\u003euid:1\u003c/code\u003e 取消了对 article:1 文章点赞。\u003c/p\u003e\n\u003cfigure class=\"highlight plaintext\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u0026gt; SREM article:1 uid:1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e(integer) 1\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e获取 article:1 文章所有点赞用户 :\u003c/p\u003e\n\u003cfigure class=\"highlight shell\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta prompt_\"\u003e\u0026gt; \u003c/span\u003e\u003cspan class=\"language-bash\"\u003eSMEMBERS article:1\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e1) \u0026#34;uid:3\u0026#34;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2) \u0026#34;uid:2\u0026#34;\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e获取 article:1 文章的点赞用户数量：\u003c/p\u003e\n\u003cfigure class=\"highlight shell\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta prompt_\"\u003e\u0026gt; \u003c/span\u003e\u003cspan class=\"language-bash\"\u003eSCARD article:1\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e(integer) 2\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e判断用户 \u003ccode\u003euid:1\u003c/code\u003e 是否对文章 article:1 点赞了：\u003c/p\u003e\n\u003cfigure class=\"highlight shell\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta prompt_\"\u003e\u0026gt; \u003c/span\u003e\u003cspan class=\"language-bash\"\u003eSISMEMBER article:1 uid:1\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e(integer) 0  # 返回0说明没点赞，返回1则说明点赞了\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003ch4 id=\"共同关注\"\u003e\u003ca href=\"#共同关注\" class=\"headerlink\" title=\"共同关注\"\u003e\u003c/a\u003e共同关注\u003c/h4\u003e\u003cp\u003eSet 类型支持交集运算，所以可以用来计算共同关注的好友、公众号等。\u003c/p\u003e\n\u003cp\u003ekey 可以是用户 id，value 则是已关注的公众号的 id。\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003euid:1\u003c/code\u003e 用户关注公众号 id 为 5、6、7、8、9，\u003ccode\u003euid:2\u003c/code\u003e 用户关注公众号 id 为 7、8、9、10、11。\u003c/p\u003e\n\u003cfigure class=\"highlight shell\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta prompt_\"\u003e# \u003c/span\u003e\u003cspan class=\"language-bash\"\u003euid:1 用户关注公众号 \u003cspan class=\"built_in\"\u003eid\u003c/span\u003e 为 5、6、7、8、9\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta prompt_\"\u003e\u0026gt; \u003c/span\u003e\u003cspan class=\"language-bash\"\u003eSADD uid:1 5 6 7 8 9\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e(integer) 5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta prompt_\"\u003e# \u003c/span\u003e\u003cspan class=\"language-bash\"\u003euid:2  用户关注公众号 \u003cspan class=\"built_in\"\u003eid\u003c/span\u003e 为 7、8、9、10、11\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta prompt_\"\u003e\u0026gt; \u003c/span\u003e\u003cspan class=\"language-bash\"\u003eSADD uid:2 7 8 9 10 11\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e(integer) 5\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e\u003ccode\u003euid:1\u003c/code\u003e 和 \u003ccode\u003euid:2\u003c/code\u003e 共同关注的公众号：\u003c/p\u003e\n\u003cfigure class=\"highlight shell\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta prompt_\"\u003e# \u003c/span\u003e\u003cspan class=\"language-bash\"\u003e获取共同关注\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta prompt_\"\u003e\u0026gt; \u003c/span\u003e\u003cspan class=\"language-bash\"\u003eSINTER uid:1 uid:2\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e1) \u0026#34;7\u0026#34;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2) \u0026#34;8\u0026#34;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3) \u0026#34;9\u0026#34;\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e给 \u003ccode\u003euid:2\u003c/code\u003e 推荐 \u003ccode\u003euid:1\u003c/code\u003e 关注的公众号：\u003c/p\u003e\n\u003cfigure class=\"highlight shell\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta prompt_\"\u003e\u0026gt; \u003c/span\u003e\u003cspan class=\"language-bash\"\u003eSDIFF uid:1 uid:2\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e1) \u0026#34;5\u0026#34;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2) \u0026#34;6\u0026#34;\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e验证某个公众号是否同时被 \u003ccode\u003euid:1\u003c/code\u003e 或 \u003ccode\u003euid:2\u003c/code\u003e 关注：\u003c/p\u003e\n\u003cfigure class=\"highlight shell\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta prompt_\"\u003e\u0026gt; \u003c/span\u003e\u003cspan class=\"language-bash\"\u003eSISMEMBER uid:1 5\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e(integer) 1 # 返回1，说明关注了\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta prompt_\"\u003e\u0026gt; \u003c/span\u003e\u003cspan class=\"language-bash\"\u003eSISMEMBER uid:2 5\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e(integer) 0 # 返回0，说明没关注\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003ch4 id=\"抽奖活动\"\u003e\u003ca href=\"#抽奖活动\" class=\"headerlink\" title=\"抽奖活动\"\u003e\u003c/a\u003e抽奖活动\u003c/h4\u003e\u003cp\u003e存储某活动中中奖的用户名，Set 类型因为有去重功能，可以保证同一个用户不会中奖两次。\u003c/p\u003e\n\u003cp\u003ekey 为抽奖活动名，value 为员工名称，把所有员工名称放入抽奖箱：\u003c/p\u003e\n\u003cfigure class=\"highlight shell\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta prompt_\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"language-bash\"\u003eSADD lucky Tom Jerry John Sean Marry Lindy Sary Mark\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e(integer) 5\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e如果允许重复中奖，可以使用 SRANDMEMBER 命令。\u003c/p\u003e\n\u003cfigure class=\"highlight shell\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e8\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e9\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e10\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e11\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e12\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta prompt_\"\u003e# \u003c/span\u003e\u003cspan class=\"language-bash\"\u003e抽取 1 个一等奖：\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta prompt_\"\u003e\u0026gt; \u003c/span\u003e\u003cspan class=\"language-bash\"\u003eSRANDMEMBER lucky 1\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e1) \u0026#34;Tom\u0026#34;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta prompt_\"\u003e# \u003c/span\u003e\u003cspan class=\"language-bash\"\u003e抽取 2 个二等奖：\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta prompt_\"\u003e\u0026gt; \u003c/span\u003e\u003cspan class=\"language-bash\"\u003eSRANDMEMBER lucky 2\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e1) \u0026#34;Mark\u0026#34;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2) \u0026#34;Jerry\u0026#34;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta prompt_\"\u003e# \u003c/span\u003e\u003cspan class=\"language-bash\"\u003e抽取 3 个三等奖：\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta prompt_\"\u003e\u0026gt; \u003c/span\u003e\u003cspan class=\"language-bash\"\u003eSRANDMEMBER lucky 3\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e1) \u0026#34;Sary\u0026#34;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2) \u0026#34;Tom\u0026#34;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3) \u0026#34;Jerry\u0026#34;\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e如果不允许重复中奖，可以使用 SPOP 命令。\u003c/p\u003e\n\u003cfigure class=\"highlight shell\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e8\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e9\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e10\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e11\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e12\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta prompt_\"\u003e# \u003c/span\u003e\u003cspan class=\"language-bash\"\u003e抽取一等奖1个\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta prompt_\"\u003e\u0026gt; \u003c/span\u003e\u003cspan class=\"language-bash\"\u003eSPOP lucky 1\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e1) \u0026#34;Sary\u0026#34;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta prompt_\"\u003e# \u003c/span\u003e\u003cspan class=\"language-bash\"\u003e抽取二等奖2个\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta prompt_\"\u003e\u0026gt; \u003c/span\u003e\u003cspan class=\"language-bash\"\u003eSPOP lucky 2\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e1) \u0026#34;Jerry\u0026#34;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2) \u0026#34;Mark\u0026#34;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta prompt_\"\u003e# \u003c/span\u003e\u003cspan class=\"language-bash\"\u003e抽取三等奖3个\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta prompt_\"\u003e\u0026gt; \u003c/span\u003e\u003cspan class=\"language-bash\"\u003eSPOP lucky 3\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e1) \u0026#34;John\u0026#34;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2) \u0026#34;Sean\u0026#34;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3) \u0026#34;Lindy\u0026#34;\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003ch2 id=\"Zset\"\u003e\u003ca href=\"#Zset\" class=\"headerlink\" title=\"Zset\"\u003e\u003c/a\u003eZset\u003c/h2\u003e\u003cp\u003eRedis 中的 Zset 类型就是有序且去重的集合。\u003c/p\u003e\n\u003ch3 id=\"Zset-简介\"\u003e\u003ca href=\"#Zset-简介\" class=\"headerlink\" title=\"Zset 简介\"\u003e\u003c/a\u003eZset 简介\u003c/h3\u003e\u003cp\u003eZset 类型（有序集合类型）相比于 Set 类型多了一个排序属性 score（分值），对于有序集合 ZSet 来说，每个存储元素相当于有两个值组成的，一个是有序结合的元素值，一个是排序值。\u003c/p\u003e\n\u003cp\u003e有序集合保留了集合不能有重复成员的特性（分值可以重复），但不同的是，有序集合中的元素可以排序。\u003c/p\u003e\n\u003cdiv align=\"center\"\u003e\n\u003cimg src=\"https://raw.githubusercontent.com/dunwu/images/master/cs/database/redis/redis-datatype-zset.png\" width=\"400\"/\u003e\n\u003c/div\u003e\n\n\u003ch3 id=\"Zset-实现\"\u003e\u003ca href=\"#Zset-实现\" class=\"headerlink\" title=\"Zset 实现\"\u003e\u003c/a\u003eZset 实现\u003c/h3\u003e\u003cp\u003e有序集合的编码可以是 \u003ccode\u003eziplist\u003c/code\u003e 或者 \u003ccode\u003eskiplist\u003c/code\u003e 。\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003eziplist\u003c/code\u003e 编码的有序集合对象使用压缩列表作为底层实现， 每个集合元素使用两个紧挨在一起的压缩列表节点来保存， 第一个节点保存元素的成员（member）， 而第二个元素则保存元素的分值（score）。压缩列表内的集合元素按分值从小到大进行排序， 分值较小的元素被放置在靠近表头的方向， 而分值较大的元素则被放置在靠近表尾的方向。\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003eskiplist\u003c/code\u003e 编码的有序集合对象使用 \u003ccode\u003ezset\u003c/code\u003e 结构作为底层实现， 一个 \u003ccode\u003ezset\u003c/code\u003e 结构同时包含一个字典和一个跳跃表\u003c/p\u003e\n\u003cfigure class=\"highlight c\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"keyword\"\u003etypedef\u003c/span\u003e \u003cspan class=\"class\"\u003e\u003cspan class=\"keyword\"\u003estruct\u003c/span\u003e \u003cspan class=\"title\"\u003ezset\u003c/span\u003e {\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    zskiplist *zsl;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    dict *dict;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e} zset;\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e\u003ccode\u003ezset\u003c/code\u003e 结构中的 \u003ccode\u003ezsl\u003c/code\u003e 跳跃表按分值从小到大保存了所有集合元素， 每个跳跃表节点都保存了一个集合元素： 跳跃表节点的 \u003ccode\u003eobject\u003c/code\u003e 属性保存了元素的成员， 而跳跃表节点的 \u003ccode\u003escore\u003c/code\u003e 属性则保存了元素的分值。 通过这个跳跃表， 程序可以对有序集合进行范围型操作， 比如 ZRANK 、 ZRANGE 等命令就是基于跳跃表 API 来实现的。\u003c/p\u003e\n\u003cp\u003e除此之外， \u003ccode\u003ezset\u003c/code\u003e 结构中的 \u003ccode\u003edict\u003c/code\u003e 字典为有序集合创建了一个从成员到分值的映射， 字典中的每个键值对都保存了一个集合元素： 字典的键保存了元素的成员， 而字典的值则保存了元素的分值。 通过这个字典， 程序可以用 O(1) 复杂度查找给定成员的分值， ZSCORE 命令就是根据这一特性实现的， 而很多其他有序集合命令都在实现的内部用到了这一特性。\u003c/p\u003e\n\u003cp\u003e有序集合每个元素的成员都是一个字符串对象， 而每个元素的分值都是一个 \u003ccode\u003edouble\u003c/code\u003e 类型的浮点数。 值得一提的是， 虽然 \u003ccode\u003ezset\u003c/code\u003e 结构同时使用跳跃表和字典来保存有序集合元素， 但这两种数据结构都会通过指针来共享相同元素的成员和分值， 所以同时使用跳跃表和字典来保存集合元素不会产生任何重复成员或者分值， 也不会因此而浪费额外的内存。\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/dunwu/images/master/snap/202309241108347.png\"/\u003e\u003c/p\u003e\n\u003cp\u003e当有序集合对象可以同时满足以下两个条件时，有序集合对象使用 \u003ccode\u003eziplist\u003c/code\u003e 编码；否则，使用 \u003ccode\u003eskiplist\u003c/code\u003e 编码。\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e有序集合保存的元素数量小于 \u003ccode\u003e128\u003c/code\u003e 个；\u003c/li\u003e\n\u003cli\u003e有序集合保存的所有元素成员的长度都小于 \u003ccode\u003e64\u003c/code\u003e 字节；\u003c/li\u003e\n\u003c/ul\u003e\n\u003cblockquote\u003e\n\u003cp\u003e注意：以上两个条件的上限值是可以修改的， 具体请看配置文件中关于 \u003ccode\u003ezset-max-ziplist-entries\u003c/code\u003e 选项和 \u003ccode\u003ezset-max-ziplist-value\u003c/code\u003e 选项的说明。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003e\u003cstrong\u003e在 Redis 7.0 中，压缩列表数据结构已经废弃了，交由 listpack 数据结构来实现了。\u003c/strong\u003e\u003c/p\u003e\n\u003ch3 id=\"Zset-命令\"\u003e\u003ca href=\"#Zset-命令\" class=\"headerlink\" title=\"Zset 命令\"\u003e\u003c/a\u003eZset 命令\u003c/h3\u003e\u003ctable\u003e\n\u003cthead\u003e\n\u003ctr\u003e\n\u003cth\u003e命令\u003c/th\u003e\n\u003cth\u003e行为\u003c/th\u003e\n\u003c/tr\u003e\n\u003c/thead\u003e\n\u003ctbody\u003e\u003ctr\u003e\n\u003ctd\u003e\u003ccode\u003eZADD\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003e将一个带有给定分值的成员添加到有序集合里面\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003ccode\u003eZRANGE\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003e顺序排序，并返回指定排名区间的成员\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003eZREVRANGE\u003c/td\u003e\n\u003ctd\u003e反序排序，并返回指定排名区间的成员\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003ccode\u003eZRANGEBYSCORE\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003e顺序排序，并返回指定排名区间的成员及其分值\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003eZREVRANGEBYSCORE\u003c/td\u003e\n\u003ctd\u003e反序排序，并返回指定排名区间的成员及其分值\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003ccode\u003eZREM\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003e移除指定的成员\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003ccode\u003eZSCORE\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003e返回指定成员的分值\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003ccode\u003eZCARD\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003e返回所有成员数\u003c/td\u003e\n\u003c/tr\u003e\n\u003c/tbody\u003e\u003c/table\u003e\n\u003cblockquote\u003e\n\u003cp\u003e更多命令请参考：\u003ca target=\"_blank\" rel=\"noopener\" href=\"https://redis.io/commands#sorted_set\"\u003eRedis ZSet 类型官方命令文档\u003c/a\u003e\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003eZset 常用操作：\u003c/p\u003e\n\u003cfigure class=\"highlight shell\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e8\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e9\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e10\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e11\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e12\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e13\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e14\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e15\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e16\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e17\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e18\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e19\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e20\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e21\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e22\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e23\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e24\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta prompt_\"\u003e# \u003c/span\u003e\u003cspan class=\"language-bash\"\u003e往有序集合key中加入带分值元素\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eZADD key score member [[score member]...]\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta prompt_\"\u003e# \u003c/span\u003e\u003cspan class=\"language-bash\"\u003e往有序集合key中删除元素\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eZREM key member [member...]\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta prompt_\"\u003e# \u003c/span\u003e\u003cspan class=\"language-bash\"\u003e返回有序集合key中元素member的分值\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eZSCORE key member\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta prompt_\"\u003e# \u003c/span\u003e\u003cspan class=\"language-bash\"\u003e返回有序集合key中元素个数\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eZCARD key\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta prompt_\"\u003e\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta prompt_\"\u003e# \u003c/span\u003e\u003cspan class=\"language-bash\"\u003e为有序集合key中元素member的分值加上increment\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eZINCRBY key increment member\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta prompt_\"\u003e\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta prompt_\"\u003e# \u003c/span\u003e\u003cspan class=\"language-bash\"\u003e正序获取有序集合key从start下标到stop下标的元素\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eZRANGE key start stop [WITHSCORES]\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta prompt_\"\u003e# \u003c/span\u003e\u003cspan class=\"language-bash\"\u003e倒序获取有序集合key从start下标到stop下标的元素\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eZREVRANGE key start stop [WITHSCORES]\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta prompt_\"\u003e\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta prompt_\"\u003e# \u003c/span\u003e\u003cspan class=\"language-bash\"\u003e返回有序集合中指定分数区间内的成员，分数由低到高排序。\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eZRANGEBYSCORE key min max [WITHSCORES] [LIMIT offset count]\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta prompt_\"\u003e\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta prompt_\"\u003e# \u003c/span\u003e\u003cspan class=\"language-bash\"\u003e返回指定成员区间内的成员，按字典正序排列, 分数必须相同。\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eZRANGEBYLEX key min max [LIMIT offset count]\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta prompt_\"\u003e# \u003c/span\u003e\u003cspan class=\"language-bash\"\u003e返回指定成员区间内的成员，按字典倒序排列, 分数必须相同\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eZREVRANGEBYLEX key max min [LIMIT offset count]\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003eZset 运算操作（相比于 Set 类型，ZSet 类型没有支持差集运算）：\u003c/p\u003e\n\u003cfigure class=\"highlight shell\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta prompt_\"\u003e# \u003c/span\u003e\u003cspan class=\"language-bash\"\u003e并集计算(相同元素分值相加)，numberkeys一共多少个key，WEIGHTS每个key对应的分值乘积\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eZUNIONSTORE destkey numberkeys key [key...]\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta prompt_\"\u003e# \u003c/span\u003e\u003cspan class=\"language-bash\"\u003e交集计算(相同元素分值相加)，numberkeys一共多少个key，WEIGHTS每个key对应的分值乘积\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eZINTERSTORE destkey numberkeys key [key...]\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003ch3 id=\"Zset-应用\"\u003e\u003ca href=\"#Zset-应用\" class=\"headerlink\" title=\"Zset 应用\"\u003e\u003c/a\u003eZset 应用\u003c/h3\u003e\u003cp\u003eZset 类型（Sorted Set，有序集合）可以根据元素的权重来排序，我们可以自己来决定每个元素的权重值。比如说，我们可以根据元素插入 Sorted Set 的时间确定权重值，先插入的元素权重小，后插入的元素权重大。\u003c/p\u003e\n\u003cp\u003e在面对需要展示最新列表、排行榜等场景时，如果数据更新频繁或者需要分页显示，可以优先考虑使用 Sorted Set。\u003c/p\u003e\n\u003ch4 id=\"排行榜\"\u003e\u003ca href=\"#排行榜\" class=\"headerlink\" title=\"排行榜\"\u003e\u003c/a\u003e排行榜\u003c/h4\u003e\u003cp\u003e【需求场景】\u003c/p\u003e\n\u003cp\u003e各种排行榜，如：内容平台（视频、歌曲、文章）的播放量/收藏量/评分排行榜；电商网站的销售排行榜；\u003c/p\u003e\n\u003cp\u003e【解决方案】\u003c/p\u003e\n\u003cp\u003e有序集合比较典型的使用场景就是排行榜。例如学生成绩的排名榜、游戏积分排行榜、视频播放排名、电商系统中商品的销量排名等。\u003c/p\u003e\n\u003cp\u003e我们以博文点赞排名为例，小林发表了五篇博文，分别获得赞为 200、40、100、50、150。\u003c/p\u003e\n\u003cfigure class=\"highlight shell\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e8\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e9\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e10\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e11\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e12\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e13\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e14\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e15\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta prompt_\"\u003e# \u003c/span\u003e\u003cspan class=\"language-bash\"\u003earcticle:1 文章获得了200个赞\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta prompt_\"\u003e\u0026gt; \u003c/span\u003e\u003cspan class=\"language-bash\"\u003eZADD user:xiaolin:ranking 200 arcticle:1\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e(integer) 1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta prompt_\"\u003e# \u003c/span\u003e\u003cspan class=\"language-bash\"\u003earcticle:2 文章获得了40个赞\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta prompt_\"\u003e\u0026gt; \u003c/span\u003e\u003cspan class=\"language-bash\"\u003eZADD user:xiaolin:ranking 40 arcticle:2\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e(integer) 1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta prompt_\"\u003e# \u003c/span\u003e\u003cspan class=\"language-bash\"\u003earcticle:3 文章获得了100个赞\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta prompt_\"\u003e\u0026gt; \u003c/span\u003e\u003cspan class=\"language-bash\"\u003eZADD user:xiaolin:ranking 100 arcticle:3\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e(integer) 1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta prompt_\"\u003e# \u003c/span\u003e\u003cspan class=\"language-bash\"\u003earcticle:4 文章获得了50个赞\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta prompt_\"\u003e\u0026gt; \u003c/span\u003e\u003cspan class=\"language-bash\"\u003eZADD user:xiaolin:ranking 50 arcticle:4\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e(integer) 1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta prompt_\"\u003e# \u003c/span\u003e\u003cspan class=\"language-bash\"\u003earcticle:5 文章获得了150个赞\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta prompt_\"\u003e\u0026gt; \u003c/span\u003e\u003cspan class=\"language-bash\"\u003eZADD user:xiaolin:ranking 150 arcticle:5\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e(integer) 1\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e文章 arcticle:4 新增一个赞，可以使用 ZINCRBY 命令（为有序集合 key 中元素 member 的分值加上 increment）：\u003c/p\u003e\n\u003cfigure class=\"highlight shell\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta prompt_\"\u003e\u0026gt; \u003c/span\u003e\u003cspan class=\"language-bash\"\u003eZINCRBY user:xiaolin:ranking 1 arcticle:4\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026#34;51\u0026#34;\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e查看某篇文章的赞数，可以使用 ZSCORE 命令（返回有序集合 key 中元素个数）：\u003c/p\u003e\n\u003cfigure class=\"highlight shell\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta prompt_\"\u003e\u0026gt; \u003c/span\u003e\u003cspan class=\"language-bash\"\u003eZSCORE user:xiaolin:ranking arcticle:4\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026#34;50\u0026#34;\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e获取小林文章赞数最多的 3 篇文章，可以使用 ZREVRANGE 命令（倒序获取有序集合 key 从 start 下标到 stop 下标的元素）：\u003c/p\u003e\n\u003cfigure class=\"highlight shell\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e8\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta prompt_\"\u003e# \u003c/span\u003e\u003cspan class=\"language-bash\"\u003eWITHSCORES 表示把 score 也显示出来\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta prompt_\"\u003e\u0026gt; \u003c/span\u003e\u003cspan class=\"language-bash\"\u003eZREVRANGE user:xiaolin:ranking 0 2 WITHSCORES\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e1) \u0026#34;arcticle:1\u0026#34;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2) \u0026#34;200\u0026#34;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3) \u0026#34;arcticle:5\u0026#34;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4) \u0026#34;150\u0026#34;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5) \u0026#34;arcticle:3\u0026#34;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6) \u0026#34;100\u0026#34;\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e获取小林 100 赞到 200 赞的文章，可以使用 ZRANGEBYSCORE 命令（返回有序集合中指定分数区间内的成员，分数由低到高排序）：\u003c/p\u003e\n\u003cfigure class=\"highlight shell\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta prompt_\"\u003e\u0026gt; \u003c/span\u003e\u003cspan class=\"language-bash\"\u003eZRANGEBYSCORE user:xiaolin:ranking 100 200 WITHSCORES\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e1) \u0026#34;arcticle:3\u0026#34;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2) \u0026#34;100\u0026#34;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3) \u0026#34;arcticle:5\u0026#34;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4) \u0026#34;150\u0026#34;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5) \u0026#34;arcticle:1\u0026#34;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6) \u0026#34;200\u0026#34;\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003ch4 id=\"前缀排序\"\u003e\u003ca href=\"#前缀排序\" class=\"headerlink\" title=\"前缀排序\"\u003e\u003c/a\u003e前缀排序\u003c/h4\u003e\u003cp\u003e使用有序集合的 \u003ccode\u003eZRANGEBYLEX\u003c/code\u003e 或 \u003ccode\u003eZREVRANGEBYLEX\u003c/code\u003e 可以帮助我们实现电话号码或姓名的排序，我们以 \u003ccode\u003eZRANGEBYLEX\u003c/code\u003e （返回指定成员区间内的成员，按 key 正序排列，分数必须相同）为例。\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003e注意：不要在分数不一致的 SortSet 集合中去使用 ZRANGEBYLEX 和 ZREVRANGEBYLEX 指令，因为获取的结果会不准确。\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003e\u003cem\u003e1、电话排序\u003c/em\u003e\u003c/p\u003e\n\u003cp\u003e我们可以将电话号码存储到 SortSet 中，然后根据需要来获取号段：\u003c/p\u003e\n\u003cfigure class=\"highlight shell\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta prompt_\"\u003e\u0026gt; \u003c/span\u003e\u003cspan class=\"language-bash\"\u003eZADD phone 0 13100111100 0 13110114300 0 13132110901\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e(integer) 3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta prompt_\"\u003e\u0026gt; \u003c/span\u003e\u003cspan class=\"language-bash\"\u003eZADD phone 0 13200111100 0 13210414300 0 13252110901\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e(integer) 3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta prompt_\"\u003e\u0026gt; \u003c/span\u003e\u003cspan class=\"language-bash\"\u003eZADD phone 0 13300111100 0 13310414300 0 13352110901\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e(integer) 3\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e获取所有号码：\u003c/p\u003e\n\u003cfigure class=\"highlight shell\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e8\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e9\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e10\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta prompt_\"\u003e\u0026gt; \u003c/span\u003e\u003cspan class=\"language-bash\"\u003eZRANGEBYLEX phone - +\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e1) \u0026#34;13100111100\u0026#34;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2) \u0026#34;13110114300\u0026#34;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3) \u0026#34;13132110901\u0026#34;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4) \u0026#34;13200111100\u0026#34;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5) \u0026#34;13210414300\u0026#34;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6) \u0026#34;13252110901\u0026#34;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7) \u0026#34;13300111100\u0026#34;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e8) \u0026#34;13310414300\u0026#34;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e9) \u0026#34;13352110901\u0026#34;\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e获取 132 号段的号码：\u003c/p\u003e\n\u003cfigure class=\"highlight shell\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta prompt_\"\u003e\u0026gt; \u003c/span\u003e\u003cspan class=\"language-bash\"\u003eZRANGEBYLEX phone [132 (133\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e1) \u0026#34;13200111100\u0026#34;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2) \u0026#34;13210414300\u0026#34;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3) \u0026#34;13252110901\u0026#34;\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e获取 132、133 号段的号码：\u003c/p\u003e\n\u003cfigure class=\"highlight shell\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta prompt_\"\u003e\u0026gt; \u003c/span\u003e\u003cspan class=\"language-bash\"\u003eZRANGEBYLEX phone [132 (134\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e1) \u0026#34;13200111100\u0026#34;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2) \u0026#34;13210414300\u0026#34;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3) \u0026#34;13252110901\u0026#34;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4) \u0026#34;13300111100\u0026#34;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5) \u0026#34;13310414300\u0026#34;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6) \u0026#34;13352110901\u0026#34;\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e\u003cem\u003e2、姓名排序\u003c/em\u003e\u003c/p\u003e\n\u003cfigure class=\"highlight shell\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta prompt_\"\u003e\u0026gt; \u003c/span\u003e\u003cspan class=\"language-bash\"\u003ezadd names 0 Toumas 0 Jake 0 Bluetuo 0 Gaodeng 0 Aimini 0 Aidehua\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e(integer) 6\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e获取所有人的名字：\u003c/p\u003e\n\u003cfigure class=\"highlight shell\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta prompt_\"\u003e\u0026gt; \u003c/span\u003e\u003cspan class=\"language-bash\"\u003eZRANGEBYLEX names - +\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e1) \u0026#34;Aidehua\u0026#34;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2) \u0026#34;Aimini\u0026#34;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3) \u0026#34;Bluetuo\u0026#34;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4) \u0026#34;Gaodeng\u0026#34;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5) \u0026#34;Jake\u0026#34;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6) \u0026#34;Toumas\u0026#34;\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e获取名字中大写字母 A 开头的所有人：\u003c/p\u003e\n\u003cfigure class=\"highlight shell\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta prompt_\"\u003e\u0026gt; \u003c/span\u003e\u003cspan class=\"language-bash\"\u003eZRANGEBYLEX names [A (B\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e1) \u0026#34;Aidehua\u0026#34;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2) \u0026#34;Aimini\u0026#34;\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e获取名字中大写字母 C 到 Z 的所有人：\u003c/p\u003e\n\u003cfigure class=\"highlight shell\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta prompt_\"\u003e\u0026gt; \u003c/span\u003e\u003cspan class=\"language-bash\"\u003eZRANGEBYLEX names [C [Z\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e1) \u0026#34;Gaodeng\u0026#34;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2) \u0026#34;Jake\u0026#34;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3) \u0026#34;Toumas\u0026#34;\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003ch2 id=\"总结\"\u003e\u003ca href=\"#总结\" class=\"headerlink\" title=\"总结\"\u003e\u003c/a\u003e总结\u003c/h2\u003e\u003cp\u003eRedis 常见的五种数据类型：**String（字符串），Hash（哈希），List（列表），Set（集合）及 Zset(sorted set：有序集合)**。\u003c/p\u003e\n\u003cp\u003e这五种数据类型都由多种数据结构实现的，主要是出于时间和空间的考虑，当数据量小的时候使用更简单的数据结构，有利于节省内存，提高性能。\u003c/p\u003e\n\u003cp\u003e可以看到，Redis 数据类型的底层数据结构随着版本的更新也有所不同，比如：\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e在 Redis 3.0 版本中 List 对象的底层数据结构由“双向链表”或“压缩表列表”实现，但是在 3.2 版本之后，List 数据类型底层数据结构是由 quicklist 实现的；\u003c/li\u003e\n\u003cli\u003e在最新的 Redis 代码中，压缩列表数据结构已经废弃了，交由 listpack 数据结构来实现了。\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eRedis 五种数据类型的应用场景：\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eString 类型的应用场景：缓存对象、常规计数、分布式锁、共享 session 信息等。\u003c/li\u003e\n\u003cli\u003eList 类型的应用场景：消息队列（有两个问题：1. 生产者需要自行实现全局唯一 ID；2. 不能以消费组形式消费数据）等。\u003c/li\u003e\n\u003cli\u003eHash 类型：缓存对象、购物车等。\u003c/li\u003e\n\u003cli\u003eSet 类型：聚合计算（并集、交集、差集）场景，比如点赞、共同关注、抽奖活动等。\u003c/li\u003e\n\u003cli\u003eZset 类型：排序场景，比如排行榜、电话和姓名排序等。\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eRedis 后续版本又支持四种数据类型，它们的应用场景如下：\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eBitMap（2.2 版新增）：二值状态统计的场景，比如签到、判断用户登陆状态、连续签到用户总数等；\u003c/li\u003e\n\u003cli\u003eHyperLogLog（2.8 版新增）：海量数据基数统计的场景，比如百万级网页 UV 计数等；\u003c/li\u003e\n\u003cli\u003eGEO（3.2 版新增）：存储地理位置信息的场景，比如滴滴叫车；\u003c/li\u003e\n\u003cli\u003eStream（5.0 版新增）：消息队列，相比于基于 List 类型实现的消息队列，有这两个特有的特性：自动生成全局唯一消息 ID，支持以消费组形式消费数据。\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/dunwu/images/master/snap/202309232144470.jpg\"/\u003e\u003c/p\u003e\n\u003cp\u003e针对 Redis 是否适合做消息队列，关键看你的业务场景：\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e如果你的业务场景足够简单，对于数据丢失不敏感，而且消息积压概率比较小的情况下，把 Redis 当作队列是完全可以的。\u003c/li\u003e\n\u003cli\u003e如果你的业务有海量消息，消息积压的概率比较大，并且不能接受数据丢失，那么还是用专业的消息队列中间件吧。\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"参考资料\"\u003e\u003ca href=\"#参考资料\" class=\"headerlink\" title=\"参考资料\"\u003e\u003c/a\u003e参考资料\u003c/h2\u003e\u003cul\u003e\n\u003cli\u003e\u003ca target=\"_blank\" rel=\"noopener\" href=\"https://item.jd.com/11791607.html\"\u003e《Redis 实战》\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca target=\"_blank\" rel=\"noopener\" href=\"https://item.jd.com/11486101.html\"\u003e《Redis 设计与实现》\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca target=\"_blank\" rel=\"noopener\" href=\"https://xiaolincoding.com/redis/data_struct/command.html#string\"\u003eRedis 常见数据类型和应用场景\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n    \u003c/div\u003e",
  "Date": "2020-06-24T02:45:38Z",
  "Author": "钝悟 ◾ Dunwu"
}