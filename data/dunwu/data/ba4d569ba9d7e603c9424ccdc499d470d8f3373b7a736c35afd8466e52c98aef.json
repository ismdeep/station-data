{
  "Source": "dunwu",
  "Title": "Jsoup 快速入门",
  "Link": "https://dunwu.github.io/blog/pages/5dd78d/",
  "Content": "\u003cdiv class=\"post-body\" itemprop=\"articleBody\"\u003e\u003ch1 id=\"Jsoup-快速入门\"\u003e\u003ca href=\"#Jsoup-快速入门\" class=\"headerlink\" title=\"Jsoup 快速入门\"\u003e\u003c/a\u003eJsoup 快速入门\u003c/h1\u003e\u003ch2 id=\"简介\"\u003e\u003ca href=\"#简介\" class=\"headerlink\" title=\"简介\"\u003e\u003c/a\u003e简介\u003c/h2\u003e\u003cp\u003ejsoup 是一款 Java 的 HTML 解析器，可直接解析某个 URL 地址、HTML 文本内容。它提供了一套非常省力的 API，可通过 DOM，CSS 以及类似于 JQuery 的操作方法来取出和操作数据。\u003c/p\u003e\n\u003cp\u003ejsoup 工作的流程主要如下：\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003e从一个 URL，文件或字符串中解析 HTML，并加载为一个 \u003ccode\u003eDocument\u003c/code\u003e 对象。\u003c/li\u003e\n\u003cli\u003e使用 DOM 或 CSS 选择器来取出数据；\u003c/li\u003e\n\u003cli\u003e可操作 HTML 元素、属性、文本。\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003ejsoup 是基于 MIT 协议发布的，可放心使用于商业项目。\u003c/p\u003e\n\u003ch2 id=\"加载\"\u003e\u003ca href=\"#加载\" class=\"headerlink\" title=\"加载\"\u003e\u003c/a\u003e加载\u003c/h2\u003e\u003ch3 id=\"从-HTML-字符串加载一个文档\"\u003e\u003ca href=\"#从-HTML-字符串加载一个文档\" class=\"headerlink\" title=\"从 HTML 字符串加载一个文档\"\u003e\u003c/a\u003e从 HTML 字符串加载一个文档\u003c/h3\u003e\u003cp\u003e使用静态 \u003ccode\u003eJsoup.parse(String html)\u003c/code\u003e 方法或 \u003ccode\u003eJsoup.parse(String html, String baseUri)\u003c/code\u003e 示例代码：\u003c/p\u003e\n\u003cfigure class=\"highlight java\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"type\"\u003eString\u003c/span\u003e \u003cspan class=\"variable\"\u003ehtml\u003c/span\u003e \u003cspan class=\"operator\"\u003e=\u003c/span\u003e \u003cspan class=\"string\"\u003e\u0026#34;\u0026lt;html\u0026gt;\u0026lt;head\u0026gt;\u0026lt;title\u0026gt;First parse\u0026lt;/title\u0026gt;\u0026lt;/head\u0026gt;\u0026#34;\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  + \u003cspan class=\"string\"\u003e\u0026#34;\u0026lt;body\u0026gt;\u0026lt;p\u0026gt;Parsed HTML into a doc.\u0026lt;/p\u0026gt;\u0026lt;/body\u0026gt;\u0026lt;/html\u0026gt;\u0026#34;\u003c/span\u003e;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"type\"\u003eDocument\u003c/span\u003e \u003cspan class=\"variable\"\u003edoc\u003c/span\u003e \u003cspan class=\"operator\"\u003e=\u003c/span\u003e Jsoup.parse(html);\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003e\u003cstrong\u003e说明\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003eparse(String html, String baseUri)\u003c/code\u003e 这方法能够将输入的 HTML 解析为一个新的文档 (Document），参数 baseUri 是用来将相对 URL 转成绝对 URL，并指定从哪个网站获取文档。如这个方法不适用，你可以使用 \u003ccode\u003eparse(String html)\u003c/code\u003e 方法来解析成 HTML 字符串如上面的示例。\u003c/p\u003e\n\u003cp\u003e只要解析的不是空字符串，就能返回一个结构合理的文档，其中包含(至少) 一个 head 和一个 body 元素。\u003c/p\u003e\n\u003cp\u003e一旦拥有了一个 Document，你就可以使用 Document 中适当的方法或它父类 \u003ccode\u003eElement\u003c/code\u003e和\u003ccode\u003eNode\u003c/code\u003e中的方法来取得相关数据。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003ch3 id=\"解析一个-body-片断\"\u003e\u003ca href=\"#解析一个-body-片断\" class=\"headerlink\" title=\"解析一个 body 片断\"\u003e\u003c/a\u003e解析一个 body 片断\u003c/h3\u003e\u003cp\u003e\u003cstrong\u003e问题\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003e假如你有一个 HTML 片断 (比如. 一个 \u003ccode\u003ediv\u003c/code\u003e 包含一对 \u003ccode\u003ep\u003c/code\u003e 标签; 一个不完整的 HTML 文档) 想对它进行解析。这个 HTML 片断可以是用户提交的一条评论或在一个 CMS 页面中编辑 body 部分。\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003e办法\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003e使用\u003ccode\u003eJsoup.parseBodyFragment(String html)\u003c/code\u003e方法.\u003c/p\u003e\n\u003cfigure class=\"highlight abnf\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003eString html \u003cspan class=\"operator\"\u003e=\u003c/span\u003e \u003cspan class=\"string\"\u003e\u0026#34;\u0026lt;div\u0026gt;\u0026lt;p\u0026gt;Lorem ipsum.\u0026lt;/p\u0026gt;\u0026#34;\u003c/span\u003e\u003cspan class=\"comment\"\u003e;\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eDocument doc \u003cspan class=\"operator\"\u003e=\u003c/span\u003e Jsoup.parseBodyFragment(html)\u003cspan class=\"comment\"\u003e;\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eElement body \u003cspan class=\"operator\"\u003e=\u003c/span\u003e doc.body()\u003cspan class=\"comment\"\u003e;\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003e\u003cstrong\u003e说明\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003eparseBodyFragment\u003c/code\u003e 方法创建一个空壳的文档，并插入解析过的 HTML 到\u003ccode\u003ebody\u003c/code\u003e元素中。假如你使用正常的 \u003ccode\u003eJsoup.parse(String html)\u003c/code\u003e 方法，通常你也可以得到相同的结果，但是明确将用户输入作为 body 片段处理，以确保用户所提供的任何糟糕的 HTML 都将被解析成 body 元素。\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003eDocument.body()\u003c/code\u003e 方法能够取得文档 body 元素的所有子元素，与 \u003ccode\u003edoc.getElementsByTag(\u0026#34;body\u0026#34;)\u003c/code\u003e相同。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003ch4 id=\"保证安全-Stay-safe\"\u003e\u003ca href=\"#保证安全-Stay-safe\" class=\"headerlink\" title=\"保证安全 Stay safe\"\u003e\u003c/a\u003e保证安全 Stay safe\u003c/h4\u003e\u003cp\u003e假如你可以让用户输入 HTML 内容，那么要小心避免跨站脚本攻击。利用基于 \u003ccode\u003eWhitelist\u003c/code\u003e 的清除器和 \u003ccode\u003eclean(String bodyHtml, Whitelist whitelist)\u003c/code\u003e方法来清除用户输入的恶意内容。\u003c/p\u003e\n\u003ch3 id=\"从-URL-加载一个文档\"\u003e\u003ca href=\"#从-URL-加载一个文档\" class=\"headerlink\" title=\"从 URL 加载一个文档\"\u003e\u003c/a\u003e从 URL 加载一个文档\u003c/h3\u003e\u003cp\u003e使用 \u003ccode\u003eJsoup.connect(String url)\u003c/code\u003e方法\u003c/p\u003e\n\u003cfigure class=\"highlight java\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"type\"\u003eDocument\u003c/span\u003e \u003cspan class=\"variable\"\u003edoc\u003c/span\u003e \u003cspan class=\"operator\"\u003e=\u003c/span\u003e Jsoup.connect(\u003cspan class=\"string\"\u003e\u0026#34;http://example.com/\u0026#34;\u003c/span\u003e).get();\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003e\u003cstrong\u003e说明\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003econnect(String url)\u003c/code\u003e 方法创建一个新的 \u003ccode\u003eConnection\u003c/code\u003e, 和 \u003ccode\u003eget()\u003c/code\u003e 取得和解析一个 HTML 文件。如果从该 URL 获取 HTML 时发生错误，便会抛出 IOException，应适当处理。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003e\u003ccode\u003eConnection\u003c/code\u003e 接口还提供一个方法链来解决特殊请求，具体如下：\u003c/p\u003e\n\u003cfigure class=\"highlight java\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"type\"\u003eDocument\u003c/span\u003e \u003cspan class=\"variable\"\u003edoc\u003c/span\u003e \u003cspan class=\"operator\"\u003e=\u003c/span\u003e Jsoup.connect(\u003cspan class=\"string\"\u003e\u0026#34;http://example.com\u0026#34;\u003c/span\u003e)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  .data(\u003cspan class=\"string\"\u003e\u0026#34;query\u0026#34;\u003c/span\u003e, \u003cspan class=\"string\"\u003e\u0026#34;Java\u0026#34;\u003c/span\u003e)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  .userAgent(\u003cspan class=\"string\"\u003e\u0026#34;Mozilla\u0026#34;\u003c/span\u003e)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  .cookie(\u003cspan class=\"string\"\u003e\u0026#34;auth\u0026#34;\u003c/span\u003e, \u003cspan class=\"string\"\u003e\u0026#34;token\u0026#34;\u003c/span\u003e)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  .timeout(\u003cspan class=\"number\"\u003e3000\u003c/span\u003e)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  .post();\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003ch3 id=\"从一个文件加载一个文档\"\u003e\u003ca href=\"#从一个文件加载一个文档\" class=\"headerlink\" title=\"从一个文件加载一个文档\"\u003e\u003c/a\u003e从一个文件加载一个文档\u003c/h3\u003e\u003cp\u003e可以使用静态 \u003ccode\u003eJsoup.parse(File in, String charsetName, String baseUri)\u003c/code\u003e 方法\u003c/p\u003e\n\u003cfigure class=\"highlight java\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"type\"\u003eFile\u003c/span\u003e \u003cspan class=\"variable\"\u003einput\u003c/span\u003e \u003cspan class=\"operator\"\u003e=\u003c/span\u003e \u003cspan class=\"keyword\"\u003enew\u003c/span\u003e \u003cspan class=\"title class_\"\u003eFile\u003c/span\u003e(\u003cspan class=\"string\"\u003e\u0026#34;/tmp/input.html\u0026#34;\u003c/span\u003e);\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"type\"\u003eDocument\u003c/span\u003e \u003cspan class=\"variable\"\u003edoc\u003c/span\u003e \u003cspan class=\"operator\"\u003e=\u003c/span\u003e Jsoup.parse(input, \u003cspan class=\"string\"\u003e\u0026#34;UTF-8\u0026#34;\u003c/span\u003e, \u003cspan class=\"string\"\u003e\u0026#34;http://example.com/\u0026#34;\u003c/span\u003e);\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003e\u003cstrong\u003e说明\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003eparse(File in, String charsetName, String baseUri)\u003c/code\u003e 这个方法用来加载和解析一个 HTML 文件。如在加载文件的时候发生错误，将抛出 IOException，应作适当处理。\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003ebaseUri\u003c/code\u003e 参数用于解决文件中 URLs 是相对路径的问题。如果不需要可以传入一个空的字符串。\u003c/p\u003e\n\u003cp\u003e另外还有一个方法\u003ccode\u003eparse(File in, String charsetName)\u003c/code\u003e ，它使用文件的路径做为 \u003ccode\u003ebaseUri\u003c/code\u003e。 这个方法适用于如果被解析文件位于网站的本地文件系统，且相关链接也指向该文件系统。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003ch2 id=\"解析\"\u003e\u003ca href=\"#解析\" class=\"headerlink\" title=\"解析\"\u003e\u003c/a\u003e解析\u003c/h2\u003e\u003ch3 id=\"使用-DOM-方法来遍历一个文档\"\u003e\u003ca href=\"#使用-DOM-方法来遍历一个文档\" class=\"headerlink\" title=\"使用 DOM 方法来遍历一个文档\"\u003e\u003c/a\u003e使用 DOM 方法来遍历一个文档\u003c/h3\u003e\u003cp\u003e\u003cstrong\u003e问题\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003e你有一个 HTML 文档要从中提取数据，并了解这个 HTML 文档的结构。\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003e方法\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003e将 HTML 解析成一个\u003ccode\u003eDocument\u003c/code\u003e之后，就可以使用类似于 DOM 的方法进行操作。示例代码：\u003c/p\u003e\n\u003cfigure class=\"highlight java\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e8\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e9\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"type\"\u003eFile\u003c/span\u003e \u003cspan class=\"variable\"\u003einput\u003c/span\u003e \u003cspan class=\"operator\"\u003e=\u003c/span\u003e \u003cspan class=\"keyword\"\u003enew\u003c/span\u003e \u003cspan class=\"title class_\"\u003eFile\u003c/span\u003e(\u003cspan class=\"string\"\u003e\u0026#34;/tmp/input.html\u0026#34;\u003c/span\u003e);\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"type\"\u003eDocument\u003c/span\u003e \u003cspan class=\"variable\"\u003edoc\u003c/span\u003e \u003cspan class=\"operator\"\u003e=\u003c/span\u003e Jsoup.parse(input, \u003cspan class=\"string\"\u003e\u0026#34;UTF-8\u0026#34;\u003c/span\u003e, \u003cspan class=\"string\"\u003e\u0026#34;http://example.com/\u0026#34;\u003c/span\u003e);\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"type\"\u003eElement\u003c/span\u003e \u003cspan class=\"variable\"\u003econtent\u003c/span\u003e \u003cspan class=\"operator\"\u003e=\u003c/span\u003e doc.getElementById(\u003cspan class=\"string\"\u003e\u0026#34;content\u0026#34;\u003c/span\u003e);\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"type\"\u003eElements\u003c/span\u003e \u003cspan class=\"variable\"\u003elinks\u003c/span\u003e \u003cspan class=\"operator\"\u003e=\u003c/span\u003e content.getElementsByTag(\u003cspan class=\"string\"\u003e\u0026#34;a\u0026#34;\u003c/span\u003e);\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"keyword\"\u003efor\u003c/span\u003e (Element link : links) {\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  \u003cspan class=\"type\"\u003eString\u003c/span\u003e \u003cspan class=\"variable\"\u003elinkHref\u003c/span\u003e \u003cspan class=\"operator\"\u003e=\u003c/span\u003e link.attr(\u003cspan class=\"string\"\u003e\u0026#34;href\u0026#34;\u003c/span\u003e);\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  \u003cspan class=\"type\"\u003eString\u003c/span\u003e \u003cspan class=\"variable\"\u003elinkText\u003c/span\u003e \u003cspan class=\"operator\"\u003e=\u003c/span\u003e link.text();\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e}\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e\u003cstrong\u003e说明\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003eElements\u003c/code\u003e 这个对象提供了一系列类似于 DOM 的方法来查找元素，抽取并处理其中的数据。\u003c/p\u003e\n\u003cp\u003e具体如下：\u003c/p\u003e\n\u003ch4 id=\"查找元素\"\u003e\u003ca href=\"#查找元素\" class=\"headerlink\" title=\"查找元素\"\u003e\u003c/a\u003e查找元素\u003c/h4\u003e\u003cul\u003e\n\u003cli\u003e\u003ccode\u003egetElementById(String id)\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003egetElementsByTag(String tag)\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003egetElementsByClass(String className)\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003egetElementsByAttribute(String key)\u003c/code\u003e (and related methods)\u003c/li\u003e\n\u003cli\u003eElement siblings: \u003ccode\u003esiblingElements()\u003c/code\u003e, \u003ccode\u003efirstElementSibling()\u003c/code\u003e, \u003ccode\u003elastElementSibling()\u003c/code\u003e;\u003ccode\u003enextElementSibling()\u003c/code\u003e, \u003ccode\u003epreviousElementSibling()\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003eGraph: \u003ccode\u003eparent()\u003c/code\u003e, \u003ccode\u003echildren()\u003c/code\u003e, \u003ccode\u003echild(int index)\u003c/code\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch4 id=\"元素数据\"\u003e\u003ca href=\"#元素数据\" class=\"headerlink\" title=\"元素数据\"\u003e\u003c/a\u003e元素数据\u003c/h4\u003e\u003cul\u003e\n\u003cli\u003e\u003ccode\u003eattr(String key)\u003c/code\u003e获取属性\u003ccode\u003eattr(String key, String value)\u003c/code\u003e设置属性\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eattributes()\u003c/code\u003e获取所有属性\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eid()\u003c/code\u003e, \u003ccode\u003eclassName()\u003c/code\u003e and \u003ccode\u003eclassNames()\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003etext()\u003c/code\u003e获取文本内容\u003ccode\u003etext(String value)\u003c/code\u003e 设置文本内容\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003ehtml()\u003c/code\u003e获取元素内 HTML\u003ccode\u003ehtml(String value)\u003c/code\u003e设置元素内的 HTML 内容\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eouterHtml()\u003c/code\u003e获取元素外 HTML 内容\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003edata()\u003c/code\u003e获取数据内容（例如：script 和 style 标签)\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003etag()\u003c/code\u003e and \u003ccode\u003etagName()\u003c/code\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch4 id=\"操作-HTML-和文本\"\u003e\u003ca href=\"#操作-HTML-和文本\" class=\"headerlink\" title=\"操作 HTML 和文本\"\u003e\u003c/a\u003e操作 HTML 和文本\u003c/h4\u003e\u003cul\u003e\n\u003cli\u003e\u003ccode\u003eappend(String html)\u003c/code\u003e, \u003ccode\u003eprepend(String html)\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eappendText(String text)\u003c/code\u003e, \u003ccode\u003eprependText(String text)\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eappendElement(String tagName)\u003c/code\u003e, \u003ccode\u003eprependElement(String tagName)\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003ehtml(String value)\u003c/code\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"使用选择器语法来查找元素\"\u003e\u003ca href=\"#使用选择器语法来查找元素\" class=\"headerlink\" title=\"使用选择器语法来查找元素\"\u003e\u003c/a\u003e使用选择器语法来查找元素\u003c/h3\u003e\u003cp\u003e\u003cstrong\u003e问题\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003e你想使用类似于 CSS 或 jQuery 的语法来查找和操作元素。\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003e方法\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003e可以使用\u003ccode\u003eElement.select(String selector)\u003c/code\u003e 和 \u003ccode\u003eElements.select(String selector)\u003c/code\u003e 方法实现：\u003c/p\u003e\n\u003cfigure class=\"highlight java\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e8\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e9\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e10\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e11\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"type\"\u003eFile\u003c/span\u003e \u003cspan class=\"variable\"\u003einput\u003c/span\u003e \u003cspan class=\"operator\"\u003e=\u003c/span\u003e \u003cspan class=\"keyword\"\u003enew\u003c/span\u003e \u003cspan class=\"title class_\"\u003eFile\u003c/span\u003e(\u003cspan class=\"string\"\u003e\u0026#34;/tmp/input.html\u0026#34;\u003c/span\u003e);\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"type\"\u003eDocument\u003c/span\u003e \u003cspan class=\"variable\"\u003edoc\u003c/span\u003e \u003cspan class=\"operator\"\u003e=\u003c/span\u003e Jsoup.parse(input, \u003cspan class=\"string\"\u003e\u0026#34;UTF-8\u0026#34;\u003c/span\u003e, \u003cspan class=\"string\"\u003e\u0026#34;http://example.com/\u0026#34;\u003c/span\u003e);\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"type\"\u003eElements\u003c/span\u003e \u003cspan class=\"variable\"\u003elinks\u003c/span\u003e \u003cspan class=\"operator\"\u003e=\u003c/span\u003e doc.select(\u003cspan class=\"string\"\u003e\u0026#34;a[href]\u0026#34;\u003c/span\u003e); \u003cspan class=\"comment\"\u003e//带有href属性的a元素\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"type\"\u003eElements\u003c/span\u003e \u003cspan class=\"variable\"\u003epngs\u003c/span\u003e \u003cspan class=\"operator\"\u003e=\u003c/span\u003e doc.select(\u003cspan class=\"string\"\u003e\u0026#34;img[src$=.png]\u0026#34;\u003c/span\u003e);\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  \u003cspan class=\"comment\"\u003e//扩展名为.png的图片\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"type\"\u003eElement\u003c/span\u003e \u003cspan class=\"variable\"\u003emasthead\u003c/span\u003e \u003cspan class=\"operator\"\u003e=\u003c/span\u003e doc.select(\u003cspan class=\"string\"\u003e\u0026#34;div.masthead\u0026#34;\u003c/span\u003e).first();\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  \u003cspan class=\"comment\"\u003e//class等于masthead的div标签\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"type\"\u003eElements\u003c/span\u003e \u003cspan class=\"variable\"\u003eresultLinks\u003c/span\u003e \u003cspan class=\"operator\"\u003e=\u003c/span\u003e doc.select(\u003cspan class=\"string\"\u003e\u0026#34;h3.r \u0026gt; a\u0026#34;\u003c/span\u003e); \u003cspan class=\"comment\"\u003e//在h3元素之后的a元素\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003e\u003cstrong\u003e说明\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003ejsoup elements 对象支持类似于\u003ca target=\"_blank\" rel=\"noopener\" href=\"http://www.w3.org/TR/2009/PR-css3-selectors-20091215/\"\u003eCSS\u003c/a\u003e (或\u003ca target=\"_blank\" rel=\"noopener\" href=\"http://jquery.com/\"\u003ejquery\u003c/a\u003e)的选择器语法，来实现非常强大和灵活的查找功能。.\u003c/p\u003e\n\u003cp\u003e这个\u003ccode\u003eselect\u003c/code\u003e 方法在\u003ccode\u003eDocument\u003c/code\u003e, \u003ccode\u003eElement\u003c/code\u003e,或\u003ccode\u003eElements\u003c/code\u003e对象中都可以使用。且是上下文相关的，因此可实现指定元素的过滤，或者链式选择访问。\u003c/p\u003e\n\u003cp\u003eSelect 方法将返回一个\u003ccode\u003eElements\u003c/code\u003e集合，并提供一组方法来抽取和处理结果。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003ch4 id=\"Selector-选择器概述\"\u003e\u003ca href=\"#Selector-选择器概述\" class=\"headerlink\" title=\"Selector 选择器概述\"\u003e\u003c/a\u003eSelector 选择器概述\u003c/h4\u003e\u003cul\u003e\n\u003cli\u003e\u003ccode\u003etagname\u003c/code\u003e: 通过标签查找元素，比如：\u003ccode\u003ea\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003ens|tag\u003c/code\u003e: 通过标签在命名空间查找元素，比如：可以用 \u003ccode\u003efb|name\u003c/code\u003e 语法来查找 `` 元素\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003e#id\u003c/code\u003e: 通过 ID 查找元素，比如：\u003ccode\u003e#logo\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003e.class\u003c/code\u003e: 通过 class 名称查找元素，比如：\u003ccode\u003e.masthead\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003e[attribute]\u003c/code\u003e: 利用属性查找元素，比如：\u003ccode\u003e[href]\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003e[^attr]\u003c/code\u003e: 利用属性名前缀来查找元素，比如：可以用\u003ccode\u003e[^data-]\u003c/code\u003e 来查找带有 HTML5 Dataset 属性的元素\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003e[attr=value]\u003c/code\u003e: 利用属性值来查找元素，比如：\u003ccode\u003e[width=500]\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003e[attr^=value]\u003c/code\u003e, \u003ccode\u003e[attr$=value]\u003c/code\u003e, \u003ccode\u003e[attr*=value]\u003c/code\u003e: 利用匹配属性值开头、结尾或包含属性值来查找元素，比如：\u003ccode\u003e[href*=/path/]\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003e[attr\\~=regex]\u003c/code\u003e: 利用属性值匹配正则表达式来查找元素，比如： \u003ccode\u003eimg[src\\~=(?i)\\.(png|jpe?g)]\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003e*\u003c/code\u003e: 这个符号将匹配所有元素\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch4 id=\"Selector-选择器组合使用\"\u003e\u003ca href=\"#Selector-选择器组合使用\" class=\"headerlink\" title=\"Selector 选择器组合使用\"\u003e\u003c/a\u003eSelector 选择器组合使用\u003c/h4\u003e\u003cul\u003e\n\u003cli\u003e\u003ccode\u003eel##id\u003c/code\u003e: 元素+ID，比如： \u003ccode\u003ediv##logo\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eel.class\u003c/code\u003e: 元素+class，比如： \u003ccode\u003ediv.masthead\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eel[attr]\u003c/code\u003e: 元素+class，比如： \u003ccode\u003ea[href]\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003e任意组合，比如：\u003ccode\u003ea[href].highlight\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eancestor child\u003c/code\u003e: 查找某个元素下子元素，比如：可以用\u003ccode\u003e.body p\u003c/code\u003e 查找在”body”元素下的所有\u003ccode\u003ep\u003c/code\u003e元素\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eparent \u0026gt; child\u003c/code\u003e: 查找某个父元素下的直接子元素，比如：可以用\u003ccode\u003ediv.content \u0026gt; p\u003c/code\u003e 查找 \u003ccode\u003ep\u003c/code\u003e 元素，也可以用\u003ccode\u003ebody \u0026gt; *\u003c/code\u003e 查找 body 标签下所有直接子元素\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003esiblingA + siblingB\u003c/code\u003e: 查找在 A 元素之前第一个同级元素 B，比如：\u003ccode\u003ediv.head + div\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003esiblingA \\~ siblingX\u003c/code\u003e: 查找 A 元素之前的同级 X 元素，比如：\u003ccode\u003eh1 \\~ p\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eel, el, el\u003c/code\u003e:多个选择器组合，查找匹配任一选择器的唯一元素，例如：\u003ccode\u003ediv.masthead, div.logo\u003c/code\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch4 id=\"伪选择器-selectors\"\u003e\u003ca href=\"#伪选择器-selectors\" class=\"headerlink\" title=\"伪选择器 selectors\"\u003e\u003c/a\u003e伪选择器 selectors\u003c/h4\u003e\u003cul\u003e\n\u003cli\u003e\u003ccode\u003e:lt(n)\u003c/code\u003e: 查找哪些元素的同级索引值（它的位置在 DOM 树中是相对于它的父节点）小于 n，比如：\u003ccode\u003etd:lt(3)\u003c/code\u003e 表示小于三列的元素\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003e:gt(n)\u003c/code\u003e:查找哪些元素的同级索引值大于\u003ccode\u003en``，比如\u003c/code\u003e： \u003ccode\u003ediv p:gt(2)\u003c/code\u003e表示哪些 div 中有包含 2 个以上的 p 元素\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003e:eq(n)\u003c/code\u003e: 查找哪些元素的同级索引值与\u003ccode\u003en\u003c/code\u003e相等，比如：\u003ccode\u003eform input:eq(1)\u003c/code\u003e表示包含一个 input 标签的 Form 元素\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003e:has(seletor)\u003c/code\u003e: 查找匹配选择器包含元素的元素，比如：\u003ccode\u003ediv:has(p)\u003c/code\u003e表示哪些 div 包含了 p 元素\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003e:not(selector)\u003c/code\u003e: 查找与选择器不匹配的元素，比如： \u003ccode\u003ediv:not(.logo)\u003c/code\u003e 表示不包含 class=logo 元素的所有 div 列表\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003e:contains(text)\u003c/code\u003e: 查找包含给定文本的元素，搜索不区分大不写，比如： \u003ccode\u003ep:contains(jsoup)\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003e:containsOwn(text)\u003c/code\u003e: 查找直接包含给定文本的元素\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003e:matches(regex)\u003c/code\u003e: 查找哪些元素的文本匹配指定的正则表达式，比如：\u003ccode\u003ediv:matches((?i)login)\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003e:matchesOwn(regex)\u003c/code\u003e: 查找自身包含文本匹配指定正则表达式的元素\u003c/li\u003e\n\u003cli\u003e注意：上述伪选择器索引是从 0 开始的，也就是说第一个元素索引值为 0，第二个元素 index 为 1 等\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e可以查看\u003ccode\u003eSelector\u003c/code\u003e API 参考来了解更详细的内容\u003c/p\u003e\n\u003ch3 id=\"从元素抽取属性，文本和-HTML\"\u003e\u003ca href=\"#从元素抽取属性，文本和-HTML\" class=\"headerlink\" title=\"从元素抽取属性，文本和 HTML\"\u003e\u003c/a\u003e从元素抽取属性，文本和 HTML\u003c/h3\u003e\u003cp\u003e\u003cstrong\u003e问题\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003e在解析获得一个 Document 实例对象，并查找到一些元素之后，你希望取得在这些元素中的数据。\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003e方法\u003c/strong\u003e\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e要取得一个属性的值，可以使用\u003ccode\u003eNode.attr(String key)\u003c/code\u003e 方法\u003c/li\u003e\n\u003cli\u003e对于一个元素中的文本，可以使用\u003ccode\u003eElement.text()\u003c/code\u003e方法\u003c/li\u003e\n\u003cli\u003e对于要取得元素或属性中的 HTML 内容，可以使用\u003ccode\u003eElement.html()\u003c/code\u003e, 或 \u003ccode\u003eNode.outerHtml()\u003c/code\u003e方法\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e示例：\u003c/p\u003e\n\u003cfigure class=\"highlight java\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e8\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e9\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e10\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e11\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"type\"\u003eString\u003c/span\u003e \u003cspan class=\"variable\"\u003ehtml\u003c/span\u003e \u003cspan class=\"operator\"\u003e=\u003c/span\u003e \u003cspan class=\"string\"\u003e\u0026#34;\u0026lt;p\u0026gt;An \u0026lt;a href=\u0026#39;http://example.com/\u0026#39;\u0026gt;\u0026lt;b\u0026gt;example\u0026lt;/b\u0026gt;\u0026lt;/a\u0026gt; link.\u0026lt;/p\u0026gt;\u0026#34;\u003c/span\u003e;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"type\"\u003eDocument\u003c/span\u003e \u003cspan class=\"variable\"\u003edoc\u003c/span\u003e \u003cspan class=\"operator\"\u003e=\u003c/span\u003e Jsoup.parse(html);\u003cspan class=\"comment\"\u003e//解析HTML字符串返回一个Document实现\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"type\"\u003eElement\u003c/span\u003e \u003cspan class=\"variable\"\u003elink\u003c/span\u003e \u003cspan class=\"operator\"\u003e=\u003c/span\u003e doc.select(\u003cspan class=\"string\"\u003e\u0026#34;a\u0026#34;\u003c/span\u003e).first();\u003cspan class=\"comment\"\u003e//查找第一个a元素\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"type\"\u003eString\u003c/span\u003e \u003cspan class=\"variable\"\u003etext\u003c/span\u003e \u003cspan class=\"operator\"\u003e=\u003c/span\u003e doc.body().text(); \u003cspan class=\"comment\"\u003e// \u0026#34;An example link\u0026#34;//取得字符串中的文本\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"type\"\u003eString\u003c/span\u003e \u003cspan class=\"variable\"\u003elinkHref\u003c/span\u003e \u003cspan class=\"operator\"\u003e=\u003c/span\u003e link.attr(\u003cspan class=\"string\"\u003e\u0026#34;href\u0026#34;\u003c/span\u003e); \u003cspan class=\"comment\"\u003e// \u0026#34;http://example.com/\u0026#34;//取得链接地址\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"type\"\u003eString\u003c/span\u003e \u003cspan class=\"variable\"\u003elinkText\u003c/span\u003e \u003cspan class=\"operator\"\u003e=\u003c/span\u003e link.text(); \u003cspan class=\"comment\"\u003e// \u0026#34;example\u0026#34;\u0026#34;//取得链接地址中的文本\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"type\"\u003eString\u003c/span\u003e \u003cspan class=\"variable\"\u003elinkOuterH\u003c/span\u003e \u003cspan class=\"operator\"\u003e=\u003c/span\u003e link.outerHtml();\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"comment\"\u003e// \u0026#34;\u0026lt;a href=\u0026#34;http://example.com\u0026#34;\u0026gt;\u0026lt;b\u0026gt;example\u0026lt;/b\u0026gt;\u0026lt;/a\u0026gt;\u0026#34;\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"type\"\u003eString\u003c/span\u003e \u003cspan class=\"variable\"\u003elinkInnerH\u003c/span\u003e \u003cspan class=\"operator\"\u003e=\u003c/span\u003e link.html(); \u003cspan class=\"comment\"\u003e// \u0026#34;\u0026lt;b\u0026gt;example\u0026lt;/b\u0026gt;\u0026#34;//取得链接内的html内容\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003e\u003cstrong\u003e说明\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003e上述方法是元素数据访问的核心办法。此外还其它一些方法可以使用：\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003eElement.id()\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eElement.tagName()\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eElement.className()\u003c/code\u003e and \u003ccode\u003eElement.hasClass(String className)\u003c/code\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e这些访问器方法都有相应的 setter 方法来更改数据\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003e\u003cstrong\u003e参见\u003c/strong\u003e\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003eElement\u003c/code\u003e和\u003ccode\u003eElements\u003c/code\u003e集合类的参考文档\u003c/li\u003e\n\u003cli\u003e\u003ca target=\"_blank\" rel=\"noopener\" href=\"http://www.open-open.com/jsoup/working-with-urls.htm\"\u003eURLs 处理\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca target=\"_blank\" rel=\"noopener\" href=\"http://www.open-open.com/jsoup/selector-syntax.htm\"\u003e使用 CSS 选择器语法来查找元素\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"处理-URLs\"\u003e\u003ca href=\"#处理-URLs\" class=\"headerlink\" title=\"处理 URLs\"\u003e\u003c/a\u003e处理 URLs\u003c/h3\u003e\u003cp\u003e\u003cstrong\u003e问题\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003e你有一个包含相对 URLs 路径的 HTML 文档，需要将这些相对路径转换成绝对路径的 URLs。\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003e方法\u003c/strong\u003e\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003e在你解析文档时确保有指定\u003ccode\u003ebase URI\u003c/code\u003e，然后\u003c/li\u003e\n\u003cli\u003e使用 \u003ccode\u003eabs:\u003c/code\u003e 属性前缀来取得包含\u003ccode\u003ebase URI\u003c/code\u003e的绝对路径。代码如下：\u003c/li\u003e\n\u003c/ol\u003e\n\u003cfigure class=\"highlight java\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"type\"\u003eDocument\u003c/span\u003e \u003cspan class=\"variable\"\u003edoc\u003c/span\u003e \u003cspan class=\"operator\"\u003e=\u003c/span\u003e Jsoup.connect(\u003cspan class=\"string\"\u003e\u0026#34;http://www.open-open.com\u0026#34;\u003c/span\u003e).get();\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"type\"\u003eElement\u003c/span\u003e \u003cspan class=\"variable\"\u003elink\u003c/span\u003e \u003cspan class=\"operator\"\u003e=\u003c/span\u003e doc.select(\u003cspan class=\"string\"\u003e\u0026#34;a\u0026#34;\u003c/span\u003e).first();\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"type\"\u003eString\u003c/span\u003e \u003cspan class=\"variable\"\u003erelHref\u003c/span\u003e \u003cspan class=\"operator\"\u003e=\u003c/span\u003e link.attr(\u003cspan class=\"string\"\u003e\u0026#34;href\u0026#34;\u003c/span\u003e); \u003cspan class=\"comment\"\u003e// == \u0026#34;/\u0026#34;\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"type\"\u003eString\u003c/span\u003e \u003cspan class=\"variable\"\u003eabsHref\u003c/span\u003e \u003cspan class=\"operator\"\u003e=\u003c/span\u003e link.attr(\u003cspan class=\"string\"\u003e\u0026#34;abs:href\u0026#34;\u003c/span\u003e); \u003cspan class=\"comment\"\u003e// \u0026#34;http://www.open-open.com/\u0026#34;\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003e\u003cstrong\u003e说明\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003e在 HTML 元素中，URLs 经常写成相对于文档位置的相对路径： \u003ccode\u003e\u0026lt;a href=\u0026#34;/download\u0026#34;\u0026gt;...\u0026lt;/a\u0026gt;\u003c/code\u003e. 当你使用 \u003ccode\u003eNode.attr(String key)\u003c/code\u003e 方法来取得 a 元素的 href 属性时，它将直接返回在 HTML 源码中指定定的值。\u003c/p\u003e\n\u003cp\u003e假如你需要取得一个绝对路径，需要在属性名前加 \u003ccode\u003eabs:\u003c/code\u003e 前缀。这样就可以返回包含根路径的 URL 地址\u003ccode\u003eattr(\u0026#34;abs:href\u0026#34;)\u003c/code\u003e\u003c/p\u003e\n\u003cp\u003e因此，在解析 HTML 文档时，定义 base URI 非常重要。\u003c/p\u003e\n\u003cp\u003e如果你不想使用\u003ccode\u003eabs:\u003c/code\u003e 前缀，还有一个方法能够实现同样的功能 \u003ccode\u003eNode.absUrl(String key)\u003c/code\u003e。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003ch2 id=\"数据修改\"\u003e\u003ca href=\"#数据修改\" class=\"headerlink\" title=\"数据修改\"\u003e\u003c/a\u003e数据修改\u003c/h2\u003e\u003ch3 id=\"设置属性的值\"\u003e\u003ca href=\"#设置属性的值\" class=\"headerlink\" title=\"设置属性的值\"\u003e\u003c/a\u003e设置属性的值\u003c/h3\u003e\u003cp\u003e\u003cstrong\u003e问题\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003e在你解析一个 \u003ccode\u003eDocument\u003c/code\u003e 之后可能想修改其中的某些属性值，然后再保存到磁盘或都输出到前台页面。\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003e方法\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003e可以使用属性设置方法 \u003ccode\u003eElement.attr(String key, String value)\u003c/code\u003e, 和 \u003ccode\u003eElements.attr(String key, String value)\u003c/code\u003e.\u003c/p\u003e\n\u003cp\u003e假如你需要修改一个元素的 \u003ccode\u003eclass\u003c/code\u003e 属性，可以使用 \u003ccode\u003eElement.addClass(String className)\u003c/code\u003e 和\u003ccode\u003eElement.removeClass(String className)\u003c/code\u003e 方法。\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003eElements\u003c/code\u003e 提供了批量操作元素属性和 class 的方法，比如：要为 div 中的每一个 a 元素都添加一个\u003ccode\u003erel=\u0026#34;nofollow\u0026#34;\u003c/code\u003e 可以使用如下方法：\u003c/p\u003e\n\u003cfigure class=\"highlight q\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003edoc.\u003cspan class=\"keyword\"\u003eselect\u003c/span\u003e(\u003cspan class=\"string\"\u003e\u0026#34;div.comments a\u0026#34;\u003c/span\u003e).\u003cspan class=\"built_in\"\u003eattr\u003c/span\u003e(\u003cspan class=\"string\"\u003e\u0026#34;rel\u0026#34;\u003c/span\u003e, \u003cspan class=\"string\"\u003e\u0026#34;nofollow\u0026#34;\u003c/span\u003e);\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003e\u003cstrong\u003e说明\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003e与\u003ccode\u003eElement\u003c/code\u003e中的其它方法一样，\u003ccode\u003eattr\u003c/code\u003e 方法也是返回当 \u003ccode\u003eElement\u003c/code\u003e (或在使用选择器是返回 \u003ccode\u003eElements\u003c/code\u003e集合)。这样能够很方便使用方法连用的书写方式。比如：\u003c/p\u003e\n\u003cfigure class=\"highlight q\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003edoc.\u003cspan class=\"keyword\"\u003eselect\u003c/span\u003e(\u003cspan class=\"string\"\u003e\u0026#34;div.masthead\u0026#34;\u003c/span\u003e).\u003cspan class=\"built_in\"\u003eattr\u003c/span\u003e(\u003cspan class=\"string\"\u003e\u0026#34;title\u0026#34;\u003c/span\u003e, \u003cspan class=\"string\"\u003e\u0026#34;jsoup\u0026#34;\u003c/span\u003e).addClass(\u003cspan class=\"string\"\u003e\u0026#34;round-box\u0026#34;\u003c/span\u003e);\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\u003c/blockquote\u003e\n\u003ch3 id=\"设置一个元素的-HTML-内容\"\u003e\u003ca href=\"#设置一个元素的-HTML-内容\" class=\"headerlink\" title=\"设置一个元素的 HTML 内容\"\u003e\u003c/a\u003e设置一个元素的 HTML 内容\u003c/h3\u003e\u003cp\u003e\u003cstrong\u003e问题\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003e你需要一个元素中的 HTML 内容\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003e方法\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003e可以使用\u003ccode\u003eElement\u003c/code\u003e中的 HTML 设置方法具体如下：\u003c/p\u003e\n\u003cfigure class=\"highlight java\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e8\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e9\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"type\"\u003eElement\u003c/span\u003e \u003cspan class=\"variable\"\u003ediv\u003c/span\u003e \u003cspan class=\"operator\"\u003e=\u003c/span\u003e doc.select(\u003cspan class=\"string\"\u003e\u0026#34;div\u0026#34;\u003c/span\u003e).first(); \u003cspan class=\"comment\"\u003e// \u0026lt;div\u0026gt;\u0026lt;/div\u0026gt;\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003ediv.html(\u003cspan class=\"string\"\u003e\u0026#34;\u0026lt;p\u0026gt;lorem ipsum\u0026lt;/p\u0026gt;\u0026#34;\u003c/span\u003e); \u003cspan class=\"comment\"\u003e// \u0026lt;div\u0026gt;\u0026lt;p\u0026gt;lorem ipsum\u0026lt;/p\u0026gt;\u0026lt;/div\u0026gt;\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003ediv.prepend(\u003cspan class=\"string\"\u003e\u0026#34;\u0026lt;p\u0026gt;First\u0026lt;/p\u0026gt;\u0026#34;\u003c/span\u003e);\u003cspan class=\"comment\"\u003e//在div前添加html内容\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003ediv.append(\u003cspan class=\"string\"\u003e\u0026#34;\u0026lt;p\u0026gt;Last\u0026lt;/p\u0026gt;\u0026#34;\u003c/span\u003e);\u003cspan class=\"comment\"\u003e//在div之后添加html内容\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"comment\"\u003e// 添完后的结果: \u0026lt;div\u0026gt;\u0026lt;p\u0026gt;First\u0026lt;/p\u0026gt;\u0026lt;p\u0026gt;lorem ipsum\u0026lt;/p\u0026gt;\u0026lt;p\u0026gt;Last\u0026lt;/p\u0026gt;\u0026lt;/div\u0026gt;\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"type\"\u003eElement\u003c/span\u003e \u003cspan class=\"variable\"\u003espan\u003c/span\u003e \u003cspan class=\"operator\"\u003e=\u003c/span\u003e doc.select(\u003cspan class=\"string\"\u003e\u0026#34;span\u0026#34;\u003c/span\u003e).first(); \u003cspan class=\"comment\"\u003e// \u0026lt;span\u0026gt;One\u0026lt;/span\u0026gt;\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003espan.wrap(\u003cspan class=\"string\"\u003e\u0026#34;\u0026lt;li\u0026gt;\u0026lt;a href=\u0026#39;http://example.com/\u0026#39;\u0026gt;\u0026lt;/a\u0026gt;\u0026lt;/li\u0026gt;\u0026#34;\u003c/span\u003e);\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"comment\"\u003e// 添完后的结果: \u0026lt;li\u0026gt;\u0026lt;a href=\u0026#34;http://example.com\u0026#34;\u0026gt;\u0026lt;span\u0026gt;One\u0026lt;/span\u0026gt;\u0026lt;/a\u0026gt;\u0026lt;/li\u0026gt;\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003e\u003cstrong\u003e说明\u003c/strong\u003e\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003eElement.html(String html)\u003c/code\u003e 这个方法将先清除元素中的 HTML 内容，然后用传入的 HTML 代替。\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eElement.prepend(String first)\u003c/code\u003e 和 \u003ccode\u003eElement.append(String last)\u003c/code\u003e 方法用于在分别在元素内部 HTML 的前面和后面添加 HTML 内容\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eElement.wrap(String around)\u003c/code\u003e 对元素包裹一个外部 HTML 内容。\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e\u003cstrong\u003e参见\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003e可以查看 API 参考文档中 \u003ccode\u003eElement.prependElement(String tag)\u003c/code\u003e和\u003ccode\u003eElement.appendElement(String tag)\u003c/code\u003e 方法来创建新的元素并作为文档的子元素插入其中。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003ch3 id=\"设置元素的文本内容\"\u003e\u003ca href=\"#设置元素的文本内容\" class=\"headerlink\" title=\"设置元素的文本内容\"\u003e\u003c/a\u003e设置元素的文本内容\u003c/h3\u003e\u003cp\u003e\u003cstrong\u003e问题\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003e你需要修改一个 HTML 文档中的文本内容\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003e方法\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003e可以使用\u003ccode\u003eElement\u003c/code\u003e的设置方法：:\u003c/p\u003e\n\u003cfigure class=\"highlight xquery\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003eElement div =\u003cspan class=\"built_in\"\u003e doc\u003c/span\u003e.select(\u003cspan class=\"string\"\u003e\u0026#34;div\u0026#34;\u003c/span\u003e).first(); // \u003cspan class=\"language-xml\"\u003e\u003cspan class=\"tag\"\u003e\u0026lt;\u003cspan class=\"name\"\u003ediv\u003c/span\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"tag\"\u003e\u0026lt;/\u003cspan class=\"name\"\u003ediv\u003c/span\u003e\u0026gt;\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003ediv.\u003cspan class=\"type\"\u003etext\u003c/span\u003e(\u003cspan class=\"string\"\u003e\u0026#34;five \u0026gt; four\u0026#34;\u003c/span\u003e); // \u003cspan class=\"language-xml\"\u003e\u003cspan class=\"tag\"\u003e\u0026lt;\u003cspan class=\"name\"\u003ediv\u003c/span\u003e\u0026gt;\u003c/span\u003efive \u003cspan class=\"symbol\"\u003e\u0026amp;gt;\u003c/span\u003e four\u003cspan class=\"tag\"\u003e\u0026lt;/\u003cspan class=\"name\"\u003ediv\u003c/span\u003e\u0026gt;\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003ediv.prepend(\u003cspan class=\"string\"\u003e\u0026#34;First \u0026#34;\u003c/span\u003e);\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003ediv.append(\u003cspan class=\"string\"\u003e\u0026#34; Last\u0026#34;\u003c/span\u003e);\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e// now: \u003cspan class=\"language-xml\"\u003e\u003cspan class=\"tag\"\u003e\u0026lt;\u003cspan class=\"name\"\u003ediv\u003c/span\u003e\u0026gt;\u003c/span\u003eFirst five \u003cspan class=\"symbol\"\u003e\u0026amp;gt;\u003c/span\u003e four Last\u003cspan class=\"tag\"\u003e\u0026lt;/\u003cspan class=\"name\"\u003ediv\u003c/span\u003e\u0026gt;\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003e\u003cstrong\u003e说明\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003e文本设置方法与 \u003ca target=\"_blank\" rel=\"noopener\" href=\"http://jsoup.org/cookbook/modifying-data/set-html\"\u003eHTML setter\u003c/a\u003e 方法一样：\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003eElement.text(String text)\u003c/code\u003e 将清除一个元素中的内部 HTML 内容，然后提供的文本进行代替\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eElement.prepend(String first)\u003c/code\u003e 和 \u003ccode\u003eElement.append(String last)\u003c/code\u003e 将分别在元素的内部 html 前后添加文本节点。\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e对于传入的文本如果含有像 \u003ccode\u003e\u0026lt;\u003c/code\u003e, \u003ccode\u003e\u0026gt;\u003c/code\u003e 等这样的字符，将以文本处理，而非 HTML。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003ch2 id=\"HTML-清理\"\u003e\u003ca href=\"#HTML-清理\" class=\"headerlink\" title=\"HTML 清理\"\u003e\u003c/a\u003eHTML 清理\u003c/h2\u003e\u003ch3 id=\"消除不受信任的-HTML-来防止-XSS-攻击\"\u003e\u003ca href=\"#消除不受信任的-HTML-来防止-XSS-攻击\" class=\"headerlink\" title=\"消除不受信任的 HTML (来防止 XSS 攻击)\"\u003e\u003c/a\u003e消除不受信任的 HTML (来防止 XSS 攻击)\u003c/h3\u003e\u003cp\u003e\u003cstrong\u003e问题\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003e在做网站的时候，经常会提供用户评论的功能。有些不怀好意的用户，会搞一些脚本到评论内容中，而这些脚本可能会破坏整个页面的行为，更严重的是获取一些机要信息，此时需要清理该 HTML，以避免跨站脚本\u003ca target=\"_blank\" rel=\"noopener\" href=\"http://en.wikipedia.org/wiki/Cross-site_scripting\"\u003ecross-site scripting\u003c/a\u003e攻击（XSS）。\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003e方法\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003e使用 jsoup HTML \u003ccode\u003eCleaner\u003c/code\u003e 方法进行清除，但需要指定一个可配置的 \u003ccode\u003eWhitelist\u003c/code\u003e。\u003c/p\u003e\n\u003cfigure class=\"highlight java\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"type\"\u003eString\u003c/span\u003e \u003cspan class=\"variable\"\u003eunsafe\u003c/span\u003e \u003cspan class=\"operator\"\u003e=\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  \u003cspan class=\"string\"\u003e\u0026#34;\u0026lt;p\u0026gt;\u0026lt;a href=\u0026#39;http://example.com/\u0026#39; onclick=\u0026#39;stealCookies()\u0026#39;\u0026gt;Link\u0026lt;/a\u0026gt;\u0026lt;/p\u0026gt;\u0026#34;\u003c/span\u003e;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"type\"\u003eString\u003c/span\u003e \u003cspan class=\"variable\"\u003esafe\u003c/span\u003e \u003cspan class=\"operator\"\u003e=\u003c/span\u003e Jsoup.clean(unsafe, Whitelist.basic());\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"comment\"\u003e// now: \u0026lt;p\u0026gt;\u0026lt;a href=\u0026#34;http://example.com/\u0026#34; rel=\u0026#34;nofollow\u0026#34;\u0026gt;Link\u0026lt;/a\u0026gt;\u0026lt;/p\u0026gt;\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e\u003cstrong\u003e说明\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eXSS 又叫 CSS (Cross Site Script) ，跨站脚本攻击。它指的是恶意攻击者往 Web 页面里插入恶意 html 代码，当用户浏览该页之时，嵌入其中 Web 里面的 html 代码会被执行，从而达到恶意攻击用户的特殊目的。XSS 属于被动式的攻击，因为其被动且不好利用，所以许多人常忽略其危害性。所以我们经常只让用户输入纯文本的内容，但这样用户体验就比较差了。\u003c/p\u003e\n\u003cp\u003e一个更好的解决方法就是使用一个富文本编辑器 WYSIWYG 如 \u003ca target=\"_blank\" rel=\"noopener\" href=\"http://ckeditor.com/\"\u003eCKEditor\u003c/a\u003e 和 \u003ca target=\"_blank\" rel=\"noopener\" href=\"http://tinymce.moxiecode.com/\"\u003eTinyMCE\u003c/a\u003e。这些可以输出 HTML 并能够让用户可视化编辑。虽然他们可以在客户端进行校验，但是这样还不够安全，需要在服务器端进行校验并清除有害的 HTML 代码，这样才能确保输入到你网站的 HTML 是安全的。否则，攻击者能够绕过客户端的 Javascript 验证，并注入不安全的 HMTL 直接进入您的网站。\u003c/p\u003e\n\u003cp\u003ejsoup 的 whitelist 清理器能够在服务器端对用户输入的 HTML 进行过滤，只输出一些安全的标签和属性。\u003c/p\u003e\n\u003cp\u003ejsoup 提供了一系列的 \u003ccode\u003eWhitelist\u003c/code\u003e 基本配置，能够满足大多数要求；但如有必要，也可以进行修改，不过要小心。\u003c/p\u003e\n\u003cp\u003e这个 cleaner 非常好用不仅可以避免 XSS 攻击，还可以限制用户可以输入的标签范围。\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003e参见\u003c/strong\u003e\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e参阅\u003ca target=\"_blank\" rel=\"noopener\" href=\"http://ha.ckers.org/xss.html\"\u003eXSS cheat sheet\u003c/a\u003e ，有一个例子可以了解为什么不能使用正则表达式，而采用安全的 whitelist parser-based 清理器才是正确的选择。\u003c/li\u003e\n\u003cli\u003e参阅\u003ccode\u003eCleaner\u003c/code\u003e ，了解如何返回一个 \u003ccode\u003eDocument\u003c/code\u003e 对象，而不是字符串\u003c/li\u003e\n\u003cli\u003e参阅\u003ccode\u003eWhitelist\u003c/code\u003e，了解如何创建一个自定义的 whitelist\u003c/li\u003e\n\u003cli\u003e\u003ca target=\"_blank\" rel=\"noopener\" href=\"http://en.wikipedia.org/wiki/Nofollow\"\u003enofollow\u003c/a\u003e 链接属性了解\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"参考\"\u003e\u003ca href=\"#参考\" class=\"headerlink\" title=\"参考\"\u003e\u003c/a\u003e参考\u003c/h2\u003e\u003cul\u003e\n\u003cli\u003e\u003ca target=\"_blank\" rel=\"noopener\" href=\"https://github.com/jhy/jsoup\"\u003ejsoup github 托管代码\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca target=\"_blank\" rel=\"noopener\" href=\"https://jsoup.org/cookbook/\"\u003ejsoup Cookbook\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca target=\"_blank\" rel=\"noopener\" href=\"http://www.open-open.com/jsoup/\"\u003ejsoup Cookbook(中文版)\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca target=\"_blank\" rel=\"noopener\" href=\"https://github.com/code4craft/jsoup-learning\"\u003e不错的 jsoup 学习笔记\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n    \u003c/div\u003e",
  "Date": "2022-02-17T14:34:30Z",
  "Author": "钝悟 ◾ Dunwu"
}