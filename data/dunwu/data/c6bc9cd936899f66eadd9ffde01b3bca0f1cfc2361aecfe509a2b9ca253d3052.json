{
  "Source": "dunwu",
  "Title": "Mysql 事务",
  "Link": "https://dunwu.github.io/blog/pages/00b04d/",
  "Content": "\u003cdiv class=\"post-body\" itemprop=\"articleBody\"\u003e\u003ch1 id=\"Mysql-事务\"\u003e\u003ca href=\"#Mysql-事务\" class=\"headerlink\" title=\"Mysql 事务\"\u003e\u003c/a\u003eMysql 事务\u003c/h1\u003e\u003cblockquote\u003e\n\u003cp\u003e不是所有的 Mysql 存储引擎都实现了事务处理。支持事务的存储引擎有：\u003ccode\u003eInnoDB\u003c/code\u003e 和 \u003ccode\u003eNDB Cluster\u003c/code\u003e。不支持事务的存储引擎，代表有：\u003ccode\u003eMyISAM\u003c/code\u003e。\u003c/p\u003e\n\u003cp\u003e用户可以根据业务是否需要事务处理（事务处理可以保证数据安全，但会增加系统开销），选择合适的存储引擎。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003ch2 id=\"事务简介\"\u003e\u003ca href=\"#事务简介\" class=\"headerlink\" title=\"事务简介\"\u003e\u003c/a\u003e事务简介\u003c/h2\u003e\u003ch3 id=\"事务概念\"\u003e\u003ca href=\"#事务概念\" class=\"headerlink\" title=\"事务概念\"\u003e\u003c/a\u003e事务概念\u003c/h3\u003e\u003cp\u003e\u003cstrong\u003e“事务”指的是满足 ACID 特性的一组操作\u003c/strong\u003e。事务内的 SQL 语句，要么全执行成功，要么全执行失败。可以通过 \u003ccode\u003eCommit\u003c/code\u003e 提交一个事务，也可以使用 \u003ccode\u003eRollback\u003c/code\u003e 进行回滚。\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/dunwu/images/master/snap/202311030701337.png\"/\u003e\u003c/p\u003e\n\u003ch3 id=\"ACID\"\u003e\u003ca href=\"#ACID\" class=\"headerlink\" title=\"ACID\"\u003e\u003c/a\u003eACID\u003c/h3\u003e\u003cp\u003eACID 是数据库事务正确执行的四个基本要素。\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003cstrong\u003e原子性（Atomicity）\u003c/strong\u003e\u003cul\u003e\n\u003cli\u003e事务被视为不可分割的最小单元，事务中的所有操作要么全部提交成功，要么全部失败回滚。\u003c/li\u003e\n\u003cli\u003e回滚可以用日志来实现，日志记录着事务所执行的修改操作，在回滚时反向执行这些修改操作即可。\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003e一致性（Consistency）\u003c/strong\u003e\u003cul\u003e\n\u003cli\u003e数据库在事务执行前后都保持一致性状态。\u003c/li\u003e\n\u003cli\u003e在一致性状态下，所有事务对一个数据的读取结果都是相同的。\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003e隔离性（Isolation）\u003c/strong\u003e\u003cul\u003e\n\u003cli\u003e一个事务所做的修改在最终提交以前，对其它事务是不可见的。\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003e持久性（Durability）\u003c/strong\u003e\u003cul\u003e\n\u003cli\u003e一旦事务提交，则其所做的修改将会永远保存到数据库中。即使系统发生崩溃，事务执行的结果也不能丢失。\u003c/li\u003e\n\u003cli\u003e可以通过数据库备份和恢复来实现，在系统发生奔溃时，使用备份的数据库进行数据恢复。\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e一个支持事务（Transaction）中的数据库系统，必需要具有这四种特性，否则在事务过程（Transaction processing）当中无法保证数据的正确性。\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e只有满足一致性，事务的执行结果才是正确的。\u003c/li\u003e\n\u003cli\u003e在无并发的情况下，事务串行执行，隔离性一定能够满足。此时只要能满足原子性，就一定能满足一致性。\u003c/li\u003e\n\u003cli\u003e在并发的情况下，多个事务并行执行，事务不仅要满足原子性，还需要满足隔离性，才能满足一致性。\u003c/li\u003e\n\u003cli\u003e事务满足持久化是为了能应对系统崩溃的情况。\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"事务操作\"\u003e\u003ca href=\"#事务操作\" class=\"headerlink\" title=\"事务操作\"\u003e\u003c/a\u003e事务操作\u003c/h3\u003e\u003cp\u003e事务相关的语句如下：\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003eBEGIN\u003c/code\u003e / \u003ccode\u003eSTART TRANSACTION\u003c/code\u003e - \u003cstrong\u003e用于标记事务的起始点\u003c/strong\u003e。\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eSTART TRANSACTION WITH CONSISTENT SNAPSHOT\u003c/code\u003e - \u003cstrong\u003e用于标记事务的起始点\u003c/strong\u003e。\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eSAVEPOINT\u003c/code\u003e - \u003cstrong\u003e用于创建保存点\u003c/strong\u003e。方便后续针对保存点进行回滚。一个事务中可以存在多个保存点。\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eRELEASE SAVEPOINT\u003c/code\u003e - 删除某个保存点。\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eROLLBACK TO\u003c/code\u003e - \u003cstrong\u003e用于回滚到指定的保存点\u003c/strong\u003e。如果没有设置保存点，则回退到 \u003ccode\u003eSTART TRANSACTION\u003c/code\u003e 语句处。\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eCOMMIT\u003c/code\u003e - \u003cstrong\u003e提交事务\u003c/strong\u003e。\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eSET TRANSACTION\u003c/code\u003e - 设置事务的隔离级别。\u003c/li\u003e\n\u003c/ul\u003e\n\u003cblockquote\u003e\n\u003cp\u003e注意：\u003c/p\u003e\n\u003cp\u003e两种开启事务的命令，启动时机是不同的：\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e执行了 \u003ccode\u003eBEGIN\u003c/code\u003e / \u003ccode\u003eSTART TRANSACTION\u003c/code\u003e 命令后，并不代表事务立刻启动，而是当执行了增删查操作时，才真正启动事务。\u003c/li\u003e\n\u003cli\u003e执行了 \u003ccode\u003eSTART TRANSACTION WITH CONSISTENT SNAPSHOT\u003c/code\u003e 命令，会立刻启动事务。\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/blockquote\u003e\n\u003cp\u003e事务处理示例：\u003c/p\u003e\n\u003cp\u003e（1）创建一张示例表\u003c/p\u003e\n\u003cfigure class=\"highlight sql\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e8\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e9\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e10\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"comment\"\u003e-- 撤销表 user\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"keyword\"\u003eDROP\u003c/span\u003e \u003cspan class=\"keyword\"\u003eTABLE\u003c/span\u003e IF \u003cspan class=\"keyword\"\u003eEXISTS\u003c/span\u003e `\u003cspan class=\"keyword\"\u003euser\u003c/span\u003e`;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"comment\"\u003e-- 创建表 user\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"keyword\"\u003eCREATE\u003c/span\u003e \u003cspan class=\"keyword\"\u003eTABLE\u003c/span\u003e `\u003cspan class=\"keyword\"\u003euser\u003c/span\u003e` (\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\t`id` \u003cspan class=\"type\"\u003eINT\u003c/span\u003e(\u003cspan class=\"number\"\u003e10\u003c/span\u003e) UNSIGNED \u003cspan class=\"keyword\"\u003eNOT\u003c/span\u003e \u003cspan class=\"keyword\"\u003eNULL\u003c/span\u003e COMMENT \u003cspan class=\"string\"\u003e\u0026#39;Id\u0026#39;\u003c/span\u003e,\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\t`username` \u003cspan class=\"type\"\u003eVARCHAR\u003c/span\u003e(\u003cspan class=\"number\"\u003e64\u003c/span\u003e) \u003cspan class=\"keyword\"\u003eNOT\u003c/span\u003e \u003cspan class=\"keyword\"\u003eNULL\u003c/span\u003e \u003cspan class=\"keyword\"\u003eDEFAULT\u003c/span\u003e \u003cspan class=\"string\"\u003e\u0026#39;default\u0026#39;\u003c/span\u003e COMMENT \u003cspan class=\"string\"\u003e\u0026#39;用户名\u0026#39;\u003c/span\u003e,\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\t`password` \u003cspan class=\"type\"\u003eVARCHAR\u003c/span\u003e(\u003cspan class=\"number\"\u003e64\u003c/span\u003e) \u003cspan class=\"keyword\"\u003eNOT\u003c/span\u003e \u003cspan class=\"keyword\"\u003eNULL\u003c/span\u003e \u003cspan class=\"keyword\"\u003eDEFAULT\u003c/span\u003e \u003cspan class=\"string\"\u003e\u0026#39;default\u0026#39;\u003c/span\u003e COMMENT \u003cspan class=\"string\"\u003e\u0026#39;密码\u0026#39;\u003c/span\u003e,\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\t`email` \u003cspan class=\"type\"\u003eVARCHAR\u003c/span\u003e(\u003cspan class=\"number\"\u003e64\u003c/span\u003e) \u003cspan class=\"keyword\"\u003eNOT\u003c/span\u003e \u003cspan class=\"keyword\"\u003eNULL\u003c/span\u003e \u003cspan class=\"keyword\"\u003eDEFAULT\u003c/span\u003e \u003cspan class=\"string\"\u003e\u0026#39;default\u0026#39;\u003c/span\u003e COMMENT \u003cspan class=\"string\"\u003e\u0026#39;邮箱\u0026#39;\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e) COMMENT \u003cspan class=\"operator\"\u003e=\u003c/span\u003e\u003cspan class=\"string\"\u003e\u0026#39;用户表\u0026#39;\u003c/span\u003e;\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e（2）执行事务操作\u003c/p\u003e\n\u003cfigure class=\"highlight sql\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e8\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e9\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e10\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e11\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e12\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e13\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e14\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e15\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e16\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e17\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e18\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e19\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"comment\"\u003e-- 开始事务\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"keyword\"\u003eSTART\u003c/span\u003e TRANSACTION;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"comment\"\u003e-- 插入操作 A\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"keyword\"\u003eINSERT\u003c/span\u003e \u003cspan class=\"keyword\"\u003eINTO\u003c/span\u003e `\u003cspan class=\"keyword\"\u003euser\u003c/span\u003e`\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"keyword\"\u003eVALUES\u003c/span\u003e (\u003cspan class=\"number\"\u003e1\u003c/span\u003e, \u003cspan class=\"string\"\u003e\u0026#39;root1\u0026#39;\u003c/span\u003e, \u003cspan class=\"string\"\u003e\u0026#39;root1\u0026#39;\u003c/span\u003e, \u003cspan class=\"string\"\u003e\u0026#39;xxxx@163.com\u0026#39;\u003c/span\u003e);\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"comment\"\u003e-- 创建保留点 updateA\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"keyword\"\u003eSAVEPOINT\u003c/span\u003e `updateA`;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"comment\"\u003e-- 插入操作 B\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"keyword\"\u003eINSERT\u003c/span\u003e \u003cspan class=\"keyword\"\u003eINTO\u003c/span\u003e `\u003cspan class=\"keyword\"\u003euser\u003c/span\u003e`\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"keyword\"\u003eVALUES\u003c/span\u003e (\u003cspan class=\"number\"\u003e2\u003c/span\u003e, \u003cspan class=\"string\"\u003e\u0026#39;root2\u0026#39;\u003c/span\u003e, \u003cspan class=\"string\"\u003e\u0026#39;root2\u0026#39;\u003c/span\u003e, \u003cspan class=\"string\"\u003e\u0026#39;xxxx@163.com\u0026#39;\u003c/span\u003e);\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"comment\"\u003e-- 回滚到保留点 updateA\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"keyword\"\u003eROLLBACK\u003c/span\u003e \u003cspan class=\"keyword\"\u003eTO\u003c/span\u003e `updateA`;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"comment\"\u003e-- 提交事务，只有操作 A 生效\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"keyword\"\u003eCOMMIT\u003c/span\u003e;\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e（3）查询结果\u003c/p\u003e\n\u003cfigure class=\"highlight sql\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"keyword\"\u003eSELECT\u003c/span\u003e \u003cspan class=\"operator\"\u003e*\u003c/span\u003e \u003cspan class=\"keyword\"\u003eFROM\u003c/span\u003e `\u003cspan class=\"keyword\"\u003euser\u003c/span\u003e`;\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e结果：\u003c/p\u003e\n\u003cfigure class=\"highlight sql\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003emysql\u003cspan class=\"operator\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"keyword\"\u003eSELECT\u003c/span\u003e \u003cspan class=\"operator\"\u003e*\u003c/span\u003e \u003cspan class=\"keyword\"\u003eFROM\u003c/span\u003e \u003cspan class=\"keyword\"\u003euser\u003c/span\u003e;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"operator\"\u003e+\u003c/span\u003e\u003cspan class=\"comment\"\u003e----+----------+----------+--------------+\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"operator\"\u003e|\u003c/span\u003e id \u003cspan class=\"operator\"\u003e|\u003c/span\u003e username \u003cspan class=\"operator\"\u003e|\u003c/span\u003e password \u003cspan class=\"operator\"\u003e|\u003c/span\u003e email        \u003cspan class=\"operator\"\u003e|\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"operator\"\u003e+\u003c/span\u003e\u003cspan class=\"comment\"\u003e----+----------+----------+--------------+\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"operator\"\u003e|\u003c/span\u003e  \u003cspan class=\"number\"\u003e1\u003c/span\u003e \u003cspan class=\"operator\"\u003e|\u003c/span\u003e root1    \u003cspan class=\"operator\"\u003e|\u003c/span\u003e root1    \u003cspan class=\"operator\"\u003e|\u003c/span\u003e xxxx\u003cspan class=\"variable\"\u003e@163\u003c/span\u003e.com \u003cspan class=\"operator\"\u003e|\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"operator\"\u003e+\u003c/span\u003e\u003cspan class=\"comment\"\u003e----+----------+----------+--------------+\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"number\"\u003e1\u003c/span\u003e \u003cspan class=\"type\"\u003erow\u003c/span\u003e \u003cspan class=\"keyword\"\u003ein\u003c/span\u003e \u003cspan class=\"keyword\"\u003eset\u003c/span\u003e (\u003cspan class=\"number\"\u003e0.02\u003c/span\u003e sec)\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003ch3 id=\"AUTOCOMMIT\"\u003e\u003ca href=\"#AUTOCOMMIT\" class=\"headerlink\" title=\"AUTOCOMMIT\"\u003e\u003c/a\u003eAUTOCOMMIT\u003c/h3\u003e\u003cp\u003e\u003cstrong\u003eMySQL 默认采用隐式提交策略（\u003ccode\u003eautocommit\u003c/code\u003e）\u003c/strong\u003e。每执行一条语句就把这条语句当成一个事务然后进行提交。当出现 \u003ccode\u003eSTART TRANSACTION\u003c/code\u003e 语句时，会关闭隐式提交；当 \u003ccode\u003eCOMMIT\u003c/code\u003e 或 \u003ccode\u003eROLLBACK\u003c/code\u003e 语句执行后，事务会自动关闭，重新恢复隐式提交。\u003c/p\u003e\n\u003cp\u003e通过 \u003ccode\u003eset autocommit=0\u003c/code\u003e 可以取消自动提交，直到 \u003ccode\u003eset autocommit=1\u003c/code\u003e 才会提交；\u003ccode\u003eautocommit\u003c/code\u003e 标记是针对每个连接而不是针对服务器的。\u003c/p\u003e\n\u003cfigure class=\"highlight sql\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e8\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"comment\"\u003e-- 查看 AUTOCOMMIT\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"keyword\"\u003eSHOW\u003c/span\u003e VARIABLES \u003cspan class=\"keyword\"\u003eLIKE\u003c/span\u003e \u003cspan class=\"string\"\u003e\u0026#39;AUTOCOMMIT\u0026#39;\u003c/span\u003e;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"comment\"\u003e-- 关闭 AUTOCOMMIT\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"keyword\"\u003eSET\u003c/span\u003e autocommit \u003cspan class=\"operator\"\u003e=\u003c/span\u003e \u003cspan class=\"number\"\u003e0\u003c/span\u003e;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"comment\"\u003e-- 开启 AUTOCOMMIT\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"keyword\"\u003eSET\u003c/span\u003e autocommit \u003cspan class=\"operator\"\u003e=\u003c/span\u003e \u003cspan class=\"number\"\u003e1\u003c/span\u003e;\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003ch2 id=\"并发一致性问题\"\u003e\u003ca href=\"#并发一致性问题\" class=\"headerlink\" title=\"并发一致性问题\"\u003e\u003c/a\u003e并发一致性问题\u003c/h2\u003e\u003cp\u003e在并发环境下，事务的隔离性很难保证，因此会出现很多并发一致性问题。\u003c/p\u003e\n\u003ch3 id=\"丢失修改\"\u003e\u003ca href=\"#丢失修改\" class=\"headerlink\" title=\"丢失修改\"\u003e\u003c/a\u003e丢失修改\u003c/h3\u003e\u003cp\u003e\u003cstrong\u003e“丢失修改”是指一个事务的更新操作被另外一个事务的更新操作替换\u003c/strong\u003e。\u003c/p\u003e\n\u003cp\u003e如下图所示，T\u003csub\u003e1\u003c/sub\u003e 和 T\u003csub\u003e2\u003c/sub\u003e 两个事务对同一个数据进行修改，T\u003csub\u003e1\u003c/sub\u003e 先修改，T\u003csub\u003e2\u003c/sub\u003e 随后修改，T\u003csub\u003e2\u003c/sub\u003e 的修改覆盖了 T\u003csub\u003e1\u003c/sub\u003e 的修改。\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/dunwu/images/master/snap/202311030706586.png\"/\u003e\u003c/p\u003e\n\u003ch3 id=\"脏读\"\u003e\u003ca href=\"#脏读\" class=\"headerlink\" title=\"脏读\"\u003e\u003c/a\u003e脏读\u003c/h3\u003e\u003cp\u003e\u003cstrong\u003e“脏读（dirty read）”是指当前事务可以读取其他事务未提交的数据\u003c/strong\u003e。\u003c/p\u003e\n\u003cp\u003e如下图所示，T\u003csub\u003e1\u003c/sub\u003e 修改一个数据，T\u003csub\u003e2\u003c/sub\u003e 随后读取这个数据。如果 T\u003csub\u003e1\u003c/sub\u003e 撤销了这次修改，那么 T\u003csub\u003e2\u003c/sub\u003e 读取的数据是脏数据。\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/dunwu/images/master/snap/202311030706587.png\"/\u003e\u003c/p\u003e\n\u003ch3 id=\"不可重复读\"\u003e\u003ca href=\"#不可重复读\" class=\"headerlink\" title=\"不可重复读\"\u003e\u003c/a\u003e不可重复读\u003c/h3\u003e\u003cp\u003e\u003cstrong\u003e“不可重复读（non-repeatable read）”是指一个事务内多次读取同一数据，过程中，该数据被其他事务所修改，导致当前事务多次读取的数据可能不一致\u003c/strong\u003e。\u003c/p\u003e\n\u003cp\u003e如下图所示，T\u003csub\u003e2\u003c/sub\u003e 读取一个数据，T\u003csub\u003e1\u003c/sub\u003e 对该数据做了修改。如果 T\u003csub\u003e2\u003c/sub\u003e 再次读取这个数据，此时读取的结果和第一次读取的结果不同。\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/dunwu/images/master/snap/202311030706588.png\"/\u003e\u003c/p\u003e\n\u003ch3 id=\"幻读\"\u003e\u003ca href=\"#幻读\" class=\"headerlink\" title=\"幻读\"\u003e\u003c/a\u003e幻读\u003c/h3\u003e\u003cp\u003e\u003cstrong\u003e“幻读（phantom read）”是指一个事务内多次读取同一范围的数据，过程中，其他事务在该数据范围新增了数据，导致当前事务未发现新增数据\u003c/strong\u003e。\u003c/p\u003e\n\u003cp\u003e事务 T\u003csub\u003e1\u003c/sub\u003e 读取某个范围内的记录时，事务 T\u003csub\u003e2\u003c/sub\u003e 在该范围内插入了新的记录，T\u003csub\u003e1\u003c/sub\u003e 再次读取这个范围的数据，此时读取的结果和和第一次读取的结果不同。\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/dunwu/images/master/snap/202311030706589.png\"/\u003e\u003c/p\u003e\n\u003ch2 id=\"事务隔离级别\"\u003e\u003ca href=\"#事务隔离级别\" class=\"headerlink\" title=\"事务隔离级别\"\u003e\u003c/a\u003e事务隔离级别\u003c/h2\u003e\u003ch3 id=\"事务隔离级别简介\"\u003e\u003ca href=\"#事务隔离级别简介\" class=\"headerlink\" title=\"事务隔离级别简介\"\u003e\u003c/a\u003e事务隔离级别简介\u003c/h3\u003e\u003cp\u003e为了解决以上提到的\u003ca href=\"#%E5%B9%B6%E5%8F%91%E4%B8%80%E8%87%B4%E6%80%A7%E9%97%AE%E9%A2%98\"\u003e“并发一致性问题”\u003c/a\u003e，SQL 标准提出了四种“事务隔离级别”来应对这些问题。事务隔离级别等级越高，越能保证数据的一致性和完整性，但是执行效率也越低。因此，设置数据库的事务隔离级别时需要做一下权衡。\u003c/p\u003e\n\u003cp\u003e事务隔离级别从低到高分别是：\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003cstrong\u003e“读未提交（read uncommitted）”\u003c/strong\u003e - 是指，\u003cstrong\u003e事务中的修改，即使没有提交，对其它事务也是可见的\u003c/strong\u003e。\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003e“读已提交（read committed）” ** - 是指，\u003c/strong\u003e事务提交后，其他事务才能看到它的修改**。换句话说，一个事务所做的修改在提交之前对其它事务是不可见的。\u003cul\u003e\n\u003cli\u003e\u003cstrong\u003e读已提交解决了脏读的问题\u003c/strong\u003e。\u003c/li\u003e\n\u003cli\u003e读已提交是大多数数据库的默认事务隔离级别，如 Oracle。\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003e“可重复读（repeatable read）”\u003c/strong\u003e - 是指：\u003cstrong\u003e保证在同一个事务中多次读取同样数据的结果是一样的\u003c/strong\u003e。\u003cul\u003e\n\u003cli\u003e\u003cstrong\u003e可重复读解决了不可重复读问题\u003c/strong\u003e。\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003e可重复读是 InnoDB 存储引擎的默认事务隔离级别\u003c/strong\u003e。\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003e串行化（serializable ）\u003c/strong\u003e - 是指，\u003cstrong\u003e强制事务串行执行\u003c/strong\u003e，对于同一行记录，加读写锁，一旦出现锁冲突，必须等前面的事务释放锁。\u003cul\u003e\n\u003cli\u003e\u003cstrong\u003e串行化解决了幻读问题\u003c/strong\u003e。由于强制事务串行执行，自然避免了所有的并发问题。\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003e串行化策略会在读取的每一行数据上都加锁\u003c/strong\u003e，这可能导致大量的超时和锁竞争。这对于高并发应用基本上是不可接受的，所以一般不会采用这个级别。\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e事务隔离级别对并发一致性问题的解决情况：\u003c/p\u003e\n\u003ctable\u003e\n\u003cthead\u003e\n\u003ctr\u003e\n\u003cth align=\"center\"\u003e隔离级别\u003c/th\u003e\n\u003cth align=\"center\"\u003e丢失修改\u003c/th\u003e\n\u003cth align=\"center\"\u003e脏读\u003c/th\u003e\n\u003cth align=\"center\"\u003e不可重复读\u003c/th\u003e\n\u003cth align=\"center\"\u003e幻读\u003c/th\u003e\n\u003c/tr\u003e\n\u003c/thead\u003e\n\u003ctbody\u003e\u003ctr\u003e\n\u003ctd align=\"center\"\u003e读未提交\u003c/td\u003e\n\u003ctd align=\"center\"\u003e✔️️️\u003c/td\u003e\n\u003ctd align=\"center\"\u003e❌\u003c/td\u003e\n\u003ctd align=\"center\"\u003e❌\u003c/td\u003e\n\u003ctd align=\"center\"\u003e❌\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd align=\"center\"\u003e读已提交\u003c/td\u003e\n\u003ctd align=\"center\"\u003e✔️️️\u003c/td\u003e\n\u003ctd align=\"center\"\u003e✔️️️\u003c/td\u003e\n\u003ctd align=\"center\"\u003e❌\u003c/td\u003e\n\u003ctd align=\"center\"\u003e❌\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd align=\"center\"\u003e可重复读\u003c/td\u003e\n\u003ctd align=\"center\"\u003e✔️️️\u003c/td\u003e\n\u003ctd align=\"center\"\u003e✔️️️\u003c/td\u003e\n\u003ctd align=\"center\"\u003e✔️️️\u003c/td\u003e\n\u003ctd align=\"center\"\u003e❌\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd align=\"center\"\u003e可串行化\u003c/td\u003e\n\u003ctd align=\"center\"\u003e✔️️️\u003c/td\u003e\n\u003ctd align=\"center\"\u003e✔️️️\u003c/td\u003e\n\u003ctd align=\"center\"\u003e✔️️️\u003c/td\u003e\n\u003ctd align=\"center\"\u003e✔️️️\u003c/td\u003e\n\u003c/tr\u003e\n\u003c/tbody\u003e\u003c/table\u003e\n\u003ch3 id=\"查看和设置事务隔离级别\"\u003e\u003ca href=\"#查看和设置事务隔离级别\" class=\"headerlink\" title=\"查看和设置事务隔离级别\"\u003e\u003c/a\u003e查看和设置事务隔离级别\u003c/h3\u003e\u003cp\u003e可以通过 \u003ccode\u003eSHOW VARIABLES LIKE \u0026#39;transaction_isolation\u0026#39;\u003c/code\u003e 语句查看事务隔离级别。\u003c/p\u003e\n\u003cp\u003e【示例】查看事务隔离示例\u003c/p\u003e\n\u003cfigure class=\"highlight sql\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003emysql\u003cspan class=\"operator\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"keyword\"\u003eSHOW\u003c/span\u003e VARIABLES \u003cspan class=\"keyword\"\u003eLIKE\u003c/span\u003e \u003cspan class=\"string\"\u003e\u0026#39;transaction_isolation\u0026#39;\u003c/span\u003e;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"operator\"\u003e+\u003c/span\u003e\u003cspan class=\"comment\"\u003e-----------------------+-----------------+\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"operator\"\u003e|\u003c/span\u003e Variable_name         \u003cspan class=\"operator\"\u003e|\u003c/span\u003e \u003cspan class=\"keyword\"\u003eValue\u003c/span\u003e           \u003cspan class=\"operator\"\u003e|\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"operator\"\u003e+\u003c/span\u003e\u003cspan class=\"comment\"\u003e-----------------------+-----------------+\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"operator\"\u003e|\u003c/span\u003e transaction_isolation \u003cspan class=\"operator\"\u003e|\u003c/span\u003e REPEATABLE\u003cspan class=\"operator\"\u003e-\u003c/span\u003eREAD \u003cspan class=\"operator\"\u003e|\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"operator\"\u003e+\u003c/span\u003e\u003cspan class=\"comment\"\u003e-----------------------+-----------------+\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"number\"\u003e1\u003c/span\u003e \u003cspan class=\"type\"\u003erow\u003c/span\u003e \u003cspan class=\"keyword\"\u003ein\u003c/span\u003e \u003cspan class=\"keyword\"\u003eset\u003c/span\u003e (\u003cspan class=\"number\"\u003e0.03\u003c/span\u003e sec)\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003eMySQL 提供了 \u003ccode\u003eSET TRANSACTION\u003c/code\u003e 语句，该语句可以改变单个会话或全局的事务隔离级别。语法格式如下：\u003c/p\u003e\n\u003cfigure class=\"highlight sql\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"keyword\"\u003eSET\u003c/span\u003e [SESSION \u003cspan class=\"operator\"\u003e|\u003c/span\u003e \u003cspan class=\"keyword\"\u003eGLOBAL\u003c/span\u003e] TRANSACTION ISOLATION LEVEL {READ UNCOMMITTED \u003cspan class=\"operator\"\u003e|\u003c/span\u003e READ COMMITTED \u003cspan class=\"operator\"\u003e|\u003c/span\u003e REPEATABLE READ \u003cspan class=\"operator\"\u003e|\u003c/span\u003e SERIALIZABLE}\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e其中，\u003ccode\u003eSESSION\u003c/code\u003e 和 \u003ccode\u003eGLOBAL\u003c/code\u003e 关键字用来指定修改的事务隔离级别的范围：\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003eSESSION\u003c/code\u003e - 表示修改的事务隔离级别，将应用于当前会话内的所有事务。\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eGLOBAL\u003c/code\u003e - 表示修改的事务隔离级别，将应用于所有会话内的所有事务（即全局修改），且当前已经存在的会话不受影响；\u003c/li\u003e\n\u003cli\u003e如果省略 \u003ccode\u003eSESSION\u003c/code\u003e 和 \u003ccode\u003eGLOBAL\u003c/code\u003e，表示修改的事务隔离级别，将应用于当前会话内的下一个还未开始的事务。\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e【示例】设置事务隔离示例\u003c/p\u003e\n\u003cfigure class=\"highlight sql\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e8\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e9\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e10\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e11\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"comment\"\u003e-- 设置事务隔离级别为 READ UNCOMMITTED\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"keyword\"\u003eSET\u003c/span\u003e SESSION TRANSACTION ISOLATION LEVEL READ UNCOMMITTED;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"comment\"\u003e-- 设置事务隔离级别为 READ COMMITTED\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"keyword\"\u003eSET\u003c/span\u003e SESSION TRANSACTION ISOLATION LEVEL READ COMMITTED;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"comment\"\u003e-- 设置事务隔离级别为 REPEATABLE READ\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"keyword\"\u003eSET\u003c/span\u003e SESSION TRANSACTION ISOLATION LEVEL REPEATABLE READ;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"comment\"\u003e-- 设置事务隔离级别为 SERIALIZABLE\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"keyword\"\u003eSET\u003c/span\u003e SESSION TRANSACTION ISOLATION LEVEL SERIALIZABLE;\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003ch3 id=\"事务隔离级别实现方式\"\u003e\u003ca href=\"#事务隔离级别实现方式\" class=\"headerlink\" title=\"事务隔离级别实现方式\"\u003e\u003c/a\u003e事务隔离级别实现方式\u003c/h3\u003e\u003cp\u003eMysql 中的事务功能是在存储引擎层实现的，\u003cstrong\u003e并非所有存储引擎都支持事务功能\u003c/strong\u003e。InnoDB 是 Mysql 的首先事务存储引擎。\u003c/p\u003e\n\u003cp\u003e四种隔离级别具体是如何实现的呢？\u003c/p\u003e\n\u003cp\u003e以 InnoDB 的事务实现来说明：\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e对于“读未提交”隔离级别的事务来说，因为可以读到未提交事务修改的数据，所以直接读取最新的数据就好了；\u003c/li\u003e\n\u003cli\u003e对于“串行化”隔离级别的事务来说，通过加读写锁的方式来避免并行访问；\u003c/li\u003e\n\u003cli\u003e对于“读提交”和“可重复读”隔离级别的事务来说，它们都是通过 ReadView 来实现的，区别仅在于创建 ReadView 的时机不同。ReadView 可以理解为一个数据快照。\u003cul\u003e\n\u003cli\u003e“读提交”隔离级别是在“每个语句执行前”都会重新生成一个 ReadView\u003c/li\u003e\n\u003cli\u003e“可重复读”隔离级别是在“启动事务时”生成一个 ReadView，然后整个事务期间都在用这个 ReadView。\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003cblockquote\u003e\n\u003cp\u003e关于 ReadView 更多细节，将在 MVCC 章节中阐述。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003ch2 id=\"MVCC\"\u003e\u003ca href=\"#MVCC\" class=\"headerlink\" title=\"MVCC\"\u003e\u003c/a\u003eMVCC\u003c/h2\u003e\u003ch3 id=\"当前读和快照读\"\u003e\u003ca href=\"#当前读和快照读\" class=\"headerlink\" title=\"当前读和快照读\"\u003e\u003c/a\u003e当前读和快照读\u003c/h3\u003e\u003cp\u003e在高并发场景下，多事务同时执行，可能会出现种种并发一致性问题。最常见，也是最容易想到的解决问题思路就是：对访问的数据加锁，通过强制互斥来解决问题。但是，加锁就意味着阻塞，势必会增加响应时间，降低系统整体吞吐量。在大多数真实的业务场景中，读请求远大于写请求，由于读请求并不会修改数据，自然也不存在一致性问题，因此为占大多数的读请求加锁是一种不必要的开销。那么，我们很自然的会想到，如果只针对写操作加锁，不就能大大提升吞吐量了吗？没错，有一种名为\u003cstrong\u003e“写时复制（Copy-On-Write，简称 COW）”\u003c/strong\u003e的技术，正是基于这个想法而设计，并广泛应用于各种软件领域，例如：Java 中的 \u003ccode\u003eCopyOnWriteArrayList\u003c/code\u003e 等容器；Redis 中的 RDB 持久化过程。\u003c/p\u003e\n\u003cp\u003eCopy-On-Write 的核心思想是：假设有多个请求需要访问相同的数据，先为这份数据生成一个副本（也可以称为快照）。然后将读写分离，所有的读请求都直接访问原数据；所有的写请求都访问副本数据，为了实现并发一致性，写数据时需要通过加锁保证每次写操作只能由一个写请求完成。当写操作完成后，用副本数据替换原数据。\u003c/p\u003e\n\u003cp\u003e在 Mysql 中，也采用了 Copy-On-Write 设计思想，将读写分离。\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e这里的“写”指的是当前读。\u003cstrong\u003e“当前读”，顾名思义，指的是读取记录当前的数据。\u003c/strong\u003e为了保证读取当前数据时，没有其他事务修改，因此需要对读取记录加锁。当前读的场景有下面几种：\u003cul\u003e\n\u003cli\u003e\u003ccode\u003eINSERT\u003c/code\u003e - 插入操作\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eUPDATE\u003c/code\u003e - 更新操作\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eDELETE\u003c/code\u003e - 删除操作\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eSELECT ... LOCK IN SHARE MODE\u003c/code\u003e - 加共享锁（读锁）\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eSELECT ... FOR UPDATE\u003c/code\u003e - 加独享锁（写锁）\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e这里的“读”指的是快照读。\u003cstrong\u003e“快照读”，顾名思义，指的是读取记录的某个历史快照版本\u003c/strong\u003e。不加锁的普通 \u003ccode\u003eSELECT\u003c/code\u003e 都属于快照读，例如：\u003ccode\u003eSELECT ... FROM\u003c/code\u003e。采用快照读的前提是，事务隔离级别不是串行化级别。串行化级别下的快照读会退化成当前读。快照读的实现是基于 MVCC。\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"什么是-MVCC\"\u003e\u003ca href=\"#什么是-MVCC\" class=\"headerlink\" title=\"什么是 MVCC\"\u003e\u003c/a\u003e什么是 MVCC\u003c/h3\u003e\u003cblockquote\u003e\n\u003cp\u003e前文提到，快照读的实现是基于 MVCC。那么，什么是 MVCC 呢？\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003e\u003cstrong\u003eMVCC 是 Multi Version Concurrency Control 的缩写，即“多版本并发控制”\u003c/strong\u003e。MVCC 的设计目标是提高数据库的并发性，采用非阻塞的方式去处理读/写并发冲突，可以将其看成一种乐观锁。\u003c/p\u003e\n\u003cp\u003e不仅是 Mysql，包括 Oracle、PostgreSQL 等其他关系型数据库都实现了各自的 MVCC，实现机制没有统一标准。\u003cstrong\u003eMVCC 是 InnoDB 存储引擎实现事务隔离级别的一种具体方式\u003c/strong\u003e。其主要用于实现读已提交和可重复读这两种隔离级别。而未提交读隔离级别总是读取最新的数据行，要求很低，无需使用 MVCC。可串行化隔离级别需要对所有读取的行都加锁，单纯使用 MVCC 无法实现。\u003c/p\u003e\n\u003ch3 id=\"MVCC-实现原理\"\u003e\u003ca href=\"#MVCC-实现原理\" class=\"headerlink\" title=\"MVCC 实现原理\"\u003e\u003c/a\u003eMVCC 实现原理\u003c/h3\u003e\u003cp\u003eMVCC 的实现原理，主要基于隐式字段、UndoLog、ReadView 来实现。\u003c/p\u003e\n\u003ch4 id=\"隐式字段\"\u003e\u003ca href=\"#隐式字段\" class=\"headerlink\" title=\"隐式字段\"\u003e\u003c/a\u003e隐式字段\u003c/h4\u003e\u003cp\u003eInnoDB 存储引擎中，数据表的每行记录，除了用户显示定义的字段以外，还有几个数据库隐式定义的字段：\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003eDB_ROW_ID\u003c/code\u003e - \u003cstrong\u003e隐藏的自增 ID\u003c/strong\u003e，如果数据表没有指定主键，InnoDB 会自动基于 \u003ccode\u003erow_id\u003c/code\u003e 产生一个聚簇索引。\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eDB_TRX_ID\u003c/code\u003e - \u003cstrong\u003e最近修改的事务 ID\u003c/strong\u003e。事务对某条聚簇索引记录进行改动时，就会把该事务的事务 id 记录在 trx_id 隐藏列里；\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eDB_ROLL_PTR\u003c/code\u003e - \u003cstrong\u003e回滚指针\u003c/strong\u003e，指向这条记录的上一个版本。\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch4 id=\"UndoLog\"\u003e\u003ca href=\"#UndoLog\" class=\"headerlink\" title=\"UndoLog\"\u003e\u003c/a\u003eUndoLog\u003c/h4\u003e\u003cp\u003eMVCC 的多版本指的是多个版本的快照，快照存储在 UndoLog 中。该日志通过回滚指针 \u003ccode\u003eroll_pointer\u003c/code\u003e 把一个数据行的所有快照链接起来，构成一个\u003cstrong\u003e版本链\u003c/strong\u003e。\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/dunwu/images/master/snap/202311030708591.png\"/\u003e\u003c/p\u003e\n\u003ch4 id=\"ReadView\"\u003e\u003ca href=\"#ReadView\" class=\"headerlink\" title=\"ReadView\"\u003e\u003c/a\u003eReadView\u003c/h4\u003e\u003cp\u003e\u003cstrong\u003eReadView 就是事务进行快照读时产生的读视图（快照）\u003c/strong\u003e。\u003c/p\u003e\n\u003cp\u003eReadView 有四个重要的字段：\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003em_ids\u003c/code\u003e - 指的是在创建 ReadView 时，当前数据库中“活跃事务”的事务 ID 列表。注意：这是一个列表，\u003cstrong\u003e“活跃事务”指的就是，启动了但还没提交的事务\u003c/strong\u003e。\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003emin_trx_id\u003c/code\u003e - 指的是在创建 ReadView 时，当前数据库中“活跃事务”中事务 id 最小的事务，也就是 \u003ccode\u003em_ids\u003c/code\u003e 的最小值。\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003emax_trx_id\u003c/code\u003e - 这个并不是 m_ids 的最大值，而是指创建 ReadView 时当前数据库中应该给下一个事务分配的 ID 值，也就是全局事务中最大的事务 ID 值 + 1；\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003ecreator_trx_id\u003c/code\u003e - 指的是创建该 ReadView 的事务的事务 ID。\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e在创建 ReadView 后，我们可以将记录中的 trx_id 划分为三种情况：\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e已提交事务\u003c/li\u003e\n\u003cli\u003e已启动但未提交的事务\u003c/li\u003e\n\u003cli\u003e未启动的事务\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/dunwu/images/master/snap/202311030708265.png\"/\u003e\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eReadView 如何判断版本链中哪个版本可见？\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003e一个事务去访问记录的时候，除了自己的更新记录总是可见之外，还有这几种情况：\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003etrx_id == creator_trx_id\u003c/code\u003e - 表示 \u003ccode\u003etrx_id\u003c/code\u003e 版本记录由 ReadView 所代表的当前事务产生，当然可以访问。\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003etrx_id \u0026lt; min_trx_id\u003c/code\u003e - 表示 \u003ccode\u003etrx_id\u003c/code\u003e 版本记录是在创建 ReadView 之前已提交的事务生成的，当前事务可以访问。\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003etrx_id \u0026gt;= max_trx_id\u003c/code\u003e - 表示 \u003ccode\u003etrx_id\u003c/code\u003e 版本记录是在创建 ReadView 之后才启动的事务生成的，当前事务不可以访问。\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003emin_trx_id \u0026lt;= trx_id \u0026lt; max_trx_id\u003c/code\u003e - 需要判断 \u003ccode\u003etrx_id\u003c/code\u003e 是否在 \u003ccode\u003em_ids\u003c/code\u003e 列表中\u003cul\u003e\n\u003cli\u003e如果 \u003ccode\u003etrx_id\u003c/code\u003e 在 \u003ccode\u003em_ids\u003c/code\u003e 列表中，表示生成 \u003ccode\u003etrx_id\u003c/code\u003e 版本记录的事务依然活跃（未提交事务），当前事务不可以访问。\u003c/li\u003e\n\u003cli\u003e如果 \u003ccode\u003etrx_id\u003c/code\u003e 不在 \u003ccode\u003em_ids\u003c/code\u003e 列表中，表示生成 \u003ccode\u003etrx_id\u003c/code\u003e 版本记录的事务已提交，当前事务可以访问。\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e这种通过“版本链”来控制并发事务访问同一个记录时的行为就叫 MVCC（多版本并发控制）。\u003c/p\u003e\n\u003ch3 id=\"MVCC-如何实现多种事务隔离级别\"\u003e\u003ca href=\"#MVCC-如何实现多种事务隔离级别\" class=\"headerlink\" title=\"MVCC 如何实现多种事务隔离级别\"\u003e\u003c/a\u003eMVCC 如何实现多种事务隔离级别\u003c/h3\u003e\u003cp\u003e对于“读已提交”和“可重复读”隔离级别的事务来说，它们都是通过 MVCC 的 ReadView 机制来实现的，区别仅在于创建 ReadView 的时机不同。ReadView 可以理解为一个数据快照。\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e“读已提交”隔离级别，会在“每个语句执行前”都会重新生成一个 ReadView。\u003c/li\u003e\n\u003cli\u003e“可重复读”隔离级别，会在“启动事务时”生成一个 ReadView，然后整个事务期间都在复用这个 ReadView。\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eMySQL InnoDB 引擎的默认隔离级别虽然是“可重复读”，但是它很大程度上避免幻读现象（并不是完全解决了），解决的方案有两种：\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e针对\u003cstrong\u003e快照读\u003c/strong\u003e（普通 select 语句），\u003cstrong\u003e通过 MVCC 方式解决了幻读\u003c/strong\u003e，因为可重复读隔离级别下，事务执行过程中看到的数据，一直跟这个事务启动时看到的数据是一致的，即使中途有其他事务插入了一条数据，是查询不出来这条数据的，所以就很好了避免幻读问题。\u003c/li\u003e\n\u003cli\u003e针对\u003cstrong\u003e当前读\u003c/strong\u003e（select … for update 等语句），\u003cstrong\u003e通过 Next-Key Lock（记录锁+间隙锁）方式解决了幻读\u003c/strong\u003e，因为当执行 select … for update 语句的时候，会加上 Next-Key Lock，如果有其他事务在 Next-Key Lock 锁范围内插入了一条记录，那么这个插入语句就会被阻塞，无法成功插入，所以就很好了避免幻读问题。\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch4 id=\"MVCC-实现可重复读\"\u003e\u003ca href=\"#MVCC-实现可重复读\" class=\"headerlink\" title=\"MVCC 实现可重复读\"\u003e\u003c/a\u003eMVCC 实现可重复读\u003c/h4\u003e\u003cp\u003e\u003cstrong\u003e可重复读隔离级别只有在启动事务时才会创建 ReadView，然后整个事务期间都使用这个 ReadView\u003c/strong\u003e。这样就保证了在事务期间读到的数据都是事务启动前的记录。\u003c/p\u003e\n\u003cp\u003e举个例子，假设有两个事务依次执行以下操作：\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e初始，表中 id = 1 的 value 列值为 100。\u003c/li\u003e\n\u003cli\u003e事务 2 读取数据，value 为 100；\u003c/li\u003e\n\u003cli\u003e事务 1 将 value 设为 200；\u003c/li\u003e\n\u003cli\u003e事务 2 读取数据，value 为 100；\u003c/li\u003e\n\u003cli\u003e事务 1 提交事务；\u003c/li\u003e\n\u003cli\u003e事务 2 读取数据，value 依旧为 100；\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e以上操作，如下图所示。T2 事务在事务过程中，是否可以看到 T1 事务的修改，可以根据 \u003ca href=\"#ReadView\"\u003eReadView\u003c/a\u003e 中描述的规则去判断。\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/dunwu/images/master/snap/202311030709235.png\"/\u003e\u003c/p\u003e\n\u003cp\u003e从图中不难看出：\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e对于 \u003ccode\u003etrx_id = 100\u003c/code\u003e 的版本记录，比对 T2 事务 ReadView ，\u003ccode\u003etrx_id \u0026lt; min_trx_id\u003c/code\u003e，因此在 T2 事务中的任意时刻都可见；\u003c/li\u003e\n\u003cli\u003e对于 \u003ccode\u003etrx_id = 101\u003c/code\u003e 的版本记录，比对 T2 事务 ReadView ，可以看出 \u003ccode\u003emin_trx_id \u0026lt;= trx_id \u0026lt; max_trx_id\u003c/code\u003e ，且 \u003ccode\u003etrx_id\u003c/code\u003e 在 \u003ccode\u003em_ids\u003c/code\u003e 中，因此 T2 事务中不可见。\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e综上所述，在 T2 事务中，自始至终只能看到 \u003ccode\u003etrx_id = 100\u003c/code\u003e 的版本记录。\u003c/p\u003e\n\u003ch4 id=\"MVCC-实现读已提交\"\u003e\u003ca href=\"#MVCC-实现读已提交\" class=\"headerlink\" title=\"MVCC 实现读已提交\"\u003e\u003c/a\u003eMVCC 实现读已提交\u003c/h4\u003e\u003cp\u003e\u003cstrong\u003e读已提交隔离级别每次读取数据时都会创建一个 ReadView\u003c/strong\u003e。这意味着，事务期间的多次读取同一条数据，前后读取的数据可能会出现不一致——因为，这期间可能有另外一个事务修改了该记录，并提交了事务。\u003c/p\u003e\n\u003cp\u003e举个例子，假设有两个事务依次执行以下操作：\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e初始，表中 id = 1 的 value 列值为 100。\u003c/li\u003e\n\u003cli\u003e事务 2 读取数据（创建 ReadView），value 为 0；\u003c/li\u003e\n\u003cli\u003e事务 1 将 value 设为 100；\u003c/li\u003e\n\u003cli\u003e事务 2 读取数据（创建 ReadView），value 为 0；\u003c/li\u003e\n\u003cli\u003e事务 1 提交事务；\u003c/li\u003e\n\u003cli\u003e事务 2 读取数据（创建 ReadView），value 为 100；\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e以上操作，如下图所示，T2 事务在事务过程中，是否可以看到其他事务的修改，可以根据 \u003ca href=\"#ReadView\"\u003eReadView\u003c/a\u003e 中描述的规则去判断。\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/dunwu/images/master/snap/202311030709986.png\"/\u003e\u003c/p\u003e\n\u003cp\u003e从图中不难看出：\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e对于 \u003ccode\u003etrx_id = 100\u003c/code\u003e 的版本记录，比对 T2 事务 ReadView ，\u003ccode\u003etrx_id \u0026lt; min_trx_id\u003c/code\u003e，因此在 T2 事务中的任意时刻都可见；\u003c/li\u003e\n\u003cli\u003e对于 \u003ccode\u003etrx_id = 101\u003c/code\u003e 的版本记录，比对 T2 事务 ReadView ，可以看出第二次查询时（T1 更新未提交），\u003ccode\u003emin_trx_id \u0026lt;= trx_id \u0026lt; max_trx_id\u003c/code\u003e ，且 \u003ccode\u003etrx_id\u003c/code\u003e 在 \u003ccode\u003em_ids\u003c/code\u003e 中，因此 T2 事务中不可见；而第三次查询时（T1 更新已提交），\u003ccode\u003etrx_id \u0026lt; min_trx_id\u003c/code\u003e，因此在 T2 事务中可见；\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e综上所述，在 T2 事务中，当 T1 事务提交前，可读取到的是 \u003ccode\u003etrx_id = 100\u003c/code\u003e 的版本记录；当 T1 事务提交后，可读取到的是 \u003ccode\u003etrx_id = 101\u003c/code\u003e 的版本记录。\u003c/p\u003e\n\u003ch4 id=\"MVCC-Next-Key-Lock-解决幻读\"\u003e\u003ca href=\"#MVCC-Next-Key-Lock-解决幻读\" class=\"headerlink\" title=\"MVCC + Next-Key Lock 解决幻读\"\u003e\u003c/a\u003eMVCC + Next-Key Lock 解决幻读\u003c/h4\u003e\u003cp\u003eMySQL InnoDB 引擎的默认隔离级别虽然是“可重复读”，但是它很大程度上避免幻读现象（并不是完全解决了）。针对快照读和当前读，InnoDB 的处理方式各不相同。\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e快照读是如何避免幻读的？\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003e针对\u003cstrong\u003e快照读\u003c/strong\u003e（普通 \u003ccode\u003eSELECT\u003c/code\u003e 语句），\u003cstrong\u003e通过 MVCC 方式解决了幻读\u003c/strong\u003e，因为可重复读隔离级别下，事务执行过程中看到的数据，一直跟这个事务启动时看到的数据是一致的，即使中途有其他事务插入了一条数据，是查询不出来这条数据的，所以就很好了避免幻读问题。\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e当前读是如何避免幻读的？\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003e针对\u003cstrong\u003e当前读\u003c/strong\u003e（\u003ccode\u003eSELECT ... FOR UPDATE\u003c/code\u003e 等语句），\u003cstrong\u003e通过 Next-Key Lock（记录锁+间隙锁）方式解决了幻读\u003c/strong\u003e，因为当执行 \u003ccode\u003eSELECT ... FOR UPDATE\u003c/code\u003e 语句的时候，会加上 Next-Key Lock，如果有其他事务在 Next-Key Lock 锁范围内插入了一条记录，那么这个插入语句就会被阻塞，无法成功插入，所以就很好的避免了幻读问题。\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e幻读被完全解决了吗？\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003e\u003cstrong\u003e可重复读隔离级别下虽然很大程度上避免了幻读，但是还是没有能完全解决幻读\u003c/strong\u003e。\u003c/p\u003e\n\u003cp\u003e【示例】幻读案例一\u003c/p\u003e\n\u003cp\u003e环境：存储引擎为 InnoDB；事务隔离级别为可重复读\u003c/p\u003e\n\u003cfigure class=\"highlight sql\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e8\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e9\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e10\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e11\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e12\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e13\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e14\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e15\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e16\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e17\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e18\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e19\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e20\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e21\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e22\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e23\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e24\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e25\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e26\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e27\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e28\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e29\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e30\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e31\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e32\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e33\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e34\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e35\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e36\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e37\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e38\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e39\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e40\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e41\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e42\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e43\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e44\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e45\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e46\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e47\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e48\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e49\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e50\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e51\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e52\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"comment\"\u003e-- --------------------------------------------------------------------------------------\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"comment\"\u003e-- 实验说明：以下 SQL 脚本必须严格按照顺序执行，并且事务 A 和事务 B 必须在不同的 Client 中执行。\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"comment\"\u003e-- ----------------------------------------------------------------------------------------\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"comment\"\u003e-- --------------------------------------------------------------------- （1）数据初始化\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"comment\"\u003e-- 创建表 test\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"keyword\"\u003eCREATE\u003c/span\u003e \u003cspan class=\"keyword\"\u003eTABLE\u003c/span\u003e `test` (\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\t`id` \u003cspan class=\"type\"\u003eINT\u003c/span\u003e(\u003cspan class=\"number\"\u003e10\u003c/span\u003e) UNSIGNED \u003cspan class=\"keyword\"\u003ePRIMARY\u003c/span\u003e KEY AUTO_INCREMENT,\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\t`\u003cspan class=\"keyword\"\u003evalue\u003c/span\u003e` \u003cspan class=\"type\"\u003eINT\u003c/span\u003e(\u003cspan class=\"number\"\u003e10\u003c/span\u003e) \u003cspan class=\"keyword\"\u003eNOT\u003c/span\u003e \u003cspan class=\"keyword\"\u003eNULL\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e);\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"comment\"\u003e-- 数据初始化\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"keyword\"\u003eINSERT\u003c/span\u003e \u003cspan class=\"keyword\"\u003eINTO\u003c/span\u003e `test` (`id`, `\u003cspan class=\"keyword\"\u003evalue\u003c/span\u003e`) \u003cspan class=\"keyword\"\u003eVALUES\u003c/span\u003e (\u003cspan class=\"number\"\u003e1\u003c/span\u003e, \u003cspan class=\"number\"\u003e1\u003c/span\u003e);\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"keyword\"\u003eINSERT\u003c/span\u003e \u003cspan class=\"keyword\"\u003eINTO\u003c/span\u003e `test` (`id`, `\u003cspan class=\"keyword\"\u003evalue\u003c/span\u003e`) \u003cspan class=\"keyword\"\u003eVALUES\u003c/span\u003e (\u003cspan class=\"number\"\u003e2\u003c/span\u003e, \u003cspan class=\"number\"\u003e2\u003c/span\u003e);\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"keyword\"\u003eINSERT\u003c/span\u003e \u003cspan class=\"keyword\"\u003eINTO\u003c/span\u003e `test` (`id`, `\u003cspan class=\"keyword\"\u003evalue\u003c/span\u003e`) \u003cspan class=\"keyword\"\u003eVALUES\u003c/span\u003e (\u003cspan class=\"number\"\u003e3\u003c/span\u003e, \u003cspan class=\"number\"\u003e3\u003c/span\u003e);\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"comment\"\u003e-- --------------------------------------------------------------------- （2）事务 A\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"keyword\"\u003eBEGIN\u003c/span\u003e;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"comment\"\u003e-- 查询 id = 4 的记录\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"keyword\"\u003eSELECT\u003c/span\u003e \u003cspan class=\"operator\"\u003e*\u003c/span\u003e \u003cspan class=\"keyword\"\u003eFROM\u003c/span\u003e `test` \u003cspan class=\"keyword\"\u003eWHERE\u003c/span\u003e `id` \u003cspan class=\"operator\"\u003e=\u003c/span\u003e \u003cspan class=\"number\"\u003e4\u003c/span\u003e;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"comment\"\u003e-- 结果为空\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"comment\"\u003e-- --------------------------------------------------------------------- （3）事务 B\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"keyword\"\u003eBEGIN\u003c/span\u003e;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"keyword\"\u003eINSERT\u003c/span\u003e \u003cspan class=\"keyword\"\u003eINTO\u003c/span\u003e `test` (`id`, `\u003cspan class=\"keyword\"\u003evalue\u003c/span\u003e`) \u003cspan class=\"keyword\"\u003eVALUES\u003c/span\u003e (\u003cspan class=\"number\"\u003e4\u003c/span\u003e, \u003cspan class=\"number\"\u003e4\u003c/span\u003e);\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"keyword\"\u003eCOMMIT\u003c/span\u003e;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"comment\"\u003e-- --------------------------------------------------------------------- （4）事务 A\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"comment\"\u003e-- 查询 id = 4 的记录\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"keyword\"\u003eSELECT\u003c/span\u003e \u003cspan class=\"operator\"\u003e*\u003c/span\u003e \u003cspan class=\"keyword\"\u003eFROM\u003c/span\u003e `test` \u003cspan class=\"keyword\"\u003eWHERE\u003c/span\u003e `id` \u003cspan class=\"operator\"\u003e=\u003c/span\u003e \u003cspan class=\"number\"\u003e4\u003c/span\u003e;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"comment\"\u003e-- 结果依然为空\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"comment\"\u003e-- 成功更新本应看不到的记录 id = 4\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"keyword\"\u003eUPDATE\u003c/span\u003e `test` \u003cspan class=\"keyword\"\u003eSET\u003c/span\u003e `\u003cspan class=\"keyword\"\u003evalue\u003c/span\u003e` \u003cspan class=\"operator\"\u003e=\u003c/span\u003e \u003cspan class=\"number\"\u003e0\u003c/span\u003e \u003cspan class=\"keyword\"\u003eWHERE\u003c/span\u003e `id` \u003cspan class=\"operator\"\u003e=\u003c/span\u003e \u003cspan class=\"number\"\u003e4\u003c/span\u003e;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"comment\"\u003e-- 再一次查询 id = 4 的记录\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"keyword\"\u003eSELECT\u003c/span\u003e \u003cspan class=\"operator\"\u003e*\u003c/span\u003e \u003cspan class=\"keyword\"\u003eFROM\u003c/span\u003e `test` \u003cspan class=\"keyword\"\u003eWHERE\u003c/span\u003e `id` \u003cspan class=\"operator\"\u003e=\u003c/span\u003e \u003cspan class=\"number\"\u003e4\u003c/span\u003e;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"comment\"\u003e-- 结果为：\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"comment\"\u003e-- +----+-------+\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"comment\"\u003e-- | id | value |\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"comment\"\u003e-- +----+-------+\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"comment\"\u003e-- |  4 |     0 |\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"comment\"\u003e-- +----+-------+\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"keyword\"\u003eCOMMIT\u003c/span\u003e;\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e以上示例代码的时序图如下：\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/dunwu/images/master/snap/202311070630072.png\"/\u003e\u003c/p\u003e\n\u003cp\u003e【示例】幻读案例二\u003c/p\u003e\n\u003cfigure class=\"highlight sql\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e8\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e9\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e10\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e11\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e12\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e13\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e14\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e15\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e16\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e17\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e18\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e19\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e20\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e21\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e22\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e23\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e24\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e25\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e26\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e27\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e28\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e29\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e30\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e31\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e32\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e33\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e34\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e35\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e36\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e37\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e38\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e39\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e40\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e41\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e42\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e43\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e44\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e45\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e46\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"comment\"\u003e-- --------------------------------------------------------------------- （1）数据初始化\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"comment\"\u003e-- 创建表 test\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"keyword\"\u003eCREATE\u003c/span\u003e \u003cspan class=\"keyword\"\u003eTABLE\u003c/span\u003e `test` (\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\t`id` \u003cspan class=\"type\"\u003eINT\u003c/span\u003e(\u003cspan class=\"number\"\u003e10\u003c/span\u003e) UNSIGNED \u003cspan class=\"keyword\"\u003ePRIMARY\u003c/span\u003e KEY AUTO_INCREMENT,\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\t`\u003cspan class=\"keyword\"\u003evalue\u003c/span\u003e` \u003cspan class=\"type\"\u003eINT\u003c/span\u003e(\u003cspan class=\"number\"\u003e10\u003c/span\u003e) \u003cspan class=\"keyword\"\u003eNOT\u003c/span\u003e \u003cspan class=\"keyword\"\u003eNULL\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e);\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"comment\"\u003e-- 数据初始化\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"keyword\"\u003eINSERT\u003c/span\u003e \u003cspan class=\"keyword\"\u003eINTO\u003c/span\u003e `test` (`id`, `\u003cspan class=\"keyword\"\u003evalue\u003c/span\u003e`) \u003cspan class=\"keyword\"\u003eVALUES\u003c/span\u003e (\u003cspan class=\"number\"\u003e1\u003c/span\u003e, \u003cspan class=\"number\"\u003e1\u003c/span\u003e);\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"keyword\"\u003eINSERT\u003c/span\u003e \u003cspan class=\"keyword\"\u003eINTO\u003c/span\u003e `test` (`id`, `\u003cspan class=\"keyword\"\u003evalue\u003c/span\u003e`) \u003cspan class=\"keyword\"\u003eVALUES\u003c/span\u003e (\u003cspan class=\"number\"\u003e2\u003c/span\u003e, \u003cspan class=\"number\"\u003e2\u003c/span\u003e);\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"keyword\"\u003eINSERT\u003c/span\u003e \u003cspan class=\"keyword\"\u003eINTO\u003c/span\u003e `test` (`id`, `\u003cspan class=\"keyword\"\u003evalue\u003c/span\u003e`) \u003cspan class=\"keyword\"\u003eVALUES\u003c/span\u003e (\u003cspan class=\"number\"\u003e3\u003c/span\u003e, \u003cspan class=\"number\"\u003e3\u003c/span\u003e);\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"comment\"\u003e-- --------------------------------------------------------------------- （2）事务 A\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"keyword\"\u003eBEGIN\u003c/span\u003e;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"comment\"\u003e-- 查询 id \u0026gt; 2 的记录数\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"keyword\"\u003eSELECT\u003c/span\u003e \u003cspan class=\"built_in\"\u003eCOUNT\u003c/span\u003e(\u003cspan class=\"operator\"\u003e*\u003c/span\u003e) \u003cspan class=\"keyword\"\u003eFROM\u003c/span\u003e `test` \u003cspan class=\"keyword\"\u003eWHERE\u003c/span\u003e `id` \u003cspan class=\"operator\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"number\"\u003e2\u003c/span\u003e;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"comment\"\u003e-- 结果为：\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"comment\"\u003e-- +----------+\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"comment\"\u003e-- | count(*) |\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"comment\"\u003e-- +----------+\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"comment\"\u003e-- |        1 |\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"comment\"\u003e-- +----------+\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"comment\"\u003e-- --------------------------------------------------------------------- （3）事务 B\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"keyword\"\u003eBEGIN\u003c/span\u003e;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"keyword\"\u003eINSERT\u003c/span\u003e \u003cspan class=\"keyword\"\u003eINTO\u003c/span\u003e `test` (`id`, `\u003cspan class=\"keyword\"\u003evalue\u003c/span\u003e`) \u003cspan class=\"keyword\"\u003eVALUES\u003c/span\u003e (\u003cspan class=\"number\"\u003e4\u003c/span\u003e, \u003cspan class=\"number\"\u003e4\u003c/span\u003e);\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"keyword\"\u003eCOMMIT\u003c/span\u003e;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"comment\"\u003e-- --------------------------------------------------------------------- （4）事务 A\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"comment\"\u003e-- 查询 id \u0026gt; 2 的记录数\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"keyword\"\u003eSELECT\u003c/span\u003e \u003cspan class=\"built_in\"\u003eCOUNT\u003c/span\u003e(\u003cspan class=\"operator\"\u003e*\u003c/span\u003e) \u003cspan class=\"keyword\"\u003eFROM\u003c/span\u003e `test` \u003cspan class=\"keyword\"\u003eWHERE\u003c/span\u003e `id` \u003cspan class=\"operator\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"number\"\u003e2\u003c/span\u003e \u003cspan class=\"keyword\"\u003eFOR\u003c/span\u003e \u003cspan class=\"keyword\"\u003eUPDATE\u003c/span\u003e;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"comment\"\u003e-- 结果为：\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"comment\"\u003e-- +----------+\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"comment\"\u003e-- | count(*) |\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"comment\"\u003e-- +----------+\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"comment\"\u003e-- |        2 |\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"comment\"\u003e-- +----------+\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"keyword\"\u003eCOMMIT\u003c/span\u003e;\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e\u003cstrong\u003e要避免这类特殊场景下发生幻读的现象的话，就是尽量在开启事务之后，马上执行 \u003ccode\u003eselect ... for update\u003c/code\u003e 这类当前读的语句\u003c/strong\u003e，因为它会对记录加 Next-Key Lock，从而避免其他事务插入一条新记录。\u003c/p\u003e\n\u003ch2 id=\"分布式事务\"\u003e\u003ca href=\"#分布式事务\" class=\"headerlink\" title=\"分布式事务\"\u003e\u003c/a\u003e分布式事务\u003c/h2\u003e\u003cp\u003e在单一数据节点中，事务仅限于对单一数据库资源的访问控制，称之为 \u003cstrong\u003e本地事务\u003c/strong\u003e。几乎所有的成熟的关系型数据库都提供了对本地事务的原生支持。\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003e分布式事务指的是事务操作跨越多个节点，并且要求满足事务的 ACID 特性。\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003e分布式事务的常见方案如下：\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003cstrong\u003e两阶段提交（2PC）\u003c/strong\u003e - 将事务的提交过程分为两个阶段来进行处理：准备阶段和提交阶段。参与者将操作成败通知协调者，再由协调者根据所有参与者的反馈情报决定各参与者是否要提交操作还是中止操作。\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003e三阶段提交（3PC）\u003c/strong\u003e - 与二阶段提交不同的是，引入超时机制。同时在协调者和参与者中都引入超时机制。将二阶段的准备阶段拆分为 2 个阶段，插入了一个 preCommit 阶段，使得原先在二阶段提交中，参与者在准备之后，由于协调者发生崩溃或错误，而导致参与者处于无法知晓是否提交或者中止的“不确定状态”所产生的可能相当长的延时的问题得以解决。\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003e补偿事务（TCC）\u003c/strong\u003e\u003cul\u003e\n\u003cli\u003e\u003cstrong\u003eTry\u003c/strong\u003e - 操作作为一阶段，负责资源的检查和预留。\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eConfirm\u003c/strong\u003e - 操作作为二阶段提交操作，执行真正的业务。\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eCancel\u003c/strong\u003e - 是预留资源的取消。\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003e本地消息表\u003c/strong\u003e - 在事务主动发起方额外新建事务消息表，事务发起方处理业务和记录事务消息在本地事务中完成，轮询事务消息表的数据发送事务消息，事务被动方基于消息中间件消费事务消息表中的事务。\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eMQ 事务\u003c/strong\u003e - 基于 MQ 的分布式事务方案其实是对本地消息表的封装。\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eSAGA\u003c/strong\u003e - Saga 事务核心思想是将长事务拆分为多个本地短事务，由 Saga 事务协调器协调，如果正常结束那就正常完成，如果某个步骤失败，则根据相反顺序一次调用补偿操作。\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e分布式事务方案分析：\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e2PC/3PC 依赖于数据库，能够很好的提供强一致性和强事务性，但相对来说延迟比较高，比较适合传统的单体应用，在同一个方法中存在跨库操作的情况，不适合高并发和高性能要求的场景。\u003c/li\u003e\n\u003cli\u003eTCC 适用于执行时间确定且较短，实时性要求高，对数据一致性要求高，比如互联网金融企业最核心的三个服务：交易、支付、账务。\u003c/li\u003e\n\u003cli\u003e本地消息表/MQ 事务 都适用于事务中参与方支持操作幂等，对一致性要求不高，业务上能容忍数据不一致到一个人工检查周期，事务涉及的参与方、参与环节较少，业务上有对账/校验系统兜底。\u003c/li\u003e\n\u003cli\u003eSaga 事务 由于 Saga 事务不能保证隔离性，需要在业务层控制并发，适合于业务场景事务并发操作同一资源较少的情况。 Saga 相比缺少预提交动作，导致补偿动作的实现比较麻烦，例如业务是发送短信，补偿动作则得再发送一次短信说明撤销，用户体验比较差。Saga 事务较适用于补偿动作容易处理的场景。\u003c/li\u003e\n\u003c/ul\u003e\n\u003cblockquote\u003e\n\u003cp\u003e分布式事务详细说明、分析请参考：\u003ca href=\"https://dunwu.github.io/waterdrop/pages/e1881c/\"\u003e分布式事务基本原理\u003c/a\u003e\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003ch2 id=\"事务最佳实践\"\u003e\u003ca href=\"#事务最佳实践\" class=\"headerlink\" title=\"事务最佳实践\"\u003e\u003c/a\u003e事务最佳实践\u003c/h2\u003e\u003cp\u003e高并发场景下的事务到底该如何调优？\u003c/p\u003e\n\u003ch3 id=\"尽量使用低级别事务隔离\"\u003e\u003ca href=\"#尽量使用低级别事务隔离\" class=\"headerlink\" title=\"尽量使用低级别事务隔离\"\u003e\u003c/a\u003e尽量使用低级别事务隔离\u003c/h3\u003e\u003cp\u003e结合业务场景，尽量使用低级别事务隔离\u003c/p\u003e\n\u003ch3 id=\"避免行锁升级表锁\"\u003e\u003ca href=\"#避免行锁升级表锁\" class=\"headerlink\" title=\"避免行锁升级表锁\"\u003e\u003c/a\u003e避免行锁升级表锁\u003c/h3\u003e\u003cp\u003e在 InnoDB 中，行锁是通过索引实现的，如果不通过索引条件检索数据，行锁将会升级到表锁。我们知道，表锁是会严重影响到整张表的操作性能的，所以应该尽力避免。\u003c/p\u003e\n\u003ch3 id=\"缩小事务范围\"\u003e\u003ca href=\"#缩小事务范围\" class=\"headerlink\" title=\"缩小事务范围\"\u003e\u003c/a\u003e缩小事务范围\u003c/h3\u003e\u003cp\u003e有时候，数据库并发访问量太大，会出现以下异常：\u003c/p\u003e\n\u003cfigure class=\"highlight angelscript\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003eMySQLQueryInterruptedException: Query execution was \u003cspan class=\"built_in\"\u003eint\u003c/span\u003eerrupted\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e高并发时对一条记录进行更新的情况下，由于更新记录所在的事务还可能存在其他操作，导致一个事务比较长，当有大量请求进入时，就可能导致一些请求同时进入到事务中。\u003c/p\u003e\n\u003cp\u003e又因为锁的竞争是不公平的，当多个事务同时对一条记录进行更新时，极端情况下，一个更新操作进去排队系统后，可能会一直拿不到锁，最后因超时被系统打断踢出。\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/dunwu/images/master/snap/20200630112600.png\" alt=\"img\"/\u003e\u003c/p\u003e\n\u003cp\u003e如上图中的操作，虽然都是在一个事务中，但锁的申请在不同时间，只有当其他操作都执行完，才会释放所有锁。因为扣除库存是更新操作，属于行锁，这将会影响到其他操作该数据的事务，所以我们应该尽量避免长时间地持有该锁，尽快释放该锁。又因为先新建订单和先扣除库存都不会影响业务，所以我们可以将扣除库存操作放到最后，也就是使用执行顺序 1，以此尽量减小锁的持有时间。\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003e在 InnoDB 事务中，行锁是在需要的时候才加上的，但并不是不需要了就立刻释放，而是要等到事务结束时才释放。这个就是两阶段锁协议。\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003e知道了这个设定，对我们使用事务有什么帮助呢？那就是，如果你的事务中需要锁多个行，要把最可能造成锁冲突、最可能影响并发度的锁尽量往后放。\u003c/p\u003e\n\u003ch2 id=\"参考资料\"\u003e\u003ca href=\"#参考资料\" class=\"headerlink\" title=\"参考资料\"\u003e\u003c/a\u003e参考资料\u003c/h2\u003e\u003cul\u003e\n\u003cli\u003e\u003ca target=\"_blank\" rel=\"noopener\" href=\"https://book.douban.com/subject/23008813/\"\u003e《高性能 MySQL》\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca target=\"_blank\" rel=\"noopener\" href=\"https://time.geekbang.org/column/intro/139\"\u003eMySQL 实战 45 讲\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n    \u003c/div\u003e",
  "Date": "2020-06-03T11:32:09Z",
  "Author": "钝悟 ◾ Dunwu"
}