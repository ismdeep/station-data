{
  "Source": "dunwu",
  "Title": "Spring AOP",
  "Link": "https://dunwu.github.io/blog/pages/53aedb/",
  "Content": "\u003cdiv class=\"post-body\" itemprop=\"articleBody\"\u003e\u003ch1 id=\"Spring-AOP\"\u003e\u003ca href=\"#Spring-AOP\" class=\"headerlink\" title=\"Spring AOP\"\u003e\u003c/a\u003eSpring AOP\u003c/h1\u003e\u003ch2 id=\"AOP-概念\"\u003e\u003ca href=\"#AOP-概念\" class=\"headerlink\" title=\"AOP 概念\"\u003e\u003c/a\u003eAOP 概念\u003c/h2\u003e\u003ch3 id=\"什么是-AOP\"\u003e\u003ca href=\"#什么是-AOP\" class=\"headerlink\" title=\"什么是 AOP\"\u003e\u003c/a\u003e什么是 AOP\u003c/h3\u003e\u003cp\u003eAOP(Aspect-Oriented Programming，即 \u003cstrong\u003e面向切面编程\u003c/strong\u003e)与 OOP( Object-Oriented Programming，面向对象编程) 相辅相成，提供了与 OOP 不同的抽象软件结构的视角。\u003c/p\u003e\n\u003cp\u003e在 OOP 中，我们以类(class)作为我们的基本单元，而 AOP 中的基本单元是 \u003cstrong\u003eAspect(切面)\u003c/strong\u003e\u003c/p\u003e\n\u003ch3 id=\"术语\"\u003e\u003ca href=\"#术语\" class=\"headerlink\" title=\"术语\"\u003e\u003c/a\u003e术语\u003c/h3\u003e\u003ch4 id=\"Aspect-切面\"\u003e\u003ca href=\"#Aspect-切面\" class=\"headerlink\" title=\"Aspect(切面)\"\u003e\u003c/a\u003eAspect(切面)\u003c/h4\u003e\u003cp\u003e\u003ccode\u003easpect\u003c/code\u003e 由 \u003ccode\u003epointcount\u003c/code\u003e 和 \u003ccode\u003eadvice\u003c/code\u003e 组成, 它既包含了横切逻辑的定义, 也包括了连接点的定义. Spring AOP 就是负责实施切面的框架, 它将切面所定义的横切逻辑织入到切面所指定的连接点中.\u003cbr/\u003eAOP 的工作重心在于如何将增强织入目标对象的连接点上, 这里包含两个工作:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003e如何通过 pointcut 和 advice 定位到特定的 joinpoint 上\u003c/li\u003e\n\u003cli\u003e如何在 advice 中编写切面代码.\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003e\u003cstrong\u003e可以简单地认为, 使用 @Aspect 注解的类就是切面.\u003c/strong\u003e\u003c/p\u003e\n\u003ch4 id=\"advice-增强\"\u003e\u003ca href=\"#advice-增强\" class=\"headerlink\" title=\"advice(增强)\"\u003e\u003c/a\u003eadvice(增强)\u003c/h4\u003e\u003cp\u003e由 aspect 添加到特定的 join point(即满足 point cut 规则的 join point) 的一段代码.\u003cbr/\u003e许多 AOP 框架, 包括 Spring AOP, 会将 advice 模拟为一个拦截器(interceptor), 并且在 join point 上维护多个 advice, 进行层层拦截.\u003cbr/\u003e例如 HTTP 鉴权的实现, 我们可以为每个使用 RequestMapping 标注的方法织入 advice, 当 HTTP 请求到来时, 首先进入到 advice 代码中, 在这里我们可以分析这个 HTTP 请求是否有相应的权限, 如果有, 则执行 Controller, 如果没有, 则抛出异常. 这里的 advice 就扮演着鉴权拦截器的角色了.\u003c/p\u003e\n\u003ch4 id=\"连接点-join-point\"\u003e\u003ca href=\"#连接点-join-point\" class=\"headerlink\" title=\"连接点(join point)\"\u003e\u003c/a\u003e连接点(join point)\u003c/h4\u003e\u003cblockquote\u003e\n\u003cp\u003ea point during the execution of a program, such as the execution of a method or the handling of an exception. In Spring AOP, a join point always represents a method execution.\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003e程序运行中的一些时间点, 例如一个方法的执行, 或者是一个异常的处理.\u003cbr/\u003e\u003ccode\u003e在 Spring AOP 中, join point 总是方法的执行点, 即只有方法连接点.\u003c/code\u003e\u003c/p\u003e\n\u003ch4 id=\"切点-point-cut\"\u003e\u003ca href=\"#切点-point-cut\" class=\"headerlink\" title=\"切点(point cut)\"\u003e\u003c/a\u003e切点(point cut)\u003c/h4\u003e\u003cp\u003e匹配 join point 的谓词(a predicate that matches join points).\u003cbr/\u003eAdvice 是和特定的 point cut 关联的, 并且在 point cut 相匹配的 join point 中执行.\u003cbr/\u003e\u003ccode\u003e在 Spring 中, 所有的方法都可以认为是 joinpoint, 但是我们并不希望在所有的方法上都添加 Advice, 而 pointcut 的作用就是提供一组规则(使用 AspectJ pointcut expression language 来描述) 来匹配joinpoint, 给满足规则的 joinpoint 添加 Advice.\u003c/code\u003e\u003c/p\u003e\n\u003ch4 id=\"关于-join-point-和-point-cut-的区别\"\u003e\u003ca href=\"#关于-join-point-和-point-cut-的区别\" class=\"headerlink\" title=\"关于 join point 和 point cut 的区别\"\u003e\u003c/a\u003e关于 join point 和 point cut 的区别\u003c/h4\u003e\u003cp\u003e在 Spring AOP 中, 所有的方法执行都是 join point. 而 point cut 是一个描述信息, 它修饰的是 join point, 通过 point cut, 我们就可以确定哪些 join point 可以被织入 Advice. 因此 join point 和 point cut 本质上就是两个不同纬度上的东西.\u003cbr/\u003e\u003ccode\u003eadvice 是在 join point 上执行的, 而 point cut 规定了哪些 join point 可以执行哪些 advice\u003c/code\u003e\u003c/p\u003e\n\u003ch4 id=\"introduction\"\u003e\u003ca href=\"#introduction\" class=\"headerlink\" title=\"introduction\"\u003e\u003c/a\u003eintroduction\u003c/h4\u003e\u003cp\u003e为一个类型添加额外的方法或字段. Spring AOP 允许我们为 \u003ccode\u003e目标对象\u003c/code\u003e 引入新的接口(和对应的实现). 例如我们可以使用 introduction 来为一个 bean 实现 IsModified 接口, 并以此来简化 caching 的实现.\u003c/p\u003e\n\u003ch4 id=\"目标对象-Target\"\u003e\u003ca href=\"#目标对象-Target\" class=\"headerlink\" title=\"目标对象(Target)\"\u003e\u003c/a\u003e目标对象(Target)\u003c/h4\u003e\u003cp\u003e织入 advice 的目标对象. 目标对象也被称为 \u003ccode\u003eadvised object\u003c/code\u003e.\u003cbr/\u003e\u003ccode\u003e因为 Spring AOP 使用运行时代理的方式来实现 aspect, 因此 adviced object 总是一个代理对象(proxied object)\u003c/code\u003e\u003cbr/\u003e\u003ccode\u003e注意, adviced object 指的不是原来的类, 而是织入 advice 后所产生的代理类.\u003c/code\u003e\u003c/p\u003e\n\u003ch4 id=\"AOP-proxy\"\u003e\u003ca href=\"#AOP-proxy\" class=\"headerlink\" title=\"AOP proxy\"\u003e\u003c/a\u003eAOP proxy\u003c/h4\u003e\u003cp\u003e一个类被 AOP 织入 advice, 就会产生一个结果类, 它是融合了原类和增强逻辑的代理类.\u003cbr/\u003e在 Spring AOP 中, 一个 AOP 代理是一个 JDK 动态代理对象或 CGLIB 代理对象.\u003c/p\u003e\n\u003ch4 id=\"织入-Weaving\"\u003e\u003ca href=\"#织入-Weaving\" class=\"headerlink\" title=\"织入(Weaving)\"\u003e\u003c/a\u003e织入(Weaving)\u003c/h4\u003e\u003cp\u003e将 aspect 和其他对象连接起来, 并创建 adviced object 的过程.\u003cbr/\u003e根据不同的实现技术, AOP 织入有三种方式:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e编译器织入, 这要求有特殊的 Java 编译器.\u003c/li\u003e\n\u003cli\u003e类装载期织入, 这需要有特殊的类装载器.\u003c/li\u003e\n\u003cli\u003e动态代理织入, 在运行期为目标类添加增强(Advice)生成子类的方式.\u003cbr/\u003eSpring 采用动态代理织入, 而 AspectJ 采用编译器织入和类装载期织入.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"advice-的类型\"\u003e\u003ca href=\"#advice-的类型\" class=\"headerlink\" title=\"advice 的类型\"\u003e\u003c/a\u003eadvice 的类型\u003c/h3\u003e\u003cul\u003e\n\u003cli\u003ebefore advice, 在 join point 前被执行的 advice. 虽然 before advice 是在 join point 前被执行, 但是它并不能够阻止 join point 的执行, 除非发生了异常(即我们在 before advice 代码中, 不能人为地决定是否继续执行 join point 中的代码)\u003c/li\u003e\n\u003cli\u003eafter return advice, 在一个 join point 正常返回后执行的 advice\u003c/li\u003e\n\u003cli\u003eafter throwing advice, 当一个 join point 抛出异常后执行的 advice\u003c/li\u003e\n\u003cli\u003eafter(final) advice, 无论一个 join point 是正常退出还是发生了异常, 都会被执行的 advice.\u003c/li\u003e\n\u003cli\u003earound advice, 在 join point 前和 joint point 退出后都执行的 advice. 这个是最常用的 advice.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"关于-AOP-Proxy\"\u003e\u003ca href=\"#关于-AOP-Proxy\" class=\"headerlink\" title=\"关于 AOP Proxy\"\u003e\u003c/a\u003e关于 AOP Proxy\u003c/h3\u003e\u003cp\u003eSpring AOP 默认使用标准的 JDK 动态代理(dynamic proxy)技术来实现 AOP 代理, 通过它, 我们可以为任意的接口实现代理.\u003cbr/\u003e\u003ccode\u003e如果需要为一个类实现代理, 那么可以使用 CGLIB 代理.\u003c/code\u003e 当一个业务逻辑对象没有实现接口时, 那么 Spring AOP 就默认使用 CGLIB 来作为 AOP 代理了. 即如果我们需要为一个方法织入 advice, 但是这个方法不是一个接口所提供的方法, 则此时 Spring AOP 会使用 CGLIB 来实现动态代理. 鉴于此, Spring AOP 建议基于接口编程, 对接口进行 AOP 而不是类.\u003c/p\u003e\n\u003ch3 id=\"彻底理解-aspect-join-point-point-cut-advice\"\u003e\u003ca href=\"#彻底理解-aspect-join-point-point-cut-advice\" class=\"headerlink\" title=\"彻底理解 aspect, join point, point cut, advice\"\u003e\u003c/a\u003e彻底理解 aspect, join point, point cut, advice\u003c/h3\u003e\u003cp\u003e看完了上面的理论部分知识, 我相信还是会有不少朋友感觉到 AOP 的概念还是很模糊, 对 AOP 中的各种概念理解的还不是很透彻. 其实这很正常, 因为 AOP 中的概念是在是太多了, 我当时也是花了老大劲才梳理清楚的.\u003cbr/\u003e下面我以一个简单的例子来比喻一下 AOP 中 aspect, jointpoint, pointcut 与 advice 之间的关系.\u003c/p\u003e\n\u003cp\u003e让我们来假设一下, 从前有一个叫爪哇的小县城, 在一个月黑风高的晚上, 这个县城中发生了命案. 作案的凶手十分狡猾, 现场没有留下什么有价值的线索. 不过万幸的是, 刚从隔壁回来的老王恰好在这时候无意中发现了凶手行凶的过程, 但是由于天色已晚, 加上凶手蒙着面, 老王并没有看清凶手的面目, 只知道凶手是个男性, 身高约七尺五寸. 爪哇县的县令根据老王的描述, 对守门的士兵下命令说: 凡是发现有身高七尺五寸的男性, 都要抓过来审问. 士兵当然不敢违背县令的命令, 只好把进出城的所有符合条件的人都抓了起来.\u003c/p\u003e\n\u003cp\u003e来让我们看一下上面的一个小故事和 AOP 到底有什么对应关系.\u003cbr/\u003e首先我们知道, 在 Spring AOP 中 join point 指代的是所有方法的执行点, 而 point cut 是一个描述信息, 它修饰的是 join point, 通过 point cut, 我们就可以确定哪些 join point 可以被织入 Advice. 对应到我们在上面举的例子, 我们可以做一个简单的类比, join point 就相当于 \u003cstrong\u003e爪哇的小县城里的百姓\u003c/strong\u003e, point cut 就相当于 \u003cstrong\u003e老王所做的指控, 即凶手是个男性, 身高约七尺五寸\u003c/strong\u003e, 而 advice 则是施加在符合老王所描述的嫌疑人的动作: \u003cstrong\u003e抓过来审问\u003c/strong\u003e.\u003cbr/\u003e为什么可以这样类比呢?\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003ejoin point –\u0026gt; 爪哇的小县城里的百姓: 因为根据定义, join point 是所有可能被织入 advice 的候选的点, 在 Spring AOP 中, 则可以认为所有方法执行点都是 join point. 而在我们上面的例子中, 命案发生在小县城中, 按理说在此县城中的所有人都有可能是嫌疑人.\u003c/li\u003e\n\u003cli\u003epoint cut –\u0026gt; 男性, 身高约七尺五寸: 我们知道, 所有的方法(joint point) 都可以织入 advice, 但是我们并不希望在所有方法上都织入 advice, 而 pointcut 的作用就是提供一组规则来匹配 joinpoint, 给满足规则的 joinpoint 添加 advice. 同理, 对于县令来说, 他再昏庸, 也知道不能把县城中的所有百姓都抓起来审问, 而是根据\u003ccode\u003e凶手是个男性, 身高约七尺五寸\u003c/code\u003e, 把符合条件的人抓起来. 在这里\u003ccode\u003e凶手是个男性, 身高约七尺五寸\u003c/code\u003e 就是一个修饰谓语, 它限定了凶手的范围, 满足此修饰规则的百姓都是嫌疑人, 都需要抓起来审问.\u003c/li\u003e\n\u003cli\u003eadvice –\u0026gt; 抓过来审问, advice 是一个动作, 即一段 Java 代码, 这段 Java 代码是作用于 point cut 所限定的那些 join point 上的. 同理, 对比到我们的例子中, \u003ccode\u003e抓过来审问\u003c/code\u003e 这个动作就是对作用于那些满足 \u003ccode\u003e男性, 身高约七尺五寸\u003c/code\u003e 的\u003ccode\u003e爪哇的小县城里的百姓\u003c/code\u003e.\u003c/li\u003e\n\u003cli\u003easpect: aspect 是 point cut 与 advice 的组合, 因此在这里我们就可以类比: \u003cstrong\u003e“根据老王的线索, 凡是发现有身高七尺五寸的男性, 都要抓过来审问”\u003c/strong\u003e 这一整个动作可以被认为是一个 aspect.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e或则我们也可以从语法的角度来简单类比一下. 我们在学英语时, 经常会接触什么 \u003ccode\u003e定语\u003c/code\u003e, \u003ccode\u003e被动句\u003c/code\u003e 之类的概念, 那么可以做一个不严谨的类比, 即 \u003ccode\u003ejoinpoint\u003c/code\u003e 可以认为是一个 \u003ccode\u003e宾语\u003c/code\u003e, 而 \u003ccode\u003epointcut\u003c/code\u003e 则可以类比为修饰 \u003ccode\u003ejoinpoint\u003c/code\u003e 的定语, 那么整个 \u003ccode\u003easpect\u003c/code\u003e 就可以描述为: \u003ccode\u003e满足 pointcut 规则的 joinpoint 会被添加相应的 advice 操作.\u003c/code\u003e\u003c/p\u003e\n\u003ch2 id=\"AspectJ-支持\"\u003e\u003ca href=\"#AspectJ-支持\" class=\"headerlink\" title=\"@AspectJ 支持\"\u003e\u003c/a\u003e@AspectJ 支持\u003c/h2\u003e\u003cp\u003e\u003cstrong\u003e\u003ccode\u003e@AspectJ\u003c/code\u003e\u003c/strong\u003e 是一种使用 Java 注解来实现 AOP 的编码风格。\u003c/p\u003e\n\u003cp\u003e@AspectJ 风格的 AOP 是 AspectJ Project 在 AspectJ 5 中引入的, 并且 Spring 也支持 @AspectJ 的 AOP 风格.\u003c/p\u003e\n\u003ch3 id=\"使能-AspectJ-支持\"\u003e\u003ca href=\"#使能-AspectJ-支持\" class=\"headerlink\" title=\"使能 @AspectJ 支持\"\u003e\u003c/a\u003e使能 @AspectJ 支持\u003c/h3\u003e\u003cp\u003e@AspectJ 可以以 XML 的方式或以注解的方式来使能, 并且不论以哪种方式使能@ASpectJ, 我们都必须保证 aspectjweaver.jar 在 classpath 中.\u003c/p\u003e\n\u003ch4 id=\"使用-Java-Configuration-方式使能-AspectJ\"\u003e\u003ca href=\"#使用-Java-Configuration-方式使能-AspectJ\" class=\"headerlink\" title=\"使用 Java Configuration 方式使能@AspectJ\"\u003e\u003c/a\u003e使用 Java Configuration 方式使能@AspectJ\u003c/h4\u003e\u003cfigure class=\"highlight java\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e@Configuration\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e@EnableAspectJAutoProxy\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"keyword\"\u003epublic\u003c/span\u003e \u003cspan class=\"keyword\"\u003eclass\u003c/span\u003e \u003cspan class=\"title class_\"\u003eAppConfig\u003c/span\u003e {\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e}\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003ch4 id=\"使用-XML-方式使能-AspectJ\"\u003e\u003ca href=\"#使用-XML-方式使能-AspectJ\" class=\"headerlink\" title=\"使用 XML 方式使能@AspectJ\"\u003e\u003c/a\u003e使用 XML 方式使能@AspectJ\u003c/h4\u003e\u003cfigure class=\"highlight angelscript\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u0026lt;aop:aspectj-\u003cspan class=\"built_in\"\u003eauto\u003c/span\u003eproxy/\u0026gt;\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003ch3 id=\"定义-aspect-切面\"\u003e\u003ca href=\"#定义-aspect-切面\" class=\"headerlink\" title=\"定义 aspect(切面)\"\u003e\u003c/a\u003e定义 aspect(切面)\u003c/h3\u003e\u003cp\u003e当使用注解 \u003cstrong\u003e@Aspect\u003c/strong\u003e 标注一个 Bean 后, 那么 Spring 框架会自动收集这些 Bean, 并添加到 Spring AOP 中, 例如:\u003c/p\u003e\n\u003cfigure class=\"highlight java\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e@Component\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e@Aspect\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"keyword\"\u003epublic\u003c/span\u003e \u003cspan class=\"keyword\"\u003eclass\u003c/span\u003e \u003cspan class=\"title class_\"\u003eMyTest\u003c/span\u003e {\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e}\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e\u003ccode\u003e注意, 仅仅使用@Aspect 注解, 并不能将一个 Java 对象转换为 Bean, 因此我们还需要使用类似 @Component 之类的注解.\u003c/code\u003e\u003cbr/\u003e\u003ccode\u003e注意, 如果一个 类被@Aspect 标注, 则这个类就不能是其他 aspect 的 **advised object** 了, 因为使用 @Aspect 后, 这个类就会被排除在 auto-proxying 机制之外.\u003c/code\u003e\u003c/p\u003e\n\u003ch3 id=\"声明-pointcut\"\u003e\u003ca href=\"#声明-pointcut\" class=\"headerlink\" title=\"声明 pointcut\"\u003e\u003c/a\u003e声明 pointcut\u003c/h3\u003e\u003cp\u003e一个 pointcut 的声明由两部分组成:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e一个方法签名, 包括方法名和相关参数\u003c/li\u003e\n\u003cli\u003e一个 pointcut 表达式, 用来指定哪些方法执行是我们感兴趣的(即因此可以织入 advice).\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e在@AspectJ 风格的 AOP 中, 我们使用一个方法来描述 pointcut, 即:\u003c/p\u003e\n\u003cfigure class=\"highlight java\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e@Pointcut(\u0026#34;execution(* com.xys.service.UserService.*(..))\u0026#34;)\u003c/span\u003e \u003cspan class=\"comment\"\u003e// 切点表达式\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"keyword\"\u003eprivate\u003c/span\u003e \u003cspan class=\"keyword\"\u003evoid\u003c/span\u003e \u003cspan class=\"title function_\"\u003edataAccessOperation\u003c/span\u003e\u003cspan class=\"params\"\u003e()\u003c/span\u003e {} \u003cspan class=\"comment\"\u003e// 切点前面\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e\u003ccode\u003e这个方法必须无返回值.\u003c/code\u003e\u003cbr/\u003e\u003ccode\u003e这个方法本身就是 pointcut signature, pointcut 表达式使用@Pointcut 注解指定.\u003c/code\u003e\u003cbr/\u003e上面我们简单地定义了一个 pointcut, 这个 pointcut 所描述的是: 匹配所有在包 \u003cstrong\u003ecom.xys.service.UserService\u003c/strong\u003e 下的所有方法的执行.\u003c/p\u003e\n\u003ch4 id=\"切点标志符-designator\"\u003e\u003ca href=\"#切点标志符-designator\" class=\"headerlink\" title=\"切点标志符(designator)\"\u003e\u003c/a\u003e切点标志符(designator)\u003c/h4\u003e\u003cp\u003eAspectJ5 的切点表达式由标志符(designator)和操作参数组成. 如 “execution(* greetTo(..))” 的切点表达式, **execution** 就是 标志符, 而圆括号里的 *****greetTo(..) 就是操作参数\u003c/p\u003e\n\u003ch5 id=\"execution\"\u003e\u003ca href=\"#execution\" class=\"headerlink\" title=\"execution\"\u003e\u003c/a\u003eexecution\u003c/h5\u003e\u003cp\u003e匹配 join point 的执行, 例如 “execution(* hello(..))” 表示匹配所有目标类中的 hello() 方法. 这个是最基本的 pointcut 标志符.\u003c/p\u003e\n\u003ch5 id=\"within\"\u003e\u003ca href=\"#within\" class=\"headerlink\" title=\"within\"\u003e\u003c/a\u003ewithin\u003c/h5\u003e\u003cp\u003e匹配特定包下的所有 join point, 例如 \u003ccode\u003ewithin(com.xys.*)\u003c/code\u003e 表示 com.xys 包中的所有连接点, 即包中的所有类的所有方法. 而\u003ccode\u003ewithin(com.xys.service.*Service)\u003c/code\u003e 表示在 com.xys.service 包中所有以 Service 结尾的类的所有的连接点.\u003c/p\u003e\n\u003ch5 id=\"this-与-target\"\u003e\u003ca href=\"#this-与-target\" class=\"headerlink\" title=\"this 与 target\"\u003e\u003c/a\u003ethis 与 target\u003c/h5\u003e\u003cp\u003ethis 的作用是匹配一个 bean, 这个 bean(Spring AOP proxy) 是一个给定类型的实例(instance of). 而 target 匹配的是一个目标对象(target object, 即需要织入 advice 的原始的类), 此对象是一个给定类型的实例(instance of).\u003c/p\u003e\n\u003ch5 id=\"bean\"\u003e\u003ca href=\"#bean\" class=\"headerlink\" title=\"bean\"\u003e\u003c/a\u003ebean\u003c/h5\u003e\u003cp\u003e匹配 bean 名字为指定值的 bean 下的所有方法, 例如:\u003c/p\u003e\n\u003cfigure class=\"highlight stylus\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"function\"\u003e\u003cspan class=\"title\"\u003ebean\u003c/span\u003e\u003cspan class=\"params\"\u003e(*Service)\u003c/span\u003e\u003c/span\u003e \u003cspan class=\"comment\"\u003e// 匹配名字后缀为 Service 的 bean 下的所有方法\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"function\"\u003e\u003cspan class=\"title\"\u003ebean\u003c/span\u003e\u003cspan class=\"params\"\u003e(myService)\u003c/span\u003e\u003c/span\u003e \u003cspan class=\"comment\"\u003e// 匹配名字为 myService 的 bean 下的所有方法\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003ch5 id=\"args\"\u003e\u003ca href=\"#args\" class=\"headerlink\" title=\"args\"\u003e\u003c/a\u003eargs\u003c/h5\u003e\u003cp\u003e匹配参数满足要求的的方法.\u003cbr/\u003e例如:\u003c/p\u003e\n\u003cfigure class=\"highlight java\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e8\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e@Pointcut(\u0026#34;within(com.xys.demo2.*)\u0026#34;)\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"keyword\"\u003epublic\u003c/span\u003e \u003cspan class=\"keyword\"\u003evoid\u003c/span\u003e \u003cspan class=\"title function_\"\u003epointcut2\u003c/span\u003e\u003cspan class=\"params\"\u003e()\u003c/span\u003e {\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e}\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e@Before(value = \u0026#34;pointcut2()  \u0026amp;\u0026amp;  args(name)\u0026#34;)\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"keyword\"\u003epublic\u003c/span\u003e \u003cspan class=\"keyword\"\u003evoid\u003c/span\u003e \u003cspan class=\"title function_\"\u003edoSomething\u003c/span\u003e\u003cspan class=\"params\"\u003e(String name)\u003c/span\u003e {\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    logger.info(\u003cspan class=\"string\"\u003e\u0026#34;---page: {}---\u0026#34;\u003c/span\u003e, name);\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e}\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cfigure class=\"highlight java\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e8\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e9\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e10\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e11\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e12\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e13\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e@Service\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"keyword\"\u003epublic\u003c/span\u003e \u003cspan class=\"keyword\"\u003eclass\u003c/span\u003e \u003cspan class=\"title class_\"\u003eNormalService\u003c/span\u003e {\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"keyword\"\u003eprivate\u003c/span\u003e \u003cspan class=\"type\"\u003eLogger\u003c/span\u003e \u003cspan class=\"variable\"\u003elogger\u003c/span\u003e \u003cspan class=\"operator\"\u003e=\u003c/span\u003e LoggerFactory.getLogger(getClass());\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"keyword\"\u003epublic\u003c/span\u003e \u003cspan class=\"keyword\"\u003evoid\u003c/span\u003e \u003cspan class=\"title function_\"\u003esomeMethod\u003c/span\u003e\u003cspan class=\"params\"\u003e()\u003c/span\u003e {\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        logger.info(\u003cspan class=\"string\"\u003e\u0026#34;---NormalService: someMethod invoked---\u0026#34;\u003c/span\u003e);\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    }\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"keyword\"\u003epublic\u003c/span\u003e String \u003cspan class=\"title function_\"\u003etest\u003c/span\u003e\u003cspan class=\"params\"\u003e(String name)\u003c/span\u003e {\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        logger.info(\u003cspan class=\"string\"\u003e\u0026#34;---NormalService: test invoked---\u0026#34;\u003c/span\u003e);\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        \u003cspan class=\"keyword\"\u003ereturn\u003c/span\u003e \u003cspan class=\"string\"\u003e\u0026#34;服务一切正常\u0026#34;\u003c/span\u003e;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    }\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e}\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e当 NormalService.test 执行时, 则 advice \u003ccode\u003edoSomething\u003c/code\u003e 就会执行, test 方法的参数 name 就会传递到 \u003ccode\u003edoSomething\u003c/code\u003e 中.\u003c/p\u003e\n\u003cp\u003e常用例子:\u003c/p\u003e\n\u003cfigure class=\"highlight java\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e8\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e9\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e10\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e11\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e12\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e13\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e14\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"comment\"\u003e// 匹配只有一个参数 name 的方法\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e@Before(value = \u0026#34;aspectMethod()  \u0026amp;\u0026amp;  args(name)\u0026#34;)\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"keyword\"\u003epublic\u003c/span\u003e \u003cspan class=\"keyword\"\u003evoid\u003c/span\u003e \u003cspan class=\"title function_\"\u003edoSomething\u003c/span\u003e\u003cspan class=\"params\"\u003e(String name)\u003c/span\u003e {\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e}\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"comment\"\u003e// 匹配第一个参数为 name 的方法\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e@Before(value = \u0026#34;aspectMethod()  \u0026amp;\u0026amp;  args(name, ..)\u0026#34;)\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"keyword\"\u003epublic\u003c/span\u003e \u003cspan class=\"keyword\"\u003evoid\u003c/span\u003e \u003cspan class=\"title function_\"\u003edoSomething\u003c/span\u003e\u003cspan class=\"params\"\u003e(String name)\u003c/span\u003e {\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e}\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"comment\"\u003e// 匹配第二个参数为 name 的方法\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eBefore(value = \u003cspan class=\"string\"\u003e\u0026#34;aspectMethod()  \u0026amp;\u0026amp;  args(*, name, ..)\u0026#34;\u003c/span\u003e)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"keyword\"\u003epublic\u003c/span\u003e \u003cspan class=\"keyword\"\u003evoid\u003c/span\u003e \u003cspan class=\"title function_\"\u003edoSomething\u003c/span\u003e\u003cspan class=\"params\"\u003e(String name)\u003c/span\u003e {\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e}\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003ch5 id=\"annotation\"\u003e\u003ca href=\"#annotation\" class=\"headerlink\" title=\"@annotation\"\u003e\u003c/a\u003e@annotation\u003c/h5\u003e\u003cp\u003e匹配由指定注解所标注的方法, 例如:\u003c/p\u003e\n\u003cfigure class=\"highlight java\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e@Pointcut(\u0026#34;@annotation(com.xys.demo1.AuthChecker)\u0026#34;)\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"keyword\"\u003epublic\u003c/span\u003e \u003cspan class=\"keyword\"\u003evoid\u003c/span\u003e \u003cspan class=\"title function_\"\u003epointcut\u003c/span\u003e\u003cspan class=\"params\"\u003e()\u003c/span\u003e {\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e}\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e则匹配由注解 \u003ccode\u003eAuthChecker\u003c/code\u003e 所标注的方法.\u003c/p\u003e\n\u003ch4 id=\"常见的切点表达式\"\u003e\u003ca href=\"#常见的切点表达式\" class=\"headerlink\" title=\"常见的切点表达式\"\u003e\u003c/a\u003e常见的切点表达式\u003c/h4\u003e\u003ch5 id=\"匹配方法签名\"\u003e\u003ca href=\"#匹配方法签名\" class=\"headerlink\" title=\"匹配方法签名\"\u003e\u003c/a\u003e匹配方法签名\u003c/h5\u003e\u003cfigure class=\"highlight stylus\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e8\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e9\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e10\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e11\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e12\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e13\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e14\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"comment\"\u003e// 匹配指定包中的所有的方法\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"function\"\u003e\u003cspan class=\"title\"\u003eexecution\u003c/span\u003e\u003cspan class=\"params\"\u003e(* com.xys.service.*(..)\u003c/span\u003e\u003c/span\u003e)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"comment\"\u003e// 匹配当前包中的指定类的所有方法\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"function\"\u003e\u003cspan class=\"title\"\u003eexecution\u003c/span\u003e\u003cspan class=\"params\"\u003e(* UserService.*(..)\u003c/span\u003e\u003c/span\u003e)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"comment\"\u003e// 匹配指定包中的所有 public 方法\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"function\"\u003e\u003cspan class=\"title\"\u003eexecution\u003c/span\u003e\u003cspan class=\"params\"\u003e(public * com.xys.service.*(..)\u003c/span\u003e\u003c/span\u003e)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"comment\"\u003e// 匹配指定包中的所有 public 方法, 并且返回值是 int 类型的方法\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"function\"\u003e\u003cspan class=\"title\"\u003eexecution\u003c/span\u003e\u003cspan class=\"params\"\u003e(public int com.xys.service.*(..)\u003c/span\u003e\u003c/span\u003e)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"comment\"\u003e// 匹配指定包中的所有 public 方法, 并且第一个参数是 String, 返回值是 int 类型的方法\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"function\"\u003e\u003cspan class=\"title\"\u003eexecution\u003c/span\u003e\u003cspan class=\"params\"\u003e(public int com.xys.service.*(String name, ..)\u003c/span\u003e\u003c/span\u003e)\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003ch5 id=\"匹配类型签名\"\u003e\u003ca href=\"#匹配类型签名\" class=\"headerlink\" title=\"匹配类型签名\"\u003e\u003c/a\u003e匹配类型签名\u003c/h5\u003e\u003cfigure class=\"highlight stylus\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e8\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e9\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e10\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e11\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e12\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"comment\"\u003e// 匹配指定包中的所有的方法, 但不包括子包\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"function\"\u003e\u003cspan class=\"title\"\u003ewithin\u003c/span\u003e\u003cspan class=\"params\"\u003e(com.xys.service.*)\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"comment\"\u003e// 匹配指定包中的所有的方法, 包括子包\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"function\"\u003e\u003cspan class=\"title\"\u003ewithin\u003c/span\u003e\u003cspan class=\"params\"\u003e(com.xys.service..*)\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"comment\"\u003e// 匹配当前包中的指定类中的方法\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"function\"\u003e\u003cspan class=\"title\"\u003ewithin\u003c/span\u003e\u003cspan class=\"params\"\u003e(UserService)\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"comment\"\u003e// 匹配一个接口的所有实现类中的实现的方法\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"function\"\u003e\u003cspan class=\"title\"\u003ewithin\u003c/span\u003e\u003cspan class=\"params\"\u003e(UserDao+)\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003ch5 id=\"匹配-Bean-名字\"\u003e\u003ca href=\"#匹配-Bean-名字\" class=\"headerlink\" title=\"匹配 Bean 名字\"\u003e\u003c/a\u003e匹配 Bean 名字\u003c/h5\u003e\u003cfigure class=\"highlight stylus\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"comment\"\u003e// 匹配以指定名字结尾的 Bean 中的所有方法\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"function\"\u003e\u003cspan class=\"title\"\u003ebean\u003c/span\u003e\u003cspan class=\"params\"\u003e(*Service)\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003ch5 id=\"切点表达式组合\"\u003e\u003ca href=\"#切点表达式组合\" class=\"headerlink\" title=\"切点表达式组合\"\u003e\u003c/a\u003e切点表达式组合\u003c/h5\u003e\u003cfigure class=\"highlight delphi\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"comment\"\u003e// 匹配以 Service 或 ServiceImpl 结尾的 bean\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003ebean\u003cspan class=\"comment\"\u003e(*Service || *ServiceImpl)\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"comment\"\u003e\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"comment\"\u003e// 匹配名字以 Service 结尾, 并且在包 com.xys.service 中的 bean\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"comment\"\u003ebean(*Service) \u0026amp;\u0026amp; within(com.xys.service.*)\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003ch3 id=\"声明-advice\"\u003e\u003ca href=\"#声明-advice\" class=\"headerlink\" title=\"声明 advice\"\u003e\u003c/a\u003e声明 advice\u003c/h3\u003e\u003cp\u003eadvice 是和一个 pointcut 表达式关联在一起的, 并且会在匹配的 join point 的方法执行的前/后/周围 运行. \u003ccode\u003epointcut 表达式可以是简单的一个 pointcut 名字的引用, 或者是完整的 pointcut 表达式\u003c/code\u003e.\u003cbr/\u003e下面我们以几个简单的 advice 为例子, 来看一下一个 advice 是如何声明的.\u003c/p\u003e\n\u003ch4 id=\"Before-advice\"\u003e\u003ca href=\"#Before-advice\" class=\"headerlink\" title=\"Before advice\"\u003e\u003c/a\u003eBefore advice\u003c/h4\u003e\u003cfigure class=\"highlight java\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e8\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e9\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e10\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e11\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e12\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e13\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"comment\"\u003e/**\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"comment\"\u003e * \u003cspan class=\"doctag\"\u003e@author\u003c/span\u003e xiongyongshun\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"comment\"\u003e * \u003cspan class=\"doctag\"\u003e@version\u003c/span\u003e 1.0\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"comment\"\u003e * \u003cspan class=\"doctag\"\u003e@created\u003c/span\u003e 16/9/9 13:13\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"comment\"\u003e */\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e@Component\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e@Aspect\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"keyword\"\u003epublic\u003c/span\u003e \u003cspan class=\"keyword\"\u003eclass\u003c/span\u003e \u003cspan class=\"title class_\"\u003eBeforeAspectTest\u003c/span\u003e {\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"comment\"\u003e// 定义一个 Pointcut, 使用 切点表达式函数 来描述对哪些 Join point 使用 advise.\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"meta\"\u003e@Pointcut(\u0026#34;execution(* com.xys.service.UserService.*(..))\u0026#34;)\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"keyword\"\u003epublic\u003c/span\u003e \u003cspan class=\"keyword\"\u003evoid\u003c/span\u003e \u003cspan class=\"title function_\"\u003edataAccessOperation\u003c/span\u003e\u003cspan class=\"params\"\u003e()\u003c/span\u003e {\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    }\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e}\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cfigure class=\"highlight java\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e8\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e9\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e@Component\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e@Aspect\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"keyword\"\u003epublic\u003c/span\u003e \u003cspan class=\"keyword\"\u003eclass\u003c/span\u003e \u003cspan class=\"title class_\"\u003eAdviseDefine\u003c/span\u003e {\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"comment\"\u003e// 定义 advise\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"meta\"\u003e@Before(\u0026#34;com.xys.aspect.PointcutDefine.dataAccessOperation()\u0026#34;)\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"keyword\"\u003epublic\u003c/span\u003e \u003cspan class=\"keyword\"\u003evoid\u003c/span\u003e \u003cspan class=\"title function_\"\u003edoBeforeAccessCheck\u003c/span\u003e\u003cspan class=\"params\"\u003e(JoinPoint joinPoint)\u003c/span\u003e {\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        System.out.println(\u003cspan class=\"string\"\u003e\u0026#34;*****Before advise, method: \u0026#34;\u003c/span\u003e + joinPoint.getSignature().toShortString() + \u003cspan class=\"string\"\u003e\u0026#34; *****\u0026#34;\u003c/span\u003e);\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    }\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e}\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e这里, \u003cstrong\u003e@Before\u003c/strong\u003e 引用了一个 pointcut, 即 “com.xys.aspect.PointcutDefine.dataAccessOperation()” 是一个 pointcut 的名字.\u003cbr/\u003e如果我们在 advice 在内置 pointcut, 则可以:\u003c/p\u003e\n\u003cfigure class=\"highlight java\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e8\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e9\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e@Component\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e@Aspect\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"keyword\"\u003epublic\u003c/span\u003e \u003cspan class=\"keyword\"\u003eclass\u003c/span\u003e \u003cspan class=\"title class_\"\u003eAdviseDefine\u003c/span\u003e {\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"comment\"\u003e// 将 pointcut 和 advice 同时定义\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"meta\"\u003e@Before(\u0026#34;within(com.xys.service..*)\u0026#34;)\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"keyword\"\u003epublic\u003c/span\u003e \u003cspan class=\"keyword\"\u003evoid\u003c/span\u003e \u003cspan class=\"title function_\"\u003edoAccessCheck\u003c/span\u003e\u003cspan class=\"params\"\u003e(JoinPoint joinPoint)\u003c/span\u003e {\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        System.out.println(\u003cspan class=\"string\"\u003e\u0026#34;*****doAccessCheck, Before advise, method: \u0026#34;\u003c/span\u003e + joinPoint.getSignature().toShortString() + \u003cspan class=\"string\"\u003e\u0026#34; *****\u0026#34;\u003c/span\u003e);\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    }\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e}\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003ch4 id=\"around-advice\"\u003e\u003ca href=\"#around-advice\" class=\"headerlink\" title=\"around advice\"\u003e\u003c/a\u003earound advice\u003c/h4\u003e\u003cp\u003earound advice 比较特别, 它可以在一个方法的之前之前和之后添加不同的操作, 并且甚至可以决定何时, 如何, 是否调用匹配到的方法.\u003c/p\u003e\n\u003cfigure class=\"highlight java\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e8\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e9\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e10\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e11\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e12\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e13\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e14\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e15\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e16\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e@Component\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e@Aspect\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"keyword\"\u003epublic\u003c/span\u003e \u003cspan class=\"keyword\"\u003eclass\u003c/span\u003e \u003cspan class=\"title class_\"\u003eAdviseDefine\u003c/span\u003e {\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"comment\"\u003e// 定义 advise\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"meta\"\u003e@Around(\u0026#34;com.xys.aspect.PointcutDefine.dataAccessOperation()\u0026#34;)\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"keyword\"\u003epublic\u003c/span\u003e Object \u003cspan class=\"title function_\"\u003edoAroundAccessCheck\u003c/span\u003e\u003cspan class=\"params\"\u003e(ProceedingJoinPoint pjp)\u003c/span\u003e \u003cspan class=\"keyword\"\u003ethrows\u003c/span\u003e Throwable {\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        \u003cspan class=\"type\"\u003eStopWatch\u003c/span\u003e \u003cspan class=\"variable\"\u003estopWatch\u003c/span\u003e \u003cspan class=\"operator\"\u003e=\u003c/span\u003e \u003cspan class=\"keyword\"\u003enew\u003c/span\u003e \u003cspan class=\"title class_\"\u003eStopWatch\u003c/span\u003e();\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        stopWatch.start();\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        \u003cspan class=\"comment\"\u003e// 开始\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        \u003cspan class=\"type\"\u003eObject\u003c/span\u003e \u003cspan class=\"variable\"\u003eretVal\u003c/span\u003e \u003cspan class=\"operator\"\u003e=\u003c/span\u003e pjp.proceed();\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        stopWatch.stop();\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        \u003cspan class=\"comment\"\u003e// 结束\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        System.out.println(\u003cspan class=\"string\"\u003e\u0026#34;invoke method: \u0026#34;\u003c/span\u003e + pjp.getSignature().getName() + \u003cspan class=\"string\"\u003e\u0026#34;, elapsed time: \u0026#34;\u003c/span\u003e + stopWatch.getTotalTimeMillis());\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        \u003cspan class=\"keyword\"\u003ereturn\u003c/span\u003e retVal;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    }\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e}\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003earound advice 和前面的 before advice 差不多, 只是我们把注解 \u003cstrong\u003e@Before\u003c/strong\u003e 改为了 \u003cstrong\u003e@Around\u003c/strong\u003e 了.\u003c/p\u003e\n\u003ch2 id=\"参考资料\"\u003e\u003ca href=\"#参考资料\" class=\"headerlink\" title=\"参考资料\"\u003e\u003c/a\u003e参考资料\u003c/h2\u003e\u003cul\u003e\n\u003cli\u003e\u003ca target=\"_blank\" rel=\"noopener\" href=\"https://item.jd.com/11899370.html\"\u003e《 Spring 实战（第 4 版）》\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n    \u003c/div\u003e",
  "Date": "2020-02-26T15:47:47Z",
  "Author": "钝悟 ◾ Dunwu"
}