{
  "Source": "dunwu",
  "Title": "JVM 体系结构",
  "Link": "https://dunwu.github.io/blog/pages/08f153/",
  "Content": "\u003cdiv class=\"post-body\" itemprop=\"articleBody\"\u003e\u003ch1 id=\"JVM-体系结构\"\u003e\u003ca href=\"#JVM-体系结构\" class=\"headerlink\" title=\"JVM 体系结构\"\u003e\u003c/a\u003eJVM 体系结构\u003c/h1\u003e\u003cblockquote\u003e\n\u003cp\u003eJVM 能跨平台工作，主要是由于 JVM 屏蔽了与各个计算机平台相关的软件、硬件之间的差异。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003ch2 id=\"JVM-简介\"\u003e\u003ca href=\"#JVM-简介\" class=\"headerlink\" title=\"JVM 简介\"\u003e\u003c/a\u003eJVM 简介\u003c/h2\u003e\u003ch3 id=\"计算机体系结构\"\u003e\u003ca href=\"#计算机体系结构\" class=\"headerlink\" title=\"计算机体系结构\"\u003e\u003c/a\u003e计算机体系结构\u003c/h3\u003e\u003cp\u003e真实的计算机体系结构的核心部分包含：\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e指令集\u003c/li\u003e\n\u003cli\u003e计算单元（CPU）\u003c/li\u003e\n\u003cli\u003e寻址方式\u003c/li\u003e\n\u003cli\u003e寄存器\u003c/li\u003e\n\u003cli\u003e存储单元\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"JVM-体系结构简介\"\u003e\u003ca href=\"#JVM-体系结构简介\" class=\"headerlink\" title=\"JVM 体系结构简介\"\u003e\u003c/a\u003eJVM 体系结构简介\u003c/h3\u003e\u003cp\u003eJVM 体系结构与计算机体系结构相似，它的核心部分包含：\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eJVM 指令集\u003c/li\u003e\n\u003cli\u003e类加载器\u003c/li\u003e\n\u003cli\u003e执行引擎 - 相当于 JVM 的 CPU\u003c/li\u003e\n\u003cli\u003e内存区 - JVM 的存储\u003c/li\u003e\n\u003cli\u003e本地方法调用 - 调用 C/C++ 实现的本地方法\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"Hotspot-架构\"\u003e\u003ca href=\"#Hotspot-架构\" class=\"headerlink\" title=\"Hotspot 架构\"\u003e\u003c/a\u003eHotspot 架构\u003c/h2\u003e\u003cp\u003eHotspot 是最流行的 JVM。\u003c/p\u003e\n\u003cp\u003eJava 虚拟机的主要组件，包括\u003cstrong\u003e类加载器\u003c/strong\u003e、\u003cstrong\u003e运行时数据区\u003c/strong\u003e和\u003cstrong\u003e执行引擎\u003c/strong\u003e。\u003c/p\u003e\n\u003cp\u003eHotspot 虚拟机拥有一个架构，它支持强大特性和能力的基础平台，支持实现高性能和强大的可伸缩性的能力。举个例子，Hotspot 虚拟机 JIT 编译器生成动态的优化，换句话说，它们在 Java 应用执行期做出优化，为底层系统架构生成高性能的本地机器指令。另外，经过它的运行时环境和多线程垃圾回收成熟的进化和连续的设计， Hotspot 虚拟机在高可用计算系统上产出了高伸缩性。\u003c/p\u003e\n\u003cdiv align=\"center\"\u003e\n\u003cimg src=\"https://raw.githubusercontent.com/dunwu/images/master/cs/java/javacore/jvm/jvm-hotspot-architecture.png\"/\u003e\n\u003c/div\u003e\n\n\u003ch3 id=\"Hotspot-关键组件\"\u003e\u003ca href=\"#Hotspot-关键组件\" class=\"headerlink\" title=\"Hotspot 关键组件\"\u003e\u003c/a\u003eHotspot 关键组件\u003c/h3\u003e\u003cp\u003eJava 虚拟机有三个组件关注着什么时候进行性能优化，堆空间是对象所存储的地方，这个区域被启动时选择的垃圾回收器管理，大部分调优选项与调整堆大小和根据你的情况选择最适当的垃圾收集器相关。即时编译器对性能也有很大的影响，但是使用新版本的 Java 虚拟机时很少需要调整。\u003c/p\u003e\n\u003cdiv align=\"center\"\u003e\n\u003cimg src=\"https://raw.githubusercontent.com/dunwu/images/master/cs/java/javacore/jvm/jvm-hotspot-key-components.png\"/\u003e\n\u003c/div\u003e\n\n\u003ch3 id=\"性能指标\"\u003e\u003ca href=\"#性能指标\" class=\"headerlink\" title=\"性能指标\"\u003e\u003c/a\u003e性能指标\u003c/h3\u003e\u003cp\u003eJava 虚拟机的性能指标主要有两点：\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003cstrong\u003e停顿时间\u003c/strong\u003e - 响应延迟是指一个应用回应一个请求的速度有多快。对关注响应能力的应用来说，长暂停时间是不可接受的，重点是在短的时间周期内能做出响应。\u003cul\u003e\n\u003cli\u003e桌面 UI 响应事件的速度\u003c/li\u003e\n\u003cli\u003e网站返回网页的速度\u003c/li\u003e\n\u003cli\u003e数据查询返回的速度\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003e吞吐量\u003c/strong\u003e - 吞吐量关注在特定的时间周期内一个应用的工作量的最大值。对关注吞吐量的应用来说长暂停时间是可以接受的。由于高吞吐量的应用关注的基准在更长周期时间上，所以快速响应时间不在考虑之内。\u003cul\u003e\n\u003cli\u003e给定时间内完成事务的数量\u003c/li\u003e\n\u003cli\u003e一小时内批处理程序完成的工作数量\u003c/li\u003e\n\u003cli\u003e一小时内数据查询完成的数量\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"参考资料\"\u003e\u003ca href=\"#参考资料\" class=\"headerlink\" title=\"参考资料\"\u003e\u003c/a\u003e参考资料\u003c/h2\u003e\u003cul\u003e\n\u003cli\u003e\u003ca target=\"_blank\" rel=\"noopener\" href=\"https://book.douban.com/subject/34907497/\"\u003e《深入理解 Java 虚拟机》\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n    \u003c/div\u003e",
  "Date": "2021-05-24T07:41:47Z",
  "Author": "钝悟 ◾ Dunwu"
}