{
  "Source": "dunwu",
  "Title": "安全漏洞防护",
  "Link": "https://dunwu.github.io/blog/pages/3633eb/",
  "Content": "\u003cdiv class=\"post-body\" itemprop=\"articleBody\"\u003e\u003ch1 id=\"安全漏洞防护\"\u003e\u003ca href=\"#安全漏洞防护\" class=\"headerlink\" title=\"安全漏洞防护\"\u003e\u003c/a\u003e安全漏洞防护\u003c/h1\u003e\u003ch2 id=\"XSS\"\u003e\u003ca href=\"#XSS\" class=\"headerlink\" title=\"XSS\"\u003e\u003c/a\u003eXSS\u003c/h2\u003e\u003ch3 id=\"概念\"\u003e\u003ca href=\"#概念\" class=\"headerlink\" title=\"概念\"\u003e\u003c/a\u003e概念\u003c/h3\u003e\u003cp\u003e\u003cstrong\u003e\u003ccode\u003e跨站脚本（Cross-site scripting，通常简称为XSS）\u003c/code\u003e\u003c/strong\u003e 是一种网站应用程序的安全漏洞攻击，是代码注入的一种。它允许恶意用户将代码注入到网页上，其他用户在观看网页时就会受到影响。这类攻击通常包含了 HTML 以及用户端脚本语言。\u003c/p\u003e\n\u003cp\u003eXSS 攻击示例：\u003c/p\u003e\n\u003cp\u003e假如有下面一个 textbox\u003c/p\u003e\n\u003cfigure class=\"highlight html\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"tag\"\u003e\u0026lt;\u003cspan class=\"name\"\u003einput\u003c/span\u003e \u003cspan class=\"attr\"\u003etype\u003c/span\u003e=\u003cspan class=\"string\"\u003e\u0026#34;text\u0026#34;\u003c/span\u003e \u003cspan class=\"attr\"\u003ename\u003c/span\u003e=\u003cspan class=\"string\"\u003e\u0026#34;address1\u0026#34;\u003c/span\u003e \u003cspan class=\"attr\"\u003evalue\u003c/span\u003e=\u003cspan class=\"string\"\u003e\u0026#34;value1from\u0026#34;\u003c/span\u003e /\u0026gt;\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003evalue1from 是来自用户的输入，如果用户不是输入 value1from,而是输入 \u003ccode\u003e\u0026#34;/\u0026gt;\u0026lt;script\u0026gt;alert(document.cookie)\u0026lt;/script\u0026gt;\u0026lt;!-\u003c/code\u003e 那么就会变成：\u003c/p\u003e\n\u003cfigure class=\"highlight html\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"tag\"\u003e\u0026lt;\u003cspan class=\"name\"\u003einput\u003c/span\u003e \u003cspan class=\"attr\"\u003etype\u003c/span\u003e=\u003cspan class=\"string\"\u003e\u0026#34;text\u0026#34;\u003c/span\u003e \u003cspan class=\"attr\"\u003ename\u003c/span\u003e=\u003cspan class=\"string\"\u003e\u0026#34;address1\u0026#34;\u003c/span\u003e \u003cspan class=\"attr\"\u003evalue\u003c/span\u003e=\u003cspan class=\"string\"\u003e\u0026#34;\u0026#34;\u003c/span\u003e /\u0026gt;\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"tag\"\u003e\u0026lt;\u003cspan class=\"name\"\u003escript\u003c/span\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"language-javascript\"\u003e\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"language-javascript\"\u003e  \u003cspan class=\"title function_\"\u003ealert\u003c/span\u003e(\u003cspan class=\"variable language_\"\u003edocument\u003c/span\u003e.\u003cspan class=\"property\"\u003ecookie\u003c/span\u003e)\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"language-javascript\"\u003e\u003c/span\u003e\u003cspan class=\"tag\"\u003e\u0026lt;/\u003cspan class=\"name\"\u003escript\u003c/span\u003e\u0026gt;\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026lt;!- \u0026#34;\u0026gt;\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e嵌入的 JavaScript 代码将会被执行。攻击的威力，取决于用户输入了什么样的脚本。\u003c/p\u003e\n\u003ch3 id=\"攻击手段和目的\"\u003e\u003ca href=\"#攻击手段和目的\" class=\"headerlink\" title=\"攻击手段和目的\"\u003e\u003c/a\u003e攻击手段和目的\u003c/h3\u003e\u003cp\u003e常用的 XSS 攻击手段和目的有：\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e盗用 cookie，获取敏感信息。\u003c/li\u003e\n\u003cli\u003e利用植入 Flash，通过 \u003ccode\u003ecrossdomain\u003c/code\u003e 权限设置进一步获取更高权限；或者利用 Java 等得到类似的操作。\u003c/li\u003e\n\u003cli\u003e利用 \u003ccode\u003eiframe\u003c/code\u003e、\u003ccode\u003eframe\u003c/code\u003e、\u003ccode\u003eXMLHttpRequest\u003c/code\u003e 或上述 Flash 等方式，以（被攻击）用户的身份执行一些管理动作，或执行一些一般的如发微博、加好友、发私信等操作。\u003c/li\u003e\n\u003cli\u003e利用可被攻击的域受到其他域信任的特点，以受信任来源的身份请求一些平时不允许的操作，如进行不当的投票活动。\u003c/li\u003e\n\u003cli\u003e在访问量极大的一些页面上的 XSS 可以攻击一些小型网站，实现 DDoS 攻击的效果。\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"应对手段\"\u003e\u003ca href=\"#应对手段\" class=\"headerlink\" title=\"应对手段\"\u003e\u003c/a\u003e应对手段\u003c/h3\u003e\u003cul\u003e\n\u003cli\u003e\u003cstrong\u003e过滤特殊字符\u003c/strong\u003e - 将用户所提供的内容进行过滤，从而避免 HTML 和 Jascript 代码的运行。如 \u003ccode\u003e\u0026gt;\u003c/code\u003e 转义为 \u003ccode\u003e\u0026amp;gt\u003c/code\u003e、\u003ccode\u003e\u0026lt;\u003c/code\u003e 转义为 \u003ccode\u003e\u0026amp;lt\u003c/code\u003e 等，就可以防止大部分攻击。为了避免对不必要的内容错误转移，如 \u003ccode\u003e3\u0026lt;5\u003c/code\u003e 中的 \u003ccode\u003e\u0026lt;\u003c/code\u003e 需要进行文本匹配后再转移，如：\u003ccode\u003e\u0026lt;img src=\u003c/code\u003e 这样的上下文中的 \u003ccode\u003e\u0026lt;\u003c/code\u003e 才转义。\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003e设置 Cookie 为 HttpOnly\u003c/strong\u003e - 设置了 HttpOnly 的 Cookie 可以防止 JavaScript 脚本调用，就无法通过 document.cookie 获取用户 Cookie 信息。\u003c/li\u003e\n\u003c/ul\u003e\n\u003cblockquote\u003e\n\u003cp\u003e:point_right: 参考阅读：\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca target=\"_blank\" rel=\"noopener\" href=\"https://zh.wikipedia.org/wiki/%E8%B7%A8%E7%B6%B2%E7%AB%99%E6%8C%87%E4%BB%A4%E7%A2%BC\"\u003eWiki 词条 - 跨站脚本\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca target=\"_blank\" rel=\"noopener\" href=\"https://www.cnblogs.com/TankXiao/archive/2012/03/21/2337194.html\"\u003eWeb 安全测试之 XSS\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/blockquote\u003e\n\u003ch2 id=\"CSRF\"\u003e\u003ca href=\"#CSRF\" class=\"headerlink\" title=\"CSRF\"\u003e\u003c/a\u003eCSRF\u003c/h2\u003e\u003ch3 id=\"概念-1\"\u003e\u003ca href=\"#概念-1\" class=\"headerlink\" title=\"概念\"\u003e\u003c/a\u003e概念\u003c/h3\u003e\u003cp\u003e**\u003ccode\u003e跨站请求伪造（Cross-site request forgery，CSRF）\u003c/code\u003e**，也被称为 one-click attack 或者 session riding，通常缩写为 CSRF 或者 XSRF。它是一种挟持用户在当前已登录的 Web 应用程序上执行非本意的操作的攻击方法。和跨站脚本（XSS）相比，XSS 利用的是用户对指定网站的信任，CSRF 利用的是网站对用户网页浏览器的信任。\u003c/p\u003e\n\u003ch3 id=\"攻击手段和目的-1\"\u003e\u003ca href=\"#攻击手段和目的-1\" class=\"headerlink\" title=\"攻击手段和目的\"\u003e\u003c/a\u003e攻击手段和目的\u003c/h3\u003e\u003cp\u003e可以如此理解 CSRF：攻击者盗用了你的身份，以你的名义发送恶意请求。\u003c/p\u003e\n\u003cp\u003eCSRF 能做的事太多：\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e以你名义发送邮件，发消息\u003c/li\u003e\n\u003cli\u003e用你的账号购买商品\u003c/li\u003e\n\u003cli\u003e用你的名义完成虚拟货币转账\u003c/li\u003e\n\u003cli\u003e泄露个人隐私\u003c/li\u003e\n\u003cli\u003e…\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"应对手段-1\"\u003e\u003ca href=\"#应对手段-1\" class=\"headerlink\" title=\"应对手段\"\u003e\u003c/a\u003e应对手段\u003c/h3\u003e\u003cul\u003e\n\u003cli\u003e\u003cstrong\u003e表单 Token\u003c/strong\u003e - CSRF 是一个伪造用户请求的操作，所以需要构造用户请求的所有参数才可以。表单 Token 通过在请求参数中添加随机数的办法来阻止攻击者获得所有请求参数。\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003e验证码\u003c/strong\u003e - 请求提交时，需要用户输入验证码，以避免用户在不知情的情况下被攻击者伪造请求。\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eReferer check\u003c/strong\u003e - HTTP 请求头的 Referer 域中记录着请求资源，可通过检查请求来源，验证其是否合法。\u003c/li\u003e\n\u003c/ul\u003e\n\u003cblockquote\u003e\n\u003cp\u003e:point_right: 参考阅读：\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca target=\"_blank\" rel=\"noopener\" href=\"https://zh.wikipedia.org/wiki/%E8%B7%A8%E7%AB%99%E8%AF%B7%E6%B1%82%E4%BC%AA%E9%80%A0\"\u003eWiki 词条 - 跨站请求伪造\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca target=\"_blank\" rel=\"noopener\" href=\"http://www.cnblogs.com/hyddd/archive/2009/04/09/1432744.html\"\u003e浅谈 CSRF 攻击方式\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca target=\"_blank\" rel=\"noopener\" href=\"https://zhuanlan.zhihu.com/p/22521378\"\u003e“每日一题”CSRF 是什么？\u003c/a\u003e\u003ca target=\"_blank\" rel=\"noopener\" href=\"https://zhuanlan.zhihu.com/p/22521378\"\u003e“每日一题”CSRF 是什么？\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca target=\"_blank\" rel=\"noopener\" href=\"https://www.jianshu.com/p/855395f9603b\"\u003eWEB 安全之-CSRF（跨站请求伪造）\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/blockquote\u003e\n\u003ch2 id=\"SQL-注入\"\u003e\u003ca href=\"#SQL-注入\" class=\"headerlink\" title=\"SQL 注入\"\u003e\u003c/a\u003eSQL 注入\u003c/h2\u003e\u003ch3 id=\"概念-2\"\u003e\u003ca href=\"#概念-2\" class=\"headerlink\" title=\"概念\"\u003e\u003c/a\u003e概念\u003c/h3\u003e\u003cp\u003e**\u003ccode\u003eSQL 注入攻击（SQL injection）\u003c/code\u003e**，是发生于应用程序之数据层的安全漏洞。简而言之，是在输入的字符串之中注入 SQL 指令，在设计不良的程序当中忽略了检查，那么这些注入进去的指令就会被数据库服务器误认为是正常的 SQL 指令而运行，因此遭到破坏或是入侵。\u003c/p\u003e\n\u003cp\u003e攻击示例：\u003c/p\u003e\n\u003cp\u003e考虑以下简单的登录表单：\u003c/p\u003e\n\u003cfigure class=\"highlight html\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"tag\"\u003e\u0026lt;\u003cspan class=\"name\"\u003eform\u003c/span\u003e \u003cspan class=\"attr\"\u003eaction\u003c/span\u003e=\u003cspan class=\"string\"\u003e\u0026#34;/login\u0026#34;\u003c/span\u003e \u003cspan class=\"attr\"\u003emethod\u003c/span\u003e=\u003cspan class=\"string\"\u003e\u0026#34;POST\u0026#34;\u003c/span\u003e\u0026gt;\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  \u003cspan class=\"tag\"\u003e\u0026lt;\u003cspan class=\"name\"\u003ep\u003c/span\u003e\u0026gt;\u003c/span\u003eUsername: \u003cspan class=\"tag\"\u003e\u0026lt;\u003cspan class=\"name\"\u003einput\u003c/span\u003e \u003cspan class=\"attr\"\u003etype\u003c/span\u003e=\u003cspan class=\"string\"\u003e\u0026#34;text\u0026#34;\u003c/span\u003e \u003cspan class=\"attr\"\u003ename\u003c/span\u003e=\u003cspan class=\"string\"\u003e\u0026#34;username\u0026#34;\u003c/span\u003e /\u0026gt;\u003c/span\u003e\u003cspan class=\"tag\"\u003e\u0026lt;/\u003cspan class=\"name\"\u003ep\u003c/span\u003e\u0026gt;\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  \u003cspan class=\"tag\"\u003e\u0026lt;\u003cspan class=\"name\"\u003ep\u003c/span\u003e\u0026gt;\u003c/span\u003ePassword: \u003cspan class=\"tag\"\u003e\u0026lt;\u003cspan class=\"name\"\u003einput\u003c/span\u003e \u003cspan class=\"attr\"\u003etype\u003c/span\u003e=\u003cspan class=\"string\"\u003e\u0026#34;password\u0026#34;\u003c/span\u003e \u003cspan class=\"attr\"\u003ename\u003c/span\u003e=\u003cspan class=\"string\"\u003e\u0026#34;password\u0026#34;\u003c/span\u003e /\u0026gt;\u003c/span\u003e\u003cspan class=\"tag\"\u003e\u0026lt;/\u003cspan class=\"name\"\u003ep\u003c/span\u003e\u0026gt;\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  \u003cspan class=\"tag\"\u003e\u0026lt;\u003cspan class=\"name\"\u003ep\u003c/span\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"tag\"\u003e\u0026lt;\u003cspan class=\"name\"\u003einput\u003c/span\u003e \u003cspan class=\"attr\"\u003etype\u003c/span\u003e=\u003cspan class=\"string\"\u003e\u0026#34;submit\u0026#34;\u003c/span\u003e \u003cspan class=\"attr\"\u003evalue\u003c/span\u003e=\u003cspan class=\"string\"\u003e\u0026#34;登陆\u0026#34;\u003c/span\u003e /\u0026gt;\u003c/span\u003e\u003cspan class=\"tag\"\u003e\u0026lt;/\u003cspan class=\"name\"\u003ep\u003c/span\u003e\u0026gt;\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"tag\"\u003e\u0026lt;/\u003cspan class=\"name\"\u003eform\u003c/span\u003e\u0026gt;\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e我们的处理里面的 SQL 可能是这样的：\u003c/p\u003e\n\u003cfigure class=\"highlight sql\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003eusername:\u003cspan class=\"operator\"\u003e=\u003c/span\u003er.Form.Get(\u0026#34;username\u0026#34;)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003epassword:\u003cspan class=\"operator\"\u003e=\u003c/span\u003er.Form.Get(\u0026#34;password\u0026#34;)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"keyword\"\u003esql\u003c/span\u003e:\u003cspan class=\"operator\"\u003e=\u003c/span\u003e\u0026#34;SELECT * FROM user WHERE username=\u0026#39;\u0026#34;\u003cspan class=\"operator\"\u003e+\u003c/span\u003eusername\u003cspan class=\"operator\"\u003e+\u003c/span\u003e\u0026#34;\u0026#39; AND password=\u0026#39;\u0026#34;\u003cspan class=\"operator\"\u003e+\u003c/span\u003epassword\u003cspan class=\"operator\"\u003e+\u003c/span\u003e\u0026#34;\u0026#39;\u0026#34;\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e如果用户的输入的用户名如下，密码任意\u003c/p\u003e\n\u003cfigure class=\"highlight sql\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003emyuser\u003cspan class=\"string\"\u003e\u0026#39; or \u0026#39;\u003c/span\u003efoo\u003cspan class=\"string\"\u003e\u0026#39; = \u0026#39;\u003c/span\u003efoo\u003cspan class=\"string\"\u003e\u0026#39; --\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e那么我们的 SQL 变成了如下所示：\u003c/p\u003e\n\u003cfigure class=\"highlight sql\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"keyword\"\u003eSELECT\u003c/span\u003e \u003cspan class=\"operator\"\u003e*\u003c/span\u003e \u003cspan class=\"keyword\"\u003eFROM\u003c/span\u003e \u003cspan class=\"keyword\"\u003euser\u003c/span\u003e \u003cspan class=\"keyword\"\u003eWHERE\u003c/span\u003e username\u003cspan class=\"operator\"\u003e=\u003c/span\u003e\u003cspan class=\"string\"\u003e\u0026#39;myuser\u0026#39;\u003c/span\u003e \u003cspan class=\"keyword\"\u003eor\u003c/span\u003e \u003cspan class=\"string\"\u003e\u0026#39;foo\u0026#39;\u003c/span\u003e \u003cspan class=\"operator\"\u003e=\u003c/span\u003e \u003cspan class=\"string\"\u003e\u0026#39;foo\u0026#39;\u003c/span\u003e \u003cspan class=\"comment\"\u003e--\u0026#39;\u0026#39; AND password=\u0026#39;xxx\u0026#39;\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e在 SQL 里面 \u003ccode\u003e--\u003c/code\u003e 是注释标记，所以查询语句会在此中断。这就让攻击者在不知道任何合法用户名和密码的情况下成功登录了。\u003c/p\u003e\n\u003cp\u003e对于 MSSQL 还有更加危险的一种 SQL 注入，就是控制系统，下面这个可怕的例子将演示如何在某些版本的 MSSQL 数据库上执行系统命令。\u003c/p\u003e\n\u003cfigure class=\"highlight sql\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"keyword\"\u003esql\u003c/span\u003e:\u003cspan class=\"operator\"\u003e=\u003c/span\u003e\u0026#34;SELECT * FROM products WHERE name LIKE \u0026#39;%\u0026#34;\u003cspan class=\"operator\"\u003e+\u003c/span\u003eprod\u003cspan class=\"operator\"\u003e+\u003c/span\u003e\u0026#34;%\u0026#39;\u0026#34;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eDb.Exec(\u003cspan class=\"keyword\"\u003esql\u003c/span\u003e)\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e如果攻击提交 \u003ccode\u003ea%\u0026#39; exec master..xp_cmdshell \u0026#39;net user test testpass /ADD\u0026#39; --\u003c/code\u003e 作为变量 prod 的值，那么 sql 将会变成\u003c/p\u003e\n\u003cfigure class=\"highlight sql\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"keyword\"\u003esql\u003c/span\u003e:\u003cspan class=\"operator\"\u003e=\u003c/span\u003e\u0026#34;SELECT * FROM products WHERE name LIKE \u0026#39;%a%\u0026#39; exec master..xp_cmdshell \u0026#39;net user test testpass /ADD\u0026#39;--%\u0026#39;\u0026#34;\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003eMSSQL 服务器会执行这条 SQL 语句，包括它后面那个用于向系统添加新用户的命令。如果这个程序是以 sa 运行而 MSSQLSERVER 服务又有足够的权限的话，攻击者就可以获得一个系统帐号来访问主机了。\u003c/p\u003e\n\u003cp\u003e虽然以上的例子是针对某一特定的数据库系统的，但是这并不代表不能对其它数据库系统实施类似的攻击。针对这种安全漏洞，只要使用不同方法，各种数据库都有可能遭殃。\u003c/p\u003e\n\u003ch3 id=\"攻击手段和目的-2\"\u003e\u003ca href=\"#攻击手段和目的-2\" class=\"headerlink\" title=\"攻击手段和目的\"\u003e\u003c/a\u003e攻击手段和目的\u003c/h3\u003e\u003cul\u003e\n\u003cli\u003e数据表中的数据外泄，例如个人机密数据，账户数据，密码等。\u003c/li\u003e\n\u003cli\u003e数据结构被黑客探知，得以做进一步攻击（例如 \u003ccode\u003eSELECT * FROM sys.tables\u003c/code\u003e）。\u003c/li\u003e\n\u003cli\u003e数据库服务器被攻击，系统管理员账户被窜改（例如 \u003ccode\u003eALTER LOGIN sa WITH PASSWORD=\u0026#39;xxxxxx\u0026#39;\u003c/code\u003e）。\u003c/li\u003e\n\u003cli\u003e获取系统较高权限后，有可能得以在网页加入恶意链接、恶意代码以及 XSS 等。\u003c/li\u003e\n\u003cli\u003e经由数据库服务器提供的操作系统支持，让黑客得以修改或控制操作系统（例如 xp_cmdshell “net stop iisadmin”可停止服务器的 IIS 服务）。\u003c/li\u003e\n\u003cli\u003e破坏硬盘数据，瘫痪全系统（例如 xp_cmdshell “FORMAT C:”）。\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"应对手段-2\"\u003e\u003ca href=\"#应对手段-2\" class=\"headerlink\" title=\"应对手段\"\u003e\u003c/a\u003e应对手段\u003c/h3\u003e\u003cul\u003e\n\u003cli\u003e\u003cstrong\u003e使用参数化查询\u003c/strong\u003e - 建议使用数据库提供的参数化查询接口，参数化的语句使用参数而不是将用户输入变量嵌入到 SQL 语句中，即不要直接拼接 SQL 语句。例如使用 database/sql 里面的查询函数 \u003ccode\u003ePrepare\u003c/code\u003e 和 \u003ccode\u003eQuery\u003c/code\u003e ，或者 \u003ccode\u003eExec(query string, args ...interface{})\u003c/code\u003e。\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003e单引号转换\u003c/strong\u003e - 在组合 SQL 字符串时，先针对所传入的参数进行字符替换（将单引号字符替换为连续 2 个单引号字符）。\u003c/li\u003e\n\u003c/ul\u003e\n\u003cblockquote\u003e\n\u003cp\u003e:point_right: 参考阅读：\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca target=\"_blank\" rel=\"noopener\" href=\"https://zh.wikipedia.org/wiki/SQL%E8%B3%87%E6%96%99%E9%9A%B1%E7%A2%BC%E6%94%BB%E6%93%8A\"\u003eWiki 词条 - SQL 注入攻击\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca target=\"_blank\" rel=\"noopener\" href=\"https://github.com/astaxie/build-web-application-with-golang/blob/master/zh/09.4.md\"\u003e避免 SQL 注入\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca target=\"_blank\" rel=\"noopener\" href=\"http://blog.jobbole.com/83092/\"\u003e实例讲解 SQL 注入攻击\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/blockquote\u003e\n\u003ch2 id=\"DoS\"\u003e\u003ca href=\"#DoS\" class=\"headerlink\" title=\"DoS\"\u003e\u003c/a\u003eDoS\u003c/h2\u003e\u003cp\u003e**\u003ccode\u003e拒绝服务攻击（denial-of-service attack, DoS）亦称洪水攻击\u003c/code\u003e**，是一种网络攻击手法，其目的在于使目标电脑的网络或系统资源耗尽，使服务暂时中断或停止，导致其正常用户无法访问。\u003c/p\u003e\n\u003cp\u003e当黑客使用网络上两个或以上被攻陷的电脑作为“僵尸”向特定的目标发动“拒绝服务”式攻击时，称为分布式拒绝服务攻击（distributed denial-of-service attack，缩写：DDoS attack、DDoS）。\u003c/p\u003e\n\u003ch3 id=\"攻击方式\"\u003e\u003ca href=\"#攻击方式\" class=\"headerlink\" title=\"攻击方式\"\u003e\u003c/a\u003e攻击方式\u003c/h3\u003e\u003cul\u003e\n\u003cli\u003e带宽消耗型攻击\u003c/li\u003e\n\u003cli\u003e资源消耗型攻击\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"应对手段-3\"\u003e\u003ca href=\"#应对手段-3\" class=\"headerlink\" title=\"应对手段\"\u003e\u003c/a\u003e应对手段\u003c/h3\u003e\u003cul\u003e\n\u003cli\u003e\u003cstrong\u003e防火墙\u003c/strong\u003e - 允许或拒绝特定通讯协议，端口或 IP 地址。当攻击从少数不正常的 IP 地址发出时，可以简单的使用拒绝规则阻止一切从攻击源 IP 发出的通信。\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003e路由器、交换机\u003c/strong\u003e - 具有速度限制和访问控制能力。\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003e流量清洗\u003c/strong\u003e - 通过采用抗 DoS 软件处理，将正常流量和恶意流量区分开。\u003c/li\u003e\n\u003c/ul\u003e\n\u003cblockquote\u003e\n\u003cp\u003e:point_right: 参考阅读：\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca target=\"_blank\" rel=\"noopener\" href=\"https://zh.wikipedia.org/wiki/%E9%98%BB%E6%96%B7%E6%9C%8D%E5%8B%99%E6%94%BB%E6%93%8A\"\u003e拒绝服务攻击\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/blockquote\u003e\n\n    \u003c/div\u003e",
  "Date": "2022-11-16T07:51:30Z",
  "Author": "钝悟 ◾ Dunwu"
}