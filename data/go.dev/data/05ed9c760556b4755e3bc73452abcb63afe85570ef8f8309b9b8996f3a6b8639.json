{
  "Source": "go.dev",
  "Title": "The Go Programming Language turns two",
  "Link": "https://go.dev/blog/2years",
  "Content": "\u003cdiv class=\"Article\" data-slug=\"/blog/2years\"\u003e\n    \n    \u003ch1 class=\"small\"\u003e\u003ca href=\"/blog/\"\u003eThe Go Blog\u003c/a\u003e\u003c/h1\u003e\n    \n\n    \u003ch1\u003eThe Go Programming Language turns two\u003c/h1\u003e\n      \n      \u003cp class=\"author\"\u003e\n      Andrew Gerrand\u003cbr/\u003e\n      10 November 2011\n      \u003c/p\u003e\n      \n      \u003cp\u003eTwo years ago a small team at Google went public with their fledgling project -\nthe Go Programming Language.\nThey presented a language spec, two compilers,\na modest standard library, some novel tools,\nand plenty of accurate (albeit succinct) documentation.\nThey watched with excitement as programmers around the world began to play with Go.\nThe team continued to iterate and improve on what they had built,\nand were gradually joined by dozens - and then hundreds - of programmers\nfrom the open source community.\nThe Go Authors went on to produce lots of libraries,\nnew tools, and reams of \u003ca href=\"/doc/docs.html\"\u003edocumentation\u003c/a\u003e.\nThey celebrated a successful year in the public eye with a \u003ca href=\"/blog/go-one-year-ago-today\"\u003eblog post\u003c/a\u003e\nlast November that concluded “Go is certainly ready for production use,\nbut there is still room for improvement.\nOur focus for the immediate future is making Go programs faster and more\nefficient in the context of high performance systems.”\u003c/p\u003e\n\u003cp\u003eToday is the second anniversary of Go’s release,\nand Go is faster and more stable than ever.\nCareful tuning of Go’s code generators, concurrency primitives,\ngarbage collector, and core libraries have increased the performance of Go programs,\nand native support for \u003ca href=\"/blog/profiling-go-programs\"\u003eprofiling\u003c/a\u003e\nand \u003ca href=\"/blog/debugging-go-programs-with-gnu-debugger\"\u003edebugging\u003c/a\u003e\nmakes it easier to detect and remove performance issues in user code.\nGo is also now easier to learn with \u003ca href=\"/tour/\"\u003eA Tour of Go\u003c/a\u003e,\nan interactive tutorial you can take from the comfort of your web browser.\u003c/p\u003e\n\u003cp\u003eThis year we introduced the experimental \u003ca href=\"http://code.google.com/appengine/docs/go/\" rel=\"noreferrer\" target=\"_blank\"\u003eGo runtime\u003c/a\u003e\nfor Google’s App Engine platform,\nand we have been steadily increasing the Go runtime’s support for App Engine’s APIs.\nJust this week we released \u003ca href=\"http://code.google.com/appengine/downloads.html\" rel=\"noreferrer\" target=\"_blank\"\u003eversion 1.6.0\u003c/a\u003e\nof the Go App Engine SDK,\nwhich includes support for \u003ca href=\"http://code.google.com/appengine/docs/go/backends/overview.html\" rel=\"noreferrer\" target=\"_blank\"\u003ebackends\u003c/a\u003e\n(long-running processes),\nfiner control over datastore indexes, and various other improvements.\nToday, the Go runtime is near feature parity with - and is a viable alternative\nto - the Python and Java runtimes.\nIn fact, we now serve \u003ca href=\"/\"\u003egolang.org\u003c/a\u003e by running a version\nof \u003ca href=\"/cmd/godoc/\"\u003egodoc\u003c/a\u003e on the App Engine service.\u003c/p\u003e\n\u003cp\u003eWhile 2010 was a year of discovery and experimentation,\n2011 was a year of fine tuning and planning for the future.\nThis year we issued several “\u003ca href=\"/doc/devel/release.html\"\u003erelease\u003c/a\u003e”\nversions of Go that were more reliable and better supported than weekly snapshots.\nWe also introduced \u003ca href=\"/cmd/gofix/\"\u003egofix\u003c/a\u003e to take the\npain out of migrating to newer releases.\nFurthermore, last month we announced a \u003ca href=\"/blog/preview-of-go-version-1\"\u003eplan for Go version 1\u003c/a\u003e -\na release that will be supported for years to come.\nWork toward Go 1 is already underway and you can observe our progress by\nthe latest weekly snapshot at \u003ca href=\"http://weekly.golang.org/pkg/\" rel=\"noreferrer\" target=\"_blank\"\u003eweekly.golang.org\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003eThe plan is to launch Go 1 in early 2012.\nWe hope to bring the Go App Engine runtime out of “experimental” status at the same time.\u003c/p\u003e\n\u003cp\u003eBut that’s not all. 2011 was an exciting year for the gopher, too.\nHe has manifested himself as a plush toy (a highly prized gift at Google\nI/O and other Go talks) and in vinyl form (received by every attendee at\nOSCON and now available at the \u003ca href=\"http://www.googlestore.com/Fun/Go+Gopher+Figurine.axd\" rel=\"noreferrer\" target=\"_blank\"\u003eGoogle Store\u003c/a\u003e).\u003c/p\u003e\n\u003cdiv class=\"image\"\u003e\n  \u003cimg src=\"2years/2years-gophers.jpg\" alt=\"\"/\u003e\n\u003c/div\u003e\n\u003cp\u003eAnd, most surprisingly, at Halloween he made an appearance with his gopher girlfriend!\u003c/p\u003e\n\u003cdiv class=\"image\"\u003e\n  \u003cimg src=\"2years/2years-costume.jpg\" alt=\"\"/\u003e\n\u003c/div\u003e\n\u003cp\u003ePhotograph by \u003ca href=\"https://plus.google.com/106640494112897458359/posts\" rel=\"noreferrer\" target=\"_blank\"\u003eChris Nokleberg\u003c/a\u003e.\u003c/p\u003e\n\n    \u003c/div\u003e",
  "Date": "2011-11-10T00:00:00Z",
  "Author": "Andrew Gerrand"
}