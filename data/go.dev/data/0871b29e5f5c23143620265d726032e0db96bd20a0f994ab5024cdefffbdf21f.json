{
  "Source": "go.dev",
  "Title": "A preview of Go version 1",
  "Link": "https://go.dev/blog/go1-preview",
  "Content": "\u003cdiv class=\"Article\" data-slug=\"/blog/go1-preview\"\u003e\n    \n    \u003ch1 class=\"small\"\u003e\u003ca href=\"/blog/\"\u003eThe Go Blog\u003c/a\u003e\u003c/h1\u003e\n    \n\n    \u003ch1\u003eA preview of Go version 1\u003c/h1\u003e\n      \n      \u003cp class=\"author\"\u003e\n      Russ Cox\u003cbr/\u003e\n      5 October 2011\n      \u003c/p\u003e\n      \n      \u003cp\u003eWe want to be able to provide a stable base for people using Go.\nPeople should be able to write Go programs and expect that they will continue\nto compile and run without change,\non a timescale of years.\nSimilarly, people should be able to write books about Go,\nbe able to say which version of Go the book is describing,\nand have that version number still be meaningful much later.\nNone of these properties is true for Go today.\u003c/p\u003e\n\u003cp\u003eWe propose to issue a Go release early next year that will be called “Go version 1”,\nGo 1 for short, that will be the first Go release to be stable in this way.\nCode that compiles in Go version 1 should,\nwith few exceptions, continue to compile throughout the lifetime of that version,\nas we issue updates and bug fixes such as Go version 1.1, 1.2, and so on.\nIt will also be maintained with fixes for bugs and security flaws even as\nother versions may evolve.\nAlso, production environments such as Google App Engine will support it\nfor an extended time.\u003c/p\u003e\n\u003cp\u003eGo version 1 will be a stable language with stable libraries.\nOther than critical fixes, changes made to the library and packages for versions 1.1,\n1.2 and so on may add functionality but will not break existing Go version 1 programs.\u003c/p\u003e\n\u003cp\u003eOur goal is for Go 1 to be a stable version of today’s Go,\nnot a wholesale rethinking of the language.\nIn particular, we are explicitly resisting any efforts to design new language\nfeatures “by committee.”\u003c/p\u003e\n\u003cp\u003eHowever, there are various changes to the Go language and packages that\nwe have intended for some time and prototyped but have not deployed yet,\nprimarily because they are significant and backwards-incompatible.\nIf Go 1 is to be long-lasting, it is important that we plan,\nannounce, implement, and test these changes as part of the preparation of Go 1,\nrather than delay them until after it is released and thereby introduce\ndivergence that contradicts our goals.\u003c/p\u003e\n\u003cp\u003eToday, we are publishing our preliminary \u003ca href=\"https://docs.google.com/document/pub?id=1ny8uI-_BHrDCZv_zNBSthNKAMX_fR_0dc6epA6lztRE\" rel=\"noreferrer\" target=\"_blank\"\u003eplan for Go 1\u003c/a\u003e\nfor feedback from the Go community.\nIf you have feedback, please reply to the \u003ca href=\"http://groups.google.com/group/golang-nuts/browse_thread/thread/badc4f323431a4f6\" rel=\"noreferrer\" target=\"_blank\"\u003ethread on the golang-nuts mailing list\u003c/a\u003e.\u003c/p\u003e\n\n    \u003c/div\u003e",
  "Date": "2011-10-05T00:00:00Z",
  "Author": "Russ Cox"
}