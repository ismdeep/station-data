{
  "Source": "go.dev",
  "Title": "Go 1.17 is released",
  "Link": "https://go.dev/blog/go1.17",
  "Content": "\u003cdiv class=\"Article\" data-slug=\"/blog/go1.17\"\u003e\n    \n    \u003ch1 class=\"small\"\u003e\u003ca href=\"/blog/\"\u003eThe Go Blog\u003c/a\u003e\u003c/h1\u003e\n    \n\n    \u003ch1\u003eGo 1.17 is released\u003c/h1\u003e\n      \n      \u003cp class=\"author\"\u003e\n      Matt Pearring and Alex Rakoczy\u003cbr/\u003e\n      16 August 2021\n      \u003c/p\u003e\n      \n      \u003cp\u003eToday the Go team is thrilled to release Go 1.17, which you can get by visiting the\n\u003ca href=\"/dl/\"\u003edownload page\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003eThis release brings additional improvements to the compiler, namely a\n\u003ca href=\"/doc/go1.17#compiler\"\u003enew way of passing function arguments and results\u003c/a\u003e.\nThis change has shown about a 5% performance improvement in Go programs and reduction in binary\nsizes of around 2% for amd64 platforms. Support for more platforms will come in future releases.\u003c/p\u003e\n\u003cp\u003eGo 1.17 also adds support for the\n\u003ca href=\"/doc/go1.17#ports\"\u003e64-bit ARM architecture on Windows\u003c/a\u003e, letting gophers run\nGo natively on more devices.\u003c/p\u003e\n\u003cp\u003eWe’ve also introduced \u003ca href=\"/doc/go1.17#go-command\"\u003epruned module graphs\u003c/a\u003e in this\nrelease. Modules that specify \u003ccode\u003ego 1.17\u003c/code\u003e or higher in their \u003ccode\u003ego.mod\u003c/code\u003e file will have their module graphs\ninclude only the immediate dependencies of other Go 1.17 modules, not their full transitive\ndependencies. This should help avoid the need to download or read \u003ccode\u003ego.mod\u003c/code\u003e files for otherwise\nirrelevant dependencies—saving time in everyday development.\u003c/p\u003e\n\u003cp\u003eGo 1.17 comes with three small \u003ca href=\"/doc/go1.17#language\"\u003echanges to the language\u003c/a\u003e.\nThe first two are new functions in the \u003ccode\u003eunsafe\u003c/code\u003e package to make it simpler for programs to conform\nto the \u003ccode\u003eunsafe.Pointer\u003c/code\u003e rules: \u003ccode\u003eunsafe.Add\u003c/code\u003e allows for\n\u003ca href=\"/pkg/unsafe#Add\"\u003esafer pointer arithmetic\u003c/a\u003e, while \u003ccode\u003eunsafe.Slice\u003c/code\u003e allows for\n\u003ca href=\"/pkg/unsafe#Slice\"\u003esafer conversions of pointers to slices\u003c/a\u003e. The third change is\nan extension to the language type conversion rules to allow conversions from\n\u003ca href=\"/ref/spec#Conversions_from_slice_to_array_pointer\"\u003eslices to array pointers\u003c/a\u003e,\nprovided the slice is at least as large as the array at runtime.\u003c/p\u003e\n\u003cp\u003eFinally there are quite a few other improvements and bug fixes, including verification improvements\nto \u003ca href=\"/doc/go1.17#crypto/x509\"\u003ecrypto/x509\u003c/a\u003e, and alterations to\n\u003ca href=\"/doc/go1.17#semicolons\"\u003eURL query parsing\u003c/a\u003e. For a complete list of changes and\nmore information about the improvements above, see the\n\u003ca href=\"/doc/go1.17\"\u003efull release notes\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003eThanks to everyone who contributed to this release by writing code, filing bugs, sharing feedback,\nand testing the beta and release candidates. Your efforts helped to ensure that Go 1.17 is as stable\nas possible. As always, if you notice any problems, please\n\u003ca href=\"/issue/new\"\u003efile an issue\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003eWe hope you enjoy the new release!\u003c/p\u003e\n\n    \u003c/div\u003e",
  "Date": "2021-08-16T00:00:00Z",
  "Author": "Matt Pearring and Alex Rakoczy"
}