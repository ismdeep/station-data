{
  "Source": "go.dev",
  "Title": "Go 1.8 is released",
  "Link": "https://go.dev/blog/go1.8",
  "Content": "\u003cdiv class=\"Article\" data-slug=\"/blog/go1.8\"\u003e\n    \n    \u003ch1 class=\"small\"\u003e\u003ca href=\"/blog/\"\u003eThe Go Blog\u003c/a\u003e\u003c/h1\u003e\n    \n\n    \u003ch1\u003eGo 1.8 is released\u003c/h1\u003e\n      \n      \u003cp class=\"author\"\u003e\n      Chris Broadfoot\u003cbr/\u003e\n      16 February 2017\n      \u003c/p\u003e\n      \n      \u003cp\u003eToday the Go team is happy to announce the release of Go 1.8.\nYou can get it from the \u003ca href=\"/dl/\"\u003edownload page\u003c/a\u003e.\nThere are significant performance improvements and changes across the standard library.\u003c/p\u003e\n\u003cp\u003eThe compiler back end introduced in \u003ca href=\"/blog/go1.7\"\u003eGo 1.7\u003c/a\u003e for 64-bit x86 is now used\non all architectures, and those architectures should see significant \u003ca href=\"/doc/go1.8#compiler\"\u003eperformance improvements\u003c/a\u003e.\nFor instance, the CPU time required by our benchmark programs was reduced by 20-30% on 32-bit ARM systems.\nThere are also some modest performance improvements in this release for 64-bit x86 systems.\nThe compiler and linker have been made faster.\nCompile times should be improved by about 15% over Go 1.7.\nThere is still more work to be done in this area: expect faster compilation speeds in future releases.\u003c/p\u003e\n\u003cp\u003eGarbage collection pauses should be \u003ca href=\"/doc/go1.8#gc\"\u003esignificantly shorter\u003c/a\u003e,\nusually under 100 microseconds and often as low as 10 microseconds.\u003c/p\u003e\n\u003cp\u003eThe HTTP server adds support for \u003ca href=\"/doc/go1.8#h2push\"\u003eHTTP/2 Push\u003c/a\u003e,\nallowing servers to preemptively send responses to a client.\nThis is useful for minimizing network latency by eliminating roundtrips.\nThe HTTP server also adds support for \u003ca href=\"/doc/go1.8#http_shutdown\"\u003egraceful shutdown\u003c/a\u003e,\nallowing servers to minimize downtime by shutting down only after serving all requests that are in flight.\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"/pkg/context/\"\u003eContexts\u003c/a\u003e (added to the standard library in Go 1.7)\nprovide a cancellation and timeout mechanism.\nGo 1.8 \u003ca href=\"/doc/go1.8#more_context\"\u003eadds\u003c/a\u003e support for contexts in more parts of the standard library,\nincluding the \u003ca href=\"/pkg/database/sql\"\u003e\u003ccode\u003edatabase/sql\u003c/code\u003e\u003c/a\u003e and \u003ca href=\"/pkg/net\"\u003e\u003ccode\u003enet\u003c/code\u003e\u003c/a\u003e packages\nand \u003ca href=\"http://beta.golang.org/pkg/net/http/#Server.Shutdown\" rel=\"noreferrer\" target=\"_blank\"\u003e\u003ccode\u003eServer.Shutdown\u003c/code\u003e\u003c/a\u003e in the \u003ccode\u003enet/http\u003c/code\u003e package.\u003c/p\u003e\n\u003cp\u003eItâ€™s now much simpler to sort slices using the newly added \u003ca href=\"/pkg/sort/#Slice\"\u003e\u003ccode\u003eSlice\u003c/code\u003e\u003c/a\u003e\nfunction in the \u003ccode\u003esort\u003c/code\u003e package. For example, to sort a slice of structs by their \u003ccode\u003eName\u003c/code\u003e field:\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003esort.Slice(s, func(i, j int) bool { return s[i].Name \u0026lt; s[j].Name })\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eGo 1.8 includes many more additions, improvements, and fixes.\nFind the complete set of changes, and more information about the improvements listed above, in the\n\u003ca href=\"/doc/go1.8.html\"\u003eGo 1.8 release notes\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003eTo celebrate the release, Go User Groups around the world are holding \u003ca href=\"/wiki/Go-1.8-release-party\"\u003erelease parties\u003c/a\u003e this week.\nRelease parties have become a tradition in the Go community, so if you missed out this time, keep an eye out when 1.9 nears.\u003c/p\u003e\n\u003cp\u003eThank you to over 200 contributors who helped with this release.\u003c/p\u003e\n\n    \u003c/div\u003e",
  "Date": "2017-02-16T00:00:00Z",
  "Author": "Chris Broadfoot"
}