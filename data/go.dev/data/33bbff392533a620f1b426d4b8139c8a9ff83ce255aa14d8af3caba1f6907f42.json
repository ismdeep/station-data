{
  "Source": "go.dev",
  "Title": "Go becomes more stable",
  "Link": "https://go.dev/blog/stable-releases",
  "Content": "\u003cdiv class=\"Article\" data-slug=\"/blog/stable-releases\"\u003e\n    \n    \u003ch1 class=\"small\"\u003e\u003ca href=\"/blog/\"\u003eThe Go Blog\u003c/a\u003e\u003c/h1\u003e\n    \n\n    \u003ch1\u003eGo becomes more stable\u003c/h1\u003e\n      \n      \u003cp class=\"author\"\u003e\n      Andrew Gerrand\u003cbr/\u003e\n      16 March 2011\n      \u003c/p\u003e\n      \n      \u003cp\u003eThe Go project is moving fast. As we learn more about Go we are compelled\nto change our tools,\nlibraries, and occasionally even the language itself.\nWe permit backward-incompatible changes so that we can learn from,\nrather than immortalize, our mistakes.\nWe believe flexibility at this stage of Go’s development is essential\nto the project’s development and,\nultimately, its longevity.\u003c/p\u003e\n\u003cp\u003eSince Go’s launch we have been making releases approximately once a week.\nAccompanying each release are \u003ca href=\"/doc/devel/release.html\"\u003enotes describing what changed\u003c/a\u003e,\nwith any backwards-incompatible changes signposted.\nQuestions I hear often are “Is Go stable? How can I be sure that I won’t\nhave to update my Go code every week?” The answer to those questions are\nnow “Yes,” and “You won’t.”\u003c/p\u003e\n\u003cp\u003eWith this week’s release we’re introducing a new release tagging scheme.\nWe intend to continue with our weekly releases,\nbut have renamed the existing tags from \u003ccode\u003erelease\u003c/code\u003e to \u003ccode\u003eweekly\u003c/code\u003e.\nThe \u003ccode\u003erelease\u003c/code\u003e tag will now be applied to one hand-picked stable release each month or two.\nThis more relaxed release schedule should make life easier for the average Go programmer.\u003c/p\u003e\n\u003cp\u003eUsers will still need to update their code periodically (this is the cost\nof using a young language) but with less frequency.\nAn additional benefit is that by tagging stable releases less often we can\nput more effort into automating updates.\nTo this end we have introduced gofix, a tool that will help you update your code.\u003c/p\u003e\n\u003cp\u003eThe revision formerly tagged \u003ccode\u003erelease.2011-03-07.1\u003c/code\u003e (now \u003ccode\u003eweekly.2011-03-07.1\u003c/code\u003e)\nhas been nominated our first stable release,\nand has been given the tag \u003ccode\u003erelease.r56\u003c/code\u003e.\nAs we tag each stable release we will post an announcement to the new \u003ca href=\"http://groups.google.com/group/golang-announce\" rel=\"noreferrer\" target=\"_blank\"\u003egolang-announce\u003c/a\u003e mailing list.\n(Why not \u003ca href=\"http://groups.google.com/group/golang-announce/subscribe\" rel=\"noreferrer\" target=\"_blank\"\u003esubscribe now\u003c/a\u003e?)\u003c/p\u003e\n\u003cp\u003eWhat’s the upshot of all this? You can continue to keep your Go installation\nupdated using \u003ccode\u003ehg update release\u003c/code\u003e,\nbut now you should only need to update when we tag a new stable release.\nIf you wish to stay at the leading edge, you should switch to the weekly\ntag with \u003ccode\u003ehg update weekly\u003c/code\u003e.\u003c/p\u003e\n\u003cp\u003eHappy coding!\u003c/p\u003e\n\n    \u003c/div\u003e",
  "Date": "2011-03-16T00:00:00Z",
  "Author": "Andrew Gerrand"
}