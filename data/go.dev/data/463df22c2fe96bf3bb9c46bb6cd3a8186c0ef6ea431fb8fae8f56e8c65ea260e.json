{
  "Source": "go.dev",
  "Title": "Spotlight on external Go libraries",
  "Link": "https://go.dev/blog/external-libraries",
  "Content": "\u003cdiv class=\"Article\" data-slug=\"/blog/external-libraries\"\u003e\n    \n    \u003ch1 class=\"small\"\u003e\u003ca href=\"/blog/\"\u003eThe Go Blog\u003c/a\u003e\u003c/h1\u003e\n    \n\n    \u003ch1\u003eSpotlight on external Go libraries\u003c/h1\u003e\n      \n      \u003cp class=\"author\"\u003e\n      Andrew Gerrand\u003cbr/\u003e\n      3 June 2011\n      \u003c/p\u003e\n      \n      \u003cp\u003eWhile the Go authors have been working hard at improving Go’s standard library,\nthe greater community has created a growing ecosystem of external libraries.\nIn this post we look at some popular Go libraries and how they can be used.\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"http://labix.org/mgo\" rel=\"noreferrer\" target=\"_blank\"\u003eMgo\u003c/a\u003e (pronounced “mango”) is a MongoDB database driver.\n\u003ca href=\"http://www.mongodb.org/\" rel=\"noreferrer\" target=\"_blank\"\u003eMongoDB\u003c/a\u003e is a \u003ca href=\"http://en.wikipedia.org/wiki/Document-oriented_database\" rel=\"noreferrer\" target=\"_blank\"\u003edocument-oriented database\u003c/a\u003e\nwith a long list of features suitable for \u003ca href=\"http://www.mongodb.org/display/DOCS/Use%2BCases\" rel=\"noreferrer\" target=\"_blank\"\u003ea broad range of uses\u003c/a\u003e.\nThe mgo package provides a rich, idiomatic Go API for working with MongoDB,\nfrom basic operations such as inserting and updating records to the more\nadvanced \u003ca href=\"http://www.mongodb.org/display/DOCS/MapReduce\" rel=\"noreferrer\" target=\"_blank\"\u003eMapReduce\u003c/a\u003e and\n\u003ca href=\"http://www.mongodb.org/display/DOCS/GridFS\" rel=\"noreferrer\" target=\"_blank\"\u003eGridFS\u003c/a\u003e features.\nMgo has a bunch of cool features including automated cluster discovery and\nresult pre-fetching - see the \u003ca href=\"http://labix.org/mgo\" rel=\"noreferrer\" target=\"_blank\"\u003emgo homepage\u003c/a\u003e for\ndetails and example code.\nFor working with large data sets Go, MongoDB,\nand mgo are a powerful combination.\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"https://github.com/dchest/authcookie\" rel=\"noreferrer\" target=\"_blank\"\u003eAuthcookie\u003c/a\u003e is a web library for\ngenerating and verifying user authentication cookies.\nIt allows web servers to hand out cryptographically secure tokens tied to\na specific user that will expire after a specified time period.\nIt has a simple API that makes it straightforward to add authentication\nto existing web applications.\nSee the \u003ca href=\"https://github.com/dchest/authcookie/blob/master/README.md\" rel=\"noreferrer\" target=\"_blank\"\u003eREADME file\u003c/a\u003e\nfor details and example code.\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"http://code.google.com/p/go-charset\" rel=\"noreferrer\" target=\"_blank\"\u003eGo-charset\u003c/a\u003e provides support for\nconverting between Go’s standard UTF-8 encoding and a variety of character sets.\nThe go-charset package implements a translating io.Reader and io.Writer\nso you can wrap existing Readers and Writers (such as network connections\nor file descriptors),\nmaking it easy to communicate with systems that use other character encodings.\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"https://github.com/madari/go-socket.io\" rel=\"noreferrer\" target=\"_blank\"\u003eGo-socket.io\u003c/a\u003e is a Go implementation\nof \u003ca href=\"http://socket.io/\" rel=\"noreferrer\" target=\"_blank\"\u003eSocket.IO\u003c/a\u003e,\na client/server API that allows web servers to push messages to web browsers.\nDepending on the capabilities of the user’s browser,\nSocket.IO uses the best transport for the connection,\nbe it modern websockets, AJAX long polling,\nor some \u003ca href=\"http://socket.io/#transports\" rel=\"noreferrer\" target=\"_blank\"\u003eother mechanism\u003c/a\u003e.\nGo-socket.io bridges the gap between Go servers and rich JavaScript clients\nfor a wide range of browsers.\nTo get a feel for go-socket.io see the \u003ca href=\"https://github.com/madari/go-socket.io/blob/master/example/example.go\" rel=\"noreferrer\" target=\"_blank\"\u003echat server example\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003eIt’s worth mentioning that these packages are \u003ca href=\"/cmd/goinstall/\"\u003egoinstallable\u003c/a\u003e.\nWith an up-to-date Go \u003ca href=\"/doc/install.html\"\u003einstallation\u003c/a\u003e\nyou can install them all with a single command:\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003egoinstall launchpad.net/mgo \\\n    github.com/dchest/authcookie \\\n    go-charset.googlecode.com/hg/charset \\\n    github.com/madari/go-socket.io\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eOnce goinstalled, the packages can be imported using those same paths:\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003eimport (\n    \u0026#34;launchpad.net/mgo\u0026#34;\n    \u0026#34;github.com/dchest/authcookie\u0026#34;\n    \u0026#34;go-charset.googlecode.com/hg/charset\u0026#34;\n    \u0026#34;github.com/madari/go-socket.io\u0026#34;\n)\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eAlso, as they are now a part of the local Go system,\nwe can inspect their documentation with \u003ca href=\"/cmd/godoc/\"\u003egodoc\u003c/a\u003e:\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003egodoc launchpad.net/mgo Database # see docs for Database type\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eOf course, this is just the tip of the iceberg;\nthere are more great Go libraries listed on the \u003ca href=\"http://godashboard.appspot.com/package\" rel=\"noreferrer\" target=\"_blank\"\u003epackage dashboard\u003c/a\u003e\nand many more to come.\u003c/p\u003e\n\n    \u003c/div\u003e",
  "Date": "2011-06-03T00:00:00Z",
  "Author": "Andrew Gerrand"
}