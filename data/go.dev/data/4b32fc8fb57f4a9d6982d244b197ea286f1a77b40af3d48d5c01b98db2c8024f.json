{
  "Source": "go.dev",
  "Title": "Debugging Go programs with the GNU Debugger",
  "Link": "https://go.dev/blog/debug-gdb",
  "Content": "\u003cdiv class=\"Article\" data-slug=\"/blog/debug-gdb\"\u003e\n    \n    \u003ch1 class=\"small\"\u003e\u003ca href=\"/blog/\"\u003eThe Go Blog\u003c/a\u003e\u003c/h1\u003e\n    \n\n    \u003ch1\u003eDebugging Go programs with the GNU Debugger\u003c/h1\u003e\n      \n      \u003cp class=\"author\"\u003e\n      Andrew Gerrand\u003cbr/\u003e\n      30 October 2011\n      \u003c/p\u003e\n      \n      \u003cp\u003eLast year we \u003ca href=\"/blog/debugging-go-code-status-report\"\u003ereported\u003c/a\u003e\nthat Goâ€™s \u003ca href=\"/cmd/gc/\"\u003egc\u003c/a\u003e/\u003ca href=\"/cmd/6l/\"\u003eld\u003c/a\u003e\ntoolchain produces DWARFv3 debugging information that can be read by the GNU Debugger (GDB).\nSince then, work has continued steadily on improving support for debugging Go code with GDB.\nAmong the improvements are the ability to inspect goroutines and to print\nnative Go data types,\nincluding structs, slices, strings, maps,\ninterfaces, and channels.\u003c/p\u003e\n\u003cp\u003eTo learn more about Go and GDB, see the \u003ca href=\"/doc/debugging_with_gdb.html\"\u003eDebugging with GDB\u003c/a\u003e article.\u003c/p\u003e\n\n    \u003c/div\u003e",
  "Date": "2011-10-30T00:00:00Z",
  "Author": "Andrew Gerrand"
}