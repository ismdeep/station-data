{
  "Source": "go.dev",
  "Title": "Go version 1 is released",
  "Link": "https://go.dev/blog/go1",
  "Content": "\u003cdiv class=\"Article\" data-slug=\"/blog/go1\"\u003e\n    \n    \u003ch1 class=\"small\"\u003e\u003ca href=\"/blog/\"\u003eThe Go Blog\u003c/a\u003e\u003c/h1\u003e\n    \n\n    \u003ch1\u003eGo version 1 is released\u003c/h1\u003e\n      \n      \u003cp class=\"author\"\u003e\n      Andrew Gerrand\u003cbr/\u003e\n      28 March 2012\n      \u003c/p\u003e\n      \n      \u003cdiv class=\"image\"\u003e\n  \u003cimg src=\"go1/gophermega.jpg\" alt=\"\"/\u003e\n\u003c/div\u003e\n\u003cp\u003eToday marks a major milestone in the development of the Go programming language.\nWeâ€™re announcing Go version 1, or Go 1 for short,\nwhich defines a language and a set of core libraries to provide a stable\nfoundation for creating reliable products,\nprojects, and publications.\u003c/p\u003e\n\u003cp\u003eGo 1 is the first release of Go that is available in supported binary distributions.\nThey are available for Linux, FreeBSD, Mac OS X and,\nwe are thrilled to announce, Windows.\u003c/p\u003e\n\u003cp\u003eThe driving motivation for Go 1 is stability for its users.\nPeople who write Go 1 programs can be confident that those programs will\ncontinue to compile and run without change,\nin many environments, on a time scale of years.\nSimilarly, authors who write books about Go 1 can be sure that their examples\nand explanations will be helpful to readers today and into the future.\u003c/p\u003e\n\u003cp\u003eForward compatibility is part of stability.\nCode that compiles in Go 1 should, with few exceptions,\ncontinue to compile and run throughout the lifetime of that version,\neven as we issue updates and bug fixes such as Go version 1.1, 1.2, and so on.\nThe \u003ca href=\"/doc/go1compat.html\"\u003eGo 1 compatibility document\u003c/a\u003e\nexplains the compatibility guidelines in more detail.\u003c/p\u003e\n\u003cp\u003eGo 1 is a representation of Go as it is used today,\nnot a major redesign.\nIn its planning, we focused on cleaning up problems and inconsistencies\nand improving portability.\nThere had long been many changes to Go that we had designed and prototyped\nbut not released because they were backwards-incompatible.\nGo 1 incorporates these changes, which provide significant improvements\nto the language and libraries but sometimes introduce incompatibilities for old programs.\nFortunately, the \u003ca href=\"/cmd/go/#Run_go_tool_fix_on_packages\"\u003ego fix\u003c/a\u003e\ntool can automate much of the work needed to bring programs up to the Go 1 standard.\u003c/p\u003e\n\u003cp\u003eGo 1 introduces changes to the language (such as new types for \u003ca href=\"/doc/go1.html#rune\"\u003eUnicode characters\u003c/a\u003e\nand \u003ca href=\"/doc/go1.html#errors\"\u003eerrors\u003c/a\u003e) and the standard\nlibrary (such as the new \u003ca href=\"/doc/go1.html#time\"\u003etime package\u003c/a\u003e\nand renamings in the \u003ca href=\"/doc/go1.html#strconv\"\u003estrconv package\u003c/a\u003e).\nAlso, the package hierarchy has been rearranged to group related items together,\nsuch as moving the networking facilities,\nfor instance the \u003ca href=\"/pkg/net/rpc/\"\u003erpc package\u003c/a\u003e,\ninto subdirectories of net.\nA complete list of changes is documented in the \u003ca href=\"/doc/go1.html\"\u003eGo 1 release notes\u003c/a\u003e.\nThat document is an essential reference for programmers migrating code from\nearlier versions of Go.\u003c/p\u003e\n\u003cp\u003eWe also restructured the Go tool suite around the new \u003ca href=\"/doc/go1.html#cmd_go\"\u003ego command\u003c/a\u003e,\na program for fetching, building, installing and maintaining Go code.\nThe go command eliminates the need for Makefiles to write Go code because\nit uses the Go program source itself to derive the build instructions.\nNo more build scripts!\u003c/p\u003e\n\u003cp\u003eFinally, the release of Go 1 triggers a new release of the \u003ca href=\"https://developers.google.com/appengine/docs/go\" rel=\"noreferrer\" target=\"_blank\"\u003eGoogle App Engine SDK\u003c/a\u003e.\nA similar process of revision and stabilization has been applied to the\nApp Engine libraries,\nproviding a base for developers to build programs for App Engine that will run for years.\u003c/p\u003e\n\u003cp\u003eGo 1 is the result of a major effort by the core Go team and our many contributors\nfrom the open source community.\nWe thank everyone who helped make this happen.\u003c/p\u003e\n\u003cp\u003eThere has never been a better time to be a Go programmer.\nEverything you need to get started is at \u003ca href=\"/\"\u003egolang.org\u003c/a\u003e.\u003c/p\u003e\n\n    \u003c/div\u003e",
  "Date": "2012-03-28T00:00:00Z",
  "Author": "Andrew Gerrand"
}