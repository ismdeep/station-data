{
  "Source": "go.dev",
  "Title": "Gopls on by default in the VS Code Go extension",
  "Link": "https://go.dev/blog/gopls-vscode-go",
  "Content": "\u003cdiv class=\"Article\" data-slug=\"/blog/gopls-vscode-go\"\u003e\n    \n    \u003ch1 class=\"small\"\u003e\u003ca href=\"/blog/\"\u003eThe Go Blog\u003c/a\u003e\u003c/h1\u003e\n    \n\n    \u003ch1\u003eGopls on by default in the VS Code Go extension\u003c/h1\u003e\n      \n      \u003cp class=\"author\"\u003e\n      Go tools team\u003cbr/\u003e\n      1 February 2021\n      \u003c/p\u003e\n      \n      \u003cp\u003eWe’re happy to announce that the VS Code Go extension now enables the \u003ca href=\"https://github.com/golang/tools/blob/master/gopls/README.md\" rel=\"noreferrer\" target=\"_blank\"\u003egopls\nlanguage server\u003c/a\u003e\nby default, to deliver more robust IDE features and better support for Go\nmodules.\u003c/p\u003e\n\u003cdiv class=\"image\"\u003e\n  \u003cimg src=\"gopls/features.gif\" width=\"635\" alt=\"\"/\u003e\n\u003c/div\u003e\n\u003cp\u003e\u003cem\u003e(\u003ccode\u003egopls\u003c/code\u003e provides IDE features, such as intelligent autocompletion, signature help, refactoring, and workspace symbol search.)\u003c/em\u003e\u003c/p\u003e\n\u003cp\u003eWhen \u003ca href=\"using-go-modules\"\u003eGo modules\u003c/a\u003e were\nreleased two years ago, they completely changed the landscape of Go developer\ntooling. Tools like \u003ccode\u003egoimports\u003c/code\u003e and \u003ccode\u003egodef\u003c/code\u003e previously depended on the fact\nthat code was stored in your \u003ccode\u003e$GOPATH\u003c/code\u003e. When the Go team began rewriting these\ntools to work with modules, we immediately realized that we needed a more\nsystematic approach to bridge the gap.\u003c/p\u003e\n\u003cp\u003eAs a result, we began working on a single Go\n\u003ca href=\"https://microsoft.github.io/language-server-protocol/\" rel=\"noreferrer\" target=\"_blank\"\u003elanguage server\u003c/a\u003e,\n\u003ccode\u003egopls\u003c/code\u003e, which provides IDE features, such as autocompletion, formatting, and\ndiagnostics to any compatible editor frontend. This persistent and unified\nserver is a \u003ca href=\"https://www.youtube.com/watch?v=EFJfdWzBHwE\u0026amp;t=1s\" rel=\"noreferrer\" target=\"_blank\"\u003efundamental\nshift\u003c/a\u003e from the earlier\ncollections of command-line tools.\u003c/p\u003e\n\u003cp\u003eIn addition to working on \u003ccode\u003egopls\u003c/code\u003e, we sought other ways of creating a stable\necosystem of editor tooling. Last year, the Go team took responsibility for the\n\u003ca href=\"/blog/vscode-go\"\u003eGo extension for VS Code\u003c/a\u003e. As part of this\nwork, we smoothed the extension’s integration with the language server—automating\n\u003ccode\u003egopls\u003c/code\u003e updates, rearranging and clarifying \u003ccode\u003egopls\u003c/code\u003e settings, improving the\ntroubleshooting workflow, and soliciting feedback through a survey. We’ve also\ncontinued to foster a community of active users and contributors who have\nhelped us improve the stability, performance, and user experience of the Go\nextension.\u003c/p\u003e\n\u003ch2 id=\"announcement\"\u003eAnnouncement\u003c/h2\u003e\n\u003cp\u003eJanuary 28 marked a major milestone in both the \u003ccode\u003egopls\u003c/code\u003e and VS Code Go\njourneys, as \u003ccode\u003egopls\u003c/code\u003e is now enabled by default in the Go extension for VS Code.\u003c/p\u003e\n\u003cp\u003eIn advance of this switch we spent a long time iterating on the design, feature\nset, and user experience of \u003ccode\u003egopls\u003c/code\u003e, focusing on improving performance and\nstability. For more than a year, \u003ccode\u003egopls\u003c/code\u003e has been the default in most plugins for\nVim, Emacs, and other editors. We’ve had 24 \u003ccode\u003egopls\u003c/code\u003e releases, and we’re\nincredibly grateful to our users for consistently providing feedback and\nreporting issues on each and every one.\u003c/p\u003e\n\u003cp\u003eWe’ve also dedicated time to smoothing the new user experience. We hope that VS\nCode Go with \u003ccode\u003egopls\u003c/code\u003e will be intuitive with clear error messages, but if you have\na question or need to adjust some configuration, you’ll be able to find answers\nin our \u003ca href=\"https://github.com/golang/vscode-go/blob/master/README.md\" rel=\"noreferrer\" target=\"_blank\"\u003eupdated documentation\u003c/a\u003e.\nWe have also recorded \u003ca href=\"https://www.youtube.com/watch?v=1MXIGYrMk80\" rel=\"noreferrer\" target=\"_blank\"\u003ea screencast\u003c/a\u003e\nto help you get started, as well as\n\u003ca href=\"https://github.com/golang/vscode-go/blob/master/docs/features.md\" rel=\"noreferrer\" target=\"_blank\"\u003eanimations\u003c/a\u003e\nto show off some hard-to-find features.\u003c/p\u003e\n\u003cp\u003eGopls is the best way of working with Go code, especially with Go modules.\nWith the upcoming arrival of Go 1.16, in which modules are enabled by default,\nVS Code Go users will have the best possible experience out-of-the-box.\u003c/p\u003e\n\u003cp\u003eStill, this switch does not mean that \u003ccode\u003egopls\u003c/code\u003e is complete. We will continue\nworking on bug fixes, new features, and general stability. Our next area of\nfocus will be improving the user experience when \u003ca href=\"https://github.com/golang/tools/blob/master/gopls/doc/workspace.md\" rel=\"noreferrer\" target=\"_blank\"\u003eworking with multiple\nmodules\u003c/a\u003e.\nFeedback from our larger user base will help inform our next steps.\u003c/p\u003e\n\u003ch2 id=\"so-what-should-you-do\"\u003eSo, what should you do?\u003c/h2\u003e\n\u003cp\u003eIf you use VS Code, you don’t need to do anything.\nWhen you get the next VS Code Go update, \u003ccode\u003egopls\u003c/code\u003e will be enabled automatically.\u003c/p\u003e\n\u003cp\u003eIf you use another editor, you are likely using \u003ccode\u003egopls\u003c/code\u003e already. If not, see\n\u003ca href=\"https://github.com/golang/tools/blob/master/gopls/README.md\" rel=\"noreferrer\" target=\"_blank\"\u003ethe \u003ccode\u003egopls\u003c/code\u003e user guide\u003c/a\u003e\nto learn how to enable \u003ccode\u003egopls\u003c/code\u003e in your preferred editor. The Language Server\nProtocol ensures that \u003ccode\u003egopls\u003c/code\u003e will continue to offer the same features to every\neditor.\u003c/p\u003e\n\u003cp\u003eIf \u003ccode\u003egopls\u003c/code\u003e is not working for you, please see our \u003ca href=\"https://github.com/golang/vscode-go/blob/master/docs/troubleshooting.md\" rel=\"noreferrer\" target=\"_blank\"\u003edetailed troubleshooting\nguide\u003c/a\u003e\nand file an issue. If you need to, you can always \u003ca href=\"https://github.com/golang/vscode-go/blob/master/docs/settings.md#gouselanguageserver\" rel=\"noreferrer\" target=\"_blank\"\u003edisable \u003ccode\u003egopls\u003c/code\u003e in VS\nCode\u003c/a\u003e.\u003c/p\u003e\n\u003ch2 id=\"thank-you\"\u003eThank you\u003c/h2\u003e\n\u003cp\u003eTo our existing users, thank you for bearing with us as we rewrote our caching\nlayer for the third time. To our new users, we look forward to hearing your\nexperience reports and feedback.\u003c/p\u003e\n\u003cp\u003eFinally, no discussion of Go tooling is complete without mentioning the\nvaluable contributions of the Go tools community. Thank you for the lengthy\ndiscussions, detailed bug reports, integration tests, and most importantly,\nthank you for the fantastic contributions. The most exciting \u003ccode\u003egopls\u003c/code\u003e features\ncome from our passionate open-source contributors, and we are appreciative of\nyour hard work and dedication.\u003c/p\u003e\n\u003ch2 id=\"learn-more\"\u003eLearn more\u003c/h2\u003e\n\u003cp\u003eWatch \u003ca href=\"https://www.youtube.com/watch?v=1MXIGYrMk80\" rel=\"noreferrer\" target=\"_blank\"\u003ethe screencast\u003c/a\u003e for a\nwalk-through of how to get started with \u003ccode\u003egopls\u003c/code\u003e and VS Code Go, and see the\n\u003ca href=\"https://github.com/golang/vscode-go/blob/master/README.md\" rel=\"noreferrer\" target=\"_blank\"\u003eVS Code Go README\u003c/a\u003e\nfor additional information.\u003c/p\u003e\n\u003cp\u003eIf you’d like to read about \u003ccode\u003egopls\u003c/code\u003e in more detail, see the\n\u003ca href=\"https://github.com/golang/tools/blob/master/gopls/README.md\" rel=\"noreferrer\" target=\"_blank\"\u003e\u003ccode\u003egopls\u003c/code\u003e README\u003c/a\u003e.\u003c/p\u003e\n\n    \u003c/div\u003e",
  "Date": "2021-02-01T00:00:00Z",
  "Author": "Go tools team"
}