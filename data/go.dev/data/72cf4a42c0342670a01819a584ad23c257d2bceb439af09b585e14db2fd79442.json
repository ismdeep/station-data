{
  "Source": "go.dev",
  "Title": "The VS Code Go extension joins the Go project",
  "Link": "https://go.dev/blog/vscode-go",
  "Content": "\u003cdiv class=\"Article\" data-slug=\"/blog/vscode-go\"\u003e\n    \n    \u003ch1 class=\"small\"\u003e\u003ca href=\"/blog/\"\u003eThe Go Blog\u003c/a\u003e\u003c/h1\u003e\n    \n\n    \u003ch1\u003eThe VS Code Go extension joins the Go project\u003c/h1\u003e\n      \n      \u003cp class=\"author\"\u003e\n      The Go team\u003cbr/\u003e\n      9 June 2020\n      \u003c/p\u003e\n      \n      \u003cp\u003eWhen the Go project began, “an overarching goal was that Go do more to help the\nworking programmer by enabling tooling, automating mundane tasks such as code\nformatting, and removing obstacles to working on large code bases”\n(\u003ca href=\"/doc/faq#What_is_the_purpose_of_the_project\"\u003eGo FAQ\u003c/a\u003e).\nToday, more than a decade later, we continue to be guided by that same goal,\nespecially as it pertains to the programmer’s most critical tool: their editor.\u003c/p\u003e\n\u003cp\u003eThroughout the past decade, Go developers have relied on a variety of editors\nand dozens of independently authored tools and plugins. Much of Go’s early\nsuccess can be attributed to the fantastic development tools created by the Go\ncommunity. The\n\u003ca href=\"https://github.com/microsoft/vscode-go\" rel=\"noreferrer\" target=\"_blank\"\u003eVS Code extension for Go\u003c/a\u003e, built using\nmany of these tools, is now used by 41 percent of Go developers\n(\u003ca href=\"/blog/survey2019-results\"\u003eGo developer survey\u003c/a\u003e).\u003c/p\u003e\n\u003cp\u003eAs the VS Code Go extension grows in popularity and as\n\u003ca href=\"https://www.youtube.com/watch?v=EFJfdWzBHwE\" rel=\"noreferrer\" target=\"_blank\"\u003ethe ecosystem expands\u003c/a\u003e, it\nrequires\n\u003ca href=\"https://twitter.com/ramyanexus/status/1154470078978486272\" rel=\"noreferrer\" target=\"_blank\"\u003emore maintenance and support\u003c/a\u003e.\nOver the past few years, the Go team has collaborated with the VS Code team to\nhelp the Go extension maintainers. The Go team also began a new initiative to\nimprove the tools powering all Go editor extensions, with a focus on supporting\nthe\n\u003ca href=\"https://microsoft.github.io/language-server-protocol/\" rel=\"noreferrer\" target=\"_blank\"\u003eLanguage Server Protocol\u003c/a\u003e\nwith \u003ca href=\"/s/gopls\"\u003e\u003ccode\u003egopls\u003c/code\u003e\u003c/a\u003e and\n\u003ca href=\"https://github.com/go-delve/delve/issues/1515\" rel=\"noreferrer\" target=\"_blank\"\u003ethe Debug Adapter Protocol with Delve\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003eThrough this collaborative work between the VS Code and Go teams, we realized\nthat the Go team is uniquely positioned to evolve the Go development experience\nalongside the Go language.\u003c/p\u003e\n\u003cp\u003eAs a result, we’re happy to announce the next phase in the Go team’s\npartnership with the VS Code team: \u003cstrong\u003eThe VS Code extension for Go is officially\njoining the Go project\u003c/strong\u003e. With this come two critical changes:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eThe publisher of the plugin is shifting from “Microsoft” to “Go Team at Google”.\u003c/li\u003e\n\u003cli\u003eThe project’s repository is moving to join the rest of the Go project at \u003ca href=\"https://github.com/golang/vscode-go\" rel=\"noreferrer\" target=\"_blank\"\u003ehttps://github.com/golang/vscode-go\u003c/a\u003e.\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003eWe cannot overstate our gratitude to those who have helped\nbuild and maintain this beloved extension. We know that innovative ideas and\nfeatures come from you, our users. The Go team’s primary aim as owners of the\nextension is to reduce the burden of maintenance work on the Go community.\nWe’ll make sure the builds stay green, the issues get triaged, and the docs get\nupdated. Go team members will keep contributors abreast of relevant language\nchanges, and we’ll smooth the rough edges between the extension’s different\ndependencies.\u003c/p\u003e\n\u003cp\u003ePlease continue to share your thoughts with us by filing\n\u003ca href=\"https://github.com/golang/vscode-go/issues\" rel=\"noreferrer\" target=\"_blank\"\u003eissues\u003c/a\u003e and making\n\u003ca href=\"https://github.com/golang/vscode-go/blob/master/docs/contributing.md\" rel=\"noreferrer\" target=\"_blank\"\u003econtributions\u003c/a\u003e\nto the project. The process for contributing will now be the same as for the\n\u003ca href=\"/doc/contribute.html\"\u003erest of the Go project\u003c/a\u003e. Go team\nmembers will offer general help in the #vscode channel on\n\u003ca href=\"https://invite.slack.golangbridge.org/\" rel=\"noreferrer\" target=\"_blank\"\u003eGophers Slack\u003c/a\u003e, and we’ve also created\na #vscode-dev channel to discuss issues and brainstorm ideas with contributors.\u003c/p\u003e\n\u003cp\u003eWe’re excited about this new step forward, and we hope you are too.\nBy maintaining a major Go editor extension, as well as the Go tooling and\nlanguage, the Go team will be able to provide all Go users, regardless of their\neditor, a more cohesive and refined development experience.\u003c/p\u003e\n\u003cp\u003eAs always, our goal remains the same: Every user should have an excellent\nexperience writing Go code.\u003c/p\u003e\n\u003cp\u003e\u003cem\u003eSee the accompanying post from the \u003ca href=\"https://aka.ms/go-blog-vscode-202006\" rel=\"noreferrer\" target=\"_blank\"\u003eVisual Studio Code team\u003c/a\u003e.\u003c/em\u003e\u003c/p\u003e\n\n    \u003c/div\u003e",
  "Date": "2020-06-09T00:00:00Z",
  "Author": "The Go team"
}