{
  "Source": "go.dev",
  "Title": "Announcing App Engine’s New Go 1.11 Runtime",
  "Link": "https://go.dev/blog/appengine-go111",
  "Content": "\u003cdiv class=\"Article\" data-slug=\"/blog/appengine-go111\"\u003e\n    \n    \u003ch1 class=\"small\"\u003e\u003ca href=\"/blog/\"\u003eThe Go Blog\u003c/a\u003e\u003c/h1\u003e\n    \n\n    \u003ch1\u003eAnnouncing App Engine’s New Go 1.11 Runtime\u003c/h1\u003e\n      \n      \u003cp class=\"author\"\u003e\n      Eno Compton and Tyler Bui-Palsulich\u003cbr/\u003e\n      16 October 2018\n      \u003c/p\u003e\n      \n      \u003cp\u003e\u003ca href=\"https://cloud.google.com/appengine/\" rel=\"noreferrer\" target=\"_blank\"\u003eApp Engine\u003c/a\u003e launched\n\u003ca href=\"/blog/go-and-google-app-engine\"\u003eexperimental support for Go\u003c/a\u003e\nin 2011. In the subsequent years, the Go community has grown significantly and\nhas settled on idiomatic\npatterns for cloud-based applications. Today, Google Cloud is\n\u003ca href=\"https://cloud.google.com/blog/products/application-development/go-1-11-is-now-available-on-app-engine\" rel=\"noreferrer\" target=\"_blank\"\u003eannouncing a new Go 1.11 runtime\u003c/a\u003e\nfor the App Engine standard environment that provides all the\npower of App Engine—things like paying only for what you use, automatic scaling,\nand managed infrastructure—while supporting idiomatic Go.\u003c/p\u003e\n\u003cp\u003eStarting with Go 1.11, Go on App Engine has no limits on application structure,\nsupported packages, \u003ccode\u003econtext.Context\u003c/code\u003e values, or HTTP clients. Write your Go\napplication however you prefer, add an \u003ccode\u003eapp.yaml\u003c/code\u003e file, and your app is ready\nto deploy on App Engine.\n\u003ca href=\"https://cloud.google.com/appengine/docs/standard/go111/specifying-dependencies\" rel=\"noreferrer\" target=\"_blank\"\u003eSpecifying Dependencies\u003c/a\u003e\ndescribes how the new runtime\nsupports \u003ca href=\"/cmd/go/#hdr-Vendor_Directories\"\u003evendoring\u003c/a\u003e and\n\u003ca href=\"/doc/go1.11#modules\"\u003emodules\u003c/a\u003e (experimental) for dependency\nmanagement.\u003c/p\u003e\n\u003cp\u003eAlong with \u003ca href=\"https://twitter.com/kelseyhightower/status/1035278586754813952\" rel=\"noreferrer\" target=\"_blank\"\u003eCloud Functions support for Go\u003c/a\u003e\n(more on that in a future post), App Engine provides a compelling way to run Go\ncode on Google Cloud Platform (GCP) with no concern for the underlying\ninfrastructure.\u003c/p\u003e\n\u003cp\u003eLet’s take a look at creating a small application for App Engine. For the\nexample here, we assume a \u003ccode\u003eGOPATH\u003c/code\u003e-based workflow, although Go modules have\n\u003ca href=\"https://cloud.google.com/appengine/docs/standard/go111/specifying-dependencies\" rel=\"noreferrer\" target=\"_blank\"\u003eexperimental support\u003c/a\u003e\nas well.\u003c/p\u003e\n\u003cp\u003eFirst, you create the application in your \u003ccode\u003eGOPATH\u003c/code\u003e:\u003c/p\u003e\n\u003cdiv class=\"code\"\u003e\n\u003cpre\u003e\u003cspan class=\"comment\"\u003e// This server can run on App Engine.\u003c/span\u003e\npackage main\n\nimport (\n    \u0026#34;fmt\u0026#34;\n    \u0026#34;log\u0026#34;\n    \u0026#34;net/http\u0026#34;\n    \u0026#34;os\u0026#34;\n)\n\nfunc main() {\n    port := os.Getenv(\u0026#34;PORT\u0026#34;)\n    if port == \u0026#34;\u0026#34; {\n        port = \u0026#34;8080\u0026#34;\n    }\n    http.HandleFunc(\u0026#34;/\u0026#34;, hello)\n\n    log.Fatal(http.ListenAndServe(fmt.Sprintf(\u0026#34;:%s\u0026#34;, port), nil))\n}\n\nfunc hello(w http.ResponseWriter, r *http.Request) {\n    w.Write([]byte(\u0026#34;Hello, 世界\u0026#34;))\n}\n\u003c/pre\u003e\n\u003c/div\u003e\n\u003cp\u003eThe code contains an idiomatic setup for a small HTTP server that responds with\n“Hello, 世界.” If you have previous App Engine experience, you’ll notice the\nabsence of any call to \u003ccode\u003eappengine.Main()\u003c/code\u003e, which is now entirely optional.\nFurthermore, the application code is completely portable—there are no ties to\nthe infrastructure that your application is deployed on.\u003c/p\u003e\n\u003cp\u003eIf you need to use external dependencies, you can add those dependencies to a\n\u003ccode\u003evendor\u003c/code\u003e directory or to a \u003ccode\u003ego.mod\u003c/code\u003e file, both of which the new runtime\nsupports.\u003c/p\u003e\n\u003cp\u003eWith the application code complete, create an \u003ccode\u003eapp.yaml\u003c/code\u003e file to specify\nthe runtime:\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003eruntime: go111\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eFinally, set your machine up with a Google Cloud Platform account:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eCreate an account with \u003ca href=\"https://cloud.google.com\" rel=\"noreferrer\" target=\"_blank\"\u003eGCP\u003c/a\u003e.\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://cloud.google.com/resource-manager/docs/creating-managing-projects\" rel=\"noreferrer\" target=\"_blank\"\u003eCreate a project\u003c/a\u003e.\u003c/li\u003e\n\u003cli\u003eInstall the \u003ca href=\"https://cloud.google.com/sdk/\" rel=\"noreferrer\" target=\"_blank\"\u003eCloud SDK\u003c/a\u003e on your system.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eWith all the setup complete, you can deploy using one command:\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003egcloud app deploy\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eWe think Go developers will find the new Go 1.11 runtime for App Engine an\nexciting addition to the available options to run Go applications. There is a\n\u003ca href=\"https://cloud.google.com/free/\" rel=\"noreferrer\" target=\"_blank\"\u003efree tier\u003c/a\u003e. Check out the\n\u003ca href=\"https://cloud.google.com/appengine/docs/standard/go111/building-app/\" rel=\"noreferrer\" target=\"_blank\"\u003egetting started guide\u003c/a\u003e\nor the\n\u003ca href=\"https://cloud.google.com/appengine/docs/standard/go111/go-differences\" rel=\"noreferrer\" target=\"_blank\"\u003emigration guide\u003c/a\u003e\nand deploy an app to the new runtime today!\u003c/p\u003e\n\n    \u003c/div\u003e",
  "Date": "2018-10-16T00:00:00Z",
  "Author": "Eno Compton and Tyler Bui-Palsulich"
}