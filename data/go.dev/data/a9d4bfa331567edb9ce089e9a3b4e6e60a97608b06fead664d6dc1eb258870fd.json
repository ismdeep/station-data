{
  "Source": "go.dev",
  "Title": "Go 1.2 is released",
  "Link": "https://go.dev/blog/go1.2",
  "Content": "\u003cdiv class=\"Article\" data-slug=\"/blog/go1.2\"\u003e\n    \n    \u003ch1 class=\"small\"\u003e\u003ca href=\"/blog/\"\u003eThe Go Blog\u003c/a\u003e\u003c/h1\u003e\n    \n\n    \u003ch1\u003eGo 1.2 is released\u003c/h1\u003e\n      \n      \u003cp class=\"author\"\u003e\n      Andrew Gerrand\u003cbr/\u003e\n      1 December 2013\n      \u003c/p\u003e\n      \n      \u003cp\u003eWe are pleased to announce the release of Go 1.2, the latest stable version of\nthe Go Programming Language.\u003c/p\u003e\n\u003cp\u003eBinary distributions may be downloaded from the\n\u003ca href=\"/doc/install\"\u003eusual place\u003c/a\u003e or if you prefer to\n\u003ca href=\"/doc/install/source\"\u003ecompile from source\u003c/a\u003e you should use\nthe \u003ccode\u003erelease\u003c/code\u003e or \u003ccode\u003ego1.2\u003c/code\u003e tags.\u003c/p\u003e\n\u003cp\u003eThis new release comes nearly seven months after the release of Go 1.1 in May,\na much shorter period than the 14 months between 1.1 and 1.0.\nWe anticipate a comparable interval between future major releases.\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"/doc/go1.2\"\u003eGo 1.2\u003c/a\u003e includes a couple of minor\nlanguage changes, several improvements to the language implementation and\ntools, some performance improvements, and many additions and\n(backward-compatible) changes to the standard library.\u003c/p\u003e\n\u003cp\u003ePlease read the \u003ca href=\"/doc/go1.2\"\u003erelease notes\u003c/a\u003e for all\nthe details, as some changes may affect the behavior of existing (buggy) programs.\nWhat follows is the highlights of the release.\u003c/p\u003e\n\u003cp\u003eA new \u003ca href=\"/doc/go1.2#three_index\"\u003ethree-index slice syntax\u003c/a\u003e\nadds the ability to specify capacity as well as length. This allows the\nprogrammer to pass a slice value that can only access a limited portion of the\nunderlying array, a technique that previously required the use of the unsafe\npackage.\u003c/p\u003e\n\u003cp\u003eA major new feature of the tool chain is the facility to compute and display\n\u003ca href=\"/doc/go1.2#cover\"\u003etest coverage results\u003c/a\u003e.\nSee the \u003ca href=\"/cmd/go/#hdr-Description_of_testing_flags\"\u003e\u003ccode\u003ego test\u003c/code\u003e\u003c/a\u003e\nand \u003ca href=\"https://golang.org/x/tools/cmd/cover\" rel=\"noreferrer\" target=\"_blank\"\u003ecover tool\u003c/a\u003e\ndocumentation for details. Later this week we will publish an article that\ndiscusses this new feature in detail.\u003c/p\u003e\n\u003cp\u003eGoroutines are now \u003ca href=\"/doc/go1.2#preemption\"\u003epre-emptively scheduled\u003c/a\u003e,\nin that the scheduler is invoked occasionally upon entry to a function.\nThis can prevent busy goroutines from starving other goroutines on the same\nthread.\u003c/p\u003e\n\u003cp\u003eAn increase to the default goroutine stack size should improve the\nperformance of some programs. (The old size had a tendency to introduce\nexpensive stack-segment switching in performance-critical sections.)\nOn the other end, new restrictions on\n\u003ca href=\"/doc/go1.2#stack_size\"\u003estack sizes\u003c/a\u003e and\n\u003ca href=\"/doc/go1.2#thread_limit\"\u003ethe number of operating system threads\u003c/a\u003e\nshould prevent misbehaving programs from consuming all the resources of a\nmachine. (These limits may be adjusted using new functions in the\n\u003ca href=\"/pkg/runtime/debug\"\u003e\u003ccode\u003eruntime/debug\u003c/code\u003e package\u003c/a\u003e.)\u003c/p\u003e\n\u003cp\u003eFinally, among the \u003ca href=\"/doc/go1.2#library\"\u003emany changes to the standard library\u003c/a\u003e,\nsignificant changes include\nthe new \u003ca href=\"/doc/go1.2#encoding\"\u003e\u003ccode\u003eencoding\u003c/code\u003e package\u003c/a\u003e,\n\u003ca href=\"/doc/go1.2#fmt_indexed_arguments\"\u003eindexed arguments\u003c/a\u003e in \u003ccode\u003ePrintf\u003c/code\u003e format strings, and\nsome \u003ca href=\"/doc/go1.2#text_template\"\u003econvenient additions\u003c/a\u003e to the template packages.\u003c/p\u003e\n\u003cp\u003eAs part of the release, the \u003ca href=\"/play/\"\u003eGo Playground\u003c/a\u003e has been\nupdated to Go 1.2. This also affects services that use the Playground, such as\n\u003ca href=\"/tour/\"\u003ethe Go Tour\u003c/a\u003e and this blog.\nThe update also adds the ability to use threads and the \u003ccode\u003eos\u003c/code\u003e, \u003ccode\u003enet\u003c/code\u003e, and\n\u003ccode\u003eunsafe\u003c/code\u003e packages inside the sandbox, making it more like a real Go environment.\u003c/p\u003e\n\u003cp\u003eTo everyone who helped make this release possible, from the many users who\nsubmitted bug reports to the 116 (!) contributors who committed more than 1600\nchanges to the core: Your help is invaluable to the project. Thank you!\u003c/p\u003e\n\u003cp\u003e\u003cem\u003eThis blog post is the first of the\u003c/em\u003e\n\u003ca href=\"http://blog.gopheracademy.com/day-01-go-1.2\" rel=\"noreferrer\" target=\"_blank\"\u003eGo Advent Calendar\u003c/a\u003e,\n\u003cem\u003ea series of daily articles presented by the\u003c/em\u003e\n\u003ca href=\"http://gopheracademy.com/\" rel=\"noreferrer\" target=\"_blank\"\u003eGopher Academy\u003c/a\u003e \u003cem\u003efrom December 1 to 25.\u003c/em\u003e\u003c/p\u003e\n\n    \u003c/div\u003e",
  "Date": "2013-12-01T00:00:00Z",
  "Author": "Andrew Gerrand"
}