{
  "Source": "go.dev",
  "Title": "Two recent Go talks",
  "Link": "https://go.dev/blog/two-recent-go-talks",
  "Content": "\u003cdiv class=\"Article\" data-slug=\"/blog/two-recent-go-talks\"\u003e\n    \n    \u003ch1 class=\"small\"\u003e\u003ca href=\"/blog/\"\u003eThe Go Blog\u003c/a\u003e\u003c/h1\u003e\n    \n\n    \u003ch1\u003eTwo recent Go talks\u003c/h1\u003e\n      \n      \u003cp class=\"author\"\u003e\n      Andrew Gerrand\u003cbr/\u003e\n      2 January 2013\n      \u003c/p\u003e\n      \n      \u003ch2 id=\"introduction\"\u003eIntroduction\u003c/h2\u003e\n\u003cp\u003eLate last year I wrote a couple of Go talks and presented them at \u003ca href=\"http://thestrangeloop.com/\" rel=\"noreferrer\" target=\"_blank\"\u003eStrange Loop\u003c/a\u003e,\n\u003ca href=\"http://oredev.com\" rel=\"noreferrer\" target=\"_blank\"\u003eØredev\u003c/a\u003e, and various other venues.\nThe talks are designed to give insight into the practice of Go programming,\neach describing the construction of a real program and demonstrating the\npower and depth of the Go language and its libraries and tools.\u003c/p\u003e\n\u003cp\u003eThe following videos are, in my opinion, the best recordings of these talks.\u003c/p\u003e\n\u003ch2 id=\"go-a-simple-programming-environment\"\u003eGo: a simple programming environment\u003c/h2\u003e\n\u003cp\u003eGo is a general-purpose language that bridges the gap between efficient\nstatically typed languages and productive dynamic language.\nBut it’s not just the language that makes Go special – Go has broad\nand consistent standard libraries and powerful but simple tools.\u003c/p\u003e\n\u003cp\u003eThis talk gives an introduction to Go, followed by a tour of some real programs\nthat demonstrate the power,\nscope, and simplicity of the Go programming environment.\u003c/p\u003e\n\u003cdiv class=\"iframe\"\u003e\n  \u003ciframe src=\"https://player.vimeo.com/video/53221558?badge=0\" width=\"500\" height=\"281\" frameborder=\"0\" allowfullscreen=\"\" mozallowfullscreen=\"\" webkitallowfullscreen=\"\"\u003e\u003c/iframe\u003e\n\u003c/div\u003e\n\u003cp\u003eSee the \u003ca href=\"/talks/2012/simple.slide\"\u003eslide deck\u003c/a\u003e (use the left and right arrows to navigate).\u003c/p\u003e\n\u003ch2 id=\"go-code-that-grows-with-grace\"\u003eGo: code that grows with grace\u003c/h2\u003e\n\u003cp\u003eOne of Go’s key design goals is code adaptability;\nthat it should be easy to take a simple design and build upon it in a clean and natural way.\nIn this talk I describe a simple “chat roulette” server that matches pairs\nof incoming TCP connections,\nand then use Go’s concurrency mechanisms,\ninterfaces, and standard library to extend it with a web interface and other features.\nWhile the function of the program changes dramatically,\nGo’s flexibility preserves the original design as it grows.\u003c/p\u003e\n\u003cdiv class=\"iframe\"\u003e\n  \u003ciframe src=\"https://player.vimeo.com/video/53221560?badge=0\" width=\"500\" height=\"281\" frameborder=\"0\" allowfullscreen=\"\" mozallowfullscreen=\"\" webkitallowfullscreen=\"\"\u003e\u003c/iframe\u003e\n\u003c/div\u003e\n\u003cp\u003eSee the \u003ca href=\"/talks/2012/chat.slide\"\u003eslide deck\u003c/a\u003e (use the left and right arrows to navigate).\u003c/p\u003e\n\n    \u003c/div\u003e",
  "Date": "2013-01-02T00:00:00Z",
  "Author": "Andrew Gerrand"
}