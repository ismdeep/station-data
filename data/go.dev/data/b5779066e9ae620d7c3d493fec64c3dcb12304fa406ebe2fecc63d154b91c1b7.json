{
  "Source": "go.dev",
  "Title": "Contribution Workshop",
  "Link": "https://go.dev/blog/contributor-workshop",
  "Content": "\u003cdiv class=\"Article\" data-slug=\"/blog/contributor-workshop\"\u003e\n    \n    \u003ch1 class=\"small\"\u003e\u003ca href=\"/blog/\"\u003eThe Go Blog\u003c/a\u003e\u003c/h1\u003e\n    \n\n    \u003ch1\u003eContribution Workshop\u003c/h1\u003e\n      \n      \u003cp class=\"author\"\u003e\n      Steve Francia, Cassandra Salisbury, Matt Broberg,  and Dmitri Shuralyov\u003cbr/\u003e\n      9 August 2017\n      \u003c/p\u003e\n      \n      \u003ch2 id=\"event-overview\"\u003eEvent Overview\u003c/h2\u003e\n\u003cp\u003eby \u003ca href=\"https://twitter.com/spf13\" rel=\"noreferrer\" target=\"_blank\"\u003eSteve\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003eDuring the community day at GopherCon, the Go team held two workshops\nwhere we worked with people to help them make their first contribution to the\nGo project. This was the first time the Go project has ever attempted anything\nlike this. We had about 140 participants and about 35 people who volunteered as\nmentors. Mentors not only received warm fuzzy feelings for helping others, but\nalso a very stylish Go Mentor trucker hat. We had contributors of all\nages and experience levels coming from North and South America, Africa, Europe,\nAsia, and Australia. It was truly a worldwide effort of Gophers coming together\nat GopherCon.\u003c/p\u003e\n\u003cp\u003eOne of our reasons for running the workshop was for it to act as a forcing\nfunction to make us improve our contributor experience. In preparation for the\nworkshop, we rewrote our contributor guide, including adding a “troubleshooting”\nsection and built a tool \u003ccode\u003ego-contrib-init\u003c/code\u003e, which automated the process of\nsetting up a development environment to be able to contribute to Go.\u003c/p\u003e\n\u003cp\u003eFor the workshop itself, we developed a presentation \u003cem\u003e“Contributing to Go,”\u003c/em\u003e\nand a dashboard / scoreboard that was presented during the event. The\nscoreboard was designed to encourage us all to work together towards a common\ngoal of seeing our collective score increase. Participants added 1, 2 or 3 points to\nthe total score when they performed actions like registering an account, making\na change list (also known as a CL, similar to a pull request),\namending a CL, or submitting a CL.\u003c/p\u003e\n\u003cdiv class=\"image\"\u003e\n  \u003cimg src=\"contributor-workshop/image17.png\" alt=\"\"/\u003e\n\u003c/div\u003e\n\u003cp\u003eBrad Fitzpatrick, who stayed home from GopherCon this year, was ready and\nwaiting to review all CLs submitted. He was so quick to review that many people\nthought he was an automated bot. Internally our team is now calling him\n“BradBot” mostly because we are in awe and a bit jealous.\u003c/p\u003e\n\u003cdiv class=\"image\"\u003e\n  \u003cimg src=\"contributor-workshop/image9.jpg\" alt=\"\"/\u003e\n\u003c/div\u003e\n\u003cdiv class=\"image\"\u003e\n  \u003cimg src=\"contributor-workshop/image6.png\" alt=\"\"/\u003e\n\u003c/div\u003e\n\u003ch3 id=\"impact\"\u003eImpact\u003c/h3\u003e\n\u003cp\u003eWe had a total of 65 CLs submitted from the people who participated in the\nworkshop (within a week of the workshop). Of these, 44 were from contributors\nwho had never previously contributed to any of the repos in the Go project.\nHalf (22) of these contributions were already merged. Many of the others are\nwaiting on the codebase to thaw as we are in the middle of a freeze for the\nupcoming 1.9 release. In addition to CLs, many contributed to the project in\nthe form of bug reports,\n\u003ca href=\"/wiki/Gardening\"\u003egardening tasks\u003c/a\u003e, and other types\nof contributions.\u003c/p\u003e\n\u003cp\u003eThe most common type of contribution was an example function to be used in the\ndocumentation. The \u003ca href=\"/blog/survey2016-results\"\u003eGo User survey\u003c/a\u003e\nidentified that our documentation was significantly lacking examples. In the\npresentation, we asked users to find a package they loved and to add an example. In\nthe Go project, examples are written as code in Go files\n(with specific naming) and the \u003ccode\u003ego doc\u003c/code\u003e tool displays them alongside the documentation.\nThis is a perfect first contribution as it’s something that can be merged\nduring a freeze, it’s of critical importance to our users, and it’s an addition\nthat has a relatively narrow scope.\u003c/p\u003e\n\u003cp\u003eOne of the examples added is that of creating a Stringer, one of the more\nwidely used interfaces in Go.\n\u003ca href=\"/cl/49270/\"\u003eCL 49270\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003eIn addition to examples, many people contributed critical bug fixes including:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"/cl/48988/\"\u003eCL 48988\u003c/a\u003e fixing \u003ca href=\"/issue/21029\"\u003eissue #21029\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"/cl/49050/\"\u003eCL 49050\u003c/a\u003e fixing \u003ca href=\"/issue/20054\"\u003eissue #20054\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"/cl/49031/\"\u003eCL 49031\u003c/a\u003e fixing \u003ca href=\"/issue/20166\"\u003eissue #20166\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"/cl/49170/\"\u003eCL 49170\u003c/a\u003e fixing \u003ca href=\"/issue/20877\"\u003eissue #20877\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eSome people even surprised us by arriving with a bug in mind that they wanted\nto fix. Nikhita arrived ready to tackle\n\u003ca href=\"/issue/20786\"\u003eissue #20786\u003c/a\u003e\nand she did submit\n\u003ca href=\"/cl/48871/\"\u003eCL 48871\u003c/a\u003e,\nafter which she tweeted:\u003c/p\u003e\n\u003cdiv class=\"image\"\u003e\n  \u003cimg src=\"contributor-workshop/image19.png\" alt=\"\"/\u003e\n\u003c/div\u003e\n\u003cp\u003eNot only were some great improvements made, but most importantly, we narrowed\nthe gap between the core Go team and the broader community members. Many people\non the Go team remarked that the community members were teaching them things\nabout the Go project. People in the community (in person, and on Twitter)\nremarked that felt welcome to participate in the project.\u003c/p\u003e\n\u003cdiv class=\"image\"\u003e\n  \u003cimg src=\"contributor-workshop/image12.png\" alt=\"\"/\u003e\n\u003c/div\u003e\n\u003cdiv class=\"image\"\u003e\n  \u003cimg src=\"contributor-workshop/image13.png\" alt=\"\"/\u003e\n\u003c/div\u003e\n\u003cdiv class=\"image\"\u003e\n  \u003cimg src=\"contributor-workshop/image3.png\" alt=\"\"/\u003e\n\u003c/div\u003e\n\u003ch3 id=\"future\"\u003eFuture\u003c/h3\u003e\n\u003cp\u003eThe event was successful well beyond our expectations. Sameer Ajmani, Go team\nmanager said, “The contributor workshop was incredibly fun and educational–for\nthe Go team.  We cringed as users hit the rough edges in our process, and\ncelebrated when they got up on the dashboard. The cheer when the group score\nhit 1000 was awesome.”\u003c/p\u003e\n\u003cp\u003eWe are looking into ways to make this workshop easier to run for future events\n(like meetups and conferences). Our biggest challenge is providing enough\nmentorship so that users feel supported. If you have any ideas or would like to\nhelp with this process please \u003ca href=\"mailto:spf@golang.org\"\u003elet me know\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003eI’ve asked a few participants of the event to share their experiences below:\u003c/p\u003e\n\u003ch2 id=\"my-contribution-experience\"\u003eMy Contribution Experience\u003c/h2\u003e\n\u003cp\u003eby \u003ca href=\"https://twitter.com/cassandraoid\" rel=\"noreferrer\" target=\"_blank\"\u003eCassandra\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003eWhen I heard about the go-contrib workshop I was very excited and then I was\nextremely intimidated. I was encouraged by a member of the Go team to\nparticipate, so I thought what the heck.\u003c/p\u003e\n\u003cp\u003eAs I walked into the room (let’s be real, I ran into the room because I was\nrunning late) I was pleased to see the room was jam-packed. I looked around for\npeople in Gopher caps, which was the main indicator they were teachers. I sat\ndown at one of the 16 round tables that had two hats and three non-hats.\nBrought up my screen and was ready to roll…\u003c/p\u003e\n\u003cp\u003eJess Frazelle stood up and started the presentation and provided the group with\n\u003ca href=\"https://docs.google.com/presentation/d/1ap2fycBSgoo-jCswhK9lqgCIFroE1pYpsXC1ffYBCq4/edit#slide=id.p\" rel=\"noreferrer\" target=\"_blank\"\u003ea link\u003c/a\u003e\nto make it easy to follow.\u003c/p\u003e\n\u003cdiv class=\"image\"\u003e\n  \u003cimg src=\"contributor-workshop/image16.png\" alt=\"\"/\u003e\n\u003c/div\u003e\n\u003cp\u003eThe murmurs grew from a deep undercurrent to a resounding melody of voices,\npeople were getting their computers set up with Go, they were skipping ahead to\nmake sure their GOPATH was set, and were… wait what’s Gerrit?\u003c/p\u003e\n\u003cp\u003eMost of us had to get a little intro to Gerrit. I had no clue what it was, but\nluckily there was a handy slide. Jess explained that it was an alternative to\nGitHub with slightly more advanced code review tools. We then went through\nGitHub vs Geritt terminology, so we had better understanding of the process.\u003c/p\u003e\n\u003cdiv class=\"image\"\u003e\n  \u003cimg src=\"contributor-workshop/image10.png\" alt=\"\"/\u003e\n\u003c/div\u003e\n\u003cp\u003eOk, now it was time to become a \u003cstrong\u003efreaking Go contributor\u003c/strong\u003e.\u003c/p\u003e\n\u003cp\u003eTo make this more exciting than it already is, the Go team set up a game where\nwe could track as a group how many points we could rack up based on the Gerrit\nscore system.\u003c/p\u003e\n\u003cdiv class=\"image\"\u003e\n  \u003cimg src=\"contributor-workshop/image7.png\" alt=\"\"/\u003e\n\u003c/div\u003e\n\u003cp\u003eSeeing your name pop up on the board and listening to everyone’s excitement was\nintoxicating. It also invoked a sense of teamwork that lead to a feeling of\ninclusion and feeling like you were truly a part of the Go community.\u003c/p\u003e\n\u003cdiv class=\"image\"\u003e\n  \u003cimg src=\"contributor-workshop/image11.png\" alt=\"\"/\u003e\n\u003c/div\u003e\n\u003cp\u003eIn 6 steps a room of around 80 people were able to learn how to contribute to\ngo within an hour. That’s a feat!\u003c/p\u003e\n\u003cp\u003eIt wasn’t nearly as difficult as I anticipated and it wasn’t out of scope for a\ntotal newbie. It fostered a sense of community in an active and tangible way as\nwell as a sense of inclusion in the illustrious process of Go contributions.\u003c/p\u003e\n\u003cp\u003eI’d personally like to thank the Go Team, the Gopher mentors in hats, and my\nfellow participants for making it one of my most memorable moments at\nGopherCon.\u003c/p\u003e\n\u003ch2 id=\"my-contribution-experience-1\"\u003eMy Contribution Experience\u003c/h2\u003e\n\u003cp\u003eby \u003ca href=\"https://twitter.com/mbbroberg\" rel=\"noreferrer\" target=\"_blank\"\u003eMatt\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003eI’ve always found programming languages to be intimidating. It’s the code that\nenables the world to write code. Given the impact, surely smarter people than\nme should be working on it… but that fear was something to overcome. So when\nthe opportunity to join a workshop to contribute to my new favorite programming\nlanguage came up, I was excited to see how I could help. A month\nlater, I’m now certain that anyone and everyone can (and should) contribute back to Go.\u003c/p\u003e\n\u003cp\u003eHere are my very verbose steps to go from 0 to 2 contributions to Go:\u003c/p\u003e\n\u003ch3 id=\"the-setup\"\u003eThe Setup\u003c/h3\u003e\n\u003cp\u003eGiven Go’s use of Gerrit, I started by setting up my environment for it. \u003ca href=\"https://docs.google.com/presentation/d/1ap2fycBSgoo-jCswhK9lqgCIFroE1pYpsXC1ffYBCq4/edit#slide=id.g1f953ef7df_0_9\" rel=\"noreferrer\" target=\"_blank\"\u003eJess Frazzelle’s guide\u003c/a\u003e\nis a great place to start to not miss a step.\u003c/p\u003e\n\u003cp\u003eThe real fun starts when you clone the Go repo. Ironically, you don’t hack on\nGo under \u003ccode\u003e$GOPATH\u003c/code\u003e, so I put it in my other workspace (which is \u003ccode\u003e~/Develop\u003c/code\u003e).\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003ecd $DEV # That\u0026#39;s my source code folder outside of $GOPATH\ngit clone --depth 1 https://go.googlesource.com/go\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eThen install the handy dandy helper tool, \u003ccode\u003ego-contrib-init\u003c/code\u003e:\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003ego get -u golang.org/x/tools/cmd/go-contrib-init\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eNow you can run \u003ccode\u003ego-contrib-init\u003c/code\u003e from the \u003ccode\u003ego/\u003c/code\u003e folder we cloned above and see\nwhether or not we’re ready to contribute. But hold on if you’re following along,\nyou’re not ready just yet.\u003c/p\u003e\n\u003cp\u003eNext, install \u003ccode\u003ecodereview\u003c/code\u003e so you can participate in a Gerrit code review:\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003ego get -u golang.org/x/review/git-codereview\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eThis package includes \u003ccode\u003egit change\u003c/code\u003e and \u003ccode\u003egit mail\u003c/code\u003e which will replace your\nnormal workflow of \u003ccode\u003egit commit\u003c/code\u003e and \u003ccode\u003egit push\u003c/code\u003e respectively.\u003c/p\u003e\n\u003cp\u003eOkay, installations are out of the way. Now set up your \u003ca href=\"https://go-review.googlesource.com/settings/#Profile\" rel=\"noreferrer\" target=\"_blank\"\u003eGerrit account here\u003c/a\u003e,\nthen \u003ca href=\"https://go-review.googlesource.com/settings#Agreements\" rel=\"noreferrer\" target=\"_blank\"\u003esign the CLA\u003c/a\u003e appropriate for\nyou (I signed a personal one for all Google projects, but choose the right option for you.\nYou can see all CLAs you’ve signed at \u003ca href=\"https://cla.developers.google.com/clas\" rel=\"noreferrer\" target=\"_blank\"\u003ecla.developers.google.com/clas\u003c/a\u003e).\u003c/p\u003e\n\u003cp\u003eAND BAM. You’re good (to go)! But where to contribute?\u003c/p\u003e\n\u003ch3 id=\"contributing\"\u003eContributing\u003c/h3\u003e\n\u003cp\u003eIn the workshop, they sent us into the \u003ccode\u003escratch\u003c/code\u003e repository, which is a safe place to\nfool around in order to master the workflow:\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003ecd $(go env GOPATH)/src/golang.org/x\ngit clone --depth 1 [[https://go.googlesource.com/scratch][go.googlesource.com/scratch]]\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eFirst stop is to \u003ccode\u003ecd\u003c/code\u003e in and run \u003ccode\u003ego-contrib-init\u003c/code\u003e to make sure you’re ready to contribute:\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003ego-contrib-init\nAll good. Happy hacking!\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eFrom there, I made a folder named after my GitHub account, did a \u003ccode\u003egit add -u\u003c/code\u003e\nthen took \u003ccode\u003egit change\u003c/code\u003e for a spin. It has a hash that keeps track of your work,\nwhich is the one line you shouldn’t touch. Other than that, it feels just like\n\u003ccode\u003egit commit\u003c/code\u003e. Once I got the commit message matching the format of\n\u003ccode\u003epackage: description\u003c/code\u003e (description begins with a lowercase), I used\n\u003ccode\u003egit mail\u003c/code\u003e to send it over to Gerrit.\u003c/p\u003e\n\u003cp\u003eTwo good notes to take at this point: \u003ccode\u003egit change\u003c/code\u003e also works like \u003ccode\u003egit commit --amend\u003c/code\u003e, so\nif you need to update your patch you can \u003ccode\u003eadd\u003c/code\u003e then \u003ccode\u003echange\u003c/code\u003e and it will all\nlink to the same patch. Secondly, you can always review your patch from your\n\u003ca href=\"https://go-review.googlesource.com/dashboard/\" rel=\"noreferrer\" target=\"_blank\"\u003epersonal Gerrit dashboard\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003eAfter a few back and forths, I officially had a contribution to Go! And if Jaana\nis right, it might be the first with emojis ✌️.\u003c/p\u003e\n\u003cdiv class=\"image\"\u003e\n  \u003cimg src=\"contributor-workshop/image15.png\" alt=\"\"/\u003e\n\u003c/div\u003e\n\u003cdiv class=\"image\"\u003e\n  \u003cimg src=\"contributor-workshop/image23.png\" alt=\"\"/\u003e\n\u003c/div\u003e\n\u003ch3 id=\"contributing-for-real\"\u003eContributing, For Real\u003c/h3\u003e\n\u003cp\u003eThe scratch repo is fun and all, but there’s a ton of ways to get into the\ndepths of Go’s packages and give back. It’s at this point where I cruised\naround the many packages available to see what was available and interesting to\nme. And by “cruised around” I mean attempted to find a list of packages, then\nwent to my source code to see what’s around under the \u003ccode\u003ego/src/\u003c/code\u003e folder:\u003c/p\u003e\n\u003cdiv class=\"image\"\u003e\n  \u003cimg src=\"contributor-workshop/image22.png\" alt=\"\"/\u003e\n\u003c/div\u003e\n\u003cp\u003eI decided to see what I can do in the \u003ccode\u003eregexp\u003c/code\u003e package, maybe out of love and\nfear of regex. Here’s where I switched to the\n\u003ca href=\"https://godoc.org/regexp\" rel=\"noreferrer\" target=\"_blank\"\u003ewebsite’s view of the package\u003c/a\u003e (it’s good to know\nthat each standard package can be found at \u003ca href=\"https://godoc.org/$PACKAGENAME)\" rel=\"noreferrer\" target=\"_blank\"\u003ehttps://godoc.org/$PACKAGENAME)\u003c/a\u003e. In\nthere I noticed that \u003ccode\u003eQuoteMeta\u003c/code\u003e was missing the same level of detailed examples\nother functions have (and I could use the practice using Gerrit).\u003c/p\u003e\n\u003cdiv class=\"image\"\u003e\n  \u003cimg src=\"contributor-workshop/image1.png\" alt=\"\"/\u003e\n\u003c/div\u003e\n\u003cp\u003eI started looking at \u003ccode\u003ego/src/regexp\u003c/code\u003e to try to find where to add examples and I\ngot lost pretty quickly. Lucky for me, \u003ca href=\"https://twitter.com/francesc\" rel=\"noreferrer\" target=\"_blank\"\u003eFrancesc\u003c/a\u003e was around that day. He walked\nme through how all examples are actually in-line tests in a \u003ccode\u003eexample_test.go\u003c/code\u003e\nfile. They follow the format of test cases followed by “Output” commented out\nand then the answers to the tests. For example:\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003efunc ExampleRegexp_FindString() {\n    re := regexp.MustCompile(\u0026#34;fo.?\u0026#34;)\n    fmt.Printf(\u0026#34;%q\\n\u0026#34;, re.FindString(\u0026#34;seafood\u0026#34;))\n    fmt.Printf(\u0026#34;%q\\n\u0026#34;, re.FindString(\u0026#34;meat\u0026#34;))\n    // Output:\n    // \u0026#34;foo\u0026#34;\n    // \u0026#34;\u0026#34;\n}\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eKind of cool, right?? I followed Francesc’s lead and added a function\n\u003ccode\u003eExampleQuoteMeta\u003c/code\u003e and added a few I thought would be helpful. From there it’s\na \u003ccode\u003egit change\u003c/code\u003e and \u003ccode\u003egit mail\u003c/code\u003e to Gerrit!\u003c/p\u003e\n\u003cp\u003eI have to say that Steve Francia challenged me to “find something that isn’t an\nopen issue and fix it,” so I included some documentation changes for QuoteMeta\nin my patch. It’s going to be open for a bit longer given the additional scope,\nbut I think it’s worth it on this one.\u003c/p\u003e\n\u003cp\u003eI can hear your question already: how did I verify it worked? Well it wasn’t\neasy to be honest. Running \u003ccode\u003ego test example_test.go -run QuoteMeta -v\u003c/code\u003e won’t do\nit since we’re working outside of our $GOPATH. I struggled to figure it out\nuntil \u003ca href=\"https://medium.com/@vCabbage/go-testing-standard-library-changes-1e9cbed11339\" rel=\"noreferrer\" target=\"_blank\"\u003eKale Blakenship wrote this awesome post on testing in Go\u003c/a\u003e.\nBookmark this one for later.\u003c/p\u003e\n\u003cp\u003eYou can see my completed \u003ca href=\"https://go-review.googlesource.com/c/49130/\" rel=\"noreferrer\" target=\"_blank\"\u003econtribution here\u003c/a\u003e. What I also hope you see is\nhow simple it is to get into the flow of contributing. If you’re like me,\nyou’ll be good at finding a small typo or missing example in the docs to start to\nget used to the \u003ccode\u003egit codereview\u003c/code\u003e workflow. After that, you’ll be ready to find\nan open issue, ideally one \u003ca href=\"https://github.com/golang/go/milestones\" rel=\"noreferrer\" target=\"_blank\"\u003etagged for an upcoming release\u003c/a\u003e, and give it a go. No matter\nwhat you choose to do, definitely go forth and do it. The Go team proved to me\njust how much they care about helping us all contribute back. I can’t wait for\nmy next \u003ccode\u003egit mail\u003c/code\u003e.\u003c/p\u003e\n\u003ch2 id=\"my-mentorship-experience\"\u003eMy Mentorship Experience\u003c/h2\u003e\n\u003cp\u003eby \u003ca href=\"https://twitter.com/dmitshur\" rel=\"noreferrer\" target=\"_blank\"\u003eDmitri\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003eI was looking forward to participating in the Contribution Workshop event as a\nmentor. I had high expectations for the event, and thought it was a great idea\nbefore it started.\u003c/p\u003e\n\u003cp\u003eI made my first contribution to Go on May 10th, 2014. I remember it was about\nfour months from the moment I wanted to contribute, until that day, when I\nactually sent my first CL. It took that long to build up the courage and fully\ncommit to figuring out the process. I was an experienced software engineer at\nthe time. Despite that, the Go contribution process felt alien—being unlike all\nother processes I was already familiar with—and therefore seemed intimidating.\nIt was well documented though, so I knew it would be just a matter of finding\nthe time, sitting down, and doing it. The “unknown” factor kept me from giving\nit a shot.\u003c/p\u003e\n\u003cp\u003eAfter a few months passed, I thought “enough is enough,” and decided to\ndedicate an entire day of an upcoming weekend to figuring out the process. I\nset aside all of Saturday for doing one thing: sending my first CL to Go. I\nopened up \u003ca href=\"/doc/contribute.html\"\u003ethe Contribution Guide\u003c/a\u003e\nand started following all the steps, from the very top. Within an hour, I was\ndone. I had sent my first CL. I was both in awe and shock. In awe, because I\nhad finally sent a contribution to Go, and it was accepted! In shock, because,\nwhy did I wait so long to finally do this? Following the steps in\n\u003ca href=\"/doc/contribute.html\"\u003ethe Contribution Guide\u003c/a\u003e was very\neasy, and the entire process went completely smoothly. If only someone had told\nme that I’d be done within an hour and nothing would go wrong, I would’ve done\nit much sooner!\u003c/p\u003e\n\u003cp\u003eWhich brings me to this event and why I thought it was such a good idea. For\nanyone who ever wanted to contribute to Go, but felt daunted by the unfamiliar\nand seemingly lengthy process (like I was during those four months), this was\ntheir chance! Not only is it easy to commit to figuring it out by attending the\nevent, but also the Go team and helpful volunteer mentors would be there to\nhelp you along the way.\u003c/p\u003e\n\u003cp\u003eDespite the already high expectations I had for the event, my expectations were\nexceeded. For one, the Go team had prepared really well and invested a lot in\nmaking the event that much more enjoyable for everyone. There was a very fun\npresentation that went over all the contributing steps quickly. There was a\ndashboard made for the event, where everyone’s successfully completed steps\nwere rewarded with points towards a global score. That made it into a very\ncollaborative and social event! Finally, and most importantly, they were Go\nteam members like Brad Fitzpatrick behind the scenes, helping review CLs\npromptly! That meant the CLs that were submitted received reviews quickly, with\nactionable next steps, so everyone could move forward and learn more.\u003c/p\u003e\n\u003cp\u003eI originally anticipated the event to be somewhat dull, in that the\ncontribution steps are extremely simple to follow. However, I found that wasn’t\nalways the case, and I was able to use my expertise in Go to help out people\nwho got stuck in various unexpected places. It turns out, the real world is\nfilled with edge cases. For instance, someone had two git emails, one personal\nand another for work. There was a delay with signing the CLA for the work\nemail, so they tried to use their personal email instead. That meant each\ncommit had to be amended to use the right email, something the tools didn’t\ntake into account. (Luckily, there is a troubleshooting section in the\ncontribution guide covering this exact issue!) There were other subtle mistakes\nor environment misconfiguration that some people ran into, because having more\nthan one Go installation was a bit unusual. Sometimes, the GOROOT environment\nvariable had to be explicitly set, temporarily, to get godoc to show changes in\nthe right standard library (I was tongue-in-cheek looking over my shoulder to\ncheck for Dave Cheney as I uttered those words).\u003c/p\u003e\n\u003cp\u003eOverall, I oversaw a few new gophers make their first Go contributions. They\nsent the CLs, responded to review feedback, made edits, iterated until everyone\nwas happy, and eventually saw their first Go contributions get merged to\nmaster! It was very rewarding to see the happiness on their faces, because the\njoy of making one’s first contribution is something I can relate to myself. It\nwas also great to be able to help them out, and explain tricky situations that\nthey sometimes found themselves. From what I can tell, many happy gophers\nwalked away from the event, myself included!\u003c/p\u003e\n\u003ch2 id=\"photos-from-the-event\"\u003ePhotos from the event\u003c/h2\u003e\n\u003cdiv class=\"image\"\u003e\n  \u003cimg src=\"contributor-workshop/image2.jpg\" alt=\"\"/\u003e\n\u003c/div\u003e\n\u003cdiv class=\"image\"\u003e\n  \u003cimg src=\"contributor-workshop/image4.jpg\" alt=\"\"/\u003e\n\u003c/div\u003e\n\u003cdiv class=\"image\"\u003e\n  \u003cimg src=\"contributor-workshop/image5.jpg\" alt=\"\"/\u003e\n\u003c/div\u003e\n\u003cdiv class=\"image\"\u003e\n  \u003cimg src=\"contributor-workshop/image8.jpg\" alt=\"\"/\u003e\n\u003c/div\u003e\n\u003cdiv class=\"image\"\u003e\n  \u003cimg src=\"contributor-workshop/image14.jpg\" alt=\"\"/\u003e\n\u003c/div\u003e\n\u003cdiv class=\"image\"\u003e\n  \u003cimg src=\"contributor-workshop/image18.jpg\" alt=\"\"/\u003e\n\u003c/div\u003e\n\u003cdiv class=\"image\"\u003e\n  \u003cimg src=\"contributor-workshop/image20.jpg\" alt=\"\"/\u003e\n\u003c/div\u003e\n\u003cdiv class=\"image\"\u003e\n  \u003cimg src=\"contributor-workshop/image21.jpg\" alt=\"\"/\u003e\n\u003c/div\u003e\n\u003cp\u003ePhotos by Sameer Ajmani \u0026amp; Steve Francia\u003c/p\u003e\n\n    \u003c/div\u003e",
  "Date": "2017-08-09T00:00:00Z",
  "Author": "Steve Francia, Cassandra Salisbury, Matt Broberg,  and Dmitri Shuralyov"
}