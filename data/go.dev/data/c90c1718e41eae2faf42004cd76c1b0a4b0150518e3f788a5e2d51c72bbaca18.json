{
  "Source": "go.dev",
  "Title": "Two recent Go articles",
  "Link": "https://go.dev/blog/two-recent-go-articles",
  "Content": "\u003cdiv class=\"Article\" data-slug=\"/blog/two-recent-go-articles\"\u003e\n    \n    \u003ch1 class=\"small\"\u003e\u003ca href=\"/blog/\"\u003eThe Go Blog\u003c/a\u003e\u003c/h1\u003e\n    \n\n    \u003ch1\u003eTwo recent Go articles\u003c/h1\u003e\n      \n      \u003cp class=\"author\"\u003e\n      Andrew Gerrand\u003cbr/\u003e\n      6 March 2013\n      \u003c/p\u003e\n      \n      \u003ch2 id=\"introduction\"\u003eIntroduction\u003c/h2\u003e\n\u003cp\u003eIn today’s blog post I’d like to highlight a couple of recent articles about Go.\u003c/p\u003e\n\u003ch2 id=\"go-at-google\"\u003eGo at Google\u003c/h2\u003e\n\u003cp\u003eIn October last year, Rob Pike presented a keynote at the ACM \u003ca href=\"http://splashcon.org/2012/\" rel=\"noreferrer\" target=\"_blank\"\u003eSPLASH\u003c/a\u003e conference in Tucson.\nThe talk, titled \u003ca href=\"/talks/2012/splash.slide\"\u003eGo at Google\u003c/a\u003e,\nwas a comprehensive discussion of the motivations behind Go.\nRob later expanded on his talk to produce an essay titled \u003ca href=\"/talks/2012/splash.article\"\u003eGo at Google: Language Design in the Service of Software Engineering\u003c/a\u003e.\nHere is the abstract:\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003eThe Go programming language was conceived in late 2007 as an\nanswer to some of the problems we were seeing developing\nsoftware infrastructure at Google. The computing landscape\ntoday is almost unrelated to the environment in which the\nlanguages being used, mostly C++, Java, and Python, had been\ncreated. The problems introduced by multicore processors,\nnetworked systems, massive computation clusters, and the web\nprogramming model were being worked around rather than\naddressed head-on. Moreover, the scale has changed: today\u0026#39;s\nserver programs comprise tens of millions of lines of code,\nare worked on by hundreds or even thousands of programmers,\nand are updated literally every day.  To make matters worse,\nbuild times, even on large compilation clusters, have\nstretched to many minutes, even hours.\n\nGo was designed and developed to make working in this\nenvironment more productive. Besides its better-known\naspects such as built-in concurrency and garbage collection,\nGo\u0026#39;s design considerations include rigorous dependency\nmanagement, the adaptability of software architecture as\nsystems grow, and robustness across the boundaries between\ncomponents.\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eThis article explains how these issues were addressed while building an efficient,\ncompiled programming language that feels lightweight and pleasant.\nExamples and explanations will be taken from the real-world problems faced at Google.\u003c/p\u003e\n\u003cp\u003eIf you have wondered about the design decisions behind Go,\nyou may find your questions answered by \u003ca href=\"/talks/2012/splash.article\"\u003ethe essay\u003c/a\u003e.\nIt is recommended reading for both new and experienced Go programmers.\u003c/p\u003e\n\u003ch2 id=\"go-at-the-google-developers-academy\"\u003eGo at the Google Developers Academy\u003c/h2\u003e\n\u003cp\u003eAt Google I/O 2012 the Google Developers team \u003ca href=\"http://googledevelopers.blogspot.com.au/2012/06/google-launches-new-developer-education.html\" rel=\"noreferrer\" target=\"_blank\"\u003elaunched\u003c/a\u003e the \u003ca href=\"https://developers.google.com/academy/\" rel=\"noreferrer\" target=\"_blank\"\u003eGoogle Developers Academy\u003c/a\u003e,\na program that provides training materials on Google technologies.\nGo is one of those technologies and we’re pleased to announce the first\nGDA article featuring Go front and center:\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"https://developers.google.com/appengine/training/go-plus-appengine/\" rel=\"noreferrer\" target=\"_blank\"\u003eGetting Started with Go, App Engine and Google+ API\u003c/a\u003e is\nan introduction to writing web applications in Go.\nIt demonstrates how to build and deploy App Engine applications and make\ncalls to the Google+ API using the Google APIs Go Client.\nThis is a great entry point for Go programmers eager to get started with\nGoogle’s developer ecosystem.\u003c/p\u003e\n\n    \u003c/div\u003e",
  "Date": "2013-03-06T00:00:00Z",
  "Author": "Andrew Gerrand"
}