{
  "Source": "go.dev",
  "Title": "Go 1.3 is released",
  "Link": "https://go.dev/blog/go1.3",
  "Content": "\u003cdiv class=\"Article\" data-slug=\"/blog/go1.3\"\u003e\n    \n    \u003ch1 class=\"small\"\u003e\u003ca href=\"/blog/\"\u003eThe Go Blog\u003c/a\u003e\u003c/h1\u003e\n    \n\n    \u003ch1\u003eGo 1.3 is released\u003c/h1\u003e\n      \n      \u003cp class=\"author\"\u003e\n      Andrew Gerrand\u003cbr/\u003e\n      18 June 2014\n      \u003c/p\u003e\n      \n      \u003cp\u003eToday we are happy to announce the release of \u003ca href=\"/doc/go1.3\"\u003eGo 1.3\u003c/a\u003e.\nThis release comes six months after our last major release and provides better\nperformance, improved tools, support for running Go in new environments, and more.\nAll Go users should upgrade to Go 1.3.\nYou can grab the release from our \u003ca href=\"/dl/\"\u003edownloads page\u003c/a\u003e and\nfind the full list of improvements and fixes in the\n\u003ca href=\"/doc/go1.3\"\u003erelease notes\u003c/a\u003e.\nWhat follows are some highlights.\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"https://godoc.org/code.google.com/p/go.tools/cmd/godoc\" rel=\"noreferrer\" target=\"_blank\"\u003eGodoc\u003c/a\u003e,\nthe Go documentation server, now performs static analysis.\nWhen enabled with the -analysis flag, analysis results are presented\nin both the source and package documentation views, making it easier\nthan ever to navigate and understand Go programs.\nSee \u003ca href=\"/lib/godoc/analysis/help.html\"\u003ethe documentation\u003c/a\u003e for the details.\u003c/p\u003e\n\u003cp\u003eThe gc toolchain now supports the Native Client (NaCl) execution sandbox on the\n32- and 64-bit Intel architectures.\nThis permits the safe execution of untrusted code, useful in environments such as the\n\u003ca href=\"/blog/playground\"\u003ePlayground\u003c/a\u003e.\nTo set up NaCl on your system see the \u003ca href=\"/wiki/NativeClient\"\u003eNativeClient wiki page\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003eAlso included in this release is experimental support for the DragonFly BSD,\nPlan 9, and Solaris operating systems. To use Go on these systems you must\n\u003ca href=\"/doc/install/source\"\u003einstall from source\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003eChanges to the runtime have improved the\n\u003ca href=\"/doc/go1.3#performance\"\u003eperformance\u003c/a\u003e of Go binaries,\nwith an improved garbage collector, a new\n\u003ca href=\"/s/contigstacks\"\u003e“contiguous” goroutine stack management strategy\u003c/a\u003e,\na faster race detector, and improvements to the regular expression engine.\u003c/p\u003e\n\u003cp\u003eAs part of the general \u003ca href=\"/s/go13linker\"\u003eoverhaul\u003c/a\u003e of the Go\nlinker, the compilers and linkers have been refactored. The instruction\nselection phase that was part of the linker has been moved to the compiler.\nThis can speed up incremental builds for large projects.\u003c/p\u003e\n\u003cp\u003eThe \u003ca href=\"/doc/go1.3#garbage_collector\"\u003egarbage collector\u003c/a\u003e is now\nprecise when examining stacks (collection of the heap has been precise since Go\n1.1), meaning that a non-pointer value such as an integer will never be\nmistaken for a pointer and prevent unused memory from being reclaimed. This\nchange affects code that uses package unsafe; if you have unsafe code you\nshould read the \u003ca href=\"/doc/go1.3#garbage_collector\"\u003erelease notes\u003c/a\u003e\ncarefully to see if your code needs updating.\u003c/p\u003e\n\u003cp\u003eWe would like to thank the many people who contributed to this release;\nit would not have been possible without your help.\u003c/p\u003e\n\u003cp\u003eSo, what are you waiting for?\nHead on over to the \u003ca href=\"/dl/\"\u003edownloads page\u003c/a\u003e and start hacking.\u003c/p\u003e\n\n    \u003c/div\u003e",
  "Date": "2014-06-18T00:00:00Z",
  "Author": "Andrew Gerrand"
}