{
  "Source": "io-meter",
  "Title": "Web 设计新趋势: 使用 SVG 代替 Web Icon Font",
  "Link": "https://io-meter.com/2014/07/20/replace-icon-fonts-with-svg/",
  "Content": "\u003cdiv class=\"entry\"\u003e\n      \u003cp\u003e如果你还在使用 Icon Font 作为网页中显示图标的实现方案，那么你可能有点 Out 了。\n由于使用 Icon Font 显示图标存在一些缺陷，开发者们一直在致力于探索使用 SVG 作为替代的方法。\n这篇文章列举了目前 SVG 比较常见的使用方法。\u003c/p\u003e\n\u003ca id=\"more\"\u003e\u003c/a\u003e\n\u003cp\u003e关于使用 Icon Font 的缺陷，这篇来自 CSS Trick 的 \u003ca href=\"https://css-tricks.com/icon-fonts-vs-svg/\" target=\"_blank\" rel=\"noopener\"\u003e《Inline SVG vs Icon Font》\u003c/a\u003e\n可谓是总结的相当全面了。在我看来，Icon Font 的主要缺陷有以下几条：\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003e浏览器将其视为文字进行抗锯齿优化，有时得到的效果并没有想象中那么锐利。\n尤其是在不同系统下对文字进行抗锯齿的算法不同，可能会导致显示效果不同。\u003c/li\u003e\n\u003cli\u003eIcon Font 作为一种字体，Icon 显示的大小和位置可能要受到\u003ccode\u003efont-size\u003c/code\u003e、\u003ccode\u003eline-height\u003c/code\u003e、\u003ccode\u003eword-spacing\u003c/code\u003e等等 CSS 属性的影响。\nIcon 所在容器的 CSS 样式可能对 Icon 的位置产生影响，调整起来很不方便。\u003c/li\u003e\n\u003cli\u003e使用上存在不便。首先，加载一个包含数百图标的 Icon Font，却只使用其中几个图标，非常浪费加载时间。\n自己制作 Icon Font 以及把多个 Icon Font 中用到的图标整合成一个 Font 也非常不方便。\u003c/li\u003e\n\u003cli\u003e为了实现最大程度的浏览器支持，可能要提供至少四种不同类型的字体文件。包括\u003ccode\u003eTTF\u003c/code\u003e、\u003ccode\u003eWOFF\u003c/code\u003e、\u003ccode\u003eEOT\u003c/code\u003e\n以及一个使用 SVG 格式定义的字体。\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003e开发者们想出了多种使用 SVG 的技巧来解决/缓解上述问题，下面我们来逐个盘点目前常见的使用方法。\u003c/p\u003e\n\u003ch1 id=\"img/object__u6807_u7B7E\"\u003e\u003ca href=\"#img/object__u6807_u7B7E\" class=\"headerlink\" title=\"img/object 标签\"\u003e\u003c/a\u003eimg/object 标签\u003c/h1\u003e\u003cp\u003e使用 img 和 object 标签直接引用 SVG 是早期常见的使用方法。\n这种方法的缺点主要在于要求每个图标都单独保存成一个 SVG 文件，使用时也是单独请求的。\n如果在页面中使用的多个图标，每个都是单独请求的话会产生很多请求数，增加服务端的负载和拖慢页面加载速度，\n因此现在很少使用了。\u003c/p\u003e\n\u003cp\u003e不过，在 IE 中可以使用 object 标签实现最后讨论的 SVG Defs/Symbols 的效果。\u003c/p\u003e\n\u003ch1 id=\"Inline_SVG\"\u003e\u003ca href=\"#Inline_SVG\" class=\"headerlink\" title=\"Inline SVG\"\u003e\u003c/a\u003eInline SVG\u003c/h1\u003e\u003cp\u003e所谓 Inline SVG，就是直接把 SVG 写入 HTML 中，这种方法简单直接，而且具有最强的可调性。\n使用这种方法，你可以使用 CSS 的\u003ccode\u003efill\u003c/code\u003e属性和\u003ccode\u003estroke\u003c/code\u003e属性来控制填充颜色和边线的颜色，\n如果 SVG 图标包含多个部分，你甚至可以设置每个部分的样式。同时，使用 JavaScript 修改 SVG 和生成动画效果都可以实现。\u003c/p\u003e\n\u003cp\u003eInline SVG 作为 HTML 文档的一部分，不需要单独请求。临时需要修改某个图标的形状也比较方便。\n但是 Inline SVG 使用上比较繁琐，需要在页面中插入一大块 SVG 代码因此不适合手写，图标复用起来也比较麻烦。\u003c/p\u003e\n\u003cp\u003e好在我们大部分的页面都是由某种模板渲染出来的，无论是使用 PHP、Jinja2 还是 ERuby 模板语言，\n都可可以定义一个函数来帮我们 include 这些 SVG。因此在很多情况下是很好的解决方案，\n其不适合的主要使用场景就是纯静态页面或者前后端分离客户端页面。\u003c/p\u003e\n\u003ch1 id=\"Data_URIs\"\u003e\u003ca href=\"#Data_URIs\" class=\"headerlink\" title=\"Data URIs\"\u003e\u003c/a\u003eData URIs\u003c/h1\u003e\u003cp\u003eData URIs 是一种不怎么常见的技巧。之前我们在 CSS 里定义元素的背景图片时，常使用像下面这种方式\u003c/p\u003e\n\u003cfigure class=\"highlight css\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"selector-class\"\u003e.icon\u003c/span\u003e {\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  \u003cspan class=\"attribute\"\u003ebackgound-image\u003c/span\u003e: \u003cspan class=\"built_in\"\u003eurl\u003c/span\u003e(icons/a.png)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  \u003cspan class=\"comment\"\u003e/* ... */\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e}\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\u003cp\u003e而现在，\u003ccode\u003eurl\u003c/code\u003e当中可以放置的可以不仅仅是指向资源的 URL 链接，而可以是数据本身。使用 Data URIs，无论是图片还是 SVG，\n你都可以将其编码为 base64 并直接写入 CSS。譬如\u003c/p\u003e\n\u003cfigure class=\"highlight css\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"selector-class\"\u003e.icon\u003c/span\u003e{ \u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  \u003cspan class=\"attribute\"\u003ebackground\u003c/span\u003e: \u003cspan class=\"built_in\"\u003eurl\u003c/span\u003e(data:text/svg+xml;base64,\u0026lt;base64 encoded data\u0026gt;)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e}\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\u003cp\u003e关于 base64 编码，请参考\u003ca href=\"https://zh.wikipedia.org/wiki/Base64\" target=\"_blank\" rel=\"noopener\"\u003ewiki\u003c/a\u003e，Data URI 的格式定义如下\u003c/p\u003e\n\u003cfigure class=\"highlight plain\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003edata:[\u0026amp;lt;mime type\u0026amp;gt;][;charset=\u0026amp;lt;charset\u0026amp;gt;][;base64],\u0026amp;lt;encoded data\u0026amp;gt;\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\u003cp\u003e使用这种方法，SVG Icon 使用起来和 Icon Font 一样只需要为元素添加 CSS 即可，所有的资源都可以整合在一个 CSS 文件中，\n不需要额外引用 SVG 文件。\n如果你在使用 \u003ca href=\"http://gulpjs.com/\" target=\"_blank\" rel=\"noopener\"\u003eGulp\u003c/a\u003e 或者 \u003ca href=\"http://gruntjs.com/\" target=\"_blank\" rel=\"noopener\"\u003eGrunt\u003c/a\u003e 这样的 Build 工具，那么将 SVG 整合到一个 CSS\n当中是可以非常方便地自动化完成的。这个任务只有简单的字符串和编码处理，基本不需要依赖非 JavaScript 的库和资源。\u003c/p\u003e\n\u003cp\u003e使用这种方法的缺点是不能方便地使用 CSS 修改 Icon 的颜色和边线属性。\u003c/p\u003e\n\u003ch1 id=\"SVG_Sprite\"\u003e\u003ca href=\"#SVG_Sprite\" class=\"headerlink\" title=\"SVG Sprite\"\u003e\u003c/a\u003eSVG Sprite\u003c/h1\u003e\u003cp\u003e目前，一些提供制作 Icon Font 功能的网站(如\u003ca href=\"http://icomoon.io\" target=\"_blank\" rel=\"noopener\"\u003eicomoon\u003c/a\u003e)已经提供输出 SVG Sprites 功能了。\nSVG Sprites 可以看做上述 Data URIs 方法和之前使用位图的 Sprite 方法的组合。\u003c/p\u003e\n\u003cp\u003e在 Icon Font 还没普及、图标还主要依靠位图显示的时候，前端工程师都会使用 Sprite 来减少图片请求的次数。\n其原理很简单：将所有的图标以一定的间隔排列起来组成一整张大图片，使用时对于某个 Icon，编写如下所示的 CSS。\u003c/p\u003e\n\u003cfigure class=\"highlight css\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"selector-class\"\u003e.icon-a\u003c/span\u003e {\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  \u003cspan class=\"attribute\"\u003ebackground-image\u003c/span\u003e: \u003cspan class=\"built_in\"\u003eurl\u003c/span\u003e(/path/to/pic/contains/all/icons.png);\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  \u003cspan class=\"attribute\"\u003ebackground-position\u003c/span\u003e: \u003cspan class=\"number\"\u003e0\u003c/span\u003e \u003cspan class=\"number\"\u003e120px\u003c/span\u003e \u003cspan class=\"meta\"\u003e!important\u003c/span\u003e;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  \u003cspan class=\"attribute\"\u003ewidth\u003c/span\u003e: \u003cspan class=\"number\"\u003e24px\u003c/span\u003e;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  \u003cspan class=\"attribute\"\u003eheight\u003c/span\u003e: \u003cspan class=\"number\"\u003e24px\u003c/span\u003e;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e}\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\u003cp\u003e上述 CSS 通过设定\u003ccode\u003ebackground-position\u003c/code\u003e调整大图片在背景中的位移，只将某个单个 Icon 暴露出来，其他部分都切掉。\n对于所有的 Icon 都写成这样的 CSS 即可使用了。基础的 SVG Sprite 其实只是将原来的位图改成了SVG。\u003c/p\u003e\n\u003cp\u003eSVG Sprite 相比于原来的位图 Sprite 的一个优点就是可以通过 CSS 调整 Icon 显示的大小。\n使用时还可以 Fallback 到位图的 Sprite，因此有极好的浏览器兼容性。\n不过和 Data URIs 方法一样它同样存在不能方便调整颜色样式的问题。\u003c/p\u003e\n\u003cp\u003e目前辅助生成 SVG Sprites 的工具有 \u003ca href=\"https://github.com/jkphl/grunt-iconizr\" target=\"_blank\" rel=\"noopener\"\u003egrunt-iconizr\u003c/a\u003e、\n\u003ca href=\"https://github.com/shakyShane/gulp-svg-sprites\" target=\"_blank\" rel=\"noopener\"\u003egulp-svg-sprites\u003c/a\u003e 等。\n使用这两个工具，只需将用到的 SVG 放到某个文件夹中就可以自动被拼合成 Sprite 并输出对应 CSS。\n两个工具都支持生成 PNG 格式的位图作为 Fallback，缺点是生成位图要依赖\u003ca href=\"http://phantomjs.org/\" target=\"_blank\" rel=\"noopener\"\u003ephantomjs\u003c/a\u003e\n这个重量级 JS 库。\u003c/p\u003e\n\u003ch1 id=\"SVG_Defs/Symbols\"\u003e\u003ca href=\"#SVG_Defs/Symbols\" class=\"headerlink\" title=\"SVG Defs/Symbols\"\u003e\u003c/a\u003eSVG Defs/Symbols\u003c/h1\u003e\u003cp\u003eSVG Defs 和 Symbols 的原理类似，这里着重介绍一下 SVG Symbols 的使用，\nSVG Defs/Symbols 本质上是对 Sprite 的进一步优化。之前，我们需要使用相对位置来控制哪个图标被显示出来，\n但是其实 SVG 本身的定义允许你以某一种方式直接引用 SVG 中的某一部分。\u003c/p\u003e\n\u003cp\u003e将多个图标整合成一个 SVG 中的多个 Symbols 之后是下面这样的\u003c/p\u003e\n\u003cfigure class=\"highlight plain\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e8\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e9\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e10\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e11\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e12\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e13\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e14\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u0026lt;svg xmlns=\u0026#34;http://www.w3.org/2000/svg\u0026#34; style=\u0026#34;display: none;\u0026#34;\u0026gt;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u0026lt;symbol id=\u0026#34;circle-cross\u0026#34; viewBox=\u0026#34;0 0 32 32\u0026#34;\u0026gt;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e      \u0026lt;title\u0026gt;circle-cross icon\u0026lt;/title\u0026gt;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e      \u0026lt;path d=\u0026#34;M16 1.333q2.99 0 5.703 1.161t4.677 3.125 3.125 4.677 1.161 5.703-1.161 5.703-3.125 4.677-4.677 3.125-5.703 1.161-5.703-1.161-4.677-3.125-3.125-4.677-1.161-5.703 1.161-5.703 3.125-4.677 4.677-3.125 5.703-1.161zm0 2.667q-2.438 0-4.661.953t-3.828 2.557-2.557 3.828-.953 4.661.953 4.661 2.557 3.828 3.828 2.557 4.661.953 4.661-.953 3.828-2.557 2.557-3.828.953-4.661-.953-4.661-2.557-3.828-3.828-2.557-4.661-.953zm3.771 6.885q.552 0 .948.391t.396.943-.396.948l-2.833 2.833 2.833 2.823q.396.396.396.938 0 .552-.396.943t-.948.391-.938-.385l-2.833-2.823-2.823 2.823q-.385.385-.948.385-.552 0-.943-.385t-.391-.938q0-.563.385-.948l2.833-2.823-2.833-2.833q-.385-.385-.385-.938t.391-.948.943-.396.948.396l2.823 2.833 2.833-2.833q.396-.396.938-.396z\u0026#34;/\u0026gt;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u0026lt;/symbol\u0026gt;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u0026lt;symbol id=\u0026#34;circle-check\u0026#34; viewBox=\u0026#34;0 0 32 32\u0026#34;\u0026gt;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e      \u0026lt;title\u0026gt;circle-check icon\u0026lt;/title\u0026gt;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e      \u0026lt;path d=\u0026#34;M16 1.333q2.99 0 5.703 1.161t4.677 3.125 3.125 4.677 1.161 5.703-1.161 5.703-3.125 4.677-4.677 3.125-5.703 1.161-5.703-1.161-4.677-3.125-3.125-4.677-1.161-5.703 1.161-5.703 3.125-4.677 4.677-3.125 5.703-1.161zm0 2.667q-2.438 0-4.661.953t-3.828 2.557-2.557 3.828-.953 4.661.953 4.661 2.557 3.828 3.828 2.557 4.661.953 4.661-.953 3.828-2.557 2.557-3.828.953-4.661-.953-4.661-2.557-3.828-3.828-2.557-4.661-.953zm4.49 7.99q.552 0 .943.391t.391.943-.396.948l-5.656 5.656q-.385.385-.938.385-.563 0-.948-.385l-2.833-2.823q-.385-.385-.385-.948 0-.552.391-.943t.943-.391.948.396l1.885 1.885 4.708-4.719q.396-.396.948-.396z\u0026#34;/\u0026gt;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u0026lt;/symbol\u0026gt;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u0026lt;!-- .... --\u0026gt;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026lt;/svg\u0026gt;\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\u003cp\u003e每个 Symbol 设置一个 id 作为引用时的名字。使用 id 引用这个 SVG 中的 Icon 有两种方式。\u003c/p\u003e\n\u003cp\u003e第一种，将上述 SVG 作为 body 的第一个元素插入在 HTML 中(Chrome 存在一个\n\u003ca href=\"https://code.google.com/p/chromium/issues/detail?id=349175\" target=\"_blank\" rel=\"noopener\"\u003ebug\u003c/a\u003e 导致不在这里显示不出图像)，\n此后，在需要显示某个 Icon 的地方插入下面的代码即可：\u003c/p\u003e\n\u003cfigure class=\"highlight plain\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u0026lt;svg class=\u0026#34;icon\u0026#34;\u0026gt;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  \u0026lt;use xlink:href=\u0026#34;#circle-cross\u0026#34;\u0026gt;\u0026lt;/use\u0026gt;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026lt;/svg\u0026gt;\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\u003cp\u003e这里的\u003ccode\u003euse\u003c/code\u003e标签直接使用\u003ccode\u003e#circle-cross\u003c/code\u003e这个 id 引用了 SVG 中的图标。这种方式的浏览器兼容性较好。\u003c/p\u003e\n\u003cp\u003e我更喜欢的是第二种方式，这种方式不需要在 body 开始的地方插入 SVG，而是使用完整路径引用 Icon。\n也就是：\u003c/p\u003e\n\u003cfigure class=\"highlight plain\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u0026lt;svg class=\u0026#34;icon\u0026#34;\u0026gt;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  \u0026lt;use xlink:href=\u0026#34;/img/posts/svg-icons.svg#circle-check\u0026#34;\u0026gt;\u0026lt;/use\u0026gt;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026lt;/svg\u0026gt;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026lt;svg class=\u0026#34;icon\u0026#34;\u0026gt;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  \u0026lt;use xlink:href=\u0026#34;/img/posts/svg-icons.svg#circle-cross\u0026#34;\u0026gt;\u0026lt;/use\u0026gt;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026lt;/svg\u0026gt;\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\u003cp\u003e显示出来的效果就是下面这个样子(可以使用浏览器的 Debug 工具来检视下面的代码)。\u003c/p\u003e\n\u003cdiv style=\"border:1px solid #eee;background:#fff;padding:10px\"\u003e\n\u003csvg style=\"fill:black;width:64px;height:64px\" xmlns=\"http://www.w3.org/2000/svg\"\u003e\n  \u003cuse xlink:href=\"/img/posts/svg-icons.svg#circle-check\"\u003e\u003c/use\u003e\n\u003c/svg\u003e\n\u003csvg style=\"fill:black;width:64px;height:64px\" xmlns=\"http://www.w3.org/2000/svg\"\u003e\n  \u003cuse xlink:href=\"/img/posts/svg-icons.svg#circle-cross\"\u003e\u003c/use\u003e\n\u003c/svg\u003e\n\u003c/div\u003e\n\n\u003cp\u003e这种方式使用上跟\u003ccode\u003eimg\u003c/code\u003e标签没有什么太大的差别了。好处在于所有的图标都在一个文件中，因此只会请求一次。\n这种不需要像 Sprite 那样繁琐的设置图片的位移。使用 id 命名图标并使用时直接使用 id 引用既直观又简单。\n其灵活性和 Inline SVG 几乎一样——你可以设置颜色、边线样式、大小等等。\n视浏览器的不同，有时你需要使用作为 SVG 标签的开始。\u003c/p\u003e\n\u003cfigure class=\"highlight plain\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u0026lt;svg xmlns=\u0026#34;http://www.w3.org/2000/svg\u0026#34;\u0026gt;\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\u003cp\u003e对于 IE 则需要使用\u003ccode\u003eobject\u003c/code\u003e标签代替\u003ccode\u003e\u0026lt;svg\u0026gt;\u0026lt;use\u0026gt;\u003c/code\u003e。关于兼容性讨论详见\n\u003ca href=\"https://css-tricks.com/svg-sprites-use-better-icon-fonts/\" target=\"_blank\" rel=\"noopener\"\u003e这篇文章\u003c/a\u003e。\u003c/p\u003e\n\u003cp\u003e除了前面提到过的几个 Gulp 和 Grunt 的插件都已经支持 SVG Defs/Symbols 了之外，这里再推荐一个更轻量的 Gulp 插件\n\u003ca href=\"https://github.com/Hiswe/gulp-svg-symbols\" target=\"_blank\" rel=\"noopener\"\u003egulp-svg-symbols\u003c/a\u003e。如果只使用 SVG Symbols 而无需 Sprite 支持，\n那么使用 \u003ca href=\"https://github.com/Hiswe/gulp-svg-symbols\" target=\"_blank\" rel=\"noopener\"\u003egulp-svg-symbols\u003c/a\u003e 可以免去对 \u003ca href=\"http://phantomjs.org/\" target=\"_blank\" rel=\"noopener\"\u003ephantomjs\u003c/a\u003e\n的依赖。\u003c/p\u003e\n\u003ch1 id=\"u7ED3_u8BED\"\u003e\u003ca href=\"#u7ED3_u8BED\" class=\"headerlink\" title=\"结语\"\u003e\u003c/a\u003e结语\u003c/h1\u003e\u003cp\u003eSVG Icons 作为一种 Icon Font 的替代，使用上具有灵活性好、显示效果好、可控性强等诸多优点。\n尤其是最后介绍的 SVG Defs/Symbols 这种方式，已经让 SVG Icon 变成了一种实用的解决方案。\u003c/p\u003e\n\u003cp\u003e浏览器兼容性是前端领域永恒的话题，目前来看对 SVG 的支持情况确实没有 Web Font 那么好，\n其中，主流移动浏览器(Safari, Chrome, IE for Windows Phone)都已经基本兼容 SVG，\n但是桌面领域中仍然要面对 IE8 以下的浏览器，此外对 SVG Defs/Symbols 的支持也还存在差异。\u003c/p\u003e\n\u003cp\u003e现阶段，如果对浏览器兼容性要求比较严苛(主要是支持 IE6-8)，则可以权衡考虑 Icon Font 和带 Fallback 的 SVG Sprite。\n否则的话，推荐使用 SVG Defs/Symbols 的方式代替 Icon Font。\u003c/p\u003e\n\u003cp\u003e个人认为 SVG Icons 已经具备普及的条件了。\u003c/p\u003e\n\n    \u003c/div\u003e",
  "Date": "2014-07-20T08:20:01Z",
  "Author": "Chase Zhang"
}