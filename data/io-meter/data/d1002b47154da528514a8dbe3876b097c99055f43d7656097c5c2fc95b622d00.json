{
  "Source": "io-meter",
  "Title": "在线文本编辑器的基本实现原理",
  "Link": "https://io-meter.com/2014/09/01/contenteditable-and-selection/",
  "Content": "\u003cdiv class=\"entry\"\u003e\n      \u003cp\u003e最近研究了一下在浏览器中实现的 WYSIWYG 文本编辑器的原理，\n在了解基本原理并浏览了 \u003ca href=\"http://zenpen.io\" target=\"_blank\" rel=\"noopener\"\u003ezenpen\u003c/a\u003e 这个相对简单的在线编辑器的源码后，\n在这方面有种豁然开朗的感觉。\u003c/p\u003e\n\u003ca id=\"more\"\u003e\u003c/a\u003e\n\u003cp\u003e说来让人惊讶，最初在浏览器中使之变为可能的浏览器是 IE5。在那个时代，\nIE 的确也算是非常先进的浏览器了，现在广为使用的 AJAX 技术，不也是 IE5 最早提供的么？\n不过这里就不再讨论当初 IE 那套陈旧的 API 了，而主要来讨论 HTML5 之后被各个浏览器广泛支持的一些技术方法。\u003c/p\u003e\n\u003cp\u003e进行 WYSIWYG 的文本编辑，需要的几个基础是\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003e使得某一部分 DOM 可以被编辑\u003c/li\u003e\n\u003cli\u003e可以获取和操作用户选中的区域\u003c/li\u003e\n\u003cli\u003e可以在编辑的同时对所编辑的部分 DOM 进行修改，实现如添加样式等功能\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003e这些功能都非常方便实现。\u003c/p\u003e\n\u003ch2 id=\"u4F7F_DOM__u53EF_u7F16_u8F91\"\u003e\u003ca href=\"#u4F7F_DOM__u53EF_u7F16_u8F91\" class=\"headerlink\" title=\"使 DOM 可编辑\"\u003e\u003c/a\u003e使 DOM 可编辑\u003c/h2\u003e\u003cp\u003e使一部分 HTML 的 DOM 作为容器进入编辑状态，只需要为这个 DOM 添加一个 \u003ccode\u003econtentEditable\u003c/code\u003e 属性。\n一般来讲，是使用\u003ccode\u003ediv\u003c/code\u003e或者\u003ccode\u003earticle\u003c/code\u003e元素作为这样的容器。\u003c/p\u003e\n\u003cp\u003e被添加 \u003ccode\u003econtentEditable\u003c/code\u003e 属性的容器元素的子元素都就可以由用户修改了，\n如果想在这个容器下面嵌套一个不可修改的子元素，需要显式地在这个子元素中添加\n\u003ccode\u003econtentEditable=\u0026#39;false\u0026#39;\u003c/code\u003e这样的声明。\u003c/p\u003e\n\u003ch2 id=\"u83B7_u53D6_u548C_u64CD_u4F5C_u7528_u6237_u9009_u62E9\"\u003e\u003ca href=\"#u83B7_u53D6_u548C_u64CD_u4F5C_u7528_u6237_u9009_u62E9\" class=\"headerlink\" title=\"获取和操作用户选择\"\u003e\u003c/a\u003e获取和操作用户选择\u003c/h2\u003e\u003cp\u003e操作和获取用户选择是一个非常有用的功能，它不但可以用来实现这里提出的编辑器的功能，\n还可以用来实现在光标位置显示提示选单等多种功能，在后面对所编辑部分进行样式修改的时候也常用到。\u003c/p\u003e\n\u003cp\u003e想要获取一个 Selection 对象非常简单:\u003c/p\u003e\n\u003cfigure class=\"highlight javascript\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"keyword\"\u003evar\u003c/span\u003e selection = \u003cspan class=\"built_in\"\u003ewindow\u003c/span\u003e.getSelection();\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\u003cp\u003eSelection 对象有\u003ccode\u003eanchorNode\u003c/code\u003e和\u003ccode\u003efocusNode\u003c/code\u003e两个属性，可以用来获得选中部分的开始和结束元素，\n不过实用不多(一般实用 Range 代替)。此外还有一个\u003ccode\u003eisCollapsed\u003c/code\u003e\n属性值得注意，当其为\u003ccode\u003etrue\u003c/code\u003e时，代表选择区域开始和结束在相同的点，也就是没有选中内容时光标闪烁的模式。\u003c/p\u003e\n\u003cp\u003eselection 对象还有诸多方法可以用来修改选择范围，主要就是对 Range 对象的编辑。\u003c/p\u003e\n\u003cp\u003e首先可以通过\n\u003c/p\u003e\u003cfigure class=\"highlight javascript\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"keyword\"\u003evar\u003c/span\u003e range = selection.getRangeAt(\u003cspan class=\"number\"\u003e0\u003c/span\u003e);\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\u003cp\u003e\u003c/p\u003e\n\u003cp\u003e来获取被选中的第一个区块，以此类推还可以获得第二个、第三个。简单起见我们只讨论选中一个区块的情况。\n获得了 Range 对象，我们就可以方便地进行获得选中区域内容了。\nRange 对象有一对属性分别用来获得选择区域的开始和结束点。\n\u003c/p\u003e\u003cfigure class=\"highlight javascript\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003erange.startContainer \u003cspan class=\"comment\"\u003e// 开始点所在的容器(元素)\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003erange.endOffset \u003cspan class=\"comment\"\u003e// 开始点在其容器内的偏移\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003erange.endContainer \u003cspan class=\"comment\"\u003e// 结束点所在的容器(元素)\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003erange.endOffset \u003cspan class=\"comment\"\u003e// 结束点在其容器内的偏移\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\u003cp\u003e\u003c/p\u003e\n\u003cp\u003e除了这两对属性，还有一个非常有用的属性，那就是\u003c/p\u003e\n\u003cfigure class=\"highlight javascript\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003erange.commonAncestorContainer \u003cspan class=\"comment\"\u003e// 选择范围的共同父元素\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\u003cp\u003e上面这个属性常用于检测选择范围的类型/样式，比如检测到选中范围的公共父元素是一个 \u003ccode\u003eh1\u003c/code\u003e 元素，\n那么可以在工具栏中将代表 \u003ccode\u003eh1\u003c/code\u003e 元素的按钮设为激活状态。\u003c/p\u003e\n\u003cp\u003e需要注意的是，返回的 Range 对象是一类可变对象。简单来说，如果用户的选区改变了，\n那么 Range 对象的内容也会改变。因此要记录某一时刻的 Range ，就要记录上面提到了的两对属性。\n此外，Range 对象的属性都是只读的，需要通过对应的函数方法来修改。\u003c/p\u003e\n\u003cp\u003eRange 还定义了各种获取内容和修改内容的函数，详细参数和方法可以参见\u003ca href=\"https://developer.mozilla.org/en-US/docs/Web/API/range\" target=\"_blank\" rel=\"noopener\"\u003e文档\u003c/a\u003e，\n这里对几个常见的 Use Case 说明一下。\u003c/p\u003e\n\u003ch3 id=\"u83B7_u5F97_u9009_u53D6_u7684_u5750_u6807_u8303_u56F4\"\u003e\u003ca href=\"#u83B7_u5F97_u9009_u53D6_u7684_u5750_u6807_u8303_u56F4\" class=\"headerlink\" title=\"获得选取的坐标范围\"\u003e\u003c/a\u003e获得选取的坐标范围\u003c/h3\u003e\u003cp\u003e我们可以获得光标在网页上的精确位置，对于选区还能得到其矩形边框的几何表示，\n这为我们显示提示菜单提供了方便。获得光标的位置或者选区的矩形边框可以使用\u003c/p\u003e\n\u003cfigure class=\"highlight javascript\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"keyword\"\u003evar\u003c/span\u003e rect = range.getBoundingClientRect();\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\u003cp\u003e\u003ccode\u003erect\u003c/code\u003e对象包括的属性包括矩形的\u003ccode\u003etop\u003c/code\u003e、\u003ccode\u003eleft\u003c/code\u003e、\u003ccode\u003eright\u003c/code\u003e、\u003ccode\u003ebottom\u003c/code\u003e坐标。\n如果选取是\u003ccode\u003ecollapsed\u003c/code\u003e的话，这四个属性就可以用来计算光标的位置了。\u003c/p\u003e\n\u003ch3 id=\"u4FDD_u5B58_u9009_u533A_u5E76_u6062_u590D\"\u003e\u003ca href=\"#u4FDD_u5B58_u9009_u533A_u5E76_u6062_u590D\" class=\"headerlink\" title=\"保存选区并恢复\"\u003e\u003c/a\u003e保存选区并恢复\u003c/h3\u003e\u003cp\u003e如果对选择区域内的元素进行了修改，比如添加新元素、改变元素类型等等，\n那么原来的选区会失效。因此一个比较有用的技巧就是在修改元素之前，先保存选区 Range，\n待修改完成后再恢复。\u003c/p\u003e\n\u003cp\u003e一个完整的例子如下：\u003c/p\u003e\n\u003cfigure class=\"highlight javascript\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e8\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e9\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e10\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e11\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e12\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e13\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e14\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e15\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e16\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e17\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e18\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e19\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e20\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"keyword\"\u003evar\u003c/span\u003e selection = \u003cspan class=\"built_in\"\u003ewindow\u003c/span\u003e.getSelection();\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"keyword\"\u003evar\u003c/span\u003e range = selection.getRangeAt(\u003cspan class=\"number\"\u003e0\u003c/span\u003e);\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"comment\"\u003e// 保存所有 Range 的属性\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"keyword\"\u003evar\u003c/span\u003e startContainer = range.startContainer;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"keyword\"\u003evar\u003c/span\u003e startOffset = range.startOffset;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"keyword\"\u003evar\u003c/span\u003e endContainer = range.endContainer;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"keyword\"\u003evar\u003c/span\u003e endOffset = range.endOffset;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"comment\"\u003e// 进行元素修改操作\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"comment\"\u003e// ......\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"comment\"\u003e// 构造新的 Range\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"keyword\"\u003evar\u003c/span\u003e newRange = \u003cspan class=\"built_in\"\u003edocument\u003c/span\u003e.createRange(); \u003cspan class=\"comment\"\u003e// 注意，此处必须创建一个新的选区，在原来的 range 上修改无效\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003enewRange.setStart(startContainer, startOffset);\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003enewRange.setEnd(endContainer, endOffset);\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"comment\"\u003e// 恢复选区\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eselection.removeAllRanges();\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eselection.addRange(newRange);\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\u003cp\u003e需要注意的是，有些操作可能会自动修改选区，那么使用上面方法就不能达到恢复选区的目的了。\n一个常用的技巧是为恢复选区添加一个延迟，也就是在上面将\u003ccode\u003eaddRange\u003c/code\u003e调用放入\u003ccode\u003esetTimeout\u003c/code\u003e当中。\u003c/p\u003e\n\u003cfigure class=\"highlight javascript\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003esetTimeout(\u003cspan class=\"function\"\u003e\u003cspan class=\"keyword\"\u003efunction\u003c/span\u003e(\u003cspan class=\"params\"\u003e\u003c/span\u003e)\u003c/span\u003e{\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  selection.addRange(newRange);\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e}, \u003cspan class=\"number\"\u003e50\u003c/span\u003e);\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\u003ch2 id=\"u7F16_u8F91_DOM_uFF0C_u4FEE_u6539_u6837_u5F0F\"\u003e\u003ca href=\"#u7F16_u8F91_DOM_uFF0C_u4FEE_u6539_u6837_u5F0F\" class=\"headerlink\" title=\"编辑 DOM，修改样式\"\u003e\u003c/a\u003e编辑 DOM，修改样式\u003c/h2\u003e\u003cp\u003e文本编辑器的一个很重要的功能就是修改内容的样式，比如将文字加粗、倾斜、加下划线等。\n还包括将段落修改为标题、块引用等。一个比较直观的方法是按照上述介绍的保存和恢复选区的方法，\n按照需求修改元素添加样式即可。但是这种方法其实细想起来比较复杂，尤其是段落中，\n存在混杂多种样式，以至于存在样式可以嵌套的情况(比如一段即是加粗又是倾斜的文字)，\n维护节点关系和清理空白节点会很繁琐。\u003c/p\u003e\n\u003cp\u003e好在浏览器为我们提供了一个方便的接口来实现这样的功能。那就是\u003ccode\u003edocument.execCommand\u003c/code\u003e，\n这个接口将各种操作抽象成命令的形式。下面展示了实现一些基本功能的方法。\u003c/p\u003e\n\u003cfigure class=\"highlight javascript\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e8\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e9\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"built_in\"\u003edocument\u003c/span\u003e.execCommand(\u003cspan class=\"string\"\u003e\u0026#39;bold\u0026#39;\u003c/span\u003e); \u003cspan class=\"comment\"\u003e// 加粗所选\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"built_in\"\u003edocument\u003c/span\u003e.execCommand(\u003cspan class=\"string\"\u003e\u0026#39;italic\u0026#39;\u003c/span\u003e); \u003cspan class=\"comment\"\u003e// 倾斜所选\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"built_in\"\u003edocument\u003c/span\u003e.execCommand(\u003cspan class=\"string\"\u003e\u0026#39;underline\u0026#39;\u003c/span\u003e); \u003cspan class=\"comment\"\u003e// 下划线所选\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"built_in\"\u003edocument\u003c/span\u003e.execCommand(\u003cspan class=\"string\"\u003e\u0026#39;createLink\u0026#39;\u003c/span\u003e, \u003cspan class=\"literal\"\u003etrue\u003c/span\u003e, \u003cspan class=\"string\"\u003e\u0026#39;http://io-meter.com\u0026#39;\u003c/span\u003e); \u003cspan class=\"comment\"\u003e// 为所选文字加链接\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"built_in\"\u003edocument\u003c/span\u003e.execCommand(\u003cspan class=\"string\"\u003e\u0026#39;unlink\u0026#39;\u003c/span\u003e); \u003cspan class=\"comment\"\u003e// 取消链接\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"built_in\"\u003edocument\u003c/span\u003e.execCommand(\u003cspan class=\"string\"\u003e\u0026#39;formatBlock\u0026#39;\u003c/span\u003e, \u003cspan class=\"literal\"\u003etrue\u003c/span\u003e, \u003cspan class=\"string\"\u003e\u0026#39;h1\u0026#39;\u003c/span\u003e); \u003cspan class=\"comment\"\u003e// 将光标所在段落修改为一级标题\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"built_in\"\u003edocument\u003c/span\u003e.execCommand(\u003cspan class=\"string\"\u003e\u0026#39;formatBlock\u0026#39;\u003c/span\u003e, \u003cspan class=\"literal\"\u003etrue\u003c/span\u003e, \u003cspan class=\"string\"\u003e\u0026#39;p\u0026#39;\u003c/span\u003e); \u003cspan class=\"comment\"\u003e// 将光标所在块修改为段落\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\u003cp\u003e除此之外，浏览器还提供了一些编辑命令，如\u003ccode\u003ecopy\u003c/code\u003e、\u003ccode\u003ecut\u003c/code\u003e和\u003ccode\u003epaste\u003c/code\u003e等。\n完整的命令列表可以参见\u003ca href=\"https://developer.mozilla.org/en-US/docs/Web/API/document.execCommand\" target=\"_blank\" rel=\"noopener\"\u003e这个文档\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003e需要注意的是，各种浏览器对这些命令的支持也有些不同，因此需要格外注意。\n了解了这些命令，就具备实现编辑器中修改样式等功能的基本知识了。\u003c/p\u003e\n\u003ch2 id=\"u4FA6_u542C_u4FEE_u6539\"\u003e\u003ca href=\"#u4FA6_u542C_u4FEE_u6539\" class=\"headerlink\" title=\"侦听修改\"\u003e\u003c/a\u003e侦听修改\u003c/h2\u003e\u003cp\u003e在此还需要说一点题外话，在以往要侦听用户对文本的修改，一般是绑定\u003ccode\u003ekeydown\u003c/code\u003e事件，\n此外考虑到用户还可能选取并拖拽来改变内容，可能还要添加\u003ccode\u003emouseup\u003c/code\u003e事件，\n这种方法是低效且繁琐的，还对元素样式的修改无能为力。\u003c/p\u003e\n\u003cp\u003e还好，现代浏览器提供了一种新的机制用来检测内容的修改，那就是 Mutation Observer\n机制。关于这方面，有一篇很好的文章值得阅读：\n\u003ca href=\"http://addyosmani.com/blog/mutation-observers/\" target=\"_blank\" rel=\"noopener\"\u003eDetect, Undo And Redo DOM Changes With Mutation Observers\u003c/a\u003e。\u003c/p\u003e\n\u003ch2 id=\"u603B_u7ED3\"\u003e\u003ca href=\"#u603B_u7ED3\" class=\"headerlink\" title=\"总结\"\u003e\u003c/a\u003e总结\u003c/h2\u003e\u003cp\u003eOK，了解了这些知识，实现一个简单的 Web 文本编辑器是不是也显得不那么难了呢？\n虽然在这些 API 上不同浏览器还有些差异，但是已经被广泛应用在实现在线文本编辑功能了。\u003c/p\u003e\n\u003cp\u003e其实如果只专注于现代浏览器，那么实现如同 Medium 那样漂亮又实用的编辑和写作工具也不是非常困难的事！\u003c/p\u003e\n\n    \u003c/div\u003e",
  "Date": "2014-09-01T11:56:26Z",
  "Author": "Chase Zhang"
}