{
  "Source": "izsk.me",
  "Title": "Kubernetes学习(k3d实践)",
  "Link": "https://izsk.me/2021/03/02/Kubernetes-k3d/",
  "Content": "\u003cdiv class=\"post-body\" itemprop=\"articleBody\"\u003e\n\n      \n      \n\n      \n        \u003cp\u003e之前进行了\u003ca target=\"_blank\" rel=\"noopener\" href=\"https://izsk.me/2020/08/07/Kubernetes-Kind/\"\u003ekind实践\u003c/a\u003e,可以很方便地快速组件在k8s中的验证，今天发现一款由rancher开源的相同工具, \u003ca target=\"_blank\" rel=\"noopener\" href=\"https://k3d.io/\"\u003ek3d\u003c/a\u003e，也是非常的牛逼，照样也实践一把\u003c/p\u003e\n\u003cspan id=\"more\"\u003e\u003c/span\u003e\n\n\n\n\u003cp\u003ek3d的底层使用的是rancher开发的\u003ca target=\"_blank\" rel=\"noopener\" href=\"https://k3s.io/\"\u003ek3s\u003c/a\u003e, 一款轻量级的k8s发行版，普遍用于端边协同领域\u003c/p\u003e\n\u003cp\u003ek3d在快速开发中,因此有时官方的文档更新的不太及时，就容易出现看文档无法得到想要的结果，好在，一切都是那么方便 \u003c/p\u003e\n\u003cp\u003edocker做为先决条件，是需要提前安装好的\u003c/p\u003e\n\u003cp\u003e同样，需要安装k3d 的client，这里不再详说，可参考\u003ca target=\"_blank\" rel=\"noopener\" href=\"https://github.com/rancher/k3d\"\u003egit k3d\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003e这里要注意的是，最好使用新版本的k3d, k3d版本之间的差异还是比较大的，以下都是以v3.3为例\u003c/p\u003e\n\u003cp\u003ek3d同样能够实现以node做为虚拟node进行k8s的模拟\u003c/p\u003e\n\u003cp\u003e想要创建一个集群, 最简单的1master+1node\u003c/p\u003e\n\u003cfigure class=\"highlight bash\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003ek3d cluster create demo\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e如果需要指定多节点的话，则\u003c/p\u003e\n\u003cfigure class=\"highlight bash\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003ek3d cluster create demo --servers 3 --agents 3\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003edemo为集群名,因为k3d支持创建多个集群\u003c/p\u003e\n\u003cp\u003e–servers 为控制面节点\u003c/p\u003e\n\u003cp\u003e–agents为node节点\u003c/p\u003e\n\u003cp\u003e这里一个3master + 3node的k8s集群就创建出来了，当然，k3d也跟Kind一样，除了cli方式之外也支持配置文件指定参数.\u003c/p\u003e\n\u003cp\u003e可以使用以下命令进行list\u003c/p\u003e\n\u003cfigure class=\"highlight bash\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003ek3d cluster list\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e在创建完集群之后，会自动地生成config文件，这个跟正常使用k8s是一样的，因此可以使用kubectl命令\u003c/p\u003e\n\u003cp\u003e查看一下pod情况\u003c/p\u003e\n\u003cfigure class=\"highlight bash\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003ekubectl get pod --all-namespaces\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/zhoushuke/BlogPhoto/master/githuboss/20210302232345.png\"/\u003e\u003c/p\u003e\n\u003cp\u003e可以看到几个比较常用见的组件\u003c/p\u003e\n\u003cp\u003e比如:\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cul\u003e\n\u003cli\u003elocal-path-provisioner: 这个提供本地存储pv动态创建\u003c/li\u003e\n\u003cli\u003emetrics-server: 用于pod metrics的收集\u003c/li\u003e\n\u003cli\u003etraefik: 这个用于请求转发\u003c/li\u003e\n\u003cli\u003ecoredns: 集群域名解析\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/blockquote\u003e\n\u003cp\u003e从上面的图可以看到，其它的如Kube-proxy, kube-scheduler是没有，这个可以理解，用k3d创建出来的集群不管多少个agent，本质上还是一台实体机\u003c/p\u003e\n\u003cp\u003e经过一番实践后，体验还是比较不错的，但还是有点欠缺，比如，如果使用了hostpath时，因为是虚拟出来的node节点，是没有hostpath的，那要如何使用呢, 这个翻了很多的文档也没找到说明，最后还是在issue中找到答案，方法如下\u003c/p\u003e\n\u003cp\u003e使用host path时:\u003c/p\u003e\n\u003cfigure class=\"highlight bash\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003ek3d cluster create deom -v /data/middleware-data:/data/middleware-data\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e需要在创建集群里将hostpath使用到的目录进行挂载即可\u003c/p\u003e\n\u003cp\u003e另外如果要使用nodeport，同样也是如此，需要在创建集群时就进行操作\u003c/p\u003e\n\u003cp\u003ek3d跟kind相比，感觉还是k3d体验好一些，kind之前用的时候出现过几次用kind创建出来的集群直接就不能用，kubectl config不起作用\u003c/p\u003e\n\u003cp\u003ek3d倒没有出现这种情况, 但是就是文档写的不怎么样，比如要从私有仓库中拉取镜像，这个就麻烦一点，但官方文档写的也不是很好，需要自己琢磨\u003c/p\u003e\n\u003cp\u003e不过，不得不承认，k3d确实是个很实用的效率工具，对于需要快速地创建k8s集群进行验证，用完即焚的你可能，本人也打算在团队中推广大家使用起来\u003c/p\u003e\n\u003ch3 id=\"参考文章\"\u003e\u003ca href=\"#参考文章\" class=\"headerlink\" title=\"参考文章:\"\u003e\u003c/a\u003e\u003cstrong\u003e参考文章:\u003c/strong\u003e\u003c/h3\u003e\u003cblockquote\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca target=\"_blank\" rel=\"noopener\" href=\"https://k3s.iohttps//k3d.io\"\u003ehttps://k3s.iohttps://k3d.io\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca target=\"_blank\" rel=\"noopener\" href=\"https://github.com/rancher/k3d\"\u003ehttps://github.com/rancher/k3d\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca target=\"_blank\" rel=\"noopener\" href=\"https://izsk.me/2020/08/07/Kubernetes-Kind/\"\u003ehttps://izsk.me/2020/08/07/Kubernetes-Kind/\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/blockquote\u003e\n\u003ch3 id=\"转载请注明原作者-周淑科-https-izsk-me\"\u003e\u003ca href=\"#转载请注明原作者-周淑科-https-izsk-me\" class=\"headerlink\" title=\"转载请注明原作者: 周淑科(https://izsk.me)\"\u003e\u003c/a\u003e\u003cstrong\u003e转载请注明原作者: 周淑科(\u003ca target=\"_blank\" rel=\"noopener\" href=\"https://izsk.me/\"\u003ehttps://izsk.me\u003c/a\u003e)\u003c/strong\u003e\u003c/h3\u003e\n      \n    \u003c/div\u003e",
  "Date": "2021-03-02T23:10:53+08:00",
  "Author": "Z.S.K."
}