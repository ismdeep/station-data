{
  "Source": "izsk.me",
  "Title": "grpc gateway loadbalance on kubernetes",
  "Link": "https://izsk.me/2020/01/17/grpc-service-on-kubernetes/",
  "Content": "\u003cdiv class=\"post-body\" itemprop=\"articleBody\"\u003e\n\n      \n      \n\n      \n        \u003cp\u003e由于grpc天生的长连接特性, 如果要在kubernetes中使用grpc, 想要实现负载均衡问题需要考虑长连接问题.\u003c/p\u003e\n\u003cp\u003e由于本人对grpc了解的不是很深入，没法说的太多，看官们勿喷.\u003c/p\u003e\n\u003cspan id=\"more\"\u003e\u003c/span\u003e\n\n\u003ch3 id=\"http-x2F-2长连接\"\u003e\u003ca href=\"#http-x2F-2长连接\" class=\"headerlink\" title=\"http/2长连接\"\u003e\u003c/a\u003e\u003cstrong\u003ehttp/2长连接\u003c/strong\u003e\u003c/h3\u003e\u003cp\u003e详情大家可参考这篇文章\u003ca target=\"_blank\" rel=\"noopener\" href=\"https://cloud.tencent.com/developer/news/394310\"\u003e在K8S上使用gRPC做负载均衡\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003e上述文章中也提出了可有多种方式处理这种场景.\u003c/p\u003e\n\u003cp\u003e今天要跟大家说一说，使用kubernetes的headless 给grpc做负载均衡引出的问题.因为这种方式最简单且最直接.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003e需要很简单: 客户端通过grpc调用服务端, 请求可以负载均衡\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003e很简单的demo, 一个服务端, 一个客户端\u003c/p\u003e\n\u003ch3 id=\"客户端\"\u003e\u003ca href=\"#客户端\" class=\"headerlink\" title=\"客户端\"\u003e\u003c/a\u003e\u003cstrong\u003e客户端\u003c/strong\u003e\u003c/h3\u003e\u003cp\u003e客户端逻辑很简单, 主要代码如下:\u003c/p\u003e\n\u003cfigure class=\"highlight go\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e8\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e9\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e10\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e11\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e12\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e13\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e14\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e15\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e16\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e17\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e18\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e19\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e20\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e21\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e22\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e23\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e24\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e25\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e26\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e27\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e28\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"function\"\u003e\u003cspan class=\"keyword\"\u003efunc\u003c/span\u003e \u003cspan class=\"title\"\u003elbconn\u003c/span\u003e\u003cspan class=\"params\"\u003e()\u003c/span\u003e\u003c/span\u003e *grpc.ClientConn {\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\t\u003cspan class=\"comment\"\u003e//progress-service-svc.just-4-test.svc.cluster.local:50051  服务端服务名\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  \u003cspan class=\"comment\"\u003e//使用dns进行resolv\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\tconn, err := grpc.Dial(\u003cspan class=\"string\"\u003e\u0026#34;dns:///progress-service-svc.just-4-test.svc.cluster.local:50051\u0026#34;\u003c/span\u003e,\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\t\tgrpc.WithInsecure(),\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\t\tgrpc.WithBalancerName(roundrobin.Name),\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\t)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\t\u003cspan class=\"keyword\"\u003eif\u003c/span\u003e err != \u003cspan class=\"literal\"\u003enil\u003c/span\u003e {\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\t\tfmt.Printf(\u003cspan class=\"string\"\u003e\u0026#34;did not connect: %v \\n\u0026#34;\u003c/span\u003e, err)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\t\t\u003cspan class=\"keyword\"\u003ereturn\u003c/span\u003e \u003cspan class=\"literal\"\u003enil\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\t}\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\t\u003cspan class=\"keyword\"\u003ereturn\u003c/span\u003e conn\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e}\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"function\"\u003e\u003cspan class=\"keyword\"\u003efunc\u003c/span\u003e \u003cspan class=\"title\"\u003emain\u003c/span\u003e\u003cspan class=\"params\"\u003e()\u003c/span\u003e\u003c/span\u003e {\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\tfmt.Println(\u003cspan class=\"string\"\u003e\u0026#34;begin client\u0026#34;\u003c/span\u003e)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\tconn := lbconn()\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\tc := pb.NewHelloClient(conn)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\t\u003cspan class=\"keyword\"\u003efor\u003c/span\u003e i := \u003cspan class=\"number\"\u003e0\u003c/span\u003e; i \u0026lt; \u003cspan class=\"number\"\u003e1000000\u003c/span\u003e; i++ {\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\t\tcall(c, i)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\t\ttime.Sleep(time.Second * \u003cspan class=\"number\"\u003e5\u003c/span\u003e)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\t}\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  \u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  \u003cspan class=\"function\"\u003e\u003cspan class=\"keyword\"\u003efunc\u003c/span\u003e \u003cspan class=\"title\"\u003ecall\u003c/span\u003e\u003cspan class=\"params\"\u003e()\u003c/span\u003e\u003c/span\u003e{\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e      \u003cspan class=\"comment\"\u003e// 略\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  }\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e}\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e开始只有一个实例，启动日志: \u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/zhoushuke/BlogPhoto/master/githuboss/githubimage-20200117161415769.png\"/\u003e\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/zhoushuke/BlogPhoto/master/githuboss/githubimage-20200117160438043.png\"/\u003e\u003c/p\u003e\n\u003cp\u003e从这里也可以看到，grpc启动的时候，会直接通过服务名拿到服务端pod的ip列表\u003c/p\u003e\n\u003cp\u003e下面是多个服务端实例的情况\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/zhoushuke/BlogPhoto/master/githuboss/githubimage-20200117160526405.png\"/\u003e\u003c/p\u003e\n\u003ch3 id=\"服务端\"\u003e\u003ca href=\"#服务端\" class=\"headerlink\" title=\"服务端\"\u003e\u003c/a\u003e\u003cstrong\u003e服务端\u003c/strong\u003e\u003c/h3\u003e\u003cp\u003e服务端主要代码:\u003c/p\u003e\n\u003cfigure class=\"highlight go\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e8\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e9\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e10\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e11\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e12\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e13\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e14\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e15\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e16\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e17\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e18\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e19\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e20\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e21\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e22\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e23\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e24\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e25\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e26\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"function\"\u003e\u003cspan class=\"keyword\"\u003efunc\u003c/span\u003e \u003cspan class=\"params\"\u003e(s *grpcServer)\u003c/span\u003e\u003c/span\u003e Hi(ctx context.Context, in *pb.HiRequest) (*pb.HiResponse, \u003cspan class=\"type\"\u003eerror\u003c/span\u003e) {\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\tfmt.Println(\u003cspan class=\"string\"\u003e\u0026#34;service got request!\u0026#34;\u003c/span\u003e, in)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\t\u003cspan class=\"keyword\"\u003ereturn\u003c/span\u003e \u0026amp;pb.HiResponse{FromWho: in.ToWho, Message: fmt.Sprintf(\u003cspan class=\"string\"\u003e\u0026#34; %v receive message : \u0026#34;\u003c/span\u003e, id) + in.Message}, \u003cspan class=\"literal\"\u003enil\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e}\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"function\"\u003e\u003cspan class=\"keyword\"\u003efunc\u003c/span\u003e \u003cspan class=\"title\"\u003emain\u003c/span\u003e\u003cspan class=\"params\"\u003e()\u003c/span\u003e\u003c/span\u003e {\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\trand.Seed(time.Now().UnixNano())\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\tid = rand.Intn(\u003cspan class=\"number\"\u003e10000\u003c/span\u003e)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\tlis, err := net.Listen(\u003cspan class=\"string\"\u003e\u0026#34;tcp\u0026#34;\u003c/span\u003e, \u003cspan class=\"string\"\u003e\u0026#34;:50051\u0026#34;\u003c/span\u003e)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\t\u003cspan class=\"keyword\"\u003eif\u003c/span\u003e err != \u003cspan class=\"literal\"\u003enil\u003c/span\u003e {\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\t\tlog.Fatal(\u003cspan class=\"string\"\u003e\u0026#34;failed to listen: %v\u0026#34;\u003c/span\u003e, err)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\t}\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\ts := grpc.NewServer()\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\tpb.RegisterHelloServer(s, \u0026amp;grpcServer{})\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\t\u003cspan class=\"keyword\"\u003ego\u003c/span\u003e \u003cspan class=\"function\"\u003e\u003cspan class=\"keyword\"\u003efunc\u003c/span\u003e\u003cspan class=\"params\"\u003e()\u003c/span\u003e\u003c/span\u003e {\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\t\tcf := \u0026amp;gg.GatewayConfig{\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\t\t\tFn:       pb.RegisterHelloHandlerFromEndpoint,\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\t\t\tGrpcPort: \u003cspan class=\"string\"\u003e\u0026#34;:50051\u0026#34;\u003c/span\u003e,\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\t\t}\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\t\t\u003cspan class=\"keyword\"\u003eif\u003c/span\u003e err := gg.RegisterGRPCGateway(cf); err != \u003cspan class=\"literal\"\u003enil\u003c/span\u003e {\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\t\t\tfmt.Println(\u003cspan class=\"string\"\u003e\u0026#34;grpc gateway closed:\u0026#34;\u003c/span\u003e, err)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\t\t}\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\t}()\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\tfmt.Println(\u003cspan class=\"string\"\u003e\u0026#34;start...\u0026#34;\u003c/span\u003e)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\ts.Serve(lis)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e}\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e服务端启动日志:\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/zhoushuke/BlogPhoto/master/githuboss/githubimage-20200117160438043.png\"/\u003e\u003c/p\u003e\n\u003ch3 id=\"ClusterIP\"\u003e\u003ca href=\"#ClusterIP\" class=\"headerlink\" title=\"ClusterIP\"\u003e\u003c/a\u003e\u003cstrong\u003eClusterIP\u003c/strong\u003e\u003c/h3\u003e\u003cp\u003e服务端使用常规的ClusterIP的svc代理出来，这种情况我们发现, 客户端所有的请求都打在一个实例上, 服务端新增或者减少对客户端都没有影响(当然, 如果减少的刚好是连接的那个实例,那所有的实例都会切换到另一实例上), 至始至终都是一个服务端实例在响应.没有达到效果.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003e因为ClusterIP暴露出来的是一个ip, grpc通过这个ip只能转到某一个实例上进行响应, 所以客户端一起与这个特定的实例建立长连接.\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003e可参考\u003ca target=\"_blank\" rel=\"noopener\" href=\"https://medium.com/google-cloud/loadbalancing-grpc-for-kubernetes-cluster-services-3ba9a8d8fc03\"\u003e这里\u003c/a\u003e\u003c/p\u003e\n\u003ch3 id=\"Headless\"\u003e\u003ca href=\"#Headless\" class=\"headerlink\" title=\"Headless\"\u003e\u003c/a\u003e\u003cstrong\u003eHeadless\u003c/strong\u003e\u003c/h3\u003e\u003cfigure class=\"highlight yaml\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e8\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e9\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e10\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e11\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e12\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e13\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e14\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e15\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e16\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e17\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e18\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"attr\"\u003eapiVersion:\u003c/span\u003e \u003cspan class=\"string\"\u003ev1\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"attr\"\u003ekind:\u003c/span\u003e \u003cspan class=\"string\"\u003eService\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"attr\"\u003emetadata:\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  \u003cspan class=\"attr\"\u003ename:\u003c/span\u003e \u003cspan class=\"string\"\u003eprogress-service-svc\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  \u003cspan class=\"attr\"\u003enamespace:\u003c/span\u003e \u003cspan class=\"string\"\u003ejust-4-test\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"attr\"\u003espec:\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  \u003cspan class=\"attr\"\u003eports:\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  \u003cspan class=\"bullet\"\u003e-\u003c/span\u003e \u003cspan class=\"attr\"\u003ename:\u003c/span\u003e \u003cspan class=\"string\"\u003e50051tcp50051\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"attr\"\u003eport:\u003c/span\u003e \u003cspan class=\"number\"\u003e50051\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"attr\"\u003eprotocol:\u003c/span\u003e \u003cspan class=\"string\"\u003eTCP\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"attr\"\u003etargetPort:\u003c/span\u003e \u003cspan class=\"number\"\u003e50051\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  \u003cspan class=\"attr\"\u003eselector:\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"attr\"\u003eworkload.user.cattle.io/workloadselector:\u003c/span\u003e \u003cspan class=\"string\"\u003edeployment-just-4-test-process-service\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  \u003cspan class=\"attr\"\u003esessionAffinity:\u003c/span\u003e \u003cspan class=\"string\"\u003eNone\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  \u003cspan class=\"attr\"\u003etype:\u003c/span\u003e \u003cspan class=\"string\"\u003eClusterIP\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  \u003cspan class=\"attr\"\u003eclusterIP:\u003c/span\u003e \u003cspan class=\"string\"\u003eNone\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"attr\"\u003estatus:\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  \u003cspan class=\"attr\"\u003eloadBalancer:\u003c/span\u003e {}\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003ch3 id=\"问题\"\u003e\u003ca href=\"#问题\" class=\"headerlink\" title=\"问题\"\u003e\u003c/a\u003e\u003cstrong\u003e问题\u003c/strong\u003e\u003c/h3\u003e\u003cp\u003e从测试的情况来看:\u003c/p\u003e\n\u003cp\u003e如果服务实例从2个scale up到5个, 所有的请求还是直接路由到之前的2个, 新增的3个没有请求进来. \u003c/p\u003e\n\u003cp\u003e如果是从2个scale down到1个，那客户端可以感应到，请求会自动地切换剩余的实例,这个很好理解, grpc维持的长连接具有探活能力.\u003c/p\u003e\n\u003cp\u003eScale up这种情况grpc客户端无法更新服务端列表，原因估计\u003cstrong\u003e是grpc启动的时候通过服务名 –\u0026gt; dns –\u0026gt; headless 直接就拿到了服务端pod的实例ip列表，维持在类似连接池中, 后面所有的请求都直接从连接池中做路由，而不是每次都通过服务名实时地查询dns记录, (实时查询的话那一定是会得到新增实例的.), 这也让grpc更高效\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003e所以,在kubernetes中对grpc的服务，需要做特殊的处理, 如果说服务上线就能确定服务端实例个数, 后续实例数都不会变化,那可以直接使用headless这种方式，但谁也不能保证实例数永远不变或者不会发生重启等情况.\u003c/p\u003e\n\u003cp\u003e因此, 可以在客户端侧实现\u003cstrong\u003ewatch endpoints\u003c/strong\u003e机制来保证，服务端实例发生变化时，客户端会即时地拿到最新的实例列表,从而确保了请求的负载均衡, github上有直接的解决方案, 大家可以参考这里\u003ca target=\"_blank\" rel=\"noopener\" href=\"https://github.com/sercand/kuberesolver\"\u003ekuberesolve\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003e客户端实现创建k8s client即可.\u003c/p\u003e\n\u003cfigure class=\"highlight go\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e8\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e9\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e10\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e11\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e12\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e13\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e14\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e15\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e16\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e17\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"keyword\"\u003evar\u003c/span\u003e conns []*grpc.ClientConn\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"function\"\u003e\u003cspan class=\"keyword\"\u003efunc\u003c/span\u003e \u003cspan class=\"title\"\u003eresolverconn\u003c/span\u003e\u003cspan class=\"params\"\u003e()\u003c/span\u003e\u003c/span\u003e *grpc.ClientConn {\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\tclient, err := kuberesolver.NewInClusterK8sClient()\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\t\u003cspan class=\"keyword\"\u003eif\u003c/span\u003e err != \u003cspan class=\"literal\"\u003enil\u003c/span\u003e {\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\t\tfmt.Println(\u003cspan class=\"string\"\u003e\u0026#34;errrr\u0026#34;\u003c/span\u003e, err)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\t\t\u003cspan class=\"keyword\"\u003ereturn\u003c/span\u003e \u003cspan class=\"literal\"\u003enil\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\t}\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\tresolver.Register(kuberesolver.NewBuilder(client, \u003cspan class=\"string\"\u003e\u0026#34;kubernetes\u0026#34;\u003c/span\u003e))\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\t\u003cspan class=\"comment\"\u003e// USAGE:\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\t\u003cspan class=\"comment\"\u003e// if schema is \u0026#39;kubernetes\u0026#39; then grpc will use kuberesolver to resolve addresses\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\tcc, err := grpc.Dial(\u003cspan class=\"string\"\u003e\u0026#34;kubernetes:///progress-service-svc:50051\u0026#34;\u003c/span\u003e, grpc.WithInsecure())\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\t\u003cspan class=\"keyword\"\u003eif\u003c/span\u003e err != \u003cspan class=\"literal\"\u003enil\u003c/span\u003e {\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\t\tfmt.Printf(\u003cspan class=\"string\"\u003e\u0026#34;did not connect: %v \\n\u0026#34;\u003c/span\u003e, err)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\t\t\u003cspan class=\"keyword\"\u003ereturn\u003c/span\u003e \u003cspan class=\"literal\"\u003enil\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\t}\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\t\u003cspan class=\"keyword\"\u003ereturn\u003c/span\u003e cc\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e}\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e\u003cstrong\u003e使用这种watch方式，我们同时测试了，服务端用headless或者clusterip的svc效果都是一样的.\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003e至此，虽然grpc也是基于http协议，但是因为其长连接的特性, 在kubernetes中确实与http会有所不同.\u003c/p\u003e\n\u003cp\u003e当然, 把watch ep逻辑集成在client侧还是有点侵入性的,应该有更好的办法能实现, 目前没有找到, 如果有了解的同学欢迎告知.\u003c/p\u003e\n\u003ch3 id=\"参考文章\"\u003e\u003ca href=\"#参考文章\" class=\"headerlink\" title=\"参考文章:\"\u003e\u003c/a\u003e\u003cstrong\u003e参考文章:\u003c/strong\u003e\u003c/h3\u003e\u003cblockquote\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca target=\"_blank\" rel=\"noopener\" href=\"https://medium.com/google-cloud/loadbalancing-grpc-for-kubernetes-cluster-services-3ba9a8d8fc03\"\u003eloadbalancing-grpc-for-kubernetes-cluster-services\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca target=\"_blank\" rel=\"noopener\" href=\"https://cloud.tencent.com/developer/news/394310\"\u003e在K8S上使用gRPC做负载均衡\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/blockquote\u003e\n\u003ch3 id=\"转载请注明原作者-周淑科-https-izsk-me\"\u003e\u003ca href=\"#转载请注明原作者-周淑科-https-izsk-me\" class=\"headerlink\" title=\"转载请注明原作者: 周淑科(https://izsk.me)\"\u003e\u003c/a\u003e\u003cstrong\u003e转载请注明原作者: 周淑科(\u003ca target=\"_blank\" rel=\"noopener\" href=\"https://izsk.me/\"\u003ehttps://izsk.me\u003c/a\u003e)\u003c/strong\u003e\u003c/h3\u003e\u003chr/\u003e\n\n      \n    \u003c/div\u003e",
  "Date": "2020-01-17T22:50:53+08:00",
  "Author": "Z.S.K."
}