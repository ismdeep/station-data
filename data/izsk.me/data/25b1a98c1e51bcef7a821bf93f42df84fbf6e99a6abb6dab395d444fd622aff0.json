{
  "Source": "izsk.me",
  "Title": "Kubernetes学习(hnc实现namesapce分层模型)",
  "Link": "https://izsk.me/2023/07/20/Kubernetes-hnc/",
  "Content": "\u003cdiv class=\"post-body\" itemprop=\"articleBody\"\u003e\n\n      \n      \n\n      \n        \u003cp\u003enamespace在kubernetes中是一个很重要的基础构件，它构成了几乎所有 Kubernetes 控制平面安全和共享策略的骨干。命名空间有两个关键属性，使其成为策略执行的理想选择\u003c/p\u003e\n\u003cspan id=\"more\"\u003e\u003c/span\u003e\n\n\u003cul\u003e\n\u003cli\u003e首先，命名空间可以用来\u003cstrong\u003e代表所有权\u003c/strong\u003e。大多数 Kubernetes 对象资源必须在某一个命名空间中，所以如果使用命名空间来代表所有权，那么命名空间中的所有对象都隶属于同一个所有者。\u003c/li\u003e\n\u003cli\u003e其次，命名空间的\u003cstrong\u003e创建和使用需要授权\u003c/strong\u003e。只有超级管理员才能创建命名空间，其他用户需要明确的权限才能使用这些命名空间（包括创建、查看和修改命名空间中的资源对象）。可以设置恰当的安全策略，防止非特权用户创建某些资源对象。\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003enamespace是个硬限制，在很多场景下会有诸多问题, 因此层级命名空间(hierarchical namespaces)出现了，它是 Kubernetes\u003ca target=\"_blank\" rel=\"noopener\" href=\"https://github.com/kubernetes-sigs/multi-tenancy\"\u003e多租户工作组(Working Group for Multi-Tenancy)\u003c/a\u003e而提出的新概念\u003c/p\u003e\n\u003cp\u003e在最简单的形式下，层级命名空间就是一个常规的命名空间，它标识了一个单一的、可选的父命名空间；\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003e更复杂的形式下，父命名空间还可以继承出子空间。这样就建立了跨命名空间的所有权概念，而不是局限于命名空间内。\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003e这种层级命名空间的所有权可以在命名空间的基础上实现额外的两种功能：\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003cstrong\u003e策略继承\u003c/strong\u003e: 如果一个命名空间是另一个命名空间的子空间，那么权限策略（例如\u003ccode\u003eRBAC RoleBindings\u003c/code\u003e）将会\u003cstrong\u003e从父空间直接复制到子空间\u003c/strong\u003e\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003e继承创建权限\u003c/strong\u003e: 通常情况下，需要管理员权限才能创建命名空间。但层级命名空间提供了一个新方案：子命名空(subnamespaces),只需要使用父命名空间中的部分权限即可操作子命名空间。\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e有了这两个功能后，集群管理员就可以为团队创建一个『根』命名空间，以及所有必要的权限策略，然后将创建子命名空间的权限赋予该团队的成员。这样团队内的成员就可以在不违反集群策略的情况下创建自己的子命名空间。\u003c/p\u003e\n\u003ch3 id=\"实践\"\u003e\u003ca href=\"#实践\" class=\"headerlink\" title=\"实践\"\u003e\u003c/a\u003e实践\u003c/h3\u003e\u003cp\u003e这里忽略安装流程，比较简单，可直接参考github的\u003ca target=\"_blank\" rel=\"noopener\" href=\"https://github.com/kubernetes-sigs/hierarchical-namespaces/tree/master/docs/user-guide\"\u003euser-guide\u003c/a\u003e\u003c/p\u003e\n\u003cfigure class=\"highlight bash\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e8\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e9\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e10\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e11\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e12\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e13\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e14\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e15\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e16\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e17\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e18\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"comment\"\u003e# hns可以以plugin的形式安装到Kubectl中，之后便可以直接使用kubectl hns\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003ekubectl create ns acme-org \u003cspan class=\"comment\"\u003e# 创建root ns\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003ekubectl hns create team-c -n acme-org \u003cspan class=\"comment\"\u003e# 使用hns 直接创建一个subns\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"comment\"\u003e# 也可以通过创建ns一样创建\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003ekubectl create ns acme-org\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003ekubectl create ns team-a\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003ekubectl hns \u003cspan class=\"built_in\"\u003eset\u003c/span\u003e team-a --parent acme-org \u003cspan class=\"comment\"\u003e# 指定父子关系\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"comment\"\u003e# 使用hns tree查看关系树\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003ekubectl hns tree acme-org\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eacme-org\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e├── team-a\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e│ └── service-1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e├── team-b\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e└── [s] team-c\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e有[s]的表明是通过第一种方式创建subns, 这种叫subns\u003c/p\u003e\n\u003cp\u003e没有[s]表明是先创建的ns，然后set –parent的方式创建, 这种叫fullns, \u003c/p\u003e\n\u003cp\u003e单独拎出来说是因为这两种创建方式创建出来的sub ns会有一些区别:\u003c/p\u003e\n\u003cp\u003esubns与fullns(直接通过k create ns创建的ns)的区别:\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cul\u003e\n\u003cli\u003esubns的生命周期跟随rootns， 删除fullns的rootns，不会影响fullns， 而subns的rootns删除,subns也会被删除\u003c/li\u003e\n\u003cli\u003esubns的parent的rootns不能修改，而fullns可以随时调整\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/blockquote\u003e\n\u003ch3 id=\"配置文件\"\u003e\u003ca href=\"#配置文件\" class=\"headerlink\" title=\"配置文件\"\u003e\u003c/a\u003e配置文件\u003c/h3\u003e\u003cp\u003e在安装hnc时，存在两个配置文件\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003ehierarchyconfigurations: 为每个namespace的分层信息,记录某个ns是否存在subns及rootns是谁\u003c/li\u003e\n\u003cli\u003eHNCConfiguration: 为hnc全局的配置文件，里面记录了需要传播的资源对象及资源个数等信息，\u003cstrong\u003e只有集群管理员才有权限修改这个配置文件\u003c/strong\u003e\u003c/li\u003e\n\u003c/ol\u003e\n\u003ch3 id=\"propagation-传播\"\u003e\u003ca href=\"#propagation-传播\" class=\"headerlink\" title=\"propagation(传播)\"\u003e\u003c/a\u003epropagation(传播)\u003c/h3\u003e\u003cp\u003ehnc中一个很重要的特性就是propagation, 当以root ns创建了多层的subns, 对于一些通用的属性需要从root ns传播到subns, 这样可以实现\u003cstrong\u003e一处维护，随处传播的效果\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003ehnc支持所有资源类型，不仅包括kubernetes常用的类型，还包括CRD, 同时还可以控制传播的资源个数\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003e默认情况下， parent namespace下的所属的Role 和 RoleBinding 对象会传递给 child 命名空间对象\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003e首先查看现在的配置中哪些开启了传播\u003c/p\u003e\n\u003cfigure class=\"highlight bash\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"comment\"\u003e# 查看配置\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003ekubectl get hncconfiguration config -o yaml\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e有两种方式实现:\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cul\u003e\n\u003cli\u003ea. 通过全局配置文件\u003cbr/\u003e如果是k8s自带资源(可省略–group)：\u003cbr/\u003e\u003ccode\u003ekubectl hns config set-resource secrets --mode Propagate\u003c/code\u003e\u003cbr/\u003e如果是crd资源：\u003cbr/\u003e\u003ccode\u003ekubectl hns config set-resource podpresets --group redhatcop.redhat.io --mode Propagate\u003c/code\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/blockquote\u003e\n\u003cblockquote\u003e\n\u003cul\u003e\n\u003cli\u003eb. 通过annotaions(也需要hncconfiguration中设置该配置annotation方可生效)\u003cbr/\u003e在需要propagation的对象添加如下的annotaions, 不同的–mode,使用的annotaions效果不一样, 详见how-to.md:\u003cbr/\u003e\u003ccode\u003ekubectl annotate secret my-secret -n parent propagate.hnc.x-k8s.io/all=true\u003c/code\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/blockquote\u003e\n\u003cp\u003e所有被传播的对象的label都会被添加上以下内容:\u003cbr/\u003e\u003ccode\u003eapp.kubernetes.io/managed-by: hnc.x-k8s.io\u003c/code\u003e\u003cbr/\u003e\u003ccode\u003ehnc.x-k8s.io/inherited-from: acme-org\u003c/code\u003e\u003c/p\u003e\n\u003cp\u003e注意: 如果使用–mode Propagate, 在subns无法修改由rootns传播过来的对象,会提示\u003cbr/\u003e\u003ccode\u003eadmission webhook \u0026#34;objects.hnc.x-k8s.io\u0026#34; denied the request: configmaps \u0026#34;team-b/cm-test\u0026#34; is forbidden: cannot modify object propagated from namespace \u0026#34;acme-org\u0026#34;\u003c/code\u003e\u003c/p\u003e\n\u003cp\u003e格式:\u003c/p\u003e\n\u003cfigure class=\"highlight bash\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003ekubectl-hns config set-resource RESOURCE [--group GROUP] [--force] --mode \u0026lt;Propagate|Remove|Ignore|AllowPropagate\u0026gt;\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cfigure class=\"highlight bash\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"comment\"\u003e# 举个例子\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"comment\"\u003e# 给所有的ns传播一个configmap，很简单，在HNCConfiguration中开启configmap的默认传播, 然后在parent ns中发布这个configmap，即可传播到subns\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"comment\"\u003e# 给所有的ns传播一个crd，同样，需要先在hnc的配置中打开该对象需要被传播的开关\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"comment\"\u003e# 这里以gvk为redhatcop.redhat.io/v1/podpresets这个crd对象为例\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003ekubectl hns config set-resource podpresets --group redhatcop.redhat.io --mode Propagate\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"comment\"\u003e# 然后在parent ns中发布这个crd对象即可\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003ch4 id=\"传播策略\"\u003e\u003ca href=\"#传播策略\" class=\"headerlink\" title=\"传播策略\"\u003e\u003c/a\u003e传播策略\u003c/h4\u003e\u003cp\u003e对资源的传播，可指定 3 种模式(即在上述命令中的–mode参数):\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003e\u003cp\u003e\u003cstrong\u003ePropagate\u003c/strong\u003e(传播):将对象从祖先传播到后代,并删除过时的后代。\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e\u003cstrong\u003eAllowPropagate\u003c/strong\u003e(允许传播): opt-in传播-当且仅当对象上至少有一个标签选择器时将对象从你对象传播到子对象并删除过时的后代。\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e\u003cstrong\u003eRemove\u003c/strong\u003e(删除):删除所有现有的传播副本,但不会修改源对象。\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e\u003cstrong\u003eIgnore\u003c/strong\u003e(忽略):停止修改该资源。不会传播新的或更改的对象,也不会删除过时的对象。这是\u003cstrong\u003e默认\u003c/strong\u003e模式\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ol\u003e\n\u003ch3 id=\"HRQ\"\u003e\u003ca href=\"#HRQ\" class=\"headerlink\" title=\"HRQ\"\u003e\u003c/a\u003eHRQ\u003c/h3\u003e\u003cp\u003eHRQ(HierarchicalResourceQuota)是hnc中的一种CRD, 旨在解决resourcequota的传播问题, HRQ最终会转换成ns的resourcequota对象\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003erootns的HierarchicalResourceQuota虽然会传播到所有subns下生成相同的resourcequota，但HierarchicalResourceQuota指定的资源为所有subns下的资源总和\u003c/strong\u003e\u003c/p\u003e\n\u003ch3 id=\"Q-x2F-A\"\u003e\u003ca href=\"#Q-x2F-A\" class=\"headerlink\" title=\"Q/A\"\u003e\u003c/a\u003eQ/A\u003c/h3\u003e\u003col\u003e\n\u003cli\u003e\u003cp\u003eQ: 创建一个rootns及HierarchicalResourceQuota， 再创建一个没有设置HierarchicalResourceQuota的subns, resourcequota如何传播??\u003cbr/\u003eA: subns与rootns下都会生成resourcequota且与HierarchicalResourceQuota相同，同时在这两个ns下的资源不会超过HierarchicalResourceQuota\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\u003cp\u003eQ: 创建一个rootns及HierarchicalResourceQuota, 再创建一个subns，正常情况下rootns会传播到subns,\u003cbr/\u003e此时在subns下再创建一个HierarchicalResourceQuota且规格大于rootns的HierarchicalResourceQuota, 会发生什么??\u003cbr/\u003eA: 测试发现不管这个在subns上创建一个HierarchicalResourceQuota是否与rootns同名，都可以创建成功,但是查看生成的resourcequota会发现此时的resourcequota还是以rootns下的HierarchicalResourceQuota为准，\u003cbr/\u003e如果此时在subns下发布一个job, 资源比rootns的hrq大，但比subns的hrq小，状态会pending, describe的原因是不能超时rootns的资源上限, 这里提示不能超过rootns的原因在于subns的quota比rootns的大，所以先超过了rootns\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\u003cp\u003eQ: 接Q2问题，如果此时在subns下创建的HierarchicalResourceQuota小于rootns的HierarchicalResourceQuota，情况又如何?？\u003cbr/\u003eA: 如果此时在subns下发布一个job，资源比subns的hrq大但比rootns的hrq小，状态会pending, describe的原因是不能超时subns的资源上限\u003c/p\u003e\n\u003cp\u003e总结: 经过Q2及Q3可以得出结论: subns的HierarchicalResourceQuota可以比rootns的大,subns下的资源不能大于subns的HierarchicalResourceQuota或者rootns的HierarchicalResourceQuota, 如果出现pending，提示的原因是先超过了哪个ns的quota则提示哪个ns的quota超出，这样符合原生的resourcequota限制，即\u003cstrong\u003e一个namespace可以同时存在多个对某一类资源(如CPU)的限制，会以小规格为准\u003c/strong\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\u003cp\u003eQ: 在rootns开启HierarchicalResourceQuota的propagation情况下，subns的HierarchicalResourceQuota是否可覆盖rootns的HierarchicalResourceQuota??\u003cbr/\u003eA: 开启–enable-hrq后，HierarchicalResourceQuota默认会propagation到所有subns\u003cbr/\u003e如果此时subns中没有hrq资源,则在subns中会直接生成一条同等规格的resoucequota对象, 同时这个rq会跟着rootns的hrq修改而修改\u003cbr/\u003e但如果此时subns有自己的hrq，则不会跟随rootns的修改而变化(见Q5)，\u003cbr/\u003e如果此时修改subns的hrq对象，是否会覆盖rootns的hrq对象?\u003cbr/\u003e会覆盖, 但是subns的resourcequota还是以subns及rootns两者的小值为准, 如果此时将rootns的HierarchicalResourceQuota删除后，subns的resourcequota的规格会变成它自己的HierarchicalResourceQuota所对应的规格\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\u003cp\u003eQ: 接Q4问题，如果只是resourcequota, 是否也会propagation??\u003cbr/\u003eA: 不会， 在subns下创建一个名为notebook-user-quota的resourcequota对象，然后在rootns中发布HierarchicalResourceQuota\u003cbr/\u003e在subns中会发现多了一个hrq.hnc.x-k8s.io的resourcequota，notebook-user-quota的resourcequota保存不变(一个namespace可以同时存在多个对某一类资源(如CPU)的限制，会以小规格为准)\u003cbr/\u003e经测试，无法在subns下直接创建名为hrq.hnc.x-k8s.io的resourcequota,则会直接删除\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\u003cp\u003eQ: propagation能否支持crd对象??\u003cbr/\u003eA: 支持，任何对象都可传播，可使用以下命令进行，详情可看关于propagation小节\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\u003cp\u003eQ: 由上可知\u003cstrong\u003e最终生成的resourcequota会以较小值为依赖进行资源控制\u003c/strong\u003e, 但如果想subns的resourcequota比rootns的大如何限制？\u003cbr/\u003eA: 通过rootns不propagation HierarchicalResourceQuota到subns， subns即可单独设置resourcequota\u003cbr/\u003e经测试发现，无法通过rootns的HierarchicalResourceQuota达到此目的, 但是可以通过原生的控制resourcequota propagation来实现\u003cbr/\u003eHierarchicalResourceQuota无法达到目的原因在于HierarchicalResourceQuota默认是传播的,因此没办法通过annotations进行控制哪些不传播哪些传播,比如要开启resourcequota的传播:\u003c/p\u003e\n\u003cfigure class=\"highlight bash\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"comment\"\u003e# 先开启resourcequota实现传播\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"comment\"\u003e# kubectl hns config set-resource resourcequota --mode Propagate\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e然后在rootns中创建resourcequota, 可通过在annotations中排除不需要传播的ns.\u003c/p\u003e\n\u003cfigure class=\"highlight yaml\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e8\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e9\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e10\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e11\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e12\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e13\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"attr\"\u003eapiVersion:\u003c/span\u003e \u003cspan class=\"string\"\u003ev1\u003c/span\u003e \u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"attr\"\u003ekind:\u003c/span\u003e \u003cspan class=\"string\"\u003eResourceQuota\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"attr\"\u003emetadata:\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e \u003cspan class=\"attr\"\u003ename:\u003c/span\u003e \u003cspan class=\"string\"\u003eroot-rq\u003c/span\u003e \u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e \u003cspan class=\"attr\"\u003enamespace:\u003c/span\u003e \u003cspan class=\"string\"\u003eroot-notebook\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e \u003cspan class=\"attr\"\u003eannotations:\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e   \u003cspan class=\"attr\"\u003epropagate.hnc.x-k8s.io/treeSelect:\u003c/span\u003e \u003cspan class=\"string\"\u003e\u0026#39;!notebook-user-zsk\u0026#39;\u003c/span\u003e \u003cspan class=\"comment\"\u003e# 这里指定哪些ns不需要传播\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"attr\"\u003espec:\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e \u003cspan class=\"attr\"\u003ehard:\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e   \u003cspan class=\"attr\"\u003erequests.cpu:\u003c/span\u003e \u003cspan class=\"string\"\u003e\u0026#34;5\u0026#34;\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e   \u003cspan class=\"attr\"\u003erequests.memory:\u003c/span\u003e \u003cspan class=\"string\"\u003e\u0026#34;5Gi\u0026#34;\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e   \u003cspan class=\"attr\"\u003elimits.cpu:\u003c/span\u003e \u003cspan class=\"string\"\u003e\u0026#34;5\u0026#34;\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e   \u003cspan class=\"attr\"\u003elimits.memory:\u003c/span\u003e \u003cspan class=\"string\"\u003e\u0026#34;5G\u0026#34;\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e动态修改annotation,会动态生效\u003cbr/\u003e这样即可实现HQR控制所有subns的资源总量，一部分继承rootns的resourcequota,同时不需要继承的subns则可自定义resourcequota\u003cbr/\u003e另外，如果是某些subns的资源比rootns的hrq小的话，则可直接在subns中设置HierarchicalResourceQuota即可覆盖rootns中的quota(以较小值为准)\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003ehnc中使用了mutating webhook的方式拦截了权限的请求，将权限限制在合适的subns中\u003c/p\u003e\n\u003cp\u003e同时使用策略引擎达到资源可以向下传播，很大程度解决了kubernetes中namespace的诸多限制\u003c/p\u003e\n\u003cp\u003e在一些其它的开源项目如capsule中看到hnc的思路，相信hnc会成为kubernetes关于资源、权限等维度的标准分层实现\u003c/p\u003e\n\u003ch3 id=\"参考文章\"\u003e\u003ca href=\"#参考文章\" class=\"headerlink\" title=\"参考文章:\"\u003e\u003c/a\u003e\u003cstrong\u003e参考文章:\u003c/strong\u003e\u003c/h3\u003e\u003ch3 id=\"转载请注明原作者-周淑科-https-izsk-me\"\u003e\u003ca href=\"#转载请注明原作者-周淑科-https-izsk-me\" class=\"headerlink\" title=\"转载请注明原作者: 周淑科(https://izsk.me)\"\u003e\u003c/a\u003e\u003cstrong\u003e转载请注明原作者: 周淑科(\u003ca target=\"_blank\" rel=\"noopener\" href=\"https://izsk.me/\"\u003ehttps://izsk.me\u003c/a\u003e)\u003c/strong\u003e\u003c/h3\u003e\u003cblockquote\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca target=\"_blank\" rel=\"noopener\" href=\"https://github.com/kubernetes-sigs/hierarchical-namespaces\"\u003ehttps://github.com/kubernetes-sigs/hierarchical-namespaces\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca target=\"_blank\" rel=\"noopener\" href=\"https://zhuanlan.zhihu.com/p/188457275\"\u003ehttps://zhuanlan.zhihu.com/p/188457275\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/blockquote\u003e\n\n      \n    \u003c/div\u003e",
  "Date": "2023-07-20T17:30:53+08:00",
  "Author": "Z.S.K."
}