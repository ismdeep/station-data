{
  "Source": "izsk.me",
  "Title": "Istio学习(istioctl常用命令)",
  "Link": "https://izsk.me/2020/02/14/Istio-istioctl/",
  "Content": "\u003cdiv class=\"post-body\" itemprop=\"articleBody\"\u003e\n\n      \n      \n\n      \n        \u003cp\u003eistioctl是istio的客户端命令行工具, 常用于对istio中的出现的各种问题进行诊断.istioctl支持非常多的命令, 这篇主要以proxy status、 proxy-config两个命令为主, 更多其它的命令, 可参考\u003ca target=\"_blank\" rel=\"noopener\" href=\"https://istio.io/docs/reference/commands/istioctl\"\u003e这里\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003e所有操作都是基于官方提供的book-info示例进行，也是对上一篇对envoy的配置文件进行流量分析的补充.\u003c/p\u003e\n\u003cspan id=\"more\"\u003e\u003c/span\u003e\n\n\n\n\u003ch3 id=\"istioctl-proxy-status\"\u003e\u003ca href=\"#istioctl-proxy-status\" class=\"headerlink\" title=\"istioctl proxy-status\"\u003e\u003c/a\u003eistioctl proxy-status\u003c/h3\u003e\u003cp\u003eistioctl proxy-status, 可以简写这istioctl ps， 一般用于检测envoy是否与pilot的连接成功, 如果不成功, 则无法获得pilot下发的配置文件\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/zhoushuke/BlogPhoto/master/githuboss/20200210174020.png\"/\u003e\u003c/p\u003e\n\u003ch3 id=\"istioctl-proxy-config\"\u003e\u003ca href=\"#istioctl-proxy-config\" class=\"headerlink\" title=\"istioctl proxy-config\"\u003e\u003c/a\u003eistioctl proxy-config\u003c/h3\u003e\u003cp\u003eIstioctl proxy-config, 可以简写为istioctl pc, 主要用于查看各种资源对象，这里主要列举几个比较常用的命令\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/zhoushuke/BlogPhoto/master/githuboss/20200210174442.png\"/\u003e\u003c/p\u003e\n\u003cp\u003eistioctl是个多级命令行工具, 都可直接通过-h 来查看用法\u003c/p\u003e\n\u003cp\u003e比如这里可以使用istioctl pc bootstrap -h 来查看二级命令bootstrap能够接受的参数\u003c/p\u003e\n\u003cp\u003e以下都会使用details-v1-78d78fbddf-z9cpj.default这个应用来做为示例\u003c/p\u003e\n\u003cp\u003e比如说， \u003ccode\u003e从details中访问reviews:9080, envoy的处理逻辑是这样的\u003c/code\u003e\u003c/p\u003e\n\u003cp\u003elistener –\u0026gt; route –\u0026gt; cluster –\u0026gt; endpoint\u003c/p\u003e\n\u003cp\u003e下面通过istioctl命令行进行分析\u003c/p\u003e\n\u003ch4 id=\"pc-bootstrap\"\u003e\u003ca href=\"#pc-bootstrap\" class=\"headerlink\" title=\"pc bootstrap\"\u003e\u003c/a\u003epc bootstrap\u003c/h4\u003e\u003cp\u003e 检索pod 中 Envoy 实例的 bootstrap 配置的信息\u003c/p\u003e\n\u003cp\u003e从这个命令可以得到envoy启动时的一些静态参数，比如pilot地址, prometheus地址等. \u003c/p\u003e\n\u003cfigure class=\"highlight bash\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003eistioctl pc bootstrap details-v1-78d78fbddf-z9cpj.default\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\n\n\u003ch4 id=\"pc-listener\"\u003e\u003ca href=\"#pc-listener\" class=\"headerlink\" title=\"pc listener\"\u003e\u003c/a\u003epc listener\u003c/h4\u003e\u003cp\u003e检索pod 中 Envoy 实例的监听器配置的信息\u003c/p\u003e\n\u003cfigure class=\"highlight bash\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003eistioctl pc listener details-v1-78d78fbddf-z9cpj.default --port=9080 --address=0.0.0.0\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e从listener中获取routeconfigname:\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/zhoushuke/BlogPhoto/master/githuboss/20200210185242.png\"/\u003e\u003c/p\u003e\n\u003ch4 id=\"pc-route\"\u003e\u003ca href=\"#pc-route\" class=\"headerlink\" title=\"pc route\"\u003e\u003c/a\u003epc route\u003c/h4\u003e\u003cp\u003e检索pod中Envoy 实例的路由配置的信息, 从listener获取到的9080的routeconfigname来获取route\u003c/p\u003e\n\u003cfigure class=\"highlight bash\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003eistioctl pc route details-v1-78d78fbddf-z9cpj.default\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/zhoushuke/BlogPhoto/master/githuboss/20200210184528.png\"/\u003e\u003c/p\u003e\n\u003cp\u003e可以看到跟9080相关的route有5条, 找到与reviews相关的信息\u003c/p\u003e\n\u003cfigure class=\"highlight bash\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003eistioctl pc route details-v1-78d78fbddf-z9cpj.default --name=9080 -ojson\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/zhoushuke/BlogPhoto/master/githuboss/20200210190501.png\"/\u003e\u003c/p\u003e\n\u003cp\u003evirutalhosts中的domains一项列出的所有的跟reviews相关的域名及域名:端口,\u003ccode\u003eenvoy会把domain中的字符串与请求中的host做对比\u003c/code\u003e\u003c/p\u003e\n\u003cp\u003e这里匹配/ 然后转到cluster为\u003ccode\u003eoutbound|9080||reviews.default.svc.cluster.local\u003c/code\u003e\u003c/p\u003e\n\u003ch4 id=\"pc-cluster\"\u003e\u003ca href=\"#pc-cluster\" class=\"headerlink\" title=\"pc cluster\"\u003e\u003c/a\u003epc cluster\u003c/h4\u003e\u003cp\u003e检索pod 中 Envoy 实例的集群配置的信息\u003c/p\u003e\n\u003cfigure class=\"highlight bash\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003eistioctl pc cluster details-v1-78d78fbddf-z9cpj.default\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/zhoushuke/BlogPhoto/master/githuboss/20200210181002.png\"/\u003e\u003c/p\u003e\n\u003cp\u003e说明\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003ePORT: 指定端口, 一般与kubernetes中的svc端口一致\u003c/li\u003e\n\u003cli\u003eSUBSET: 使用该字段对集群进行过滤\u003c/li\u003e\n\u003cli\u003eDIRECTION: 表明是出向流量还是入向流量\u003c/li\u003e\n\u003cli\u003eTYPE: 这个svc是静态(STATIC)配置还是通过EDS动态获取的\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e使用–fqdn 指定svc, 先看一个动态类型(EDS)\u003c/p\u003e\n\u003cfigure class=\"highlight bash\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003eistioctl pc cluster details-v1-78d78fbddf-z9cpj.default --fqdn details.default.svc.cluster.local --direction outbound -ojson\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e![image-20200210180657173](/Users/zhoushuke/Library/Application Support/typora-user-images/image-20200210180657173.png)\u003c/p\u003e\n\u003cp\u003e再看一个静态类型(STATIC)\u003c/p\u003e\n\u003cfigure class=\"highlight bash\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003eistioctl pc cluster details-v1-78d78fbddf-z9cpj.default --direction inbound  --fqdn details.default.svc.cluster.local -ojson\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/zhoushuke/BlogPhoto/master/githuboss/20200210181845.png\"/\u003e\u003c/p\u003e\n\u003cp\u003e如果是入向流量, 在cluster中的endpoint是127.0.0.1，因为这时请求已经被转发到了该容器上,直接响应即可\u003c/p\u003e\n\u003cp\u003e这里找到reviews与有关的cluster\u003c/p\u003e\n\u003cfigure class=\"highlight bash\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003eistioctl pc cluster details-v1-78d78fbddf-z9cpj.default --fqdn=reviews.default.svc.cluster.local -ojson\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/zhoushuke/BlogPhoto/master/githuboss/20200210190943.png\"/\u003e\u003c/p\u003e\n\u003ch4 id=\"pc-endpoint\"\u003e\u003ca href=\"#pc-endpoint\" class=\"headerlink\" title=\"pc endpoint\"\u003e\u003c/a\u003epc endpoint\u003c/h4\u003e\u003cp\u003e检索特定 pod 中 Envoy 实例的 endpoint 配置的信息\u003c/p\u003e\n\u003cfigure class=\"highlight bash\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003eistioctl pc endpoints details-v1-78d78fbddf-z9cpj.default\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/zhoushuke/BlogPhoto/master/githuboss/20200210182450.png\"/\u003e\u003c/p\u003e\n\u003cp\u003e第一列的endpoint即为真正的业务容器ip，如果实例有多个话就会有多行\u003c/p\u003e\n\u003cp\u003e比如这里通过上面动态类型的cluster来获取ep\u003c/p\u003e\n\u003cfigure class=\"highlight bash\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003eistioctl pc endpoints details-v1-78d78fbddf-z9cpj.default --cluster=\u003cspan class=\"string\"\u003e\u0026#34;outbound|9080||reviews.default.svc.cluster.local\u0026#34;\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e![image-20200210191055227](/Users/zhoushuke/Library/Application Support/typora-user-images/image-20200210191055227.png)\u003c/p\u003e\n\u003cp\u003e由于reviews有3个实例, 因此有3条记录\u003c/p\u003e\n\u003cp\u003e最终根据发起方配置的负载均衡策略选出一个实例进行响应\u003c/p\u003e\n\u003cp\u003e至此整个请求路由就完成, 当然实际使用中还会进行一些其它的操作如重试、熔断等策略, 其原理是一样的.\u003c/p\u003e\n\u003ch3 id=\"参考文章\"\u003e\u003ca href=\"#参考文章\" class=\"headerlink\" title=\"参考文章:\"\u003e\u003c/a\u003e\u003cstrong\u003e参考文章:\u003c/strong\u003e\u003c/h3\u003e\u003cblockquote\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca target=\"_blank\" rel=\"noopener\" href=\"https://www.bookstack.cn/read/istio-1.4-zh/9e3da989f08c46bf.md\"\u003ehttps://www.bookstack.cn/read/istio-1.4-zh/9e3da989f08c46bf.md\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca target=\"_blank\" rel=\"noopener\" href=\"https://istio.io/docs/reference/commands/istioctl/\"\u003ehttps://istio.io/docs/reference/commands/istioctl/\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/blockquote\u003e\n\u003ch3 id=\"转载请注明原作者-周淑科-https-izsk-me\"\u003e\u003ca href=\"#转载请注明原作者-周淑科-https-izsk-me\" class=\"headerlink\" title=\"转载请注明原作者: 周淑科(https://izsk.me)\"\u003e\u003c/a\u003e\u003cstrong\u003e转载请注明原作者: 周淑科(\u003ca target=\"_blank\" rel=\"noopener\" href=\"https://izsk.me/\"\u003ehttps://izsk.me\u003c/a\u003e)\u003c/strong\u003e\u003c/h3\u003e\n      \n    \u003c/div\u003e",
  "Date": "2020-02-14T13:30:53+08:00",
  "Author": "Z.S.K."
}