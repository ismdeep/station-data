{
  "Source": "izsk.me",
  "Title": "Kubernetes学习(kind实践)",
  "Link": "https://izsk.me/2020/08/07/Kubernetes-Kind/",
  "Content": "\u003cdiv class=\"post-body\" itemprop=\"articleBody\"\u003e\n\n      \n      \n\n      \n        \u003cp\u003eKind(kubernetes in docker的缩写)， 用于快速地在本地部署kubernetes集群,顾名思义，就是将 \u003ccode\u003eKubernetes\u003c/code\u003e 所需要的所有组件，全部部署在一个 \u003ccode\u003eDocker\u003c/code\u003e 容器中，可以很方便的搭建 \u003ccode\u003eKubernetes\u003c/code\u003e 集群。\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003eKind\u003c/code\u003e 已经广泛的应用于 \u003ccode\u003eKubernetes\u003c/code\u003e 上游及相关项目的 \u003ccode\u003eCI\u003c/code\u003e 环境中\u003c/p\u003e\n\u003cspan id=\"more\"\u003e\u003c/span\u003e\n\n\n\n\u003ch3 id=\"优势\"\u003e\u003ca href=\"#优势\" class=\"headerlink\" title=\"优势\"\u003e\u003c/a\u003e优势\u003c/h3\u003e\u003col\u003e\n\u003cli\u003e最小的安装依赖，仅需要安装 \u003ccode\u003eDocker\u003c/code\u003e 即可\u003c/li\u003e\n\u003cli\u003e使用方法简单，只需 \u003ccode\u003eKind Cli\u003c/code\u003e 工具即可快速创建集群\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003e使用容器来模似 \u003ccode\u003eKubernetes\u003c/code\u003e 节点\u003c/strong\u003e\u003c/li\u003e\n\u003cli\u003e内部使用 \u003ccode\u003eKubeadm\u003c/code\u003e 的官方主流部署工具\u003c/li\u003e\n\u003c/ol\u003e\n\u003ch3 id=\"架构\"\u003e\u003ca href=\"#架构\" class=\"headerlink\" title=\"架构\"\u003e\u003c/a\u003e架构\u003c/h3\u003e\u003cp\u003e\u003ccode\u003eKind\u003c/code\u003e 使用容器来模拟每一个 \u003ccode\u003eKubernetes\u003c/code\u003e 节点，并在容器里面运行 \u003ccode\u003eSystemd\u003c/code\u003e。 容器里的 \u003ccode\u003eSystemd\u003c/code\u003e 托管了 \u003ccode\u003eKubelet\u003c/code\u003e 和 \u003ccode\u003eContainerd\u003c/code\u003e，然后容器内部的 \u003ccode\u003eKubelet\u003c/code\u003e 把其它 \u003ccode\u003eKubernetes\u003c/code\u003e 组件：\u003ccode\u003eKube-Apiserver\u003c/code\u003e、\u003ccode\u003eEtcd\u003c/code\u003e、\u003ccode\u003eCNI\u003c/code\u003e 等等组件运行起来。\u003c/p\u003e\n\u003cp\u003eKind\u003ccode\u003e内部使用了\u003c/code\u003eKubeadm\u003ccode\u003e这个工具来做集群的部署，包括高可用集群也是借助\u003c/code\u003eKubeadm\u003ccode\u003e提供的特性来完成的。在高用集群下还会额外部署了一个\u003c/code\u003eNginx来提供VIP\u003c/p\u003e\n\u003cp\u003e这是官方一张图, 可以很形象的说明上面的观点.\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/zhoushuke/BlogPhoto/master/githuboss/20200808214319.png\"/\u003e\u003c/p\u003e\n\u003ch3 id=\"使用\"\u003e\u003ca href=\"#使用\" class=\"headerlink\" title=\"使用\"\u003e\u003c/a\u003e使用\u003c/h3\u003e\u003ch4 id=\"Kind安装\"\u003e\u003ca href=\"#Kind安装\" class=\"headerlink\" title=\"Kind安装\"\u003e\u003c/a\u003eKind安装\u003c/h4\u003e\u003cp\u003ekind是以golang开发的，因此直接下载对应平台的二进制包即可，我是mac，因此直接brew安装即可\u003c/p\u003e\n\u003cfigure class=\"highlight bash\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e$ brew install kind\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e可以来看一下kind支持的参数\u003c/p\u003e\n\u003cfigure class=\"highlight bash\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e8\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e9\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e10\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e11\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e12\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e13\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e14\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e15\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e16\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e17\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e18\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e19\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e20\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e21\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e22\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e23\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e24\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e25\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e$ kind -h\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003ekind creates and manages \u003cspan class=\"built_in\"\u003elocal\u003c/span\u003e Kubernetes clusters using Docker container \u003cspan class=\"string\"\u003e\u0026#39;nodes\u0026#39;\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eUsage:\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  kind [\u003cspan class=\"built_in\"\u003ecommand\u003c/span\u003e]\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eAvailable Commands:\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  build       Build one of [node-image]\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  completion  Output shell completion code \u003cspan class=\"keyword\"\u003efor\u003c/span\u003e the specified shell (bash, zsh or fish)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  create      Creates one of [cluster]\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  delete      Deletes one of [cluster]\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  \u003cspan class=\"built_in\"\u003eexport\u003c/span\u003e      Exports one of [kubeconfig, logs]\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  get         Gets one of [clusters, nodes, kubeconfig]\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  \u003cspan class=\"built_in\"\u003ehelp\u003c/span\u003e        Help about any \u003cspan class=\"built_in\"\u003ecommand\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  load        Loads images into nodes\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  version     Prints the kind CLI version\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eFlags:\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  -h, --\u003cspan class=\"built_in\"\u003ehelp\u003c/span\u003e              \u003cspan class=\"built_in\"\u003ehelp\u003c/span\u003e \u003cspan class=\"keyword\"\u003efor\u003c/span\u003e kind\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e      --loglevel string   DEPRECATED: see -v instead\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  -q, --quiet             silence all stderr output\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  -v, --verbosity int32   info \u003cspan class=\"built_in\"\u003elog\u003c/span\u003e verbosity\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e      --version           version \u003cspan class=\"keyword\"\u003efor\u003c/span\u003e kind\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eUse \u003cspan class=\"string\"\u003e\u0026#34;kind [command] --help\u0026#34;\u003c/span\u003e \u003cspan class=\"keyword\"\u003efor\u003c/span\u003e more information about a \u003cspan class=\"built_in\"\u003ecommand\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\n\n\u003ch4 id=\"单节点\"\u003e\u003ca href=\"#单节点\" class=\"headerlink\" title=\"单节点\"\u003e\u003c/a\u003e单节点\u003c/h4\u003e\u003cp\u003e搭建单节点集群是 \u003ccode\u003eKind\u003c/code\u003e 最基础的功能，当然使用起来也很简单，仅需一条指令即可完成。\u003c/p\u003e\n\u003cfigure class=\"highlight bash\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e8\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e9\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e10\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e$ kind create cluster --name my-cluster --image kindest/node:v1.15.3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eCreating cluster \u003cspan class=\"string\"\u003e\u0026#34;my-cluster\u0026#34;\u003c/span\u003e ...\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e ✓ Ensuring node image (kindest/node:v1.15.3) ?\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e ✓ Preparing nodes ?\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e ✓ Creating kubeadm config ?\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e ✓ Starting control-plane ?️\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eCluster creation complete. You can now use the cluster with:\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"built_in\"\u003eexport\u003c/span\u003e KUBECONFIG=\u003cspan class=\"string\"\u003e\u0026#34;\u003cspan class=\"subst\"\u003e$(kind get kubeconfig-path --name=\u003cspan class=\"string\"\u003e\u0026#34;my-cluster\u0026#34;\u003c/span\u003e)\u003c/span\u003e\u0026#34;\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003ekubectl cluster-info\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e以上命令中 \u003ccode\u003e--name\u003c/code\u003e 是可选参数。如果不指定，默认创建出来的集群名字为 \u003ccode\u003ekind\u003c/code\u003e。\u003c/p\u003e\n\u003cp\u003e使用默认安装的方式时，我们没有指定任何配置文件。从安装过程的输出来看，一共分为 4 步：\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e检查本地环境是否存在一个基础的安装镜像，默认是 \u003ccode\u003ekindest/node:v1.15.3\u003c/code\u003e，该镜像里面包含了所有需要安装的东西，包括：\u003ccode\u003ekubectl\u003c/code\u003e、\u003ccode\u003ekubeadm\u003c/code\u003e、\u003ccode\u003ekubelet\u003c/code\u003e 的二进制文件，以及安装对应版本 \u003ccode\u003eKubernetes\u003c/code\u003e 所需要的镜像。\u003c/li\u003e\n\u003cli\u003e准备 \u003ccode\u003eKubernetes\u003c/code\u003e 节点，主要就是启动容器、解压镜像这类的操作。\u003c/li\u003e\n\u003cli\u003e建立对应的 \u003ccode\u003ekubeadm\u003c/code\u003e 的配置，完成之后就通过 \u003ccode\u003ekubeadm\u003c/code\u003e 进行安装。安装完成后还会做一些清理操作，比如：删掉主节点上的污点，否则对于没有容忍的 \u003ccode\u003ePod\u003c/code\u003e 无法完成部署。\u003c/li\u003e\n\u003cli\u003e上面所有操作都完成后，就成功启动了一个 \u003ccode\u003eKubernetes\u003c/code\u003e 集群并输出一些操作集群的提示信息。\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e默认情况下，\u003ccode\u003eKind\u003c/code\u003e 会先下载 \u003ccode\u003ekindest/node:v1.15.3\u003c/code\u003e 镜像。如果你想指定不同版本，可以使用 \u003ccode\u003e--image\u003c/code\u003e 参数，类似这样：\u003ccode\u003ekind create cluster --image kindest/node:v1.15.3\u003c/code\u003e \u003c/p\u003e\n\u003cp\u003ekindest/node\u003ccode\u003e这个镜像目前托管于 Docker Hub 上，下载时可能会较慢。同样的问题\u003c/code\u003eKind\u003ccode\u003e 进行集群的创建也是存在的，\u003c/code\u003eKind\u003ccode\u003e实际使用\u003c/code\u003eKubeadm\u003ccode\u003e进行集群的创建。对\u003c/code\u003eKubeadm` 有所了解的同学都知道它默认使用的镜像在国内是不能访问的，所以一样需要自行解决网络问题。\u003c/p\u003e\n\u003cp\u003e可以来验证一下:\u003c/p\u003e\n\u003cfigure class=\"highlight bash\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e8\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e9\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e10\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e11\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e12\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e13\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e14\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e15\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e16\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"built_in\"\u003eexport\u003c/span\u003e KUBECONFIG=\u003cspan class=\"string\"\u003e\u0026#34;\u003cspan class=\"subst\"\u003e$(kind get kubeconfig-path --name=\u003cspan class=\"string\"\u003e\u0026#34;my-cluster\u0026#34;\u003c/span\u003e)\u003c/span\u003e\u0026#34;\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e$ kubectl get nodes\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eNAME                       STATUS    ROLES     AGE       VERSION\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003emy-cluster-control-plane   Ready     master    2m        v1.15.3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e$ kubectl get po -n kube-system\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eNAME                                                  READY   STATUS    RESTARTS   AGE\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003ecoredns-86c58d9df4-6g66f                              1/1     Running   0          21m\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003ecoredns-86c58d9df4-pqcc4                              1/1     Running   0          21m\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eetcd-my-cluster-control-plane                         1/1     Running   0          20m\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003ekube-apiserver-my-cluster-control-plane               1/1     Running   0          20m\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003ekube-controller-manager-my-cluster-control-plane      1/1     Running   0          20m\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003ekube-proxy-cjgnt                                      1/1     Running   0          21m\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003ekube-scheduler-my-cluster-control-plane               1/1     Running   0          21m\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eweave-net-ls2v8                                       2/2     Running   0          21m\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e从上面可以看出，对于使用kind部署一个单节点来说，单节点集群默认方式启动的节点类型是 \u003ccode\u003econtrol-plane\u003c/code\u003e，该节点包含了所有的组件。这些组件分别是：\u003ccode\u003e2*Coredns\u003c/code\u003e、\u003ccode\u003eEtcd\u003c/code\u003e、\u003ccode\u003eApi-Server\u003c/code\u003e、\u003ccode\u003eController-Manager\u003c/code\u003e、\u003ccode\u003eKube-Proxy\u003c/code\u003e、\u003ccode\u003eSheduler\u003c/code\u003e 和网络插件 \u003ccode\u003eWeave\u003c/code\u003e\u003c/p\u003e\n\u003cp\u003e单节点的只有一个Node容器，如果想部署多个节点呢?\u003c/p\u003e\n\u003ch4 id=\"多节点\"\u003e\u003ca href=\"#多节点\" class=\"headerlink\" title=\"多节点\"\u003e\u003c/a\u003e多节点\u003c/h4\u003e\u003cp\u003e多节点的集群可以使用配置文件来指定，\u003ccode\u003eKind\u003c/code\u003e 在创建集群的时候，支持通过 \u003ccode\u003e--config\u003c/code\u003e 参数传递配置文件给 \u003ccode\u003eKind\u003c/code\u003e，配置文件可修改的内容主要有 role 和 节点使用的镜像\u003c/p\u003e\n\u003cfigure class=\"highlight bash\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e8\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e$ vim my-cluster-multi-node.yaml\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003ekind: Cluster\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eapiVersion: kind.sigs.k8s.io/v1alpha3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003enodes:\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e- role: control-plane \u003cspan class=\"comment\"\u003e# 一个控制节点\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e- role: worker \u003cspan class=\"comment\"\u003e# 一个工作节点\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e$ kind create cluster --config my-cluster-multi-node.yaml --name my-cluster-multi-node --image kindest/node:v1.15.3\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e可以发现这个配置文件的形式跟kubeadm的配置文件非常的类似, 更多的参数可以参考\u003ca target=\"_blank\" rel=\"noopener\" href=\"https://kind.sigs.k8s.io/docs/user/configuration/\"\u003e这里\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003e验证\u003c/p\u003e\n\u003cfigure class=\"highlight bash\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e8\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e9\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e10\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e11\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e12\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e13\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e14\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e15\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e16\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e17\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003ekubectl get nodes\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eNAME                                  STATUS   ROLES    AGE     VERSION\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003emy-cluster-multi-node-control-plane   Ready    master   3m20s   v1.15.3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003emy-cluster-multi-node-worker          Ready    \u0026lt;none\u0026gt;   3m8s    v1.15.3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e$ kubectl get po -n kube-system\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eNAME                                                          READY   STATUS    RESTARTS   AGE\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003ecoredns-86c58d9df4-cnqhc                                      1/1     Running   0          5m29s\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003ecoredns-86c58d9df4-hn9mv                                      1/1     Running   0          5m29s\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eetcd-my-cluster-multi-node-control-plane                      1/1     Running   0          4m24s\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003ekube-apiserver-my-cluster-multi-node-control-plane            1/1     Running   0          4m17s\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003ekube-controller-manager-my-cluster-multi-node-control-plane   1/1     Running   0          4m21s\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003ekube-proxy-8t4xt                                              1/1     Running   0          5m27s\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003ekube-proxy-skd5v                                              1/1     Running   0          5m29s\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003ekube-scheduler-my-cluster-multi-node-control-plane            1/1     Running   0          4m18s\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eweave-net-nmfq2                                               2/2     Running   0          5m27s\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eweave-net-srdfw                                               2/2     Running   0          5m29s\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\n\n\u003ch4 id=\"高可用\"\u003e\u003ca href=\"#高可用\" class=\"headerlink\" title=\"高可用\"\u003e\u003c/a\u003e高可用\u003c/h4\u003e\u003cp\u003e高可用的集群跟多节点类似, 只不过\u003ccode\u003econtrol-plane\u003c/code\u003e的角色需要至少需要3个Node\u003c/p\u003e\n\u003cfigure class=\"highlight bash\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e8\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e9\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e10\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e11\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e12\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e13\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e14\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e15\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e16\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e17\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e18\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e19\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e20\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e21\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e22\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e23\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e24\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e25\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e26\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e27\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e28\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e29\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e30\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e31\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e32\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e33\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e34\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e35\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e$ vim my-cluster-ha.yaml\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003ekind: Cluster\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eapiVersion: kind.sigs.k8s.io/v1alpha3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003ekubeadmConfigPatches:\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e- |\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  apiVersion: kubeadm.k8s.io/v1beta2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  kind: ClusterConfiguration\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  metadata:\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    name: config\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  networking:\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    serviceSubnet: 10.0.0.0/16\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  imageRepository: registry.aliyuncs.com/google_containers\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  nodeRegistration:\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    kubeletExtraArgs:\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e      pod-infra-container-image: registry.aliyuncs.com/google_containers/pause:3.1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e- |\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  apiVersion: kubeadm.k8s.io/v1beta2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  kind: InitConfiguration\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  metadata:\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    name: config\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  networking:\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    serviceSubnet: 10.0.0.0/16\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  imageRepository: registry.aliyuncs.com/google_containers\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003enodes:\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e- role: control-plane\t\u003cspan class=\"comment\"\u003e# 三个 control-plane 节点\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e- role: control-plane\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e- role: control-plane\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e- role: worker\t\u003cspan class=\"comment\"\u003e# 三个work节点\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e- role: worker\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e- role: worker\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e$ kind create cluster --name my-cluster-ha --config my-cluster-ha.yaml --image kindest/node:v1.15.3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e验证\u003c/p\u003e\n\u003cfigure class=\"highlight bash\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e8\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e$ kubectl get nodes\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eNAME                           STATUS   ROLES    AGE     VERSION\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003emy-cluster-ha-control-plane    Ready    master   3m42s   v1.15.3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003emy-cluster-ha-control-plane2   Ready    master   3m24s   v1.15.3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003emy-cluster-ha-control-plane3   Ready    master   2m13s   v1.15.3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003emy-cluster-ha-worker           Ready    \u0026lt;none\u0026gt;   96s     v1.15.3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003emy-cluster-ha-worker2          Ready    \u0026lt;none\u0026gt;   98s     v1.15.3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003emy-cluster-ha-worker3          Ready    \u0026lt;none\u0026gt;   95s     v1.15.3\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003ch4 id=\"删除集群\"\u003e\u003ca href=\"#删除集群\" class=\"headerlink\" title=\"删除集群\"\u003e\u003c/a\u003e删除集群\u003c/h4\u003e\u003cfigure class=\"highlight bash\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e$ kind delete  cluster --name my-cluster\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e\u003cstrong\u003e从集群的部署来看, 使用kind部署出来的集群除了把容器当Node使用之外, 其它的差别并不大\u003c/strong\u003e\u003c/p\u003e\n\u003ch3 id=\"Image\"\u003e\u003ca href=\"#Image\" class=\"headerlink\" title=\"Image\"\u003e\u003c/a\u003eImage\u003c/h3\u003e\u003cp\u003eKind中使用到了两种image， base image以及Node image\u003c/p\u003e\n\u003ch4 id=\"baseImage\"\u003e\u003ca href=\"#baseImage\" class=\"headerlink\" title=\"baseImage\"\u003e\u003c/a\u003e\u003ca target=\"_blank\" rel=\"noopener\" href=\"https://kind.sigs.k8s.io/docs/design/base-image/\"\u003ebaseImage\u003c/a\u003e\u003c/h4\u003e\u003cp\u003ebaseimage主要是安装一些systemd,kubernetes需要的依赖，基于ubuntu.\u003c/p\u003e\n\u003ch4 id=\"NodeImage\"\u003e\u003ca href=\"#NodeImage\" class=\"headerlink\" title=\"NodeImage\"\u003e\u003c/a\u003eNodeImage\u003c/h4\u003e\u003cp\u003e\u003ccode\u003eNode\u003c/code\u003e 镜像的构建比较复杂，目前是通过运行 \u003ccode\u003eBase\u003c/code\u003e 镜像并在 \u003ccode\u003eBase\u003c/code\u003e 镜像内执行操作，再保存此容器内容为镜像的方式来构建的，包含的操作有：\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e构建 \u003ccode\u003eKubernetes\u003c/code\u003e 相关资源，比如：二进制文件和镜像。\u003c/li\u003e\n\u003cli\u003e运行一个用于构建的容器\u003c/li\u003e\n\u003cli\u003e把构建的 \u003ccode\u003eKubernetes\u003c/code\u003e 相关资源复制到容器里\u003c/li\u003e\n\u003cli\u003e调整部分组件配置参数，以支持在容器内运行\u003c/li\u003e\n\u003cli\u003e预先拉去运行环境需要的镜像\u003c/li\u003e\n\u003cli\u003e通过 \u003ccode\u003edocker commit\u003c/code\u003e 方式保存当前的构建容器为 \u003ccode\u003eNode\u003c/code\u003e 镜像\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e\u003cstrong\u003e最后再强调一下: kind部署出来的集群是不适用生产环境的,官方推荐只是用于需要一个k8s集群用于ci或者testing.\u003c/strong\u003e\u003c/p\u003e\n\u003ch3 id=\"参考文章\"\u003e\u003ca href=\"#参考文章\" class=\"headerlink\" title=\"参考文章:\"\u003e\u003c/a\u003e\u003cstrong\u003e参考文章:\u003c/strong\u003e\u003c/h3\u003e\u003cblockquote\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca target=\"_blank\" rel=\"noopener\" href=\"https://github.com/kubernetes-sigs/kind/\"\u003ehttps://github.com/kubernetes-sigs/kind/\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca target=\"_blank\" rel=\"noopener\" href=\"https://kind.sigs.k8s.io/docs/design/initial\"\u003ehttps://kind.sigs.k8s.io/docs/design/initial\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca target=\"_blank\" rel=\"noopener\" href=\"https://kind.sigs.k8s.io/docs/user/configuration/\"\u003ehttps://kind.sigs.k8s.io/docs/user/configuration/\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca target=\"_blank\" rel=\"noopener\" href=\"https://kind.sigs.k8s.io/docs/design/base-image/\"\u003ehttps://kind.sigs.k8s.io/docs/design/base-image/\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca target=\"_blank\" rel=\"noopener\" href=\"https://cloud.tencent.com/developer/article/1512777\"\u003ehttps://cloud.tencent.com/developer/article/1512777\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/blockquote\u003e\n\u003ch3 id=\"转载请注明原作者-周淑科-https-izsk-me\"\u003e\u003ca href=\"#转载请注明原作者-周淑科-https-izsk-me\" class=\"headerlink\" title=\"转载请注明原作者: 周淑科(https://izsk.me)\"\u003e\u003c/a\u003e\u003cstrong\u003e转载请注明原作者: 周淑科(\u003ca target=\"_blank\" rel=\"noopener\" href=\"https://izsk.me/\"\u003ehttps://izsk.me\u003c/a\u003e)\u003c/strong\u003e\u003c/h3\u003e\n      \n    \u003c/div\u003e",
  "Date": "2020-08-07T08:10:53+08:00",
  "Author": "Z.S.K."
}