{
  "Source": "izsk.me",
  "Title": "解决Alpine镜像的not found解决",
  "Link": "https://izsk.me/2020/12/13/alpine-run-go-binary/",
  "Content": "\u003cdiv class=\"post-body\" itemprop=\"articleBody\"\u003e\n\n      \n      \n\n      \n        \u003cp\u003eCI阶段使用的镜像size要尽可能地小，这样在CI pull时使用的时间也会相应的短，所以有些base镜像都是基于alpine编译出来的\u003c/p\u003e\n\u003cp\u003e今天在\u003ccode\u003ealpine\u003c/code\u003e的\u003ccode\u003ebase\u003c/code\u003e镜像中使用\u003ccode\u003emongoimport\u003c/code\u003e时，提示了\u003ccode\u003enot fuond\u003c/code\u003e的奇怪问题，记录一下解决过程\u003c/p\u003e\n\u003cspan id=\"more\"\u003e\u003c/span\u003e\n\n\u003cp\u003e\u003ccode\u003ealpine\u003c/code\u003e使用的镜像为最新的\u003ccode\u003ealpine:1.13\u003c/code\u003e, \u003ccode\u003emongoimport\u003c/code\u003e为官方使用go 1.15编译出来的二进制文件\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003eDockfile\u003c/code\u003e文件如下:\u003c/p\u003e\n\u003cfigure class=\"highlight bash\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003eFROM alpine/git:latest\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"comment\"\u003e# ... 省略\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eCOPY mongoimport /usr/bin/mongoimport\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"comment\"\u003e# ... 省略\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e镜像编译完成之后运行起来后，会提示以下的错误:\u003c/p\u003e\n\u003cfigure class=\"highlight bash\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003emain.sh: workflow.sh: line 133: mongoimport: not found\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e\u003ccode\u003enot found\u003c/code\u003e这个很奇怪,我开始以为是没有找到\u003ccode\u003emongoimport\u003c/code\u003e这个命令，但使用\u003ccode\u003els或者which\u003c/code\u003e后发现在\u003ccode\u003e/usr/bin\u003c/code\u003e是存在\u003ccode\u003emongoimport\u003c/code\u003e\u003c/p\u003e\n\u003cp\u003e但这个\u003ccode\u003enot found\u003c/code\u003e指的是什么呢？\u003c/p\u003e\n\u003cp\u003e一番\u003ccode\u003egoogle\u003c/code\u003e后发现在使用\u003ccode\u003ealpine\u003c/code\u003e时，如果按正常的go编译命令编译出来的二进制文件或多或少地地出现这个问题，原因是什么呢?\u003c/p\u003e\n\u003cp\u003e这个就要从\u003ccode\u003ealpine\u003c/code\u003e使用的musl libc说起，而对应的则是gnu libc，这两者有什么区别呢?\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003egnu libc\u003c/code\u003e是标准的libc的库，我们大部分时间编译出来的都是可以使用这个库\u003c/p\u003e\n\u003cp\u003e而Alpine\u003ccode\u003e采用了\u003c/code\u003emusl libc\u003ccode\u003e和\u003c/code\u003ebusybox` 以减小系统的体积和运行时资源消耗\u003c/p\u003e\n\u003cp\u003e所以用alpine做base的镜像体积非常的小， 很适合用于CI阶段\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003emusl libc只能说是部分兼容`gnu libc，因此也不是所有的go编译出来的二进制都无法使用\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003e这两者详细的区别大家可考虑这些链接:\u003c/p\u003e\n\u003cp\u003e\u003ca target=\"_blank\" rel=\"noopener\" href=\"https://blog.csdn.net/liumiaocn/article/details/89702529\"\u003ehttps://blog.csdn.net/liumiaocn/article/details/89702529\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003e回到问题本身，上面提示\u003ccode\u003enot found\u003c/code\u003e是不是也是因为\u003ccode\u003emongoimport\u003c/code\u003e编译的时候使用的是动态库,要怎么解决呢?\u003c/p\u003e\n\u003cp\u003e从网上的解决方案来看,有以下几种解决方案:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003e\u003ccode\u003eRUN mkdir /lib64 \u0026amp;\u0026amp; ln -s /lib/libc.musl-x86_64.so.1 /lib64/ld-linux-x86-64.so.2\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003eRUN apk –no-cache add  libc6-compat libgcc libstdc++\u003c/li\u003e\n\u003cli\u003ego编译时指定\u003ccode\u003eCGO_ENABLED=0 go build .\u003c/code\u003e\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003e 第一种方式我尝试过，可惜，可以解决\u003ccode\u003enot found\u003c/code\u003e的报错，也就是说可以找到二进制命令了，但是命令中如果引用了其它的动态库，则还是会有问题，会提示如下的报错:\u003c/p\u003e\n\u003cfigure class=\"highlight bash\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003eError loading shared library libgssapi_krb5.so.2: No such file or directory (needed by /usr/bin/mongoimport)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eError loading shared library libkrb5.so.3: No such file or directory (needed by /usr/bin/mongoimport)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eError relocating /usr/bin/mongoimport: gss_release_buffer: symbol not found\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eError relocating /usr/bin/mongoimport: gss_init_sec_context: symbol not found\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e开始的时候为了保证镜像的size尽可能的小，还打算将错误提示中的so手工放到镜像中，考虑后续不可维护，就没有再尝试\u003c/p\u003e\n\u003cp\u003e对于方式2我也尝试了，\u003ccode\u003elibc6-compat\u003c/code\u003e是libc的兼容包, 大部分提示\u003ccode\u003enot found\u003c/code\u003e的问题都可以通过安装这个包进行解决,本人未解决\u003c/p\u003e\n\u003cp\u003e由于mongodb官方提供的tools版本没有基于alpine可用的，对于方式3本人未尝试，原因在于\u003ccode\u003emongodb-tools\u003c/code\u003e提供的编译工具相对比较麻烦, 而且我只是需要一个\u003ccode\u003emongoimport\u003c/code\u003e，官方的编译工具没办法只编译\u003ccode\u003emongoimpmort\u003c/code\u003e,理论来说指定\u003ccode\u003eCGO_ENABLED=0\u003c/code\u003e编译出来的二进制是可用的\u003c/p\u003e\n\u003cp\u003e本人使用最后一种方式，这里偷机了一把, 随便run一个alpine的镜像，然后在镜像中\u003ccode\u003eadd mongodb-tools\u003c/code\u003e,最后在\u003ccode\u003e/usr/bin/mongoimport\u003c/code\u003e这单个二进制复制出来，然后放到base镜像中，这样避免直接在base中安装，降低size\u003c/p\u003e\n\u003cp\u003e之前网上就看到要慎用alpine，会出现各种各样奇怪的问题, 看来是真的\u003c/p\u003e\n\u003ch3 id=\"参考文章\"\u003e\u003ca href=\"#参考文章\" class=\"headerlink\" title=\"参考文章:\"\u003e\u003c/a\u003e\u003cstrong\u003e参考文章:\u003c/strong\u003e\u003c/h3\u003e\u003cblockquote\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca target=\"_blank\" rel=\"noopener\" href=\"https://pkgs.alpinelinux.org/\"\u003ehttps://pkgs.alpinelinux.org/\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca target=\"_blank\" rel=\"noopener\" href=\"https://github.com/mongodb/mongo-tools\"\u003ehttps://github.com/mongodb/mongo-tools\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca target=\"_blank\" rel=\"noopener\" href=\"https://blog.zjyl1994.com/post/alpine-cgo/\"\u003ehttps://blog.zjyl1994.com/post/alpine-cgo/\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca target=\"_blank\" rel=\"noopener\" href=\"https://studygolang.com/articles/26851\"\u003ehttps://studygolang.com/articles/26851\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca target=\"_blank\" rel=\"noopener\" href=\"https://blog.csdn.net/liumiaocn/article/details/89702529\"\u003ehttps://blog.csdn.net/liumiaocn/article/details/89702529\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca target=\"_blank\" rel=\"noopener\" href=\"https://www.mongodb.com/try/download/database-tools?tck=docs_databasetools\"\u003ehttps://www.mongodb.com/try/download/database-tools?tck=docs_databasetools\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/blockquote\u003e\n\u003ch3 id=\"转载请注明原作者-周淑科-https-izsk-me\"\u003e\u003ca href=\"#转载请注明原作者-周淑科-https-izsk-me\" class=\"headerlink\" title=\"转载请注明原作者: 周淑科(https://izsk.me)\"\u003e\u003c/a\u003e\u003cstrong\u003e转载请注明原作者: 周淑科(\u003ca target=\"_blank\" rel=\"noopener\" href=\"https://izsk.me/\"\u003ehttps://izsk.me\u003c/a\u003e)\u003c/strong\u003e\u003c/h3\u003e\n      \n    \u003c/div\u003e",
  "Date": "2020-12-13T20:10:53+08:00",
  "Author": "Z.S.K."
}