{
  "Source": "izsk.me",
  "Title": "volcano如何应对大规模任务系列之volcano开篇介绍",
  "Link": "https://izsk.me/2023/08/31/volcano-introduction/",
  "Content": "\u003cdiv class=\"post-body\" itemprop=\"articleBody\"\u003e\n\n      \n      \n\n      \n        \u003cp\u003evolcano做为CNCF目前唯一一款应对大规模资源批调度工具被大家熟知.\u003cbr/\u003e作者负责的kubernetes集群每天都有大量的任务需要运行, GPU任务、短任务、长任务等等，同时还存在多租户场景、复杂的调度策略等, 依托volcano的高度可插拔能力, 同时结合业务场景进行相应的优化,极大提高了资源使用效率，\u003cstrong\u003e结果导向明显\u003c/strong\u003e\u003cbr/\u003e在此也分享一下整个落地过程,也做为现阶段的一个工作总结, 工作之余尽量更新.\u003c/p\u003e\n\u003cp\u003e注: 业务各有不同, 作者的选型及观点可能并不适用其它人\u003cbr/\u003e此篇为: volcano如何应对大规模任务系列之volcano开篇介绍\u003c/p\u003e\n\u003cspan id=\"more\"\u003e\u003c/span\u003e\n\n\u003cp\u003e本系列总体分为以下几块内容:\u003cbr/\u003evolcano如何应对大规模任务系列之volcano开篇介绍\u003cbr/\u003evolcano如何应对大规模任务系列之volcano关键对象\u003cbr/\u003evolcano如何应对大规模任务系列之volcano插件系统\u003cbr/\u003evolcano如何应对大规模任务系列之volcano源码解析\u003cbr/\u003evolcano如何应对大规模任务系列之volcano优化之道\u003cbr/\u003evolcano如何应对大规模任务系列之volcano生产实践\u003cbr/\u003evolcano如何应对大规模任务系列之volcano总结建议\u003c/p\u003e\n\u003ch3 id=\"kube-batch\"\u003e\u003ca href=\"#kube-batch\" class=\"headerlink\" title=\"kube-batch\"\u003e\u003c/a\u003ekube-batch\u003c/h3\u003e\u003cp\u003evolcano是由另一款工具: kube-batch发展而来, kube-batch的创建者后来直接加入了华为创建了volcano项目 kube-batch的功能虽没有volcano那么复杂且已不再维护，但很多核心思想在volcano中沿用了下来，\u003cbr/\u003e建议大家可以看看它的源码,对volcano的入门还是很方便的。\u003cbr/\u003e感兴趣的可以看看作者之前对\u003ca target=\"_blank\" rel=\"noopener\" href=\"https://izsk.me/2021/03/15/Kubernetes-kubebatch-knows/\"\u003ekube-batch的生产实践\u003c/a\u003e\u003c/p\u003e\n\u003ch3 id=\"Why\"\u003e\u003ca href=\"#Why\" class=\"headerlink\" title=\"Why\"\u003e\u003c/a\u003eWhy\u003c/h3\u003e\u003cp\u003e为什么会有volcano这款工具?\u003cbr/\u003e当然新版本的kube-scheduler是可以运行extend-resource机制来对kube-scheduler的在限能力进行自定义扩展，\u003cbr/\u003e但是在有这个能力之前, kube-scheduler的功能其实很单一，\u003cstrong\u003e本质上它是个串行调度\u003c/strong\u003e,不能很好地处理如HPC场景下的资源浪费问题, 因此kube-batch项目诞生，最有名的则是它实现了gang scheduler, 在迭代了多个版本且有很多生产实践后volcano诞生，同时加入了更加丰富的插件以应对更加复杂的业务场景\u003c/p\u003e\n\u003ch3 id=\"When\"\u003e\u003ca href=\"#When\" class=\"headerlink\" title=\"When\"\u003e\u003c/a\u003eWhen\u003c/h3\u003e\u003cp\u003e什么时候可能会需要volcano这个工具?\u003cbr/\u003e虽然最新版volcano(v1.8.0)可以兼容kubernetes原生的所有类型对象，可以完全取代kube-scheduler调度器，但volcano毕竟还是更专注于批调度这个领域，因此，如果只是运行一些deployment、sts这类long-run的资源对象，引入volcano可能还是带来比较高的学习成本及加大系统的复杂性，并不会带来多大的收益\u003cbr/\u003e但如果kubernetes集群每天都面临需要调度大量的JOB, 对计算资源有比较高的使用率时, 还是有很大帮助, 可能有如下几个场景:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eQuota的弹性\u003c/li\u003e\n\u003cli\u003e多租户隔离\u003c/li\u003e\n\u003cli\u003e更复杂的算力环境、在混部、优先级等\u003c/li\u003e\n\u003c/ol\u003e\n\u003ch3 id=\"How\"\u003e\u003ca href=\"#How\" class=\"headerlink\" title=\"How\"\u003e\u003c/a\u003eHow\u003c/h3\u003e\u003cp\u003e如何落地volcano?\u003cbr/\u003e\u003cstrong\u003e首先当然是考虑业务场景，无论何时都不可能脱离业务谈技术\u003c/strong\u003e, 作者做的最明智(后来被证实是很正确的)的一个选择就是: \u003cstrong\u003e在打造基础设施早期就说服老板需要引入批调度器来应对未来可能出现的资源紧张问题\u003c/strong\u003e\u003cbr/\u003e作者推荐一种结果导向判断: 在分析业务模型及调研技术选型后, 如果可以得出\u003cstrong\u003e算力不可能无限被满足\u003c/strong\u003e这个结论，那么就可以考虑落地volcano,退一步讲, kubernetes集群本可以很好地支持多类型的调度器且volcano可以取代kube-scheduler.\u003cbr/\u003e但作者强烈建议: \u003cstrong\u003e在落地之前，一定一定要充分理解volcano的插件系统, 不同的插件组合将产生不一样的调度结果，有时候结果可能完全不一样, 如果不能很好地理解, 那么总会出现\u003ccode\u003e各类惊喜\u003c/code\u003e\u003c/strong\u003e\u003c/p\u003e\n\u003ch3 id=\"参考文章\"\u003e\u003ca href=\"#参考文章\" class=\"headerlink\" title=\"参考文章:\"\u003e\u003c/a\u003e\u003cstrong\u003e参考文章:\u003c/strong\u003e\u003c/h3\u003e\u003cblockquote\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca target=\"_blank\" rel=\"noopener\" href=\"https://volcano.sh/\"\u003ehttps://volcano.sh\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca target=\"_blank\" rel=\"noopener\" href=\"https://izsk.me/2021/03/15/Kubernetes-kubebatch-knows/\"\u003ehttps://izsk.me/2021/03/15/Kubernetes-kubebatch-knows/\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/blockquote\u003e\n\u003ch3 id=\"转载请注明原作者-周淑科-https-izsk-me\"\u003e\u003ca href=\"#转载请注明原作者-周淑科-https-izsk-me\" class=\"headerlink\" title=\"转载请注明原作者: 周淑科(https://izsk.me)\"\u003e\u003c/a\u003e\u003cstrong\u003e转载请注明原作者: 周淑科(\u003ca target=\"_blank\" rel=\"noopener\" href=\"https://izsk.me/\"\u003ehttps://izsk.me\u003c/a\u003e)\u003c/strong\u003e\u003c/h3\u003e\n      \n    \u003c/div\u003e",
  "Date": "2023-08-31T11:30:53+08:00",
  "Author": "Z.S.K."
}