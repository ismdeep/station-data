{
  "Source": "izsk.me",
  "Title": "volcano如何应对大规模任务系列之volcano关键对象",
  "Link": "https://izsk.me/2023/11/12/volcano-key-resources/",
  "Content": "\u003cdiv class=\"post-body\" itemprop=\"articleBody\"\u003e\n\n      \n      \n\n      \n        \u003cp\u003evolcano做为CNCF目前唯一一款应对大规模资源批调度工具被大家熟知.\u003cbr/\u003e作者负责的kubernetes集群每天都有大量的任务需要运行, GPU任务、短任务、长任务等等，同时还存在多租户场景、复杂的调度策略等, 依托volcano的高度\u003cstrong\u003e可插拔\u003c/strong\u003e能力, 同时结合业务场景进行相应的优化,极大提高了资源使用效率，\u003cstrong\u003e结果导向明显\u003c/strong\u003e\u003cbr/\u003e在此也分享一下整个落地过程,也做为现阶段的一个工作总结, 工作之余尽量更新.\u003c/p\u003e\n\u003cp\u003e注: 业务各有不同, 作者的选型及观点可能并不适用其它人\u003cbr/\u003e此篇为: volcano如何应对大规模任务系列之volcano关键对象\u003c/p\u003e\n\u003cspan id=\"more\"\u003e\u003c/span\u003e\n\n\u003cp\u003e本系列总体分为以下几块内容:\u003cbr/\u003e\u003ca target=\"_blank\" rel=\"noopener\" href=\"https://izsk.me/2023/08/31/volcano-introduction/\"\u003evolcano如何应对大规模任务系列之volcano开篇介绍\u003c/a\u003e\u003cbr/\u003evolcano如何应对大规模任务系列之volcano关键对象\u003cbr/\u003evolcano如何应对大规模任务系列之volcano插件系统\u003cbr/\u003evolcano如何应对大规模任务系列之volcano源码解析\u003cbr/\u003evolcano如何应对大规模任务系列之volcano优化之道\u003cbr/\u003evolcano如何应对大规模任务系列之volcano生产实践\u003cbr/\u003evolcano如何应对大规模任务系列之volcano总结建议\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003e本系列的所用volcano版本基于v1.7.0\u003c/strong\u003e\u003c/p\u003e\n\u003ch3 id=\"架构图\"\u003e\u003ca href=\"#架构图\" class=\"headerlink\" title=\"架构图\"\u003e\u003c/a\u003e架构图\u003c/h3\u003e\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/zhoushuke/BlogPhoto/master/githuboss/20231007170014.png\"/\u003e\u003c/p\u003e\n\u003cp\u003eVolcano由scheduler、controllermanager、admission这三个核心组件及一个命令行工具vcctl组成:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003e\u003cp\u003eScheduler: Volcano scheduler通过一系列的action和plugin调度Job，并为它找到一个最适合的节点。与Kubernetes default-scheduler相比，Volcano与众不同的 地方是它支持针对Job的多种调度算法。\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\u003cp\u003eControllermanager: Volcano controllermanager管理CRD资源的生命周期。它主要由Queue ControllerManager、 PodGroupControllerManager、 VCJob ControllerManager构成。\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\u003cp\u003eAdmission: Volcano admission负责对CRD API资源进行校验。\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\u003cp\u003eVcctl: Volcano vcctl是Volcano的命令行客户端工具。\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ol\u003e\n\u003ch3 id=\"session\"\u003e\u003ca href=\"#session\" class=\"headerlink\" title=\"session\"\u003e\u003c/a\u003esession\u003c/h3\u003e\u003cp\u003eSession模块其实也是调度周期，默认是1s, 可配置,它的作用是承上启下。volcano在每个调度周期开始时，都会新建一个Session对象，这个Session的初始化时，会做以下操作：\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e调用Cache.Snapshot接口，将Cache中节点、任务和队列的信息拷贝一份副本，之后在这个调度周期中使用这份副本进行调度。因为Cache的数据会不断变化，为了保持同个调度周期中的数据一致性，在一开始就拷贝了一份副本。\u003c/li\u003e\n\u003cli\u003e将配置中的各个Plugin初始化，然后调用plugin的OnSessionOpen接口。Plugin在OnSessionOpen中，会初始化自己需要的数据，并将一些回调函数注册到session中。Plugin可以向Session中注册的函数是,常用的如下：\u003col\u003e\n\u003cli\u003ejobOrderFns： 决定哪个任务优先被处理\u003c/li\u003e\n\u003cli\u003equeueOrderFns：决定哪个队列优先被处理\u003c/li\u003e\n\u003cli\u003etaskOrderFns：决定任务中哪个容器优先被处理\u003c/li\u003e\n\u003cli\u003epredicateFns： 判断某个节点是否满足容器的基本调度要求。比如容器中指定的节点的标签\u003c/li\u003e\n\u003cli\u003enodeOrderFns： 当多个节点满足容器的调度要求时，优先选择哪个节点\u003c/li\u003e\n\u003cli\u003epreemptableFns： 决定某个容器是否可以被抢占\u003c/li\u003e\n\u003cli\u003ereclaimableFns ：决定某个容器是否可以被回收\u003c/li\u003e\n\u003cli\u003eoverusedFns： 决定某个队列使用的资源是否超过限额，是的话不再调度队列中的任务\u003c/li\u003e\n\u003cli\u003ejobReadyFns：判断某个任务是否已经准备好，可以调用API Server的接口将任务的容器调度到节点\u003c/li\u003e\n\u003cli\u003ejobPipelinedFns ： 判断某个任务是否处于Pipelined状态，后下详解\u003c/li\u003e\n\u003cli\u003ejobValidFns： 判断某个任务是否有效\u003c/li\u003e\n\u003c/ol\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e关于plugin与各个funcion的引用关系，关注volcano如何应对大规模任务系列之volcano插件系统一节\u003c/p\u003e\n\u003cp\u003e注意Plugin不需要注册上面所有的函数，而是可以根据自己的需要，注册某几个函数。比如Predict plugin就只注册了predicateFns这个函数到Session中。\u003c/p\u003e\n\u003cp\u003e初始化成功后，volcano会依次调用不同的Action的Execute方法，并将Session对象作为参数传入。在Execute中，会调用Session的各种方法。这些方法，有些最终会调用到Cache的方法， 有些是调用Plugin注册的方法。\u003c/p\u003e\n\u003ch3 id=\"cache\"\u003e\u003ca href=\"#cache\" class=\"headerlink\" title=\"cache\"\u003e\u003c/a\u003ecache\u003c/h3\u003e\u003cp\u003eschedulercache模块封装了对API Server的节点、容器等对象的数据同步逻辑。Kubernetes的数据保存在分布式存储etcd中，所有对数据的查询和操作都通过调用API Server的接口，而非直接操作etcd。在调度时，需要集群中的节点和容器的使用资源和状态等信息。Cache模块通过调用Kubernetes的SDK，通过watch机制监听集群中的节点、容器的状态变化，将信息同步到自己的数据结构中。\u003cbr/\u003eSchedulerCache会持有很多informer， 初始化的informer注册各个eventHandler，然后pod/podgroup等变动会被同步在Jobs, Nodes, Queues, PriorityClasses等几个map中。\u003cstrong\u003epodgroup加入jobInfo，pod 加入taskInfo\u003c/strong\u003e\u003c/p\u003e\n\u003ch3 id=\"action\"\u003e\u003ca href=\"#action\" class=\"headerlink\" title=\"action\"\u003e\u003c/a\u003eaction\u003c/h3\u003e\u003cp\u003e有几个比较重要的action, 下面一一介绍\u003c/p\u003e\n\u003ch4 id=\"enqueue\"\u003e\u003ca href=\"#enqueue\" class=\"headerlink\" title=\"enqueue\"\u003e\u003c/a\u003eenqueue\u003c/h4\u003e\u003cp\u003eEnqueue action筛选符合要求的作业进入待调度队列。当一个Job下的最小资源申请量不能得到满足时，即使为Job下的Pod执行调度动作，Pod也会因为gang约束没有达到而无法进行调度；只有当job的最小资源量得到满足，状态由”Pending”刷新为”Inqueue”才可以进行。一般来说Enqueue action是调度器配置必不可少的action(v1.7+版本后可disable)\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003e在volcano中, 只有通过了enqueue后的任务(即由pending状态变成inqueue状态)才有资格进行真正资源的allocate\u003c/strong\u003e, 因此,对enqueue action的逻辑需要理解, 源码解析一章中也会有这方面的分析\u003c/p\u003e\n\u003cp\u003eEnqueue action是调度流程中的准备阶段\u003c/p\u003e\n\u003ch4 id=\"allocate\"\u003e\u003ca href=\"#allocate\" class=\"headerlink\" title=\"allocate\"\u003e\u003c/a\u003eallocate\u003c/h4\u003e\u003cp\u003eAllocate action是调度流程中的正常分配步骤，用于处理在待调度Pod列表中\u003cstrong\u003e具有资源申请量的Pod调度\u003c/strong\u003e，是调度过程必不可少的action。这个过程包括作业的predicate(预选)和prioritize(优选)。使用predicateFn预选，过滤掉不能分配作业的node；使用NodeOrderFn打分来找到最适合的分配节点。\u003c/p\u003e\n\u003cp\u003eAllocate action遵循commit机制，当一个Pod的调度请求得到满足后，最终并不一定会为该Pod执行绑定动作，这一步骤还取决于Pod所在Job的gang约束是否得到满足。只有Pod所在Job的gang约束得到满足，Pod才可以被调度，否则，Pod不能够被调度\u003c/p\u003e\n\u003ch4 id=\"reclaim\"\u003e\u003ca href=\"#reclaim\" class=\"headerlink\" title=\"reclaim\"\u003e\u003c/a\u003ereclaim\u003c/h4\u003e\u003cp\u003evolcano支持弹性的资源使用，当queue中的资源没有被使用时，可暂被其它queue占用，reclaim action则是用于回收那些超格使用了queue上限的额外资源\u003c/p\u003e\n\u003ch4 id=\"preempt\"\u003e\u003ca href=\"#preempt\" class=\"headerlink\" title=\"preempt\"\u003e\u003c/a\u003epreempt\u003c/h4\u003e\u003cp\u003ePreempt action是调度流程中的抢占步骤，用于处理高优先级调度问题。\u003cstrong\u003ePreempt用于同一个Queue中job之间的抢占，或同一Job下Task之间的抢占\u003c/strong\u003e\u003c/p\u003e\n\u003ch4 id=\"backfill\"\u003e\u003ca href=\"#backfill\" class=\"headerlink\" title=\"backfill\"\u003e\u003c/a\u003ebackfill\u003c/h4\u003e\u003cp\u003eBackfill action是调度流程中的回填步骤，处理待调度Pod列表中\u003cstrong\u003e没有指明资源申请量的Pod调度\u003c/strong\u003e，在对单个Pod执行调度动作的时候，遍历所有的节点，只要节点满足了Pod的调度请求，就将Pod调度到这个节点上。\u003c/p\u003e\n\u003ch3 id=\"plugins\"\u003e\u003ca href=\"#plugins\" class=\"headerlink\" title=\"plugins\"\u003e\u003c/a\u003eplugins\u003c/h3\u003e\u003cp\u003evolcano中包含了很多的plugin, 主要作用是\u003cstrong\u003e在action下实现特定的业务逻辑\u003c/strong\u003e, 现有的大部分plugin作者都在生产环境应用过，因此有一些生产经验可谈，关注volcano如何应对大规模任务系列之volcano插件系统一节,不过，还是先把所有的plugin简单介绍一下\u003c/p\u003e\n\u003ch4 id=\"gang\"\u003e\u003ca href=\"#gang\" class=\"headerlink\" title=\"gang\"\u003e\u003c/a\u003egang\u003c/h4\u003e\u003cp\u003eGang调度策略是volcano-scheduler的核心调度算法之一，它满足了调度过程中的\u003cstrong\u003e“All or nothing”\u003c/strong\u003e的调度需求，避免Pod的任意调度导致集群资源的浪费。具体算法是，观察Job下的Pod已调度数量是否满足了最小运行数量，当Job的最小运行数量得到满足时，为Job下的所有Pod执行调度动作，否则，不执行。\u003cbr/\u003e\u003cstrong\u003ekube-scheduler本质上是个串行的调度器，而gang则可实现并行的效果\u003c/strong\u003e\u003c/p\u003e\n\u003ch4 id=\"Binpack\"\u003e\u003ca href=\"#Binpack\" class=\"headerlink\" title=\"Binpack\"\u003e\u003c/a\u003eBinpack\u003c/h4\u003e\u003cp\u003ebinpack调度算法的目标是\u003cstrong\u003e尽量把已有的节点填满（尽量不往空白节点分配）\u003c/strong\u003e。具体实现上，binpack调度算法是给可以投递的节点打分，分数越高表示节点的资源利用率越高。binpack算法能够尽可能填满节点，将应用负载靠拢在部分节点\u003c/p\u003e\n\u003cp\u003eBinpack算法以插件的形式，注入到volcano-scheduler调度过程中，将应用在Pod优选节点的阶段。Volcano-scheduler在计算binpack算法时，会考虑Pod请求的各种资源，并根据各种资源所配置的权重做平均。每种资源在节点分值计算过程中的权重并不一样，这取决于管理员为每种资源配置的权重值。同时不同的插件在计算节点分数时，也需要分配不同的权重，scheduler也为binpack插件设置了分数权重。\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003e工作节点上的应用拥塞程度跟binpack的设定的参数有很大关系\u003c/strong\u003e\u003c/p\u003e\n\u003ch4 id=\"Priority\"\u003e\u003ca href=\"#Priority\" class=\"headerlink\" title=\"Priority\"\u003e\u003c/a\u003ePriority\u003c/h4\u003e\u003cp\u003ePriority plugin提供了job、task排序的实现，以及计算牺牲作业的函数preemptableFn，job的排序根据priorityClassName，task的排序依次根据priorityClassName、createTime、id。\u003c/p\u003e\n\u003ch4 id=\"DRF\"\u003e\u003ca href=\"#DRF\" class=\"headerlink\" title=\"DRF\"\u003e\u003c/a\u003eDRF\u003c/h4\u003e\u003cp\u003eDRF调度算法的全称是Dominant Resource Fairness，是基于容器组Domaint Resource的调度算法。volcano-scheduler观察每个Job请求的主导资源，并将其作为对集群资源使用的一种度量，根据Job的主导资源，计算Job的share值，在调度的过程中，具有较低share值的Job将具有更高的调度优先级。这样能够满足更多的作业，不会因为一个胖业务，饿死大批小业务。DRF调度算法能够确保在多种类型资源共存的环境下,尽可能满足分配的公平原则。\u003c/p\u003e\n\u003ch4 id=\"Proportion\"\u003e\u003ca href=\"#Proportion\" class=\"headerlink\" title=\"Proportion\"\u003e\u003c/a\u003eProportion\u003c/h4\u003e\u003cp\u003eProportion调度算法是使用queue的概念，用来控制集群总资源的分配比例。每一个queue分配到的集群资源比例是一定的\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eproportion在queue中很重要，弹性的资源分配就是由proportion实现\u003c/strong\u003e\u003c/p\u003e\n\u003ch4 id=\"Predicates\"\u003e\u003ca href=\"#Predicates\" class=\"headerlink\" title=\"Predicates\"\u003e\u003c/a\u003ePredicates\u003c/h4\u003e\u003cp\u003ePredicate plugin通过pod、nodeInfo作为参数，调用predicateGPU，根据计算结果对作业进行评估预选\u003c/p\u003e\n\u003ch4 id=\"Task-topology\"\u003e\u003ca href=\"#Task-topology\" class=\"headerlink\" title=\"Task-topology\"\u003e\u003c/a\u003eTask-topology\u003c/h4\u003e\u003cp\u003eTask-topology算法是一种根据Job内task之间亲和性和反亲和性配置计算task优先级和Node优先级的算法。通过在Job内配置task之间的亲和性和反亲和性策略，并使用task-topology算法，可优先将具有亲和性配置的task调度到同一个节点上，将具有反亲和性配置的Pod调度到不同的节点上\u003c/p\u003e\n\u003ch4 id=\"Nodeorder\"\u003e\u003ca href=\"#Nodeorder\" class=\"headerlink\" title=\"Nodeorder\"\u003e\u003c/a\u003eNodeorder\u003c/h4\u003e\u003cp\u003eNodeorder plugin是一种调度优选策略：通过模拟分配从各个维度为node打分，找到最适合当前作业的node。打分参数由用户来配置。参数包含了Affinity、reqResource，、LeastReqResource、MostReqResource、balanceReqResouce\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003e跟binpack一样, nodeorder的不同参数，对节点的调度结果有很大的不同\u003c/strong\u003e\u003c/p\u003e\n\u003ch4 id=\"SLA\"\u003e\u003ca href=\"#SLA\" class=\"headerlink\" title=\"SLA\"\u003e\u003c/a\u003eSLA\u003c/h4\u003e\u003cp\u003eSLA的全称是Service Level agreement。用户向volcano提交job的时候，可能会给job增加特殊的约束，例如最长等待时间(JobWaitingTime)。这些约束条件可以视为用户与volcano之间的服务协议。SLA plugin可以为单个作业/整个集群接收或者发送SLA参数\u003c/p\u003e\n\u003ch4 id=\"Tdm\"\u003e\u003ca href=\"#Tdm\" class=\"headerlink\" title=\"Tdm\"\u003e\u003c/a\u003eTdm\u003c/h4\u003e\u003cp\u003eTdm的全称是Time Division Multiplexing。在一些场景中，一些节点既属于Kubernetes集群也属于Yarn集群。Tdm plugin 需要管理员为这些节点标记为\u003ccode\u003erevocable node\u003c/code\u003e。Tdm plugin会在该类节点可被撤销的时间段内尝试把\u003ccode\u003epreemptable task\u003c/code\u003e调度给\u003ccode\u003erevocable node\u003c/code\u003e，并在该时间段之外清除\u003ccode\u003erevocable node\u003c/code\u003e上的\u003ccode\u003epreemptable task\u003c/code\u003e。\u003cstrong\u003eTdm plugin提高了volcano在调度过程中节点资源的分时复用能力\u003c/strong\u003e\u003c/p\u003e\n\u003ch4 id=\"Numa-aware\"\u003e\u003ca href=\"#Numa-aware\" class=\"headerlink\" title=\"Numa-aware\"\u003e\u003c/a\u003eNuma-aware\u003c/h4\u003e\u003cp\u003e当节点运行多个cpu密集的pod。基于pod是否可以迁移cpu已经调度周期cpu资源状况，工作负载可以迁移到不同的cpu核心下。许多工作负载对cpu资源迁移并不敏感。然而，有一些cpu的缓存亲和度以及调度延迟显著影响性能的工作负载，kubelet允许可选的cpu编排策略(cpu management)来确定节点上cpu资源的绑定分配\u003c/p\u003e\n\u003ch3 id=\"CRD\"\u003e\u003ca href=\"#CRD\" class=\"headerlink\" title=\"CRD\"\u003e\u003c/a\u003eCRD\u003c/h3\u003e\u003cp\u003evolcano中有3个很重要的cr资源，queue、podgroup、 vcjob\u003c/p\u003e\n\u003ch4 id=\"queue\"\u003e\u003ca href=\"#queue\" class=\"headerlink\" title=\"queue\"\u003e\u003c/a\u003equeue\u003c/h4\u003e\u003cp\u003equeue就是队列, \u003cstrong\u003e在多租户场景下是个很重要的对象\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003e上一个最简单地例子:\u003c/p\u003e\n\u003cfigure class=\"highlight yaml\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e8\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e9\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e10\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"attr\"\u003eapiVersion:\u003c/span\u003e \u003cspan class=\"string\"\u003escheduling.volcano.sh/v1beta1\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"attr\"\u003ekind:\u003c/span\u003e \u003cspan class=\"string\"\u003eQueue\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"attr\"\u003emetadata:\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  \u003cspan class=\"attr\"\u003ename:\u003c/span\u003e \u003cspan class=\"string\"\u003edefault\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"attr\"\u003espec:\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  \u003cspan class=\"attr\"\u003ereclaimable:\u003c/span\u003e \u003cspan class=\"literal\"\u003etrue\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  \u003cspan class=\"attr\"\u003eweight:\u003c/span\u003e \u003cspan class=\"number\"\u003e1\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  \u003cspan class=\"attr\"\u003ecapability:\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"attr\"\u003ecpu:\u003c/span\u003e \u003cspan class=\"string\"\u003e\u0026#34;4\u0026#34;\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"attr\"\u003ememory:\u003c/span\u003e \u003cspan class=\"string\"\u003e\u0026#34;4096Mi\u0026#34;\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003col\u003e\n\u003cli\u003ereclaimable: 表示该queue在资源使用量超过该queue所应得的资源份额时，是否允许其他queue回收该queue使用超额的资源,默认值为true\u003c/li\u003e\n\u003cli\u003eweight: 为 (weight/total-weight) * total-resource(集群中所有资源的总和), weight是一个软约束\u003c/li\u003e\n\u003cli\u003ecapability(可选): 表示该queue内所有podgroup使用资源量之和的上限，它是一个硬约束\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003e注意: queue capability需要与proportion插件一起使用，要不然不生效，即\u003cstrong\u003equeue下的所有资源不可以超过capability总量\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003e那queue的weight计算逻辑是怎样的呢？\u003cbr/\u003e根据queue的weight为queue分配集群资源的逻辑大致如下。\u003c/p\u003e\n\u003cfigure class=\"highlight bash\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e8\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e9\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e10\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e11\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"comment\"\u003e# 每个queue deserved 初始为0\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"keyword\"\u003efor\u003c/span\u003e{\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"keyword\"\u003efor\u003c/span\u003e 每个queue {\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        deserved = deserved + wrr\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        1. 如果 deserved 大于 capability，则取  deserved/capability/request 较小值，不管资源够不够用，meet了，不再继续分配资源了\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        2. 如果 deserved 小于 capability 大于 request，也是meet 了 退出循环\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        3. 如果 deserved 小于 request ，那就先给其它queue 分配资源，若还有剩余remaining 再来一轮\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    }\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    更新remaining\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    如果上一次remaining 和这一次 没有变化或者没有remaining了，说明queue 都分配好了或没有资源了，退出分配过程\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e}\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e具体的计算方法将在volcano如何应对大规模任务系列之volcano源码解析一节中展开\u003c/p\u003e\n\u003ch4 id=\"podgroup\"\u003e\u003ca href=\"#podgroup\" class=\"headerlink\" title=\"podgroup\"\u003e\u003c/a\u003epodgroup\u003c/h4\u003e\u003cp\u003epodgroup是一组强关联pod的集合, 例子如下:\u003c/p\u003e\n\u003cfigure class=\"highlight yaml\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e8\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e9\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e10\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e11\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e12\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e13\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e14\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e15\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e16\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e17\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e18\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e19\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"attr\"\u003eapiVersion:\u003c/span\u003e \u003cspan class=\"string\"\u003escheduling.volcano.sh/v1beta1\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"attr\"\u003ekind:\u003c/span\u003e \u003cspan class=\"string\"\u003ePodGroup\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"attr\"\u003emetadata:\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  \u003cspan class=\"attr\"\u003ename:\u003c/span\u003e \u003cspan class=\"string\"\u003etest\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  \u003cspan class=\"attr\"\u003enamespace:\u003c/span\u003e \u003cspan class=\"string\"\u003edefault\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  \u003cspan class=\"attr\"\u003eownerReferences:\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  \u003cspan class=\"bullet\"\u003e-\u003c/span\u003e \u003cspan class=\"attr\"\u003eapiVersion:\u003c/span\u003e \u003cspan class=\"string\"\u003ebatch.volcano.sh/v1alpha1\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"attr\"\u003eblockOwnerDeletion:\u003c/span\u003e \u003cspan class=\"literal\"\u003etrue\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"attr\"\u003econtroller:\u003c/span\u003e \u003cspan class=\"literal\"\u003etrue\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"attr\"\u003ekind:\u003c/span\u003e \u003cspan class=\"string\"\u003eJob\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"attr\"\u003ename:\u003c/span\u003e \u003cspan class=\"string\"\u003etest\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"attr\"\u003euid:\u003c/span\u003e \u003cspan class=\"string\"\u003e028ecfe8-0ff9-477d-836c-ac5676491a38\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"attr\"\u003espec:\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  \u003cspan class=\"attr\"\u003eminMember:\u003c/span\u003e \u003cspan class=\"number\"\u003e1\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  \u003cspan class=\"attr\"\u003eminResources:\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"attr\"\u003ecpu:\u003c/span\u003e \u003cspan class=\"string\"\u003e\u0026#34;3\u0026#34;\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"attr\"\u003ememory:\u003c/span\u003e \u003cspan class=\"string\"\u003e\u0026#34;2048Mi\u0026#34;\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  \u003cspan class=\"attr\"\u003epriorityClassName:\u003c/span\u003e \u003cspan class=\"string\"\u003ehigh-prority\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  \u003cspan class=\"attr\"\u003equeue:\u003c/span\u003e \u003cspan class=\"string\"\u003edefault\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\u003cp\u003e关键字段\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eminMember\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eminMember表示该podgroup下\u003cstrong\u003e最少\u003c/strong\u003e需要运行的pod或任务数量。如果集群资源不满足miniMember数量任务的运行需求，调度器将不会调度任何一个该podgroup 内的任务。\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003equeue\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003equeue表示该podgroup所属的queue。queue必须提前已创建且状态为open。\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003epriorityClassName\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003epriorityClassName表示该podgroup的优先级，用于调度器为该queue中所有podgroup进行调度时进行排序。\u003cstrong\u003esystem-node-critical\u003c/strong\u003e和\u003cstrong\u003esystem-cluster-critical\u003c/strong\u003e 是2个预留的值，表示最高优先级。不特别指定时，默认使用default优先级或zero优先级。\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eminResources\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eminResources表示运行该podgroup所需要的最少资源。当集群可分配资源不满足minResources时，调度器将不会调度任何一个该podgroup内的任务。\u003c/p\u003e\n\u003ch4 id=\"vcjob\"\u003e\u003ca href=\"#vcjob\" class=\"headerlink\" title=\"vcjob\"\u003e\u003c/a\u003evcjob\u003c/h4\u003e\u003cp\u003eVolcano Job，简称vcjob，是Volcano自定义的Job资源类型。区别于Kubernetes Job，vcjob提供了更多高级功能，如可指定调度器、支持最小运行pod数、 支持task、支持生命周期管理、支持指定队列、支持优先级调度等。Volcano Job更加适用于机器学习、大数据、科学计算等高性能计算场景。\u003c/p\u003e\n\u003cfigure class=\"highlight shell\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e8\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e9\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e10\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e11\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e12\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e13\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e14\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e15\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e16\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e17\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e18\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e19\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e20\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e21\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e22\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e23\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e24\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e25\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e26\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e27\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e28\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e29\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e30\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e31\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e32\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e33\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e34\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e35\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e36\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e37\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e38\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e39\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e40\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e41\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e42\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003eapiVersion: batch.volcano.sh/v1alpha1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003ekind: Job\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003emetadata:\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  name: test-job\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003espec:\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  minAvailable: 3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  schedulerName: volcano\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  priorityClassName: high-priority\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  policies:\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    - event: PodEvicted\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e      action: RestartJob\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  plugins:\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    ssh: []\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    env: []\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    svc: []\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  maxRetry: 5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  queue: default\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  volumes:\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    - mountPath: \u0026#34;/myinput\u0026#34;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    - mountPath: \u0026#34;/myoutput\u0026#34;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e      volumeClaimName: \u0026#34;testvolumeclaimname\u0026#34;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e      volumeClaim:\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        accessModes: [ \u0026#34;ReadWriteOnce\u0026#34; ]\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        storageClassName: \u0026#34;my-storage-class\u0026#34;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        resources:\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e          requests:\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e            storage: 1Gi\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  tasks:\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    - replicas: 6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e      name: \u0026#34;default-nginx\u0026#34;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e      template:\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        metadata:\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e          name: web\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        spec:\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e          containers:\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e            - image: nginx\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e              imagePullPolicy: IfNotPresent\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e              name: nginx\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e              resources:\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e                requests:\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e                  cpu: \u0026#34;1\u0026#34;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e          restartPolicy: OnFailure\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e 关键字段\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eschedulerName\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eschedulerName表示该job的pod所使用的调度器，默认值为volcano，也可指定为default-scheduler。它也是tasks.template.spec.schedulerName的默认值。\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eminAvailable\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eminAvailable表示运行该job所要运行的\u003cstrong\u003e最少\u003c/strong\u003epod数量。只有当job中处于running状态的pod数量不小于minAvailable时，才认为该job运行正常。\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003evolumes\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003evolumes表示该job的挂卷配置。volumes配置遵从kubernetes volumes配置要求。\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003etasks.replicas\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003etasks.replicas表示某个task pod的副本数。\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003etasks.template\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003etasks.template表示某个task pod的具体配置定义。\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003etasks.policies\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003etasks.policies表示某个task的生命周期策略。\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003epolicies\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003epolicies表示job中所有task的默认生命周期策略，在tasks.policies不配置时使用该策略。\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eplugins\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eplugins表示该job在调度过程中使用的插件。\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003equeue\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003equeue表示该job所属的队列。\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003epriorityClassName\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003epriorityClassName表示该job优先级，在抢占调度和优先级排序中生效。\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003emaxRetry\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003emaxRetry表示当该job可以进行的最大重启次数\u003c/p\u003e\n\u003ch3 id=\"工作流\"\u003e\u003ca href=\"#工作流\" class=\"headerlink\" title=\"工作流\"\u003e\u003c/a\u003e工作流\u003c/h3\u003e\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/zhoushuke/BlogPhoto/master/githuboss/20231007170305.png\"/\u003e\u003c/p\u003e\n\u003ch3 id=\"状态转换\"\u003e\u003ca href=\"#状态转换\" class=\"headerlink\" title=\"状态转换\"\u003e\u003c/a\u003e状态转换\u003c/h3\u003e\u003cp\u003e这里列一下podgroup对象的状态转换, 只有理解了这个状态转换后才能对生产上出现的意料之外的问题进行快速排查,在后文中也会多次出现这个转换过程\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/zhoushuke/BlogPhoto/master/githuboss/20231007170553.png\"/\u003e\u003c/p\u003e\n\u003cp\u003e本节大体介绍了volcano中比较重要的一些名词概念，volcano支持的东西比较多，所以不同的配置可能会产生截然不同的效果，接下来会结合生产情况来说明这些action/plugin是如何协调工作的以及在哪些场景下怎么配置效果最佳\u003c/p\u003e\n\u003ch3 id=\"参考文章\"\u003e\u003ca href=\"#参考文章\" class=\"headerlink\" title=\"参考文章:\"\u003e\u003c/a\u003e\u003cstrong\u003e参考文章:\u003c/strong\u003e\u003c/h3\u003e\u003cblockquote\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca target=\"_blank\" rel=\"noopener\" href=\"https://volcano.sh/\"\u003ehttps://volcano.sh\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca target=\"_blank\" rel=\"noopener\" href=\"https://izsk.me/2023/08/31/volcano-introduction/\"\u003ehttps://izsk.me/2023/08/31/volcano-introduction/\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca target=\"_blank\" rel=\"noopener\" href=\"https://qiankunli.github.io/2021/09/30/volcano.html\"\u003ehttps://qiankunli.github.io/2021/09/30/volcano.html\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca target=\"_blank\" rel=\"noopener\" href=\"https://zhuanlan.zhihu.com/p/349695188\"\u003ehttps://zhuanlan.zhihu.com/p/349695188\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca target=\"_blank\" rel=\"noopener\" href=\"http://yost.top/2020/08/04/volcano-code-review\"\u003ehttp://yost.top/2020/08/04/volcano-code-review\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/blockquote\u003e\n\u003ch3 id=\"转载请注明原作者-周淑科-https-izsk-me\"\u003e\u003ca href=\"#转载请注明原作者-周淑科-https-izsk-me\" class=\"headerlink\" title=\"转载请注明原作者: 周淑科(https://izsk.me)\"\u003e\u003c/a\u003e\u003cstrong\u003e转载请注明原作者: 周淑科(\u003ca target=\"_blank\" rel=\"noopener\" href=\"https://izsk.me/\"\u003ehttps://izsk.me\u003c/a\u003e)\u003c/strong\u003e\u003c/h3\u003e\n      \n    \u003c/div\u003e",
  "Date": "2023-11-12T22:30:53+08:00",
  "Author": "Z.S.K."
}