{
  "Source": "izsk.me",
  "Title": "pyinstaller打包Flask(-)",
  "Link": "https://izsk.me/2017/08/20/pyinstaller%E6%89%93%E5%8C%85Flask(-)/",
  "Content": "\u003cdiv class=\"post-body\" itemprop=\"articleBody\"\u003e\n\n      \n      \n\n      \n        \u003cp\u003e每当写完一个脚本工具之后,我们常常被要求需要对客户友好一键式,能有多傻瓜式就多傻瓜式,更别去说给客户机器装些乱七八糟的运行环境,python的打包工具也很好几种,pyinstaller做为python程序打包成windows下的exe,还是非常给力的,当然,还有其它的一些比较好的作用于python打包工具,本人我只用过pyinstaller,对其它的不好评价,这里主要记录下pyinstaller在windows下对python程序打包,总之一句话:\u003cstrong\u003epyinstaller会把代码中所有涉及到有包或者库都抽离出来,exe运行的前再全部解压到一个目录下\u003c/strong\u003e\u003c/p\u003e\n\u003cspan id=\"more\"\u003e\u003c/span\u003e\n\n\u003ch3 id=\"pyinstaller的安装\"\u003e\u003ca href=\"#pyinstaller的安装\" class=\"headerlink\" title=\"pyinstaller的安装\"\u003e\u003c/a\u003e\u003cstrong\u003epyinstaller的安装\u003c/strong\u003e\u003c/h3\u003e\u003cp\u003e在windows下,pyinstaller需要PyWin32的支持,当用pip安装pyinstaller时未找到PyWin32,会自动安装pypiwin32.\u003c/p\u003e\n\u003cp\u003epyinstaller的\u003ca target=\"_blank\" rel=\"noopener\" href=\"http://www.pyinstaller.org/\"\u003e官网\u003c/a\u003e其实有非常详细的步骤,最新版为pyinstaller-3.2.1\u003c/p\u003e\n\u003cfigure class=\"highlight python\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"comment\"\u003e##使用pip安装\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003epip install pyinstaller\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003ch3 id=\"pyinstaller常用选项\"\u003e\u003ca href=\"#pyinstaller常用选项\" class=\"headerlink\" title=\"pyinstaller常用选项\"\u003e\u003c/a\u003e\u003cstrong\u003epyinstaller常用选项\u003c/strong\u003e\u003c/h3\u003e\u003cp\u003epyinstaller安装好之后,便可以用来打包了,最常用的打包命令:\u003c/p\u003e\n\u003cfigure class=\"highlight python\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e8\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e9\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e10\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e11\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e12\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"comment\"\u003e#将所有文件打包成一个exe\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003epyinstaller -F name.exe\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"comment\"\u003e#将所有文件打包在一个文件夹里,这是默认的打包方式\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003epyinstaller -D \t/path/to/go\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"comment\"\u003e#指定icon\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003epyinstaller -F name.exe -i name.icon\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"comment\"\u003e#指定python程序中依赖的包文件\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003epyinstaller -p /path/to/go\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"comment\"\u003e#使用控制台界面,只在windows下有效,默认是不使用\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003epyinstaller -c ...\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"comment\"\u003e#使用--add-data\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003epyinstaller --add-data /src/path/:/dest/path\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003ch4 id=\"使用-SPEC文件\"\u003e\u003ca href=\"#使用-SPEC文件\" class=\"headerlink\" title=\"使用.SPEC文件\"\u003e\u003c/a\u003e\u003cstrong\u003e使用.SPEC文件\u003c/strong\u003e\u003c/h4\u003e\u003cp\u003e我们可以直接把命令写在一个叫.spec的文件中,这样就不用每次都写那么一长串命令,直接使用\u003c/p\u003e\n\u003cfigure class=\"highlight python\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"comment\"\u003e#使用.spec文件\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003epyinstaller name.spec\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e.spec文件的内容格式如下:\u003c/p\u003e\n\u003cfigure class=\"highlight python\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e8\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e9\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e10\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e11\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e12\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e13\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e14\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e15\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e16\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e17\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e18\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e19\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e20\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e21\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e22\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e23\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e24\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e25\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e26\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e27\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e28\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e29\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e30\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e31\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e32\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"comment\"\u003e# -*- mode: python -*-\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eblock_cipher = \u003cspan class=\"literal\"\u003eNone\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eadded_files = [\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e         (\u003cspan class=\"string\"\u003e\u0026#39;.\\\\templates\u0026#39;\u003c/span\u003e, \u003cspan class=\"string\"\u003e\u0026#39;templates\u0026#39;\u003c/span\u003e),\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e         (\u003cspan class=\"string\"\u003e\u0026#39;.\\\\static\u0026#39;\u003c/span\u003e, \u003cspan class=\"string\"\u003e\u0026#39;static\u0026#39;\u003c/span\u003e)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e         ]\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003ea = Analysis([\u003cspan class=\"string\"\u003e\u0026#39;chartson.py\u0026#39;\u003c/span\u003e],\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e             pathex=[\u003cspan class=\"string\"\u003e\u0026#39;D:\\\\chartson\u0026#39;\u003c/span\u003e],\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e             hiddenimports=[],\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e             binaries=[],\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e             datas=added_files,\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e             hookspath=[],\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e             runtime_hooks=[],\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e             excludes=[],\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e             win_no_prefer_redirects=\u003cspan class=\"literal\"\u003eFalse\u003c/span\u003e,\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e             win_private_assemblies=\u003cspan class=\"literal\"\u003eFalse\u003c/span\u003e,\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e             cipher=block_cipher)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003epyz = PYZ(a.pure, a.zipped_data,\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e             cipher=block_cipher)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eexe = EXE(pyz,\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e          a.scripts,\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e          a.binaries,\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e          a.zipfiles,\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e          a.datas,\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e          name=\u003cspan class=\"string\"\u003e\u0026#39;chartson\u0026#39;\u003c/span\u003e,\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e          debug=\u003cspan class=\"literal\"\u003eFalse\u003c/span\u003e,\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e          strip=\u003cspan class=\"literal\"\u003eFalse\u003c/span\u003e,\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e          upx=\u003cspan class=\"literal\"\u003eTrue\u003c/span\u003e,\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e          console=\u003cspan class=\"literal\"\u003eTrue\u003c/span\u003e , icon=\u003cspan class=\"string\"\u003e\u0026#39;chartson.ico\u0026#39;\u003c/span\u003e)\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003ch4 id=\"spec中的datas选项\"\u003e\u003ca href=\"#spec中的datas选项\" class=\"headerlink\" title=\"spec中的datas选项\"\u003e\u003c/a\u003e\u003cstrong\u003espec中的datas选项\u003c/strong\u003e\u003c/h4\u003e\u003cp\u003e上面的命令中有个很重要的选项: \u003cstrong\u003edatas\u003c/strong\u003e,我们知道,在flask架构中,我们常用的项目结构一般都包含有\u003cstrong\u003estatic\u003c/strong\u003e,用来存放一些引用的js,css文件等,\u003cstrong\u003etemplate\u003c/strong\u003e中则用来存放模板文件,这些文件夹都是在flask代码之外,flask在运行的时候是需要去找这些文件夹里的文件,那么在用pyinstaller打包时如何把这些额外文件夹一同打包进去呢,换一句话说:\u003cstrong\u003e如何把我们在项目中引用的其它非二进制文件跟python程序打包在一个exe中\u003c/strong\u003e,这就是datas需要做的\u003c/p\u003e\n\u003cp\u003e而在Flask的app.py中,app的声明应该如下:\u003c/p\u003e\n\u003cfigure class=\"highlight python\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"keyword\"\u003eif\u003c/span\u003e \u003cspan class=\"built_in\"\u003egetattr\u003c/span\u003e(sys, \u003cspan class=\"string\"\u003e\u0026#39;frozen\u0026#39;\u003c/span\u003e, \u003cspan class=\"literal\"\u003eFalse\u003c/span\u003e):\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    template_folder = os.path.join(sys._MEIPASS, \u003cspan class=\"string\"\u003e\u0026#39;templates\u0026#39;\u003c/span\u003e)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    static_folder = os.path.join(sys._MEIPASS, \u003cspan class=\"string\"\u003e\u0026#39;static\u0026#39;\u003c/span\u003e)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    app = Flask(__name__, template_folder=template_folder,static_folder=static_folder)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"keyword\"\u003eelse\u003c/span\u003e:\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    app = Flask(__name__)\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e上面的added_files(这个名字可随意,只要跟Analysis中的datas配对即可)中指定了templates指向的当前目录下的templates,而且if/else保证了即使是单独使用python app.py运行项目也能跑起来\u003c/p\u003e\n\u003cp\u003eexe解压路径如果没有指定的话默认是在C:\\Users***\\AppData\\Roaming\\pyinstaller\\下,在这目录下,你能看到很多pyd文件,当然这些都是被编译过的了,还有很多项目中import的库跟windows下的dll.\u003c/p\u003e\n\u003ch3 id=\"参考文章\"\u003e\u003ca href=\"#参考文章\" class=\"headerlink\" title=\"参考文章:\"\u003e\u003c/a\u003e\u003cstrong\u003e参考文章:\u003c/strong\u003e\u003c/h3\u003e\u003cblockquote\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca target=\"_blank\" rel=\"noopener\" href=\"https://pyinstaller.readthedocs.io/en/stable/usage.html\"\u003epyinstaller官网\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/blockquote\u003e\n\u003ch3 id=\"转载请注明原作者-周淑科-https-izsk-me\"\u003e\u003ca href=\"#转载请注明原作者-周淑科-https-izsk-me\" class=\"headerlink\" title=\"转载请注明原作者: 周淑科(https://izsk.me)\"\u003e\u003c/a\u003e\u003cstrong\u003e转载请注明原作者: 周淑科(\u003ca target=\"_blank\" rel=\"noopener\" href=\"https://izsk.me/\"\u003ehttps://izsk.me\u003c/a\u003e)\u003c/strong\u003e\u003c/h3\u003e\u003chr/\u003e\n\n      \n    \u003c/div\u003e",
  "Date": "2017-08-20T17:50:53+08:00",
  "Author": "Z.S.K."
}