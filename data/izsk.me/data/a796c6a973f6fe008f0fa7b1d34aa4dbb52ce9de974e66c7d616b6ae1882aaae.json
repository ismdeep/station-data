{
  "Source": "izsk.me",
  "Title": "Kubernetes学习(排查访问service时提示Connection refused)",
  "Link": "https://izsk.me/2020/05/06/Kubernetes-svc-ep-port-name/",
  "Content": "\u003cdiv class=\"post-body\" itemprop=\"articleBody\"\u003e\n\n      \n      \n\n      \n        \u003cp\u003e今天排查一个在kubernetes集群中访问svc时出现的\u003ccode\u003eConnection refused\u003c/code\u003e的问题，比较奇怪\u003c/p\u003e\n\u003cspan id=\"more\"\u003e\u003c/span\u003e\n\n\n\n\u003ch3 id=\"现象\"\u003e\u003ca href=\"#现象\" class=\"headerlink\" title=\"现象\"\u003e\u003c/a\u003e现象\u003c/h3\u003e\u003cp\u003e背景是: 由于项目关系，需要从一个k8s环境中把yaml文件导入到一个全新的k8s环境, 导入之后发现有些service在应用间访问不通\u003c/p\u003e\n\u003cfigure class=\"highlight bash\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003etelnet mongodb-mst.external 27017\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eTrying 10.97.135.242...\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003etelnet: Unable to connect to remote host: Connection refused\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\n\n\u003ch3 id=\"排查\"\u003e\u003ca href=\"#排查\" class=\"headerlink\" title=\"排查\"\u003e\u003c/a\u003e排查\u003c/h3\u003e\u003cp\u003e首先排除了域名、端口的配置问题。\u003c/p\u003e\n\u003cp\u003e可以确定的是集群内的DNS是正常的.\u003c/p\u003e\n\u003cp\u003e提示连接拒绝那么就是通过clusterIP无法到达realserver. 查看iptables规则\u003c/p\u003e\n\u003cp\u003e发现提示\u003ccode\u003edefault has no endpoints --reject-with icmp-port-unreachable\u003c/code\u003e\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/zhoushuke/BlogPhoto/master/githuboss/20200506115705.png\"/\u003e\u003c/p\u003e\n\u003cp\u003e很奇怪, 提示没有endpoints, 但是使用\u003ccode\u003ekubectl get ep\u003c/code\u003e又能看到ep存在且配置没有问题\u003c/p\u003e\n\u003cp\u003e而且这个default是怎么来的.\u003c/p\u003e\n\u003cp\u003e为了方便部署, 很多配置是从别的环境导出的配置, 有些service访问是没问题的, 只有少部分\u003ccode\u003econnection refused\u003c/code\u003e\u003c/p\u003e\n\u003cp\u003e结比一下发现一个很有趣的问题，先来看下不正常的yaml文件:\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/zhoushuke/BlogPhoto/master/githuboss/20200506115805.png\"/\u003e\u003c/p\u003e\n\u003cp\u003e由于服务在集群外部署的, 因此这里使用了subset方式, 开始怀疑问题在这里, 但是后来知道这个不是重点\u003c/p\u003e\n\u003cp\u003e乍一看这个配置没什么问题, 部署也很正常, 但是对比正常的yaml文件，发现一个区别：\u003c/p\u003e\n\u003cp\u003e如果在services中的端口指定了名字, 那么在subsets中的端口也要带名字, 没有带名字的就会出现\u003ccode\u003econnection refused\u003c/code\u003e，这个确实之前从来没有关注过, 一个端口的情况下也不会指定名字\u003c/p\u003e\n\u003cp\u003e而且这面iptalbes中提示的default刚好就是这里的port name,虽然不敢相信，但是也只能试一试这个方法: 在subsets中也加了port name\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/zhoushuke/BlogPhoto/master/githuboss/20200506120151.png\"/\u003e\u003c/p\u003e\n\u003cp\u003e重新部署一个，再次查看iptalbes规则 \u003c/p\u003e\n\u003cp\u003e\u003ccode\u003eiptables-save|grep mongodb-mst\u003c/code\u003e\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/zhoushuke/BlogPhoto/master/githuboss/20200506120040.png\"/\u003e\u003c/p\u003e\n\u003cp\u003eOMG, 居然可行, 再看下telnet的结果:\u003c/p\u003e\n\u003cfigure class=\"highlight bash\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003eTrying 10.105.116.92...\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eConnected to mongodb-mst.external.svc.cluster.local.\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eEscape character is \u003cspan class=\"string\"\u003e\u0026#39;^]\u0026#39;\u003c/span\u003e.\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e访问也是没问题, \u003c/p\u003e\n\u003ch3 id=\"结果\"\u003e\u003ca href=\"#结果\" class=\"headerlink\" title=\"结果\"\u003e\u003c/a\u003e结果\u003c/h3\u003e\u003cp\u003e那么结果很明显了:\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003e在service中指定了port name时, 也需要在ep中指定同样的port name\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003e这是为什么呢?\u003c/p\u003e\n\u003cp\u003e查看\u003ca target=\"_blank\" rel=\"noopener\" href=\"https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.15/#serviceport-v1-core\"\u003e文档\u003c/a\u003e\u003c/p\u003e\n\u003cfigure class=\"highlight bash\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"comment\"\u003e# ServicePort v1 core\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eThe name of this port within the service. This must be a DNS_LABEL. All ports within a ServiceSpec must have unique names. This maps to the \u003cspan class=\"string\"\u003e\u0026#39;Name\u0026#39;\u003c/span\u003e field \u003cspan class=\"keyword\"\u003ein\u003c/span\u003e EndpointPort objects. Optional \u003cspan class=\"keyword\"\u003eif\u003c/span\u003e only one ServicePort is defined on this service\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e提到了在不止一个端口时， svc的port name 需要与endpointport name保持一致.\u003c/p\u003e\n\u003cp\u003e源码里也会对比端口名字.\u003c/p\u003e\n\u003cfigure class=\"highlight go\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e8\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e9\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e10\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e11\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e12\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e13\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e14\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e15\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e16\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e17\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e18\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e19\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e20\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e21\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e22\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e23\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e24\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e25\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e26\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e27\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"function\"\u003e\u003cspan class=\"keyword\"\u003efunc\u003c/span\u003e \u003cspan class=\"params\"\u003e(cache *EndpointSliceCache)\u003c/span\u003e\u003c/span\u003e endpointInfoByServicePort(serviceNN types.NamespacedName, sliceInfoByName endpointSliceInfoByName) spToEndpointMap {\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\tendpointInfoBySP := spToEndpointMap{}\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\t\u003cspan class=\"keyword\"\u003efor\u003c/span\u003e _, sliceInfo := \u003cspan class=\"keyword\"\u003erange\u003c/span\u003e sliceInfoByName {\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\t\t\u003cspan class=\"keyword\"\u003efor\u003c/span\u003e _, port := \u003cspan class=\"keyword\"\u003erange\u003c/span\u003e sliceInfo.Ports {\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\t\t\t\u003cspan class=\"keyword\"\u003eif\u003c/span\u003e port.Name == \u003cspan class=\"literal\"\u003enil\u003c/span\u003e {\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\t\t\t\tklog.Warningf(\u003cspan class=\"string\"\u003e\u0026#34;ignoring port with nil name %v\u0026#34;\u003c/span\u003e, port)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\t\t\t\t\u003cspan class=\"keyword\"\u003econtinue\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\t\t\t}\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\t\t\t\u003cspan class=\"comment\"\u003e// \u003cspan class=\"doctag\"\u003eTODO:\u003c/span\u003e handle nil ports to mean \u0026#34;all\u0026#34;\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\t\t\t\u003cspan class=\"keyword\"\u003eif\u003c/span\u003e port.Port == \u003cspan class=\"literal\"\u003enil\u003c/span\u003e || *port.Port == \u003cspan class=\"type\"\u003eint32\u003c/span\u003e(\u003cspan class=\"number\"\u003e0\u003c/span\u003e) {\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\t\t\t\tklog.Warningf(\u003cspan class=\"string\"\u003e\u0026#34;ignoring invalid endpoint port %s\u0026#34;\u003c/span\u003e, *port.Name)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\t\t\t\t\u003cspan class=\"keyword\"\u003econtinue\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\t\t\t}\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\t\t\tsvcPortName := ServicePortName{\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\t\t\t\tNamespacedName: serviceNN,\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\t\t\t\tPort:           *port.Name,\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\t\t\t\tProtocol:       *port.Protocol,\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\t\t\t}\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\t\t\tendpointInfoBySP[svcPortName] = cache.addEndpointsByIP(serviceNN, \u003cspan class=\"type\"\u003eint\u003c/span\u003e(*port.Port), endpointInfoBySP[svcPortName], sliceInfo.Endpoints)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\t\t}\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\t}\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\t\u003cspan class=\"keyword\"\u003ereturn\u003c/span\u003e endpointInfoBySP\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e}\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e主要是这个端口的名称平时也不怎么在意, 没想到有坑\u003c/p\u003e\n\u003ch3 id=\"参考文章\"\u003e\u003ca href=\"#参考文章\" class=\"headerlink\" title=\"参考文章:\"\u003e\u003c/a\u003e\u003cstrong\u003e参考文章:\u003c/strong\u003e\u003c/h3\u003e\u003cblockquote\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca target=\"_blank\" rel=\"noopener\" href=\"https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.15/#serviceport-v1-core\"\u003ehttps://kubernetes.io/docs/reference/generated/kubernetes-api/v1.15/#serviceport-v1-core\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca target=\"_blank\" rel=\"noopener\" href=\"https://kubernetes.io/\"\u003ehttps://kubernetes.io/\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/blockquote\u003e\n\u003ch3 id=\"转载请注明原作者-周淑科-https-izsk-me\"\u003e\u003ca href=\"#转载请注明原作者-周淑科-https-izsk-me\" class=\"headerlink\" title=\"转载请注明原作者: 周淑科(https://izsk.me)\"\u003e\u003c/a\u003e\u003cstrong\u003e转载请注明原作者: 周淑科(\u003ca target=\"_blank\" rel=\"noopener\" href=\"https://izsk.me/\"\u003ehttps://izsk.me\u003c/a\u003e)\u003c/strong\u003e\u003c/h3\u003e\n      \n    \u003c/div\u003e",
  "Date": "2020-05-06T17:10:53+08:00",
  "Author": "Z.S.K."
}