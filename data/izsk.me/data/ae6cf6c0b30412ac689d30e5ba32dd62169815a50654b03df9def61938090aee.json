{
  "Source": "izsk.me",
  "Title": "cilium在kubernetes中的生产实践六(cilium排错指南)之api-rate-limit",
  "Link": "https://izsk.me/2024/08/10/cilium-on-kubernetes-errors-apiratelimit/",
  "Content": "\u003cdiv class=\"post-body\" itemprop=\"articleBody\"\u003e\n\n      \n      \n\n      \n        \u003cp\u003e在前东家的时候其实就有意将cilium强大的链路追踪能力集成到生产环境中,各种因素导致没有很大信心落地, 经过深入调研(也就把官网docs翻了四五遍)及测试, 终于有机会在生产kubernetes集群中(目前一个集群规模不算很大,2w+核心,持续增长)使用cilium做为cni,同时替换kube-proxy, 到现在已经有一段时间了，也算是有生产经验可以跟大家聊一聊这个工具，使用体验总结一句话: 轻松愉悦.\u003cbr/\u003e分享一下整个落地过程,同时也总结下方方面面, 工作之余尽量更新.\u003cbr/\u003e此篇归属于: cilium在kubernetes中的生产实践六(cilium排错指南)\u003c/p\u003e\n\u003cspan id=\"more\"\u003e\u003c/span\u003e\n\n\u003cp\u003e总体分为以下几块内容:\u003cbr/\u003e\u003ca target=\"_blank\" rel=\"noopener\" href=\"https://izsk.me/2023/04/01/cilium-on-kubernetes-introduction/\"\u003ecilium在kubernetes中的生产实践一(cilium介绍)\u003c/a\u003e\u003cbr/\u003e\u003ca target=\"_blank\" rel=\"noopener\" href=\"https://izsk.me/2023/06/03/cilium-on-kubernetes-install/\"\u003ecilium在kubernetes中的生产实践二(cilium部署)\u003c/a\u003e\u003cbr/\u003e\u003ca target=\"_blank\" rel=\"noopener\" href=\"https://izsk.me/2023/09/26/cilium-on-kubernetes-network-models-config/\"\u003ecilium在kubernetes中的生产实践三(cilium网络模型之关键配置)\u003c/a\u003e\u003cbr/\u003ecilium在kubernetes中的生产实践四(cilium网络模型之生产实践)\u003cbr/\u003ecilium在kubernetes中的生产实践五(cilium网络策略)\u003cbr/\u003ecilium在kubernetes中的生产实践六(cilium排错指南)\u003cbr/\u003ecilium在kubernetes中的生产实践七(cilium中的bpf hook)\u003c/p\u003e\n\u003ch3 id=\"问题现象\"\u003e\u003ca href=\"#问题现象\" class=\"headerlink\" title=\"问题现象\"\u003e\u003c/a\u003e问题现象\u003c/h3\u003e\u003cp\u003e业务高峰期创建的pod数可能上万+, 某天就出现了在大量pod创建失败的情况, 这些pod处于\u003ccode\u003eContainerCreating\u003c/code\u003e状态, 第一感觉以为是节点上运行的pod数超过指定的max-pods(默认pod数最大110)导致的失败,简单排查后发现不是, 找到这类pod所在的节点, 发现kubelet有类似如下日志:\u003c/p\u003e\n\u003cfigure class=\"highlight bash\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003eRunPodSandbox from runtime service failed: rpc error: code = Unknown desc = failed to \u003cspan class=\"built_in\"\u003eset\u003c/span\u003e up sandbox container \u003cspan class=\"string\"\u003e\u0026#34;a89f1f10c0655325f909ba937ce1b5d8db70fbc0a9fa67daed62dca3de5a8f73\u0026#34;\u003c/span\u003e network \u003cspan class=\"keyword\"\u003efor\u003c/span\u003e pod \u003cspan class=\"string\"\u003e\u0026#34;es-white-list-cronjob-1616127480-nbczk\u0026#34;\u003c/span\u003e: networkPlugin cni failed to \u003cspan class=\"built_in\"\u003eset\u003c/span\u003e up pod \u003cspan class=\"string\"\u003e\u0026#34;es-white-list-cronjob-1616127480-nbczk_caibin1\u0026#34;\u003c/span\u003e network: Unable to create endpoint: response status code does not match any response statuses defined \u003cspan class=\"keyword\"\u003efor\u003c/span\u003e this endpoint \u003cspan class=\"keyword\"\u003ein\u003c/span\u003e the swagger spec (status 429): {}\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003ch3 id=\"问题排查\"\u003e\u003ca href=\"#问题排查\" class=\"headerlink\" title=\"问题排查\"\u003e\u003c/a\u003e问题排查\u003c/h3\u003e\u003cp\u003e从上述日志看有几个关键字: \u003ccode\u003enetworkPlugin cni\u003c/code\u003e, ‘create endpoint (status 429)’.\u003cbr/\u003e很显然, kubelet反应的这个报错是cni返回的, 而集群中的cni为\u003ccode\u003ecilium\u003c/code\u003e\u003cbr/\u003e所以查看节点上的cilium agent ds, 发现有如下报错:\u003c/p\u003e\n\u003cfigure class=\"highlight bash\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003elevel=warning msg=\u003cspan class=\"string\"\u003e\u0026#34;Not processing API request. Wait duration for maximum parallel requests exceeds maximum\u0026#34;\u003c/span\u003e error=\u003cspan class=\"string\"\u003e\u0026#34;context deadline exceeded\u0026#34;\u003c/span\u003e maxWaitDuration=15s name=endpoint-create parallelRequests=3 subsys=rate uuid=efabe2d6-886a-11eb-832b-3cecef001f42\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003elevel=info msg=\u003cspan class=\"string\"\u003e\u0026#34;API call has been processed\u0026#34;\u003c/span\u003e error=\u003cspan class=\"string\"\u003e\u0026#34;timed out while waiting to be served with 3 parallel requests: context deadline exceeded\u0026#34;\u003c/span\u003e name=endpoint-create processingDuration=0s subsys=rate totalDuration=15.000634348s uuid=efabe2d6-886a-11eb-832b-3cecef001f42 waitDurationTotal=0s\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003elevel=info msg=\u003cspan class=\"string\"\u003e\u0026#34;API call has been processed\u0026#34;\u003c/span\u003e error=\u003cspan class=\"string\"\u003e\u0026#34;request would have to wait 18.736302926s to be served (maximum wait duration: 622.727216ms)\u0026#34;\u003c/span\u003e name=endpoint-create processingDuration=0s subsys=rate totalDuration=16.396271422s uuid=ee181d17-886a-11eb-832b-3cecef001f42 waitDurationTotal=14.377272784s\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003elevel=info msg=\u003cspan class=\"string\"\u003e\u0026#34;API call has been processed\u0026#34;\u003c/span\u003e error=\u003cspan class=\"string\"\u003e\u0026#34;request would have to wait 16.717671024s to be served (maximum wait duration: 18.52909ms)\u0026#34;\u003c/span\u003e name=endpoint-create processingDuration=0s subsys=rate totalDuration=17.000479009s uuid=edbbea7f-886a-11eb-832b-3cecef001f42 waitDurationTotal=14.98147091s\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003elevel=info msg=\u003cspan class=\"string\"\u003e\u0026#34;Processing API request with rate limiter\u0026#34;\u003c/span\u003e maxWaitDuration=15s name=endpoint-create parallelRequests=3 subsys=rate uuid=ee181d17-886a-11eb-832b-3cecef001f42\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003elevel=info msg=\u003cspan class=\"string\"\u003e\u0026#34;regenerating all endpoints\u0026#34;\u003c/span\u003e reason=\u003cspan class=\"string\"\u003e\u0026#34;one or more identities created or deleted\u0026#34;\u003c/span\u003e subsys=endpoint-manager\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e因此可以确认是cilium agent的问题, \u003ccode\u003ecilium的功能是以subsys区分的\u003c/code\u003e, 上述日志中提及\u003ccode\u003esubsys=rate\u003c/code\u003e,\u003cbr/\u003e同时kubelet中还存在\u003ccode\u003eendpoint (status 429)\u003c/code\u003e的报错.\u003cbr/\u003e\u003ccode\u003estatus 429\u003c/code\u003e的一般用于表示\u003ccode\u003e请求太多\u003c/code\u003e,这与\u003ccode\u003esubsys=rate\u003c/code\u003e刚好对应上了\u003cbr/\u003e所以，问题出在cilium的rate配置, 作者对cilium中的rate部分并没有特别的进行配置, 所以直接去\u003ca target=\"_blank\" rel=\"noopener\" href=\"https://docs.cilium.io/en/v1.12/configuration/api-rate-limiting/\"\u003e官方文档\u003c/a\u003e查看:\u003c/p\u003e\n\u003cp\u003e默认的rate配置如下, 这里简单说明:\u003c/p\u003e\n\u003ctable\u003e\n\u003cthead\u003e\n\u003ctr\u003e\n\u003cth\u003eAPI Call\u003c/th\u003e\n\u003cth\u003eLimit\u003c/th\u003e\n\u003cth\u003eBurst\u003c/th\u003e\n\u003cth\u003eMax Parallel\u003c/th\u003e\n\u003cth\u003eMin Parallel\u003c/th\u003e\n\u003cth\u003eMax Wait Duration\u003c/th\u003e\n\u003cth\u003eAuto Adjust\u003c/th\u003e\n\u003cth\u003eEstimated Processing Duration\u003c/th\u003e\n\u003c/tr\u003e\n\u003c/thead\u003e\n\u003ctbody\u003e\u003ctr\u003e\n\u003ctd\u003e\u003ccode\u003ePUT /endpoint/{id}\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003e0.5/s\u003c/td\u003e\n\u003ctd\u003e4\u003c/td\u003e\n\u003ctd\u003e4\u003c/td\u003e\n\u003ctd\u003e\u003c/td\u003e\n\u003ctd\u003e15s\u003c/td\u003e\n\u003ctd\u003eTrue\u003c/td\u003e\n\u003ctd\u003e2s\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003ccode\u003eDELETE /endpoint/{id}\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003e\u003c/td\u003e\n\u003ctd\u003e\u003c/td\u003e\n\u003ctd\u003e4\u003c/td\u003e\n\u003ctd\u003e4\u003c/td\u003e\n\u003ctd\u003e\u003c/td\u003e\n\u003ctd\u003eTrue\u003c/td\u003e\n\u003ctd\u003e200ms\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003ccode\u003eGET /endpoint/{id}/*\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003e4/s\u003c/td\u003e\n\u003ctd\u003e4\u003c/td\u003e\n\u003ctd\u003e4\u003c/td\u003e\n\u003ctd\u003e2\u003c/td\u003e\n\u003ctd\u003e10s\u003c/td\u003e\n\u003ctd\u003eTrue\u003c/td\u003e\n\u003ctd\u003e200ms\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003ccode\u003ePATCH /endpoint/{id}*\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003e0.5/s\u003c/td\u003e\n\u003ctd\u003e4\u003c/td\u003e\n\u003ctd\u003e4\u003c/td\u003e\n\u003ctd\u003e\u003c/td\u003e\n\u003ctd\u003e15s\u003c/td\u003e\n\u003ctd\u003eTrue\u003c/td\u003e\n\u003ctd\u003e1s\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003ccode\u003eGET /endpoint\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003e1/s\u003c/td\u003e\n\u003ctd\u003e4\u003c/td\u003e\n\u003ctd\u003e2\u003c/td\u003e\n\u003ctd\u003e2\u003c/td\u003e\n\u003ctd\u003e\u003c/td\u003e\n\u003ctd\u003eTrue\u003c/td\u003e\n\u003ctd\u003e300ms\u003c/td\u003e\n\u003c/tr\u003e\n\u003c/tbody\u003e\u003c/table\u003e\n\u003cp\u003e还有一张CURD的对应关系表:\u003c/p\u003e\n\u003ctable\u003e\n\u003cthead\u003e\n\u003ctr\u003e\n\u003cth\u003eAPI Call\u003c/th\u003e\n\u003cth\u003eConfig Name\u003c/th\u003e\n\u003c/tr\u003e\n\u003c/thead\u003e\n\u003ctbody\u003e\u003ctr\u003e\n\u003ctd\u003e\u003ccode\u003ePUT /endpoint/{id}\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003e\u003ccode\u003eendpoint-create\u003c/code\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003ccode\u003eDELETE /endpoint/{id}\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003e\u003ccode\u003eendpoint-delete\u003c/code\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003ccode\u003eGET /endpoint/{id}/*\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003e\u003ccode\u003eendpoint-get\u003c/code\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003ccode\u003ePATCH /endpoint/{id}*\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003e\u003ccode\u003eendponit-patch\u003c/code\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003ccode\u003eGET /endpoint\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003e\u003ccode\u003eendpoint-list\u003c/code\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003c/tbody\u003e\u003c/table\u003e\n\u003cp\u003e上述的报错可以跟默认配置对应上,包括\u003ccode\u003eMax Wait Duration\u003c/code\u003e\u003cbr/\u003e然后报错的是\u003ccode\u003ecreate endpoint\u003c/code\u003e出现的429, \u003ccode\u003ecreate endpoint\u003c/code\u003e属于是\u003ccode\u003ePUT endpoint\u003c/code\u003e一类，默认配置表中只有0.5/s且并发数只有4, 相对于作者的场景还是小了一些, 所以需要进行调整\u003c/p\u003e\n\u003ch3 id=\"问题解决\"\u003e\u003ca href=\"#问题解决\" class=\"headerlink\" title=\"问题解决\"\u003e\u003c/a\u003e问题解决\u003c/h3\u003e\u003cp\u003e调整cilium agent中的configamp, 添加如下的配置项\u003c/p\u003e\n\u003cfigure class=\"highlight bash\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003eapi-rate-limit: \u003cspan class=\"string\"\u003e\u0026#34;endpoint-create=rate-limit:8/s,rate-burst:16,parallel-requests:8\u0026#34;\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"comment\"\u003e# rate-limit:8/s 表示每秒允许8个请求\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"comment\"\u003e# rate-burst:16 表示可以突发的请求数\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"comment\"\u003e# parallel-requests 并发请求数\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e然后再重启cilium agent ds后，问题解决\u003c/p\u003e\n\u003ch3 id=\"问题延伸\"\u003e\u003ca href=\"#问题延伸\" class=\"headerlink\" title=\"问题延伸\"\u003e\u003c/a\u003e问题延伸\u003c/h3\u003e\u003cp\u003e有一个问题: 为什么是\u003ccode\u003ecreate endpoint\u003c/code\u003e出现了429而不是其它的比如\u003ccode\u003ecreate pod or create ip\u003c/code\u003e之类的出现问题?\u003cbr/\u003e首先, 一个node上的cni可分配的IP段为一个C段网络，即255个ip地址，node上默认最大的pod数量为110, 当node上的pod数量要超过110时，那么新的pod在kube-scheduler中进行调度时会在pre-schedule阶段将这个node排除掉, 所以可以排除是创建pod或者是获取ip问题.\u003cbr/\u003e每个节点的Cilium代理本质上是事件驱动的。当新的工作负载被调度到节点上时，CNI插件被调用，该节点继而对Cilium代理进行API调用以分配IP地址并创建Cilium端点.\u003c/p\u003e\n\u003ch3 id=\"问题总结\"\u003e\u003ca href=\"#问题总结\" class=\"headerlink\" title=\"问题总结\"\u003e\u003c/a\u003e问题总结\u003c/h3\u003e\u003cp\u003ecilium本身是基于事件驱动的，Cilium agent 执行的工作量在很大程度上取决于它接收外部事件的速率。为了限制Cilium代理消耗的资源, cilium限制了API调用的速率和允许的并行执行数.\u003c/p\u003e\n\u003ch3 id=\"参考文章\"\u003e\u003ca href=\"#参考文章\" class=\"headerlink\" title=\"参考文章:\"\u003e\u003c/a\u003e\u003cstrong\u003e参考文章:\u003c/strong\u003e\u003c/h3\u003e\u003cblockquote\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca target=\"_blank\" rel=\"noopener\" href=\"https://docs.cilium.io/en/v1.12/configuration/api-rate-limiting/\"\u003ehttps://docs.cilium.io/en/v1.12/configuration/api-rate-limiting/\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca target=\"_blank\" rel=\"noopener\" href=\"https://github.com/cilium/cilium/issues/15394\"\u003ehttps://github.com/cilium/cilium/issues/15394\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca target=\"_blank\" rel=\"noopener\" href=\"https://cloud.google.com/kubernetes-engine/distributed-cloud/bare-metal/docs/troubleshooting/networking?hl=zh-cn#dataplane_v2_cilium\"\u003ehttps://cloud.google.com/kubernetes-engine/distributed-cloud/bare-metal/docs/troubleshooting/networking?hl=zh-cn#dataplane_v2_cilium\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca target=\"_blank\" rel=\"noopener\" href=\"https://izsk.me/2023/04/01/cilium-on-kubernetes-introduction/\"\u003ehttps://izsk.me/2023/04/01/cilium-on-kubernetes-introduction/\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca target=\"_blank\" rel=\"noopener\" href=\"https://izsk.me/2023/06/03/cilium-on-kubernetes-install/\"\u003ehttps://izsk.me/2023/06/03/cilium-on-kubernetes-install/\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca target=\"_blank\" rel=\"noopener\" href=\"https://izsk.me/2023/09/26/cilium-on-kubernetes-network-models-config/\"\u003ehttps://izsk.me/2023/09/26/cilium-on-kubernetes-network-models-config/\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/blockquote\u003e\n\u003ch3 id=\"转载请注明原作者-周淑科-https-izsk-me\"\u003e\u003ca href=\"#转载请注明原作者-周淑科-https-izsk-me\" class=\"headerlink\" title=\"转载请注明原作者: 周淑科(https://izsk.me)\"\u003e\u003c/a\u003e\u003cstrong\u003e转载请注明原作者: 周淑科(\u003ca target=\"_blank\" rel=\"noopener\" href=\"https://izsk.me/\"\u003ehttps://izsk.me\u003c/a\u003e)\u003c/strong\u003e\u003c/h3\u003e\n      \n    \u003c/div\u003e",
  "Date": "2024-08-10T14:30:53+08:00",
  "Author": "Z.S.K."
}