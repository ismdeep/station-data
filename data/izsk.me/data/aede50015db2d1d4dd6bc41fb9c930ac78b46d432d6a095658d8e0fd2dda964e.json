{
  "Source": "izsk.me",
  "Title": "python定时框架APScheduler使用(-)",
  "Link": "https://izsk.me/2017/09/27/python%E5%AE%9A%E6%97%B6%E6%A1%86%E6%9E%B6APScheduler(%E4%B8%80)/",
  "Content": "\u003cdiv class=\"post-body\" itemprop=\"articleBody\"\u003e\n\n      \n      \n\n      \n        \u003cp\u003e日常工作中经常要使用定时任务来处理一些统计,也常用time.sleep()配合多进程/多线程来实现,但有时候tim.sleep()就有点局限了,比如在flask中引用定时工作,apscheduler就大显身手了,而且在flask环境下有集成包–flask-apscheduler,查看源码,非常简单,对apscheduler接口进行了二次封装,屡次不爽\u003c/p\u003e\n\u003cspan id=\"more\"\u003e\u003c/span\u003e\n\n\u003ch3 id=\"APScheduler\"\u003e\u003ca href=\"#APScheduler\" class=\"headerlink\" title=\"APScheduler\"\u003e\u003c/a\u003e\u003cstrong\u003eAPScheduler\u003c/strong\u003e\u003c/h3\u003e\u003cp\u003eAPScheduler基于\u003ca target=\"_blank\" rel=\"noopener\" href=\"http://www.quartz-scheduler.org/\"\u003eQuartz\u003c/a\u003e的一个Python定时任务框架，实现了Quartz的所有功能，使用起来十分方便。提供了基于日期、固定时间间隔以及crontab类型的任务，并且可以持久化任务。基于这些功能，我们可以很方便的实现一个python定时任务系统\u003c/p\u003e\n\u003ch3 id=\"原理\"\u003e\u003ca href=\"#原理\" class=\"headerlink\" title=\"原理\"\u003e\u003c/a\u003e\u003cstrong\u003e原理\u003c/strong\u003e\u003c/h3\u003e\u003cp\u003escheduler的主循环(main_loop),其实就是反复检查是不是有到时需要执行的任务，完成一次检查的函数是_process_jobs, 这个函数做这么几件事：\u003c/p\u003e\n\u003cblockquote\u003e\n\u003col\u003e\n\u003cli\u003e询问自己的每一个jobstore，有没有到期需要执行的任务\u003c/li\u003e\n\u003cli\u003e如果有,计算这些job中每个job需要运行的时间点,如果run_times有多个,会coalesce检查(下面会解释)\u003c/li\u003e\n\u003cli\u003e提交给executor排期运行\u003c/li\u003e\n\u003c/ol\u003e\n\u003c/blockquote\u003e\n\u003ch3 id=\"安装\"\u003e\u003ca href=\"#安装\" class=\"headerlink\" title=\"安装\"\u003e\u003c/a\u003e\u003cstrong\u003e安装\u003c/strong\u003e\u003c/h3\u003e\u003cfigure class=\"highlight python\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003epip3 install apscheduler\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003ch3 id=\"组成\"\u003e\u003ca href=\"#组成\" class=\"headerlink\" title=\"组成\"\u003e\u003c/a\u003e\u003cstrong\u003e组成\u003c/strong\u003e\u003c/h3\u003e\u003cblockquote\u003e\n\u003col\u003e\n\u003cli\u003e调度器(scheduler): 一些配置相关的接口都在调试器中完成,如常用的添加/删除作业等\u003c/li\u003e\n\u003cli\u003e执行器(executor): 负责把具体任务提交到进程中执行,执行完之后会通知调试器\u003c/li\u003e\n\u003cli\u003e触发器(tigger): 某一工作到来时引发的事件,\u003c/li\u003e\n\u003cli\u003e作业存储(jobstore): 默认作业是在内存中被执行的,也可把作业存储到数据库中,保存的时候被序列化,执行时被反序列化,几乎支持所有的常用数据库\u003c/li\u003e\n\u003c/ol\u003e\n\u003c/blockquote\u003e\n\u003ch4 id=\"scheduler\"\u003e\u003ca href=\"#scheduler\" class=\"headerlink\" title=\"scheduler\"\u003e\u003c/a\u003e\u003cstrong\u003escheduler\u003c/strong\u003e\u003c/h4\u003e\u003cp\u003e调度器分为以下几种,可根据不同的使用场景选用不同的调度器:\u003c/p\u003e\n\u003cblockquote\u003e\n\u003col\u003e\n\u003cli\u003eBlockingScheduler: 很明显这是种阻塞型,一般用在没有其它进程运行的场景下\u003c/li\u003e\n\u003cli\u003eBackGroundScheduler: 后台式,也就是单起一个进程/线程运行该任务,不影响主程序\u003c/li\u003e\n\u003cli\u003eASyncIOScheduler:\u003c/li\u003e\n\u003cli\u003eGeventScheduler:\u003c/li\u003e\n\u003cli\u003eTornadoScheduler:\u003c/li\u003e\n\u003cli\u003eTwistedScheduler:\u003c/li\u003e\n\u003cli\u003eQtScheduler:\u003c/li\u003e\n\u003c/ol\u003e\n\u003c/blockquote\u003e\n\u003cp\u003e本人只使用过BlockingScheduler跟BackGroundScheduler,flask-scheduler使用的即为BackGroundScheduler,其它的后续再研究研究\u003c/p\u003e\n\u003cp\u003e选择类型也很简单,初始化时直接实例化:\u003c/p\u003e\n\u003cfigure class=\"highlight python\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"keyword\"\u003efrom\u003c/span\u003e apscheduler.schedulers.background \u003cspan class=\"keyword\"\u003eimport\u003c/span\u003e BackgroundScheduler\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003escheduler = BackgroundScheduler()\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"comment\"\u003e#启动\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003escheduler.start()\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003ch4 id=\"trigger\"\u003e\u003ca href=\"#trigger\" class=\"headerlink\" title=\"trigger\"\u003e\u003c/a\u003e\u003cstrong\u003etrigger\u003c/strong\u003e\u003c/h4\u003e\u003cblockquote\u003e\n\u003col\u003e\n\u003cli\u003ecron: 类linux下的crontab格式,属于定时调度\u003c/li\u003e\n\u003cli\u003einterval:每隔多久调度一次\u003c/li\u003e\n\u003cli\u003edate:一次性调度\u003c/li\u003e\n\u003c/ol\u003e\n\u003c/blockquote\u003e\n\u003cfigure class=\"highlight python\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e8\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e9\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e10\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e11\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e12\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e13\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e14\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e15\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e16\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e17\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e18\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e19\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e20\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e21\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e22\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e23\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e24\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e25\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e26\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e27\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e28\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e29\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e30\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e31\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e32\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e33\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e34\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"comment\"\u003e#1. cron风格\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e(\u003cspan class=\"built_in\"\u003eint\u003c/span\u003e|\u003cspan class=\"built_in\"\u003estr\u003c/span\u003e) 表示参数既可以是\u003cspan class=\"built_in\"\u003eint\u003c/span\u003e类型，也可以是\u003cspan class=\"built_in\"\u003estr\u003c/span\u003e类型\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e(datetime | \u003cspan class=\"built_in\"\u003estr\u003c/span\u003e) 表示参数既可以是datetime类型，也可以是\u003cspan class=\"built_in\"\u003estr\u003c/span\u003e类型\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eyear (\u003cspan class=\"built_in\"\u003eint\u003c/span\u003e|\u003cspan class=\"built_in\"\u003estr\u003c/span\u003e) – \u003cspan class=\"number\"\u003e4\u003c/span\u003e-digit year -（表示四位数的年份，如\u003cspan class=\"number\"\u003e2008\u003c/span\u003e年）\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003emonth (\u003cspan class=\"built_in\"\u003eint\u003c/span\u003e|\u003cspan class=\"built_in\"\u003estr\u003c/span\u003e) – month (\u003cspan class=\"number\"\u003e1\u003c/span\u003e-\u003cspan class=\"number\"\u003e12\u003c/span\u003e) -（表示取值范围为\u003cspan class=\"number\"\u003e1\u003c/span\u003e-\u003cspan class=\"number\"\u003e12\u003c/span\u003e月）\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eday (\u003cspan class=\"built_in\"\u003eint\u003c/span\u003e|\u003cspan class=\"built_in\"\u003estr\u003c/span\u003e) – day of the (\u003cspan class=\"number\"\u003e1\u003c/span\u003e-\u003cspan class=\"number\"\u003e31\u003c/span\u003e) -（表示取值范围为\u003cspan class=\"number\"\u003e1\u003c/span\u003e-\u003cspan class=\"number\"\u003e31\u003c/span\u003e日）\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eweek (\u003cspan class=\"built_in\"\u003eint\u003c/span\u003e|\u003cspan class=\"built_in\"\u003estr\u003c/span\u003e) – ISO week (\u003cspan class=\"number\"\u003e1\u003c/span\u003e-\u003cspan class=\"number\"\u003e53\u003c/span\u003e) -（格里历\u003cspan class=\"number\"\u003e2006\u003c/span\u003e年\u003cspan class=\"number\"\u003e12\u003c/span\u003e月\u003cspan class=\"number\"\u003e31\u003c/span\u003e日可以写成\u003cspan class=\"number\"\u003e2006\u003c/span\u003e年-W52-\u003cspan class=\"number\"\u003e7\u003c/span\u003e（扩展形式）或2006W527（紧凑形式））\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eday_of_week (\u003cspan class=\"built_in\"\u003eint\u003c/span\u003e|\u003cspan class=\"built_in\"\u003estr\u003c/span\u003e) – number \u003cspan class=\"keyword\"\u003eor\u003c/span\u003e name of weekday (\u003cspan class=\"number\"\u003e0\u003c/span\u003e-\u003cspan class=\"number\"\u003e6\u003c/span\u003e \u003cspan class=\"keyword\"\u003eor\u003c/span\u003e mon,tue,wed,thu,fri,sat,sun) - （表示一周中的第几天，既可以用\u003cspan class=\"number\"\u003e0\u003c/span\u003e-\u003cspan class=\"number\"\u003e6\u003c/span\u003e表示也可以用其英语缩写表示）\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003ehour (\u003cspan class=\"built_in\"\u003eint\u003c/span\u003e|\u003cspan class=\"built_in\"\u003estr\u003c/span\u003e) – hour (\u003cspan class=\"number\"\u003e0\u003c/span\u003e-\u003cspan class=\"number\"\u003e23\u003c/span\u003e) - （表示取值范围为\u003cspan class=\"number\"\u003e0\u003c/span\u003e-\u003cspan class=\"number\"\u003e23\u003c/span\u003e时）\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eminute (\u003cspan class=\"built_in\"\u003eint\u003c/span\u003e|\u003cspan class=\"built_in\"\u003estr\u003c/span\u003e) – minute (\u003cspan class=\"number\"\u003e0\u003c/span\u003e-\u003cspan class=\"number\"\u003e59\u003c/span\u003e) - （表示取值范围为\u003cspan class=\"number\"\u003e0\u003c/span\u003e-\u003cspan class=\"number\"\u003e59\u003c/span\u003e分）\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003esecond (\u003cspan class=\"built_in\"\u003eint\u003c/span\u003e|\u003cspan class=\"built_in\"\u003estr\u003c/span\u003e) – second (\u003cspan class=\"number\"\u003e0\u003c/span\u003e-\u003cspan class=\"number\"\u003e59\u003c/span\u003e) - （表示取值范围为\u003cspan class=\"number\"\u003e0\u003c/span\u003e-\u003cspan class=\"number\"\u003e59\u003c/span\u003e秒）\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003estart_date (datetime|\u003cspan class=\"built_in\"\u003estr\u003c/span\u003e) – earliest possible date/time to trigger on (inclusive) - （表示开始时间）\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eend_date (datetime|\u003cspan class=\"built_in\"\u003estr\u003c/span\u003e) – latest possible date/time to trigger on (inclusive) - （表示结束时间）\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003etimezone (datetime.tzinfo|\u003cspan class=\"built_in\"\u003estr\u003c/span\u003e) – time zone to use \u003cspan class=\"keyword\"\u003efor\u003c/span\u003e the date/time calculations (defaults to scheduler timezone) -（表示时区取值）\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"comment\"\u003e#如:在6,7,8,11,12月份的第三个星期五的00:00,01:00,02:00,03:00 执行该程序\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003esched.add_job(my_job, \u003cspan class=\"string\"\u003e\u0026#39;cron\u0026#39;\u003c/span\u003e, month=\u003cspan class=\"string\"\u003e\u0026#39;6-8,11-12\u0026#39;\u003c/span\u003e, day=\u003cspan class=\"string\"\u003e\u0026#39;3rd fri\u0026#39;\u003c/span\u003e, hour=\u003cspan class=\"string\"\u003e\u0026#39;0-3\u0026#39;\u003c/span\u003e)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"comment\"\u003e#2.interval风格\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eweeks (\u003cspan class=\"built_in\"\u003eint\u003c/span\u003e) – number of weeks to wait\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003edays (\u003cspan class=\"built_in\"\u003eint\u003c/span\u003e) – number of days to wait\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003ehours (\u003cspan class=\"built_in\"\u003eint\u003c/span\u003e) – number of hours to wait\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eminutes (\u003cspan class=\"built_in\"\u003eint\u003c/span\u003e) – number of minutes to wait\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eseconds (\u003cspan class=\"built_in\"\u003eint\u003c/span\u003e) – number of seconds to wait\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003estart_date (datetime|\u003cspan class=\"built_in\"\u003estr\u003c/span\u003e) – starting point \u003cspan class=\"keyword\"\u003efor\u003c/span\u003e the interval calculation\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eend_date (datetime|\u003cspan class=\"built_in\"\u003estr\u003c/span\u003e) – latest possible date/time to trigger on\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003etimezone (datetime.tzinfo|\u003cspan class=\"built_in\"\u003estr\u003c/span\u003e) – time zone to use \u003cspan class=\"keyword\"\u003efor\u003c/span\u003e the date/time calculations\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"comment\"\u003e#如:每隔2分钟执行一次\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003escheduler.add_job(myfunc, \u003cspan class=\"string\"\u003e\u0026#39;interval\u0026#39;\u003c/span\u003e, minutes=\u003cspan class=\"number\"\u003e2\u003c/span\u003e)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"comment\"\u003e#3.date风格\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003erun_date (datetime|\u003cspan class=\"built_in\"\u003estr\u003c/span\u003e) – the date/time to run the job at  -（任务开始的时间）\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003etimezone (datetime.tzinfo|\u003cspan class=\"built_in\"\u003estr\u003c/span\u003e) – time zone \u003cspan class=\"keyword\"\u003efor\u003c/span\u003e run_date \u003cspan class=\"keyword\"\u003eif\u003c/span\u003e it doesn’t have one already\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"comment\"\u003e#如:在2009年11月6号16时30分5秒时执行\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003esched.add_job(my_job, \u003cspan class=\"string\"\u003e\u0026#39;date\u0026#39;\u003c/span\u003e, run_date=datetime(\u003cspan class=\"number\"\u003e2009\u003c/span\u003e, \u003cspan class=\"number\"\u003e11\u003c/span\u003e, \u003cspan class=\"number\"\u003e6\u003c/span\u003e, \u003cspan class=\"number\"\u003e16\u003c/span\u003e, \u003cspan class=\"number\"\u003e30\u003c/span\u003e, \u003cspan class=\"number\"\u003e5\u003c/span\u003e), args=[\u003cspan class=\"string\"\u003e\u0026#39;text\u0026#39;\u003c/span\u003e])\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003ch4 id=\"executor\"\u003e\u003ca href=\"#executor\" class=\"headerlink\" title=\"executor\"\u003e\u003c/a\u003e\u003cstrong\u003eexecutor\u003c/strong\u003e\u003c/h4\u003e\u003cp\u003e说白了就是指定任务是以线程池/进程池里运行,这在初始化时可以指定,同时可以指定最大的工作池,默认的为default: ThreadPoolExecutor,max-worker为20,当然也可以指定为processpool,默认max-worker为5\u003c/p\u003e\n\u003ch4 id=\"jobstore\"\u003e\u003ca href=\"#jobstore\" class=\"headerlink\" title=\"jobstore\"\u003e\u003c/a\u003e\u003cstrong\u003ejobstore\u003c/strong\u003e\u003c/h4\u003e\u003cp\u003ejobstore则是指的是job持久化,默认job运行在内存中,可持久化在数据库,指定为mongo的MongoDBJobStore或者是使用sqlite的SQLAlchemyJobStore,同时可指定多种jobstore\u003c/p\u003e\n\u003cfigure class=\"highlight python\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e8\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e9\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e10\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e11\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e12\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e13\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e14\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e15\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e16\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e17\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e18\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"keyword\"\u003efrom\u003c/span\u003e pytz \u003cspan class=\"keyword\"\u003eimport\u003c/span\u003e utc\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"keyword\"\u003efrom\u003c/span\u003e apscheduler.schedulers.background \u003cspan class=\"keyword\"\u003eimport\u003c/span\u003e BackgroundScheduler\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"keyword\"\u003efrom\u003c/span\u003e apscheduler.jobstores.mongodb \u003cspan class=\"keyword\"\u003eimport\u003c/span\u003e MongoDBJobStore\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"keyword\"\u003efrom\u003c/span\u003e apscheduler.jobstores.sqlalchemy \u003cspan class=\"keyword\"\u003eimport\u003c/span\u003e SQLAlchemyJobStore\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"keyword\"\u003efrom\u003c/span\u003e apscheduler.executors.pool \u003cspan class=\"keyword\"\u003eimport\u003c/span\u003e ThreadPoolExecutor, ProcessPoolExecutor\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003ejobstores = {\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"string\"\u003e\u0026#39;mongo\u0026#39;\u003c/span\u003e: MongoDBJobStore(),\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"string\"\u003e\u0026#39;default\u0026#39;\u003c/span\u003e: SQLAlchemyJobStore(url=\u003cspan class=\"string\"\u003e\u0026#39;sqlite:///jobs.sqlite\u0026#39;\u003c/span\u003e)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e}\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eexecutors = {\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"string\"\u003e\u0026#39;default\u0026#39;\u003c/span\u003e: ThreadPoolExecutor(\u003cspan class=\"number\"\u003e20\u003c/span\u003e),\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"string\"\u003e\u0026#39;processpool\u0026#39;\u003c/span\u003e: ProcessPoolExecutor(\u003cspan class=\"number\"\u003e5\u003c/span\u003e)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e}\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003ejob_defaults = {\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"string\"\u003e\u0026#39;coalesce\u0026#39;\u003c/span\u003e: \u003cspan class=\"literal\"\u003eFalse\u003c/span\u003e,\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"string\"\u003e\u0026#39;max_instances\u0026#39;\u003c/span\u003e: \u003cspan class=\"number\"\u003e3\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e}\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003escheduler = BackgroundScheduler(jobstores=jobstores, executors=executors, job_defaults=job_defaults, timezone=utc)\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003ch3 id=\"重要配置\"\u003e\u003ca href=\"#重要配置\" class=\"headerlink\" title=\"重要配置\"\u003e\u003c/a\u003e\u003cstrong\u003e重要配置\u003c/strong\u003e\u003c/h3\u003e\u003cp\u003e有几种参数需要简单说明一下:\u003c/p\u003e\n\u003cblockquote\u003e\n\u003col\u003e\n\u003cli\u003emax_instances: 每个job在同一时刻能够运行的最大实例数,默认情况下为1个,可以指定为更大值,这样即使上个job还没运行完同一个job又被调度的话也能够再开一个线程执行\u003c/li\u003e\n\u003cli\u003ecoalesce:当由于某种原因导致某个job积攒了好几次没有实际运行（比如说系统挂了5分钟后恢复，有一个任务是每分钟跑一次的，按道理说这5分钟内本来是“计划”运行5次的，但实际没有执行），如果coalesce为True，下次这个job被submit给executor时，只会执行1次，也就是最后这次，如果为False，那么会执行5次（不一定，因为还有其他条件，看下面的misfire_grace_time的解释）\u003c/li\u003e\n\u003cli\u003emisfire_grace_time:单位为秒,假设有这么一种情况,当某一job被调度时刚好线程池都被占满,调度器会选择将该job排队不运行,misfire_grace_time参数则是在线程池有可用线程时会比对该job的应调度时间跟当前时间的差值,如果差值\u0026lt;misfire_grace_time时,调度器会再次调度该job.反之该job的执行状态为EVENT_JOB_MISSED了,即错过运行.\u003c/li\u003e\n\u003c/ol\u003e\n\u003c/blockquote\u003e\n\u003ch3 id=\"API\"\u003e\u003ca href=\"#API\" class=\"headerlink\" title=\"API\"\u003e\u003c/a\u003e\u003cstrong\u003eAPI\u003c/strong\u003e\u003c/h3\u003e\u003cp\u003eapscheduler的API非常的简洁,官网的文档也很齐全,\u003c/p\u003e\n\u003cfigure class=\"highlight python\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e8\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e9\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e10\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e11\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e12\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e13\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e14\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e15\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e16\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e17\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"comment\"\u003e#1. 添加/删除 作业\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"comment\"\u003e#参数: id,function,trigger,time\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003ejob = scheduler.add_job(myfunc, \u003cspan class=\"string\"\u003e\u0026#39;interval\u0026#39;\u003c/span\u003e, minutes=\u003cspan class=\"number\"\u003e2\u003c/span\u003e)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003ejob.remove()\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"comment\"\u003e#当然也可以给job指定id\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003ejob = scheduler.add_job(\u003cspan class=\"built_in\"\u003eid\u003c/span\u003e=\u003cspan class=\"string\"\u003e\u0026#39;job1\u0026#39;\u003c/span\u003e,myfunc, \u003cspan class=\"string\"\u003e\u0026#39;interval\u0026#39;\u003c/span\u003e, minutes=\u003cspan class=\"number\"\u003e2\u003c/span\u003e)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003ejob.remove_job(\u003cspan class=\"string\"\u003e\u0026#39;job1\u0026#39;\u003c/span\u003e)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"comment\"\u003e#2.暂停/启用 作业 \u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eapsched.schedulers.base.BaseScheduler.pause_job(\u003cspan class=\"built_in\"\u003eid\u003c/span\u003e)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eapsched.schedulers.base.BaseScheduler.resume_job(\u003cspan class=\"built_in\"\u003eid\u003c/span\u003e)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"comment\"\u003e#3.获取作业列表\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"built_in\"\u003eprint\u003c/span\u003e sched.get_job(\u003cspan class=\"built_in\"\u003eid\u003c/span\u003e)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eprint_jobs(\u003cspan class=\"built_in\"\u003eid\u003c/span\u003e)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"comment\"\u003e#4.修改作业\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003escheduler.reschedule_job(\u003cspan class=\"string\"\u003e\u0026#39;my_job_id\u0026#39;\u003c/span\u003e, trigger=\u003cspan class=\"string\"\u003e\u0026#39;cron\u0026#39;\u003c/span\u003e, minute=\u003cspan class=\"string\"\u003e\u0026#39;*/5\u0026#39;\u003c/span\u003e)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"comment\"\u003e#5.关闭调度器,默认情况下调度器会等所有任务执行完之后才关闭,指定wait=Flase可不等待直接着关闭\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003esched.shutdown(wait=\u003cspan class=\"literal\"\u003eFalse\u003c/span\u003e)\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003ch3 id=\"事件\"\u003e\u003ca href=\"#事件\" class=\"headerlink\" title=\"事件\"\u003e\u003c/a\u003e\u003cstrong\u003e事件\u003c/strong\u003e\u003c/h3\u003e\u003cp\u003e一个很重要的问题就是:我怎么知道任务是执行成功了还是失败还是说压根就没执行,apscheduler提供了很人性化的接口,我们可以给scheduler注册监听事件,在每次任务执行后会记录任务执行状态,这便是scheduler event功能,官方的example很简单:\u003c/p\u003e\n\u003cfigure class=\"highlight python\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"keyword\"\u003edef\u003c/span\u003e \u003cspan class=\"title function_\"\u003emy_listener\u003c/span\u003e(\u003cspan class=\"params\"\u003eevent\u003c/span\u003e):\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"keyword\"\u003eif\u003c/span\u003e event.exception:\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        \u003cspan class=\"built_in\"\u003eprint\u003c/span\u003e(\u003cspan class=\"string\"\u003e\u0026#39;The job crashed\u0026#39;\u003c/span\u003e)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"keyword\"\u003eelse\u003c/span\u003e:\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        \u003cspan class=\"built_in\"\u003eprint\u003c/span\u003e(\u003cspan class=\"string\"\u003e\u0026#39;The job worked\u0026#39;\u003c/span\u003e)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"comment\"\u003e#注册回调函数\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003escheduler.add_listener(my_listener, EVENT_JOB_EXECUTED | EVENT_JOB_ERROR)\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e即当执行job状态变成EVENT_JOB_EXECUTED 或者EVENT_JOB_ERROR即会调用my_listener函数,当然这里的my_listener非常简单,但我们完全可以在这里通过判断event是否发生异常来实现其它一些逻辑,如job执行情况写入数据库,这样就很容易在月报表里统计定时任务执行情况了\u003c/p\u003e\n\u003cp\u003e其中my_listener的event类其实继承了\u003ca target=\"_blank\" rel=\"noopener\" href=\"http://apscheduler.readthedocs.io/en/latest/modules/events.html#module-apscheduler.events\"\u003eclass apscheduler.events.JobExecutionEvent\u003c/a\u003e类,主要有以下属性:\u003c/p\u003e\n\u003cblockquote\u003e\n\u003col\u003e\n\u003cli\u003ecode, 状态码,详见\u003ca target=\"_blank\" rel=\"noopener\" href=\"http://apscheduler.readthedocs.io/en/latest/modules/events.html#module-apscheduler.events\"\u003e这里\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003ejob_id, \u003c/li\u003e\n\u003cli\u003ejobstore,\u003c/li\u003e\n\u003cli\u003escheduled_run_time,计划运行时间\u003c/li\u003e\n\u003cli\u003eretval=None, 执行成功时的返回值\u003c/li\u003e\n\u003cli\u003eexception=None, 是否发生异常,上述代码就是判断了这个值是否为None,正常执行的话这里为None\u003c/li\u003e\n\u003cli\u003etraceback=None\u003c/li\u003e\n\u003c/ol\u003e\n\u003c/blockquote\u003e\n\u003cp\u003e今天就记录到这吧,关于apscheduler的web应用flask-apscheduler,下次再更.\u003c/p\u003e\n\u003ch3 id=\"参考文章\"\u003e\u003ca href=\"#参考文章\" class=\"headerlink\" title=\"参考文章:\"\u003e\u003c/a\u003e\u003cstrong\u003e参考文章:\u003c/strong\u003e\u003c/h3\u003e\u003cblockquote\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca target=\"_blank\" rel=\"noopener\" href=\"http://apscheduler.readthedocs.io/en/latest/\"\u003eAPScheduler\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca target=\"_blank\" rel=\"noopener\" href=\"http://www.cnblogs.com/luxiaojun/p/6567132.html\"\u003e定时任务框架APScheduler学习详解\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/blockquote\u003e\n\u003ch3 id=\"转载请注明原作者-周淑科-https-izsk-me\"\u003e\u003ca href=\"#转载请注明原作者-周淑科-https-izsk-me\" class=\"headerlink\" title=\"转载请注明原作者: 周淑科(https://izsk.me)\"\u003e\u003c/a\u003e\u003cstrong\u003e转载请注明原作者: 周淑科(\u003ca target=\"_blank\" rel=\"noopener\" href=\"https://izsk.me/\"\u003ehttps://izsk.me\u003c/a\u003e)\u003c/strong\u003e\u003c/h3\u003e\u003chr/\u003e\n\n      \n    \u003c/div\u003e",
  "Date": "2017-09-27T18:50:53+08:00",
  "Author": "Z.S.K."
}