{
  "Source": "izsk.me",
  "Title": "argoCD学习(argocd踩坑记)",
  "Link": "https://izsk.me/2021/04/02/argoCD-prombles/",
  "Content": "\u003cdiv class=\"post-body\" itemprop=\"articleBody\"\u003e\n\n      \n      \n\n      \n        \u003cp\u003eargocd配合GitOps，可以实现对kubernetes多集群的应用版本管理，目前已用于我负责的业务环境中实现统一发布平台.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003e在这里记录下使用argocd踩过的坑, 不定期更新\u003c/strong\u003e\u003c/p\u003e\n\u003cspan id=\"more\"\u003e\u003c/span\u003e\n\n\n\n\u003ch3 id=\"UI上出现了不属于某app的资源\"\u003e\u003ca href=\"#UI上出现了不属于某app的资源\" class=\"headerlink\" title=\"UI上出现了不属于某app的资源\"\u003e\u003c/a\u003eUI上出现了不属于某app的资源\u003c/h3\u003e\u003cp\u003e原因: 由于argo controller是根据资源中的annotations里的key(argocd.argoproj.io/instance)来判定这个资源是不是属于某个app,在日常使用的过程，由于团队中使用的是rancher做为容器管理平台，rancher上提供了非常便利的对资源的clone手段，就会产生clone后的资源也会带上相同的annotations，但是在原app下的manifest并不包含这个资源，因此在app下就会出现这个资源且这个资源会被标注为\u003ccode\u003erequire pruning\u003c/code\u003e,那么在每次sync后，这个clone后的资源就会被删除\u003c/p\u003e\n\u003cp\u003e解决: 在clone时将annotations删除掉即可.\u003c/p\u003e\n\u003cp\u003e参考: \u003ca target=\"_blank\" rel=\"noopener\" href=\"https://github.com/argoproj/argo-cd/issues/5792\"\u003ehttps://github.com/argoproj/argo-cd/issues/5792\u003c/a\u003e\u003c/p\u003e\n\u003ch3 id=\"使用用户密码登录时提示\"\u003e\u003ca href=\"#使用用户密码登录时提示\" class=\"headerlink\" title=\"使用用户密码登录时提示\"\u003e\u003c/a\u003e使用用户密码登录时提示\u003c/h3\u003e\u003cfigure class=\"highlight bash\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003eHTTP response body: {\u003cspan class=\"string\"\u003e\u0026#34;error\u0026#34;\u003c/span\u003e:\u003cspan class=\"string\"\u003e\u0026#34;no session information\u0026#34;\u003c/span\u003e,\u003cspan class=\"string\"\u003e\u0026#34;code\u0026#34;\u003c/span\u003e:16,\u003cspan class=\"string\"\u003e\u0026#34;message\u0026#34;\u003c/span\u003e:\u003cspan class=\"string\"\u003e\u0026#34;no session information\u0026#34;\u003c/span\u003e}\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e原因: argocd使用密码认证时会使用密码信息调用/api/session接口生成token信息，然后使用token转换成session， 出现这个错误是由client端没有做这个转换，因此在服务端找不到对应的session信息\u003c/p\u003e\n\u003ch3 id=\"添加集群时提示Unauthenticated-desc-x3D-the-server-has-asked-for-the-client-to-provide-credentials\"\u003e\u003ca href=\"#添加集群时提示Unauthenticated-desc-x3D-the-server-has-asked-for-the-client-to-provide-credentials\" class=\"headerlink\" title=\"添加集群时提示Unauthenticated desc =  the server has asked for the client to provide credentials\"\u003e\u003c/a\u003e添加集群时提示Unauthenticated desc =  the server has asked for the client to provide credentials\u003c/h3\u003e\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/zhoushuke/BlogPhoto/master/githuboss/20210222114258.png\"/\u003e\u003c/p\u003e\n\u003cp\u003e原因及解决方案: \u003ca target=\"_blank\" rel=\"noopener\" href=\"https://gist.github.com/janeczku/b16154194f7f03f772645303af8e9f80\"\u003ehttps://gist.github.com/janeczku/b16154194f7f03f772645303af8e9f80\u003c/a\u003e\u003c/p\u003e\n\u003ch3 id=\"kustomize-build-out-of-index\"\u003e\u003ca href=\"#kustomize-build-out-of-index\" class=\"headerlink\" title=\"kustomize build out of index\"\u003e\u003c/a\u003ekustomize build out of index\u003c/h3\u003e\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/zhoushuke/BlogPhoto/master/githuboss/20210219204446.png\"/\u003e\u003c/p\u003e\n\u003cp\u003e原因: 这个是新版kustomize(v4.0.1)时使用了kyaml的版本的bug, 原因在于kustomizationl.yml中存在非法字符\u003c/p\u003e\n\u003cp\u003e解决: 回退kustomize为v3.6.1\u003c/p\u003e\n\u003ch3 id=\"forbidden-User-“system-anonymouns”-cantnot-get-path\"\u003e\u003ca href=\"#forbidden-User-“system-anonymouns”-cantnot-get-path\" class=\"headerlink\" title=\"forbidden: User “system:anonymouns” cantnot get path\"\u003e\u003c/a\u003eforbidden: User “system:anonymouns” cantnot get path\u003c/h3\u003e\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/zhoushuke/BlogPhoto/master/githuboss/20210119193206.png\"/\u003e\u003c/p\u003e\n\u003cp\u003e解决: 重新使用命令加一下集群解决\u003c/p\u003e\n\u003cfigure class=\"highlight bash\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003ergocd cluster add my-cluster --server \u003cspan class=\"string\"\u003e\u0026#39;xxxx\u0026#39;\u003c/span\u003e --upsert\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\n\n\u003ch3 id=\"login时提示received-the-unexpected-content-type\"\u003e\u003ca href=\"#login时提示received-the-unexpected-content-type\" class=\"headerlink\" title=\"login时提示received the unexpected content-type\"\u003e\u003c/a\u003elogin时提示received the unexpected content-type\u003c/h3\u003e\u003cp\u003e执行login 登录命令时提示:\u003c/p\u003e\n\u003cfigure class=\"highlight bash\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003eargocd login argocd.local:4433\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e出现以下错误\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/zhoushuke/BlogPhoto/master/githuboss/20201106184926.png\"/\u003e\u003c/p\u003e\n\u003cp\u003e原因: \u003c/p\u003e\n\u003cp\u003e参考: \u003ca target=\"_blank\" rel=\"noopener\" href=\"https://github.com/argoproj/argo-cd/issues/1415\"\u003ehttps://github.com/argoproj/argo-cd/issues/1415\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003e解决:\u003c/p\u003e\n\u003cfigure class=\"highlight bash\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003eargocd login argocd.local:4433 --grpc-web\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e如果添加集群的时候提示以下错误，则需要先使用上面的命令进行登录，登录成功后再进行集群的添加操作.\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/zhoushuke/BlogPhoto/master/githuboss/20201106185339.png\"/\u003e\u003c/p\u003e\n\u003ch3 id=\"创建token时提示以下错误-not-have-apikey-capability\"\u003e\u003ca href=\"#创建token时提示以下错误-not-have-apikey-capability\" class=\"headerlink\" title=\"创建token时提示以下错误 not have apikey capability\"\u003e\u003c/a\u003e创建token时提示以下错误 not have apikey capability\u003c/h3\u003e\u003cfigure class=\"highlight bash\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003eUnable to generate new token: account \u003cspan class=\"string\"\u003e\u0026#39;admin\u0026#39;\u003c/span\u003e does not have apiKey capability\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e原因: argocd的用户也是通过角色来进行划分的，创建token的用户需要具有 apiKey的权限，这个可以从argocd部署的configmap中查看使用的用户是否具有什么权限.\u003c/p\u003e\n\u003ch3 id=\"回滚时提示以下错误revision-must-be-resolved\"\u003e\u003ca href=\"#回滚时提示以下错误revision-must-be-resolved\" class=\"headerlink\" title=\"回滚时提示以下错误revision must be resolved\"\u003e\u003c/a\u003e回滚时提示以下错误revision must be resolved\u003c/h3\u003e\u003cfigure class=\"highlight bash\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003eUnable to load data: revision HEAD must be resolved\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/zhoushuke/BlogPhoto/master/githuboss/20201122185428.png\"/\u003e\u003c/p\u003e\n\u003cp\u003e原因: 如果使用argocd命令行的方式同步应用，会导致revision没有commit值，如上图，而回滚时需要revision，因此造成上面的报错.\u003c/p\u003e\n\u003ch3 id=\"未完待续\"\u003e\u003ca href=\"#未完待续\" class=\"headerlink\" title=\"未完待续\"\u003e\u003c/a\u003e未完待续\u003c/h3\u003e\u003ch3 id=\"参考文章\"\u003e\u003ca href=\"#参考文章\" class=\"headerlink\" title=\"参考文章:\"\u003e\u003c/a\u003e\u003cstrong\u003e参考文章:\u003c/strong\u003e\u003c/h3\u003e\u003cblockquote\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca target=\"_blank\" rel=\"noopener\" href=\"https://github.com/argoproj/argo-cd/issues/2802\"\u003ehttps://github.com/argoproj/argo-cd/issues/2802\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca target=\"_blank\" rel=\"noopener\" href=\"https://gist.github.com/janeczku/b16154194f7f03f772645303af8e9f80\"\u003ehttps://gist.github.com/janeczku/b16154194f7f03f772645303af8e9f80\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca target=\"_blank\" rel=\"noopener\" href=\"https://github.com/argoproj/argo-cd/issues/5792\"\u003ehttps://github.com/argoproj/argo-cd/issues/5792\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/blockquote\u003e\n\u003ch3 id=\"转载请注明原作者-周淑科-https-izsk-me\"\u003e\u003ca href=\"#转载请注明原作者-周淑科-https-izsk-me\" class=\"headerlink\" title=\"转载请注明原作者: 周淑科(https://izsk.me)\"\u003e\u003c/a\u003e\u003cstrong\u003e转载请注明原作者: 周淑科(\u003ca target=\"_blank\" rel=\"noopener\" href=\"https://izsk.me/\"\u003ehttps://izsk.me\u003c/a\u003e)\u003c/strong\u003e\u003c/h3\u003e\n      \n    \u003c/div\u003e",
  "Date": "2021-04-02T17:30:53+08:00",
  "Author": "Z.S.K."
}