{
  "Source": "izsk.me",
  "Title": "关于业务监控重试机制",
  "Link": "https://izsk.me/2020/01/19/about-retry/",
  "Content": "\u003cdiv class=\"post-body\" itemprop=\"articleBody\"\u003e\n\n      \n      \n\n      \n        \u003cp\u003e在使用监控系统的时候，一般在定义报警条件的时候都会在当某某报警连续出现N次之后才会被定义为报警(当然核心服务可能只出现一次就报警)， 当监控系统无法满足复杂业务需求的时候，可能就得自己写监控了, 那么必然经常会面临异常的逻辑发生, 最典型的比如网络不稳定、机房割接等操作，都有可能产生网络抖动，在这样的情况下并非服务不可用, 如何使监控更加健硕, 而不是告警满天飞就变得很有必要.\u003c/p\u003e\n\u003cspan id=\"more\"\u003e\u003c/span\u003e\n\n\n\n\u003cp\u003e那么重试机制又该如何保障能够真正发现生产上的问题呢? 因为有可能频繁地重试会对服务产生影响.\u003c/p\u003e\n\u003ch3 id=\"接口重试\"\u003e\u003ca href=\"#接口重试\" class=\"headerlink\" title=\"接口重试\"\u003e\u003c/a\u003e接口重试\u003c/h3\u003e\u003cp\u003e首先，要指出的是，这是说到的需要的重试的过程可以分为两类:\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cul\u003e\n\u003cli\u003e如果是网络协议出现异常, 比如说, http协议层面相关的问题, \u003cstrong\u003e连接错误、连接超时\u003c/strong\u003e, 这类的可以直接使用网络框架来做重试, 这个大部分都有参数能够指定\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/blockquote\u003e\n\u003cp\u003e比如代码:\u003c/p\u003e\n\u003cfigure class=\"highlight python\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e8\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e9\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e10\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e11\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e12\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e13\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e14\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e15\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e16\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e17\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e18\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e19\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e20\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e21\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e22\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e23\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e24\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e25\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e26\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e27\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e28\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e29\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e30\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e31\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e32\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e33\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e34\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e35\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e36\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e37\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e38\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e39\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e40\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e41\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e42\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e43\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e44\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e45\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e46\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e47\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e48\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e49\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e50\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e51\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e52\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e53\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e54\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e55\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e56\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e57\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e58\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e59\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e60\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e61\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e62\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e63\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e64\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e65\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e66\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e67\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e68\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e69\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e70\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e71\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e72\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e73\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"keyword\"\u003eclass\u003c/span\u003e \u003cspan class=\"title class_\"\u003eOperator_Requests\u003c/span\u003e(\u003cspan class=\"title class_ inherited__\"\u003eobject\u003c/span\u003e):\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"keyword\"\u003edef\u003c/span\u003e \u003cspan class=\"title function_\"\u003e__init__\u003c/span\u003e(\u003cspan class=\"params\"\u003eself, **kwargs\u003c/span\u003e):\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        self.conn = self.req_conn(kwargs.get(\u003cspan class=\"string\"\u003e\u0026#34;max_retries\u0026#34;\u003c/span\u003e, HTTP_MAX_RETRIES)) \u003cspan class=\"comment\"\u003e# 重试次数\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e    @staticmethod\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"keyword\"\u003edef\u003c/span\u003e \u003cspan class=\"title function_\"\u003ereq_conn\u003c/span\u003e(\u003cspan class=\"params\"\u003emax_retries\u003c/span\u003e):\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        conn = requests.session()\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        conn.mount(\u003cspan class=\"string\"\u003e\u0026#34;http://\u0026#34;\u003c/span\u003e, HTTPAdapter(max_retries=max_retries))\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        conn.mount(\u003cspan class=\"string\"\u003e\u0026#34;https://\u0026#34;\u003c/span\u003e, HTTPAdapter(max_retries=max_retries))\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        \u003cspan class=\"keyword\"\u003ereturn\u003c/span\u003e conn\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e    @staticmethod\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"keyword\"\u003edef\u003c/span\u003e \u003cspan class=\"title function_\"\u003etype_map\u003c/span\u003e(\u003cspan class=\"params\"\u003eurl, method, wrong, code, msg, rnt\u003c/span\u003e):\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        msg = {\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e            \u003cspan class=\"string\"\u003e\u0026#34;ConnUrl\u0026#34;\u003c/span\u003e: url,\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e            \u003cspan class=\"string\"\u003e\u0026#34;UrlMethod\u0026#34;\u003c/span\u003e: method,\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e            \u003cspan class=\"string\"\u003e\u0026#34;ErrorType\u0026#34;\u003c/span\u003e: wrong,\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e            \u003cspan class=\"string\"\u003e\u0026#34;HttpCode\u0026#34;\u003c/span\u003e: code,\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e            \u003cspan class=\"string\"\u003e\u0026#34;ResponseMsg\u0026#34;\u003c/span\u003e: msg,\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e            \u003cspan class=\"string\"\u003e\u0026#34;rntCode\u0026#34;\u003c/span\u003e: rnt\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        }\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        \u003cspan class=\"keyword\"\u003ereturn\u003c/span\u003e msg\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"keyword\"\u003edef\u003c/span\u003e \u003cspan class=\"title function_\"\u003ehttp_get\u003c/span\u003e(\u003cspan class=\"params\"\u003eself, url, data=\u003cspan class=\"literal\"\u003eNone\u003c/span\u003e, headers=\u003cspan class=\"literal\"\u003eNone\u003c/span\u003e, timeout=HTTP_TIMEOUT\u003c/span\u003e):\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        \u003cspan class=\"keyword\"\u003etry\u003c/span\u003e:\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e            res = self.conn.get(url=url,\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e                                params=data,\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e                                headers=headers,\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e                                timeout=timeout)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e            en_code = res.encoding \u003cspan class=\"keyword\"\u003eif\u003c/span\u003e res.encoding \u003cspan class=\"keyword\"\u003eelse\u003c/span\u003e \u003cspan class=\"string\"\u003e\u0026#34;utf-8\u0026#34;\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        \u003cspan class=\"keyword\"\u003eexcept\u003c/span\u003e (requests.exceptions.ConnectionError,\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e                requests.exceptions.HTTPError) \u003cspan class=\"keyword\"\u003eas\u003c/span\u003e e:\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e            msg = self.type_map(url, \u003cspan class=\"string\"\u003e\u0026#34;GET\u0026#34;\u003c/span\u003e, \u003cspan class=\"string\"\u003e\u0026#34;ConnError\u0026#34;\u003c/span\u003e, \u003cspan class=\"string\"\u003e\u0026#34;\u0026#34;\u003c/span\u003e, \u003cspan class=\"built_in\"\u003estr\u003c/span\u003e(e), \u003cspan class=\"number\"\u003e3\u003c/span\u003e)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e            LOGGER.error(msg)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e            \u003cspan class=\"keyword\"\u003ereturn\u003c/span\u003e \u003cspan class=\"number\"\u003e3\u003c/span\u003e, msg\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        \u003cspan class=\"keyword\"\u003eexcept\u003c/span\u003e requests.exceptions.Timeout \u003cspan class=\"keyword\"\u003eas\u003c/span\u003e e:\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e            msg = self.type_map(url, \u003cspan class=\"string\"\u003e\u0026#34;GET\u0026#34;\u003c/span\u003e, \u003cspan class=\"string\"\u003e\u0026#34;ConnTimeout\u0026#34;\u003c/span\u003e, \u003cspan class=\"string\"\u003e\u0026#34;\u0026#34;\u003c/span\u003e, \u003cspan class=\"built_in\"\u003estr\u003c/span\u003e(e), \u003cspan class=\"number\"\u003e5\u003c/span\u003e)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e            LOGGER.error(msg)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e            \u003cspan class=\"keyword\"\u003ereturn\u003c/span\u003e \u003cspan class=\"number\"\u003e5\u003c/span\u003e, msg\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        \u003cspan class=\"keyword\"\u003eelse\u003c/span\u003e:\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e            \u003cspan class=\"keyword\"\u003eif\u003c/span\u003e \u003cspan class=\"number\"\u003e200\u003c/span\u003e == res.status_code:\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e                \u003cspan class=\"keyword\"\u003ereturn\u003c/span\u003e \u003cspan class=\"number\"\u003e0\u003c/span\u003e, res\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e            \u003cspan class=\"keyword\"\u003eelse\u003c/span\u003e:\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e                msg = self.type_map(\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e                    url, \u003cspan class=\"string\"\u003e\u0026#34;GET\u0026#34;\u003c/span\u003e, \u003cspan class=\"string\"\u003e\u0026#34;NOT200\u0026#34;\u003c/span\u003e,\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e                    \u003cspan class=\"built_in\"\u003estr\u003c/span\u003e(res.status_code) \u003cspan class=\"keyword\"\u003eif\u003c/span\u003e res.status_code \u003cspan class=\"keyword\"\u003eelse\u003c/span\u003e \u003cspan class=\"string\"\u003e\u0026#34;Null\u0026#34;\u003c/span\u003e,\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e                    res.text.encode(en_code) \u003cspan class=\"keyword\"\u003eif\u003c/span\u003e res.text \u003cspan class=\"keyword\"\u003eelse\u003c/span\u003e \u003cspan class=\"string\"\u003e\u0026#34;\u0026#34;\u003c/span\u003e, \u003cspan class=\"number\"\u003e7\u003c/span\u003e)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e                LOGGER.error(msg)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e                \u003cspan class=\"keyword\"\u003ereturn\u003c/span\u003e \u003cspan class=\"number\"\u003e7\u003c/span\u003e, msg\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"keyword\"\u003edef\u003c/span\u003e \u003cspan class=\"title function_\"\u003ehttp_post\u003c/span\u003e(\u003cspan class=\"params\"\u003eself, url, data, headers=\u003cspan class=\"literal\"\u003eNone\u003c/span\u003e\u003c/span\u003e):\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        \u003cspan class=\"keyword\"\u003etry\u003c/span\u003e:\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e            res = self.conn.post(url=url, data=data, headers=headers)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e            en_code = res.encoding \u003cspan class=\"keyword\"\u003eif\u003c/span\u003e res.encoding \u003cspan class=\"keyword\"\u003eelse\u003c/span\u003e \u003cspan class=\"string\"\u003e\u0026#34;utf-8\u0026#34;\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        \u003cspan class=\"keyword\"\u003eexcept\u003c/span\u003e (requests.exceptions.ConnectionError,\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e                requests.exceptions.HTTPError) \u003cspan class=\"keyword\"\u003eas\u003c/span\u003e e:\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e            msg = self.type_map(url, \u003cspan class=\"string\"\u003e\u0026#34;POST\u0026#34;\u003c/span\u003e, \u003cspan class=\"string\"\u003e\u0026#34;ConnError\u0026#34;\u003c/span\u003e, \u003cspan class=\"string\"\u003e\u0026#34;\u0026#34;\u003c/span\u003e, \u003cspan class=\"built_in\"\u003estr\u003c/span\u003e(e), \u003cspan class=\"number\"\u003e3\u003c/span\u003e)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e            LOGGER.error(msg)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e            \u003cspan class=\"keyword\"\u003ereturn\u003c/span\u003e \u003cspan class=\"number\"\u003e3\u003c/span\u003e, msg\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        \u003cspan class=\"keyword\"\u003eexcept\u003c/span\u003e requests.exceptions.Timeout \u003cspan class=\"keyword\"\u003eas\u003c/span\u003e e:\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e            msg = self.type_map(url, \u003cspan class=\"string\"\u003e\u0026#34;POST\u0026#34;\u003c/span\u003e, \u003cspan class=\"string\"\u003e\u0026#34;ConnTimeout\u0026#34;\u003c/span\u003e, \u003cspan class=\"string\"\u003e\u0026#34;\u0026#34;\u003c/span\u003e, \u003cspan class=\"built_in\"\u003estr\u003c/span\u003e(e), \u003cspan class=\"number\"\u003e5\u003c/span\u003e)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e            LOGGER.error(msg)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e            \u003cspan class=\"keyword\"\u003ereturn\u003c/span\u003e \u003cspan class=\"number\"\u003e5\u003c/span\u003e, msg\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        \u003cspan class=\"keyword\"\u003eelse\u003c/span\u003e:\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e            \u003cspan class=\"keyword\"\u003eif\u003c/span\u003e \u003cspan class=\"number\"\u003e200\u003c/span\u003e == res.status_code:\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e                \u003cspan class=\"keyword\"\u003ereturn\u003c/span\u003e \u003cspan class=\"number\"\u003e0\u003c/span\u003e, res\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e            \u003cspan class=\"keyword\"\u003eelse\u003c/span\u003e:\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e                msg = self.type_map(\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e                    url, \u003cspan class=\"string\"\u003e\u0026#34;POST\u0026#34;\u003c/span\u003e, \u003cspan class=\"string\"\u003e\u0026#34;NOT200\u0026#34;\u003c/span\u003e,\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e                    \u003cspan class=\"built_in\"\u003estr\u003c/span\u003e(res.status_code) \u003cspan class=\"keyword\"\u003eif\u003c/span\u003e res.status_code \u003cspan class=\"keyword\"\u003eelse\u003c/span\u003e \u003cspan class=\"string\"\u003e\u0026#34;Null\u0026#34;\u003c/span\u003e,\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e                    res.text.encode(en_code) \u003cspan class=\"keyword\"\u003eif\u003c/span\u003e res.text \u003cspan class=\"keyword\"\u003eelse\u003c/span\u003e \u003cspan class=\"string\"\u003e\u0026#34;\u0026#34;\u003c/span\u003e, \u003cspan class=\"number\"\u003e7\u003c/span\u003e)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e                LOGGER.error(msg)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e                \u003cspan class=\"keyword\"\u003ereturn\u003c/span\u003e \u003cspan class=\"number\"\u003e7\u003c/span\u003e, msg\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e这里相当于又封装了一层http常用的方法, \u003ccode\u003eHTTP_MAX_RETRIES\u003c/code\u003e指定了http接口的重试次数, 这个重试遵循http协议的相关标准, 一般不需要太关注\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003ehttp接口上出现的错误，在返回码上就很容易判断\u003c/strong\u003e，从上面的代码就可以看出\u003c/p\u003e\n\u003ch3 id=\"功能重试\"\u003e\u003ca href=\"#功能重试\" class=\"headerlink\" title=\"功能重试\"\u003e\u003c/a\u003e功能重试\u003c/h3\u003e\u003cp\u003e对于单个接口上的重试依托底层协议去完成. 重要的是功能重试\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003e因为对于某个具体的功能业说，只有人才真正明白涉及的逻辑\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003e比如想要监控\u003cstrong\u003e页面登录\u003c/strong\u003e这个功能是否正常, 那么需要定义好以下内容:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003e要完成登录操作的输入是什么?\u003c/li\u003e\n\u003cli\u003e登录成功后的输出又是什么? \u003c/li\u003e\n\u003cli\u003e如何定义监控预期?\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003e关于第3点，**监控预期指的是怎么判断脚本执行完登录这个操作后是成功还是失败?**那么必定存在一个判断逻辑\u003c/p\u003e\n\u003cp\u003e现如今，微服务大行其道, 登录功能可能涉及到多个服务间的调用, \u003cstrong\u003e任何一个服务出了问题,都将导致登录失败.\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003e那是不是每个服务都需要去写判断逻辑呢?\u003c/p\u003e\n\u003cp\u003e答案是否定的，\u003cstrong\u003e所谓的功能监控，也就是黑盒监控(Blackbox)，是不需要关心这个功能会调用多少个服务的，把整个服务看成是个整体，单一的输入, 单一的输出, 然后用期望值与输出进行比较来判断登录功能是否正常\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003e在功能上重试重试，很容易想到的二个参数: \u003cstrong\u003e重试次数、间隔时间\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003e有了这两个条件, 可以很大程度上减少产生误报的情况.\u003c/p\u003e\n\u003cp\u003e可以写一个实现重试功能的\u003cstrong\u003e装饰器\u003c/strong\u003e，这样就不用在每个业务逻辑上都把这个重试函数都实现一遍\u003c/p\u003e\n\u003cp\u003e代码如下:\u003c/p\u003e\n\u003cfigure class=\"highlight python\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e8\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e9\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e10\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e11\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e12\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e13\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e14\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e15\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e16\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e17\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e18\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e19\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e20\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e21\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e22\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e23\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e24\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e25\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e26\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e27\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e28\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e29\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e30\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e31\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e32\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e33\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"keyword\"\u003edef\u003c/span\u003e \u003cspan class=\"title function_\"\u003edo_retry\u003c/span\u003e(\u003cspan class=\"params\"\u003eretry_times=FUNC_RETRIES, delay_seconds=FUNC_RETRY_DELAY_SECONDS\u003c/span\u003e):\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"string\"\u003e\u0026#34;\u0026#34;\u0026#34;\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"string\"\u003e    Decorator for function retry .\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"string\"\u003e    @param retry_times: retry times\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"string\"\u003e    @param delay_seconds: sleep time after per try\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"string\"\u003e    @return: the return value of the called function\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"string\"\u003e    @raise Exception: raises an exception when an error occurred after last time\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"string\"\u003e\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"string\"\u003e    \u0026#34;\u0026#34;\u0026#34;\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"keyword\"\u003edef\u003c/span\u003e \u003cspan class=\"title function_\"\u003edeco\u003c/span\u003e(\u003cspan class=\"params\"\u003ef\u003c/span\u003e):\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e        @wraps(\u003cspan class=\"params\"\u003ef\u003c/span\u003e)\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        \u003cspan class=\"keyword\"\u003edef\u003c/span\u003e \u003cspan class=\"title function_\"\u003ewrapper\u003c/span\u003e(\u003cspan class=\"params\"\u003e*args, **kwargs\u003c/span\u003e):\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e            _retry_times, _delay_seconds = retry_times, delay_seconds\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e            _err = \u003cspan class=\"literal\"\u003eNone\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e            \u003cspan class=\"keyword\"\u003ewhile\u003c/span\u003e _retry_times \u0026gt; \u003cspan class=\"number\"\u003e0\u003c/span\u003e:\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e                \u003cspan class=\"keyword\"\u003etry\u003c/span\u003e:\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e                    _err = \u003cspan class=\"literal\"\u003eNone\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e                    \u003cspan class=\"keyword\"\u003ereturn\u003c/span\u003e f(*args, **kwargs)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e                \u003cspan class=\"keyword\"\u003eexcept\u003c/span\u003e RetryException \u003cspan class=\"keyword\"\u003eas\u003c/span\u003e e:\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e                    \u003cspan class=\"comment\"\u003e# e is a RetryException instance\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e                    \u003cspan class=\"comment\"\u003e# so can call e.get_err()\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e                    _err = e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e                    \u003cspan class=\"keyword\"\u003eif\u003c/span\u003e _delay_seconds \u0026gt; \u003cspan class=\"number\"\u003e0\u003c/span\u003e:\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e                        time.sleep(_delay_seconds)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e                    _retry_times -= \u003cspan class=\"number\"\u003e1\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e            \u003cspan class=\"keyword\"\u003eif\u003c/span\u003e _err:\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e                event = _err.get_err()\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e                \u003cspan class=\"built_in\"\u003eprint\u003c/span\u003e(\u003cspan class=\"string\"\u003e\u0026#34;_err--\u0026gt;\u0026#34;\u003c/span\u003e, \u003cspan class=\"built_in\"\u003etype\u003c/span\u003e(event), event)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e                call_back(event)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        \u003cspan class=\"keyword\"\u003ereturn\u003c/span\u003e wrapper\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"keyword\"\u003ereturn\u003c/span\u003e deco\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e那么, 在业务逻辑上需要进行重试的时候, 只需要加入这个装饰器即可\u003c/p\u003e\n\u003cfigure class=\"highlight python\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e8\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e9\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e10\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e11\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e12\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e13\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e14\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e15\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e16\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e17\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e@do_retry(\u003cspan class=\"params\"\u003e\u003cspan class=\"number\"\u003e2\u003c/span\u003e， \u003cspan class=\"number\"\u003e10\u003c/span\u003e\u003c/span\u003e)\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  \u003cspan class=\"comment\"\u003e# @run_time()  # @run_time(10)\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  \u003cspan class=\"keyword\"\u003edef\u003c/span\u003e \u003cspan class=\"title function_\"\u003elogin\u003c/span\u003e():\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    rnt, res = http_post(url=url, data=data, headers=headers)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e      \u003cspan class=\"keyword\"\u003eif\u003c/span\u003e rnt \u0026gt; \u003cspan class=\"number\"\u003e0\u003c/span\u003e:\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e          \u003cspan class=\"comment\"\u003e# httpcode is NOT 200\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e          \u003cspan class=\"comment\"\u003e# res:\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e          \u003cspan class=\"comment\"\u003e#   error msg\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e          \u003cspan class=\"comment\"\u003e#   type: dict\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e          \u003cspan class=\"keyword\"\u003eraise\u003c/span\u003e RetryException(res, rnt)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e      \u003cspan class=\"keyword\"\u003eelse\u003c/span\u003e:\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e          \u003cspan class=\"comment\"\u003e# httpcode 200\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e          _json = res.json()\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e          \u003cspan class=\"comment\"\u003e# but response is not as expect\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e          \u003cspan class=\"keyword\"\u003eif\u003c/span\u003e \u003cspan class=\"number\"\u003e0\u003c/span\u003e != _json.get(\u003cspan class=\"string\"\u003e\u0026#34;error_code\u0026#34;\u003c/span\u003e):\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e              event = self._buildup(_json)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e              \u003cspan class=\"keyword\"\u003eraise\u003c/span\u003e RetryException(event, rnt)\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e这里使用了二层结构:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003e如果http状态码不为200,则抛出\u003ccode\u003eexception\u003c/code\u003e重试\u003c/li\u003e\n\u003cli\u003e如果返回码为200,但是返回的数据不是期望值,抛出\u003ccode\u003eexception\u003c/code\u003e重试,这里的期望值为\u003ccode\u003e登录成功后的可以从response中get到error_code=0\u003c/code\u003e\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003e如果\u003cstrong\u003e任一模块出现问题\u003c/strong\u003e, 则error_code必不会为0, 抛出\u003ccode\u003eexception\u003c/code\u003e, 这个\u003ccode\u003eexception\u003c/code\u003e在\u003ccode\u003edo_retry\u003c/code\u003e中被捕获后进行重试操作, 这里指定了重试次数及间隔时间. 在\u003ccode\u003edo_retry\u003c/code\u003e中，如果超过了重试次数后还是发生异常, 则会调用\u003ccode\u003ecall_back\u003c/code\u003e函数, 那么就可以自定义触发的动作, 比如邮件报警等\u003c/p\u003e\n\u003cp\u003e这里，使用了\u003ccode\u003eexception\u003c/code\u003e, 也更加自由地对错误进行定制.\u003c/p\u003e\n\u003cp\u003e当然, \u003cstrong\u003e生产环境下对功能进行监控，最好能够隔离生产数据\u003c/strong\u003e, 比如使用一个只用于登录监控的用户名与密码, 这个用户可能没用任何权限, 只能够登录就行.\u003c/p\u003e\n\u003cp\u003e另一个见人见智了,最好能够做到功能监控随时能禁, 随时能启用, 或者说告警随时能屏蔽.\u003c/p\u003e\n\u003cp\u003e从这里也可以看出, 如果我只是对登录这个功能进行监控, 是不需要care登录这个功能涉及多少个模块的, 只需要关心最后收到的response是否符合，如果不符合预期，说明登录这个功能是异常的.\u003c/p\u003e\n\u003cp\u003e至于登录进行之后再做其它的操作有问题, 则不属于\u003ccode\u003e登录\u003c/code\u003e这个功能监控的范畴.\u003c/p\u003e\n\u003cp\u003e上述代码在本人写的大部分的功能监控一直使用, 后来发现个更强大的\u003ccode\u003eRetry库\u003c/code\u003e\u003ca target=\"_blank\" rel=\"noopener\" href=\"https://github.com/zhoushuke/tenacity\"\u003etenacity\u003c/a\u003e, 自由性更高, github在\u003ca target=\"_blank\" rel=\"noopener\" href=\"https://github.com/zhoushuke/tenacity\"\u003e这里\u003c/a\u003e,开箱即用.\u003c/p\u003e\n\u003ch3 id=\"参考文章\"\u003e\u003ca href=\"#参考文章\" class=\"headerlink\" title=\"参考文章:\"\u003e\u003c/a\u003e\u003cstrong\u003e参考文章:\u003c/strong\u003e\u003c/h3\u003e\u003cblockquote\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca target=\"_blank\" rel=\"noopener\" href=\"https://github.com/zhoushuke/tenacity\"\u003ehttps://github.com/zhoushuke/tenacity\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/blockquote\u003e\n\u003ch3 id=\"转载请注明原作者-周淑科-https-izsk-me\"\u003e\u003ca href=\"#转载请注明原作者-周淑科-https-izsk-me\" class=\"headerlink\" title=\"转载请注明原作者: 周淑科(https://izsk.me)\"\u003e\u003c/a\u003e\u003cstrong\u003e转载请注明原作者: 周淑科(\u003ca target=\"_blank\" rel=\"noopener\" href=\"https://izsk.me/\"\u003ehttps://izsk.me\u003c/a\u003e)\u003c/strong\u003e\u003c/h3\u003e\n      \n    \u003c/div\u003e",
  "Date": "2020-01-19T21:10:53+08:00",
  "Author": "Z.S.K."
}