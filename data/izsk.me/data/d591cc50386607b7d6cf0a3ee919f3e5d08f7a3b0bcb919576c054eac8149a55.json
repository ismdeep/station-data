{
  "Source": "izsk.me",
  "Title": "golang学习(golang中的addressable)",
  "Link": "https://izsk.me/2019/10/20/golang-addressable/",
  "Content": "\u003cdiv class=\"post-body\" itemprop=\"articleBody\"\u003e\n\n      \n      \n\n      \n        \u003cp\u003e\u003cstrong\u003e该文章为转载, 原文地址在\u003ca target=\"_blank\" rel=\"noopener\" href=\"https://colobu.com/2018/02/27/go-addressable/\"\u003ehttps://colobu.com/2018/02/27/go-addressable/\u003c/a\u003e\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eGo语言规范中规定了可寻址(addressable)对象的定义\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eFor an operand x of type T, the address operation \u0026amp;x generates a pointer of type *T to x. The operand must be addressable, that is, either a variable, pointer indirection, or slice indexing operation; or a field selector of an addressable struct operand; or an array indexing operation of an addressable array. As an exception to the addressability requirement, x may also be a (possibly parenthesized) composite literal. If the evaluation of x would cause a run-time panic, then the evaluation of \u0026amp;x does too.\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cspan id=\"more\"\u003e\u003c/span\u003e\n\n\n\n\u003ch3 id=\"addressable\"\u003e\u003ca href=\"#addressable\" class=\"headerlink\" title=\"addressable\"\u003e\u003c/a\u003eaddressable\u003c/h3\u003e\u003cp\u003e对于一个对象\u003ccode\u003ex\u003c/code\u003e, 如果它的类型为\u003ccode\u003eT\u003c/code\u003e, 那么\u003ccode\u003e\u0026amp;x\u003c/code\u003e则会产生一个类型为\u003ccode\u003e*T\u003c/code\u003e的指针，这个指针指向\u003ccode\u003ex\u003c/code\u003e, 这是这一段的第一句话，也是我们在开发过程中经常使用的一种获取对象指针的一种方式\u003c/p\u003e\n\u003cp\u003e上面规范中的这段话规定， \u003ccode\u003ex\u003c/code\u003e必须是可寻址的， 也就是说，它只能是以下几种方式：\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e一个变量: \u003ccode\u003e\u0026amp;x\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003e指针引用(pointer indirection): \u003ccode\u003e\u0026amp;*x\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003eslice索引操作(不管slice是否可寻址): \u003ccode\u003e\u0026amp;s[1]\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003e可寻址struct的字段: \u003ccode\u003e\u0026amp;point.X\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003e可寻址数组的索引操作: \u003ccode\u003e\u0026amp;a[0]\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003ecomposite literal类型: \u003ccode\u003e\u0026amp;struct{ X int }{1}\u003c/code\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e下列情况\u003ccode\u003ex\u003c/code\u003e是不可以寻址的，你不能使用\u003ccode\u003e\u0026amp;x\u003c/code\u003e取得指针：\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e字符串中的字节:\u003c/li\u003e\n\u003cli\u003emap对象中的元素\u003c/li\u003e\n\u003cli\u003e接口对象的动态值(通过type assertions获得)\u003c/li\u003e\n\u003cli\u003e常数\u003c/li\u003e\n\u003cli\u003eliteral值(非composite literal)\u003c/li\u003e\n\u003cli\u003epackage 级别的函数\u003c/li\u003e\n\u003cli\u003e方法method (用作函数值)\u003c/li\u003e\n\u003cli\u003e中间值(intermediate value):\u003cul\u003e\n\u003cli\u003e函数调用\u003c/li\u003e\n\u003cli\u003e显式类型转换\u003c/li\u003e\n\u003cli\u003e各种类型的操作 （除了指针引用pointer dereference操作*x):\u003cul\u003e\n\u003cli\u003echannel receive operations\u003c/li\u003e\n\u003cli\u003esub-string operations\u003c/li\u003e\n\u003cli\u003esub-slice operations\u003c/li\u003e\n\u003cli\u003e加减乘除等运算符\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003cblockquote\u003e\n\u003cp\u003eTapir Games在他的文章\u003ca target=\"_blank\" rel=\"noopener\" href=\"http://www.tapirgames.com/blog/golang-unofficial-faq#unaddressable-values\"\u003eunaddressable-values\u003c/a\u003e中做了很好的整理。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003e有几个点需要解释下：\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e常数为什么不可以寻址?： 如果可以寻址的话，我们可以通过指针修改常数的值，破坏了常数的定义。\u003c/li\u003e\n\u003cli\u003emap的元素为什么不可以寻址？:两个原因，如果对象不存在，则返回零值，零值是不可变对象，所以不能寻址，如果对象存在，因为Go中map实现中元素的地址是变化的，这意味着寻址的结果是无意义的。\u003c/li\u003e\n\u003cli\u003e为什么slice不管是否可寻址，它的元素读是可以寻址的？:因为slice底层实现了一个数组，它是可以寻址的。\u003c/li\u003e\n\u003cli\u003e为什么字符串中的字符/字节又不能寻址呢：因为字符串是不可变的。\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e规范中还有几处提到了 \u003ccode\u003eaddressable\u003c/code\u003e:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e调用一个receiver为指针类型的方法时，使用一个addressable的值将自动获取这个值的指针\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003e++\u003c/code\u003e、\u003ccode\u003e--\u003c/code\u003e语句的操作对象必须是addressable或者是map的index操作\u003c/li\u003e\n\u003cli\u003e赋值语句\u003ccode\u003e=\u003c/code\u003e的左边对象必须是addressable,或者是map的index操作，或者是\u003ccode\u003e_\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003e上条同样使用\u003ccode\u003efor ... range\u003c/code\u003e语句\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"reflect-Value的CanAddr方法和CanSet方法\"\u003e\u003ca href=\"#reflect-Value的CanAddr方法和CanSet方法\" class=\"headerlink\" title=\"reflect.Value的CanAddr方法和CanSet方法\"\u003e\u003c/a\u003ereflect.Value\u003ccode\u003e的\u003c/code\u003eCanAddr\u003ccode\u003e方法和\u003c/code\u003eCanSet方法\u003c/h3\u003e\u003cp\u003e在我们使用\u003ccode\u003ereflect\u003c/code\u003e执行一些底层的操作的时候， 比如编写序列化库、rpc框架开发、编解码、插件开发等业务的时候，经常会使用到\u003ccode\u003ereflect.Value\u003c/code\u003e的\u003ccode\u003eCanSet\u003c/code\u003e方法，用来动态的给对象赋值。 \u003ccode\u003eCanSet\u003c/code\u003e比\u003ccode\u003eCanAddr\u003c/code\u003e只加了一个限制，就是struct类型的\u003ccode\u003eunexported\u003c/code\u003e的字段不能\u003ccode\u003eSet\u003c/code\u003e，所以我们这节主要介绍\u003ccode\u003eCanAddr\u003c/code\u003e。\u003c/p\u003e\n\u003cp\u003e并不是任意的\u003ccode\u003ereflect.Value\u003c/code\u003e的\u003ccode\u003eCanAddr\u003c/code\u003e方法都返回\u003ccode\u003etrue\u003c/code\u003e,根据它的godoc,我们可以知道：\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eCanAddr reports whether the value’s address can be obtained with Addr. Such values are called addressable. A value is addressable if it is an element of a slice, an element of an addressable array, a field of an addressable struct, or the result of dereferencing a pointer. If CanAddr returns false, calling Addr will panic.\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003e也就是只有下面的类型\u003ccode\u003ereflect.Value\u003c/code\u003e的\u003ccode\u003eCanAddr\u003c/code\u003e才是\u003ccode\u003etrue\u003c/code\u003e, 这样的值是\u003ccode\u003eaddressable\u003c/code\u003e:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eslice的元素\u003c/li\u003e\n\u003cli\u003e可寻址数组的元素\u003c/li\u003e\n\u003cli\u003e可寻址struct的字段\u003c/li\u003e\n\u003cli\u003e指针引用的结果\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e与规范中规定的\u003ccode\u003eaddressable\u003c/code\u003e, \u003ccode\u003ereflect.Value\u003c/code\u003e的\u003ccode\u003eaddressable\u003c/code\u003e范围有所缩小， 比如对于栈上分配的变量， 随着方法的生命周期的结束， 栈上的对象也就被回收掉了，这个时候如果获取它们的地址，就会出现不一致的结果，甚至安全问题。\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e对于栈和堆的对象分配以及逃逸分析，你可以看 William Kennedy 写的系列文章: \u003ca target=\"_blank\" rel=\"noopener\" href=\"https://studygolang.com/articles/12444\"\u003eGo 语言机制之逃逸分析\u003c/a\u003e\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003e所以如果你想通过\u003ccode\u003ereflect.Value\u003c/code\u003e对它的值进行更新，应该确保它的\u003ccode\u003eCanSet\u003c/code\u003e方法返回\u003ccode\u003etrue\u003c/code\u003e,这样才能调用\u003ccode\u003eSetXXX\u003c/code\u003e进行设置。\u003c/p\u003e\n\u003cp\u003e使用\u003ccode\u003ereflect.Value\u003c/code\u003e的时候有时会对\u003ccode\u003efunc Indirect(v Value) Value\u003c/code\u003e和\u003ccode\u003efunc (v Value) Elem() Value\u003c/code\u003e两个方法有些迷惑，有时候他们俩会返回同样的值，有时候又不会。\u003c/p\u003e\n\u003cp\u003e总结一下：\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003e如果\u003ccode\u003ereflect.Value\u003c/code\u003e是一个指针， 那么\u003ccode\u003ev.Elem()\u003c/code\u003e等价于\u003ccode\u003ereflect.Indirect(v)\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003e如果不是指针\u003cbr/\u003e2.1 如果是\u003ccode\u003einterface\u003c/code\u003e, 那么\u003ccode\u003ereflect.Indirect(v)\u003c/code\u003e返回同样的值，而\u003ccode\u003ev.Elem()\u003c/code\u003e返回接口的动态的值\u003cbr/\u003e2.2 如果是其它值, \u003ccode\u003ev.Elem()\u003c/code\u003e会panic,而\u003ccode\u003ereflect.Indirect(v)\u003c/code\u003e返回原值\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003e下面的代码列出一些\u003ccode\u003ereflect.Value\u003c/code\u003e是否可以addressable, 你需要注意数组和struct字段的情况，也就是\u003ccode\u003ex7\u003c/code\u003e、\u003ccode\u003ex9\u003c/code\u003e、\u003ccode\u003ex14\u003c/code\u003e、\u003ccode\u003ex15\u003c/code\u003e的正确的处理方式。\u003c/p\u003e\n\u003ch3 id=\"示例代码\"\u003e\u003ca href=\"#示例代码\" class=\"headerlink\" title=\"示例代码\"\u003e\u003c/a\u003e示例代码\u003c/h3\u003e\u003cfigure class=\"highlight go\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e8\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e9\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e10\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e11\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e12\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e13\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e14\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e15\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e16\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e17\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e18\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e19\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e20\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e21\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e22\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e23\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e24\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e25\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e26\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e27\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e28\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e29\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e30\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e31\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e32\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e33\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e34\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e35\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e36\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e37\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e38\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e39\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e40\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e41\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e42\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e43\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e44\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e45\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e46\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e47\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e48\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e49\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e50\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e51\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e52\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e53\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e54\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e55\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e56\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e57\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e58\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e59\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e60\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e61\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e62\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e63\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e64\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e65\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e66\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e67\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e68\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e69\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e70\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e71\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e72\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e73\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e74\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e75\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e76\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e77\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e78\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e79\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e80\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e81\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e82\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e83\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e84\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e85\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e86\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e87\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e88\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"keyword\"\u003epackage\u003c/span\u003e main\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"keyword\"\u003eimport\u003c/span\u003e (\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\t\u003cspan class=\"string\"\u003e\u0026#34;fmt\u0026#34;\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\t\u003cspan class=\"string\"\u003e\u0026#34;reflect\u0026#34;\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\t\u003cspan class=\"string\"\u003e\u0026#34;time\u0026#34;\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"function\"\u003e\u003cspan class=\"keyword\"\u003efunc\u003c/span\u003e \u003cspan class=\"title\"\u003emain\u003c/span\u003e\u003cspan class=\"params\"\u003e()\u003c/span\u003e\u003c/span\u003e {\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\tcheckCanAddr()\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e}\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"keyword\"\u003etype\u003c/span\u003e S \u003cspan class=\"keyword\"\u003estruct\u003c/span\u003e {\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\tX \u003cspan class=\"type\"\u003eint\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\tY \u003cspan class=\"type\"\u003estring\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\tz \u003cspan class=\"type\"\u003eint\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e}\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"function\"\u003e\u003cspan class=\"keyword\"\u003efunc\u003c/span\u003e \u003cspan class=\"title\"\u003eM\u003c/span\u003e\u003cspan class=\"params\"\u003e()\u003c/span\u003e\u003c/span\u003e \u003cspan class=\"type\"\u003eint\u003c/span\u003e {\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\t\u003cspan class=\"keyword\"\u003ereturn\u003c/span\u003e \u003cspan class=\"number\"\u003e100\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e}\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"keyword\"\u003evar\u003c/span\u003e x0 = \u003cspan class=\"number\"\u003e0\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"function\"\u003e\u003cspan class=\"keyword\"\u003efunc\u003c/span\u003e \u003cspan class=\"title\"\u003echeckCanAddr\u003c/span\u003e\u003cspan class=\"params\"\u003e()\u003c/span\u003e\u003c/span\u003e {\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\t\u003cspan class=\"comment\"\u003e// 可寻址的情况\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\tv := reflect.ValueOf(x0)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\tfmt.Printf(\u003cspan class=\"string\"\u003e\u0026#34;x0: %v \\tcan be addressable and set: %t, %t\\n\u0026#34;\u003c/span\u003e, x0, v.CanAddr(), v.CanSet()) \u003cspan class=\"comment\"\u003e//false,false\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\t\u003cspan class=\"keyword\"\u003evar\u003c/span\u003e x1 = \u003cspan class=\"number\"\u003e1\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\tv = reflect.Indirect(reflect.ValueOf(x1))\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\tfmt.Printf(\u003cspan class=\"string\"\u003e\u0026#34;x1: %v \\tcan be addressable and set: %t, %t\\n\u0026#34;\u003c/span\u003e, x1, v.CanAddr(), v.CanSet()) \u003cspan class=\"comment\"\u003e//false,false\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\t\u003cspan class=\"keyword\"\u003evar\u003c/span\u003e x2 = \u0026amp;x1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\tv = reflect.Indirect(reflect.ValueOf(x2))\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\tfmt.Printf(\u003cspan class=\"string\"\u003e\u0026#34;x2: %v \\tcan be addressable and set: %t, %t\\n\u0026#34;\u003c/span\u003e, x2, v.CanAddr(), v.CanSet()) \u003cspan class=\"comment\"\u003e//true,true\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\t\u003cspan class=\"keyword\"\u003evar\u003c/span\u003e x3 = time.Now()\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\tv = reflect.Indirect(reflect.ValueOf(x3))\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\tfmt.Printf(\u003cspan class=\"string\"\u003e\u0026#34;x3: %v \\tcan be addressable and set: %t, %t\\n\u0026#34;\u003c/span\u003e, x3, v.CanAddr(), v.CanSet()) \u003cspan class=\"comment\"\u003e//false,false\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\t\u003cspan class=\"keyword\"\u003evar\u003c/span\u003e x4 = \u0026amp;x3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\tv = reflect.Indirect(reflect.ValueOf(x4))\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\tfmt.Printf(\u003cspan class=\"string\"\u003e\u0026#34;x4: %v \\tcan be addressable and set: %t, %t\\n\u0026#34;\u003c/span\u003e, x4, v.CanAddr(), v.CanSet()) \u003cspan class=\"comment\"\u003e// true,true\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\t\u003cspan class=\"keyword\"\u003evar\u003c/span\u003e x5 = []\u003cspan class=\"type\"\u003eint\u003c/span\u003e{\u003cspan class=\"number\"\u003e1\u003c/span\u003e, \u003cspan class=\"number\"\u003e2\u003c/span\u003e, \u003cspan class=\"number\"\u003e3\u003c/span\u003e}\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\tv = reflect.ValueOf(x5)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\tfmt.Printf(\u003cspan class=\"string\"\u003e\u0026#34;x5: %v \\tcan be addressable and set: %t, %t\\n\u0026#34;\u003c/span\u003e, x5, v.CanAddr(), v.CanSet()) \u003cspan class=\"comment\"\u003e// false,false\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\t\u003cspan class=\"keyword\"\u003evar\u003c/span\u003e x6 = []\u003cspan class=\"type\"\u003eint\u003c/span\u003e{\u003cspan class=\"number\"\u003e1\u003c/span\u003e, \u003cspan class=\"number\"\u003e2\u003c/span\u003e, \u003cspan class=\"number\"\u003e3\u003c/span\u003e}\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\tv = reflect.ValueOf(x6[\u003cspan class=\"number\"\u003e0\u003c/span\u003e])\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\tfmt.Printf(\u003cspan class=\"string\"\u003e\u0026#34;x6: %v \\tcan be addressable and set: %t, %t\\n\u0026#34;\u003c/span\u003e, x6[\u003cspan class=\"number\"\u003e0\u003c/span\u003e], v.CanAddr(), v.CanSet()) \u003cspan class=\"comment\"\u003e//false,false\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\t\u003cspan class=\"keyword\"\u003evar\u003c/span\u003e x7 = []\u003cspan class=\"type\"\u003eint\u003c/span\u003e{\u003cspan class=\"number\"\u003e1\u003c/span\u003e, \u003cspan class=\"number\"\u003e2\u003c/span\u003e, \u003cspan class=\"number\"\u003e3\u003c/span\u003e}\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\tv = reflect.ValueOf(x7).Index(\u003cspan class=\"number\"\u003e0\u003c/span\u003e)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\tfmt.Printf(\u003cspan class=\"string\"\u003e\u0026#34;x7: %v \\tcan be addressable and set: %t, %t\\n\u0026#34;\u003c/span\u003e, x7[\u003cspan class=\"number\"\u003e0\u003c/span\u003e], v.CanAddr(), v.CanSet()) \u003cspan class=\"comment\"\u003e//true,true\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\tv = reflect.ValueOf(\u0026amp;x7[\u003cspan class=\"number\"\u003e1\u003c/span\u003e])\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\tfmt.Printf(\u003cspan class=\"string\"\u003e\u0026#34;x7.1: %v \\tcan be addressable and set: %t, %t\\n\u0026#34;\u003c/span\u003e, x7[\u003cspan class=\"number\"\u003e1\u003c/span\u003e], v.CanAddr(), v.CanSet()) \u003cspan class=\"comment\"\u003e//true,true\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\t\u003cspan class=\"keyword\"\u003evar\u003c/span\u003e x8 = [\u003cspan class=\"number\"\u003e3\u003c/span\u003e]\u003cspan class=\"type\"\u003eint\u003c/span\u003e{\u003cspan class=\"number\"\u003e1\u003c/span\u003e, \u003cspan class=\"number\"\u003e2\u003c/span\u003e, \u003cspan class=\"number\"\u003e3\u003c/span\u003e}\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\tv = reflect.ValueOf(x8[\u003cspan class=\"number\"\u003e0\u003c/span\u003e])\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\tfmt.Printf(\u003cspan class=\"string\"\u003e\u0026#34;x8: %v \\tcan be addressable and set: %t, %t\\n\u0026#34;\u003c/span\u003e, x8[\u003cspan class=\"number\"\u003e0\u003c/span\u003e], v.CanAddr(), v.CanSet()) \u003cspan class=\"comment\"\u003e//false,false\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\t\u003cspan class=\"comment\"\u003e// https://groups.google.com/forum/#!topic/golang-nuts/RF9zsX82MWw\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\t\u003cspan class=\"keyword\"\u003evar\u003c/span\u003e x9 = [\u003cspan class=\"number\"\u003e3\u003c/span\u003e]\u003cspan class=\"type\"\u003eint\u003c/span\u003e{\u003cspan class=\"number\"\u003e1\u003c/span\u003e, \u003cspan class=\"number\"\u003e2\u003c/span\u003e, \u003cspan class=\"number\"\u003e3\u003c/span\u003e}\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\tv = reflect.Indirect(reflect.ValueOf(x9).Index(\u003cspan class=\"number\"\u003e0\u003c/span\u003e))\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\tfmt.Printf(\u003cspan class=\"string\"\u003e\u0026#34;x9: %v \\tcan be addressable and set: %t, %t\\n\u0026#34;\u003c/span\u003e, x9[\u003cspan class=\"number\"\u003e0\u003c/span\u003e], v.CanAddr(), v.CanSet()) \u003cspan class=\"comment\"\u003e//false,false\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\t\u003cspan class=\"keyword\"\u003evar\u003c/span\u003e x10 = [\u003cspan class=\"number\"\u003e3\u003c/span\u003e]\u003cspan class=\"type\"\u003eint\u003c/span\u003e{\u003cspan class=\"number\"\u003e1\u003c/span\u003e, \u003cspan class=\"number\"\u003e2\u003c/span\u003e, \u003cspan class=\"number\"\u003e3\u003c/span\u003e}\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\tv = reflect.Indirect(reflect.ValueOf(\u0026amp;x10)).Index(\u003cspan class=\"number\"\u003e0\u003c/span\u003e)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\tfmt.Printf(\u003cspan class=\"string\"\u003e\u0026#34;x9: %v \\tcan be addressable and set: %t, %t\\n\u0026#34;\u003c/span\u003e, x10[\u003cspan class=\"number\"\u003e0\u003c/span\u003e], v.CanAddr(), v.CanSet()) \u003cspan class=\"comment\"\u003e//true,true\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\t\u003cspan class=\"keyword\"\u003evar\u003c/span\u003e x11 = S{}\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\tv = reflect.ValueOf(x11)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\tfmt.Printf(\u003cspan class=\"string\"\u003e\u0026#34;x11: %v \\tcan be addressable and set: %t, %t\\n\u0026#34;\u003c/span\u003e, x11, v.CanAddr(), v.CanSet()) \u003cspan class=\"comment\"\u003e//false,false\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\t\u003cspan class=\"keyword\"\u003evar\u003c/span\u003e x12 = S{}\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\tv = reflect.Indirect(reflect.ValueOf(\u0026amp;x12))\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\tfmt.Printf(\u003cspan class=\"string\"\u003e\u0026#34;x12: %v \\tcan be addressable and set: %t, %t\\n\u0026#34;\u003c/span\u003e, x12, v.CanAddr(), v.CanSet()) \u003cspan class=\"comment\"\u003e//true,true\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\t\u003cspan class=\"keyword\"\u003evar\u003c/span\u003e x13 = S{}\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\tv = reflect.ValueOf(x13).FieldByName(\u003cspan class=\"string\"\u003e\u0026#34;X\u0026#34;\u003c/span\u003e)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\tfmt.Printf(\u003cspan class=\"string\"\u003e\u0026#34;x13: %v \\tcan be addressable and set: %t, %t\\n\u0026#34;\u003c/span\u003e, x13, v.CanAddr(), v.CanSet()) \u003cspan class=\"comment\"\u003e//false,false\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\t\u003cspan class=\"keyword\"\u003evar\u003c/span\u003e x14 = S{}\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\tv = reflect.Indirect(reflect.ValueOf(\u0026amp;x14)).FieldByName(\u003cspan class=\"string\"\u003e\u0026#34;X\u0026#34;\u003c/span\u003e)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\tfmt.Printf(\u003cspan class=\"string\"\u003e\u0026#34;x14: %v \\tcan be addressable and set: %t, %t\\n\u0026#34;\u003c/span\u003e, x14, v.CanAddr(), v.CanSet()) \u003cspan class=\"comment\"\u003e//true,true\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\t\u003cspan class=\"keyword\"\u003evar\u003c/span\u003e x15 = S{}\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\tv = reflect.Indirect(reflect.ValueOf(\u0026amp;x15)).FieldByName(\u003cspan class=\"string\"\u003e\u0026#34;z\u0026#34;\u003c/span\u003e)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\tfmt.Printf(\u003cspan class=\"string\"\u003e\u0026#34;x15: %v \\tcan be addressable and set: %t, %t\\n\u0026#34;\u003c/span\u003e, x15, v.CanAddr(), v.CanSet()) \u003cspan class=\"comment\"\u003e//true,false\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\tv = reflect.Indirect(reflect.ValueOf(\u0026amp;S{}))\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\tfmt.Printf(\u003cspan class=\"string\"\u003e\u0026#34;x15.1: %v \\tcan be addressable and set: %t, %t\\n\u0026#34;\u003c/span\u003e, \u0026amp;S{}, v.CanAddr(), v.CanSet()) \u003cspan class=\"comment\"\u003e//true,true\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\t\u003cspan class=\"keyword\"\u003evar\u003c/span\u003e x16 = M\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\tv = reflect.ValueOf(x16)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\tfmt.Printf(\u003cspan class=\"string\"\u003e\u0026#34;x16: %p \\tcan be addressable and set: %t, %t\\n\u0026#34;\u003c/span\u003e, x16, v.CanAddr(), v.CanSet()) \u003cspan class=\"comment\"\u003e//false,false\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\t\u003cspan class=\"keyword\"\u003evar\u003c/span\u003e x17 = M\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\tv = reflect.Indirect(reflect.ValueOf(\u0026amp;x17))\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\tfmt.Printf(\u003cspan class=\"string\"\u003e\u0026#34;x17: %p \\tcan be addressable and set: %t, %t\\n\u0026#34;\u003c/span\u003e, x17, v.CanAddr(), v.CanSet()) \u003cspan class=\"comment\"\u003e//true,true\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\t\u003cspan class=\"keyword\"\u003evar\u003c/span\u003e x18 \u003cspan class=\"keyword\"\u003einterface\u003c/span\u003e{} = \u0026amp;x11\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\tv = reflect.ValueOf(x18)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\tfmt.Printf(\u003cspan class=\"string\"\u003e\u0026#34;x18: %v \\tcan be addressable and set: %t, %t\\n\u0026#34;\u003c/span\u003e, x18, v.CanAddr(), v.CanSet()) \u003cspan class=\"comment\"\u003e//false,false\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\t\u003cspan class=\"keyword\"\u003evar\u003c/span\u003e x19 \u003cspan class=\"keyword\"\u003einterface\u003c/span\u003e{} = \u0026amp;x11\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\tv = reflect.ValueOf(x19).Elem()\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\tfmt.Printf(\u003cspan class=\"string\"\u003e\u0026#34;x19: %v \\tcan be addressable and set: %t, %t\\n\u0026#34;\u003c/span\u003e, x19, v.CanAddr(), v.CanSet()) \u003cspan class=\"comment\"\u003e//true,true\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\t\u003cspan class=\"keyword\"\u003evar\u003c/span\u003e x20 = [...]\u003cspan class=\"type\"\u003eint\u003c/span\u003e{\u003cspan class=\"number\"\u003e1\u003c/span\u003e, \u003cspan class=\"number\"\u003e2\u003c/span\u003e, \u003cspan class=\"number\"\u003e3\u003c/span\u003e}\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\tv = reflect.ValueOf([...]\u003cspan class=\"type\"\u003eint\u003c/span\u003e{\u003cspan class=\"number\"\u003e1\u003c/span\u003e, \u003cspan class=\"number\"\u003e2\u003c/span\u003e, \u003cspan class=\"number\"\u003e3\u003c/span\u003e})\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\tfmt.Printf(\u003cspan class=\"string\"\u003e\u0026#34;x20: %v \\tcan be addressable and set: %t, %t\\n\u0026#34;\u003c/span\u003e, x20, v.CanAddr(), v.CanSet()) \u003cspan class=\"comment\"\u003e//false,false\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e}\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\n\n\n\n\u003ch3 id=\"参考文章\"\u003e\u003ca href=\"#参考文章\" class=\"headerlink\" title=\"参考文章:\"\u003e\u003c/a\u003e\u003cstrong\u003e参考文章:\u003c/strong\u003e\u003c/h3\u003e\u003cblockquote\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca target=\"_blank\" rel=\"noopener\" href=\"https://colobu.com/2018/02/27/go-addressable/\"\u003ehttps://colobu.com/2018/02/27/go-addressable/\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca target=\"_blank\" rel=\"noopener\" href=\"http://www.tapirgames.com/blog/golang-unofficial-faq#unaddressable-values\"\u003ehttp://www.tapirgames.com/blog/golang-unofficial-faq#unaddressable-values\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca target=\"_blank\" rel=\"noopener\" href=\"https://blog.golang.org/laws-of-reflection\"\u003ehttps://blog.golang.org/laws-of-reflection\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca target=\"_blank\" rel=\"noopener\" href=\"https://stackoverflow.com/questions/25384640/why-golang-reflect-makeslice-returns-un-addressable-value\"\u003ehttps://stackoverflow.com/questions/25384640/why-golang-reflect-makeslice-returns-un-addressable-value\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca target=\"_blank\" rel=\"noopener\" href=\"http://grokbase.com/t/gg/golang-nuts/13bwpzedxh/go-nuts-golang-reflect-addressable-is-not-consistency\"\u003ehttp://grokbase.com/t/gg/golang-nuts/13bwpzedxh/go-nuts-golang-reflect-addressable-is-not-consistency\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca target=\"_blank\" rel=\"noopener\" href=\"https://github.com/golang/go/issues/11865\"\u003ehttps://github.com/golang/go/issues/11865\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca target=\"_blank\" rel=\"noopener\" href=\"https://stackoverflow.com/questions/20224478/dereferencing-a-map-index-in-golang\"\u003ehttps://stackoverflow.com/questions/20224478/dereferencing-a-map-index-in-golang\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca target=\"_blank\" rel=\"noopener\" href=\"https://stackoverflow.com/questions/38168329/why-are-map-values-not-addressable\"\u003ehttps://stackoverflow.com/questions/38168329/why-are-map-values-not-addressable\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca target=\"_blank\" rel=\"noopener\" href=\"https://stackoverflow.com/questions/40793289/go-struct-literals-why-is-this-one-addressable\"\u003ehttps://stackoverflow.com/questions/40793289/go-struct-literals-why-is-this-one-addressable\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca target=\"_blank\" rel=\"noopener\" href=\"https://groups.google.com/forum/#!topic/golang-nuts/FnTCX9R_PbM\"\u003ehttps://groups.google.com/forum/#!topic/golang-nuts/FnTCX9R_PbM\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca target=\"_blank\" rel=\"noopener\" href=\"https://stackoverflow.com/questions/24318389/golang-elem-vs-indirect-in-the-reflect-package\"\u003ehttps://stackoverflow.com/questions/24318389/golang-elem-vs-indirect-in-the-reflect-package\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/blockquote\u003e\n\n      \n    \u003c/div\u003e",
  "Date": "2019-10-20T13:30:53+08:00",
  "Author": "Z.S.K."
}