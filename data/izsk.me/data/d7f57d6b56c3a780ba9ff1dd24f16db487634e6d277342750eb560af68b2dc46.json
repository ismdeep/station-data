{
  "Source": "izsk.me",
  "Title": "做黑盒监控引发的思考",
  "Link": "https://izsk.me/2019/10/06/how-to-do-blackbox-monitor/",
  "Content": "\u003cdiv class=\"post-body\" itemprop=\"articleBody\"\u003e\n\n      \n      \n\n      \n        \u003cp\u003e经常听到运维前辈说到方法论这个词, 之前觉得很高深, 后来想想, 其实也就是经验多了, 把对某类事务的处理沉淀或者抽象为一种统一的方法. 就像下面我要说一个例子来讲一讲\u003c/p\u003e\n\u003cspan id=\"more\"\u003e\u003c/span\u003e\n\n\n\n\u003cp\u003e线上有个基于gitlab二次开发的使用的模块要正式应用到公有云环境, 做为sre，如何对gitlab的\u003ccode\u003eclone --\u0026gt; commit --\u0026gt; push\u003c/code\u003e进行黑盒监控?\u003c/p\u003e\n\u003cp\u003e当然, 可以通过gitlab本身的一些性能指标进行采集分析, 但这些性能指标可能是分散的, 无法准确地反应clone –\u0026gt; commit –\u0026gt;push这条操作是否存在异常, 那么更好的办法就是模拟这3个操作, 不间断地对gitlab进行改操作, 如果gitlab在某个环节出现问题导致命令不成功, 则必然会产生报警.\u003c/p\u003e\n\u003ch3 id=\"监控目的\"\u003e\u003ca href=\"#监控目的\" class=\"headerlink\" title=\"监控目的\"\u003e\u003c/a\u003e监控目的\u003c/h3\u003e\u003cp\u003e实现对gitlab的黑盒监控\u003c/p\u003e\n\u003ch3 id=\"实现流程\"\u003e\u003ca href=\"#实现流程\" class=\"headerlink\" title=\"实现流程\"\u003e\u003c/a\u003e实现流程\u003c/h3\u003e\u003col\u003e\n\u003cli\u003e在gitlab上新建一个监控使用git仓库, 用于不断操作\u003c/li\u003e\n\u003cli\u003egit clone该仓库, 验证是否正常\u003c/li\u003e\n\u003cli\u003egit add 一个时间戳文件, 然后使用git commit进行提示, 验证是否正常\u003c/li\u003e\n\u003cli\u003egit push到仓库, 验证是否正常\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003e如果在预设的超时时间(当然，这个时间由运维根据情况而定, 跟gitlab性能有一定关系)内这几个步骤都没问题的话,那基本上可以说gitla服务是正常 \u003c/p\u003e\n\u003ch3 id=\"伪代码\"\u003e\u003ca href=\"#伪代码\" class=\"headerlink\" title=\"伪代码\"\u003e\u003c/a\u003e伪代码\u003c/h3\u003e\u003cfigure class=\"highlight bash\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e8\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e9\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e10\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e11\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e12\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e13\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e14\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e15\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e16\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e17\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e18\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e19\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e20\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e21\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e22\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e23\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e24\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e25\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e26\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e27\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e28\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e29\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e30\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e31\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e32\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e33\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e34\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e#!/bin/bash\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"built_in\"\u003ecd\u003c/span\u003e \u003cspan class=\"string\"\u003e\u0026#34;\u003cspan class=\"subst\"\u003e$(dirname $0)\u003c/span\u003e\u0026#34;\u003c/span\u003e || \u003cspan class=\"built_in\"\u003eexit\u003c/span\u003e 1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eWORKSPACE=\u003cspan class=\"string\"\u003e\u0026#34;\u003cspan class=\"subst\"\u003e$(pwd)\u003c/span\u003e\u0026#34;\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eGIT_URL=\u003cspan class=\"string\"\u003e\u0026#34;\u003ca href=\"/cdn-cgi/l/email-protection\" class=\"__cf_email__\" data-cfemail=\"adcac4d9edcec2c9c880cec2c0c0c4d980d9ddc0c2c3c4d9c2df80ccd8d9c283cac4d9\"\u003e[email protected]\u003c/a\u003e\u0026#34;\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eTIME_OUT=5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"keyword\"\u003efunction\u003c/span\u003e \u003cspan class=\"function\"\u003e\u003cspan class=\"title\"\u003echeck_gitstatus\u003c/span\u003e\u003c/span\u003e(){\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    start_time=$(\u003cspan class=\"built_in\"\u003edate\u003c/span\u003e +%s)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"built_in\"\u003etimeout\u003c/span\u003e \u003cspan class=\"variable\"\u003e$TIME_OUT\u003c/span\u003e \\\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    git \u003cspan class=\"built_in\"\u003eclone\u003c/span\u003e \u003cspan class=\"variable\"\u003e$GIT_URL\u003c/span\u003e \u0026gt; \u003cspan class=\"variable\"\u003e$WORKSPACE\u003c/span\u003e/git_clone.log 2\u0026gt;\u0026amp;1 \u0026amp;\u0026amp; \\\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"built_in\"\u003ecd\u003c/span\u003e \u003cspan class=\"variable\"\u003e$WORKSPACE\u003c/span\u003e/code-commit-tpmonitor-auto \u0026amp;\u0026amp; \\\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    [ -f \u003cspan class=\"variable\"\u003e$WORKSPACE\u003c/span\u003e/code-commit-tpmonitor-auto/timestamps.time ] \u0026amp;\u0026amp; \\\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    gap=$(\u003cspan class=\"built_in\"\u003ecat\u003c/span\u003e timestamps.time) \u0026amp;\u0026amp; \\\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"built_in\"\u003eecho\u003c/span\u003e \u003cspan class=\"variable\"\u003e${start_time}\u003c/span\u003e \u0026gt; timestamps.time \u0026amp;\u0026amp; \\\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    git add timestamps.time \u0026amp;\u0026amp; \\\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    git commit -m \u003cspan class=\"string\"\u003e\u0026#34;\u003cspan class=\"variable\"\u003e${start_time}\u003c/span\u003e\u0026#34;\u003c/span\u003e \u0026gt; \u003cspan class=\"variable\"\u003e$WORKSPACE\u003c/span\u003e/git_commit.log 2\u0026gt;\u0026amp;1 \u0026amp;\u0026amp; \\\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    git push \u0026gt; \u003cspan class=\"variable\"\u003e$WORKSPACE\u003c/span\u003e/git_push.log 2\u0026gt;\u0026amp;1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"keyword\"\u003eif\u003c/span\u003e [ \u003cspan class=\"string\"\u003e\u0026#34;$?\u0026#34;\u003c/span\u003e -eq \u003cspan class=\"string\"\u003e\u0026#34;0\u0026#34;\u003c/span\u003e ]; \u003cspan class=\"keyword\"\u003ethen\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        \u003cspan class=\"built_in\"\u003eecho\u003c/span\u003e \u003cspan class=\"string\"\u003e\u0026#34;gap_time:$[\u003cspan class=\"variable\"\u003e${start_time}\u003c/span\u003e-\u003cspan class=\"variable\"\u003e${gap}\u003c/span\u003e]\u0026#34;\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        \u003cspan class=\"built_in\"\u003eecho\u003c/span\u003e \u003cspan class=\"string\"\u003e\u0026#34;run_time:$[\u003cspan class=\"subst\"\u003e$(date +%s)\u003c/span\u003e-\u003cspan class=\"variable\"\u003e${start_time}\u003c/span\u003e]\u0026#34;\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        \u003cspan class=\"built_in\"\u003erm\u003c/span\u003e -rf \u003cspan class=\"variable\"\u003e$WORKSPACE\u003c/span\u003e/code-commit-tpmonitor-auto \u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        \u003cspan class=\"built_in\"\u003eecho\u003c/span\u003e rnt:0\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"keyword\"\u003eelse\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        \u003cspan class=\"built_in\"\u003eecho\u003c/span\u003e rnt:1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"keyword\"\u003efi\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e}\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"keyword\"\u003efunction\u003c/span\u003e \u003cspan class=\"function\"\u003e\u003cspan class=\"title\"\u003emain\u003c/span\u003e\u003c/span\u003e(){\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"built_in\"\u003erm\u003c/span\u003e -rf \u003cspan class=\"variable\"\u003e$WORKSPACE\u003c/span\u003e/code-commit-tpmonitor-auto\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    check_gitstatus\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e}\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003emain \u003cspan class=\"string\"\u003e\u0026#34;\u003cspan class=\"variable\"\u003e$@\u003c/span\u003e\u0026#34;\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\n\n\u003cp\u003e有人可能会好奇为何需要计算一个\u003ccode\u003egap_time\u003c/code\u003e,这其实也是在监控gitlab的一个性能\u003c/p\u003e\n\u003cp\u003e想像这么一种情况, 使用git clone下来的文件如果不是我上一次push的, 那么其实也是有问题, 有可能是push虽然成功了, 但接着使用clone时发现clone下来的文件居然没有包含上次push的文件, 那么就有可能gitlab来不及处理海量的小文件导致出现性能问题.\u003c/p\u003e\n\u003cp\u003e通过计算一个gap_time是非常有必要了, 每一次都push一个文件, 这个文件非常简单, 只包含一行时间戳, 在下一次clone下来时用当前时间跟这个文件里的时间戳进行比较, 假如这个脚本每隔5分钟运行一次, 那么这个这个时间差值一定会在5分钟左右, 那么就可以添加一个报警规则: 这个时间差如果超过6分钟, 则说明有问题.\u003c/p\u003e\n\u003cp\u003e通过添加一个这样的监控脚本, 稳定运行一年多的时间内成功地提前发现了几次gitlab故障, 及时处理后并没有影响客户.\u003c/p\u003e\n\u003cp\u003e这里要注意一点的是, 开始这个脚本是每次都是新生成的时间戳文件, 一直都在push, 会造成这个仓库的文件越来越多, 因此时间久了之后, git clone的时间会变长, 出现过几次命令执行时间超过timeout的值而造成的误报, 而gitlab本身是没有问题的， 所以后来不提交新的文件, 从始至终仓库里只有一个文件, 文件内的时间戳不一样，就是现在的版本\u003c/p\u003e\n\u003cp\u003e另外还有一个使用的例子是线上的\u003ccode\u003e实时日志搜索\u003c/code\u003e模块的监控, 同样是采用了这个策略, 添加一个额外的时间戳字段来反应日志搜索是否达到实时.\u003c/p\u003e\n\u003cp\u003e另外, 黑盒监控还会使用到Prometheus的blackbox来做, 但如果是比较复杂的涉及多个业务流程的话, blackbox的支持还是比较难适配的, 所以blackbox一般都用在单一接口的监控上.\u003c/p\u003e\n\u003cp\u003e所以有时候是需要使用一种不常规的方式来配合做到业务稳定性, 方法论里面的思想还是很有帮助的.\u003c/p\u003e\n\u003ch3 id=\"参考文章\"\u003e\u003ca href=\"#参考文章\" class=\"headerlink\" title=\"参考文章:\"\u003e\u003c/a\u003e\u003cstrong\u003e参考文章:\u003c/strong\u003e\u003c/h3\u003e\u003ch3 id=\"转载请注明原作者-周淑科-https-izsk-me\"\u003e\u003ca href=\"#转载请注明原作者-周淑科-https-izsk-me\" class=\"headerlink\" title=\"转载请注明原作者: 周淑科(https://izsk.me)\"\u003e\u003c/a\u003e\u003cstrong\u003e转载请注明原作者: 周淑科(\u003ca target=\"_blank\" rel=\"noopener\" href=\"https://izsk.me/\"\u003ehttps://izsk.me\u003c/a\u003e)\u003c/strong\u003e\u003c/h3\u003e\n      \n    \u003c/div\u003e",
  "Date": "2019-10-06T21:10:53+08:00",
  "Author": "Z.S.K."
}