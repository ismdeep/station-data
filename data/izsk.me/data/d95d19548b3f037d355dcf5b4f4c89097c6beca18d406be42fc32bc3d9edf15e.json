{
  "Source": "izsk.me",
  "Title": "Istio学习(使用jaeger实现grpc-gateway全链路追踪)",
  "Link": "https://izsk.me/2020/02/21/grpc-gateway-with-opentracing/",
  "Content": "\u003cdiv class=\"post-body\" itemprop=\"articleBody\"\u003e\n\n      \n      \n\n      \n        \u003cp\u003e一直想把istio引入到业务中, 前期调研实操中发现istio完美解决了grpc在kubernetes中的负载均衡\u003ca target=\"_blank\" rel=\"noopener\" href=\"https://izsk.me/2020/02/18/grpc-gateway-loadbalance-on-kubernetes-and-istio/\"\u003e问题\u003c/a\u003e, 这次学习一下opentracing在istio中的应用, 这里主要是想看grpc-gateway的调用，目前业务中用的最多, 当然tcp就更没问题.\u003c/p\u003e\n\u003cspan id=\"more\"\u003e\u003c/span\u003e\n\n\u003cp\u003efork了一个大神的\u003ca target=\"_blank\" rel=\"noopener\" href=\"https://github.com/garystafford/k8s-istio-observe-backend\"\u003edemo\u003c/a\u003e, 精简了部分流程, 把在google cloud上环境的搭建去除了，同时将grpc-gateway部分的代码改了,fork的源码中把grpc-gateway单独写成一个模块提供服务, 这里改成了跟真正的服务结合在一起，少一层中转, github在\u003ca target=\"_blank\" rel=\"noopener\" href=\"https://github.com/zhoushuke/grpc-gateway-with-opentracing.git\"\u003e这里\u003c/a\u003e\u003c/p\u003e\n\u003ch3 id=\"流程\"\u003e\u003ca href=\"#流程\" class=\"headerlink\" title=\"流程\"\u003e\u003c/a\u003e流程\u003c/h3\u003e\u003cp\u003e这个demo里涉及三个服务:\u003c/p\u003e\n\u003cp\u003e​             —————————————————————-\u003c/p\u003e\n\u003cp\u003ecurl == |\u003cstrong\u003e(grpc-gateway) http\u003c/strong\u003e ==\u0026gt; service-a == grpc| ==\u0026gt; service-c == tcp ==\u0026gt; mongodb\u003c/p\u003e\n\u003cp\u003e​              —————————————————————-\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003eservice-a服务中整合了grpc-gateway服务, 暴露出8088 http接口, 通过8088端口转到 grpc 50051端口调用 service-c\u003c/code\u003e\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003eservice-c 通过tcp调用mongodb写入数据\u003c/code\u003e\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003e这里直接使用命令行curl service-a的8088端口\u003c/code\u003e\u003c/p\u003e\n\u003cp\u003egrpc-gateway的实现过程可参考\u003ca target=\"_blank\" rel=\"noopener\" href=\"https://blog.csdn.net/dapangzi88/article/details/63686334\"\u003e这里\u003c/a\u003e\u003c/p\u003e\n\u003ch3 id=\"前提\"\u003e\u003ca href=\"#前提\" class=\"headerlink\" title=\"前提\"\u003e\u003c/a\u003e前提\u003c/h3\u003e\u003cp\u003e需要一个kubernetes集群,部署了istio及开启了jaeger和kiali, 这部分不在这里展开. 可参考\u003ca target=\"_blank\" rel=\"noopener\" href=\"https://izsk.me/2020/01/03/Istio-Install-Upon-Kubernetes/\"\u003e这里\u003c/a\u003e\u003c/p\u003e\n\u003ch3 id=\"部署\"\u003e\u003ca href=\"#部署\" class=\"headerlink\" title=\"部署\"\u003e\u003c/a\u003e部署\u003c/h3\u003e\u003ch4 id=\"编译镜像\"\u003e\u003ca href=\"#编译镜像\" class=\"headerlink\" title=\"编译镜像\"\u003e\u003c/a\u003e编译镜像\u003c/h4\u003e\u003cfigure class=\"highlight bash\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"built_in\"\u003ecd\u003c/span\u003e grpc-gateway-with-opentracing/services\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003ebash build_images.sh\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003ch4 id=\"发布\"\u003e\u003ca href=\"#发布\" class=\"headerlink\" title=\"发布\"\u003e\u003c/a\u003e发布\u003c/h4\u003e\u003cfigure class=\"highlight bash\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"built_in\"\u003ecd\u003c/span\u003e grpc-gateway-with-opentracing/deployments\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003ekubectl apply -f namespaces/middle.yaml\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003ekubectl apply -f secrets/go-srv-demo.yaml\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003ekubectl apply -f yaml/*\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"comment\"\u003e#其中, mongodb使用到的用户名及密码为forguest:VnximZWwED， 端口27017\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e这里为了方便， mongodb数据库没有使用持久卷, 数据库启动之后连接mongodb进行用户授权, \u003c/p\u003e\n\u003cp\u003e安装mongo shell 命令行工具, ubuntu下进行以下操作\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003e注意: 使用的mongodb server为4.2的版本, 请安装对应版本的客户端,不然问题一大堆\u003c/strong\u003e\u003c/p\u003e\n\u003cfigure class=\"highlight bash\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003ewget -qO - https://www.mongodb.org/static/pgp/server-4.2.asc | sudo apt-key add -\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"built_in\"\u003eecho\u003c/span\u003e \u003cspan class=\"string\"\u003e\u0026#34;deb [ arch=amd64 ] https://repo.mongodb.org/apt/ubuntu xenial/mongodb-org/4.2 multiverse\u0026#34;\u003c/span\u003e | sudo \u003cspan class=\"built_in\"\u003etee\u003c/span\u003e /etc/apt/sources.list.d/mongodb-org-4.2.list\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003esudo apt-get update\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eapt-get install -y mongodb-org-shell\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cfigure class=\"highlight bash\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003euse admin;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003edb.createUser({user: \u003cspan class=\"string\"\u003e\u0026#34;forguest\u0026#34;\u003c/span\u003e , \u003cspan class=\"built_in\"\u003epwd\u003c/span\u003e: \u003cspan class=\"string\"\u003e\u0026#34;VnximZWwED\u0026#34;\u003c/span\u003e, roles: [  \u003cspan class=\"string\"\u003e\u0026#34;userAdminAnyDatabase\u0026#34;\u003c/span\u003e,\u003cspan class=\"string\"\u003e\u0026#34;readWriteAnyDatabase\u0026#34;\u003c/span\u003e ]})\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\n\n\u003ch3 id=\"测试\"\u003e\u003ca href=\"#测试\" class=\"headerlink\" title=\"测试\"\u003e\u003c/a\u003e测试\u003c/h3\u003e\u003cp\u003e使用以下命令进行测试, 请对应替换service-a的集群ip.\u003c/p\u003e\n\u003cfigure class=\"highlight bash\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"keyword\"\u003efor\u003c/span\u003e x \u003cspan class=\"keyword\"\u003ein\u003c/span\u003e $(\u003cspan class=\"built_in\"\u003eseq\u003c/span\u003e 1 100);\u003cspan class=\"keyword\"\u003edo\u003c/span\u003e \u003cspan class=\"built_in\"\u003esleep\u003c/span\u003e 5;curl -H\u003cspan class=\"string\"\u003e\u0026#39;Content-Type: application/json\u0026#39;\u003c/span\u003e \u003cspan class=\"string\"\u003e\u0026#39;your-service-a-svc-clusterIP:8088/api/v1/greeting\u0026#39;\u003c/span\u003e;\u003cspan class=\"keyword\"\u003edone\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003eJaeger效果如下:\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/zhoushuke/BlogPhoto/master/githuboss/20200221174553.png\"/\u003e\u003c/p\u003e\n\u003cp\u003ekialiu效果如下:\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/zhoushuke/BlogPhoto/master/githuboss/20200221174801.png\"/\u003e\u003c/p\u003e\n\u003ch3 id=\"Opentracing分析\"\u003e\u003ca href=\"#Opentracing分析\" class=\"headerlink\" title=\"Opentracing分析\"\u003e\u003c/a\u003eOpentracing分析\u003c/h3\u003e\u003cp\u003e在grpc-agteway-with-opentracing.go代码中, 定义了如下对象, \u003c/p\u003e\n\u003cfigure class=\"highlight go\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e8\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e9\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e10\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"keyword\"\u003evar\u003c/span\u003e (\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        otHeaders = []\u003cspan class=\"type\"\u003estring\u003c/span\u003e{\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e                \u003cspan class=\"string\"\u003e\u0026#34;x-request-id\u0026#34;\u003c/span\u003e,\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e                \u003cspan class=\"string\"\u003e\u0026#34;x-b3-traceid\u0026#34;\u003c/span\u003e,\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e                \u003cspan class=\"string\"\u003e\u0026#34;x-b3-spanid\u0026#34;\u003c/span\u003e,\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e                \u003cspan class=\"string\"\u003e\u0026#34;x-b3-parentspanid\u0026#34;\u003c/span\u003e,\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e                \u003cspan class=\"string\"\u003e\u0026#34;x-b3-sampled\u0026#34;\u003c/span\u003e,\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e                \u003cspan class=\"string\"\u003e\u0026#34;x-b3-flags\u0026#34;\u003c/span\u003e,\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e                \u003cspan class=\"string\"\u003e\u0026#34;x-ot-span-context\u0026#34;\u003c/span\u003e}\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e)\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e在grpc调用时， istio会做如下的操作:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eInbound 流量：对于经过 Sidecar 流入应用程序的流量，如果经过 Sidecar 时 Header 中没有任何跟踪相关的信息，则会在创建一个根 Span，TraceId 就是这个 SpanId，然后再将请求传递给业务容器的服务；如果请求中包含 Trace 相关的信息，则 Sidecar 从中提取 Trace 的上下文信息并发给应用程序。\u003c/li\u003e\n\u003cli\u003eOutbound 流量：对于经过 Sidecar 流出的流量，如果经过 Sidecar 时 Header 中没有任何跟踪相关的信息，则会创建根 Span，并将该跟 Span 相关上下文信息放在请求头中传递给下一个调用的服务；当存在 Trace 信息时，Sidecar 从 Header 中提取 Span 相关信息，并基于这个 Span 创建子 Span，并将新的 Span 信息加在请求头中传递\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e总结就是: \u003cstrong\u003e每一次的调用, istio都会将请求中的header进行解析, 看header中是否包含上面声明的变量,如果不存在, 则创建一个root span, 如果存在, 则将spanid做为自己的parentid,如果还有调用, 则依次这样传递下去\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003e可以来看一下jaeger上的header信息:\u003c/p\u003e\n\u003cp\u003e首先，每一次请求istio都会生成一个唯一的\u003cstrong\u003etraceID(x-b3-traceid)及requestID(x-request-id)\u003c/strong\u003e, 这两个值在这次请求中不管经过几个服务都不会改变, 这样就能够通过这者查询出这次请求所经过的服务有哪一些，但是这两者无法确定经过的服务间的顺序是怎样的, 所以必须看\u003cstrong\u003ex-b3-spanid及x-b3-parentspanid\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/zhoushuke/BlogPhoto/master/githuboss/20200221180136.png\"/\u003e\u003c/p\u003e\n\u003cp\u003e从上图可以看出service-a(根请求)的spanID为traceID的后16位, 再通过这个spanID，可以看到\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/zhoushuke/BlogPhoto/master/githuboss/20200221180419.png\"/\u003e\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003e8932e8b49bbddf3a\u003c/code\u003e 为\u003ccode\u003ec78400f5fce93775\u003c/code\u003e的 \u003ccode\u003echild_of\u003c/code\u003e即孩子span\u003c/p\u003e\n\u003cp\u003e通过这种父子关系就可以很容易确定谁调用谁，再结合traceID或者RequestID(通常这两者一样)的唯一性就能够定位所有调用过的服务了. \u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003e从上面也可以看出, 要使用jaeger实现全链路监控,还是需要业务代码做集成,, 尽管istio帮我们在业务上做了很多的事情, 但目前像上面的例子需要加入header的部分istio无法实现，因为它不知道service-a会去调用哪个服务. 当然 ，以后这部分的coding会越来越少\u003c/strong\u003e\u003c/p\u003e\n\u003ch3 id=\"参考文章\"\u003e\u003ca href=\"#参考文章\" class=\"headerlink\" title=\"参考文章:\"\u003e\u003c/a\u003e\u003cstrong\u003e参考文章:\u003c/strong\u003e\u003c/h3\u003e\u003cblockquote\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca target=\"_blank\" rel=\"noopener\" href=\"https://blog.csdn.net/dapangzi88/article/details/63686334\"\u003ehttps://blog.csdn.net/dapangzi88/article/details/63686334\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca target=\"_blank\" rel=\"noopener\" href=\"https://github.com/garystafford/k8s-istio-observe-backend\"\u003ehttps://github.com/garystafford/k8s-istio-observe-backend\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca target=\"_blank\" rel=\"noopener\" href=\"https://izsk.me/2020/02/18/grpc-gateway-loadbalance-on-kubernetes-and-istio/\"\u003ehttps://izsk.me/2020/02/18/grpc-gateway-loadbalance-on-kubernetes-and-istio/\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca target=\"_blank\" rel=\"noopener\" href=\"https://github.com/zhoushuke/grpc-gateway-with-opentracing\"\u003ehttps://github.com/zhoushuke/grpc-gateway-with-opentracing\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca target=\"_blank\" rel=\"noopener\" href=\"https://izsk.me/2020/01/03/Istio-Install-Upon-Kubernetes/\"\u003ehttps://izsk.me/2020/01/03/Istio-Install-Upon-Kubernetes/\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca target=\"_blank\" rel=\"noopener\" href=\"https://www.infoq.cn/article/pqy*PFPhox9OQQ9iCRTt\"\u003ehttps://www.infoq.cn/article/pqy*PFPhox9OQQ9iCRTt\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/blockquote\u003e\n\u003ch3 id=\"转载请注明原作者-周淑科-https-izsk-me\"\u003e\u003ca href=\"#转载请注明原作者-周淑科-https-izsk-me\" class=\"headerlink\" title=\"转载请注明原作者: 周淑科(https://izsk.me)\"\u003e\u003c/a\u003e\u003cstrong\u003e转载请注明原作者: 周淑科(\u003ca target=\"_blank\" rel=\"noopener\" href=\"https://izsk.me/\"\u003ehttps://izsk.me\u003c/a\u003e)\u003c/strong\u003e\u003c/h3\u003e\n      \n    \u003c/div\u003e",
  "Date": "2020-02-21T16:10:53+08:00",
  "Author": "Z.S.K."
}