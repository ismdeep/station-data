{
  "Source": "izsk.me",
  "Title": "argoCD学习(使用argoCD实现多集群应用同步)",
  "Link": "https://izsk.me/2020/12/04/argoCD-Usage/",
  "Content": "\u003cdiv class=\"post-body\" itemprop=\"articleBody\"\u003e\n\n      \n      \n\n      \n        \u003cp\u003e运维中经常会存在多套的环境，开发、测试、stagging、prod等，这么多的环境，对于开发同学，如何通过一次部署多环境上线，打通开发与测试间的gap，而对于运维同学来说，则关心如何保障环境之间应用版本一致，而argoCD就是这样一个工具，配合GitOps思路，可以实现对多集群的应用版本管理.\u003c/p\u003e\n\u003cspan id=\"more\"\u003e\u003c/span\u003e\n\n\u003ch3 id=\"argoCD\"\u003e\u003ca href=\"#argoCD\" class=\"headerlink\" title=\"argoCD\"\u003e\u003c/a\u003eargoCD\u003c/h3\u003e\u003cp\u003eDeclarative GitOps CD for Kubernetes\u003c/p\u003e\n\u003cp\u003e官方的说明很简单，为k8s提供GitOps能力\u003c/p\u003e\n\u003ch3 id=\"原理\"\u003e\u003ca href=\"#原理\" class=\"headerlink\" title=\"原理\"\u003e\u003c/a\u003e原理\u003c/h3\u003e\u003cp\u003e\u003cimg src=\"https://argoproj.github.io/argo-cd/assets/argocd_architecture.png\" alt=\"架构图\"/\u003e\u003c/p\u003e\n\u003cp\u003e上面是官方的提供的架构图, 可以很清晰的看到argocd的工作机制.\u003c/p\u003e\n\u003cp\u003eargoCD通过发布到k8s的crd控制器连续监视正在运行的应用程序,并将当前的活动状态与所需的目标状态（在Git存储库中指定）进行比较\u003c/p\u003e\n\u003cp\u003e下面就从一个demo来体验一下，先从安装开始\u003c/p\u003e\n\u003ch3 id=\"安装\"\u003e\u003ca href=\"#安装\" class=\"headerlink\" title=\"安装\"\u003e\u003c/a\u003e安装\u003c/h3\u003e\u003ch4 id=\"在线安装\"\u003e\u003ca href=\"#在线安装\" class=\"headerlink\" title=\"在线安装\"\u003e\u003c/a\u003e在线安装\u003c/h4\u003e\u003cfigure class=\"highlight bash\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003ekubectl create namespace argocd\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003ekubectl apply -n argocd -f https://raw.githubusercontent.com/argoproj/argo-cd/stable/manifests/install.yaml\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003ch4 id=\"helm安装\"\u003e\u003ca href=\"#helm安装\" class=\"headerlink\" title=\"helm安装\"\u003e\u003c/a\u003ehelm安装\u003c/h4\u003e\u003cfigure class=\"highlight bash\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e8\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e9\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e10\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e11\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e12\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e13\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e14\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003ehelm repo add argo https://argoproj.github.io/argo-helm\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003ehelm install argocd -n argocd argo/argo-cd --values values.yaml\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"comment\"\u003e# cat values.yaml,可以在安装的时候就指定使用ingress\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eserver:\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  ingress:\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    enabled: \u003cspan class=\"literal\"\u003etrue\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    annotations: \u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e      kubernetes.io/ingress.class: \u003cspan class=\"string\"\u003e\u0026#34;nginx\u0026#34;\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e      nginx.ingress.kubernetes.io/force-ssl-redirect: \u003cspan class=\"string\"\u003e\u0026#34;true\u0026#34;\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e      nginx.ingress.kubernetes.io/ssl-passthrough: \u003cspan class=\"string\"\u003e\u0026#34;true\u0026#34;\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e      nginx.ingress.kubernetes.io/backend-protocol: \u003cspan class=\"string\"\u003e\u0026#34;HTTPS\u0026#34;\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    hosts:\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    - argocd.local\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e所有pod起来之后即可访问web页面\u003c/p\u003e\n\u003cp\u003e默认的用户名为 admin，密码为 server Pod 的名称，可以通过如下所示的命令来获取：\u003c/p\u003e\n\u003cfigure class=\"highlight bash\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e$ kubectl get pods -n argocd -l app.kubernetes.io/name=argocd-server -o name | \u003cspan class=\"built_in\"\u003ecut\u003c/span\u003e -d\u003cspan class=\"string\"\u003e\u0026#39;/\u0026#39;\u003c/span\u003e -f 2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"comment\"\u003e# 可以使用以下命令暴露argocd ui， (不建议)\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003ekubectl port-forward service/argocd-server -n argocd 38888:443\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003ch4 id=\"ingress\"\u003e\u003ca href=\"#ingress\" class=\"headerlink\" title=\"ingress\"\u003e\u003c/a\u003eingress\u003c/h4\u003e\u003cp\u003e添加ingress用于暴露argo cd UI\u003c/p\u003e\n\u003cfigure class=\"highlight bash\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e8\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e9\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e10\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e11\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e12\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e13\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e14\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e15\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e16\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e17\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e18\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e19\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e20\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e21\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e22\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e23\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e24\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e25\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e26\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e27\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003eapiVersion: extensions/v1beta1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003ekind: Ingress\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003emetadata:\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  name: argocd-server-ingress\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  namespace: argocd\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  annotations:\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    cert-manager.io/cluster-issuer: letsencrypt-prod\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    kubernetes.io/ingress.class: nginx\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    kubernetes.io/tls-acme: \u003cspan class=\"string\"\u003e\u0026#34;true\u0026#34;\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    nginx.ingress.kubernetes.io/ssl-passthrough: \u003cspan class=\"string\"\u003e\u0026#34;true\u0026#34;\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"comment\"\u003e# If you encounter a redirect loop or are getting a 307 response code\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"comment\"\u003e# then you need to force the nginx ingress to connect to the backend using HTTPS.\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"comment\"\u003e#\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"comment\"\u003e# nginx.ingress.kubernetes.io/backend-protocol: \u0026#34;HTTPS\u0026#34;\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003espec:\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  rules:\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  - host: argocd.local\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    http:\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e      paths:\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e      - backend:\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e          serviceName: argocd-server\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e          servicePort: https\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        path: /\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  tls:\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  - hosts:\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    - argocd.example.com\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    secretName: argocd-secret \u003cspan class=\"comment\"\u003e# do not change, this is provided by Argo CD\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\n\n\u003ch3 id=\"多集群支持\"\u003e\u003ca href=\"#多集群支持\" class=\"headerlink\" title=\"多集群支持\"\u003e\u003c/a\u003e多集群支持\u003c/h3\u003e\u003cp\u003e目前无法直接在UI上添加其它集群，可使用以下命令添加外部集群，这样就可\u003cstrong\u003e使用一套argoCD来同步到多个集群环境\u003c/strong\u003e\u003c/p\u003e\n\u003cfigure class=\"highlight bash\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e8\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e9\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"comment\"\u003e# 先进行argocd的登录\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eargocd login argocd.example.com:4433 --grpc-web\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"comment\"\u003e# 输入用户名密码即可，出现successfully\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eargocd cluster add mysql-cluster --server \u003cspan class=\"string\"\u003e\u0026#39;argocd.example.com:4433\u0026#39;\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"comment\"\u003e# 出现以下提示则说明添加成功\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eINFO[0000] ServiceAccount \u003cspan class=\"string\"\u003e\u0026#34;argocd-manager\u0026#34;\u003c/span\u003e already exists \u003cspan class=\"keyword\"\u003ein\u003c/span\u003e namespace \u003cspan class=\"string\"\u003e\u0026#34;kube-system\u0026#34;\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eINFO[0000] ClusterRole \u003cspan class=\"string\"\u003e\u0026#34;argocd-manager-role\u0026#34;\u003c/span\u003e updated\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eINFO[0000] ClusterRoleBinding \u003cspan class=\"string\"\u003e\u0026#34;argocd-manager-role-binding\u0026#34;\u003c/span\u003e updated\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eCluster \u003cspan class=\"string\"\u003e\u0026#39;https://xxx.xxx.xxx.xxx:6443\u0026#39;\u003c/span\u003e added\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e那么对于多集群发同步来说，最终实现的效果为:\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"https://www.gitops.tech/images/multiple.png\"/\u003e\u003c/p\u003e\n\u003cp\u003e当然，每个集群的下的应用的触发逻辑可以在CI阶段定义, 这样可以跟测试stag更好地集成,从而实现真正的一次Push，多次发布.\u003c/p\u003e\n\u003ch3 id=\"使用\"\u003e\u003ca href=\"#使用\" class=\"headerlink\" title=\"使用\"\u003e\u003c/a\u003e使用\u003c/h3\u003e\u003cp\u003e通过上面的方式安装完成之后，即可访问argoCD的web页，可以按照不同的环境将app进行分类，同时argocd提供了project的概念, 可以将你认为可以属于同一个project的所有应用划为一类，这样可以避免同一个应用要在多个环境下发布需要多次添加的问题.\u003c/p\u003e\n\u003ch4 id=\"添加Project\"\u003e\u003ca href=\"#添加Project\" class=\"headerlink\" title=\"添加Project\"\u003e\u003c/a\u003e添加Project\u003c/h4\u003e\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/zhoushuke/BlogPhoto/master/githuboss/20201121212553.png\"/\u003e\u003c/p\u003e\n\u003cp\u003e主要的就是sources跟destinations\u003c/p\u003e\n\u003cp\u003esources指定的是git repo的地址，可以添加多个\u003c/p\u003e\n\u003cp\u003edestinations指定集群，也可以指定多个\u003c/p\u003e\n\u003cp\u003e这样添加之后在新增app时即可从project中选择了\u003c/p\u003e\n\u003ch4 id=\"添加Repository\"\u003e\u003ca href=\"#添加Repository\" class=\"headerlink\" title=\"添加Repository\"\u003e\u003c/a\u003e添加Repository\u003c/h4\u003e\u003cp\u003erepository指的是git repo的地址，在发布时argocd会连接到该git上拉取资源, 这里需要提供git的认证方式，常用的为用户名、密码.\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/zhoushuke/BlogPhoto/master/githuboss/20201121211926.png\"/\u003e\u003c/p\u003e\n\u003cp\u003e要注意的是: \u003cstrong\u003erepository URL需要以.gti结尾， 要不然连接的时候会提示301\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003e参考 : \u003ca target=\"_blank\" rel=\"noopener\" href=\"https://argoproj.github.io/argo-cd/user-guide/private-repositories/\"\u003ehttps://argoproj.github.io/argo-cd/user-guide/private-repositories/\u003c/a\u003e\u003c/p\u003e\n\u003ch4 id=\"添加APP\"\u003e\u003ca href=\"#添加APP\" class=\"headerlink\" title=\"添加APP\"\u003e\u003c/a\u003e添加APP\u003c/h4\u003e\u003cp\u003eapp做为GitOps的最小发布单元, 一个app中包含了所有的跟发布相关的资源文件，比如策略，代码，配置，甚至监控事件和版本控制等\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/zhoushuke/BlogPhoto/master/githuboss/20201121212553.png\"/\u003e\u003c/p\u003e\n\u003cp\u003e上面要指定git地址及要发布的kubernetes集群及git上的目录，这个目录用于argoCD检测是否具有\u003ccode\u003e更新\u003c/code\u003e.\u003c/p\u003e\n\u003cp\u003eargoCD支持了目前常用的资源管理工具，比如helm， kustomize, directory, Ksonnet, Jsonnet等工具，我这里使用的是Kustomize,k8s原生就支持，没有任何依赖，非常方便.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003e最重要的是指定是自动同步还是手动同步\u003c/strong\u003e, 不同的同步策略使用场景不同\u003c/p\u003e\n\u003cp\u003e添加成功后如下图所示:\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/zhoushuke/BlogPhoto/master/githuboss/20201206154807.png\"/\u003e\u003c/p\u003e\n\u003cp\u003e应用发布成功后，效果如下:\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/zhoushuke/BlogPhoto/master/githuboss/20201122003139.png\"/\u003e\u003c/p\u003e\n\u003cp\u003e从上面可以看到应用的发布历史，出于数据存储限制，默认情况下只会保留最新的10条，如果觉得不合理可以通过修改app进行调整，同时也能看到同步的状态及发布是否成功\u003c/p\u003e\n\u003cp\u003e这里要注意的是\u003ccode\u003eSync OK\u003c/code\u003e只是代表从git上同步资源成功了，但能不能发布成功是通过\u003ccode\u003eHealthy\u003c/code\u003e来看的\u003c/p\u003e\n\u003ch3 id=\"同步策略及发布状态\"\u003e\u003ca href=\"#同步策略及发布状态\" class=\"headerlink\" title=\"同步策略及发布状态\"\u003e\u003c/a\u003e同步策略及发布状态\u003c/h3\u003e\u003ch4 id=\"同步策略\"\u003e\u003ca href=\"#同步策略\" class=\"headerlink\" title=\"同步策略\"\u003e\u003c/a\u003e同步策略\u003c/h4\u003e\u003cp\u003eargoCD应用可以选择是自动同步还是手工同步来触发发布上线，这个就要看具体的场合了\u003c/p\u003e\n\u003cp\u003e自动同步: 指的是git如果发生变化则直接触发发布,不需要人介入， 这个比较适合用于持续发布的测试环境\u003c/p\u003e\n\u003cp\u003e手工同步: 指的则是人为地去页面上点击同步的方式进行,比较适合生产类稳定环境\u003c/p\u003e\n\u003cp\u003e同时，还有一些同步策略，比如是否强制对线上资源进行强制删除后再更新、指定需要同步的文件、同步时间窗口等等比较人性化的策略\u003c/p\u003e\n\u003cp\u003e详情可参考\u003ca target=\"_blank\" rel=\"noopener\" href=\"https://argoproj.github.io/argo-cd/user-guide/selective_sync/\"\u003e这里\u003c/a\u003e\u003c/p\u003e\n\u003ch4 id=\"发布状态\"\u003e\u003ca href=\"#发布状态\" class=\"headerlink\" title=\"发布状态\"\u003e\u003c/a\u003e发布状态\u003c/h4\u003e\u003cp\u003e在同步完成之后便会触发发布上线，状态分为Processing、unHealty、Healty\u003c/p\u003e\n\u003cp\u003eProcessing表示正在更新资源\u003c/p\u003e\n\u003cp\u003eunHealty表示发布失败, 发布失败可以通过点击详情进行查看原因\u003c/p\u003e\n\u003cp\u003eHealty则表示发布成功, 所有的资源都以git上的版本运行.\u003c/p\u003e\n\u003ch3 id=\"不足\"\u003e\u003ca href=\"#不足\" class=\"headerlink\" title=\"不足\"\u003e\u003c/a\u003e不足\u003c/h3\u003e\u003cp\u003e相信大家都有这样的需求: 同一个应用需要在多个集群中做发布，目前对于单应用多集群的部署官方支持得还不是很好，因为应用名必须唯一，官方有个issue讨论了为何不支持这种场景，主要\u003cstrong\u003e担心多个集群的查询性能\u003c/strong\u003e，感兴趣的可以参考\u003ca target=\"_blank\" rel=\"noopener\" href=\"https://github.com/argoproj/argo-cd/issues/1673\"\u003esupport multiple clusters (destinations) for an Application\u003c/a\u003e\u003c/p\u003e\n\u003ch3 id=\"问题\"\u003e\u003ca href=\"#问题\" class=\"headerlink\" title=\"问题\"\u003e\u003c/a\u003e问题\u003c/h3\u003e\u003col\u003e\n\u003cli\u003e执行login 登录命令时提示:\u003c/li\u003e\n\u003c/ol\u003e\n\u003cfigure class=\"highlight bash\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003eargocd login argocd.local:4433\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e出现以下错误\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/zhoushuke/BlogPhoto/master/githuboss/20201106184926.png\"/\u003e\u003c/p\u003e\n\u003cp\u003e原因: \u003c/p\u003e\n\u003cp\u003e参考: \u003ca target=\"_blank\" rel=\"noopener\" href=\"https://github.com/argoproj/argo-cd/issues/1415\"\u003ehttps://github.com/argoproj/argo-cd/issues/1415\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003e解决:\u003c/p\u003e\n\u003cfigure class=\"highlight bash\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003eargocd login argocd.local:4433 --grpc-web\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e如果添加集群的时候提示以下错误，则需要先使用上面的命令进行登录，登录成功后再进行集群的添加操作.\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/zhoushuke/BlogPhoto/master/githuboss/20201106185339.png\"/\u003e\u003c/p\u003e\n\u003col start=\"2\"\u003e\n\u003cli\u003e创建token时提示以下错误:\u003c/li\u003e\n\u003c/ol\u003e\n\u003cfigure class=\"highlight bash\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003eUnable to generate new token: account \u003cspan class=\"string\"\u003e\u0026#39;admin\u0026#39;\u003c/span\u003e does not have apiKey capability\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e原因: argocd的用户也是通过角色来进行划分的，创建token的用户需要具有 apiKey的权限，这个可以从argocd部署的configmap中查看使用的用户是否具有什么权限.\u003c/p\u003e\n\u003col start=\"3\"\u003e\n\u003cli\u003e回滚时提示以下错误:\u003c/li\u003e\n\u003c/ol\u003e\n\u003cfigure class=\"highlight bash\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003eUnable to load data: revision HEAD must be resolved\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/zhoushuke/BlogPhoto/master/githuboss/20201122185428.png\"/\u003e\u003c/p\u003e\n\u003cp\u003e原因: 如果使用argocd命令行的方式同步应用，会导致revision没有commit值，如上图，而回滚时需要revision，因此造成上面的报错.\u003c/p\u003e\n\u003ch3 id=\"CLI常用命令\"\u003e\u003ca href=\"#CLI常用命令\" class=\"headerlink\" title=\"CLI常用命令\"\u003e\u003c/a\u003eCLI常用命令\u003c/h3\u003e\u003cp\u003eargoCD也提供了CLI工具，可以直接使用该工具来对argoCD进行操作，常用的命令如下:\u003c/p\u003e\n\u003cfigure class=\"highlight bash\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e8\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e9\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e10\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e11\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e12\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e13\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e14\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"comment\"\u003e# 修改账号密码,然后根据提示完成\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eargocd account update-password\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"comment\"\u003e# 登录\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eargocd login argocd.local:4433 --grpc-web --username admin --password xxx --insecure\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"comment\"\u003e# 查看应用状态\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eargocd app get guestbook\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"comment\"\u003e# \u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eargocd app \u003cspan class=\"built_in\"\u003eset\u003c/span\u003e argocd-kustomize-frontend --kustomize-image xxx/argocd-kustomize-frontend:testwithtag\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"comment\"\u003e# 同步应用\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eargocd app \u003cspan class=\"built_in\"\u003esync\u003c/span\u003e guestbook\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\n\n\u003cp\u003e这里只是体验了一下argoCD的使用过程，很多有趣的功能还没有介绍，下次再更.\u003c/p\u003e\n\u003ch3 id=\"参考文章\"\u003e\u003ca href=\"#参考文章\" class=\"headerlink\" title=\"参考文章:\"\u003e\u003c/a\u003e\u003cstrong\u003e参考文章:\u003c/strong\u003e\u003c/h3\u003e\u003cblockquote\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca target=\"_blank\" rel=\"noopener\" href=\"https://argoproj.github.io/argo-cd/\"\u003ehttps://argoproj.github.io/argo-cd/\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca target=\"_blank\" rel=\"noopener\" href=\"https://www.gitops.tech/#:~:text=GitOps%20is%20a%20way%20of,Git%20and%20Continuous%20Deployment%20tools\"\u003ehttps://www.gitops.tech/#:~:text=GitOps%20is%20a%20way%20of,Git%20and%20Continuous%20Deployment%20tools\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca target=\"_blank\" rel=\"noopener\" href=\"https://www.jianshu.com/p/eec8e201b7e9\"\u003ehttps://www.jianshu.com/p/eec8e201b7e9\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca target=\"_blank\" rel=\"noopener\" href=\"https://www.qikqiak.com/post/gitlab-ci-argo-cd-gitops/\"\u003ehttps://www.qikqiak.com/post/gitlab-ci-argo-cd-gitops/\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca target=\"_blank\" rel=\"noopener\" href=\"https://argoproj.github.io/argo-cd/user-guide/private-repositories/\"\u003ehttps://argoproj.github.io/argo-cd/user-guide/private-repositories/\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca target=\"_blank\" rel=\"noopener\" href=\"https://github.com/argoproj/argo-cd/issues/1673\"\u003ehttps://github.com/argoproj/argo-cd/issues/1673\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/blockquote\u003e\n\u003ch3 id=\"转载请注明原作者-周淑科-https-izsk-me\"\u003e\u003ca href=\"#转载请注明原作者-周淑科-https-izsk-me\" class=\"headerlink\" title=\"转载请注明原作者: 周淑科(https://izsk.me)\"\u003e\u003c/a\u003e\u003cstrong\u003e转载请注明原作者: 周淑科(\u003ca target=\"_blank\" rel=\"noopener\" href=\"https://izsk.me/\"\u003ehttps://izsk.me\u003c/a\u003e)\u003c/strong\u003e\u003c/h3\u003e\n      \n    \u003c/div\u003e",
  "Date": "2020-12-04T16:30:53+08:00",
  "Author": "Z.S.K."
}