{
  "Source": "izsk.me",
  "Title": "Grafana学习(在Grafana中统计物理机上容器状态分类汇总)",
  "Link": "https://izsk.me/2019/09/07/grafana-statisty-containers-status-on-hosts/",
  "Content": "\u003cdiv class=\"post-body\" itemprop=\"articleBody\"\u003e\n\n      \n      \n\n      \n        \u003cp\u003eKubernetes集群中的容器监控数据已经通过Prometheus采集上来，在Grafana上配置可视化的时候，发现了个很有意思的需求，即：\u003cstrong\u003e按物理机展示各种状态下的容器占比情况\u003c/strong\u003e\u003c/p\u003e\n\u003cspan id=\"more\"\u003e\u003c/span\u003e\n\n\u003cp\u003e当然，是可以在Prometheus采集的时候对原始数据进行relabel，因为不好再回去做调整, 目前采集上来的数据不能直接实现上面的需求，所以只能在Prometheus上用提供的函数对数据做各种操作，最终达到效果,因为grafana直接支持prom语法，所以可以直接对prometheus的数据做sql.\u003c/p\u003e\n\u003ch3 id=\"展示需求\"\u003e\u003ca href=\"#展示需求\" class=\"headerlink\" title=\"展示需求\"\u003e\u003c/a\u003e\u003cstrong\u003e展示需求\u003c/strong\u003e\u003c/h3\u003e\u003cp\u003e\u003cstrong\u003e按物理机展示各种状态下的容器占比\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003e最终要实现的效果如下:\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/zhoushuke/BlogPhoto/master/githuboss/20200119152857.png\"/\u003e\u003c/p\u003e\n\u003cp\u003e说明: 这里运行的容器数跟pod数不不一致是因为运行的容器数中包含静态pod, 所以会比pod数多.\u003c/p\u003e\n\u003ch3 id=\"Grafana完整语句\"\u003e\u003ca href=\"#Grafana完整语句\" class=\"headerlink\" title=\"Grafana完整语句\"\u003e\u003c/a\u003e\u003cstrong\u003eGrafana完整语句\u003c/strong\u003e\u003c/h3\u003e\u003cp\u003e这里的语句跟Prometheus采集到的原始数据有很大的关系, 我只是想记录下grafana的几个比较有用的语法, 所以可能这个语句没有很大的参考性.\u003c/p\u003e\n\u003cp\u003egrafana中实现以上的效果，完整的语句如下:\u003c/p\u003e\n\u003cfigure class=\"highlight bash\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e(\u003cspan class=\"built_in\"\u003esum\u003c/span\u003e by(node)(avg by(node,pod)(kube_pod_info{node=~\u003cspan class=\"string\"\u003e\u0026#34;hd1g-senserealty-k8s-1\u0026#34;\u003c/span\u003e}) * on(pod) group_right(node) kube_pod_status_phase{phase=\u003cspan class=\"string\"\u003e\u0026#34;Running\u0026#34;\u003c/span\u003e}) ) \u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e/ \u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eon(node) label_replace(kubelet_running_pod_count,\u003cspan class=\"string\"\u003e\u0026#34;node\u0026#34;\u003c/span\u003e, \u003cspan class=\"string\"\u003e\u0026#34;\u003cspan class=\"variable\"\u003e$1\u003c/span\u003e\u0026#34;\u003c/span\u003e, \u003cspan class=\"string\"\u003e\u0026#34;kubernetes_io_hostname\u0026#34;\u003c/span\u003e,\u003cspan class=\"string\"\u003e\u0026#34;(.*)\u0026#34;\u003c/span\u003e) *100\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e下面进行这个语句的拆解, 主要使用到了3个promql语法,所以分为3部分来看\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cul\u003e\n\u003cli\u003eavg by(node,pod)(kube_pod_info{node=~”hd1g-senserealty-k8s-1”})\u003c/li\u003e\n\u003cli\u003e* on(pod) group_right\u003c/li\u003e\n\u003cli\u003eSum by\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/blockquote\u003e\n\u003ch3 id=\"语句解析\"\u003e\u003ca href=\"#语句解析\" class=\"headerlink\" title=\"语句解析\"\u003e\u003c/a\u003e\u003cstrong\u003e语句解析\u003c/strong\u003e\u003c/h3\u003e\u003ch4 id=\"avg-by\"\u003e\u003ca href=\"#avg-by\" class=\"headerlink\" title=\"avg by\"\u003e\u003c/a\u003e\u003cstrong\u003eavg by\u003c/strong\u003e\u003c/h4\u003e\u003cp\u003eavg by 这个语法跟常用的数据库里的语法一样，以node,pod为纬度统计出现的次数\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/zhoushuke/BlogPhoto/master/githuboss/20200119154209.png\"/\u003e\u003c/p\u003e\n\u003ch4 id=\"on-xx-group-right-group-left\"\u003e\u003ca href=\"#on-xx-group-right-group-left\" class=\"headerlink\" title=\"on(xx) group_right|group_left\"\u003e\u003c/a\u003e\u003cstrong\u003eon(xx) group_right|group_left\u003c/strong\u003e\u003c/h4\u003e\u003cp\u003egroup_left(node)/group_right(node) 一般使用在\u003cstrong\u003e一对多或者多对一\u003c/strong\u003e的情况，指的是一侧的结果中的每一个向量元素可以与另一侧的多个元素匹配的情况，哪一边的向量具有更高的基数，说是如果右侧的对应多的一方，则使用group_right, 左边多则对应 group_left,Node对应label, 这个label是两边都必须具有的。\u003c/p\u003e\n\u003cp\u003e上面这个例子 \u003cstrong\u003ekube_pod_status_phase\u003c/strong\u003e 中并没有node这个label，所有无法使用group语句进行match, 因此需要使用label_replace添加一个node这样的label\u003c/p\u003e\n\u003cp\u003eon(pod)则表示当表1以node label映射到表2时，从映射结果中再以pod为key label,从下面的映射结果已经把 node label加到结果了.\u003c/p\u003e\n\u003cp\u003e(除了on， 还可以使用ignoring(xxx)， 即除了这些lable,用剩下的labal为key)\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/zhoushuke/BlogPhoto/master/githuboss/20200119154552.png\"/\u003e\u003c/p\u003e\n\u003ch4 id=\"sum-by\"\u003e\u003ca href=\"#sum-by\" class=\"headerlink\" title=\"sum by\"\u003e\u003c/a\u003e\u003cstrong\u003esum by\u003c/strong\u003e\u003c/h4\u003e\u003cp\u003e最后再以node为纬度进行sum\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/zhoushuke/BlogPhoto/master/githuboss/20200119154650.png\"/\u003e\u003c/p\u003e\n\u003cp\u003e最终即能实现想要的效果了, 这里再说下label_replace这个函数，还是挺有用的\u003c/p\u003e\n\u003ch4 id=\"label-replace\"\u003e\u003ca href=\"#label-replace\" class=\"headerlink\" title=\"label_replace\"\u003e\u003c/a\u003e\u003cstrong\u003elabel_replace\u003c/strong\u003e\u003c/h4\u003e\u003cfigure class=\"highlight bash\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e8\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"comment\"\u003e#label_replace用于添加/覆盖label\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003elabel_replace(table, dst_label, replace_string, src_label, regex)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003etable表示需要操作的表\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003edst_label： 添加/被覆盖的label, 如果指定的label不存在，则添加\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003ereplace_string:  匹配到的string ,使用\u003cspan class=\"variable\"\u003e$1\u003c/span\u003e,\u003cspan class=\"variable\"\u003e$2\u003c/span\u003e...引用\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003esrc_label: regex表达式匹配的源label \u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eregex: 正则表达式，可使用\u003cspan class=\"variable\"\u003e$1\u003c/span\u003e,\u003cspan class=\"variable\"\u003e$2\u003c/span\u003e…引用\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e比如，table的原始数据是这样\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/zhoushuke/BlogPhoto/master/githuboss/20200119155014.png\"/\u003e\u003c/p\u003e\n\u003cp\u003e如果我想添加一个上面没有的的叫node的label，这个时候就需要使用label_replace\u003c/p\u003e\n\u003cfigure class=\"highlight bash\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003elabel_replace(kubelet_running_pod_count,\u003cspan class=\"string\"\u003e\u0026#34;node\u0026#34;\u003c/span\u003e, \u003cspan class=\"string\"\u003e\u0026#34;\u003cspan class=\"variable\"\u003e$1\u003c/span\u003e\u0026#34;\u003c/span\u003e, \u003cspan class=\"string\"\u003e\u0026#34;kubernetes_io_hostname\u0026#34;\u003c/span\u003e,\u003cspan class=\"string\"\u003e\u0026#34;(.*)\u0026#34;\u003c/span\u003e)\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e添加一个node label\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/zhoushuke/BlogPhoto/master/githuboss/20200119155259.png\"/\u003e\u003c/p\u003e\n\u003cp\u003e覆盖label\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/zhoushuke/BlogPhoto/master/githuboss/20200119155433.png\"/\u003e\u003c/p\u003e\n\u003cp\u003e这里把instance给覆盖了，做打码处理了\u003c/p\u003e\n\u003ch3 id=\"参考文章\"\u003e\u003ca href=\"#参考文章\" class=\"headerlink\" title=\"参考文章:\"\u003e\u003c/a\u003e\u003cstrong\u003e参考文章:\u003c/strong\u003e\u003c/h3\u003e\u003cblockquote\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca target=\"_blank\" rel=\"noopener\" href=\"https://prometheus.io/docs/prometheus/latest/querying/functions/\"\u003ePrometheus functions\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca target=\"_blank\" rel=\"noopener\" href=\"https://grafana.com/docs/grafana/latest/features/datasources/prometheus/\"\u003eGrafana\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/blockquote\u003e\n\u003ch3 id=\"转载请注明原作者-周淑科-https-izsk-me\"\u003e\u003ca href=\"#转载请注明原作者-周淑科-https-izsk-me\" class=\"headerlink\" title=\"转载请注明原作者: 周淑科(https://izsk.me)\"\u003e\u003c/a\u003e\u003cstrong\u003e转载请注明原作者: 周淑科(\u003ca target=\"_blank\" rel=\"noopener\" href=\"https://izsk.me/\"\u003ehttps://izsk.me\u003c/a\u003e)\u003c/strong\u003e\u003c/h3\u003e\n      \n    \u003c/div\u003e",
  "Date": "2019-09-07T16:30:53+08:00",
  "Author": "Z.S.K."
}