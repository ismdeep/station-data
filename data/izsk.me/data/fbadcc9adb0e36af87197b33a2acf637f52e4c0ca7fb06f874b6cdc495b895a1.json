{
  "Source": "izsk.me",
  "Title": "kubectl exec 如何实现进入容器时指定用户",
  "Link": "https://izsk.me/2022/11/27/Kubernetes-kubectl-exec-specify-username/",
  "Content": "\u003cdiv class=\"post-body\" itemprop=\"articleBody\"\u003e\n\n      \n      \n\n      \n        \u003cp\u003e最近接到一个需求，用户在进入基于k8s内的容器时能否只以特定的用户进入?\u003c/p\u003e\n\u003cp\u003e听起来是一个很平常且合理的需求，但细想起来并不简单.\u003c/p\u003e\n\u003cspan id=\"more\"\u003e\u003c/span\u003e\n\n\u003ch3 id=\"背景信息\"\u003e\u003ca href=\"#背景信息\" class=\"headerlink\" title=\"背景信息\"\u003e\u003c/a\u003e背景信息\u003c/h3\u003e\u003cp\u003ek8s: v1.22\u003c/p\u003e\n\u003cp\u003eCRI: docker v20.10.18\u003c/p\u003e\n\u003cp\u003eCNI: cilium v1.9(并不涉及)\u003c/p\u003e\n\u003ch3 id=\"问题引申\"\u003e\u003ca href=\"#问题引申\" class=\"headerlink\" title=\"问题引申\"\u003e\u003c/a\u003e问题引申\u003c/h3\u003e\u003cp\u003e首先，目前的kubectl exec 目前不支持使用参数指定用户进入到容器中, 即无法执行Kubectl exec –username，熟悉docker的人都知道，docker 是支持在exec 使用-u指定用户的,这时抛出第一个问题:\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003e为什么kubectl exec 不支持指定username进入容器?\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003e说实话，作者在这之前还真没有想过这个问题，但在想这个问题的时候，引出了另一个问题,因此上面的问题先放一放，先来回答另一个问题:\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003e当执行kubectl exec时，进入的是哪个用户?\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003e这个问题比较简单，当然进入的是默认的用户，那默认的用户是从何而来? 那自然是Dockerfile中指定的用户，默认情况下即为root用户，如果想进入后不为root怎么办?\u003c/p\u003e\n\u003cp\u003e在Dockerfile中使用\u003ccode\u003eUSER\u003c/code\u003e关键字指定某个用户为默认用户，这样当kubectl exec进入到容器后即为该用户而非root，但毕竟dockerfile只build一次，不可能在需要更换用户的时候对镜像进行重新build只为切换用户，这样显然成本较大，而在使用docker时就比较容易，因为本身支持exec -u username,那么只要是容器中存在的用户，都可使用-u进行切换。\u003c/p\u003e\n\u003cp\u003e因此回到第一个问题：\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003e为什么kubectl exec 不支持指定username进入容器?\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003e作者翻阅了一些官方的issue, 很早就有人提出了相关需求，但官方给的反馈总结起来就是基于安全及整体架构考虑，\u003cstrong\u003e这个参数涉及到多个k8s组件的修改\u003c/strong\u003e，同时又存在user mapping问题，相关issue感兴趣的可阅读参考文章的前几个链接\u003c/p\u003e\n\u003cp\u003e也确实有人提了个\u003ca target=\"_blank\" rel=\"noopener\" href=\"https://github.com/kubernetes/kubernetes/pull/81883/commits\"\u003eMR\u003c/a\u003e来支持这个参数，但由于提交的代码与docker CRI绑定较为密切，而kubernetes本身是支持多种CRI的，因此并未合并进主干，直到现在也未支持该参数\u003c/p\u003e\n\u003cp\u003e需求注意的是， kubectl 目前有–user, –username这两个参数，但都不是实现上述目的的\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cul\u003e\n\u003cli\u003e\u003cp\u003e–user: 指的是kubectl 使用的config文件集群相应的username\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e–username: 指的是kubectl 与apiServer通信的用户名\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/blockquote\u003e\n\u003cp\u003e综上所述，在不改变现状的情况下，有没有办法让kubectl exec 支持指定username呢?\u003c/p\u003e\n\u003cp\u003e答案是肯定的，docker exec -u就是好的参考例子\u003c/p\u003e\n\u003ch3 id=\"问题拆解\"\u003e\u003ca href=\"#问题拆解\" class=\"headerlink\" title=\"问题拆解\"\u003e\u003c/a\u003e问题拆解\u003c/h3\u003e\u003cp\u003e由于kubectl exec最终也是进入到容器中，那自然可以把kubectl exec命令转换成docker exec命令，那如何对应起来呢? 两者的桥梁就是DOCKER CONTAINER ID\u003c/p\u003e\n\u003cp\u003e简单来说就是以下流程:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003e\u003cp\u003e通过解析目标pod的yaml内容拿到相关信息，主要是nodeName, podnamespace, containerid, nodeName的作用是: 由于最终要转换成docker 命令，因此需要拿到pod运行在哪台什么主机上, 这样doker命令也必须运行在该主机上\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e新构建一个pod， pod里运行一个docker client，然后把主机上的docker.sock挂载到pod中(docker in docker)，这样再结合CONTAINER ID, 即可实现docker exec -u xxx ${CONTAINER ID}\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003e是不是很简单，更兴奋的是， 已经有人专门写了个kubectl plugin来实现这个功能，\u003ca target=\"_blank\" rel=\"noopener\" href=\"https://github.com/jordanwilson230/kubectl-plugins/blob/krew/kubectl-exec-as\"\u003e\u003ccode\u003eexec-as\u003c/code\u003e\u003c/a\u003e,也叫\u003ccode\u003ekubectl ssh\u003c/code\u003e\u003c/p\u003e\n\u003ch4 id=\"krew\"\u003e\u003ca href=\"#krew\" class=\"headerlink\" title=\"krew\"\u003e\u003c/a\u003ekrew\u003c/h4\u003e\u003cp\u003ekubectl有自己的插件体系，叫\u003ca target=\"_blank\" rel=\"noopener\" href=\"https://krew.sigs.k8s.io/\"\u003e\u003ccode\u003ekrew\u003c/code\u003e\u003c/a\u003e, 由于篇幅有限，不在这里展开，这里只放krew在线及离线安装方式供大家参考\u003c/p\u003e\n\u003cp\u003e\u003ca target=\"_blank\" rel=\"noopener\" href=\"https://krew.sigs.k8s.io/docs/user-guide/setup/install\"\u003ekrew在线安装\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003e安装完krew后即可使用Kubectl krew命令了\u003c/p\u003e\n\u003cp\u003ekrew插件在线安装\u003c/p\u003e\n\u003cfigure class=\"highlight bash\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003ekubectl krew install exec-as\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e\u003ca target=\"_blank\" rel=\"noopener\" href=\"https://www.jianshu.com/p/4238dd05f143\"\u003ekrew插件离线安装\u003c/a\u003e\u003c/p\u003e\n\u003cfigure class=\"highlight bash\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e./krew-linux_amd64 install --manifest=krew.yaml --archive=krew-linux_amd64.tar.gz\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003ch4 id=\"exec-as\"\u003e\u003ca href=\"#exec-as\" class=\"headerlink\" title=\"exec-as\"\u003e\u003c/a\u003eexec-as\u003c/h4\u003e\u003cp\u003e在exec-as插件安装完之后即可实现以下命令实现指定用户\u003c/p\u003e\n\u003cfigure class=\"highlight bash\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003ekubectl exec-as -u xxx podname -- bash\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e安装完之后可以看出, exec-as其实就是一个shell脚本，下面的代码是他的核心逻辑\u003c/p\u003e\n\u003cfigure class=\"highlight bash\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e8\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e9\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e10\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e11\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e12\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e13\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e14\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e15\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e16\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e17\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e18\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e19\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e20\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e21\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e22\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e23\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e24\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e25\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e26\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e27\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e28\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e29\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e30\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e31\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e32\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e33\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e34\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e35\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e36\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e37\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e38\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e39\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e40\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e41\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e42\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e43\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e44\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e45\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e46\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e47\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e48\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e49\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e50\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e51\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e52\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e53\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e54\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e55\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e56\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e57\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"comment\"\u003e# 省略获取pod相关信息的代码\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"keyword\"\u003eif\u003c/span\u003e [[ \u003cspan class=\"variable\"\u003e${CONTAINER}\u003c/span\u003e != \u003cspan class=\"string\"\u003e\u0026#34;NONE\u0026#34;\u003c/span\u003e ]]; \u003cspan class=\"keyword\"\u003ethen\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  DOCKER_CONTAINERID=$( \u003cspan class=\"built_in\"\u003eeval\u003c/span\u003e \u003cspan class=\"string\"\u003e\u0026#34;\u003cspan class=\"variable\"\u003e$KUBECTL\u003c/span\u003e\u0026#34;\u003c/span\u003e get pod \u003cspan class=\"string\"\u003e\u0026#34;\u003cspan class=\"variable\"\u003e${POD}\u003c/span\u003e\u0026#34;\u003c/span\u003e -o go-template=\u003cspan class=\"string\"\u003e\u0026#34;\u0026#39;{{ range .status.containerStatuses }}{{ if eq .name \\\u0026#34;\u003cspan class=\"variable\"\u003e${CONTAINER}\u003c/span\u003e\\\u0026#34; }}{{ .containerID }}{{ end }}{{ end }}\u0026#39;\u0026#34;\u003c/span\u003e )\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"keyword\"\u003eelse\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  DOCKER_CONTAINERID=$( \u003cspan class=\"variable\"\u003e$KUBECTL\u003c/span\u003e get pod \u003cspan class=\"string\"\u003e\u0026#34;\u003cspan class=\"variable\"\u003e${POD}\u003c/span\u003e\u0026#34;\u003c/span\u003e -o go-template=\u003cspan class=\"string\"\u003e\u0026#39;{{ (index .status.containerStatuses 0).containerID }}\u0026#39;\u003c/span\u003e )\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"keyword\"\u003efi\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eCONTAINERID=\u003cspan class=\"variable\"\u003e${DOCKER_CONTAINERID#*//}\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"built_in\"\u003eread\u003c/span\u003e -r -d \u003cspan class=\"string\"\u003e\u0026#39;\u0026#39;\u003c/span\u003e OVERRIDES \u0026lt;\u0026lt;\u003cspan class=\"string\"\u003eEOF || :\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"string\"\u003e{\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"string\"\u003e    \u0026#34;apiVersion\u0026#34;: \u0026#34;v1\u0026#34;,\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"string\"\u003e    \u0026#34;metadata\u0026#34;: {\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"string\"\u003e      \u0026#34;annotations\u0026#34;: {\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"string\"\u003e        \u0026#34;sidecar.istio.io/inject\u0026#34; : \u0026#34;false\u0026#34;\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"string\"\u003e      }\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"string\"\u003e    },\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"string\"\u003e    \u0026#34;spec\u0026#34;: {\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"string\"\u003e        \u0026#34;securityContext\u0026#34;: { \u0026#34;runAsUser\u0026#34;: 0 },\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"string\"\u003e        \u0026#34;containers\u0026#34;: [\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"string\"\u003e            {\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"string\"\u003e                \u0026#34;image\u0026#34;: \u0026#34;docker\u0026#34;,\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"string\"\u003e                \u0026#34;name\u0026#34;: \u0026#34;\u0026#39;$container\u0026#39;\u0026#34;,\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"string\"\u003e                \u0026#34;stdin\u0026#34;: true,\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"string\"\u003e                \u0026#34;stdinOnce\u0026#34;: true,\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"string\"\u003e                \u0026#34;tty\u0026#34;: true,\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"string\"\u003e                \u0026#34;restartPolicy\u0026#34;: \u0026#34;Never\u0026#34;,\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"string\"\u003e                \u0026#34;args\u0026#34;: [\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"string\"\u003e                  \u0026#34;exec\u0026#34;,\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"string\"\u003e                  \u0026#34;-it\u0026#34;,\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"string\"\u003e                  \u0026#34;-u\u0026#34;,\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"string\"\u003e                  \u0026#34;${USERNAME}\u0026#34;,\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"string\"\u003e                  \u0026#34;${CONTAINERID}\u0026#34;,\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"string\"\u003e                  $(to_json \u0026#34;${COMMAND}\u0026#34;)\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"string\"\u003e                ],\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"string\"\u003e                \u0026#34;volumeMounts\u0026#34;: [\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"string\"\u003e                    {\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"string\"\u003e                        \u0026#34;mountPath\u0026#34;: \u0026#34;/var/run/docker.sock\u0026#34;,\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"string\"\u003e                        \u0026#34;name\u0026#34;: \u0026#34;docker\u0026#34;\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"string\"\u003e                    }\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"string\"\u003e                ]\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"string\"\u003e            }\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"string\"\u003e        ],\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"string\"\u003e        $NODESELECTOR\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"string\"\u003e        $TOLERATIONS\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"string\"\u003e        \u0026#34;volumes\u0026#34;: [\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"string\"\u003e            {\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"string\"\u003e                \u0026#34;name\u0026#34;: \u0026#34;docker\u0026#34;,\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"string\"\u003e                \u0026#34;hostPath\u0026#34;: {\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"string\"\u003e                    \u0026#34;path\u0026#34;: \u0026#34;/var/run/docker.sock\u0026#34;\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"string\"\u003e                }\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"string\"\u003e            }\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"string\"\u003e        ]\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"string\"\u003e    }\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"string\"\u003e}\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"string\"\u003eEOF\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"built_in\"\u003etrap\u003c/span\u003e \u003cspan class=\"string\"\u003e\u0026#39;$KUBECTL delete pod $container \u0026gt;/dev/null 2\u0026gt;\u0026amp;1 \u0026amp;\u0026#39;\u003c/span\u003e 0 1 2 3 15\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"built_in\"\u003eeval\u003c/span\u003e \u003cspan class=\"string\"\u003e\u0026#34;\u003cspan class=\"variable\"\u003e$KUBECTL\u003c/span\u003e\u0026#34;\u003c/span\u003e run -it --restart=Never --image=docker --overrides=\u003cspan class=\"string\"\u003e\u0026#34;\u0026#39;\u003cspan class=\"variable\"\u003e${OVERRIDES}\u003c/span\u003e\u0026#39;\u0026#34;\u003c/span\u003e \u003cspan class=\"string\"\u003e\u0026#34;\u003cspan class=\"variable\"\u003e$container\u003c/span\u003e\u0026#34;\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e其实就是上述的一二点的实现，是不是很简单，但是这远远不够，再回想一下我们的需求:\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003ekubectl exec命令中能否只以特定的用户进入容器\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003e通过\u003ccode\u003ekubectl exec-as -u \u003c/code\u003e是可以指定用户了，但这没办法控制用户指定什么用户，选择权是在用户侧，所以并没有达到限制\u003cstrong\u003e只\u003c/strong\u003e特定用户的目的\u003c/p\u003e\n\u003cp\u003e同时，还有如下的几点缺点:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003e\u003cp\u003e由于exec-as只是一个shell脚本，如果权限控制不好的话，用户随时可以改脚本的内容，并不安全\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e上面的代码中可以看到，新创建的pod中使用的是docker exec -u username ${containerID}进入到容器中，多数情况下要进入到容器只是用于debug场景，用完就应该退出，在这种场景下，不能直接做成一个deployment服务，因为它是long run的，会造成docker exec 一直是连着docker server的，也并不安全。\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e因为要使用到kubectl, 相对于给每个开发同学配置一遍环境，有没有更好、更快的办法?\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003e所以，要想达到目的，只能在exec-as上层再做一层，一是限制用户直接使用exec-as且不能修改exec-as shell脚本，二是用完即可退出docker exec\u003c/p\u003e\n\u003ch4 id=\"webkubectl\"\u003e\u003ca href=\"#webkubectl\" class=\"headerlink\" title=\"webkubectl\"\u003e\u003c/a\u003ewebkubectl\u003c/h4\u003e\u003cp\u003ewebkubectl做为一个kubectl web化的开源工具，因为之前体验过，可以解决第3个缺点，先来说一下webkubectl的实现\u003c/p\u003e\n\u003cfigure class=\"highlight bash\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e8\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e9\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e10\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e11\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e_______________________________________________________________________\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e|   Local Network     |          DMZ           |      VPC/Datacenter  |\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e|                     |                        |                      |\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e|                     |    _______________     |   ----------------   |\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e|   ---------------   |    |             |  /~~~~~\u0026gt;| Kubernetes A |   |\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e|   | Your Laptop |~~~~~~~\u0026gt;| Web Kubectl | /   |   ----------------   |\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e|   ---------------   |    |             | \\   |                      |\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e|                     |    ---------------  \\  |   ----------------   |\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e|                     |                      \\~~~~\u0026gt;| Kubernetes B |   |\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e|                     |                        |   ----------------   |\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e-----------------------------------------------------------------------\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e也很简单，就是用户通过上传kube config文件或者一个合法的token来连接k8s集群，\u003c/p\u003e\n\u003cp\u003ewebkubectl是支持多用户、多session，它会为每个session开辟独立的内存空间，从而做到访问隔离.\u003c/p\u003e\n\u003cp\u003e截止目前，多用户这块做的并不完善，只支持用户预设定，新增用户需要重启webkubectl, 也不支持对接LDAP/AD等账号体系.\u003c/p\u003e\n\u003cp\u003e多session的隔离是通过挂载temp内存文件系统(退出即销毁)，结合一些kubens、kubectx等工具实现的.\u003c/p\u003e\n\u003cp\u003e但也还不够，webkubectl只是一个kubectl web化的工具，需要将它与exec-as整合，\u003c/p\u003e\n\u003cp\u003e最后我们要实现的目的是:\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003e当用户登录到webkubectl后，通过kubeconfig连接session后直接进入到对应的容器中\u003c/strong\u003e，不给用户执行exec-as的机会，从而实现文章开头的目的，其中,登录webkubectl的用户即为需要进入到容器中的用户.\u003c/p\u003e\n\u003cp\u003e那如何告诉kubectl exec-as接受的参数?\u003c/p\u003e\n\u003cp\u003e很简单，通过webkubectl登录时指定，即:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003e\u003cp\u003e登录webkubectl的用户即为进入到容器中的用户, 即，docker exec 中-u 的值\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e其它的两个参数:podname、namespace,这里\u003cstrong\u003e为了改造最小化\u003c/strong\u003e，就直接放在了登录webkubectl时的密码中了，通过分隔符来限定.\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003e因为最终变成:\u003c/p\u003e\n\u003cp\u003e登录webkubectl的用户名密码为: username:password_namespace_podname\u003c/p\u003e\n\u003cp\u003e在webkubectl的源码中获取到这几个参数，然后直接os.Setenv到session的环境变量(因为session是隔离的，因为不会出现错乱)中，再让执行kubectl exec-as时从session环境变量中获取即可.\u003c/p\u003e\n\u003cp\u003e这样，就可实现用户以指定用户进入到某个pod的容器中.\u003c/p\u003e\n\u003cp\u003e还有以下几优化的点:\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cul\u003e\n\u003cli\u003e\u003cp\u003ewebkubectl由于采用的内存隔离，因此在当用户退出session后(退出浏览器tab页面)，就不会保存任何数据，新创建的pod也会随之删除(看exec-as中的trap调用)\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e为了能够支持同一个session可以多次连接，对exec-as做了些改造，即，当新创建的pod存在且为Running状态时，就直接使用docker exec 进入，而不是每次都创建新的pod, 这样可以提高效率\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/blockquote\u003e\n\u003cp\u003e另外，还有几个权限问题需要注意一下:\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cul\u003e\n\u003cli\u003e\u003cp\u003e由于webkubectl中使用了unshare、mount等命令，因此当使用容器启动时需要使用privileged启动\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e由于exec-as中使用了kubectl delete pod，因此上传的kube config文件中对应的用户需要具备对ns pod删除的权限，注意，\u003cstrong\u003e删除pod的ns并不是用户需要进入的pod所在的ns，而是新创建的pod(也就是由exec-as创建出来的)所在的ns的删除权限，需要进入的pod所在的ns其实只需要get/list pod的权限即可.\u003c/strong\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/blockquote\u003e\n\u003cp\u003e改造成本不高，目的\u003cstrong\u003e基本\u003c/strong\u003e达成\u003c/p\u003e\n\u003cp\u003e等等，为什么要说基本达成呢? 其实在\u003cstrong\u003e易用\u003c/strong\u003e上进行优化的空间: \u003c/p\u003e\n\u003cblockquote\u003e\n\u003cul\u003e\n\u003cli\u003e\u003cp\u003e改造webkubectl的用户认证模块，支持从CMDB中动态地获取用户，这样在有新用户添加时不需要重启webkubectl\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\u003cp\u003eusername:password_namespace_podname这样糅合在一起用还是挺low的，如果有一个CMDB来记录用户与要访问pod的对应关系，用户对自己具备的pod可随时增删调整就更友好了\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/blockquote\u003e\n\u003ch3 id=\"成果图\"\u003e\u003ca href=\"#成果图\" class=\"headerlink\" title=\"成果图\"\u003e\u003c/a\u003e成果图\u003c/h3\u003e\u003cp\u003e由于时间有限, 除了易用上可优化的点外，上述提到的点作者都已改造完成，贴几张图\u003c/p\u003e\n\u003cp\u003e登录\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/zhoushuke/BlogPhoto/master/githuboss/20221128103819.png\"/\u003e\u003c/p\u003e\n\u003cp\u003e创建session, 上传kube config文件\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/zhoushuke/BlogPhoto/master/githuboss/20221128103921.png\"/\u003e\u003c/p\u003e\n\u003cp\u003e使用webkubectl登录用户连接对应的pod\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/zhoushuke/BlogPhoto/master/githuboss/20221128103704.png\"/\u003e\u003c/p\u003e\n\u003cp\u003e进入到pod中\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/zhoushuke/BlogPhoto/master/githuboss/20221128104430.png\"/\u003e\u003c/p\u003e\n\u003cp\u003e当然，由于时间有限, 对webkubectl、exec-as都做了些改造，目前凑合使用\u003c/p\u003e\n\u003cp\u003e作者深知，这么个工具要能在生产上使用，简直是简陋至极，最好的解决方案肯定是kubectl exec官方来支持\u003c/p\u003e\n\u003cp\u003e最后，发现一个更简单的工具, 通过改写kubectl exec – su - username来实现，不过有个限制是，容器中必须存在su命令，而且不支持自定义command，嗯，是个办法，感兴趣的可看看这个\u003ca target=\"_blank\" rel=\"noopener\" href=\"https://github.com/zhangweiqaz/po_pod.git\"\u003ego_pod\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003e请叫我工具组合侠…\u003c/p\u003e\n\u003ch3 id=\"参考文章\"\u003e\u003ca href=\"#参考文章\" class=\"headerlink\" title=\"参考文章:\"\u003e\u003c/a\u003e\u003cstrong\u003e参考文章:\u003c/strong\u003e\u003c/h3\u003e\u003cblockquote\u003e\n\u003cul\u003e\n\u003cli\u003e\u003cp\u003e\u003ca target=\"_blank\" rel=\"noopener\" href=\"https://github.com/kubernetes/kubernetes/issues/30656\"\u003ehttps://github.com/kubernetes/kubernetes/issues/30656\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e\u003ca target=\"_blank\" rel=\"noopener\" href=\"https://github.com/kubernetes/kubectl/blob/a0af655b7abaf06983c99ad5a4dc8f02ae5eb3e5/pkg/cmd/exec/exec.go#L100\"\u003ehttps://github.com/kubernetes/kubectl/blob/a0af655b7abaf06983c99ad5a4dc8f02ae5eb3e5/pkg/cmd/exec/exec.go#L100\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e\u003ca target=\"_blank\" rel=\"noopener\" href=\"https://github.com/kubernetes-client/python/issues/1223\"\u003erun connect-get-namespaced-pod-exec as a specific user · Issue #1223 · kubernetes-client/python · GitHub\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e\u003ca target=\"_blank\" rel=\"noopener\" href=\"https://github.com/kubernetes/enhancements/pull/3372\"\u003e[WIP] To add username option in kubectl exec by hanamantagoudvk · Pull Request #3372 · kubernetes/enhancements · GitHub\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e\u003ca target=\"_blank\" rel=\"noopener\" href=\"https://github.com/kubernetes/kubernetes/pull/81883\"\u003e[WIP]exec: supprt exec as a specific user by max88991 · Pull Request #81883 · kubernetes/kubernetes · GitHub\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e\u003ca target=\"_blank\" rel=\"noopener\" href=\"https://github.com/kubernetes/enhancements/pull/1224\"\u003eAdd exec as user KEP by max88991 · Pull Request #1224 · kubernetes/enhancements · GitHub\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e\u003ca target=\"_blank\" rel=\"noopener\" href=\"https://blog.csdn.net/whatday/article/details/104874055\"\u003elinux shell trap捕捉信号 附信号表 SIGTERM SIGKILL_whatday的博客-CSDN博客_sigkill 捕捉\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e\u003ca target=\"_blank\" rel=\"noopener\" href=\"https://github.com/kubernetes/kubernetes/pull/81883#issuecomment-524544951\"\u003e WIPexec: supprt exec as a specific user by max88991 · Pull Request #81883 · kubernetes/kubernetes · GitHub\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e\u003ca target=\"_blank\" rel=\"noopener\" href=\"https://krew.sigs.k8s.io/\"\u003ehttps://krew.sigs.k8s.io/\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e\u003ca target=\"_blank\" rel=\"noopener\" href=\"https://github.com/zhangweiqaz/po_pod.git\"\u003ehttps://github.com/zhangweiqaz/po_pod.git\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e\u003ca target=\"_blank\" rel=\"noopener\" href=\"https://www.jianshu.com/p/4238dd05f143\"\u003ekubectl krew 离线安装插件 - 简书\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/blockquote\u003e\n\u003ch3 id=\"转载请注明原作者-周淑科-https-izsk-me\"\u003e\u003ca href=\"#转载请注明原作者-周淑科-https-izsk-me\" class=\"headerlink\" title=\"转载请注明原作者: 周淑科(https://izsk.me)\"\u003e\u003c/a\u003e\u003cstrong\u003e转载请注明原作者: 周淑科(\u003ca target=\"_blank\" rel=\"noopener\" href=\"https://izsk.me/\"\u003ehttps://izsk.me\u003c/a\u003e)\u003c/strong\u003e\u003c/h3\u003e\n      \n    \u003c/div\u003e",
  "Date": "2022-11-27T17:30:53+08:00",
  "Author": "Z.S.K."
}