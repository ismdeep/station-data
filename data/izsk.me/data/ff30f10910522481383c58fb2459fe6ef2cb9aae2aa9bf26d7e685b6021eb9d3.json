{
  "Source": "izsk.me",
  "Title": "Kubernetes学习(jmeter基础使用)",
  "Link": "https://izsk.me/2020/03/09/Jmeter-ops/",
  "Content": "\u003cdiv class=\"post-body\" itemprop=\"articleBody\"\u003e\n\n      \n      \n\n      \n        \u003cp\u003e最近kubernetes新上线了个服务,需要基于Kubernetes架构下压测一下该服务的性能, 之前用过ab, 但是ab还是相对简单了点, 网上调研了一番发现了jmeter这个由apache出品的压测工具,特别是报告非常清晰, 使用起来还挺简单.\u003c/p\u003e\n\u003cspan id=\"more\"\u003e\u003c/span\u003e\n\n\n\n\u003ch3 id=\"java环境配置\"\u003e\u003ca href=\"#java环境配置\" class=\"headerlink\" title=\"java环境配置\"\u003e\u003c/a\u003ejava环境配置\u003c/h3\u003e\u003cp\u003ejmeter是基于java开发的,因此需要有java环境且java的版本需要1.8版本及以上\u003c/p\u003e\n\u003cp\u003ejava环境的配置不再详述\u003c/p\u003e\n\u003cp\u003e以下测试基于Mac系统\u003c/p\u003e\n\u003ch3 id=\"jmeter安装\"\u003e\u003ca href=\"#jmeter安装\" class=\"headerlink\" title=\"jmeter安装\"\u003e\u003c/a\u003ejmeter安装\u003c/h3\u003e\u003cp\u003e我在使用tgz包安装时提示以下错误, 开始以为是java环境变量设置的问题, 后来一顿操作始终无法解决,后来直接使用了\u003ccode\u003ebrew install jmeter\u003c/code\u003e安装后就没问题了.\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/zhoushuke/BlogPhoto/master/githuboss/20200401181115.png\"/\u003e\u003c/p\u003e\n\u003cp\u003e补充: 当使用brew安装完jmeter后我使用非root用户使用\u003ccode\u003esh jmeter\u003c/code\u003e启动发现居然没问题了, 不清楚上面的报错是因为使用了root还是其它问题被brew install之后给修复了, 现在能用就不管了.\u003c/p\u003e\n\u003ch3 id=\"jmeter启动\"\u003e\u003ca href=\"#jmeter启动\" class=\"headerlink\" title=\"jmeter启动\"\u003e\u003c/a\u003ejmeter启动\u003c/h3\u003e\u003cfigure class=\"highlight shell\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003etar zxf apache-jmeter-5.2.1.tgz\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003ecd apache-jmeter-5.2.1/bin\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003esh jmeter\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e即可打开gui界面, 当然在bin下还有很多启动脚本, 对应jmeter不同的用途, 可查看官\u003ca target=\"_blank\" rel=\"noopener\" href=\"https://jmeter.apache.org/usermanual/get-started.html\"\u003e文档\u003c/a\u003e\u003c/p\u003e\n\u003ch3 id=\"TestPlan\"\u003e\u003ca href=\"#TestPlan\" class=\"headerlink\" title=\"TestPlan\"\u003e\u003c/a\u003eTestPlan\u003c/h3\u003e\u003cp\u003e因为我这里已经配置了几个test case， 第一次启动看到的界面在左侧的节点只有一个TestPlan\u003c/p\u003e\n\u003cp\u003e依次在TestPlan右键Add –\u0026gt; Threads(Users) –\u0026gt; ThreadGroup 即会出现配置界面, 如下图\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/zhoushuke/BlogPhoto/master/githuboss/20200402133047.png\"/\u003e\u003c/p\u003e\n\u003cp\u003eThreadGroup相当于比如说要模拟多少个用户进行操作就会组成一个threadgroup, 每个用户使用一个thread\u003c/p\u003e\n\u003cp\u003e这里有几个重要的参数说明一下:\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cul\u003e\n\u003cli\u003e\u003cp\u003eNumber of Threads(users): 从users来看也说明了指定需要模拟多少个用户, 比如500\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\u003cp\u003eRamp-up period(seconds): 这个参数比较重要, 指定Number of Threads指定的用户数需要在多少秒内启动, 比如这里设置为25, 说明500个用户需要在25秒内启动完,也就是每秒都会启动20(500/25)个用户.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003e如果这个值不填或者为0, 说明立即启动所有的用户,相当于完全的并发\u003c/strong\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\u003cp\u003eLoop Count: 循环的次数, 可以指定整个流程循环的次数, 也可以勾选\u003ccode\u003einfinite\u003c/code\u003e 永远运行\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\u003cp\u003eSpecify Thread lifetime: (使用该操作需要勾选\u003ccode\u003einfinite\u003c/code\u003e)也可以指定持续运行的时间, 比如需要500用户持续操作2小时(7200s)\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eDuration(seconds): 持续时间\u003c/li\u003e\n\u003cli\u003eStartup delay(seconds): 延迟启动时间, 可为空, 表示不延迟\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/blockquote\u003e\n\u003cp\u003e以上参数跟业务场景息息相关.\u003c/p\u003e\n\u003cp\u003e举个例子: 比如 Number of Thread(Users): 500, Ramp-up period(seconds): 50, Duration(seconds): 300\u003c/p\u003e\n\u003cp\u003e整个测试意思是: jmeter将在50s内将启动和运行500个用户, 每隔10s增加10个, 最终在50s(不是精确值)后会同时存在500个用户, 整个测试流程持续300s\u003c/p\u003e\n\u003cp\u003ethread数据的变化可以从测试结果反应出来\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/zhoushuke/BlogPhoto/master/githuboss/20200402160241.png\"/\u003e\u003c/p\u003e\n\u003cp\u003e测试是从15:18开始的, 从大约在15:20时 达到了thread=500, 从这里也，也能反应Ramp-up period不是个精确值\u003c/p\u003e\n\u003ch3 id=\"HTTP-HEADER-MANAGER\"\u003e\u003ca href=\"#HTTP-HEADER-MANAGER\" class=\"headerlink\" title=\"HTTP HEADER MANAGER\"\u003e\u003c/a\u003eHTTP HEADER MANAGER\u003c/h3\u003e\u003cp\u003ehttp请求时大多都需要定义http header, jmeter支持定义header，那么在每次请求时都会使用该header\u003c/p\u003e\n\u003cp\u003eThreadGroup右键 Add –\u0026gt; Config Element –\u0026gt; HTTP HEADER MANAGER\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/zhoushuke/BlogPhoto/master/githuboss/20200402140140.png\"/\u003e\u003c/p\u003e\n\u003ch3 id=\"HTTP-REQUEST\"\u003e\u003ca href=\"#HTTP-REQUEST\" class=\"headerlink\" title=\"HTTP REQUEST\"\u003e\u003c/a\u003eHTTP REQUEST\u003c/h3\u003e\u003ch4 id=\"get请求\"\u003e\u003ca href=\"#get请求\" class=\"headerlink\" title=\"get请求\"\u003e\u003c/a\u003eget请求\u003c/h4\u003e\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/zhoushuke/BlogPhoto/master/githuboss/20200402140302.png\"/\u003e\u003c/p\u003e\n\u003cp\u003e可以在Parameters指定url参数或者在BodyData一栏指定请求体\u003c/p\u003e\n\u003cp\u003e所有参数都指定完之后即可保存该测试计划, 注意\u003cstrong\u003e一定不要在gui页面执行\u003c/strong\u003e, gui只是用于调试使用, 使用命令行执行整个测试计划, 这个在jmeter启动时也有warning提示, 同时也建议调大HEAP的值, 这个可以直接在jmeter脚本中改\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/zhoushuke/BlogPhoto/master/githuboss/20200402140933.png\"/\u003e\u003c/p\u003e\n\u003ch4 id=\"post请求\"\u003e\u003ca href=\"#post请求\" class=\"headerlink\" title=\"post请求\"\u003e\u003c/a\u003epost请求\u003c/h4\u003e\u003cp\u003e如果是post请求, Method选择post, 同时也支持在Parameters指定url参数或者在BodyData一栏指定请求体,\u003c/p\u003e\n\u003cp\u003e还可以通过直接上传文件的方式\u003c/p\u003e\n\u003ch3 id=\"Assert\"\u003e\u003ca href=\"#Assert\" class=\"headerlink\" title=\"Assert\"\u003e\u003c/a\u003eAssert\u003c/h3\u003e\u003cp\u003e断言是个十分有用的元件, 通过assert来判断压测的请求是否符合预期, \u003cstrong\u003e不符合预期的请求最终将反应在报告中\u003c/strong\u003e.\u003c/p\u003e\n\u003cp\u003eassert的工作原理就是在response返回的数据中通过对比assert定义的动作来看是否存在相符的情况\u003c/p\u003e\n\u003cp\u003e官方支持的assert有13种之多, 几乎涵盖了大部分的场景, 用的最多的是ResponseAssertion,通过返回信息来判断\u003c/p\u003e\n\u003cp\u003eThreadGroup右键 Add –\u0026gt; Assertions –\u0026gt; responseAssert\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/zhoushuke/BlogPhoto/master/githuboss/20200402151546.png\"/\u003e\u003c/p\u003e\n\u003cp\u003e同时也可以自定义产生错误时的msg.\u003c/p\u003e\n\u003cp\u003e增加断言动作后还可以增加查看断言结果, 如果出现不符合预期的结果将显示在这里\u003c/p\u003e\n\u003cp\u003eThreadGroup右键 Add –\u0026gt; Listener –\u0026gt; AssertResult\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/zhoushuke/BlogPhoto/master/githuboss/20200402151616.png\"/\u003e\u003c/p\u003e\n\u003ch3 id=\"命令行执行\"\u003e\u003ca href=\"#命令行执行\" class=\"headerlink\" title=\"命令行执行\"\u003e\u003c/a\u003e命令行执行\u003c/h3\u003e\u003cfigure class=\"highlight bash\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003ejmeter -n -t xxx.jmx -l k8s.csv -e -o k8s\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"comment\"\u003e# 可以使用jmeter -?打印参数说明\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"comment\"\u003e# -n: 表示non-gui, 也就是不启动gui\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"comment\"\u003e# -t: 保存的测试计划文件\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"comment\"\u003e# -l: 测试结果文件，jtl或者csv格式\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"comment\"\u003e# -e: 设置生成测试报告\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"comment\"\u003e# -o: web测试结果保存目录, 这个目录必须为空或者不存在\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e执行结果如下图: 其中的错误就是assert的原由\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/zhoushuke/BlogPhoto/master/githuboss/20200402153623.png\"/\u003e\u003c/p\u003e\n\u003cp\u003e执行完成之后将会生成一个k8s.csv及k8s文件夹, 该文件夹内有web类型的报告，web报告的来源是通过 -l参数指定的jtl或csv文件,有过解析该文件生成html.\u003c/p\u003e\n\u003cp\u003e报告文件类似下图:\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/zhoushuke/BlogPhoto/master/githuboss/20200402141535.png\"/\u003e\u003c/p\u003e\n\u003cp\u003e比如重要的是Dashboard一栏, 还有ResponseTime及LatencyTime等相关的黄金指标.\u003c/p\u003e\n\u003cp\u003ejmeter能够覆盖的场景非常广泛, 官网的文档也非常清晰, 后续有需求再深入研究下.\u003c/p\u003e\n\u003ch3 id=\"参考文章\"\u003e\u003ca href=\"#参考文章\" class=\"headerlink\" title=\"参考文章:\"\u003e\u003c/a\u003e\u003cstrong\u003e参考文章:\u003c/strong\u003e\u003c/h3\u003e\u003cblockquote\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca target=\"_blank\" rel=\"noopener\" href=\"https://jmeter.apache.org/usermanual/test_plan.html\"\u003ehttps://jmeter.apache.org/usermanual/test_plan.html\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca target=\"_blank\" rel=\"noopener\" href=\"https://www.cnblogs.com/imyalost/p/6024306.html\"\u003ehttps://www.cnblogs.com/imyalost/p/6024306.html\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/blockquote\u003e\n\u003ch3 id=\"转载请注明原作者-周淑科-https-izsk-me\"\u003e\u003ca href=\"#转载请注明原作者-周淑科-https-izsk-me\" class=\"headerlink\" title=\"转载请注明原作者: 周淑科(https://izsk.me)\"\u003e\u003c/a\u003e\u003cstrong\u003e转载请注明原作者: 周淑科(\u003ca target=\"_blank\" rel=\"noopener\" href=\"https://izsk.me/\"\u003ehttps://izsk.me\u003c/a\u003e)\u003c/strong\u003e\u003c/h3\u003e\n      \n    \u003c/div\u003e",
  "Date": "2020-03-09T15:40:53+08:00",
  "Author": "Z.S.K."
}