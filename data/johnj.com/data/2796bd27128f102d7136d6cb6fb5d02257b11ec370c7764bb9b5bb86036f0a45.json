{
  "Source": "johnj.com",
  "Title": "Rosalind Problems in Clojure",
  "Link": "http://johnj.com/posts/rosalind-problems-in-clojure/",
  "Content": "\u003cmain class=\"content\"\u003e\n\n\n\u003ch1\u003eRosalind Problems in Clojure\u003c/h1\u003e\n\n\n\u003cp\u003e\n\n\u003ca class=\"tag\" href=\"/tags/clojure\"\u003e\u003cspan class=\"clojure-tag\"\u003eclojure\u003c/span\u003e\u003c/a\u003e\n\n\u003ca class=\"tag\" href=\"/tags/code\"\u003e\u003cspan class=\"code-tag\"\u003ecode\u003c/span\u003e\u003c/a\u003e\n\n\u003ca class=\"tag\" href=\"/tags/genomics\"\u003e\u003cspan class=\"genomics-tag\"\u003egenomics\u003c/span\u003e\u003c/a\u003e\n\n  ..... \u003cem\u003e\u003ctime class=\"postdate\" datetime=\"2013-06-09T00:00:00Z\"\u003e\n      June 9, 2013\n    \u003c/time\u003e\u003c/em\u003e\n\u003c/p\u003e\n\n\n\n\u003cp\u003e\n\n\nLater: \u003ca href=\"http://johnj.com/posts/exploratory-genomics-with-clojure/\"\u003eExploratory Genomics with Clojure\u003c/a\u003e\n\n\n\u003cbr/\u003e\n\n\nEarlier: \u003ca href=\"http://johnj.com/posts/intro-to-context-managers-in-python/\"\u003eIntroduction to Context Managers in Python\u003c/a\u003e\n\n\n\u003c/p\u003e\u003cp\u003e\n\n\n\n\u003c/p\u003e\u003cp\u003e\nThis weekend I’ve been having a lot of fun working the Bioinformatics\nproblems from \u003ca href=\"http://rosalind.info/\"\u003eRosalind\u003c/a\u003e. Most people work them in Python, but so far\nthey have been very amenable to Clojure except where BioPython\nlibraries are used for access to online databases. The problems have\nbeen straightforward so far but I have enjoyed the elegance and\nbrevity that Clojure lends the solutions.\u003c/p\u003e\n\u003cp\u003e\nIn particular, I like this short translator \u003ca href=\"http://rosalind.info/problems/prot/\"\u003efrom RNA sequences to\namino acids\u003c/a\u003e:\u003c/p\u003e\n\u003cdiv class=\"src src-text\"\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-text\" data-lang=\"text\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e;;; Translating RNA into Amino Acids\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e(defmacro deftable [tname \u0026amp; rest]\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  `(def ~tname (apply hash-map \u0026#39;(~@rest))))\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e(deftable proteins\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  UUU F      CUU L      AUU I      GUU V\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  UUC F      CUC L      AUC I      GUC V\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  UUA L      CUA L      AUA I      GUA V\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  UUG L      CUG L      AUG M      GUG V\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  UCU S      CCU P      ACU T      GCU A\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  UCC S      CCC P      ACC T      GCC A\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  UCA S      CCA P      ACA T      GCA A\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  UCG S      CCG P      ACG T      GCG A\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  UAU Y      CAU H      AAU N      GAU D\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  UAC Y      CAC H      AAC N      GAC D\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  UAA Stop   CAA Q      AAA K      GAA E\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  UAG Stop   CAG Q      AAG K      GAG E\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  UGU C      CGU R      AGU S      GGU G\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  UGC C      CGC R      AGC S      GGC G\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  UGA Stop   CGA R      AGA R      GGA G\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  UGG W      CGG R      AGG R      GGG G)\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e(defn to-protein [s]\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  (-\u0026gt;\u0026gt; s\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e       (partition 3)\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e       (map (partial apply str))\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e       (map symbol)\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e       (map proteins)\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e       (take-while #(not= % \u0026#39;Stop))\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e       (apply str)))\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003c/div\u003e\n\u003cp\u003e\nThe body of the \u003ccode class=\"verbatim\"\u003eproteins\u003c/code\u003e table is literally cut-and-pasted from \u003ca href=\"http://rosalind.info/problems/prot/\"\u003ethe\nproblem page\u003c/a\u003e (click on “RNA codon table”). I think it’s a good example\nof using macros to provide a little bit of syntactic sugar to make the\ncode just a little more readable and elegant, or to encode domain\nfacts as directly as possible.\u003c/p\u003e\n\u003cp\u003e\nThis and my other solutions so far are \u003ca href=\"https://github.com/eigenhombre/rosalind\"\u003eup on GitHub\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003e\n\n\n\n\n\n\u003ca href=\"http://johnj.com/roz.jpg\"\u003e\u003cimg class=\"resize\" src=\"/roz_hu1474441257dfbaa723f3b3423992f92d_2704813_700x0_resize_q75_box.jpg\" style=\"width:600px; border:0px solid black;\"/\u003e\u003c/a\u003e\n\n\u003c/p\u003e\n\n\n\n\u003cp\u003e\n\n\nLater: \u003ca href=\"http://johnj.com/posts/exploratory-genomics-with-clojure/\"\u003eExploratory Genomics with Clojure\u003c/a\u003e\n\n\n\u003cbr/\u003e\n\n\nEarlier: \u003ca href=\"http://johnj.com/posts/intro-to-context-managers-in-python/\"\u003eIntroduction to Context Managers in Python\u003c/a\u003e\n\n\n\u003c/p\u003e\u003cp\u003e\n\n\n\n\u003c/p\u003e\u003c/main\u003e",
  "Date": "2013-06-09T00:00:00Z",
  "Author": "John Jacobsen"
}