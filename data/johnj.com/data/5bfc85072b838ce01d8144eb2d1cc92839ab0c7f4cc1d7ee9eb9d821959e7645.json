{
  "Source": "johnj.com",
  "Title": "2024 Blogging Intentions",
  "Link": "http://johnj.com/posts/2024-blogging-intentions/",
  "Content": "\u003cmain class=\"content\"\u003e\n\n\n\u003ch1\u003e2024 Blogging Intentions\u003c/h1\u003e\n\n\n\u003cp\u003e\n\n\u003ca class=\"tag\" href=\"/tags/code\"\u003e\u003cspan class=\"code-tag\"\u003ecode\u003c/span\u003e\u003c/a\u003e\n\n\u003ca class=\"tag\" href=\"/tags/meta\"\u003e\u003cspan class=\"meta-tag\"\u003emeta\u003c/span\u003e\u003c/a\u003e\n\n\u003ca class=\"tag\" href=\"/tags/emacs\"\u003e\u003cspan class=\"emacs-tag\"\u003eemacs\u003c/span\u003e\u003c/a\u003e\n\n  ..... \u003cem\u003e\u003ctime class=\"postdate\" datetime=\"2024-01-17T00:00:00Z\"\u003e\n      January 17, 2024\n    \u003c/time\u003e\u003c/em\u003e\n\u003c/p\u003e\n\n\n\n\u003cp\u003e\n\n\nLater: \u003ca href=\"http://johnj.com/posts/in-praise-of-small-scripts/\"\u003eIn Praise of Small Shell Scripts\u003c/a\u003e\n\n\n\u003cbr/\u003e\n\n\nEarlier: \u003ca href=\"http://johnj.com/posts/practices/\"\u003ePractices for Software Projects\u003c/a\u003e\n\n\n\u003c/p\u003e\u003cp\u003e\n\n\n\n\n\u003c/p\u003e\u003cp\u003e\n\n\n\n\n\n\u003ca href=\"http://johnj.com/clouds-from-point.jpg\"\u003e\u003cimg class=\"resize\" src=\"/clouds-from-point_hu1d36c317d4aa8c1ee3d7af697472b9f4_2115054_700x0_resize_q75_box.jpg\" style=\"width:400px; border:0px solid black;\"/\u003e\u003c/a\u003e\n\n\u003c/p\u003e\n\u003cp\u003e\nI can\u0026#39;t believe I haven\u0026#39;t written anything here in over a year.\u003c/p\u003e\n\u003cp\u003e\nI increasingly want to move my experimental, art, hobby, and\nprofessional content away from platforms that exist to extract value\nfrom me and my friends.  I\u0026#39;d also like to be less precious with this\nspace, to treat it in the casual, experimental fashion I would treat\nInstagram or Facebook.  So I\u0026#39;m going to be playing around with posting\nshorter posts, unfinished things, and worrying less about writing\ncomplete articles (like I did at times while \u003ca href=\"http://johnj.com/tags/southpole/\"\u003etraveling to the Pole\u003c/a\u003e).\u003c/p\u003e\n\u003cp\u003e\nThis is partly inspired by \u003ca href=\"https://www.calmabiding.me/\"\u003erecent efforts\u003c/a\u003e along somewhat similar lines\nby my friend Stephen Starkey.\u003c/p\u003e\n\u003cdiv id=\"outline-container-headline-1\" class=\"outline-2\"\u003e\n\u003ch2 id=\"headline-1\"\u003e\nEmacs, Continued\n\u003c/h2\u003e\n\u003cdiv id=\"outline-text-headline-1\" class=\"outline-text-2\"\u003e\n\u003cp\u003e\nA few years ago I \u003ca href=\"http://johnj.com/posts/another-migration/\"\u003estarted using the static site generator Hugo for\nthis site\u003c/a\u003e.  I think that\u0026#39;s still going reasonably well.\u003c/p\u003e\n\u003cp\u003e\nI use Emacs less than I used to, using VSCode for most programming\ntasks recently (because Copilot).  But there are three things I still\nuse Emacs for habitually:\u003c/p\u003e\n\u003cdiv id=\"outline-container-headline-2\" class=\"outline-3\"\u003e\n\u003ch3 id=\"headline-2\"\u003e\nWriting prose\n\u003c/h3\u003e\n\u003cdiv id=\"outline-text-headline-2\" class=\"outline-text-3\"\u003e\n\u003cp\u003e\nPlain text is king, completely platform agnostic.  And though I\u0026#39;m not\nsure why, I find it\u0026#39;s actually nice to use a different platform for\nwriting than for writing large amounts of production code.\u003c/p\u003e\n\u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv id=\"outline-container-headline-3\" class=\"outline-3\"\u003e\n\u003ch3 id=\"headline-3\"\u003e\nGit operations\n\u003c/h3\u003e\n\u003cdiv id=\"outline-text-headline-3\" class=\"outline-text-3\"\u003e\n\u003cp\u003e\nMagit is such a huge time saver.  I typically commit and push code\nseveral, or dozens, of times a day – with Magit, these operations are\nstreamlined to the point where they are essentially frictionless.\u003c/p\u003e\n\u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv id=\"outline-container-headline-4\" class=\"outline-3\"\u003e\n\u003ch3 id=\"headline-4\"\u003e\n\u0026#34;\u003ca href=\"https://howardism.org/Technical/Emacs/literate-devops.html\"\u003eLiterate Devops\u003c/a\u003e\u0026#34;\n\u003c/h3\u003e\n\u003cdiv id=\"outline-text-headline-4\" class=\"outline-text-3\"\u003e\n\u003cp\u003e\nVery often I want to record what I\u0026#39;m doing on some system in a\nreproducible way without necessarily going through the process of\ncoding it up in a full-fledged infrastructure-as-code system like\nAnsible, Terraform, etc.  Often the main thing is to record my\nintentions (see \u0026#34;Writing prose,\u0026#34; above) and record the command-line\ninvocation required.  Org Mode and Org Babel are great for this.  I\nalso rely on \u003ccode class=\"verbatim\"\u003eyasnippet\u003c/code\u003e to make this frictionless.  Here, for\nexample, is the snippet I use to create a Bash command:\u003c/p\u003e\n\u003cpre class=\"example\"\u003e#+BEGIN_SRC bash :exports both :results pp replace :eval never-export :prologue \u0026#34;exec 2\u0026gt;\u0026amp;1\u0026#34; :epilogue \u0026#34;true\u0026#34;\n# Locally, on my laptop:\n... actual shell command goes here ...\n#+END_SRC\n\u003c/pre\u003e\n\u003cp\u003e\nThis snippet is bound to the abbreviation \u003ccode class=\"verbatim\"\u003ebegsh\u003c/code\u003e: when I type that\nprefix plus \u003ccode class=\"verbatim\"\u003eTAB\u003c/code\u003e I get the above Org-Babel snippet inserted directly\nat point.  Then, to actually execute the command, typing \u003ccode class=\"verbatim\"\u003eC-c C-c\u003c/code\u003e\nwithin the code block runs it and \u003cem\u003edisplays the results in the\ndocument I\u0026#39;m writing.\u003c/em\u003e\u003c/p\u003e\n\u003cp\u003e\nHere\u0026#39;s a slightly more complex snippet for executing code remotely on my Raspberry Pi 4:\u003c/p\u003e\n\u003cpre class=\"example\"\u003e#+BEGIN_SRC bash :async :exports both :results pp replace :eval never-export :prologue \u0026#34;exec 2\u0026gt;\u0026amp;1\u0026#34; :epilogue \u0026#34;true\u0026#34; :dir /ssh:4pi:\n... actual shell command goes here ...\n#+END_SRC\n\u003c/pre\u003e\n\u003cp\u003e\nIn this case, \u003ccode class=\"verbatim\"\u003eC-c C-c\u003c/code\u003e actually runs the command remotely, on my Pi, and injects the\nresults directly into the document, as before.  The \u003ccode class=\"verbatim\"\u003e:async\u003c/code\u003e option allows me to continue\nediting elsewhere and wait for the results to be inserted when the command completes.\u003c/p\u003e\n\u003c/div\u003e\n\u003c/div\u003e\n\u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv id=\"outline-container-headline-5\" class=\"outline-2\"\u003e\n\u003ch2 id=\"headline-5\"\u003e\nFuture Work\n\u003c/h2\u003e\n\u003cdiv id=\"outline-text-headline-5\" class=\"outline-text-2\"\u003e\n\u003cp\u003e\nIt would be nice to make adding images easier.  I still haven\u0026#39;t solved\nthe \u0026#34;post an image quickly or insert it into a document without\nfriction\u0026#34; problem (one of the things Instagram accomplishes… along\nwith a lot of extra stuff I wish they wouldn\u0026#39;t accomplish).  Ideally\nadding images would be a drag-and-drop kind of operation, and would\nhandle any needed Bash, Emacs or Hugo operations automagically.\u003c/p\u003e\n\u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv id=\"outline-container-headline-6\" class=\"outline-2\"\u003e\n\u003ch2 id=\"headline-6\"\u003e\nSummary\n\u003c/h2\u003e\n\u003cdiv id=\"outline-text-headline-6\" class=\"outline-text-2\"\u003e\n\u003cp\u003e\nI\u0026#39;m trying to use a set of simple tools to make blogging frictionless\nand less precious… without indenturing myself to companies to whom \u003ca href=\"https://en.wikipedia.org/wiki/The_Social_Dilemma\"\u003eI\nam the product\u003c/a\u003e.\u003c/p\u003e\n\u003c/div\u003e\n\u003c/div\u003e\n\n\n\n\u003cp\u003e\n\n\nLater: \u003ca href=\"http://johnj.com/posts/in-praise-of-small-scripts/\"\u003eIn Praise of Small Shell Scripts\u003c/a\u003e\n\n\n\u003cbr/\u003e\n\n\nEarlier: \u003ca href=\"http://johnj.com/posts/practices/\"\u003ePractices for Software Projects\u003c/a\u003e\n\n\n\u003c/p\u003e\u003cp\u003e\n\n\n\n\u003c/p\u003e\u003c/main\u003e",
  "Date": "2024-01-17T00:00:00Z",
  "Author": "John Jacobsen"
}