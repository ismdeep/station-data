{
  "Source": "johnj.com",
  "Title": "Getting Our Hands Dirty (with the Human Genome)",
  "Link": "http://johnj.com/posts/getting-our-hands-dirty/",
  "Content": "\u003cmain class=\"content\"\u003e\n\n\n\u003ch1\u003eGetting Our Hands Dirty (with the Human Genome)\u003c/h1\u003e\n\n\n\u003cp\u003e\n\n\u003ca class=\"tag\" href=\"/tags/clojure\"\u003e\u003cspan class=\"clojure-tag\"\u003eclojure\u003c/span\u003e\u003c/a\u003e\n\n\u003ca class=\"tag\" href=\"/tags/code\"\u003e\u003cspan class=\"code-tag\"\u003ecode\u003c/span\u003e\u003c/a\u003e\n\n\u003ca class=\"tag\" href=\"/tags/genomics\"\u003e\u003cspan class=\"genomics-tag\"\u003egenomics\u003c/span\u003e\u003c/a\u003e\n\n  ..... \u003cem\u003e\u003ctime class=\"postdate\" datetime=\"2013-07-10T00:00:00Z\"\u003e\n      July 10, 2013\n    \u003c/time\u003e\u003c/em\u003e\n\u003c/p\u003e\n\n\n\n\u003cp\u003e\n\n\nLater: \u003ca href=\"http://johnj.com/posts/updating-the-genome-decoder-resulting-consequences/\"\u003eUpdating the Genome Decoder\u003c/a\u003e\n\n\n\u003cbr/\u003e\n\n\nEarlier: \u003ca href=\"http://johnj.com/posts/validating-the-genome-decoder/\"\u003eValidating the Genome Decoder\u003c/a\u003e\n\n\n\u003c/p\u003e\u003cp\u003e\n\n\n\n\u003c/p\u003e\u003cp\u003e\nIn the past \u003ca href=\"/posts/a-two-bit-decoder\"\u003etwo\u003c/a\u003e \u003ca href=\"/posts/validating-the-genome-decoder\"\u003eposts\u003c/a\u003e, we created and validated a decoder for genome\ndata in 2bit format.\u003c/p\u003e\n\u003cp\u003e\nLet’s start actually looking at the human and yeast genomes \u003cem\u003eper\nse\u003c/em\u003e. First, if you haven’t downloaded it yet, you’ll need a copy of the\nhuman genome data file:\u003c/p\u003e\n\u003cdiv class=\"src src-text\"\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-text\" data-lang=\"text\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003ecd /tmp\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003ewget http://hgdownload.cse.ucsc.edu/goldenPath/hg19/bigZips/hg19.2bit\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003c/div\u003e\n\u003cp\u003e\n(Depending on your local bandwidth conditions, this can take quite awhile.)\u003c/p\u003e\n\u003cp\u003e\nAgain we define convenience vars for the two data files:\u003c/p\u003e\n\u003cdiv class=\"src src-text\"\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-text\" data-lang=\"text\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e(def human \u0026#34;/tmp/hg19.2bit\u0026#34;)\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e(def yeast (as-file (resource \u0026#34;sacCer3.2bit\u0026#34;)))\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003c/div\u003e\n\u003cp\u003e\nThe simplest thing we can do is count base pairs:\u003c/p\u003e\n\u003cdiv class=\"src src-text\"\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-text\" data-lang=\"text\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003ejenome.core\u0026gt; (time (-\u0026gt;\u0026gt; yeast genome-sequence count))\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u0026#34;Elapsed time: 17577.042 msecs\u0026#34;\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e12157105\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003ejenome.core\u0026gt; (time (-\u0026gt;\u0026gt; human genome-sequence count))\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u0026#34;Elapsed time: 4513537.422 msecs\u0026#34;\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e-1157806032\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003c/div\u003e\n\u003cp\u003e\nWTF?! count has overflowed (if you convert -1157806032 to an unsigned\nint you get 3137161264, which makes more sense). This, and our running\ntime of 75 minutes, is our first hint of pain associated with handling\nwith such a large dataset.\u003c/p\u003e\n\u003cp\u003e\nIt’s worth noting that number overflows in Clojure generally raise an\nArithmeticException (or silently get promoted to BigIntegers,\ndepending on the operators used) – I emailed \u003ca href=\"https://groups.google.com/forum/#!forum/clojure\"\u003ethe Clojure mailing list\u003c/a\u003e\nabout this surprise and \u003ca href=\"http://dev.clojure.org/jira/browse/CLJ-1229\"\u003ea ticket has been made\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003e\nThe overflow is easily enough remedied with a non-overflowing \u003ccode class=\"verbatim\"\u003ecount\u003c/code\u003e\n(\u003ccode class=\"verbatim\"\u003einc\u0026#39;\u003c/code\u003e is one of the aforementioned promoting operators):\u003c/p\u003e\n\u003cdiv class=\"src src-text\"\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-text\" data-lang=\"text\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e(defn count\u0026#39; [s]   ;; Regular count overflows to negative int!\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  (loop [s s, n 0]\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    (if (seq s)\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e      (recur (rest s)\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e             (inc\u0026#39; n))\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e      n)))\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003c/div\u003e\n\u003cp\u003e\nWhich gives us the unsigned version of our previous answer, in 10%\nmore time:\u003c/p\u003e\n\u003cdiv class=\"src src-text\"\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-text\" data-lang=\"text\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003ejenome.core\u0026gt; (time (-\u0026gt;\u0026gt; human genome-sequence count\u0026#39;))\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u0026#34;Elapsed time: 4931630.301 msecs\u0026#34;\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e3137161264\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003ejenome.core\u0026gt; (float (/ 3137161264 12157105))\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e258.05167\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003c/div\u003e\n\u003cp\u003e\n(Update 2/14/2014: Matthew Wampler-Doty came up with a more elegant\n\u003ccode class=\"verbatim\"\u003ecount\u0026#39;\u003c/code\u003e:\u003c/p\u003e\n\u003cdiv class=\"src src-text\"\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-text\" data-lang=\"text\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e(defn count\u0026#39; [s] (reduce (fn [x _] (inc x)) 0 s))\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003c/div\u003e\n\u003cp\u003e\nwhich is about 25% faster than my slightly more naïve version.)\u003c/p\u003e\n\u003cp\u003e\nWe now have our first bit of insight into human vs. yeast genomes: we\nhumans have about 260x more base pairs than yeast do.\u003c/p\u003e\n\u003cp\u003e\nThe next question is, What are the relative proportions of occurrence\nof each base pair? Easily answered by the \u003ccode class=\"verbatim\"\u003efrequencies\u003c/code\u003e function:\u003c/p\u003e\n\u003cdiv class=\"src src-text\"\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-text\" data-lang=\"text\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003ejenome.core\u0026gt; (-\u0026gt;\u0026gt; yeast genome-sequence frequencies)\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e{:C 2320576, :A 3766349, :T 3753080, :G 2317100}\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003ejenome.core\u0026gt; (-\u0026gt;\u0026gt; human genome-sequence frequencies)\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e{:T 1095906163, :A 854963149, :C 592966724, :G 593325228}\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003ejenome.core\u0026gt;\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003c/div\u003e\n\u003cp\u003e\nThose numbers have a lot of digits, so here are some bar charts:\u003c/p\u003e\n\u003cfigure\u003e\n\n\n\n\n\n\u003ca href=\"http://johnj.com/hg-yeast-frequencies-1.png\"\u003e\u003cimg class=\"resize\" src=\"/hg-yeast-frequencies-1_hua39297837144926aa55ea00233c321cc_37860_700x0_resize_box_3.png\" style=\"width:700px; border:0px solid black;\"/\u003e\u003c/a\u003e\n\n\n\u003cfigcaption\u003e\nOur first stab at nucleotide frequencies\n\u003c/figcaption\u003e\n\u003c/figure\u003e\n\u003cp\u003e\nThough we are playing ignorant data analysts rather than real\nbiologists, this looks a bit fishy right out of the gate. Why so many\nTs?\u003c/p\u003e\n\u003cp\u003e\nAs a sanity check, perhaps we ought to look more closely at the actual\ndata:\u003c/p\u003e\n\u003cdiv class=\"src src-text\"\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-text\" data-lang=\"text\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003ejenome.core\u0026gt; (-\u0026gt;\u0026gt;\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e                human\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e                genome-sequence\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e                (map name)\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e                (take 100)\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e                (apply str))\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e;=\u0026gt; \u0026#34;TTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTT\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e;    TTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTT\u0026#34;\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003c/div\u003e\n\u003cp\u003e\nThat doesn’t look good at all. How are the first 10000 base pairs\ndistributed?\u003c/p\u003e\n\u003cdiv class=\"src src-text\"\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-text\" data-lang=\"text\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003ejenome.core\u0026gt; (-\u0026gt;\u0026gt;\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e                human\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e                genome-sequence\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e                (take 10000)\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e                frequencies)\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e;=\u0026gt; {:T 10000}\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003c/div\u003e\n\u003cp\u003e\nHow about the next 10,0000?\u003c/p\u003e\n\u003cdiv class=\"src src-text\"\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-text\" data-lang=\"text\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003ejenome.core\u0026gt; (-\u0026gt;\u0026gt;\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e                human\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e                genome-sequence\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e                (drop 10000)\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e                (take 10000)\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e                frequencies)\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e;=\u0026gt; {:T 2012, :A 2065, :C 3028, :G 2895}\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003c/div\u003e\n\u003cp\u003e\nThat looks a lot better. Playing around with this shows that exactly\nthe first 10,000 base pairs are Ts.\u003c/p\u003e\n\u003cp\u003e\nThe astute reader will recall that the file index in our decoder had\nslots for unknown (“N-block”) sequences. Though we didn’t explore them\nexplicitly, /S. Cerviciae/’s genome had nothing in these slots. It’s\ntime we went back and looked at our human’s file index:\u003c/p\u003e\n\u003cdiv class=\"src src-text\"\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-text\" data-lang=\"text\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  (-\u0026gt;\u0026gt; human\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e       sequence-headers\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e       (map (juxt :name :dna-size :n-block-count))\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e       clojure.pprint/pprint)\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e;; =\u0026gt;\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e([\u0026#34;chr1\u0026#34; 249250621 39]\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e [\u0026#34;chr2\u0026#34; 243199373 24]\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e [\u0026#34;chr3\u0026#34; 198022430 9]\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e [\u0026#34;chr4\u0026#34; 191154276 12]\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e [\u0026#34;chr5\u0026#34; 180915260 7]\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e [\u0026#34;chr6\u0026#34; 171115067 11]\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e [\u0026#34;chr7\u0026#34; 159138663 17]\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e [\u0026#34;chrX\u0026#34; 155270560 23]\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e [\u0026#34;chr8\u0026#34; 146364022 9]\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e ;; LOTS more entries...\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e)\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003c/div\u003e\n\u003cp\u003e\nHoly cow, they all have N-blocks. This is only the first section; \u003ca href=\"https://gist.github.com/eigenhombre/5967388\"\u003ethis\nGist\u003c/a\u003e shows the entire set of N-blocks for all the sequences. (It also\nshows that there are many more files in the index than the yeast\ngenome had, and many more than one for each of the 24 human\nchromosomes – clearly there are many things to learn about this data.)\u003c/p\u003e\n\u003cp\u003e\nMoreover, if we look at the N-blocks for the first sequence:\u003c/p\u003e\n\u003cdiv class=\"src src-text\"\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-text\" data-lang=\"text\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  (-\u0026gt;\u0026gt; human\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e       sequence-headers\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e       first\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e       ((juxt :n-block-starts :n-block-sizes))\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e       (apply interleave)\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e       (partition 2)\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e       (map vec)\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e       clojure.pprint/pprint)\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e;; Gives:\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e([0 10000]\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e [177417 50000]\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e [267719 50000]\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e [471368 50000]\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e ;; ... total of 39 entries.\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e)\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003c/div\u003e\n\u003cp\u003e\nAs expected, our first 10,000 base pairs are actually unknown. The\n2-bit file format apparently uses 0’s for the unknowns AND to\nrepresent Ts. The rest of the offsets and lengths are in \u003ca href=\"https://gist.github.com/eigenhombre/5967451\"\u003ethis\nGist\u003c/a\u003e. (Perhaps someone can explain to me why these are all multiples\nof 10000!)\u003c/p\u003e\n\u003cp\u003e\nAll this means that our decoder needs a tweak to give us \u003ccode class=\"verbatim\"\u003e:N\u003c/code\u003e instead\nof \u003ccode class=\"verbatim\"\u003e:T\u003c/code\u003e when the position of the base pair is inside one of the\nN-blocks. This we will accomplish in the next post, before we proceed\nto the study of other properties of the genome.\u003c/p\u003e\n\u003cp\u003e\nBefore we end, it’s worth noting that, had we been real biologists, we\nwould surely have known about \u003ca href=\"http://en.wikipedia.org/wiki/Chargaff\u0026#39;s_rules\"\u003eChargaff’s Rule\u003c/a\u003e, which states that A and\nT ratios should be the same, as are G and C, as born out in our yeast\ndistribution, above.\u003c/p\u003e\n\u003cp\u003e\nThough we haven’t gained mastery over too much of the genome yet, it\nis worth pointing out Clojure’s strengths in the above and previous\nposts. With comparatively little code we are able to investigate many\nof the features of these data sets, thanks to the power of the\nthreading macro \u003ccode class=\"verbatim\"\u003e-\u0026gt;\u0026gt;\u003c/code\u003e, higher-order functions such as \u003ccode class=\"verbatim\"\u003ejuxt\u003c/code\u003e and \u003ccode class=\"verbatim\"\u003emap\u003c/code\u003e, and\nsequence handling functions such as \u003ccode class=\"verbatim\"\u003einterleave\u003c/code\u003e, \u003ccode class=\"verbatim\"\u003epartition\u003c/code\u003e, and\n\u003ccode class=\"verbatim\"\u003efrequencies\u003c/code\u003e. We’ve also processed large data sets “lazily” without\nneeding to fit large amounts of data in memory at once. And we have\nhardly scratched the surface of Clojure’s tools for parallel\ncomputation, though we may make more use of these in coming posts.\u003c/p\u003e\n\n\n\n\u003cp\u003e\n\n\nLater: \u003ca href=\"http://johnj.com/posts/updating-the-genome-decoder-resulting-consequences/\"\u003eUpdating the Genome Decoder\u003c/a\u003e\n\n\n\u003cbr/\u003e\n\n\nEarlier: \u003ca href=\"http://johnj.com/posts/validating-the-genome-decoder/\"\u003eValidating the Genome Decoder\u003c/a\u003e\n\n\n\u003c/p\u003e\u003cp\u003e\n\n\n\n\u003c/p\u003e\u003c/main\u003e",
  "Date": "2013-07-10T00:00:00Z",
  "Author": "John Jacobsen"
}