{
  "Source": "johnj.com",
  "Title": "(oodles of delicious atoms)",
  "Link": "http://johnj.com/posts/oodles/",
  "Content": "\u003cmain class=\"content\"\u003e\n\n\n\u003ch1\u003e(oodles of delicious atoms)\u003c/h1\u003e\n\n\n\u003cp\u003e\n\n\u003ca class=\"tag\" href=\"/tags/clojure\"\u003e\u003cspan class=\"clojure-tag\"\u003eclojure\u003c/span\u003e\u003c/a\u003e\n\n\u003ca class=\"tag\" href=\"/tags/code\"\u003e\u003cspan class=\"code-tag\"\u003ecode\u003c/span\u003e\u003c/a\u003e\n\n\u003ca class=\"tag\" href=\"/tags/lisp\"\u003e\u003cspan class=\"lisp-tag\"\u003elisp\u003c/span\u003e\u003c/a\u003e\n\n  ..... \u003cem\u003e\u003ctime class=\"postdate\" datetime=\"2018-05-30T00:00:00Z\"\u003e\n      May 30, 2018\n    \u003c/time\u003e\u003c/em\u003e\n\u003c/p\u003e\n\n\n\n\u003cp\u003e\n\n\nLater: \u003ca href=\"http://johnj.com/posts/code-and-data/\"\u003eCode and Data\u003c/a\u003e\n\n\n\u003cbr/\u003e\n\n\nEarlier: \u003ca href=\"http://johnj.com/posts/painting-time/\"\u003ePainting and Time\u003c/a\u003e\n\n\n\u003c/p\u003e\u003cp\u003e\n\n\n\n\n\u003c/p\u003e\u003cdiv id=\"outline-container-headline-1\" class=\"outline-2\"\u003e\n\u003ch2 id=\"headline-1\"\u003e\nA Recursive Feast\n\u003c/h2\u003e\n\u003cdiv id=\"outline-text-headline-1\" class=\"outline-text-2\"\u003e\n\u003cp\u003e\nIn 1983, Douglas R. Hofstadter, author of \u0026#34;Gödel, Escher, Bach: An\nEternal Golden Braid\u0026#34; wrote a series of articles on Lisp in Scientific\nAmerican (later republished in the book \u003ca href=\"https://en.wikipedia.org/wiki/Metamagical_Themas\"\u003eMetamagical Themas\u003c/a\u003e, which is\nwhere I encountered them for the first time).  While much of the\nwriting focused on the nature of recursion in programming, the third\nand last article in the series provided an entertaining example of\nblurring the line between code and data, which is typical for Lisp\n(though somewhat less common in Clojure, except for the occasional\nmacro).\u003c/p\u003e\n\u003cp\u003e\nIn the example, a set of acronyms are presented; each acronym can be\n\u0026#34;expanded\u0026#34; into a phrase which itself may contain other acronyms.\nThe program generates random expansions of these acronyms, \u0026#34;bottoming\nout\u0026#34; (hitting the base case) at random, though with increasing\nprobability of termination for more deeply-nested expressions.\u003c/p\u003e\n\u003cp\u003e\nWhat follows is my translation of the Lisp code in his articles into\nClojure, with a few extra details and explanations.  A few interesting\nedge cases have to be accounted for to accommodate the differences\nbetween the languages.\u003c/p\u003e\n\u003cp\u003e\nIf you\u0026#39;re interested in running the code, it\u0026#39;s \u003ca href=\"https://github.com/eigenhombre/oodles\"\u003eon GitHub\u003c/a\u003e.\u003c/p\u003e\n\u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv id=\"outline-container-headline-2\" class=\"outline-2\"\u003e\n\u003ch2 id=\"headline-2\"\u003e\nCooking It Up\n\u003c/h2\u003e\n\u003cdiv id=\"outline-text-headline-2\" class=\"outline-text-2\"\u003e\n\u003cp\u003e\nFirst, a small macro helps us keep things tidy: \u003ccode class=\"verbatim\"\u003edefpasta\u003c/code\u003e makes a\nfunction that simply returns the list supplied as its argument,\navoiding the need for the argument vector or the quote.  Note that\njust one small macro provides enough \u0026#34;syntactic sugar\u0026#34; to make the\nexamples more readable.  We also attach metadata for convenience in\ntesting (see below).\u003c/p\u003e\n\u003cdiv class=\"src src-text\"\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-text\" data-lang=\"text\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e(defmacro defpasta [name_ \u0026amp; expr]\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  `(defn ~(with-meta name_ {:pasta true}) []\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e     \u0026#39;~@expr))\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003c/div\u003e\n\u003cp\u003e\nNext are the actual acronym definitions. These are the definitions\nHofstadter uses, with commas treated differently.  The commas are\nimportant in his output, but commas are whitespace in Clojure… so\nwhere the symbols are used with commas in compound statements, we\nappend \u003ccode class=\"verbatim\"\u003e_CO\u003c/code\u003e to tell the program to supply a comma in the output.\n(Example: \u003ccode class=\"verbatim\"\u003eSAUCE,\u003c/code\u003e becomes \u003ccode class=\"verbatim\"\u003eSAUCE_CO\u003c/code\u003e.)\u003c/p\u003e\n\u003cp\u003e\nWe cannot, unfortunately, add commas after lists in this way, but\nhis example is inconsistent in this regard (three examples have\ncommas after lists, but the example expansion later in the article\ndoes not).\u003c/p\u003e\n\u003cp\u003e\nHostadter presents the acronyms in capital letters, though\nCommon Lisp atoms (analogous to Clojure symbols) are\ncase-insensitive; we follow that convention here and use it to\nindicate terms which may be expanded… that is to say, the\n\u003ccode class=\"verbatim\"\u003eCOFFEE\u003c/code\u003e in the expansion of \u003ccode class=\"verbatim\"\u003eSAUCE\u003c/code\u003e can itself be expanded to a\nphrase which includes \u003ccode class=\"verbatim\"\u003eESPRESSO\u003c/code\u003e, and so on.\u003c/p\u003e\n\u003cdiv class=\"src src-text\"\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-text\" data-lang=\"text\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e(defpasta TOMATOES (TOMATOES on MACARONI (and TOMATOES only)\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e                             exquisitely SPICED))\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e(defpasta MACARONI (MACARONI and CHEESE (a REPAST of Naples_CO Italy)))\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e(defpasta REPAST (rather extraordinary PASTA and SAUCE_CO typical))\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e(defpasta CHEESE (cheddar_CO havarti_CO, emmentaler\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e                                (especially SHARP emmenthaler)))\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e(defpasta SHARP (strong_CO hearty_CO and rather pungent))\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e(defpasta SPICED (sweetly pickled in CHEESE ENDIVE dressing))\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e(defpasta ENDIVE (egg NOODLES_CO dipped in vinegar eggnog))\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e(defpasta NOODLES (NOODLES (oodles of delicious LINGUINI) elegantly served))\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e(defpasta LINGUINI (LAMBCHOPS (including NOODLES)\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e                                  gotten usually in Northern Italy))\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e(defpasta PASTA (PASTA and SAUCE (that\u0026#39;s ALL!)))\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e(defpasta ALL! (a lucious lunch))\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e(defpasta SAUCE (SHAD and unusual COFFEE (excellente!)))\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e(defpasta SHAD (SPAGHETTI_CO heated al dente))\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e(defpasta SPAGHETTI (standard PASTA_CO always good_CO hot particularly\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e                              (twist_CO then ingest)))\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e(defpasta COFFEE (choice of fine flavors, particularly ESPRESSO))\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e(defpasta ESPRESSO (excellent_CO strong_CO powerful_CO rich ESPRESSO_CO\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e                                 suppressing sleep outrageously))\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e(defpasta BASTA! (belly all stuffed (tummy ache!)))\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e(defpasta LAMBCHOPS (LASAGNE and meatballs_CO casually heaped onto PASTA SAUCE))\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e(defpasta LASAGNE (LINGUINI and SAUCE and GARLIC (NOODLES everywhere!)))\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e(defpasta RHUBARB (RAVIOLI_CO heated under butter and RHUBARB (BASTA!)))\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e(defpasta RAVIOLI (RIGATONI and vongole in oil_CO lavishly introduced))\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e(defpasta RIGATONI (rich Italian GNOCCHI and TOMATOES (or NOODLES instead)))\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e(defpasta GNOCCHI (GARLIC NOODLES over crisp CHEESE_CO heated immediately))\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e(defpasta GARLIC (green and red LASAGNE in CHEESE))\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003c/div\u003e\n\u003cp\u003e\nHofstadter leaves the implementation of \u003ccode class=\"verbatim\"\u003eacronym?\u003c/code\u003e undefined,\nsince it is so implementation-specific.  In our case, something is\nan acronym if it\u0026#39;s a symbol and its name is equal to an\nupper case version of itself.\u003c/p\u003e\n\u003cdiv class=\"src src-text\"\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-text\" data-lang=\"text\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e(defn acronym? [x]\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  (and (symbol? x)\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e       (= (name x) (.toUpperCase (name x)))))\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003c/div\u003e\n\u003cp\u003e\nWe also want to be able to remove commas from a symbol and evaluate\nthe result as a function. This is also very implementation-specific;\nin our case, it relies on Clojure\u0026#39;s machinery for converting symbols\nto strings and vice-versa, and on the subtle differences between\nsymbols, vars, and functions:\u003c/p\u003e\n\u003cdiv class=\"src src-text\"\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-text\" data-lang=\"text\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e(defn strip-comma-and-eval [sym]\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  (let [base-symbol-name (-\u0026gt; sym\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e                             name\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e                             (clojure.string/replace #\u0026#34;_CO$\u0026#34; \u0026#34;\u0026#34;)\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e                             symbol)]\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    ((-\u0026gt; *ns*\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e          ns-map\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e          (get (symbol base-symbol-name))\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e          var-get))))\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e(strip-comma-and-eval \u0026#39;RHUBARB)\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e;;=\u0026gt;\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e(RAVIOLI_CO heated under butter and RHUBARB (BASTA!))\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003c/div\u003e\n\u003cp\u003e\n\u003ccode class=\"verbatim\"\u003elower\u003c/code\u003e reduces the probability by some amount to encourage our\nrecursion to bottom out (and thereby avoid stack overflows).\nHofstadter multiplies probabilities by 0.8, but I simply square the\nprobability so that higher probabilities decrease more slowly than\nlower ones as the recursion progresses:\u003c/p\u003e\n\u003cdiv class=\"src src-text\"\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-text\" data-lang=\"text\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e(defn lower [x] (* x x))\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003c/div\u003e\n\u003cp\u003e\nA significant portion of Hofstadter\u0026#39;s article relates to the\nrecursive \u003ccode class=\"verbatim\"\u003eexpand\u003c/code\u003e function, so I won\u0026#39;t go into details here.  This\nversion is similar to his; it adds a bottoming-out clause to\naccommodate the base case of an empty phrase (since \u003ccode class=\"verbatim\"\u003e()\u003c/code\u003e and \u003ccode class=\"verbatim\"\u003enil\u003c/code\u003e\nare not the same in Clojure, as they are in Common Lisp).  Also we\nuse \u003ccode class=\"verbatim\"\u003estrip-comma-and-eval\u003c/code\u003e instead of plain \u003ccode class=\"verbatim\"\u003eeval\u003c/code\u003e to handle the\ncomma-ed symbols.\u003c/p\u003e\n\u003cdiv class=\"src src-text\"\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-text\" data-lang=\"text\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e(defn expand [phrase probability]\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  (cond\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    (symbol? phrase) phrase\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    (empty? phrase) phrase\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    (acronym? (first phrase))\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    (if (\u0026lt; (rand) probability)\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e      (concat\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e       (expand (strip-comma-and-eval (first phrase)) (lower probability))\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e       (expand (rest phrase) probability))\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e      (cons (first phrase) (expand (rest phrase) probability)))\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    :else (cons (expand (first phrase) (lower probability))\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e                (expand (rest phrase) (lower probability)))))\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003c/div\u003e\n\u003cp\u003e\nUltimately we want to make the output similar to what Hofstadter shows in\nthe book.  The \u003ccode class=\"verbatim\"\u003enormalize\u003c/code\u003e function does this, relying on two helper\nfunctions, whose names are self-explanatory:\u003c/p\u003e\n\u003cdiv class=\"src src-text\"\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-text\" data-lang=\"text\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e(defn lower-case-symbol [x]\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  (if-not (symbol? x)\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    x\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    (-\u0026gt; x name .toLowerCase symbol)))\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e(defn get-commas-back [x]\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  (if-not (symbol? x)\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    x\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    (-\u0026gt; x\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        name\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        (clojure.string/replace #\u0026#34;_CO$\u0026#34; \u0026#34;,\u0026#34;)\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        symbol)))\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003c/div\u003e\n\u003cp\u003e\nWhen we\u0026#39;re done expanding our lists of food (and our bellies), we\nprepare our data for output to the user: turn \u003ccode class=\"verbatim\"\u003e_CO\u003c/code\u003e suffixes into\nactual commas (using the fact that \u003ccode class=\"verbatim\"\u003e(symbol \u0026#34;x,\u0026#34;)\u003c/code\u003e yields a valid\nsymbol, if one that would be hard to read back at the REPL); and,\nlower-case all symbols to adhere to the style of the output shown in\n\u003cem\u003eMetamagical Themas:\u003c/em\u003e\u003c/p\u003e\n\u003cdiv class=\"src src-text\"\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-text\" data-lang=\"text\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e(defn normalize [expr]\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  (-\u0026gt;\u0026gt; expr\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e       (clojure.walk/postwalk get-commas-back)\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e       (clojure.walk/postwalk lower-case-symbol)))\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003c/div\u003e\n\u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv id=\"outline-container-headline-3\" class=\"outline-2\"\u003e\n\u003ch2 id=\"headline-3\"\u003e\nDinner Is Served\n\u003c/h2\u003e\n\u003cdiv id=\"outline-text-headline-3\" class=\"outline-text-2\"\u003e\n\u003cp\u003e\nNow for the actual function we\u0026#39;ll use to generate our expansions.\nSetting a large probability will ensure longer examples:\u003c/p\u003e\n\u003cdiv class=\"src src-text\"\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-text\" data-lang=\"text\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e(defn dinner [expr]\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  (normalize (expand expr 0.9999)))\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003c/div\u003e\n\u003cp\u003e\nWe should test our code to make sure it doesn\u0026#39;t bomb out on any of our\nacronyms.  Here we find all the acronyms based on the metadata added\nby the \u003ccode class=\"verbatim\"\u003edefpasta\u003c/code\u003e macro, ensuring each runs to completion:\u003c/p\u003e\n\u003cdiv class=\"src src-text\"\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-text\" data-lang=\"text\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e(let [nsm (ns-map *ns*)]\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  (doseq [[k v] nsm :when (:pasta (meta v))]\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    (dotimes [_ 10]\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e      (dinner (list k)))))\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003c/div\u003e\n\u003cp\u003e\nIf, like me, you use Emacs and CIDER and want long REPL examples,\nyou have to set `*print-length*` to something bigger than its\ndefault:\u003c/p\u003e\n\u003cdiv class=\"src src-text\"\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-text\" data-lang=\"text\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e(set! *print-length* 1000)\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003c/div\u003e\n\u003cp\u003e\nNow to run it!  Are you hungry yet?\u003c/p\u003e\n\u003cdiv class=\"src src-text\"\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-text\" data-lang=\"text\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e(dinner \u0026#39;(LINGUINI))\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e;;=\u0026gt;\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e(lasagne and meatballs, casually heaped onto pasta sauce (including\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003enoodles) gotten usually in northern italy and standard pasta, always\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003egood, hot particularly (twist, then ingest) heated al dente and\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eunusual coffee (excellente!) and green and red lasagne in cheese\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e(noodles (oodles of delicious linguini) elegantly served (oodles of\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003edelicious linguini) elegantly served everywhere!) and meatballs,\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003ecasually heaped onto pasta shad and unusual coffee (excellente!)\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e(including noodles (oodles of delicious linguini) elegantly served\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e(oodles of delicious linguini) elegantly served (oodles of delicious\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003elinguini) elegantly served (oodles of delicious linguini) elegantly\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eserved (oodles of delicious lasagne and meatballs, casually heaped\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eonto pasta sauce (including noodles) gotten usually in northern italy)\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eelegantly served) gotten usually in northern italy and standard pasta\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eand shad and unusual coffee (excellente!) (that\u0026#39;s all!) and shad and\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eunusual coffee (excellente!) (that\u0026#39;s all!) always good, hot\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eparticularly (twist, then ingest) heated al dente and unusual choice\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eof fine flavors particularly espresso (excellente!) and green and red\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003elasagne in cheese (noodles (oodles of delicious linguini) elegantly\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eserved (oodles of delicious linguini) elegantly served (oodles of\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003edelicious linguini) elegantly served (oodles of delicious linguini)\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eelegantly served everywhere!) and meatballs, casually heaped onto\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003epasta and sauce (that\u0026#39;s all!) and sauce (that\u0026#39;s all!) and shad and\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eunusual coffee (excellente!) (that\u0026#39;s all!) sauce (including noodles\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e(oodles of delicious linguini) elegantly served (oodles of delicious\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003elambchops (including noodles) gotten usually in northern italy)\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eelegantly served (oodles of delicious lambchops (including noodles)\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003egotten usually in northern italy) elegantly served) gotten usually in\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003enorthern italy and standard pasta and shad and unusual coffee\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e(excellente!) (that\u0026#39;s all!) and standard pasta, always good, hot\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eparticularly (twist, then ingest) heated al dente and unusual coffee\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e(excellente!) (that\u0026#39;s all!) and spaghetti, heated al dente and unusual\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003ecoffee (excellente!) (that\u0026#39;s a lucious lunch) and standard pasta,\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003ealways good, hot particularly (twist, then ingest) heated al dente and\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eunusual coffee (excellente!) (that\u0026#39;s a lucious lunch) always good, hot\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eparticularly (twist, then ingest) heated al dente and unusual choice\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eof fine flavors particularly espresso (excellente!) and green and red\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003elinguini and sauce and garlic (noodles everywhere!) and meatballs,\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003ecasually heaped onto pasta sauce (including noodles) gotten usually in\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003enorthern italy and spaghetti, heated al dente and unusual coffee\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e(excellente!) and green and red lasagne in cheese (noodles (oodles of\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003edelicious linguini) elegantly served everywhere!) in cheese (noodles\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e(oodles of delicious linguini) elegantly served (oodles of delicious\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003elinguini) elegantly served (oodles of delicious linguini) elegantly\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eserved (oodles of delicious linguini) elegantly served (oodles of\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003edelicious linguini) elegantly served (oodles of delicious lambchops\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e(including noodles) gotten usually in northern italy) elegantly served\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e(oodles of delicious linguini) elegantly served (oodles of delicious\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003elinguini) elegantly served everywhere!) and meatballs, casually heaped\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eonto pasta and shad and unusual coffee (excellente!) (that\u0026#39;s a lucious\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003elunch) and sauce (that\u0026#39;s all!) and spaghetti, heated al dente and\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eunusual coffee (excellente!) (that\u0026#39;s a lucious lunch) and standard\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003epasta and sauce (that\u0026#39;s all!) always good, hot particularly (twist,\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003ethen ingest) heated al dente and unusual coffee (excellente!) (that\u0026#39;s\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003ea lucious lunch) shad and unusual choice of fine flavors particularly\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eespresso (excellente!) (including noodles (oodles of delicious\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003elinguini) elegantly served (oodles of delicious linguini) elegantly\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eserved (oodles of delicious linguini) elegantly served (oodles of\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003edelicious linguini) elegantly served (oodles of delicious lasagne and\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003emeatballs, casually heaped onto pasta sauce (including noodles) gotten\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eusually in northern italy) elegantly served (oodles of delicious\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003elambchops (including noodles) gotten usually in northern italy)\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eelegantly served (oodles of delicious linguini and sauce and garlic\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e(noodles everywhere!) and meatballs, casually heaped onto pasta sauce\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e(including noodles (oodles of delicious linguini) elegantly served)\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003egotten usually in northern italy) elegantly served (oodles of\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003edelicious lambchops (including noodles (oodles of delicious linguini)\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eelegantly served) gotten usually in northern italy) elegantly served\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e(oodles of delicious lasagne and meatballs, casually heaped onto pasta\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003esauce (including noodles) gotten usually in northern italy and shad\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eand unusual coffee (excellente!) and garlic (noodles everywhere!) and\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003emeatballs, casually heaped onto pasta sauce (including noodles (oodles\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eof delicious linguini) elegantly served (oodles of delicious linguini)\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eelegantly served) gotten usually in northern italy) elegantly served\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e(oodles of delicious linguini and sauce and garlic (noodles\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eeverywhere!) and meatballs, casually heaped onto pasta sauce\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e(including noodles) gotten usually in northern italy and spaghetti,\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eheated al dente and unusual coffee (excellente!) and garlic (noodles\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e(oodles of delicious linguini) elegantly served everywhere!) and\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003emeatballs, casually heaped onto pasta sauce (including noodles (oodles\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eof delicious linguini) elegantly served (oodles of delicious linguini)\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eelegantly served) gotten usually in northern italy) elegantly served)\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003egotten usually in northern italy)\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003c/div\u003e\n\u003cp\u003e\nMan, I\u0026#39;m stuffed!\u003c/p\u003e\n\u003cp\u003e\n\u003cem\u003eA talk based on this code was given as in instructional\u003c/em\u003e\n/\n\u003cem\u003efun exercise at Clojurepalooza at OpinionLab in May of 2018.\u003c/em\u003e\u003c/p\u003e\n\u003c/div\u003e\n\u003c/div\u003e\n\n\n\n\u003cp\u003e\n\n\nLater: \u003ca href=\"http://johnj.com/posts/code-and-data/\"\u003eCode and Data\u003c/a\u003e\n\n\n\u003cbr/\u003e\n\n\nEarlier: \u003ca href=\"http://johnj.com/posts/painting-time/\"\u003ePainting and Time\u003c/a\u003e\n\n\n\u003c/p\u003e\u003cp\u003e\n\n\n\n\u003c/p\u003e\u003c/main\u003e",
  "Date": "2018-05-30T00:00:00Z",
  "Author": "John Jacobsen"
}