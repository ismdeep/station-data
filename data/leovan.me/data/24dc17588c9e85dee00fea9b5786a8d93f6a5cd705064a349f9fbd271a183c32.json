{
  "Source": "leovan.me",
  "Title": "CSS 布局和定位 (CSS Display \u0026 Position)",
  "Link": "https://leovan.me/cn/2023/05/css-display-and-position/",
  "Content": "\u003carticle class=\"main\"\u003e\n    \u003cheader class=\"content-title\"\u003e\n    \n\u003ch1 class=\"title\"\u003e\n  \n  CSS 布局和定位 (CSS Display \u0026amp; Position)\n  \n\u003c/h1\u003e\n\n\n\n\n\n\n\n\u003ch2 class=\"author-date\"\u003e范叶亮 / \n2023-05-03\u003c/h2\u003e\n\n\n\n\u003ch3 class=\"post-meta\"\u003e\n\n\n\u003cstrong\u003e分类: \u003c/strong\u003e\n\u003ca href=\"/categories/%E7%BC%96%E7%A8%8B\"\u003e编程\u003c/a\u003e, \u003ca href=\"/categories/%E8%AE%BE%E8%AE%A1\"\u003e设计\u003c/a\u003e\n\n\n\n\n/\n\n\n\n\n\u003cstrong\u003e标签: \u003c/strong\u003e\n\u003cspan\u003eCSS\u003c/span\u003e, \u003cspan\u003e盒模型\u003c/span\u003e, \u003cspan\u003ebox model\u003c/span\u003e, \u003cspan\u003e块级盒子\u003c/span\u003e, \u003cspan\u003eblock box\u003c/span\u003e, \u003cspan\u003e内联盒子\u003c/span\u003e, \u003cspan\u003einline box\u003c/span\u003e, \u003cspan\u003e布局\u003c/span\u003e, \u003cspan\u003edisplay\u003c/span\u003e, \u003cspan\u003e弹性布局\u003c/span\u003e, \u003cspan\u003eflex layout\u003c/span\u003e, \u003cspan\u003e网格布局\u003c/span\u003e, \u003cspan\u003egrid layout\u003c/span\u003e, \u003cspan\u003e定位\u003c/span\u003e, \u003cspan\u003eposition\u003c/span\u003e, \u003cspan\u003e静态定位\u003c/span\u003e, \u003cspan\u003estatic\u003c/span\u003e, \u003cspan\u003e相对定位\u003c/span\u003e, \u003cspan\u003erelative\u003c/span\u003e, \u003cspan\u003e绝对定位\u003c/span\u003e, \u003cspan\u003eabsolute\u003c/span\u003e, \u003cspan\u003e固定定位\u003c/span\u003e, \u003cspan\u003efixed\u003c/span\u003e, \u003cspan\u003e粘性定位\u003c/span\u003e, \u003cspan\u003esticky\u003c/span\u003e\n\n\n\n\n/\n\n\n\u003cstrong\u003e字数: \u003c/strong\u003e\n9567\n\u003c/h3\u003e\n\n\n\n\u003chr/\u003e\n\n\n\n    \n    \n    \u003cins class=\"adsbygoogle\" style=\"display:block; text-align:center;\" data-ad-layout=\"in-article\" data-ad-format=\"fluid\" data-ad-client=\"ca-pub-2608165017777396\" data-ad-slot=\"1261604535\"\u003e\u003c/ins\u003e\n    \u003cscript\u003e\n    (adsbygoogle = window.adsbygoogle || []).push({});\n    \u003c/script\u003e\n    \n    \n    \u003c/header\u003e\n\n\n\n\u003cdiv class=\"toc-depth-3\"\u003e\u003cnav id=\"TableOfContents\"\u003e\n  \u003cul\u003e\n    \u003cli\u003e\u003ca href=\"#盒模型\"\u003e盒模型\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#布局\"\u003e布局\u003c/a\u003e\n      \u003cul\u003e\n        \u003cli\u003e\u003ca href=\"#弹性布局\"\u003e弹性布局\u003c/a\u003e\n          \u003cul\u003e\n            \u003cli\u003e\u003ca href=\"#父元素属性\"\u003e父元素属性\u003c/a\u003e\n              \u003cul\u003e\n                \u003cli\u003e\u003ca href=\"#display\"\u003edisplay\u003c/a\u003e\u003c/li\u003e\n                \u003cli\u003e\u003ca href=\"#flex-direction\"\u003eflex-direction\u003c/a\u003e\u003c/li\u003e\n                \u003cli\u003e\u003ca href=\"#flex-wrap\"\u003eflex-wrap\u003c/a\u003e\u003c/li\u003e\n                \u003cli\u003e\u003ca href=\"#flex-flow\"\u003eflex-flow\u003c/a\u003e\u003c/li\u003e\n                \u003cli\u003e\u003ca href=\"#justify-content\"\u003ejustify-content\u003c/a\u003e\u003c/li\u003e\n                \u003cli\u003e\u003ca href=\"#align-items\"\u003ealign-items\u003c/a\u003e\u003c/li\u003e\n                \u003cli\u003e\u003ca href=\"#align-content\"\u003ealign-content\u003c/a\u003e\u003c/li\u003e\n                \u003cli\u003e\u003ca href=\"#gap-row-gap-column-gap\"\u003egap, row-gap, column-gap\u003c/a\u003e\u003c/li\u003e\n              \u003c/ul\u003e\n            \u003c/li\u003e\n            \u003cli\u003e\u003ca href=\"#子元素属性\"\u003e子元素属性\u003c/a\u003e\n              \u003cul\u003e\n                \u003cli\u003e\u003ca href=\"#order\"\u003eorder\u003c/a\u003e\u003c/li\u003e\n                \u003cli\u003e\u003ca href=\"#flex-grow\"\u003eflex-grow\u003c/a\u003e\u003c/li\u003e\n                \u003cli\u003e\u003ca href=\"#flex-shrink\"\u003eflex-shrink\u003c/a\u003e\u003c/li\u003e\n                \u003cli\u003e\u003ca href=\"#flex-basis\"\u003eflex-basis\u003c/a\u003e\u003c/li\u003e\n                \u003cli\u003e\u003ca href=\"#flex\"\u003eflex\u003c/a\u003e\u003c/li\u003e\n                \u003cli\u003e\u003ca href=\"#align-self\"\u003ealign-self\u003c/a\u003e\u003c/li\u003e\n              \u003c/ul\u003e\n            \u003c/li\u003e\n          \u003c/ul\u003e\n        \u003c/li\u003e\n        \u003cli\u003e\u003ca href=\"#网格布局\"\u003e网格布局\u003c/a\u003e\n          \u003cul\u003e\n            \u003cli\u003e\u003ca href=\"#核心概念\"\u003e核心概念\u003c/a\u003e\n              \u003cul\u003e\n                \u003cli\u003e\u003ca href=\"#网格容器\"\u003e网格容器\u003c/a\u003e\u003c/li\u003e\n                \u003cli\u003e\u003ca href=\"#网格项目\"\u003e网格项目\u003c/a\u003e\u003c/li\u003e\n                \u003cli\u003e\u003ca href=\"#网格线\"\u003e网格线\u003c/a\u003e\u003c/li\u003e\n                \u003cli\u003e\u003ca href=\"#网格单元\"\u003e网格单元\u003c/a\u003e\u003c/li\u003e\n                \u003cli\u003e\u003ca href=\"#网格轨道\"\u003e网格轨道\u003c/a\u003e\u003c/li\u003e\n                \u003cli\u003e\u003ca href=\"#网格区域\"\u003e网格区域\u003c/a\u003e\u003c/li\u003e\n              \u003c/ul\u003e\n            \u003c/li\u003e\n            \u003cli\u003e\u003ca href=\"#父元素属性-1\"\u003e父元素属性\u003c/a\u003e\n              \u003cul\u003e\n                \u003cli\u003e\u003ca href=\"#display-1\"\u003edisplay\u003c/a\u003e\u003c/li\u003e\n                \u003cli\u003e\u003ca href=\"#grid-template-columns-grid-template-rows\"\u003egrid-template-columns, grid-template-rows\u003c/a\u003e\u003c/li\u003e\n                \u003cli\u003e\u003ca href=\"#grid-template-areas\"\u003egrid-template-areas\u003c/a\u003e\u003c/li\u003e\n                \u003cli\u003e\u003ca href=\"#grid-template\"\u003egrid-template\u003c/a\u003e\u003c/li\u003e\n                \u003cli\u003e\u003ca href=\"#column-gap-row-gap-grid-column-gap-grid-row-gap\"\u003ecolumn-gap, row-gap, grid-column-gap, grid-row-gap\u003c/a\u003e\u003c/li\u003e\n                \u003cli\u003e\u003ca href=\"#gap-grid-gap\"\u003egap, grid-gap\u003c/a\u003e\u003c/li\u003e\n                \u003cli\u003e\u003ca href=\"#justify-items\"\u003ejustify-items\u003c/a\u003e\u003c/li\u003e\n                \u003cli\u003e\u003ca href=\"#align-items-1\"\u003ealign-items\u003c/a\u003e\u003c/li\u003e\n                \u003cli\u003e\u003ca href=\"#place-items\"\u003eplace-items\u003c/a\u003e\u003c/li\u003e\n                \u003cli\u003e\u003ca href=\"#justify-content-1\"\u003ejustify-content\u003c/a\u003e\u003c/li\u003e\n                \u003cli\u003e\u003ca href=\"#align-content-1\"\u003ealign-content\u003c/a\u003e\u003c/li\u003e\n                \u003cli\u003e\u003ca href=\"#place-content\"\u003eplace-content\u003c/a\u003e\u003c/li\u003e\n                \u003cli\u003e\u003ca href=\"#grid-auto-columns-grid-auto-rows\"\u003egrid-auto-columns, grid-auto-rows\u003c/a\u003e\u003c/li\u003e\n                \u003cli\u003e\u003ca href=\"#grid-auto-flow\"\u003egrid-auto-flow\u003c/a\u003e\u003c/li\u003e\n                \u003cli\u003e\u003ca href=\"#grid\"\u003egrid\u003c/a\u003e\u003c/li\u003e\n              \u003c/ul\u003e\n            \u003c/li\u003e\n            \u003cli\u003e\u003ca href=\"#子元素属性-1\"\u003e子元素属性\u003c/a\u003e\n              \u003cul\u003e\n                \u003cli\u003e\u003ca href=\"#grid-column-start-grid-column-end-grid-row-start-grid-row-end\"\u003egrid-column-start, grid-column-end, grid-row-start, grid-row-end\u003c/a\u003e\u003c/li\u003e\n                \u003cli\u003e\u003ca href=\"#grid-column-grid-row\"\u003egrid-column, grid-row\u003c/a\u003e\u003c/li\u003e\n                \u003cli\u003e\u003ca href=\"#grid-area\"\u003egrid-area\u003c/a\u003e\u003c/li\u003e\n                \u003cli\u003e\u003ca href=\"#justify-self\"\u003ejustify-self\u003c/a\u003e\u003c/li\u003e\n                \u003cli\u003e\u003ca href=\"#align-self-1\"\u003ealign-self\u003c/a\u003e\u003c/li\u003e\n                \u003cli\u003e\u003ca href=\"#place-self\"\u003eplace-self\u003c/a\u003e\u003c/li\u003e\n              \u003c/ul\u003e\n            \u003c/li\u003e\n          \u003c/ul\u003e\n        \u003c/li\u003e\n      \u003c/ul\u003e\n    \u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#定位\"\u003e定位\u003c/a\u003e\n      \u003cul\u003e\n        \u003cli\u003e\u003ca href=\"#静态定位\"\u003e静态定位\u003c/a\u003e\u003c/li\u003e\n        \u003cli\u003e\u003ca href=\"#相对定位\"\u003e相对定位\u003c/a\u003e\u003c/li\u003e\n        \u003cli\u003e\u003ca href=\"#绝对定位\"\u003e绝对定位\u003c/a\u003e\u003c/li\u003e\n        \u003cli\u003e\u003ca href=\"#固定定位\"\u003e固定定位\u003c/a\u003e\u003c/li\u003e\n        \u003cli\u003e\u003ca href=\"#粘性定位\"\u003e粘性定位\u003c/a\u003e\u003c/li\u003e\n      \u003c/ul\u003e\n    \u003c/li\u003e\n  \u003c/ul\u003e\n\u003c/nav\u003e\u003c/div\u003e\n\n\n\u003cp\u003eCSS 中的布局 \u003ccode\u003edisplay\u003c/code\u003e 和定位 \u003ccode\u003eposition\u003c/code\u003e 可以说是两个最基本的属性，其控制着元素在网页中的显示方式。之前对布局和定位可谓是一知半解，最终奏不奏效全凭一顿乱试😂，想了想还是应该细致地了解下，后面虽不妄想写起代码来事半功倍，但至少不会再暴力遍历破解了。\u003c/p\u003e\n\u003ch1 id=\"盒模型\"\u003e盒模型\u003c/h1\u003e\n\u003cp\u003e在介绍布局和定位之前，首先回顾一下 CSS 的盒模型。CSS 盒模型从外到内由\u003cstrong\u003e外边距 \u003ccode\u003emargin\u003c/code\u003e\u003c/strong\u003e、\u003cstrong\u003e边框 \u003ccode\u003eborder\u003c/code\u003e\u003c/strong\u003e、\u003cstrong\u003e内边距 \u003ccode\u003epadding\u003c/code\u003e\u003c/strong\u003e 和\u003cstrong\u003e内容 \u003ccode\u003econtent\u003c/code\u003e\u003c/strong\u003e 共 4 部分组成，如下图所示：\u003c/p\u003e\n\u003cfigure\u003e\n  \u003cimg class=\"lazyload\" data-src=\"/images/cn/2023-05-03-css-display-and-position/css-box-model.png\" data-large-max-width=\"100%\" data-middle-max-width=\"100%\" data-small-max-width=\"100%\"/\u003e\n  \n  \u003cfigcaption class=\"kai\"\u003eCSS 盒模型\u003c/figcaption\u003e\n  \n\u003c/figure\u003e\n\u003cp\u003e元素的宽度 \u003ccode\u003ewidth\u003c/code\u003e 为内容的宽度 + 左边框 + 有边框 + 左内边距 + 右内边距，上例中为 $360+10+10+10+10=400$；元素的的高度 \u003ccode\u003eheight\u003c/code\u003e 为内容的高度 + 上边框 + 下边框 + 上内边距 + 下内边距，上例中为 $240+10+10+20+20=300$。在实际中，我们并不能直接设定内容的宽度和高度，只能设置元素的宽度和高度，而显示区域的宽度和高度则通过计算自动设定。\u003c/p\u003e\n\u003cp\u003e在 CSS 中广泛使用的有两种盒子模型：\u003cstrong\u003e块级盒子（block box）\u003c/strong\u003e 和 \u003cstrong\u003e内联盒子（inline box）\u003c/strong\u003e\u003csup id=\"fnref:1\"\u003e\u003ca href=\"#fn:1\" class=\"footnote-ref\" role=\"doc-noteref\"\u003e1\u003c/a\u003e\u003c/sup\u003e。\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003e块级盒子\u003c/strong\u003e有如下表现行为：\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e盒子会在内联方向上扩展并占据父容器在该方向上的所有可用空间，在绝大数情况下意味着盒子会和父容器一样宽。\u003c/li\u003e\n\u003cli\u003e每个盒子都会换行。\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003ewidth\u003c/code\u003e 和 \u003ccode\u003eheight\u003c/code\u003e 属性可以发挥作用。\u003c/li\u003e\n\u003cli\u003e内边距、外边距和边框会将其他元素从当前盒子周围“推开”。\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e除非特殊指定，诸如标题 (\u003ccode\u003e\u0026lt;h1\u0026gt;\u003c/code\u003e 等) 和段落 (\u003ccode\u003e\u0026lt;p\u0026gt;\u003c/code\u003e) 默认情况下都是块级的盒子。\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003e内联盒子\u003c/strong\u003e有如下表现行为：\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e盒子不会产生换行。\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003ewidth\u003c/code\u003e 和 \u003ccode\u003eheight\u003c/code\u003e 属性将不起作用。\u003c/li\u003e\n\u003cli\u003e垂直方向的内边距、外边距以及边框会被应用但是不会把其他处于 \u003ccode\u003einline\u003c/code\u003e 状态的盒子推开。\u003c/li\u003e\n\u003cli\u003e水平方向的内边距、外边距以及边框会被应用且会把其他处于 \u003ccode\u003einline\u003c/code\u003e 状态的盒子推开。\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e\u003ccode\u003e\u0026lt;a\u0026gt;\u003c/code\u003e 、\u003ccode\u003e\u0026lt;span\u0026gt;\u003c/code\u003e、\u003ccode\u003e\u0026lt;em\u0026gt;\u003c/code\u003e 以及 \u003ccode\u003e\u0026lt;strong\u0026gt;\u003c/code\u003e 都是默认处于 \u003ccode\u003einline\u003c/code\u003e 状态的。\u003c/p\u003e\n\u003ch1 id=\"布局\"\u003e布局\u003c/h1\u003e\n\u003cp\u003e在 CSS 中使用 \u003ccode\u003edisplay\u003c/code\u003e 属性控制元素的布局方式，上文中的 \u003ccode\u003eblock\u003c/code\u003e 和 \u003ccode\u003einline\u003c/code\u003e 是最常用的两种布局方式。除此之外还有一种介于块级盒子和内联盒子之间的布局方式，即 \u003ccode\u003einline-block\u003c/code\u003e，其具有如下表现行为：\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e盒子不会产生换行。\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003ewidth\u003c/code\u003e 和 \u003ccode\u003eheight\u003c/code\u003e 属性可以发挥作用。\u003c/li\u003e\n\u003cli\u003e内边距、外边距和边框会将其他元素从当前盒子周围“推开”。\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"flex\" style=\"\n  display: flex;\n  flex-direction: row;\n  flex-wrap: nowrap;\n  justify-content: space-between;\n  align-items: center;\n  align-content: center;\n  row-gap: 10px;\n  column-gap: 10px;\"\u003e\n  \n\n\u003cdiv class=\"flex-item\" style=\"\n  order: 0;\n  flex-grow: 0;\n  flex-shrink: 1;\n  flex-basis: auto;\n  align-self: auto;\"\u003e\n  \n\n\u003cstyle\u003e\n#inline-span span {\n  display: inline;\n  margin: 20px;\n  padding: 20px;\n  width: 140px;\n  height: 80px;\n  background-color: #916cad;\n  border: 2px #523874 solid;\n}\n\u003c/style\u003e\n\u003cp id=\"inline-span\"\u003e这是一段包含 \u003cspan\u003espan 元素\u003c/span\u003e的文本。\u003ccode\u003edisplay: inline\u003c/code\u003e 的 span 元素的 width 和 height 属性无法发挥作用。\n\u003c/p\u003e  \n\n\u003c/div\u003e\n\n\u003cdiv class=\"flex-item\" style=\"\n  order: 0;\n  flex-grow: 0;\n  flex-shrink: 1;\n  flex-basis: auto;\n  align-self: auto;\"\u003e\n  \n\n\u003cstyle\u003e\n#inline-block-span span {\n  display: inline-block;\n  margin: 20px;\n  padding: 20px;\n  width: 140px;\n  height: 80px;\n  background-color: #916cad;\n  border: 2px #523874 solid;\n}\n\u003c/style\u003e\n\u003cp id=\"inline-block-span\"\u003e这是一段包含 \u003cspan\u003espan 元素\u003c/span\u003e的文本。\u003ccode\u003edisplay: inline-block\u003c/code\u003e 的 span 元素的 width 和 height 属性可以发挥作用。\n\u003c/p\u003e  \n\n\u003c/div\u003e\n\n\n\u003c/div\u003e\n\u003cp\u003e上图分别展示了 \u003ccode\u003edisplay: inline\u003c/code\u003e 和 \u003ccode\u003edisplay: inline-block\u003c/code\u003e 两种布局 \u003ccode\u003espan\u003c/code\u003e 元素的显示差异。\u003c/p\u003e\n\u003ch2 id=\"弹性布局\"\u003e弹性布局\u003c/h2\u003e\n\u003clink rel=\"stylesheet\" href=\"/css/admonition.css\"/\u003e\n\u003cdiv class=\"admonition admonition-note  kai\"\u003e\n  \u003cdiv class=\"admonition-content\"\u003e本节内容主要参考自：\u003ca href=\"https://css-tricks.com/snippets/css/a-guide-to-flexbox/\"\u003eA Complete Guide to Flexbox\u003c/a\u003e\u003c/div\u003e\n\u003c/div\u003e\n\u003cp\u003e\u003cstrong\u003e弹性布局（Flexbox Layout，Flexible Box Layout）\u003c/strong\u003e 旨在提供一种更加有效的方式来布局、对齐和分配容器中元素之间的空间，即使元素的大小是未知或动态的，这也就是称为“弹性”的原因。\u003c/p\u003e\n\u003cp\u003e弹性布局是一套完整的模块而非一个单一的属性，其中一些属性要设置在\u003cstrong\u003e父元素（flex container）\u003c/strong\u003e 上，一些属性要设置在\u003cstrong\u003e子元素（flex items）\u003c/strong\u003e 上。常规布局是基于块级元素和内联元素的的流向，而弹性布局是基于\u003cstrong\u003e弹性流向（flex-flow directions）\u003c/strong\u003e。下图展示了弹性布局的基本思想：\u003c/p\u003e\n\u003cfigure\u003e\n  \u003cimg class=\"lazyload\" data-src=\"/images/cn/2023-05-03-css-display-and-position/flexbox-basic-terminology.svg\" data-large-max-width=\"100%\" data-middle-max-width=\"100%\" data-small-max-width=\"100%\"/\u003e\n  \n  \u003cfigcaption class=\"kai\"\u003eFlexbox 基本思想\u003c/figcaption\u003e\n  \n\u003c/figure\u003e\n\u003ch3 id=\"父元素属性\"\u003e父元素属性\u003c/h3\u003e\n\u003cfigure\u003e\n  \u003cimg class=\"lazyload\" data-src=\"/images/cn/2023-05-03-css-display-and-position/flexbox-container.svg\" data-large-max-width=\"60%\" data-middle-max-width=\"60%\" data-small-max-width=\"100%\"/\u003e\n  \n\u003c/figure\u003e\n\u003ch4 id=\"display\"\u003edisplay\u003c/h4\u003e\n\u003cp\u003e该属性启用弹性容器，为其子元素开启弹性上下文。\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"language-css\"\u003e.container {\n  display: flex; /* 或 inline-flex */\n}\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch4 id=\"flex-direction\"\u003eflex-direction\u003c/h4\u003e\n\u003cfigure\u003e\n  \u003cimg class=\"lazyload\" data-src=\"/images/cn/2023-05-03-css-display-and-position/flexbox-flex-direction.svg\" data-large-max-width=\"100%\" data-middle-max-width=\"100%\" data-small-max-width=\"100%\"/\u003e\n  \n\u003c/figure\u003e\n\u003cp\u003e该属性定义了弹性流向，即基本思想中的 \u003ccode\u003emain-axis\u003c/code\u003e。\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"language-css\"\u003e.container {\n  flex-direction: row | row-reverse | column | column-reverse;\n}\n\u003c/code\u003e\u003c/pre\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003erow\u003c/code\u003e（默认）：\u003ccode\u003eltr\u003c/code\u003e 时从左至右，\u003ccode\u003ertl\u003c/code\u003e 时从右至左\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003erow-reverse\u003c/code\u003e：\u003ccode\u003eltr\u003c/code\u003e 时从右至左，\u003ccode\u003ertl\u003c/code\u003e 时从左至右\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003ecolumn\u003c/code\u003e：从上至下\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003ecolumn-reverse\u003c/code\u003e：从下至上\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch4 id=\"flex-wrap\"\u003eflex-wrap\u003c/h4\u003e\n\u003cfigure\u003e\n  \u003cimg class=\"lazyload\" data-src=\"/images/cn/2023-05-03-css-display-and-position/flexbox-flex-wrap.svg\" data-large-max-width=\"60%\" data-middle-max-width=\"60%\" data-small-max-width=\"100%\"/\u003e\n  \n\u003c/figure\u003e\n\u003cp\u003e默认情况下会将子元素放置在一行中，该属性用于设置换行模式。\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"language-css\"\u003e.container {\n  flex-wrap: nowrap | wrap | wrap-reverse;\n}\n\u003c/code\u003e\u003c/pre\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003enowarp\u003c/code\u003e（默认）：所有子元素放置在一行中。\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003ewrap\u003c/code\u003e：允许换行，从上至下。\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003ewrap-reverse\u003c/code\u003e：允许换行，从下至上。\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch4 id=\"flex-flow\"\u003eflex-flow\u003c/h4\u003e\n\u003cp\u003e该属性是 \u003ccode\u003eflex-direction\u003c/code\u003e 和 \u003ccode\u003eflex-wrap\u003c/code\u003e 两个属性的简写。\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"language-css\"\u003e.container {\n  flex-flow: column wrap;\n}\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch4 id=\"justify-content\"\u003ejustify-content\u003c/h4\u003e\n\u003cfigure\u003e\n  \u003cimg class=\"lazyload\" data-src=\"/images/cn/2023-05-03-css-display-and-position/flexbox-justify-content.svg\" data-large-max-width=\"60%\" data-middle-max-width=\"60%\" data-small-max-width=\"100%\"/\u003e\n  \n\u003c/figure\u003e\n\u003cp\u003e该属性用于设置主轴（main axis）方向的对齐方式。\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"language-css\"\u003e.container {\n  justify-content: flex-start | flex-end | center | space-between | space-around | space-evenly | start | end | left | right ... + safe | unsafe;\n}\n\u003c/code\u003e\u003c/pre\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003eflex-start\u003c/code\u003e（默认）：将子元素排列在 \u003ccode\u003eflex-direction\u003c/code\u003e 起始位置。\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eflex-end\u003c/code\u003e：将子元素排列在 \u003ccode\u003eflex-direction\u003c/code\u003e 结束位置。\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003ecenter\u003c/code\u003e：将子元素沿着 \u003ccode\u003eflex-direction\u003c/code\u003e 方向居中排列。\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003espace-between\u003c/code\u003e：将子元素沿着 \u003ccode\u003eflex-direction\u003c/code\u003e 方向均匀排列，第一个子元素位于起始位置，最后一个子元素位于结束位置。\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003espace-around\u003c/code\u003e：将子元素沿着 \u003ccode\u003eflex-direction\u003c/code\u003e 方向均匀排列，每个子元素周围分配相同的空间。\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003espace-evenly\u003c/code\u003e：将子元素沿着 \u003ccode\u003eflex-direction\u003c/code\u003e 方向均匀排列，每个子元素之间的间隔相同。\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch4 id=\"align-items\"\u003ealign-items\u003c/h4\u003e\n\u003cfigure\u003e\n  \u003cimg class=\"lazyload\" data-src=\"/images/cn/2023-05-03-css-display-and-position/flexbox-align-items.svg\" data-large-max-width=\"60%\" data-middle-max-width=\"60%\" data-small-max-width=\"100%\"/\u003e\n  \n\u003c/figure\u003e\n\u003cp\u003e该属性用于设置交叉轴（cross axis）方向的对齐方式。\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"language-css\"\u003e.container {\n  align-items: stretch | flex-start | flex-end | center | baseline | first baseline | last baseline | start | end | self-start | self-end + ... safe | unsafe;\n}\n\u003c/code\u003e\u003c/pre\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003estretch\u003c/code\u003e（默认）：拉伸并填充容器（仍遵守 \u003ccode\u003emin-width\u003c/code\u003e 和 \u003ccode\u003emax-width\u003c/code\u003e）。\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eflex-start / start / self-start\u003c/code\u003e：子元素被放置在交叉轴的起始位置。\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eflex-end / end / self-end\u003c/code\u003e：子元素被放置在交叉轴的结束位置。\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003ecenter\u003c/code\u003e：子元素在交叉轴上居中对齐。\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003ebaseline\u003c/code\u003e：子元素沿着他们的基线对齐。\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch4 id=\"align-content\"\u003ealign-content\u003c/h4\u003e\n\u003cfigure\u003e\n  \u003cimg class=\"lazyload\" data-src=\"/images/cn/2023-05-03-css-display-and-position/flexbox-align-content.svg\" data-large-max-width=\"60%\" data-middle-max-width=\"60%\" data-small-max-width=\"100%\"/\u003e\n  \n\u003c/figure\u003e\n\u003cp\u003e该属性用于设置当交叉轴上有额外的空间时容器多行的内部对齐方式，类似 \u003ccode\u003ejustify-content\u003c/code\u003e 设置主轴上子元素的对齐方式。\u003c/p\u003e\n\u003cdiv class=\"admonition admonition-note  kai\"\u003e\n  \u003cp class=\"admonition-title\"\u003e注意\u003c/p\u003e\n  \u003cdiv class=\"admonition-content\"\u003e该属性仅对包含多行子元素的容器有效。\u003c/div\u003e\n\u003c/div\u003e\n\u003cpre\u003e\u003ccode class=\"language-css\"\u003e.container {\n  align-content: flex-start | flex-end | center | space-between | space-around | space-evenly | stretch | start | end | baseline | first baseline | last baseline + ... safe | unsafe;\n}\n\u003c/code\u003e\u003c/pre\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003enormal\u003c/code\u003e（默认）：子元素被放置到容器的默认位置。\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eflex-start / start\u003c/code\u003e：子元素被放置到容器的起始位置。\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eflex-end  / end\u003c/code\u003e：子元素被放置到容器的结束位置。\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003ecenter\u003c/code\u003e：子元素被放置到容器的居中位置。\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003espace-between\u003c/code\u003e：子元素均匀分布，第一行在容器的起始位置，最后一行在容器的结束位置。\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003espace-around\u003c/code\u003e：子元素均匀分布，每行元素周围分配相同的空间。\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003espace-evenly\u003c/code\u003e：子元素均匀分布，每行元素之间的间隔相同。\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003estretch\u003c/code\u003e：子元素拉伸占用剩余空间。\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch4 id=\"gap-row-gap-column-gap\"\u003egap, row-gap, column-gap\u003c/h4\u003e\n\u003cfigure\u003e\n  \u003cimg class=\"lazyload\" data-src=\"/images/cn/2023-05-03-css-display-and-position/flexbox-gap.svg\" data-large-max-width=\"60%\" data-middle-max-width=\"60%\" data-small-max-width=\"100%\"/\u003e\n  \n\u003c/figure\u003e\n\u003cp\u003e该属性用于控制子元素之间的间距，其仅用于非边缘子元素之间的间距。\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"language-css\"\u003e.container {\n  display: flex;\n  ...\n  gap: 10px;\n  gap: 10px 20px; /* row-gap column gap */\n  row-gap: 10px;\n  column-gap: 20px;\n}\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003e该属性产生的行为可以认为是子元素之间的最小间距。\u003c/p\u003e\n\u003ch3 id=\"子元素属性\"\u003e子元素属性\u003c/h3\u003e\n\u003cfigure\u003e\n  \u003cimg class=\"lazyload\" data-src=\"/images/cn/2023-05-03-css-display-and-position/flexbox-items.svg\" data-large-max-width=\"60%\" data-middle-max-width=\"60%\" data-small-max-width=\"100%\"/\u003e\n  \n\u003c/figure\u003e\n\u003ch4 id=\"order\"\u003eorder\u003c/h4\u003e\n\u003cfigure\u003e\n  \u003cimg class=\"lazyload\" data-src=\"/images/cn/2023-05-03-css-display-and-position/flexbox-order.svg\" data-large-max-width=\"60%\" data-middle-max-width=\"60%\" data-small-max-width=\"100%\"/\u003e\n  \n\u003c/figure\u003e\n\u003cp\u003e默认情况下，子元素按照代码顺序排列。该属性可以控制子元素在容器中的顺序。\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"language-css\"\u003e.item {\n  order: 5; /* 默认为 0 */\n}\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch4 id=\"flex-grow\"\u003eflex-grow\u003c/h4\u003e\n\u003cfigure\u003e\n  \u003cimg class=\"lazyload\" data-src=\"/images/cn/2023-05-03-css-display-and-position/flexbox-flex-grow.svg\" data-large-max-width=\"60%\" data-middle-max-width=\"60%\" data-small-max-width=\"100%\"/\u003e\n  \n\u003c/figure\u003e\n\u003cp\u003e该属性定义了子元素在必要时的扩张能力，其接受一个整数比例值用于设定子元素占用容器的空间。如果所有子元素的 \u003ccode\u003eflew-grow\u003c/code\u003e 都设置为 1，则所有子元素将评分容器的剩余空间；如果一个子元素的 \u003ccode\u003eflex-grow\u003c/code\u003e 设置为 2，则该子元素将尝试占用其他子元素 2 倍大小的空间。\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"language-css\"\u003e.item {\n  flex-grow: 4; /* 默认为 0 */\n}\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch4 id=\"flex-shrink\"\u003eflex-shrink\u003c/h4\u003e\n\u003cp\u003e该属性定义了子元素在必要时的收缩能力。\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"language-css\"\u003e.item {\n  flex-shrink: 3; /* 默认为 1 */\n}\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch4 id=\"flex-basis\"\u003eflex-basis\u003c/h4\u003e\n\u003cp\u003e该属性定义了分配剩余空间之前子元素的默认大小。其可以为例如 \u003ccode\u003e20%\u003c/code\u003e、\u003ccode\u003e5rem\u003c/code\u003e 之类的长度或一个关键字。\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"language-css\"\u003e.item {\n  flex-basis:  | auto; /* 默认为 auto */\n}\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch4 id=\"flex\"\u003eflex\u003c/h4\u003e\n\u003cp\u003e该属性是 \u003ccode\u003eflex-grow\u003c/code\u003e、\u003ccode\u003eflex-shrink\u003c/code\u003e 和 \u003ccode\u003eflex-basis\u003c/code\u003e 三个属性的简写。\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"language-css\"\u003e.item {\n  flex: none | [ \u0026lt;\u0026#39;flex-grow\u0026#39;\u0026gt; \u0026lt;\u0026#39;flex-shrink\u0026#39;\u0026gt;? || \u0026lt;\u0026#39;flex-basis\u0026#39;\u0026gt; ]\n}\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch4 id=\"align-self\"\u003ealign-self\u003c/h4\u003e\n\u003cfigure\u003e\n  \u003cimg class=\"lazyload\" data-src=\"/images/cn/2023-05-03-css-display-and-position/flexbox-align-self.svg\" data-large-max-width=\"60%\" data-middle-max-width=\"60%\" data-small-max-width=\"100%\"/\u003e\n  \n\u003c/figure\u003e\n\u003cp\u003e该属性可以覆盖由 \u003ccode\u003ealign-items\u003c/code\u003e 指定的对齐方式。\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"language-css\"\u003e.item {\n  align-self: auto | flex-start | flex-end | center | baseline | stretch;\n}\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch2 id=\"网格布局\"\u003e网格布局\u003c/h2\u003e\n\u003cdiv class=\"admonition admonition-note  kai\"\u003e\n  \u003cdiv class=\"admonition-content\"\u003e本节内容主要参考自：\u003ca href=\"https://css-tricks.com/snippets/css/complete-guide-grid/\"\u003eA Complete Guide to CSS Grid\u003c/a\u003e\u003c/div\u003e\n\u003c/div\u003e\n\u003cp\u003e\u003cstrong\u003e网格布局（Grid Layout）\u003c/strong\u003e 是一种基于网格的布局系统，相比于沿轴线 \u003cstrong\u003e一维布局\u003c/strong\u003e 的弹性布局，网格布局可以看做是一种 \u003cstrong\u003e二维布局\u003c/strong\u003e。\u003c/p\u003e\n\u003ch3 id=\"核心概念\"\u003e核心概念\u003c/h3\u003e\n\u003ch4 id=\"网格容器\"\u003e网格容器\u003c/h4\u003e\n\u003cp\u003e网格容器即属性 \u003ccode\u003edisplay\u003c/code\u003e 为 \u003ccode\u003egrid\u003c/code\u003e 的元素，其为所有网格项目的直接父级。如下示例中，\u003ccode\u003econtainer\u003c/code\u003e 即为网格容器：\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"language-html\"\u003e\u0026lt;div class=\u0026#34;container\u0026#34;\u0026gt;\n  \u0026lt;div class=\u0026#34;item item-1\u0026#34;\u0026gt; \u0026lt;/div\u0026gt;\n  \u0026lt;div class=\u0026#34;item item-2\u0026#34;\u0026gt; \u0026lt;/div\u0026gt;\n  \u0026lt;div class=\u0026#34;item item-3\u0026#34;\u0026gt; \u0026lt;/div\u0026gt;\n\u0026lt;/div\u0026gt;\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch4 id=\"网格项目\"\u003e网格项目\u003c/h4\u003e\n\u003cp\u003e网格项目为网格容器的直接后代。如下示例中，\u003ccode\u003eitem\u003c/code\u003e 即为网格项目，但 \u003ccode\u003esub-item\u003c/code\u003e 不是：\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"language-html\"\u003e\u0026lt;div class=\u0026#34;container\u0026#34;\u0026gt;\n  \u0026lt;div class=\u0026#34;item\u0026#34;\u0026gt; \u0026lt;/div\u0026gt;\n  \u0026lt;div class=\u0026#34;item\u0026#34;\u0026gt;\n    \u0026lt;p class=\u0026#34;sub-item\u0026#34;\u0026gt; \u0026lt;/p\u0026gt;\n  \u0026lt;/div\u0026gt;\n  \u0026lt;div class=\u0026#34;item\u0026#34;\u0026gt; \u0026lt;/div\u0026gt;\n\u0026lt;/div\u0026gt;\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch4 id=\"网格线\"\u003e网格线\u003c/h4\u003e\n\u003cp\u003e网格线即构成网格结构的分界线。其可以是位于行或列任意一侧的垂直或水平线。如下示例中，黄色的线为一条列网格线：\u003c/p\u003e\n\u003cfigure\u003e\n  \u003cimg class=\"lazyload\" data-src=\"/images/cn/2023-05-03-css-display-and-position/grid-terms-grid-line.svg\" data-large-max-width=\"40%\" data-middle-max-width=\"60%\" data-small-max-width=\"100%\"/\u003e\n  \n\u003c/figure\u003e\n\u003ch4 id=\"网格单元\"\u003e网格单元\u003c/h4\u003e\n\u003cp\u003e网格单元即两个相邻行和两个相邻列之间的区域。如下示例中，黄色区域为行网格线 1 和 2 以及列网格线 2 和 3 之间的单元格：\u003c/p\u003e\n\u003cfigure\u003e\n  \u003cimg class=\"lazyload\" data-src=\"/images/cn/2023-05-03-css-display-and-position/grid-terms-grid-cell.svg\" data-large-max-width=\"40%\" data-middle-max-width=\"60%\" data-small-max-width=\"100%\"/\u003e\n  \n\u003c/figure\u003e\n\u003ch4 id=\"网格轨道\"\u003e网格轨道\u003c/h4\u003e\n\u003cp\u003e网格轨道即 2 条相邻网格线之间的区域，可以将其视为网格的行或列。如下示例中，黄色区域为第 2 行和第 3 行网格线之间的网格轨道：\u003c/p\u003e\n\u003cfigure\u003e\n  \u003cimg class=\"lazyload\" data-src=\"/images/cn/2023-05-03-css-display-and-position/grid-terms-grid-track.svg\" data-large-max-width=\"40%\" data-middle-max-width=\"60%\" data-small-max-width=\"100%\"/\u003e\n  \n\u003c/figure\u003e\n\u003ch4 id=\"网格区域\"\u003e网格区域\u003c/h4\u003e\n\u003cp\u003e网格区域即 4 条网格线包围的区域，一个网格区域可以由任意数量的网格单元组成。如下示例中，黄色区域为行网格线 1 和 3 以及列网格线 1 和 3 之间的网格区域：\u003c/p\u003e\n\u003cfigure\u003e\n  \u003cimg class=\"lazyload\" data-src=\"/images/cn/2023-05-03-css-display-and-position/grid-terms-grid-area.svg\" data-large-max-width=\"40%\" data-middle-max-width=\"60%\" data-small-max-width=\"100%\"/\u003e\n  \n\u003c/figure\u003e\n\u003ch3 id=\"父元素属性-1\"\u003e父元素属性\u003c/h3\u003e\n\u003ch4 id=\"display-1\"\u003edisplay\u003c/h4\u003e\n\u003cp\u003e该属性启用网格容器，为其子元素开启网格上下文。\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"language-css\"\u003e.container {\n  display: grid | inline-grid;\n}\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch4 id=\"grid-template-columns-grid-template-rows\"\u003egrid-template-columns, grid-template-rows\u003c/h4\u003e\n\u003cp\u003e该属性通过空格分隔的值列表定义网格的列和行，值代表轨道的大小。值列表包括：\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003e\u0026lt;track-size\u0026gt;\u003c/code\u003e：轨道大小，可以为长度、百分比等。\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003e\u0026lt;line-name\u0026gt;\u003c/code\u003e：网格线名称，可以为任意值。\u003c/li\u003e\n\u003c/ul\u003e\n\u003cpre\u003e\u003ccode class=\"language-css\"\u003e.container {\n  grid-template-columns: ...  ...;\n  /* 例如：\n      1fr 1fr\n      minmax(10px, 1fr) 3fr\n      repeat(5, 1fr)\n      50px auto 100px 1fr\n  */\n  grid-template-rows: ... ...;\n  /* 例如：\n      min-content 1fr min-content\n      100px 1fr max-content\n  */\n}\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003e网格线默认将会被分为正整数（-1 作为最后一个的替代值）。\u003c/p\u003e\n\u003cfigure\u003e\n  \u003cimg class=\"lazyload\" data-src=\"/images/cn/2023-05-03-css-display-and-position/grid-template-columns-rows-01.svg\" data-large-max-width=\"60%\" data-middle-max-width=\"60%\" data-small-max-width=\"100%\"/\u003e\n  \n\u003c/figure\u003e\n\u003cp\u003e同时也可以明确指定这些线的名称，请注意括号命名语法：\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"language-css\"\u003e.container {\n  grid-template-columns: [first] 40px [line2] 50px [line3] auto [col4-start] 50px [five] 40px [end];\n  grid-template-rows: [row1-start] 25% [row1-end] 100px [third-line] auto [last-line];\n}\n\u003c/code\u003e\u003c/pre\u003e\n\u003cfigure\u003e\n  \u003cimg class=\"lazyload\" data-src=\"/images/cn/2023-05-03-css-display-and-position/grid-template-columns-rows-02.svg\" data-large-max-width=\"60%\" data-middle-max-width=\"60%\" data-small-max-width=\"100%\"/\u003e\n  \n\u003c/figure\u003e\n\u003cp\u003e请注意，一个行或列可以有多个名称：\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"language-css\"\u003e.container {\n  grid-template-rows: [row1-start] 25% [row1-end row2-start] 25% [row2-end];\n}\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003e使用 \u003ccode\u003erepeat()\u003c/code\u003e 可以简化重复项：\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"language-css\"\u003e.container {\n  grid-template-columns: repeat(3, 20px [col-start]);\n}\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003e上述代码等效于：\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"language-css\"\u003e.container {\n  grid-template-columns: 20px [col-start] 20px [col-start] 20px [col-start];\n}\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003e如果多行或多列共享相同的名称，可以通过行名或列名和计数来引用它们：\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"language-css\"\u003e.item {\n  grid-column-start: col-start 2;\n}\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003e\u003ccode\u003efr\u003c/code\u003e 单位允许将轨道的大小设置为网格容器可用空间的一定比例。例如，如下示例将每个项目设置为容器宽度的三分之一：\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"language-css\"\u003e.container {\n  grid-template-columns: 1fr 1fr 1fr;\n}\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003e可用空间是在所有非弹性项目之后计算得到。在上述示例中，\u003ccode\u003efr\u003c/code\u003e 单位的可用空间总量不包括 \u003ccode\u003e50px\u003c/code\u003e：\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"language-css\"\u003e.container {\n  grid-template-columns: 1fr 50px 1fr 1fr;\n}\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch4 id=\"grid-template-areas\"\u003egrid-template-areas\u003c/h4\u003e\n\u003cp\u003e该属性通过引用网格区域的名称 \u003ccode\u003egrid-area\u003c/code\u003e 来定义网格。重复网格区域名称会导致内容跨越这些单元格。句点表示一个空单元格。语法本身提供了网格结构的可视化。\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003e\u0026lt;grid-area-name\u0026gt;\u003c/code\u003e：网格区域的名称。\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003e.\u003c/code\u003e：空网格单元。\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003enone\u003c/code\u003e：未定义的网格区域。\u003c/li\u003e\n\u003c/ul\u003e\n\u003cpre\u003e\u003ccode class=\"language-css\"\u003e.container {\n  grid-template-areas: \n    \u0026#34;\u0026lt;grid-area-name\u0026gt; | . | none | ...\u0026#34;\n    \u0026#34;...\u0026#34;;\n}\n\u003c/code\u003e\u003c/pre\u003e\n\u003cpre\u003e\u003ccode class=\"language-css\"\u003e.item-a {\n  grid-area: header;\n}\n.item-b {\n  grid-area: main;\n}\n.item-c {\n  grid-area: sidebar;\n}\n.item-d {\n  grid-area: footer;\n}\n\n.container {\n  display: grid;\n  grid-template-columns: 50px 50px 50px 50px;\n  grid-template-rows: auto;\n  grid-template-areas: \n    \u0026#34;header header header header\u0026#34;\n    \u0026#34;main main . sidebar\u0026#34;\n    \u0026#34;footer footer footer footer\u0026#34;;\n}\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003e上述示例将创建一个 4 列 3 行的网格。整个顶部为 \u003ccode\u003eheader\u003c/code\u003e 区域，中间一行由 \u003ccode\u003emain\u003c/code\u003e 和 \u003ccode\u003esidebar\u003c/code\u003e 两个区域和一个空单元格组成，最后一行为 \u003ccode\u003efooter\u003c/code\u003e。\u003c/p\u003e\n\u003cfigure\u003e\n  \u003cimg class=\"lazyload\" data-src=\"/images/cn/2023-05-03-css-display-and-position/grid-template-areas.svg\" data-large-max-width=\"60%\" data-middle-max-width=\"60%\" data-small-max-width=\"100%\"/\u003e\n  \n\u003c/figure\u003e\n\u003cp\u003e声明中的每一行都需要有相同数量的单元格。可以使用任意数量的句点声明一个空单元格，只要句点之间没有空格，就代表一个单元格。\u003c/p\u003e\n\u003cp\u003e注意使用此语法仅可以命名区域，不可命名线。使用此语法时，区域两端的线会自动命名，如果网格区域名称为 \u003ccode\u003efoo\u003c/code\u003e，那么该区域的起始行线和起始列线名称为 \u003ccode\u003efoo-start\u003c/code\u003e，该区域的终止行线和终止列线名称为 \u003ccode\u003efoo-end\u003c/code\u003e。这意味着某些线可能有多个名称，上述示例中最左边的行线将有 3 个名称：\u003ccode\u003eheader-start\u003c/code\u003e、\u003ccode\u003emain-start\u003c/code\u003e 和 \u003ccode\u003efooter-start\u003c/code\u003e。\u003c/p\u003e\n\u003ch4 id=\"grid-template\"\u003egrid-template\u003c/h4\u003e\n\u003cp\u003e该属性是 \u003ccode\u003egrid-template-rows\u003c/code\u003e、\u003ccode\u003egrid-template-columns\u003c/code\u003e 和 \u003ccode\u003egrid-template-areas\u003c/code\u003e 三个属性的简写。\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"language-css\"\u003e.container {\n  grid-template: none | \u0026lt;grid-template-rows\u0026gt; / \u0026lt;grid-template-columns\u0026gt;;\n}\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003e其接受更复杂但更方便的语法来指定这三个值，例如：\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"language-css\"\u003e.container {\n  grid-template:\n    [row1-start] \u0026#34;header header header\u0026#34; 25px [row1-end]\n    [row2-start] \u0026#34;footer footer footer\u0026#34; 25px [row2-end]\n    / auto 50px auto;\n}\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003e上述代码等效于：\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"language-css\"\u003e.container {\n  grid-template-rows: [row1-start] 25px [row1-end row2-start] 25px [row2-end];\n  grid-template-columns: auto 50px auto;\n  grid-template-areas: \n    \u0026#34;header header header\u0026#34; \n    \u0026#34;footer footer footer\u0026#34;;\n}\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003e由于 \u003ccode\u003egrid-template\u003c/code\u003e 并不会重置网格的隐含属性（\u003ccode\u003egrid-auto-columns\u003c/code\u003e、\u003ccode\u003egrid-auto-rows\u003c/code\u003e 和 \u003ccode\u003egrid-auto-flow\u003c/code\u003e）。因此，建议使用 \u003ccode\u003egrid\u003c/code\u003e 属性而非 \u003ccode\u003egrid-template\u003c/code\u003e。\u003c/p\u003e\n\u003ch4 id=\"column-gap-row-gap-grid-column-gap-grid-row-gap\"\u003ecolumn-gap, row-gap, grid-column-gap, grid-row-gap\u003c/h4\u003e\n\u003cp\u003e该属性用于指定网格线的大小，你可以将其看做列和行之间的间距。\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"language-css\"\u003e.container {\n  /* standard */\n  column-gap: \u0026lt;line-size\u0026gt;;\n  row-gap: \u0026lt;line-size\u0026gt;;\n\n  /* old */\n  grid-column-gap: \u0026lt;line-size\u0026gt;;\n  grid-row-gap: \u0026lt;line-size\u0026gt;;\n}\n\u003c/code\u003e\u003c/pre\u003e\n\u003cpre\u003e\u003ccode class=\"language-css\"\u003e.container {\n  grid-template-columns: 100px 50px 100px;\n  grid-template-rows: 80px auto 80px; \n  column-gap: 10px;\n  row-gap: 15px;\n}\n\u003c/code\u003e\u003c/pre\u003e\n\u003cfigure\u003e\n  \u003cimg class=\"lazyload\" data-src=\"/images/cn/2023-05-03-css-display-and-position/grid-gap.svg\" data-large-max-width=\"60%\" data-middle-max-width=\"60%\" data-small-max-width=\"100%\"/\u003e\n  \n\u003c/figure\u003e\n\u003cp\u003e间距仅在列和行之间创建，不在边缘创建。注意，带有 \u003ccode\u003egrid-\u003c/code\u003e 前缀的属性将被废弃。\u003c/p\u003e\n\u003ch4 id=\"gap-grid-gap\"\u003egap, grid-gap\u003c/h4\u003e\n\u003cp\u003e该属性为 \u003ccode\u003erow-gap\u003c/code\u003e 和 \u003ccode\u003ecolumn-gap\u003c/code\u003e 两个属性的简写。\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"language-css\"\u003e.container {\n  /* standard */\n  gap: \u0026lt;grid-row-gap\u0026gt; \u0026lt;grid-column-gap\u0026gt;;\n\n  /* old */\n  grid-gap: \u0026lt;grid-row-gap\u0026gt; \u0026lt;grid-column-gap\u0026gt;;\n}\n\u003c/code\u003e\u003c/pre\u003e\n\u003cpre\u003e\u003ccode class=\"language-css\"\u003e.container {\n  grid-template-columns: 100px 50px 100px;\n  grid-template-rows: 80px auto 80px; \n  gap: 15px 10px;\n}\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003e如果未指定 \u003ccode\u003erow-gap\u003c/code\u003e，则它将被设置为与 \u003ccode\u003ecolumn-gap\u003c/code\u003e 相同的值。注意，带有 \u003ccode\u003egrid-\u003c/code\u003e 前缀的属性将被废弃。\u003c/p\u003e\n\u003ch4 id=\"justify-items\"\u003ejustify-items\u003c/h4\u003e\n\u003cp\u003e沿 \u003ccode\u003einline\u003c/code\u003e（行）轴对齐网格项（与沿 \u003ccode\u003eblock\u003c/code\u003e（列）轴对齐 \u003ccode\u003ealign-items\u003c/code\u003e 相反）。该属性将应用于容器内所有网格项。\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003estretch\u003c/code\u003e（默认值）：将网格项填充至整个单元格宽度。\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003estart\u003c/code\u003e：将网格项与单元的起始边缘对齐。\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eend\u003c/code\u003e：将网格项与单元的结束边缘对齐。\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003ecenter\u003c/code\u003e：将网格项与单元的中心对齐。\u003c/li\u003e\n\u003c/ul\u003e\n\u003cpre\u003e\u003ccode class=\"language-css\"\u003e.container {\n  justify-items: stretch | start | end | center;\n}\n\u003c/code\u003e\u003c/pre\u003e\n\u003cpre\u003e\u003ccode class=\"language-css\"\u003e.container {\n  justify-items: stretch;\n}\n\u003c/code\u003e\u003c/pre\u003e\n\u003cfigure\u003e\n  \u003cimg class=\"lazyload\" data-src=\"/images/cn/2023-05-03-css-display-and-position/grid-justify-items-stretch.svg\" data-large-max-width=\"40%\" data-middle-max-width=\"60%\" data-small-max-width=\"100%\"/\u003e\n  \n\u003c/figure\u003e\n\u003cpre\u003e\u003ccode class=\"language-css\"\u003e.container {\n  justify-items: start;\n}\n\u003c/code\u003e\u003c/pre\u003e\n\u003cfigure\u003e\n  \u003cimg class=\"lazyload\" data-src=\"/images/cn/2023-05-03-css-display-and-position/grid-justify-items-start.svg\" data-large-max-width=\"40%\" data-middle-max-width=\"60%\" data-small-max-width=\"100%\"/\u003e\n  \n\u003c/figure\u003e\n\u003cpre\u003e\u003ccode class=\"language-css\"\u003e.container {\n  justify-items: end;\n}\n\u003c/code\u003e\u003c/pre\u003e\n\u003cfigure\u003e\n  \u003cimg class=\"lazyload\" data-src=\"/images/cn/2023-05-03-css-display-and-position/grid-justify-items-end.svg\" data-large-max-width=\"40%\" data-middle-max-width=\"60%\" data-small-max-width=\"100%\"/\u003e\n  \n\u003c/figure\u003e\n\u003cpre\u003e\u003ccode class=\"language-css\"\u003e.container {\n  justify-items: center;\n}\n\u003c/code\u003e\u003c/pre\u003e\n\u003cfigure\u003e\n  \u003cimg class=\"lazyload\" data-src=\"/images/cn/2023-05-03-css-display-and-position/grid-justify-items-center.svg\" data-large-max-width=\"40%\" data-middle-max-width=\"60%\" data-small-max-width=\"100%\"/\u003e\n  \n\u003c/figure\u003e\n\u003ch4 id=\"align-items-1\"\u003ealign-items\u003c/h4\u003e\n\u003cp\u003e沿 \u003ccode\u003eblock\u003c/code\u003e（列）轴对齐网格项（与沿 \u003ccode\u003einline\u003c/code\u003e（行）轴对齐 \u003ccode\u003ealign-items\u003c/code\u003e 相反）。该属性将应用于容器内所有网格项。\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003estretch\u003c/code\u003e（默认值）：将网格项填充至整个单元格高度。\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003estart\u003c/code\u003e：将网格项与单元的起始边缘对齐。\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eend\u003c/code\u003e：将网格项与单元的结束边缘对齐。\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003ecenter\u003c/code\u003e：将网格项与单元的中心对齐。\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003ebaseline\u003c/code\u003e：将网格项沿文本基线对齐。\u003c/li\u003e\n\u003c/ul\u003e\n\u003cpre\u003e\u003ccode class=\"language-css\"\u003e.container {\n  align-items: stretch | start | end | center;\n}\n\u003c/code\u003e\u003c/pre\u003e\n\u003cpre\u003e\u003ccode class=\"language-css\"\u003e.container {\n  align-items: stretch;\n}\n\u003c/code\u003e\u003c/pre\u003e\n\u003cfigure\u003e\n  \u003cimg class=\"lazyload\" data-src=\"/images/cn/2023-05-03-css-display-and-position/grid-align-items-stretch.svg\" data-large-max-width=\"40%\" data-middle-max-width=\"60%\" data-small-max-width=\"100%\"/\u003e\n  \n\u003c/figure\u003e\n\u003cpre\u003e\u003ccode class=\"language-css\"\u003e.container {\n  align-items: start;\n}\n\u003c/code\u003e\u003c/pre\u003e\n\u003cfigure\u003e\n  \u003cimg class=\"lazyload\" data-src=\"/images/cn/2023-05-03-css-display-and-position/grid-align-items-start.svg\" data-large-max-width=\"40%\" data-middle-max-width=\"60%\" data-small-max-width=\"100%\"/\u003e\n  \n\u003c/figure\u003e\n\u003cpre\u003e\u003ccode class=\"language-css\"\u003e.container {\n  align-items: end;\n}\n\u003c/code\u003e\u003c/pre\u003e\n\u003cfigure\u003e\n  \u003cimg class=\"lazyload\" data-src=\"/images/cn/2023-05-03-css-display-and-position/grid-align-items-end.svg\" data-large-max-width=\"40%\" data-middle-max-width=\"60%\" data-small-max-width=\"100%\"/\u003e\n  \n\u003c/figure\u003e\n\u003cpre\u003e\u003ccode class=\"language-css\"\u003e.container {\n  align-items: center;\n}\n\u003c/code\u003e\u003c/pre\u003e\n\u003cfigure\u003e\n  \u003cimg class=\"lazyload\" data-src=\"/images/cn/2023-05-03-css-display-and-position/grid-align-items-center.svg\" data-large-max-width=\"40%\" data-middle-max-width=\"60%\" data-small-max-width=\"100%\"/\u003e\n  \n\u003c/figure\u003e\n\u003cp\u003e通过 \u003ccode\u003ealign-self\u003c/code\u003e 属性可以在单个网格项上覆盖由 \u003ccode\u003ealign-items\u003c/code\u003e 指定的对齐方式。\u003c/p\u003e\n\u003ch4 id=\"place-items\"\u003eplace-items\u003c/h4\u003e\n\u003cp\u003e该属性在单次声明中同时设置 \u003ccode\u003ealign-items\u003c/code\u003e 和 \u003ccode\u003ejustify-items\u003c/code\u003e 属性。\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003e\u0026lt;align-items\u0026gt; / \u0026lt;justify-items\u0026gt;\u003c/code\u003e：省略第二个值则将第一个值分配给两个属性。\u003c/li\u003e\n\u003c/ul\u003e\n\u003cpre\u003e\u003ccode class=\"language-css\"\u003e.center {\n  display: grid;\n  place-items: center;\n}\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch4 id=\"justify-content-1\"\u003ejustify-content\u003c/h4\u003e\n\u003cp\u003e当所有网格项均使用非弹性的单位（例如 \u003ccode\u003epx\u003c/code\u003e）来确定大小，则网格的总大小可能小于网格容器的大小。在这种情况下，可以在网格容器内设置网格的对齐方式。该属性沿 \u003ccode\u003einline\u003c/code\u003e（行）轴（与沿 \u003ccode\u003eblock\u003c/code\u003e（列）轴对齐 \u003ccode\u003ealign-content\u003c/code\u003e 相反）对齐网格。\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003estart\u003c/code\u003e：将网格与网格容器的起始边缘对齐。\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eend\u003c/code\u003e：将网格与网格容器的结束边缘对齐。\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003ecenter\u003c/code\u003e：将网格与网格容器的中心对齐。\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003estretch \u003c/code\u003e：调整网格项的大小使网格填充网格容器的整个宽度。\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003espace-around\u003c/code\u003e：每个网格项均匀分布，每个网格项周围分配相同的空间。\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003espace-between\u003c/code\u003e：每个网格项均匀分布，第一个网格项在起始位置，最后一个网格项在结束位置。\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003espace-evenly\u003c/code\u003e：每个网格项均匀分布，每个网格项之间的间隔相同。\u003c/li\u003e\n\u003c/ul\u003e\n\u003cpre\u003e\u003ccode class=\"language-css\"\u003e.container {\n  justify-content: start | end | center | stretch | space-around | space-between | space-evenly;    \n}\n\u003c/code\u003e\u003c/pre\u003e\n\u003cpre\u003e\u003ccode class=\"language-css\"\u003e.container {\n  justify-content: start;\n}\n\u003c/code\u003e\u003c/pre\u003e\n\u003cfigure\u003e\n  \u003cimg class=\"lazyload\" data-src=\"/images/cn/2023-05-03-css-display-and-position/grid-justify-content-start.svg\" data-large-max-width=\"40%\" data-middle-max-width=\"60%\" data-small-max-width=\"100%\"/\u003e\n  \n\u003c/figure\u003e\n\u003cpre\u003e\u003ccode class=\"language-css\"\u003e.container {\n  justify-content: end;\n}\n\u003c/code\u003e\u003c/pre\u003e\n\u003cfigure\u003e\n  \u003cimg class=\"lazyload\" data-src=\"/images/cn/2023-05-03-css-display-and-position/grid-justify-content-end.svg\" data-large-max-width=\"40%\" data-middle-max-width=\"60%\" data-small-max-width=\"100%\"/\u003e\n  \n\u003c/figure\u003e\n\u003cpre\u003e\u003ccode class=\"language-css\"\u003e.container {\n  justify-content: center;\n}\n\u003c/code\u003e\u003c/pre\u003e\n\u003cfigure\u003e\n  \u003cimg class=\"lazyload\" data-src=\"/images/cn/2023-05-03-css-display-and-position/grid-justify-content-center.svg\" data-large-max-width=\"40%\" data-middle-max-width=\"60%\" data-small-max-width=\"100%\"/\u003e\n  \n\u003c/figure\u003e\n\u003cpre\u003e\u003ccode class=\"language-css\"\u003e.container {\n  justify-content: stretch;\n}\n\u003c/code\u003e\u003c/pre\u003e\n\u003cfigure\u003e\n  \u003cimg class=\"lazyload\" data-src=\"/images/cn/2023-05-03-css-display-and-position/grid-justify-content-stretch.svg\" data-large-max-width=\"40%\" data-middle-max-width=\"60%\" data-small-max-width=\"100%\"/\u003e\n  \n\u003c/figure\u003e\n\u003cpre\u003e\u003ccode class=\"language-css\"\u003e.container {\n  justify-content: space-around;\n}\n\u003c/code\u003e\u003c/pre\u003e\n\u003cfigure\u003e\n  \u003cimg class=\"lazyload\" data-src=\"/images/cn/2023-05-03-css-display-and-position/grid-justify-content-space-around.svg\" data-large-max-width=\"40%\" data-middle-max-width=\"60%\" data-small-max-width=\"100%\"/\u003e\n  \n\u003c/figure\u003e\n\u003cpre\u003e\u003ccode class=\"language-css\"\u003e.container {\n  justify-content: space-between;\n}\n\u003c/code\u003e\u003c/pre\u003e\n\u003cfigure\u003e\n  \u003cimg class=\"lazyload\" data-src=\"/images/cn/2023-05-03-css-display-and-position/grid-justify-content-space-between.svg\" data-large-max-width=\"40%\" data-middle-max-width=\"60%\" data-small-max-width=\"100%\"/\u003e\n  \n\u003c/figure\u003e\n\u003cpre\u003e\u003ccode class=\"language-css\"\u003e.container {\n  justify-content: space-evenly;\n}\n\u003c/code\u003e\u003c/pre\u003e\n\u003cfigure\u003e\n  \u003cimg class=\"lazyload\" data-src=\"/images/cn/2023-05-03-css-display-and-position/grid-justify-content-space-evenly.svg\" data-large-max-width=\"40%\" data-middle-max-width=\"60%\" data-small-max-width=\"100%\"/\u003e\n  \n\u003c/figure\u003e\n\u003ch4 id=\"align-content-1\"\u003ealign-content\u003c/h4\u003e\n\u003cp\u003e当所有网格项均使用非弹性的单位（例如 \u003ccode\u003epx\u003c/code\u003e）来确定大小，则网格的总大小可能小于网格容器的大小。在这种情况下，可以在网格容器内设置网格的对齐方式。该属性沿 \u003ccode\u003eblock\u003c/code\u003e（列）轴（与沿 \u003ccode\u003einline\u003c/code\u003e（行）轴对齐 \u003ccode\u003ejustify-content\u003c/code\u003e 相反）对齐网格。\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003estart\u003c/code\u003e：将网格与网格容器的起始边缘对齐。\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eend\u003c/code\u003e：将网格与网格容器的结束边缘对齐。\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003ecenter\u003c/code\u003e：将网格与网格容器的中心对齐。\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003estretch \u003c/code\u003e：调整网格项的大小使网格填充网格容器的整个高度。\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003espace-around\u003c/code\u003e：每个网格项均匀分布，每个网格项周围分配相同的空间。\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003espace-between\u003c/code\u003e：每个网格项均匀分布，第一个网格项在起始位置，最后一个网格项在结束位置。\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003espace-evenly\u003c/code\u003e：每个网格项均匀分布，每个网格项之间的间隔相同。\u003c/li\u003e\n\u003c/ul\u003e\n\u003cpre\u003e\u003ccode class=\"language-css\"\u003e.container {\n  align-content: start | end | center | stretch | space-around | space-between | space-evenly;    \n}\n\u003c/code\u003e\u003c/pre\u003e\n\u003cpre\u003e\u003ccode class=\"language-css\"\u003e.container {\n  align-content: start;    \n}\n\u003c/code\u003e\u003c/pre\u003e\n\u003cfigure\u003e\n  \u003cimg class=\"lazyload\" data-src=\"/images/cn/2023-05-03-css-display-and-position/grid-align-content-start.svg\" data-large-max-width=\"40%\" data-middle-max-width=\"60%\" data-small-max-width=\"100%\"/\u003e\n  \n\u003c/figure\u003e\n\u003cpre\u003e\u003ccode class=\"language-css\"\u003e.container {\n  align-content: end;    \n}\n\u003c/code\u003e\u003c/pre\u003e\n\u003cfigure\u003e\n  \u003cimg class=\"lazyload\" data-src=\"/images/cn/2023-05-03-css-display-and-position/grid-align-content-end.svg\" data-large-max-width=\"40%\" data-middle-max-width=\"60%\" data-small-max-width=\"100%\"/\u003e\n  \n\u003c/figure\u003e\n\u003cpre\u003e\u003ccode class=\"language-css\"\u003e.container {\n  align-content: center;    \n}\n\u003c/code\u003e\u003c/pre\u003e\n\u003cfigure\u003e\n  \u003cimg class=\"lazyload\" data-src=\"/images/cn/2023-05-03-css-display-and-position/grid-align-content-center.svg\" data-large-max-width=\"40%\" data-middle-max-width=\"60%\" data-small-max-width=\"100%\"/\u003e\n  \n\u003c/figure\u003e\n\u003cpre\u003e\u003ccode class=\"language-css\"\u003e.container {\n  align-content: stretch;    \n}\n\u003c/code\u003e\u003c/pre\u003e\n\u003cfigure\u003e\n  \u003cimg class=\"lazyload\" data-src=\"/images/cn/2023-05-03-css-display-and-position/grid-align-content-stretch.svg\" data-large-max-width=\"40%\" data-middle-max-width=\"60%\" data-small-max-width=\"100%\"/\u003e\n  \n\u003c/figure\u003e\n\u003cpre\u003e\u003ccode class=\"language-css\"\u003e.container {\n  align-content: space-around;    \n}\n\u003c/code\u003e\u003c/pre\u003e\n\u003cfigure\u003e\n  \u003cimg class=\"lazyload\" data-src=\"/images/cn/2023-05-03-css-display-and-position/grid-align-content-space-around.svg\" data-large-max-width=\"40%\" data-middle-max-width=\"60%\" data-small-max-width=\"100%\"/\u003e\n  \n\u003c/figure\u003e\n\u003cpre\u003e\u003ccode class=\"language-css\"\u003e.container {\n  align-content: space-between;    \n}\n\u003c/code\u003e\u003c/pre\u003e\n\u003cfigure\u003e\n  \u003cimg class=\"lazyload\" data-src=\"/images/cn/2023-05-03-css-display-and-position/grid-align-content-space-between.svg\" data-large-max-width=\"40%\" data-middle-max-width=\"60%\" data-small-max-width=\"100%\"/\u003e\n  \n\u003c/figure\u003e\n\u003cpre\u003e\u003ccode class=\"language-css\"\u003e.container {\n  align-content: space-evenly;    \n}\n\u003c/code\u003e\u003c/pre\u003e\n\u003cfigure\u003e\n  \u003cimg class=\"lazyload\" data-src=\"/images/cn/2023-05-03-css-display-and-position/grid-align-content-space-evenly.svg\" data-large-max-width=\"40%\" data-middle-max-width=\"60%\" data-small-max-width=\"100%\"/\u003e\n  \n\u003c/figure\u003e\n\u003ch4 id=\"place-content\"\u003eplace-content\u003c/h4\u003e\n\u003cp\u003e该属性在单次声明中同时设置 \u003ccode\u003ealign-content\u003c/code\u003e 和 \u003ccode\u003ejustify-content\u003c/code\u003e 属性。\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003e\u0026lt;align-content\u0026gt; / \u0026lt;justify-content\u0026gt;\u003c/code\u003e：省略第二个值则将第一个值分配给两个属性。\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch4 id=\"grid-auto-columns-grid-auto-rows\"\u003egrid-auto-columns, grid-auto-rows\u003c/h4\u003e\n\u003cp\u003e该属性指定自动生成的网格轨道（也称为隐式网格轨道）的大小。当网格项多于网格中的单元格或当网格项放置在显示网格之外时，将创建隐式网格轨道。\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003e\u0026lt;track-size\u0026gt;\u003c/code\u003e：可以为长度、百分比或可用空间的比例（使用 \u003ccode\u003efr\u003c/code\u003e 单位）。\u003c/li\u003e\n\u003c/ul\u003e\n\u003cpre\u003e\u003ccode class=\"language-css\"\u003e.container {\n  grid-auto-columns: \u0026lt;track-size\u0026gt; ...;\n  grid-auto-rows: \u0026lt;track-size\u0026gt; ...;\n}\n\u003c/code\u003e\u003c/pre\u003e\n\u003cpre\u003e\u003ccode class=\"language-css\"\u003e.container {\n  grid-template-columns: 60px 60px;\n  grid-template-rows: 90px 90px;\n}\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003e上述代码将生成一个 2x2 的网格：\u003c/p\u003e\n\u003cfigure\u003e\n  \u003cimg class=\"lazyload\" data-src=\"/images/cn/2023-05-03-css-display-and-position/grid-auto-columns-rows-01.svg\" data-large-max-width=\"40%\" data-middle-max-width=\"60%\" data-small-max-width=\"100%\"/\u003e\n  \n\u003c/figure\u003e\n\u003cp\u003e使用 \u003ccode\u003egrid-column\u003c/code\u003e 和 \u003ccode\u003egrid-row\u003c/code\u003e 来定位网格项：\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"language-css\"\u003e.item-a {\n  grid-column: 1 / 2;\n  grid-row: 2 / 3;\n}\n.item-b {\n  grid-column: 5 / 6;\n  grid-row: 2 / 3;\n}\n\u003c/code\u003e\u003c/pre\u003e\n\u003cfigure\u003e\n  \u003cimg class=\"lazyload\" data-src=\"/images/cn/2023-05-03-css-display-and-position/grid-auto-columns-rows-02.svg\" data-large-max-width=\"40%\" data-middle-max-width=\"60%\" data-small-max-width=\"100%\"/\u003e\n  \n\u003c/figure\u003e\n\u003cp\u003e\u003ccode\u003e.item-b\u003c/code\u003e 从第 5 列线开始到第 6 列线结束，但由于并未定义第 5 列线和第 6 列线，因此创建了宽度为 0 的隐式轨道用于填充间隙。使用 \u003ccode\u003egrid-auto-columns\u003c/code\u003e 和 \u003ccode\u003egrid-auto-rows\u003c/code\u003e 可以指定这些隐式轨道的宽度：\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"language-css\"\u003e.container {\n  grid-auto-columns: 60px;\n}\n\u003c/code\u003e\u003c/pre\u003e\n\u003cfigure\u003e\n  \u003cimg class=\"lazyload\" data-src=\"/images/cn/2023-05-03-css-display-and-position/grid-auto-columns-rows-03.svg\" data-large-max-width=\"40%\" data-middle-max-width=\"60%\" data-small-max-width=\"100%\"/\u003e\n  \n\u003c/figure\u003e\n\u003ch4 id=\"grid-auto-flow\"\u003egrid-auto-flow\u003c/h4\u003e\n\u003cp\u003e如果有未明确放置在网格中的网格项目，自动放置算法会自动放置这些网格项目。此属性用于控制自动放置算法的工作方式。\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003erow\u003c/code\u003e（默认）：依次填充每一行，并根据需要添加新行。\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003ecolumn\u003c/code\u003e：依次填充每一列，并根据需要添加新列。\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003edense\u003c/code\u003e：将可能较晚出现的较小的网格项优先填充在网格中。\u003c/li\u003e\n\u003c/ul\u003e\n\u003cpre\u003e\u003ccode class=\"language-css\"\u003e.container {\n  grid-auto-flow: row | column | row dense | column dense;\n}\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003e注意 \u003ccode\u003edense\u003c/code\u003e 仅会改变网格项目的视觉顺序，这可能导致顺序混乱且不利于访问。\u003c/p\u003e\n\u003cp\u003e考虑如下示例：\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"language-html\"\u003e\u0026lt;section class=\u0026#34;container\u0026#34;\u0026gt;\n  \u0026lt;div class=\u0026#34;item-a\u0026#34;\u0026gt;item-a\u0026lt;/div\u0026gt;\n  \u0026lt;div class=\u0026#34;item-b\u0026#34;\u0026gt;item-b\u0026lt;/div\u0026gt;\n  \u0026lt;div class=\u0026#34;item-c\u0026#34;\u0026gt;item-c\u0026lt;/div\u0026gt;\n  \u0026lt;div class=\u0026#34;item-d\u0026#34;\u0026gt;item-d\u0026lt;/div\u0026gt;\n  \u0026lt;div class=\u0026#34;item-e\u0026#34;\u0026gt;item-e\u0026lt;/div\u0026gt;\n\u0026lt;/section\u0026gt;\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003e定义一个包含 5 列和 2 行的网格，并将 \u003ccode\u003egrid-auto-flow\u003c/code\u003e 设置为 \u003ccode\u003erow\u003c/code\u003e：\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"language-css\"\u003e.container {\n  display: grid;\n  grid-template-columns: 60px 60px 60px 60px 60px;\n  grid-template-rows: 30px 30px;\n  grid-auto-flow: row;\n}\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003e将网格项目放置在网格中时，只需要为其中两个指定位置：\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"language-css\"\u003e.item-a {\n  grid-column: 1;\n  grid-row: 1 / 3;\n}\n.item-e {\n  grid-column: 5;\n  grid-row: 1 / 3;\n}\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003e因为将 \u003ccode\u003egrid-auto-flow\u003c/code\u003e 设置为了 \u003ccode\u003erow\u003c/code\u003e，未放置的三个网格项目（\u003ccode\u003eitem-b\u003c/code\u003e、\u003ccode\u003eitem-c\u003c/code\u003e 和 \u003ccode\u003eitem-d\u003c/code\u003e）如下所示：\u003c/p\u003e\n\u003cfigure\u003e\n  \u003cimg class=\"lazyload\" data-src=\"/images/cn/2023-05-03-css-display-and-position/grid-auto-flow-01.svg\" data-large-max-width=\"40%\" data-middle-max-width=\"60%\" data-small-max-width=\"100%\"/\u003e\n  \n\u003c/figure\u003e\n\u003cpre\u003e\u003ccode class=\"language-css\"\u003e.container {\n  display: grid;\n  grid-template-columns: 60px 60px 60px 60px 60px;\n  grid-template-rows: 30px 30px;\n  grid-auto-flow: column;\n}\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003e如果将 \u003ccode\u003egrid-auto-flow\u003c/code\u003e 设置为 \u003ccode\u003ecolumn\u003c/code\u003e，未放置的三个网格项目（\u003ccode\u003eitem-b\u003c/code\u003e、\u003ccode\u003eitem-c\u003c/code\u003e 和 \u003ccode\u003eitem-d\u003c/code\u003e）如下所示：\u003c/p\u003e\n\u003cfigure\u003e\n  \u003cimg class=\"lazyload\" data-src=\"/images/cn/2023-05-03-css-display-and-position/grid-auto-flow-02.svg\" data-large-max-width=\"40%\" data-middle-max-width=\"60%\" data-small-max-width=\"100%\"/\u003e\n  \n\u003c/figure\u003e\n\u003ch4 id=\"grid\"\u003egrid\u003c/h4\u003e\n\u003cp\u003e该属性为 \u003ccode\u003egrid-template-rows\u003c/code\u003e、\u003ccode\u003egrid-template-columns\u003c/code\u003e、\u003ccode\u003egrid-template-areas\u003c/code\u003e、\u003ccode\u003egrid-auto-rows\u003c/code\u003e、\u003ccode\u003egrid-auto-columns\u003c/code\u003e 和 \u003ccode\u003egrid-auto-flow\u003c/code\u003e 属性的简写。\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003enone\u003c/code\u003e：将所有子属性设置为初始值。\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003e\u0026lt;grid-template\u0026gt;\u003c/code\u003e：同 \u003ccode\u003egrid-template\u003c/code\u003e。\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003e\u0026lt;grid-template-rows\u0026gt; / [ auto-flow \u0026amp;\u0026amp; dense? ] \u0026lt;grid-auto-columns\u0026gt;?\u003c/code\u003e：设置 \u003ccode\u003egrid-template-rows\u003c/code\u003e 为指定值。如果使用 \u003ccode\u003eauto-flow\u003c/code\u003e 关键字，则设置 \u003ccode\u003egrid-auto-flow\u003c/code\u003e 为 \u003ccode\u003ecolomn\u003c/code\u003e。如果额外使用 \u003ccode\u003edense\u003c/code\u003e 关键字，则自动放置算法将使用 \u003ccode\u003edense\u003c/code\u003e 算法。如果省略 \u003ccode\u003egrid-auto-columns\u003c/code\u003e，则其被设置为 \u003ccode\u003eauto\u003c/code\u003e。\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003e[ auto-flow \u0026amp;\u0026amp; dense? ] \u0026lt;grid-auto-rows\u0026gt;? / \u0026lt;grid-template-columns\u0026gt;\u003c/code\u003e：设置 \u003ccode\u003egrid-template-columns\u003c/code\u003e 为指定值。如果使用 \u003ccode\u003eauto-flow\u003c/code\u003e 关键字，则设置 \u003ccode\u003egrid-auto-flow\u003c/code\u003e 为 \u003ccode\u003erow\u003c/code\u003e。如果额外使用 \u003ccode\u003edense\u003c/code\u003e 关键字，则自动放置算法将使用 \u003ccode\u003edense\u003c/code\u003e 算法。如果省略 \u003ccode\u003egrid-auto-rows\u003c/code\u003e，则其被设置为 \u003ccode\u003eauto\u003c/code\u003e。\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e如下示例中的代码是等效的：\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"language-css\"\u003e.container {\n  grid: 100px 300px / 3fr 1fr;\n}\n\n.container {\n  grid-template-rows: 100px 300px;\n  grid-template-columns: 3fr 1fr;\n}\n\u003c/code\u003e\u003c/pre\u003e\n\u003cpre\u003e\u003ccode class=\"language-css\"\u003e.container {\n  grid: auto-flow / 200px 1fr;\n}\n\n.container {\n  grid-auto-flow: row;\n  grid-template-columns: 200px 1fr;\n}\n\u003c/code\u003e\u003c/pre\u003e\n\u003cpre\u003e\u003ccode class=\"language-css\"\u003e.container {\n  grid: auto-flow dense 100px / 1fr 2fr;\n}\n\n.container {\n  grid-auto-flow: row dense;\n  grid-auto-rows: 100px;\n  grid-template-columns: 1fr 2fr;\n}\n\u003c/code\u003e\u003c/pre\u003e\n\u003cpre\u003e\u003ccode class=\"language-css\"\u003e.container {\n  grid: 100px 300px / auto-flow 200px;\n}\n\n.container {\n  grid-template-rows: 100px 300px;\n  grid-auto-flow: column;\n  grid-auto-columns: 200px;\n}\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003e它还接受更复杂但更方便的语法来一次性设置所有内容。如下示例中的代码是等效的：\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"language-css\"\u003e.container {\n  grid: [row1-start] \u0026#34;header header header\u0026#34; 1fr [row1-end]\n        [row2-start] \u0026#34;footer footer footer\u0026#34; 25px [row2-end]\n        / auto 50px auto;\n}\n\n.container {\n  grid-template-areas: \n    \u0026#34;header header header\u0026#34;\n    \u0026#34;footer footer footer\u0026#34;;\n  grid-template-rows: [row1-start] 1fr [row1-end row2-start] 25px [row2-end];\n  grid-template-columns: auto 50px auto;    \n}\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch3 id=\"子元素属性-1\"\u003e子元素属性\u003c/h3\u003e\n\u003ch4 id=\"grid-column-start-grid-column-end-grid-row-start-grid-row-end\"\u003egrid-column-start, grid-column-end, grid-row-start, grid-row-end\u003c/h4\u003e\n\u003cp\u003e该属性通过网格线来设置网格项在网格中的位置。\u003ccode\u003egrid-column-start\u003c/code\u003e 和 \u003ccode\u003egrid-row-start\u003c/code\u003e 为网格项起始的线，\u003ccode\u003egrid-column-end\u003c/code\u003e 和 \u003ccode\u003egrid-row-end\u003c/code\u003e 为网格项结束的线。\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003e\u0026lt;line\u0026gt;\u003c/code\u003e：指代网格线的数字编号或名称。\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003espan \u0026lt;number\u0026gt;\u003c/code\u003e：该网格项跨越的网格轨道数。\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003espan \u0026lt;name\u0026gt;\u003c/code\u003e：该网格项跨越直到它抵达该名称网格线的下一个网格线。\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eauto\u003c/code\u003e：表示自动放置、自动跨度或一个默认跨度。\u003c/li\u003e\n\u003c/ul\u003e\n\u003cpre\u003e\u003ccode class=\"language-css\"\u003e.item {\n  grid-column-start: \u0026lt;number\u0026gt; | \u0026lt;name\u0026gt; | span \u0026lt;number\u0026gt; | span \u0026lt;name\u0026gt; | auto;\n  grid-column-end: \u0026lt;number\u0026gt; | \u0026lt;name\u0026gt; | span \u0026lt;number\u0026gt; | span \u0026lt;name\u0026gt; | auto;\n  grid-row-start: \u0026lt;number\u0026gt; | \u0026lt;name\u0026gt; | span \u0026lt;number\u0026gt; | span \u0026lt;name\u0026gt; | auto;\n  grid-row-end: \u0026lt;number\u0026gt; | \u0026lt;name\u0026gt; | span \u0026lt;number\u0026gt; | span \u0026lt;name\u0026gt; | auto;\n}\n\u003c/code\u003e\u003c/pre\u003e\n\u003cpre\u003e\u003ccode class=\"language-css\"\u003e.item-a {\n  grid-column-start: 2;\n  grid-column-end: five;\n  grid-row-start: row1-start;\n  grid-row-end: 3;\n}\n\u003c/code\u003e\u003c/pre\u003e\n\u003cfigure\u003e\n  \u003cimg class=\"lazyload\" data-src=\"/images/cn/2023-05-03-css-display-and-position/grid-column-row-start-end-01.svg\" data-large-max-width=\"40%\" data-middle-max-width=\"60%\" data-small-max-width=\"100%\"/\u003e\n  \n\u003c/figure\u003e\n\u003cpre\u003e\u003ccode class=\"language-css\"\u003e.item-b {\n  grid-column-start: 1;\n  grid-column-end: span col4-start;\n  grid-row-start: 2;\n  grid-row-end: span 2;\n}\n\u003c/code\u003e\u003c/pre\u003e\n\u003cfigure\u003e\n  \u003cimg class=\"lazyload\" data-src=\"/images/cn/2023-05-03-css-display-and-position/grid-column-row-start-end-02.svg\" data-large-max-width=\"40%\" data-middle-max-width=\"60%\" data-small-max-width=\"100%\"/\u003e\n  \n\u003c/figure\u003e\n\u003cp\u003e如果 \u003ccode\u003egrid-column-end\u003c/code\u003e 或 \u003ccode\u003egrid-row-end\u003c/code\u003e 未声明，则该网格项将默认跨越一个轨道。网格项目之间可以相互重叠，使用 \u003ccode\u003ez-index\u003c/code\u003e 可以控制它们的重叠次序。\u003c/p\u003e\n\u003ch4 id=\"grid-column-grid-row\"\u003egrid-column, grid-row\u003c/h4\u003e\n\u003cp\u003e分别是 \u003ccode\u003egrid-column-start\u003c/code\u003e + \u003ccode\u003egrid-column-end\u003c/code\u003e 和 \u003ccode\u003egrid-row-start\u003c/code\u003e+ \u003ccode\u003egrid-row-end\u003c/code\u003e 的简写。\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003e\u0026lt;start-line\u0026gt; / \u0026lt;end-line\u0026gt;\u003c/code\u003e：接受非简写版本相同的值，包括 \u003ccode\u003espan\u003c/code\u003e。\u003c/li\u003e\n\u003c/ul\u003e\n\u003cpre\u003e\u003ccode class=\"language-css\"\u003e.item {\n  grid-column: \u0026lt;start-line\u0026gt; / \u0026lt;end-line\u0026gt; | \u0026lt;start-line\u0026gt; / span \u0026lt;value\u0026gt;;\n  grid-row: \u0026lt;start-line\u0026gt; / \u0026lt;end-line\u0026gt; | \u0026lt;start-line\u0026gt; / span \u0026lt;value\u0026gt;;\n}\n\u003c/code\u003e\u003c/pre\u003e\n\u003cpre\u003e\u003ccode class=\"language-css\"\u003e.item-c {\n  grid-column: 3 / span 2;\n  grid-row: third-line / 4;\n}\n\u003c/code\u003e\u003c/pre\u003e\n\u003cfigure\u003e\n  \u003cimg class=\"lazyload\" data-src=\"/images/cn/2023-05-03-css-display-and-position/grid-column-row.svg\" data-large-max-width=\"40%\" data-middle-max-width=\"60%\" data-small-max-width=\"100%\"/\u003e\n  \n\u003c/figure\u003e\n\u003cp\u003e如果未设置结束线的值，则该网格项将默认跨越一个轨道。\u003c/p\u003e\n\u003ch4 id=\"grid-area\"\u003egrid-area\u003c/h4\u003e\n\u003cp\u003e为一个网格项命名以便它可以使用 \u003ccode\u003egrid-template-areas\u003c/code\u003e 属性创建的模板引用。此属性可以作为 \u003ccode\u003egrid-row-start\u003c/code\u003e + \u003ccode\u003egrid-column-start\u003c/code\u003e + \u003ccode\u003egrid-row-end\u003c/code\u003e + \u003ccode\u003egrid-column-end\u003c/code\u003e 的简写。\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003e\u0026lt;name\u0026gt;\u003c/code\u003e：选用的名称。\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003e\u0026lt;row-start\u0026gt; / \u0026lt;column-start\u0026gt; / \u0026lt;row-end\u0026gt; / \u0026lt;column-end\u0026gt;\u003c/code\u003e：可以为数字编号或线名称。\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e用作为网格项分配名称：\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"language-css\"\u003e.item-d {\n  grid-area: header;\n}\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003e用作 \u003ccode\u003egrid-row-start\u003c/code\u003e + \u003ccode\u003egrid-column-start\u003c/code\u003e + \u003ccode\u003egrid-row-end\u003c/code\u003e + \u003ccode\u003egrid-column-end\u003c/code\u003e 的简写：\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"language-css\"\u003e.item-d {\n  grid-area: 1 / col4-start / last-line / 6;\n}\n\u003c/code\u003e\u003c/pre\u003e\n\u003cfigure\u003e\n  \u003cimg class=\"lazyload\" data-src=\"/images/cn/2023-05-03-css-display-and-position/grid-area.svg\" data-large-max-width=\"40%\" data-middle-max-width=\"60%\" data-small-max-width=\"100%\"/\u003e\n  \n\u003c/figure\u003e\n\u003ch4 id=\"justify-self\"\u003ejustify-self\u003c/h4\u003e\n\u003cp\u003e沿 \u003ccode\u003einline\u003c/code\u003e（行）轴对齐单元格内的网格项（与沿 \u003ccode\u003eblock\u003c/code\u003e（列）轴对齐 \u003ccode\u003ealign-self\u003c/code\u003e 相反）。该属性仅应用于单个单元格内的网格项。\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003estretch\u003c/code\u003e（默认）：填充单元格的整个宽度。\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003estart\u003c/code\u003e：将网格项与单元格的起始边缘对齐。\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eend\u003c/code\u003e：将网格项与单元格的结束边缘对齐。\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003ecenter\u003c/code\u003e：将网格项与单元格的中心对齐。\u003c/li\u003e\n\u003c/ul\u003e\n\u003cpre\u003e\u003ccode class=\"language-css\"\u003e.item {\n  justify-self: stretch | start | end | center;\n}\n\u003c/code\u003e\u003c/pre\u003e\n\u003cpre\u003e\u003ccode class=\"language-css\"\u003e.item-a {\n  justify-self: stretch;\n}\n\u003c/code\u003e\u003c/pre\u003e\n\u003cfigure\u003e\n  \u003cimg class=\"lazyload\" data-src=\"/images/cn/2023-05-03-css-display-and-position/grid-justify-self-stretch.svg\" data-large-max-width=\"40%\" data-middle-max-width=\"60%\" data-small-max-width=\"100%\"/\u003e\n  \n\u003c/figure\u003e\n\u003cpre\u003e\u003ccode class=\"language-css\"\u003e.item-a {\n  justify-self: start;\n}\n\u003c/code\u003e\u003c/pre\u003e\n\u003cfigure\u003e\n  \u003cimg class=\"lazyload\" data-src=\"/images/cn/2023-05-03-css-display-and-position/grid-justify-self-start.svg\" data-large-max-width=\"40%\" data-middle-max-width=\"60%\" data-small-max-width=\"100%\"/\u003e\n  \n\u003c/figure\u003e\n\u003cpre\u003e\u003ccode class=\"language-css\"\u003e.item-a {\n  justify-self: end;\n}\n\u003c/code\u003e\u003c/pre\u003e\n\u003cfigure\u003e\n  \u003cimg class=\"lazyload\" data-src=\"/images/cn/2023-05-03-css-display-and-position/grid-justify-self-end.svg\" data-large-max-width=\"40%\" data-middle-max-width=\"60%\" data-small-max-width=\"100%\"/\u003e\n  \n\u003c/figure\u003e\n\u003cpre\u003e\u003ccode class=\"language-css\"\u003e.item-a {\n  justify-self: center;\n}\n\u003c/code\u003e\u003c/pre\u003e\n\u003cfigure\u003e\n  \u003cimg class=\"lazyload\" data-src=\"/images/cn/2023-05-03-css-display-and-position/grid-justify-self-center.svg\" data-large-max-width=\"40%\" data-middle-max-width=\"60%\" data-small-max-width=\"100%\"/\u003e\n  \n\u003c/figure\u003e\n\u003cp\u003e通过 \u003ccode\u003ejustify-items\u003c/code\u003e 属性可以为容器中所有的网格项设置对齐方式。\u003c/p\u003e\n\u003ch4 id=\"align-self-1\"\u003ealign-self\u003c/h4\u003e\n\u003cp\u003e沿 \u003ccode\u003eblock\u003c/code\u003e（列）轴对齐单元格内的网格项（与沿 \u003ccode\u003einline\u003c/code\u003e（行）轴对齐 \u003ccode\u003ejustify-self\u003c/code\u003e 相反）。该属性将仅应用于单个单元格内的网格项。\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003estretch\u003c/code\u003e（默认）：填充单元格的整个高度。\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003estart\u003c/code\u003e：将网格项与单元格的起始边缘对齐。\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eend\u003c/code\u003e：将网格项与单元格的结束边缘对齐。\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003ecenter\u003c/code\u003e：将网格项与单元格的中心对齐。\u003c/li\u003e\n\u003c/ul\u003e\n\u003cpre\u003e\u003ccode class=\"language-css\"\u003e.item {\n  align-self: stretch | start | end | center;\n}\n\u003c/code\u003e\u003c/pre\u003e\n\u003cpre\u003e\u003ccode class=\"language-css\"\u003e.item-a {\n  align-self: stretch;\n}\n\u003c/code\u003e\u003c/pre\u003e\n\u003cfigure\u003e\n  \u003cimg class=\"lazyload\" data-src=\"/images/cn/2023-05-03-css-display-and-position/grid-align-self-stretch.svg\" data-large-max-width=\"40%\" data-middle-max-width=\"60%\" data-small-max-width=\"100%\"/\u003e\n  \n\u003c/figure\u003e\n\u003cpre\u003e\u003ccode class=\"language-css\"\u003e.item-a {\n  align-self: start;\n}\n\u003c/code\u003e\u003c/pre\u003e\n\u003cfigure\u003e\n  \u003cimg class=\"lazyload\" data-src=\"/images/cn/2023-05-03-css-display-and-position/grid-align-self-start.svg\" data-large-max-width=\"40%\" data-middle-max-width=\"60%\" data-small-max-width=\"100%\"/\u003e\n  \n\u003c/figure\u003e\n\u003cpre\u003e\u003ccode class=\"language-css\"\u003e.item-a {\n  align-self: end;\n}\n\u003c/code\u003e\u003c/pre\u003e\n\u003cfigure\u003e\n  \u003cimg class=\"lazyload\" data-src=\"/images/cn/2023-05-03-css-display-and-position/grid-align-self-end.svg\" data-large-max-width=\"40%\" data-middle-max-width=\"60%\" data-small-max-width=\"100%\"/\u003e\n  \n\u003c/figure\u003e\n\u003cpre\u003e\u003ccode class=\"language-css\"\u003e.item-a {\n  align-self: center;\n}\n\u003c/code\u003e\u003c/pre\u003e\n\u003cfigure\u003e\n  \u003cimg class=\"lazyload\" data-src=\"/images/cn/2023-05-03-css-display-and-position/grid-align-self-center.svg\" data-large-max-width=\"40%\" data-middle-max-width=\"60%\" data-small-max-width=\"100%\"/\u003e\n  \n\u003c/figure\u003e\n\u003ch4 id=\"place-self\"\u003eplace-self\u003c/h4\u003e\n\u003cp\u003e\u003ccode\u003eplace-self\u003c/code\u003e 可以在单次声明中同时设置 \u003ccode\u003ealign-self\u003c/code\u003e 和 \u003ccode\u003ejustify-self\u003c/code\u003e。\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003eauto\u003c/code\u003e：默认对齐方式。\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003e\u0026lt;align-self\u0026gt; / \u0026lt;justify-self\u0026gt;\u003c/code\u003e：省略第二个值则将第一个值分配给两个属性。\u003c/li\u003e\n\u003c/ul\u003e\n\u003cpre\u003e\u003ccode class=\"language-css\"\u003e.item-a {\n  place-self: center;\n}\n\u003c/code\u003e\u003c/pre\u003e\n\u003cfigure\u003e\n  \u003cimg class=\"lazyload\" data-src=\"/images/cn/2023-05-03-css-display-and-position/grid-place-self-center.svg\" data-large-max-width=\"40%\" data-middle-max-width=\"60%\" data-small-max-width=\"100%\"/\u003e\n  \n\u003c/figure\u003e\n\u003cpre\u003e\u003ccode class=\"language-css\"\u003e.item-a {\n  place-self: center stretch;\n}\n\u003c/code\u003e\u003c/pre\u003e\n\u003cfigure\u003e\n  \u003cimg class=\"lazyload\" data-src=\"/images/cn/2023-05-03-css-display-and-position/grid-place-self-center-stretch.svg\" data-large-max-width=\"40%\" data-middle-max-width=\"60%\" data-small-max-width=\"100%\"/\u003e\n  \n\u003c/figure\u003e\n\u003ch1 id=\"定位\"\u003e定位\u003c/h1\u003e\n\u003cdiv class=\"admonition admonition-note  kai\"\u003e\n  \u003cdiv class=\"admonition-content\"\u003e本节内容主要参考自：\u003ca href=\"https://developer.mozilla.org/zh-CN/docs/Learn/CSS/CSS_layout/Introduction#%E5%AE%9A%E4%BD%8D%E6%8A%80%E6%9C%AF\"\u003e定位技术\u003c/a\u003e\u003c/div\u003e\n\u003c/div\u003e\n\u003cp\u003e定位允许我们将一个元素放置在网页的指定位置上。定位并非是一种用来做主要布局的方式，而是一种用于微调布局的手段。通过 \u003ccode\u003eposition\u003c/code\u003e 属性在特定的布局中修改元素的定位方式，该属性有 \u003ccode\u003estatic\u003c/code\u003e、\u003ccode\u003erelative\u003c/code\u003e、\u003ccode\u003efixed\u003c/code\u003e、\u003ccode\u003eabsolute\u003c/code\u003e 和 \u003ccode\u003esticky\u003c/code\u003e 共 5 种可选值。\u003c/p\u003e\n\u003cp\u003e为了展示不同 \u003ccode\u003eposition\u003c/code\u003e 的效果，在此采用相同的 HTML 进行比较：\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"language-html\"\u003e\u0026lt;h1\u0026gt;XXX 定位\u0026lt;/h1\u0026gt;\n\n\u0026lt;p\u0026gt;这是一个基本块元素。\u0026lt;/p\u0026gt;\n\u0026lt;p class=\u0026#34;position\u0026#34;\u0026gt;这是一个基本块元素。\u0026lt;/p\u0026gt;\n\u0026lt;p\u0026gt;这是一个基本块元素。\u0026lt;/p\u0026gt;\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003e默认样式为：\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"language-css\"\u003ebody {\n  width: 400px;\n  margin: 0 auto;\n}\n\nh1 {\n  text-align: center;\n}\n  \np {\n  margin: 10px;\n  padding: 10px;\n  background-color: #916cad;\n  border: 2px #523874 solid;\n  border-radius: 3px;\n}\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch2 id=\"静态定位\"\u003e静态定位\u003c/h2\u003e\n\u003cp\u003e\u003cstrong\u003e静态定位（\u003ccode\u003estatic\u003c/code\u003e）\u003c/strong\u003e 是 \u003ccode\u003eposition\u003c/code\u003e 属性的 \u003cstrong\u003e默认值\u003c/strong\u003e，它表示将元素放置在文档布局流的默认位置上。\u003c/p\u003e\n\u003cp\u003e静态定位样式为：\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"language-css\"\u003e.position {\n  position: static;\n}\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003e渲染效果如下：\u003c/p\u003e\n\u003ciframe height=\"300\" width=\"100%\" style=\"background: #ffffff; border: 1px solid var(--code-border); border-radius: 3px;\" src=\"/codes/cn/2023-05-03-css-display-and-position/static-position.html\"\u003e\u003c/iframe\u003e\n\u003ch2 id=\"相对定位\"\u003e相对定位\u003c/h2\u003e\n\u003cp\u003e\u003cstrong\u003e相对定位（\u003ccode\u003erelative\u003c/code\u003e）\u003c/strong\u003e 表示相对于 \u003cstrong\u003e静态定位\u003c/strong\u003e 的默认位置进行偏移，其需要搭配 \u003ccode\u003etop\u003c/code\u003e、\u003ccode\u003ebottom\u003c/code\u003e、\u003ccode\u003eleft\u003c/code\u003e 和 \u003ccode\u003eright\u003c/code\u003e 四个属性使用。\u003c/p\u003e\n\u003cp\u003e相对定位样式为：\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"language-css\"\u003e.position {\n  position: relative;\n  top: 30px;\n  left: 30px;\n  background-color: #c7fba5cc;\n  border: 2px #adf182cc solid;\n}\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003e渲染效果如下：\u003c/p\u003e\n\u003ciframe height=\"300\" width=\"100%\" style=\"background: #ffffff; border: 1px solid var(--code-border); border-radius: 3px;\" src=\"/codes/cn/2023-05-03-css-display-and-position/relative-position.html\"\u003e\u003c/iframe\u003e\n\u003ch2 id=\"绝对定位\"\u003e绝对定位\u003c/h2\u003e\n\u003cp\u003e\u003cstrong\u003e绝对定位（\u003ccode\u003eabsolute\u003c/code\u003e）\u003c/strong\u003e 表示相对于 \u003cstrong\u003e上级元素\u003c/strong\u003e 的位置进行偏移，其需要搭配 \u003ccode\u003etop\u003c/code\u003e、\u003ccode\u003ebottom\u003c/code\u003e、\u003ccode\u003eleft\u003c/code\u003e 和 \u003ccode\u003eright\u003c/code\u003e 四个属性使用。绝对定位的定位基点不能为 \u003ccode\u003estatic\u003c/code\u003e 定位，否则定位基点将变成网页根元素 \u003ccode\u003ehtml\u003c/code\u003e。\u003c/p\u003e\n\u003cp\u003e绝对定位样式为：\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"language-css\"\u003e.position {\n  position: absolute;\n  top: 30px;\n  left: 30px;\n  background-color: #c7fba5cc;\n  border: 2px #adf182cc solid;\n}\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003e渲染效果如下：\u003c/p\u003e\n\u003ciframe height=\"300\" width=\"100%\" style=\"background: #ffffff; border: 1px solid var(--code-border); border-radius: 3px;\" src=\"/codes/cn/2023-05-03-css-display-and-position/absolute-position.html\"\u003e\u003c/iframe\u003e\n\u003ch2 id=\"固定定位\"\u003e固定定位\u003c/h2\u003e\n\u003cp\u003e\u003cstrong\u003e固定定位（\u003ccode\u003efixed\u003c/code\u003e）\u003c/strong\u003e 表示相对于 \u003cstrong\u003e视窗（viewport，即浏览器窗口）\u003c/strong\u003e 进行偏移，其需要搭配 \u003ccode\u003etop\u003c/code\u003e、\u003ccode\u003ebottom\u003c/code\u003e、\u003ccode\u003eleft\u003c/code\u003e 和 \u003ccode\u003eright\u003c/code\u003e 四个属性使用。利用固定定位可以实现元素位置不随页面滚动而发生变化。\u003c/p\u003e\n\u003cp\u003e为了演示固定定位，修改 HTML 代码如下：\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"language-html\"\u003e\u0026lt;h1\u0026gt;固定定位\u0026lt;/h1\u0026gt;\n\n\u0026lt;p\u0026gt;这是一个基本块元素。\u0026lt;/p\u0026gt;\n\u0026lt;p class=\u0026#34;position\u0026#34;\u0026gt;固定\u0026lt;/p\u0026gt;\n\u0026lt;p\u0026gt;这是一个基本块元素。\u0026lt;/p\u0026gt;\n\u0026lt;p\u0026gt;这是一个基本块元素。\u0026lt;/p\u0026gt;\n\u0026lt;p\u0026gt;这是一个基本块元素。\u0026lt;/p\u0026gt;\n\u0026lt;p\u0026gt;这是一个基本块元素。\u0026lt;/p\u0026gt;\n\u0026lt;p\u0026gt;这是一个基本块元素。\u0026lt;/p\u0026gt;\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003e固定定位样式为：\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"language-css\"\u003e.position {\n  position: fixed;\n  top: 30px;\n  left: 30px;\n  background-color: #c7fba5cc;\n  border: 2px #adf182cc solid;\n}\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003e渲染效果如下：\u003c/p\u003e\n\u003ciframe height=\"300\" width=\"100%\" style=\"background: #ffffff; border: 1px solid var(--code-border); border-radius: 3px;\" src=\"/codes/cn/2023-05-03-css-display-and-position/fixed-position.html\"\u003e\u003c/iframe\u003e\n\u003ch2 id=\"粘性定位\"\u003e粘性定位\u003c/h2\u003e\n\u003cp\u003e\u003cstrong\u003e粘性定位（\u003ccode\u003esticky\u003c/code\u003e）\u003c/strong\u003e 可以理解为 \u003cstrong\u003e静态定位（\u003ccode\u003estatic\u003c/code\u003e）\u003c/strong\u003e 和 \u003cstrong\u003e固定定位（\u003ccode\u003efixed\u003c/code\u003e）\u003c/strong\u003e 的 \u003cstrong\u003e混合\u003c/strong\u003e。当指定一个元素的 \u003ccode\u003eposition\u003c/code\u003e 属性为 \u003ccode\u003esticky\u003c/code\u003e 后，它会在正常布局流中滚动，直至它出现在设定的相对于容器的位置，此时它会停止滚动，表现为固定定位。\u003c/p\u003e\n\u003cp\u003e为了演示粘性定位，修改 HTML 代码如下：\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"language-html\"\u003e\u0026lt;h1\u0026gt;粘性定位\u0026lt;/h1\u0026gt;\n\n\u0026lt;p\u0026gt;这是一个基本块元素。\u0026lt;/p\u0026gt;\n\u0026lt;p class=\u0026#34;position\u0026#34;\u0026gt;这是一个粘性定位元素。\u0026lt;/p\u0026gt;\n\u0026lt;p\u0026gt;这是一个基本块元素。\u0026lt;/p\u0026gt;\n\u0026lt;p\u0026gt;这是一个基本块元素。\u0026lt;/p\u0026gt;\n\u0026lt;p\u0026gt;这是一个基本块元素。\u0026lt;/p\u0026gt;\n\u0026lt;p\u0026gt;这是一个基本块元素。\u0026lt;/p\u0026gt;\n\u0026lt;p\u0026gt;这是一个基本块元素。\u0026lt;/p\u0026gt;\n\u0026lt;p\u0026gt;这是一个基本块元素。\u0026lt;/p\u0026gt;\n\u0026lt;p\u0026gt;这是一个基本块元素。\u0026lt;/p\u0026gt;\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003e粘性定位样式为：\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"language-css\"\u003e.position {\n  position: sticky;\n  top: 30px;\n  left: 30px;\n  background-color: #c7fba5cc;\n  border: 2px #adf182cc solid;\n}\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003e渲染效果如下：\u003c/p\u003e\n\u003ciframe height=\"300\" width=\"100%\" style=\"background: #ffffff; border: 1px solid var(--code-border); border-radius: 3px;\" src=\"/codes/cn/2023-05-03-css-display-and-position/sticky-position.html\"\u003e\u003c/iframe\u003e\n\u003cdiv class=\"footnotes\" role=\"doc-endnotes\"\u003e\n\u003chr/\u003e\n\u003col\u003e\n\u003cli id=\"fn:1\"\u003e\n\u003cp\u003e\u003ca href=\"https://developer.mozilla.org/zh-CN/docs/Learn/CSS/Building_blocks/The_box_model\"\u003ehttps://developer.mozilla.org/zh-CN/docs/Learn/CSS/Building_blocks/The_box_model\u003c/a\u003e \u003ca href=\"#fnref:1\" class=\"footnote-backref\" role=\"doc-backlink\"\u003e↩︎\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ol\u003e\n\u003c/div\u003e\n\n\n\n\n\n\u003cdiv class=\"donate\"\u003e\n  \u003cdiv class=\"donate-header\"\u003e\u003c/div\u003e\n  \u003cdiv class=\"donate-slug\" id=\"donate-slug\"\u003ecss-display-and-position\u003c/div\u003e\n  \u003cbutton class=\"donate-button\"\u003e赞 赏\u003c/button\u003e\n  \u003cdiv class=\"donate-footer\"\u003e「真诚赞赏，手留余香」\u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"donate-modal-wrapper\"\u003e\n  \u003cdiv class=\"donate-modal\"\u003e\n    \u003cdiv class=\"donate-box\"\u003e\n      \u003cdiv class=\"donate-box-content\"\u003e\n        \u003cdiv class=\"donate-box-content-inner\"\u003e\n          \u003cdiv class=\"donate-box-header\"\u003e「真诚赞赏，手留余香」\u003c/div\u003e\n          \u003cdiv class=\"donate-box-body\"\u003e\n            \u003cdiv class=\"donate-box-money\"\u003e\n              \u003cbutton class=\"donate-box-money-button donate-box-money-button-unchecked\" id=\"donate-box-money-button-2\" data-v=\"2\" data-unchecked=\"￥ 2\" data-checked=\"2 元\"\u003e￥ 2\u003c/button\u003e\n              \u003cbutton class=\"donate-box-money-button donate-box-money-button-unchecked\" id=\"donate-box-money-button-5\" data-v=\"5\" data-unchecked=\"￥ 5\" data-checked=\"5 元\"\u003e￥ 5\u003c/button\u003e\n              \u003cbutton class=\"donate-box-money-button donate-box-money-button-unchecked\" id=\"donate-box-money-button-10\" data-v=\"10\" data-unchecked=\"￥ 10\" data-checked=\"10 元\"\u003e￥ 10\u003c/button\u003e\n              \u003cbutton class=\"donate-box-money-button donate-box-money-button-unchecked\" id=\"donate-box-money-button-50\" data-v=\"50\" data-unchecked=\"￥ 50\" data-checked=\"50 元\"\u003e￥ 50\u003c/button\u003e\n              \u003cbutton class=\"donate-box-money-button donate-box-money-button-unchecked\" id=\"donate-box-money-button-100\" data-v=\"100\" data-unchecked=\"￥ 100\" data-checked=\"100 元\"\u003e￥ 100\u003c/button\u003e\n              \u003cbutton class=\"donate-box-money-button donate-box-money-button-unchecked\" id=\"donate-box-money-button-custom\" data-v=\"custom\" data-unchecked=\"任意金额\" data-checked=\"任意金额\"\u003e任意金额\u003c/button\u003e\n            \u003c/div\u003e\n            \u003cdiv class=\"donate-box-pay\"\u003e\n              \u003cimg class=\"donate-box-pay-qrcode\" id=\"donate-box-pay-qrcode\" src=\"\"/\u003e\n            \u003c/div\u003e\n          \u003c/div\u003e\n          \u003cdiv class=\"donate-box-footer\"\u003e\n            \u003cdiv class=\"donate-box-pay-method donate-box-pay-method-checked\" data-v=\"wechat-pay\"\u003e\n              \u003cimg class=\"donate-box-pay-method-image\" id=\"donate-box-pay-method-image-wechat-pay\" src=\"\"/\u003e\n            \u003c/div\u003e\n            \u003cdiv class=\"donate-box-pay-method\" data-v=\"alipay\"\u003e\n              \u003cimg class=\"donate-box-pay-method-image\" id=\"donate-box-pay-method-image-alipay\" src=\"\"/\u003e\n            \u003c/div\u003e\n          \u003c/div\u003e\n        \u003c/div\u003e\n      \u003c/div\u003e\n    \u003c/div\u003e\n    \u003cbutton type=\"button\" class=\"donate-box-close-button\"\u003e\n      \u003csvg class=\"donate-box-close-button-icon\" fill=\"#fff\" viewBox=\"0 0 24 24\" width=\"24\" height=\"24\"\u003e\u003cpath d=\"M13.486 12l5.208-5.207a1.048 1.048 0 0 0-.006-1.483 1.046 1.046 0 0 0-1.482-.005L12 10.514 6.793 5.305a1.048 1.048 0 0 0-1.483.005 1.046 1.046 0 0 0-.005 1.483L10.514 12l-5.208 5.207a1.048 1.048 0 0 0 .006 1.483 1.046 1.046 0 0 0 1.482.005L12 13.486l5.207 5.208a1.048 1.048 0 0 0 1.483-.006 1.046 1.046 0 0 0 .005-1.482L13.486 12z\" fill-rule=\"evenodd\"\u003e\u003c/path\u003e\u003c/svg\u003e\n    \u003c/button\u003e\n  \u003c/div\u003e\n\u003c/div\u003e\n\n\u003cscript type=\"text/javascript\" src=\"/js/donate.js\"\u003e\u003c/script\u003e\n\n\n  \u003cfooter\u003e\n  \n\u003cnav class=\"post-nav\"\u003e\n  \u003cspan class=\"nav-prev\"\u003e← \u003ca href=\"/cn/2023/04/what-i-talk-about-when-i-talk-about-photo-retouching-colors-part-1/\"\u003e当我谈修图时，我谈些什么\u003c/a\u003e\u003c/span\u003e\n  \u003cspan class=\"nav-next\"\u003e\u003ca href=\"/cn/2023/07/what-i-talk-about-when-i-talk-about-photography-colors-part-1/\"\u003e当我谈摄影时，我谈些什么\u003c/a\u003e →\u003c/span\u003e\n\u003c/nav\u003e\n\n\n\n\n\u003cins class=\"adsbygoogle\" style=\"display:block; text-align:center;\" data-ad-layout=\"in-article\" data-ad-format=\"fluid\" data-ad-client=\"ca-pub-2608165017777396\" data-ad-slot=\"8302038603\"\u003e\u003c/ins\u003e\n\u003cscript\u003e\n  (adsbygoogle = window.adsbygoogle || []).push({});\n\u003c/script\u003e\n\n\n\n\u003cscript src=\"//cdn.jsdelivr.net/npm/js-cookie@3.0.5/dist/js.cookie.min.js\"\u003e\u003c/script\u003e\n\u003cscript src=\"/js/toggle-theme.js\"\u003e\u003c/script\u003e\n\n\n\u003cscript src=\"/js/no-highlight.js\"\u003e\u003c/script\u003e\n\u003cscript src=\"/js/math-code.js\"\u003e\u003c/script\u003e\n\u003cscript src=\"/js/heading-anchor.js\"\u003e\u003c/script\u003e\n\n\n\n\u003csection class=\"comments\"\u003e\n\u003cscript src=\"https://giscus.app/client.js\" data-repo=\"leovan/leovan.me\" data-repo-id=\"MDEwOlJlcG9zaXRvcnkxMTMxOTY0Mjc=\" data-category=\"Comments\" data-category-id=\"DIC_kwDOBr89i84CT-R7\" data-mapping=\"pathname\" data-strict=\"1\" data-reactions-enabled=\"1\" data-emit-metadata=\"0\" data-input-position=\"top\" data-theme=\"preferred_color_scheme\" data-lang=\"zh-CN\" data-loading=\"lazy\" crossorigin=\"anonymous\" defer=\"\"\u003e\n\u003c/script\u003e\n\u003c/section\u003e\n\n\n\u003cscript src=\"//cdn.jsdelivr.net/npm/clipboard@2.0.11/dist/clipboard.min.js\"\u003e\u003c/script\u003e\n\u003cscript src=\"//cdn.jsdelivr.net/npm/prismjs@1.29.0/prism.min.js\"\u003e\u003c/script\u003e\n\u003cscript src=\"//cdn.jsdelivr.net/npm/prismjs@1.29.0/plugins/autoloader/prism-autoloader.min.js\"\u003e\u003c/script\u003e\n\u003cscript src=\"//cdn.jsdelivr.net/npm/prismjs@1.29.0/plugins/toolbar/prism-toolbar.min.js\"\u003e\u003c/script\u003e\n\u003cscript\u003e\n  (function() {\n    if (!self.Prism) {\n      return;\n    }\n\n    \n    Prism.languages.dos = Prism.languages.powershell;\n    Prism.languages.gremlin = Prism.languages.groovy;\n\n    let languages = {\n      'r': 'R', 'python': 'Python', 'xml': 'XML', 'html': 'HTML',\n      'yaml': 'YAML', 'latex': 'LaTeX', 'tex': 'TeX',\n      'powershell': 'PowerShell', 'javascript': 'JavaScript',\n      'dos': 'DOS', 'qml': 'QML', 'json': 'JSON', 'bash': 'Bash',\n      'text': 'Text', 'txt': 'Text', 'sparql': 'SPARQL',\n      'gremlin': 'Gremlin', 'cypher': 'Cypher', 'ngql': 'nGQL',\n      'shell': 'Shell', 'sql': 'SQL', 'apacheconf': 'Apache Configuration', 'c': 'C', 'css': 'CSS'\n    };\n\n    Prism.hooks.add('before-highlight', function(env) {\n      if (env.language !== 'plain') {\n        let language = languages[env.language] || env.language;\n        env.element.setAttribute('data-language', language);\n      }\n    });\n\n    \n    let ClipboardJS = window.ClipboardJS || undefined;\n\n    Prism.plugins.toolbar.registerButton('copy-to-clipboard', function(env) {\n      let linkCopy = document.createElement('button');\n      linkCopy.classList.add('prism-button-copy');\n\n      registerClipboard();\n\n      return linkCopy;\n\n      function registerClipboard() {\n        let clip = new ClipboardJS(linkCopy, {\n          'text': function () {\n            return env.code;\n          }\n        });\n\n        clip.on('success', function() {\n          linkCopy.classList.add('prism-button-copy-success');\n          resetText();\n        });\n        clip.on('error', function () {\n          linkCopy.classList.add('prism-button-copy-error');\n          resetText();\n        });\n      }\n\n      function resetText() {\n        setTimeout(function () {\n          linkCopy.classList.remove('prism-button-copy-success');\n          linkCopy.classList.remove('prism-button-copy-error');\n        }, 1600);\n      }\n    });\n  })();\n\u003c/script\u003e\n\n\n\n\n\n\n\n\n\n\n\n\n\n\u003cscript async=\"\" src=\"/js/center-img.js\"\u003e\u003c/script\u003e\n\u003cscript async=\"\" src=\"/js/right-quote.js\"\u003e\u003c/script\u003e\n\u003cscript async=\"\" src=\"/js/external-link.js\"\u003e\u003c/script\u003e\n\u003cscript async=\"\" src=\"/js/alt-title.js\"\u003e\u003c/script\u003e\n\u003cscript async=\"\" src=\"/js/figure.js\"\u003e\u003c/script\u003e\n\n\n\n\u003cscript src=\"//cdn.jsdelivr.net/npm/lazysizes@5.3.2/lazysizes.min.js\"\u003e\u003c/script\u003e\n\n\n\u003cscript src=\"//cdn.jsdelivr.net/npm/vanilla-back-to-top@latest/dist/vanilla-back-to-top.min.js\"\u003e\u003c/script\u003e\n\u003cscript\u003e\naddBackToTop({\n  diameter: 48\n});\n\u003c/script\u003e\n\n  \u003chr/\u003e\n  \u003cdiv class=\"copyright no-border-bottom\"\u003e\n    \u003cdiv class=\"copyright-author-year\"\u003e\n      \u003cspan\u003eCopyright © 2017-2024 \u003ca href=\"/\"\u003e范叶亮 | Leo Van\u003c/a\u003e\u003c/span\u003e\n    \u003c/div\u003e\n  \u003c/div\u003e\n  \u003c/footer\u003e\n  \u003c/article\u003e",
  "Date": "2023-05-03T00:00:00Z",
  "Author": "范叶亮"
}