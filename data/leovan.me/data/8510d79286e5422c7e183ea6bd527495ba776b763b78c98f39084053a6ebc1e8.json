{
  "Source": "leovan.me",
  "Title": "无模型策略预测和控制 - 蒙特卡洛方法 (Model-Free Policy Prediction and Control - Monte-Carlo Learning)",
  "Link": "https://leovan.me/cn/2020/07/model-free-policy-prediction-and-control-monte-carlo-learning/",
  "Content": "\u003carticle class=\"main\"\u003e\n    \u003cheader class=\"content-title\"\u003e\n    \n\u003ch1 class=\"title\"\u003e\n  \n  无模型策略预测和控制 - 蒙特卡洛方法 (Model-Free Policy Prediction and Control - Monte-Carlo Learning)\n  \n\u003c/h1\u003e\n\u003ch2 class=\"subtitle\"\u003e强化学习系列\u003c/h2\u003e\n\n\n\n\n\n\n\u003ch2 class=\"author-date\"\u003e范叶亮 / \n2020-07-01\u003c/h2\u003e\n\n\n\n\u003ch3 class=\"post-meta\"\u003e\n\n\n\u003cstrong\u003e分类: \u003c/strong\u003e\n\u003ca href=\"/categories/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0\"\u003e机器学习\u003c/a\u003e, \u003ca href=\"/categories/%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0\"\u003e强化学习\u003c/a\u003e\n\n\n\n\n/\n\n\n\n\n\u003cstrong\u003e标签: \u003c/strong\u003e\n\u003cspan\u003e无模型\u003c/span\u003e, \u003cspan\u003e蒙特卡洛方法\u003c/span\u003e, \u003cspan\u003e蒙特卡洛学习\u003c/span\u003e, \u003cspan\u003eMonte-Carlo Learning\u003c/span\u003e, \u003cspan\u003e试探性出发\u003c/span\u003e, \u003cspan\u003eExploring Starts\u003c/span\u003e, \u003cspan\u003e同轨策略\u003c/span\u003e, \u003cspan\u003eon-policy\u003c/span\u003e, \u003cspan\u003e离轨策略\u003c/span\u003e, \u003cspan\u003eoff-policy\u003c/span\u003e, \u003cspan\u003e软性策略\u003c/span\u003e, \u003cspan\u003eSoft Policy\u003c/span\u003e\n\n\n\n\n/\n\n\n\u003cstrong\u003e字数: \u003c/strong\u003e\n4888\n\u003c/h3\u003e\n\n\n\n\u003chr/\u003e\n\n\n\n    \n    \n    \u003cins class=\"adsbygoogle\" style=\"display:block; text-align:center;\" data-ad-layout=\"in-article\" data-ad-format=\"fluid\" data-ad-client=\"ca-pub-2608165017777396\" data-ad-slot=\"1261604535\"\u003e\u003c/ins\u003e\n    \u003cscript\u003e\n    (adsbygoogle = window.adsbygoogle || []).push({});\n    \u003c/script\u003e\n    \n    \n    \u003c/header\u003e\n\n\n\n\n\u003cblockquote\u003e\n\u003cp\u003e本文为\u003ca href=\"/categories/%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0/\"\u003e《强化学习系列》\u003c/a\u003e文章\u003cbr/\u003e\n本文内容主要参考自：\u003cbr/\u003e\n1.《强化学习》\u003csup id=\"fnref:1\"\u003e\u003ca href=\"#fn:1\" class=\"footnote-ref\" role=\"doc-noteref\"\u003e1\u003c/a\u003e\u003c/sup\u003e\u003cbr/\u003e\n2. CS234: Reinforcement Learning \u003csup id=\"fnref:2\"\u003e\u003ca href=\"#fn:2\" class=\"footnote-ref\" role=\"doc-noteref\"\u003e2\u003c/a\u003e\u003c/sup\u003e\u003cbr/\u003e\n3. UCL Course on RL \u003csup id=\"fnref:3\"\u003e\u003ca href=\"#fn:3\" class=\"footnote-ref\" role=\"doc-noteref\"\u003e3\u003c/a\u003e\u003c/sup\u003e\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003e蒙特卡洛算法仅需要\u003cstrong\u003e经验\u003c/strong\u003e，即从真实或者模拟的环境交互中采样得到的状态、动作、收益的序例。从\u003cstrong\u003e真实\u003c/strong\u003e经验中学习不需要关于环境动态变化规律的先验知识，却依然能够达到最优的行为；从\u003cstrong\u003e模拟\u003c/strong\u003e经验中学习尽管需要一个模型，但这个模型只需要能够生成状态转移的一些样本，而不需要像动态规划那样生成所有可能的转移概率分布。\u003c/p\u003e\n\u003ch1 id=\"蒙特卡洛预测\"\u003e蒙特卡洛预测\u003c/h1\u003e\n\u003cp\u003e一个状态的价值是从该状态开始的期望回报，即未来的折扣收益累积值的期望。那么一个显而易见的方式是根据经验进行估计，即对所有经过这个状态之后产生的回报进行平均。随着越来越多的回报被观察到，平均值就会收敛到期望值，这就是蒙特卡洛算法的基本思想。\u003c/p\u003e\n\u003cp\u003e假设给定策略 \u003ccode\u003e$\\pi$\u003c/code\u003e 下途径状态 \u003ccode\u003e$s$\u003c/code\u003e 的多幕数据，我们需要估计策略 \u003ccode\u003e$\\pi$\u003c/code\u003e 下状态 \u003ccode\u003e$s$\u003c/code\u003e 的价值函数 \u003ccode\u003e$v_{\\pi} \\left(s\\right)$\u003c/code\u003e。在同一幕中，\u003ccode\u003e$s$\u003c/code\u003e 可能多次被访问，因此蒙特卡洛方法分为\u003cstrong\u003e首次访问型 MC 算法\u003c/strong\u003e和\u003cstrong\u003e每次访问型 MC 算法\u003c/strong\u003e，两者的区别在于更新时是否校验 \u003ccode\u003e$S_t$\u003c/code\u003e 已经在当前幕中出现过。以首次访问型 MC 预测算法为例，算法流程如下：\u003c/p\u003e\n\n\n\u003clink rel=\"stylesheet\" type=\"text/css\" href=\"//cdn.jsdelivr.net/npm/pseudocode@latest/build/pseudocode.min.css\"/\u003e\n\n\n\u003cdiv\u003e\u003cpre class=\"pseudocode\"\u003e\\begin{algorithm}\n\\caption{首次访问型 MC 预测算法，用于估计 $V \\approx v_{\\pi}$}\n\\begin{algorithmic}\n\\REQUIRE 待评估策略 $\\pi$\n\\STATE 对于所有 $s \\in \\mathcal{S}$，任意初始化 $V \\left(s\\right) \\in \\mathbb{R}$\n\\STATE 对于所有 $s \\in \\mathcal{S}$，$Returns \\left(s\\right) \\gets \\varnothing$\n\\WHILE{TRUE}\n  \\STATE 根据 $\\pi$ 生成一幕序列 $S_0, A_0, R_1, \\cdots, S_{T-1}, A_{T-1}, R_T$\n  \\STATE $G \\gets 0$\n  \\FOR{$t \\in T-1, T-2, \\cdots, 0$}\n    \\STATE $G \\gets \\gamma G + R_{t+1}$\n    \\IF{$S_t$ 在 $S_0, S_1, \\cdots, S_{t-1}$ 中出现过}\n      \\STATE $Returns \\left(S_t\\right) \\gets Resurn \\left(S_t\\right) \\cup G$\n      \\STATE $V \\left(S_t\\right) \\gets avg \\left(Returns \\left(S_t\\right)\\right)$\n    \\ENDIF\n  \\ENDFOR\n\\ENDWHILE\n\\end{algorithmic}\n\\end{algorithm}\n\u003c/pre\u003e\u003c/div\u003e\n\n\u003cp\u003e以\u003ca href=\"https://zh.wikipedia.org/wiki/%E4%BA%8C%E5%8D%81%E4%B8%80%E9%BB%9E\"\u003e二十一点\u003c/a\u003e游戏为例，每一局可以看作一幕，胜、负、平分别获得收益 \u003ccode\u003e$+1, -1, 0$\u003c/code\u003e。每局游戏进行中的收益都为 \u003ccode\u003e$0$\u003c/code\u003e，并且不打折扣（\u003ccode\u003e$\\gamma = 1$\u003c/code\u003e），最终的收益即为整个游戏的回报。玩家的动作为要牌（Hit）或停牌（Stand），状态则取决于玩家的牌和庄家显示的牌。假设所有牌来自无穷多的一组牌（即每次取出的牌都会再放回牌堆）。如果玩家手上有一张 A，可以视作 11 而不爆掉，那么称这张 A 为\u003cstrong\u003e可用的\u003c/strong\u003e，此时这张牌总会被视作 11。因此，玩家做出的选择只会依赖于三个变量：他手牌的总和（12-31），庄家显示的牌（A-10），以及他是否有可用的 A，共计 200 个状态。\u003c/p\u003e\n\u003cp\u003e考虑如下策略，玩家在手牌点数之和小于 20 时均要牌，否则停牌。通过该策略多次模型二十一点游戏，并且计算每一个状态的回报的平均值。模拟结果如下：\u003c/p\u003e\n\u003cfigure\u003e\n  \u003cimg class=\"lazyload\" data-src=\"/images/cn/2020-07-01-model-free-policy-prediction-and-control-monte-carlo-learning/blackjack-monte-carlo-on-policy.png\" data-large-max-width=\"100%\" data-middle-max-width=\"100%\" data-small-max-width=\"100%\"/\u003e\n  \n\u003c/figure\u003e\n\u003cp\u003e有可用 A 的状态的估计会更不确定、不规律，因为这样的状态更加罕见。无论哪种情况，在大于约 500000 局游戏后，价值函数都能很好地近似。\u003c/p\u003e\n\u003ch1 id=\"蒙特卡洛控制\"\u003e蒙特卡洛控制\u003c/h1\u003e\n\u003cp\u003e如果无法得到环境的模型，那么计算动作的价值（“状态-动作”二元组的价值）比计算状态的价值更加有用。动作价值函数的策略评估的目标是估计 \u003ccode\u003e$q_{\\pi} \\left(s, a\\right)$\u003c/code\u003e，即在策略 \u003ccode\u003e$\\pi$\u003c/code\u003e 下从状态 \u003ccode\u003e$s$\u003c/code\u003e 采取动作 \u003ccode\u003e$a$\u003c/code\u003e 的期望回报。只需将对状态的访问改为对“状态-动作”二元组的访问，蒙特卡洛算法就可以几乎和之前完全相同的方式解决该问题，唯一复杂之处在于一些“状态-动作”二元组可能永远不会被访问到。为了实现基于动作价值函数的策略评估，我们必须保证持续的试探。一种方式是将指定的“状态-动作”二元组作为起点开始一幕采样，同时保证所有“状态-动作”二元组都有非零的概率可以被选为起点。这样就保证了在采样的幕个数趋于无穷时，每一个“状态-动作”二元组都会被访问到无数次。我们把这种假设称为\u003cstrong\u003e试探性出发\u003c/strong\u003e。\u003c/p\u003e\n\u003cp\u003e策略改进的方法是在当前价值函数上贪心地选择动作。由于我们有动作价值函数，所以在贪心的时候完全不需要使用任何的模型信息。对于任意的一个动作价值函数 \u003ccode\u003e$q$\u003c/code\u003e，对应的贪心策略为：对于任意一个状态 \u003ccode\u003e$s \\in \\mathcal{S}$\u003c/code\u003e，必定选择对应动作价值函数最大的动作：\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003e$$ \\pi \\left(s\\right) = \\arg\\max_a q \\left(s, a\\right) $$\u003c/code\u003e\u003c/p\u003e\n\u003cp\u003e策略改进可以通过将 \u003ccode\u003e$q_{\\pi_k}$\u003c/code\u003e 对应的贪心策略作为 \u003ccode\u003e$\\pi_{k+1}$\u003c/code\u003e 来进行。这样的 \u003ccode\u003e$\\pi_k$\u003c/code\u003e 和 \u003ccode\u003e$\\pi_{k+1}$\u003c/code\u003e 满足策略改进定理，因为对于所有的状态 \u003ccode\u003e$s \\in \\mathcal{S}$\u003c/code\u003e：\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003e$$ \\begin{aligned} q_{\\pi_{k}}\\left(s, \\pi_{k+1}(s)\\right) \u0026amp;=q_{\\pi_{k}}\\left(s, \\underset{a}{\\arg \\max } q_{\\pi_{k}}(s, a)\\right) \\\\ \u0026amp;=\\max _{a} q_{\\pi_{k}}(s, a) \\\\ \u0026amp; \\geqslant q_{\\pi_{k}}\\left(s, \\pi_{k}(s)\\right) \\\\ \u0026amp; \\geqslant v_{\\pi_{k}}(s) \\end{aligned} $$\u003c/code\u003e\u003c/p\u003e\n\u003cp\u003e对于蒙特卡洛策略迭代，可以逐幕交替进行评估与改进。每一幕结束后，使用观测到的回报进行策略评估，然后在该幕序列访问到的每一个状态上进行策略改进。使用这个思路的一个简单算法称为\u003cstrong\u003e基于试探性出发的蒙特卡洛（蒙特卡洛 ES）\u003c/strong\u003e，算法流程如下：\u003c/p\u003e\n\n\n\u003cdiv\u003e\u003cpre class=\"pseudocode\"\u003e\\begin{algorithm}\n\\caption{蒙特卡洛 ES（试探性出发），用于估计 $\\pi \\approx \\pi_*$}\n\\begin{algorithmic}\n\\STATE 对于所有 $s \\in \\mathcal{S}$，任意初始化 $\\pi \\left(s\\right) \\in \\mathcal{A} \\left(s\\right)$\n\\STATE 对于所有 $s \\in \\mathcal{S}, a \\in \\mathcal{A} \\left(s\\right)$，任意初始化 $Q \\left(s, a\\right) \\in \\mathbb{R}$\n\\STATE 对于所有 $s \\in \\mathcal{S}, a \\in \\mathcal{A} \\left(s\\right)$，$Returns \\left(s, a\\right) \\gets \\varnothing$\n\\WHILE{TRUE}\n  \\STATE 选择 $S_0 \\in \\mathcal{S}$ 和 $A_0 \\in \\mathcal{A} \\left(S_0\\right)$ 以使得所有“状态-动作”二元组的概率都 $\u0026gt; 0$\n  \\STATE 从 $S_0, A_0$ 开始根据 $\\pi$ 生成一幕序列 $S_0, A_0, R_1, \\cdots, S_{T-1}, A_{T-1}, R_T$\n  \\STATE $G \\gets 0$\n  \\FOR{$t \\in T-1, T-2, \\cdots, 0$}\n    \\STATE $G \\gets \\gamma G + R_{t+1}$\n    \\IF{$S_t, A_t$ 在 $S_0, A_0, S_1, A_1, \\cdots, S_{t-1}, A_{t-1}$ 中出现过}\n      \\STATE $Returns \\left(S_t, A_t\\right) \\gets Resurn \\left(S_t, A_t\\right) \\cup G$\n      \\STATE $Q \\left(S_t, A_t\\right) \\gets avg \\left(Returns \\left(S_t, A_t\\right)\\right)$\n      \\STATE $\\pi \\left(S_t\\right) \\gets \\arg\\max_a Q \\left(S_t, a\\right)$\n    \\ENDIF\n  \\ENDFOR\n\\ENDWHILE\n\\end{algorithmic}\n\\end{algorithm}\n\u003c/pre\u003e\u003c/div\u003e\n\n\u003cp\u003e利用蒙特卡洛 ES 可以很直接地解决二十一点游戏，只需随机等概率选择庄家的扑克牌、玩家手牌的点数，以及确定是否有可用的 A 即可。令只在 20 或 21 点停牌为初始策略，初始动作价值函数全部为零，下图展示了蒙特卡洛 ES 得出的最优策略：\u003c/p\u003e\n\u003cfigure\u003e\n  \u003cimg class=\"lazyload\" data-src=\"/images/cn/2020-07-01-model-free-policy-prediction-and-control-monte-carlo-learning/blackjack-monte-carlo-exploring-starts.png\" data-large-max-width=\"100%\" data-middle-max-width=\"100%\" data-small-max-width=\"100%\"/\u003e\n  \n\u003c/figure\u003e\n\u003ch1 id=\"同轨策略和离轨策略\"\u003e同轨策略和离轨策略\u003c/h1\u003e\n\u003ch2 id=\"同轨策略\"\u003e同轨策略\u003c/h2\u003e\n\u003cp\u003e为了避免很难被满足的试探性出发假设，一般性的解法是智能体能够持续不断地选择所有可能的动作，有两种方法可以保证这一点，\u003cstrong\u003e同轨策略（on-policy）\u003cstrong\u003e和\u003c/strong\u003e离轨策略（off-policy）\u003c/strong\u003e。在同轨策略中，用于生成采样数据序列的策略和用于实际决策的待评估和改进的策略是相同的；而在离轨策略中，用于评估或改进的策略与生成采样数据的策略是不同的，即生成的数据“离开”了待优化的策略所决定的决策序列轨迹。\u003c/p\u003e\n\u003cp\u003e在同轨策略中，策略一般是“软性”的，即对于任意 \u003ccode\u003e$s \\in \\mathcal{S}$\u003c/code\u003e 以及 \u003ccode\u003e$a \\in \\mathcal{A} \\left(s\\right)$\u003c/code\u003e，都有 \u003ccode\u003e$\\pi \\left(a | s\\right) \u0026gt; 0$\u003c/code\u003e，但他们会逐渐地逼近一个确定性的策略。\u003ccode\u003e$\\epsilon-$\u003c/code\u003e 贪心策略是指在绝大多数时候都采取获得最大估计值的动作价值函数对应的动作，但同时以一个较小的概率 \u003ccode\u003e$\\epsilon$\u003c/code\u003e 随机选择一个动作。因此对于所有非贪心的动作都以 \u003ccode\u003e$\\frac{\\epsilon}{|\\mathcal{A} \\left(s\\right)|}$\u003c/code\u003e 的概率被选中，贪心动作则以 \u003ccode\u003e$1 - \\epsilon + \\frac{\\epsilon}{|\\mathcal{A} \\left(s\\right)|}$\u003c/code\u003e 的概率被选中。同轨策略的蒙特卡洛控制\u003c/p\u003e\n\n\n\u003cdiv\u003e\u003cpre class=\"pseudocode\"\u003e\\begin{algorithm}\n\\caption{同轨策略的首次访问型 MC 控制算法（对于 $\\epsilon-$ 软性策略），用于估计 $\\pi \\approx \\pi_*$}\n\\begin{algorithmic}\n\\STATE $\\pi \\gets$ 一个任意的 $\\epsilon-$ 软性策略\n\\STATE 对于所有 $s \\in \\mathcal{S}, a \\in \\mathcal{A} \\left(s\\right)$，任意初始化 $Q \\left(s, a\\right) \\in \\mathbb{R}$\n\\STATE 对于所有 $s \\in \\mathcal{S}, a \\in \\mathcal{A} \\left(s\\right)$，$Returns \\left(s, a\\right) \\gets \\varnothing$\n\\WHILE{TRUE}\n  \\STATE 根据 $\\pi$ 生成一幕序列 $S_0, A_0, R_1, \\cdots, S_{T-1}, A_{T-1}, R_T$\n  \\STATE $G \\gets 0$\n  \\FOR{$t \\in T-1, T-2, \\cdots, 0$}\n    \\STATE $G \\gets \\gamma G + R_{t+1}$\n    \\IF{$S_t, A_t$ 在 $S_0, A_0, S_1, A_1, \\cdots, S_{t-1}, A_{t-1}$ 中出现过}\n      \\STATE $Returns \\left(S_t, A_t\\right) \\gets Resurn \\left(S_t, A_t\\right) \\cup G$\n      \\STATE $Q \\left(S_t, A_t\\right) \\gets avg \\left(Returns \\left(S_t, A_t\\right)\\right)$\n      \\STATE $A^* \\gets \\arg\\max_a Q \\left(S_t, a\\right)$\n      \\STATE 对于所有 $a \\in \\mathcal{A} \\left(S_t\\right)$，$\\pi\\left(a \\mid S_{t}\\right) \\leftarrow\\left\\{\\begin{array}{ll}\n1-\\varepsilon+\\varepsilon /\\left|\\mathcal{A}\\left(S_{t}\\right)\\right| \u0026amp; \\text { if } a=A^{*} \\\\\n\\varepsilon /\\left|\\mathcal{A}\\left(S_{t}\\right)\\right| \u0026amp; \\text { if } a \\neq A^{*}\n\\end{array}\\right.$\n    \\ENDIF\n  \\ENDFOR\n\\ENDWHILE\n\\end{algorithmic}\n\\end{algorithm}\n\u003c/pre\u003e\u003c/div\u003e\n\n\u003ch2 id=\"离轨策略\"\u003e离轨策略\u003c/h2\u003e\n\u003cp\u003e所有的学习控制方法都面临一个困境：它们希望学到的动作可以使随后的智能体行为是最优的，但是为了搜索所有的动作（以保证找到最优动作），它们需要采取非最优的行动。同轨策略采用一种妥协的方法，它并不学习最优策略的动作值，而是学习一个接近最优而且仍能进行试探的策略的动作值。一个更加直接的方法是采用两个策略，一个用来学习并成为最优策略，另一个更加有试探性，用来产生智能体的行动样本。用来学习的策略被称为\u003cstrong\u003e目标策略\u003c/strong\u003e，用于生成行动样本的策略被称为\u003cstrong\u003e行动策略\u003c/strong\u003e。在这种情况下，我们认为学习所用的数据“离开”了待学习的目标策略，因此整个过程称为\u003cstrong\u003e离轨策略学习\u003c/strong\u003e。\u003c/p\u003e\n\u003cp\u003e几乎所有的离轨策略方法都采用了\u003cstrong\u003e重要度采样\u003c/strong\u003e，重要度采样是一种在给定来自其他分布的样本的条件下，估计某种分布的期望值的通用方法。在离轨策略学习中，对回报值根据其轨迹在目标策略与行动策略中出现的相对概率进行加权，这个相对概率称为\u003cstrong\u003e重要度采样比\u003c/strong\u003e。给定起始状态 \u003ccode\u003e$S_t$\u003c/code\u003e，后续的“状态-动作”轨迹 \u003ccode\u003e$A_t, S_{t+1}, A_{t+1}, \\cdots, S_T$\u003c/code\u003e 在策略 \u003ccode\u003e$\\pi$\u003c/code\u003e 下发生的概率为：\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003e$$ \\begin{aligned} \\operatorname{Pr}\\left\\{A_{t},\\right.\u0026amp;\\left.S_{t+1}, A_{t+1}, \\ldots, S_{T} \\mid S_{t}, A_{t: T-1} \\sim \\pi\\right\\} \\\\ \u0026amp;=\\pi\\left(A_{t} \\mid S_{t}\\right) p\\left(S_{t+1} \\mid S_{t}, A_{t}\\right) \\pi\\left(A_{t+1} \\mid S_{t+1}\\right) \\cdots p\\left(S_{T} \\mid S_{T-1}, A_{T-1}\\right) \\\\ \u0026amp;=\\prod_{k=t}^{T-1} \\pi\\left(A_{k} \\mid S_{k}\\right) p\\left(S_{k+1} \\mid S_{k}, A_{k}\\right) \\end{aligned} $$\u003c/code\u003e\u003c/p\u003e\n\u003cp\u003e其中，\u003ccode\u003e$p$\u003c/code\u003e 为状态转移概率函数。因此，在目标策略和行动策略轨迹下的相对概率（重要度采样比）为：\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003e$$ \\rho_{t: T-1} \\doteq \\frac{\\prod_{k=t}^{T-1} \\pi\\left(A_{k} \\mid S_{k}\\right) p\\left(S_{k+1} \\mid S_{k}, A_{k}\\right)}{\\prod_{k=t}^{T-1} b\\left(A_{k} \\mid S_{k}\\right) p\\left(S_{k+1} \\mid S_{k}, A_{k}\\right)}=\\prod_{k=t}^{T-1} \\frac{\\pi\\left(A_{k} \\mid S_{k}\\right)}{b\\left(A_{k} \\mid S_{k}\\right)} $$\u003c/code\u003e\u003c/p\u003e\n\u003cp\u003e化简后，重要度采样比只与两个策略和样本序列数据相关，而与 MDP 的动态特性（状态转移概率）无关。我们希望估计目标策略下的期望回报（价值），但我们只有行动策略中的回报 \u003ccode\u003e$G_t$\u003c/code\u003e。直接使用行动策略中的回报进行估计是不准的，因此需要使用重要度采样比调整回报从而得到正确的期望值：\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003e$$ \\mathbb{E}\\left[\\rho_{t: T-1} G_{t} \\mid S_{t}=s\\right]=v_{\\pi}(s) $$\u003c/code\u003e\u003c/p\u003e\n\u003cp\u003e定义所有访问过状态 \u003ccode\u003e$s$\u003c/code\u003e 的时刻集合为 \u003ccode\u003e$\\mathcal{T} \\left(s\\right)$\u003c/code\u003e，\u003ccode\u003e$T \\left(t\\right)$\u003c/code\u003e 表示时刻 \u003ccode\u003e$t$\u003c/code\u003e 后的首次终止，用 \u003ccode\u003e$G_t$\u003c/code\u003e 表示在 \u003ccode\u003e$t$\u003c/code\u003e 之后到达 \u003ccode\u003e$T \\left(t\\right)$\u003c/code\u003e 时的回报值。则 \u003ccode\u003e$\\left\\{G_t\\right\\}_{t \\in \\mathcal{T} \\left(s\\right)}$\u003c/code\u003e 就是状态 \u003ccode\u003e$s$\u003c/code\u003e 对应的回报值，\u003ccode\u003e$\\left\\{\\rho_{t:T \\left(t\\right) - 1}\\right\\}_{t \\in \\mathcal{T} \\left(s\\right)}$\u003c/code\u003e 是相应的重要度采样比。则为了预测 \u003ccode\u003e$v_{\\pi} \\left(s\\right)$\u003c/code\u003e，有：\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003e$$ V(s) \\doteq \\frac{\\sum_{t \\in \\mathcal{T}(s)} \\rho_{t: T(t)-1} G_{t}}{|\\mathcal{T}(s)|} \\label{eq:ordinary-importance-sampling} $$\u003c/code\u003e\u003c/p\u003e\n\u003cp\u003e为一种简单平均实现的重要度采样，称之为\u003cstrong\u003e普通重要度采样\u003c/strong\u003e。\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003e$$ V(s) \\doteq \\frac{\\sum_{t \\in \\mathcal{T}(s)} \\rho_{t: T(t)-1} G_{t}}{\\sum_{t \\in \\mathcal{T}(s)} \\rho_{t: T(t)-1}} \\label{eq:weighted-importance-sampling} $$\u003c/code\u003e\u003c/p\u003e\n\u003cp\u003e为一种加权的重要度采样，称之为\u003cstrong\u003e加权重要度采样\u003c/strong\u003e，如果分母为零，则式 \u003ccode\u003e$\\ref{eq:weighted-importance-sampling}$\u003c/code\u003e 的值也为零。式 \u003ccode\u003e$\\ref{eq:ordinary-importance-sampling}$\u003c/code\u003e 得到的结果在期望上是 \u003ccode\u003e$v_{\\pi} \\left(s\\right)$\u003c/code\u003e 的无偏估计，但其值可能变得很极端，式 \u003ccode\u003e$\\ref{eq:weighted-importance-sampling}$\u003c/code\u003e 的估计是有偏的，但其估计的方差可以收敛到 0。\u003c/p\u003e\n\u003cp\u003e我们对二十一点游戏的状态值进行离轨策略估计。评估的状态为玩家有一张 A，一张 2（或者等价情况，有三张 A），从这个状态开始等概率选择要牌或停牌得到采样数据，目标策略只在和达到 20 或 21 时停牌。\u003c/p\u003e\n\u003cfigure\u003e\n  \u003cimg class=\"lazyload\" data-src=\"/images/cn/2020-07-01-model-free-policy-prediction-and-control-monte-carlo-learning/blackjack-monte-carlo-off-policy.png\" data-large-max-width=\"100%\" data-middle-max-width=\"100%\" data-small-max-width=\"100%\"/\u003e\n  \n\u003c/figure\u003e\n\u003cp\u003e在目标策略中，这个状态的值大概为 -0.27726（利用目标策略独立生成 1 亿幕数据后对回报进行平均得到）。两种离轨策略方法在采样随机策略经过 1000 幕离轨策略数据采样后都很好地逼近了这个值，但加权重要度采样在开始时错误率明显较低，这也是实践中的典型现象。\u003c/p\u003e\n\u003cp\u003e假设一个回报序列 \u003ccode\u003e$G_1, G_2, \\cdots, G_{n-1}$\u003c/code\u003e，它们都从相同的状态开始，且每一个回报都对应一个随机权重 \u003ccode\u003e$W_i$\u003c/code\u003e，我们希望获得如下式子的估计：\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003e$$ V_{n} \\doteq \\frac{\\sum_{k=1}^{n-1} W_{k} G_{k}}{\\sum_{k=1}^{n-1} W_{k}}, \\quad n \\geq 2 $$\u003c/code\u003e\u003c/p\u003e\n\u003cp\u003e同时在获得一个额外的回报 \u003ccode\u003e$G_n$\u003c/code\u003e 时能保持更新。为了能不断跟踪 \u003ccode\u003e$V_n$\u003c/code\u003e 的变化，我们必须为每一个状态维护前 \u003ccode\u003e$n$\u003c/code\u003e 个回报对应的权值的累加和 \u003ccode\u003e$C_n$\u003c/code\u003e。\u003ccode\u003e$V_n$\u003c/code\u003e 的更新方法如下：\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003e$$ \\begin{array}{l} V_{n+1} \\doteq V_{n}+\\dfrac{W_{n}}{C_{n}}\\left[G_{n}-V_{n}\\right], \\quad n \\geq 1 \\\\ C_{n+1} \\doteq C_{n}+W_{n+1} \\end{array} $$\u003c/code\u003e\u003c/p\u003e\n\u003cp\u003e其中，\u003ccode\u003e$C_0 = 0$\u003c/code\u003e，\u003ccode\u003e$V_1$\u003c/code\u003e 是任意值。一个完整的用于蒙特卡洛策略评估的逐幕增量算法如下：\u003c/p\u003e\n\n\n\u003cdiv\u003e\u003cpre class=\"pseudocode\"\u003e\\begin{algorithm}\n\\caption{离轨策略 MC 预测算法（策略评估），用于估计 $Q \\approx q_{\\pi}$}\n\\begin{algorithmic}\n\\REQUIRE 一个任意的目标策略 $\\pi$\n\\STATE 对于所有 $s \\in \\mathcal{S}, a \\in \\mathcal{A} \\left(s\\right)$，任意初始化 $Q \\left(s, a\\right) \\in \\mathbb{R}$\n\\STATE 对于所有 $s \\in \\mathcal{S}, a \\in \\mathcal{A} \\left(s\\right)$，$C \\left(s, a\\right) \\gets 0$\n\\WHILE{TRUE}\n  \\STATE $b \\gets$ 任何能包括 $\\pi$ 的策略\n  \\STATE 根据 $b$ 生成一幕序列 $S_0, A_0, R_1, \\cdots, S_{T-1}, A_{T-1}, R_T$\n  \\STATE $G \\gets 0$\n  \\STATE $W \\gets 1$\n  \\FOR{$t \\in T-1, T-2, \\cdots, 0$}\n    \\STATE $G \\gets \\gamma G + R_{t+1}$\n    \\STATE $C \\left(S_t, A_t\\right) \\gets C \\left(S_t, A_t\\right) + W$\n    \\STATE $Q \\left(S_{t}, A_{t}\\right) \\leftarrow Q\\left(S_{t}, A_{t}\\right)+\\frac{W}{C\\left(S_{t}, A_{t}\\right)}\\left[G-Q\\left(S_{t}, A_{t}\\right)\\right]$\n    \\STATE $W \\leftarrow W \\frac{\\pi\\left(A_{t} \\mid S_{t}\\right)}{b\\left(A_{t} \\mid S_{t}\\right)}$\n    \\IF{$W = 0$}\n      \\BREAK\n    \\ENDIF\n  \\ENDFOR\n\\ENDWHILE\n\\end{algorithmic}\n\\end{algorithm}\n\u003c/pre\u003e\u003c/div\u003e\n\n\u003cp\u003e在离轨策略中，策略的价值评估和策略的控制是分开的，用于生成行动数据的策略被称为\u003cstrong\u003e行动策略\u003c/strong\u003e，行动策略可能与实际上被评估和改善的策略无关，而被评估和改善的策略称为\u003cstrong\u003e目标策略\u003c/strong\u003e。这样分离的好处在于当行动策略能对所有可能的动作继续进行采样时，目标策略可以是确定的（贪心的）。\u003c/p\u003e\n\u003cp\u003e离轨策略蒙特卡洛控制方法要求行动策略对目标策略可能做出的所有动作都有非零的概率被选择。为了试探所有的可能性，要求行动策略是软性的。一个基于通用迭代策略（GPI）和重要度采样的离轨策略蒙特卡洛控制方法如下：\u003c/p\u003e\n\n\n\u003cdiv\u003e\u003cpre class=\"pseudocode\"\u003e\\begin{algorithm}\n\\caption{离轨策略 MC 控制算法，用于估计 $\\pi \\approx \\pi_*$}\n\\begin{algorithmic}\n\\STATE 对于所有 $s \\in \\mathcal{S}, a \\in \\mathcal{A} \\left(s\\right)$，任意初始化 $Q \\left(s, a\\right) \\in \\mathbb{R}$\n\\STATE 对于所有 $s \\in \\mathcal{S}, a \\in \\mathcal{A} \\left(s\\right)$，$C \\left(s, a\\right) \\gets 0$\n\\STATE 对于所有 $s \\in \\mathcal{S}, a \\in \\mathcal{A} \\left(s\\right)$，$\\pi \\left(s\\right) \\gets \\arg\\max_a Q \\left(s, a\\right)$\n\\STATE \\COMMENT{出现平分情况选取方法应保持一致}\n\\WHILE{TRUE}\n  \\STATE $b \\gets$ 任意软性策略\n  \\STATE 根据 $b$ 生成一幕序列 $S_0, A_0, R_1, \\cdots, S_{T-1}, A_{T-1}, R_T$\n  \\STATE $G \\gets 0$\n  \\STATE $W \\gets 1$\n  \\FOR{$t \\in T-1, T-2, \\cdots, 0$}\n    \\STATE $G \\gets \\gamma G + R_{t+1}$\n    \\STATE $C \\left(S_t, A_t\\right) \\gets C \\left(S_t, A_t\\right) + W$\n    \\STATE $Q \\left(S_{t}, A_{t}\\right) \\leftarrow Q\\left(S_{t}, A_{t}\\right)+\\frac{W}{C\\left(S_{t}, A_{t}\\right)}\\left[G-Q\\left(S_{t}, A_{t}\\right)\\right]$\n    \\STATE $\\pi\\left(S_{t}\\right) \\leftarrow \\arg \\max _{a} Q\\left(S_{t}, a\\right)$\n    \\STATE \\COMMENT{出现平分情况选取方法应保持一致}\n    \\IF{$A_t \\neq \\pi \\left(S_t\\right)$}\n      \\BREAK\n    \\ENDIF\n    \\STATE $W \\leftarrow W \\frac{1}{b\\left(A_{t} \\mid S_{t}\\right)}$\n  \\ENDFOR\n\\ENDWHILE\n\\end{algorithmic}\n\\end{algorithm}\n\u003c/pre\u003e\u003c/div\u003e\n\n\u003cp\u003e本文示例代码实现请参见\u003ca href=\"https://github.com/leovan/leovan.me/blob/main/static/scripts/cn/2020-07-01-model-free-policy-prediction-and-control-monte-carlo-learning/blackjack.py\"\u003e这里\u003c/a\u003e。\u003c/p\u003e\n\u003cdiv class=\"footnotes\" role=\"doc-endnotes\"\u003e\n\u003chr/\u003e\n\u003col\u003e\n\u003cli id=\"fn:1\"\u003e\n\u003cp\u003eSutton, R. S., \u0026amp; Barto, A. G. (2018). \u003cem\u003eReinforcement learning: An introduction\u003c/em\u003e. MIT press. \u003ca href=\"#fnref:1\" class=\"footnote-backref\" role=\"doc-backlink\"\u003e↩︎\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli id=\"fn:2\"\u003e\n\u003cp\u003eCS234: Reinforcement Learning \u003ca href=\"http://web.stanford.edu/class/cs234/index.html\"\u003ehttp://web.stanford.edu/class/cs234/index.html\u003c/a\u003e \u003ca href=\"#fnref:2\" class=\"footnote-backref\" role=\"doc-backlink\"\u003e↩︎\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli id=\"fn:3\"\u003e\n\u003cp\u003eUCL Course on RL \u003ca href=\"https://www.davidsilver.uk/teaching\"\u003ehttps://www.davidsilver.uk/teaching\u003c/a\u003e \u003ca href=\"#fnref:3\" class=\"footnote-backref\" role=\"doc-backlink\"\u003e↩︎\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ol\u003e\n\u003c/div\u003e\n\n\n\n\n\n\u003cdiv class=\"donate\"\u003e\n  \u003cdiv class=\"donate-header\"\u003e\u003c/div\u003e\n  \u003cdiv class=\"donate-slug\" id=\"donate-slug\"\u003emodel-free-policy-prediction-and-control-monte-carlo-learning\u003c/div\u003e\n  \u003cbutton class=\"donate-button\"\u003e赞 赏\u003c/button\u003e\n  \u003cdiv class=\"donate-footer\"\u003e「真诚赞赏，手留余香」\u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"donate-modal-wrapper\"\u003e\n  \u003cdiv class=\"donate-modal\"\u003e\n    \u003cdiv class=\"donate-box\"\u003e\n      \u003cdiv class=\"donate-box-content\"\u003e\n        \u003cdiv class=\"donate-box-content-inner\"\u003e\n          \u003cdiv class=\"donate-box-header\"\u003e「真诚赞赏，手留余香」\u003c/div\u003e\n          \u003cdiv class=\"donate-box-body\"\u003e\n            \u003cdiv class=\"donate-box-money\"\u003e\n              \u003cbutton class=\"donate-box-money-button donate-box-money-button-unchecked\" id=\"donate-box-money-button-2\" data-v=\"2\" data-unchecked=\"￥ 2\" data-checked=\"2 元\"\u003e￥ 2\u003c/button\u003e\n              \u003cbutton class=\"donate-box-money-button donate-box-money-button-unchecked\" id=\"donate-box-money-button-5\" data-v=\"5\" data-unchecked=\"￥ 5\" data-checked=\"5 元\"\u003e￥ 5\u003c/button\u003e\n              \u003cbutton class=\"donate-box-money-button donate-box-money-button-unchecked\" id=\"donate-box-money-button-10\" data-v=\"10\" data-unchecked=\"￥ 10\" data-checked=\"10 元\"\u003e￥ 10\u003c/button\u003e\n              \u003cbutton class=\"donate-box-money-button donate-box-money-button-unchecked\" id=\"donate-box-money-button-50\" data-v=\"50\" data-unchecked=\"￥ 50\" data-checked=\"50 元\"\u003e￥ 50\u003c/button\u003e\n              \u003cbutton class=\"donate-box-money-button donate-box-money-button-unchecked\" id=\"donate-box-money-button-100\" data-v=\"100\" data-unchecked=\"￥ 100\" data-checked=\"100 元\"\u003e￥ 100\u003c/button\u003e\n              \u003cbutton class=\"donate-box-money-button donate-box-money-button-unchecked\" id=\"donate-box-money-button-custom\" data-v=\"custom\" data-unchecked=\"任意金额\" data-checked=\"任意金额\"\u003e任意金额\u003c/button\u003e\n            \u003c/div\u003e\n            \u003cdiv class=\"donate-box-pay\"\u003e\n              \u003cimg class=\"donate-box-pay-qrcode\" id=\"donate-box-pay-qrcode\" src=\"\"/\u003e\n            \u003c/div\u003e\n          \u003c/div\u003e\n          \u003cdiv class=\"donate-box-footer\"\u003e\n            \u003cdiv class=\"donate-box-pay-method donate-box-pay-method-checked\" data-v=\"wechat-pay\"\u003e\n              \u003cimg class=\"donate-box-pay-method-image\" id=\"donate-box-pay-method-image-wechat-pay\" src=\"\"/\u003e\n            \u003c/div\u003e\n            \u003cdiv class=\"donate-box-pay-method\" data-v=\"alipay\"\u003e\n              \u003cimg class=\"donate-box-pay-method-image\" id=\"donate-box-pay-method-image-alipay\" src=\"\"/\u003e\n            \u003c/div\u003e\n          \u003c/div\u003e\n        \u003c/div\u003e\n      \u003c/div\u003e\n    \u003c/div\u003e\n    \u003cbutton type=\"button\" class=\"donate-box-close-button\"\u003e\n      \u003csvg class=\"donate-box-close-button-icon\" fill=\"#fff\" viewBox=\"0 0 24 24\" width=\"24\" height=\"24\"\u003e\u003cpath d=\"M13.486 12l5.208-5.207a1.048 1.048 0 0 0-.006-1.483 1.046 1.046 0 0 0-1.482-.005L12 10.514 6.793 5.305a1.048 1.048 0 0 0-1.483.005 1.046 1.046 0 0 0-.005 1.483L10.514 12l-5.208 5.207a1.048 1.048 0 0 0 .006 1.483 1.046 1.046 0 0 0 1.482.005L12 13.486l5.207 5.208a1.048 1.048 0 0 0 1.483-.006 1.046 1.046 0 0 0 .005-1.482L13.486 12z\" fill-rule=\"evenodd\"\u003e\u003c/path\u003e\u003c/svg\u003e\n    \u003c/button\u003e\n  \u003c/div\u003e\n\u003c/div\u003e\n\n\u003cscript type=\"text/javascript\" src=\"/js/donate.js\"\u003e\u003c/script\u003e\n\n\n  \u003cfooter\u003e\n  \n\u003cnav class=\"post-nav\"\u003e\n  \u003cspan class=\"nav-prev\"\u003e← \u003ca href=\"/cn/2020/06/planning-by-dynamic-programming/\"\u003e利用动态规划求解马尔可夫决策过程 (Planning by Dynamic Programming)\u003c/a\u003e\u003c/span\u003e\n  \u003cspan class=\"nav-next\"\u003e\u003ca href=\"/cn/2020/07/model-free-policy-prediction-and-control-temporal-difference-learning/\"\u003e无模型策略预测和控制 - 时序差分学习 (Model-Free Policy Prediction and Control - Temporal Difference Learning)\u003c/a\u003e →\u003c/span\u003e\n\u003c/nav\u003e\n\n\n\n\n\u003cins class=\"adsbygoogle\" style=\"display:block; text-align:center;\" data-ad-layout=\"in-article\" data-ad-format=\"fluid\" data-ad-client=\"ca-pub-2608165017777396\" data-ad-slot=\"8302038603\"\u003e\u003c/ins\u003e\n\u003cscript\u003e\n  (adsbygoogle = window.adsbygoogle || []).push({});\n\u003c/script\u003e\n\n\n\n\u003cscript src=\"//cdn.jsdelivr.net/npm/js-cookie@3.0.5/dist/js.cookie.min.js\"\u003e\u003c/script\u003e\n\u003cscript src=\"/js/toggle-theme.js\"\u003e\u003c/script\u003e\n\n\n\u003cscript src=\"/js/no-highlight.js\"\u003e\u003c/script\u003e\n\u003cscript src=\"/js/math-code.js\"\u003e\u003c/script\u003e\n\u003cscript src=\"/js/heading-anchor.js\"\u003e\u003c/script\u003e\n\n\n\n\u003csection class=\"comments\"\u003e\n\u003cscript src=\"https://giscus.app/client.js\" data-repo=\"leovan/leovan.me\" data-repo-id=\"MDEwOlJlcG9zaXRvcnkxMTMxOTY0Mjc=\" data-category=\"Comments\" data-category-id=\"DIC_kwDOBr89i84CT-R7\" data-mapping=\"pathname\" data-strict=\"1\" data-reactions-enabled=\"1\" data-emit-metadata=\"0\" data-input-position=\"top\" data-theme=\"preferred_color_scheme\" data-lang=\"zh-CN\" data-loading=\"lazy\" crossorigin=\"anonymous\" defer=\"\"\u003e\n\u003c/script\u003e\n\u003c/section\u003e\n\n\n\u003cscript src=\"//cdn.jsdelivr.net/npm/clipboard@2.0.11/dist/clipboard.min.js\"\u003e\u003c/script\u003e\n\u003cscript src=\"//cdn.jsdelivr.net/npm/prismjs@1.29.0/prism.min.js\"\u003e\u003c/script\u003e\n\u003cscript src=\"//cdn.jsdelivr.net/npm/prismjs@1.29.0/plugins/autoloader/prism-autoloader.min.js\"\u003e\u003c/script\u003e\n\u003cscript src=\"//cdn.jsdelivr.net/npm/prismjs@1.29.0/plugins/toolbar/prism-toolbar.min.js\"\u003e\u003c/script\u003e\n\u003cscript\u003e\n  (function() {\n    if (!self.Prism) {\n      return;\n    }\n\n    \n    Prism.languages.dos = Prism.languages.powershell;\n    Prism.languages.gremlin = Prism.languages.groovy;\n\n    let languages = {\n      'r': 'R', 'python': 'Python', 'xml': 'XML', 'html': 'HTML',\n      'yaml': 'YAML', 'latex': 'LaTeX', 'tex': 'TeX',\n      'powershell': 'PowerShell', 'javascript': 'JavaScript',\n      'dos': 'DOS', 'qml': 'QML', 'json': 'JSON', 'bash': 'Bash',\n      'text': 'Text', 'txt': 'Text', 'sparql': 'SPARQL',\n      'gremlin': 'Gremlin', 'cypher': 'Cypher', 'ngql': 'nGQL',\n      'shell': 'Shell', 'sql': 'SQL', 'apacheconf': 'Apache Configuration', 'c': 'C', 'css': 'CSS'\n    };\n\n    Prism.hooks.add('before-highlight', function(env) {\n      if (env.language !== 'plain') {\n        let language = languages[env.language] || env.language;\n        env.element.setAttribute('data-language', language);\n      }\n    });\n\n    \n    let ClipboardJS = window.ClipboardJS || undefined;\n\n    Prism.plugins.toolbar.registerButton('copy-to-clipboard', function(env) {\n      let linkCopy = document.createElement('button');\n      linkCopy.classList.add('prism-button-copy');\n\n      registerClipboard();\n\n      return linkCopy;\n\n      function registerClipboard() {\n        let clip = new ClipboardJS(linkCopy, {\n          'text': function () {\n            return env.code;\n          }\n        });\n\n        clip.on('success', function() {\n          linkCopy.classList.add('prism-button-copy-success');\n          resetText();\n        });\n        clip.on('error', function () {\n          linkCopy.classList.add('prism-button-copy-error');\n          resetText();\n        });\n      }\n\n      function resetText() {\n        setTimeout(function () {\n          linkCopy.classList.remove('prism-button-copy-success');\n          linkCopy.classList.remove('prism-button-copy-error');\n        }, 1600);\n      }\n    });\n  })();\n\u003c/script\u003e\n\n\n\n\u003cscript src=\"//cdn.jsdelivr.net/npm/pseudocode@latest/build/pseudocode.min.js\"\u003e\u003c/script\u003e\n\u003cscript type=\"text/javascript\"\u003e\nlet pseudocodeCaptionCount = 0;\n(function(d) {\n  d.querySelectorAll(\".pseudocode\").forEach(function(elem) {\n    let pseudocode_options = {\n      indentSize: '1.2em',\n      commentDelimiter: '\\/\\/',\n      lineNumber:  true ,\n      lineNumberPunc: ':',\n      noEnd:  false \n    };\n    pseudocode_options.captionCount = pseudocodeCaptionCount;\n    pseudocodeCaptionCount += 1;\n    pseudocode.renderElement(elem, pseudocode_options);\n  });\n})(document);\n\u003c/script\u003e\n\n\n\n\n\n\n\n\n\n\n\n\u003cscript async=\"\" src=\"/js/center-img.js\"\u003e\u003c/script\u003e\n\u003cscript async=\"\" src=\"/js/right-quote.js\"\u003e\u003c/script\u003e\n\u003cscript async=\"\" src=\"/js/external-link.js\"\u003e\u003c/script\u003e\n\u003cscript async=\"\" src=\"/js/alt-title.js\"\u003e\u003c/script\u003e\n\u003cscript async=\"\" src=\"/js/figure.js\"\u003e\u003c/script\u003e\n\n\n\n\u003cscript src=\"//cdn.jsdelivr.net/npm/lazysizes@5.3.2/lazysizes.min.js\"\u003e\u003c/script\u003e\n\n\n\u003cscript src=\"//cdn.jsdelivr.net/npm/vanilla-back-to-top@latest/dist/vanilla-back-to-top.min.js\"\u003e\u003c/script\u003e\n\u003cscript\u003e\naddBackToTop({\n  diameter: 48\n});\n\u003c/script\u003e\n\n  \u003chr/\u003e\n  \u003cdiv class=\"copyright no-border-bottom\"\u003e\n    \u003cdiv class=\"copyright-author-year\"\u003e\n      \u003cspan\u003eCopyright © 2017-2024 \u003ca href=\"/\"\u003e范叶亮 | Leo Van\u003c/a\u003e\u003c/span\u003e\n    \u003c/div\u003e\n  \u003c/div\u003e\n  \u003c/footer\u003e\n  \u003c/article\u003e",
  "Date": "2020-07-01T00:00:00Z",
  "Author": "范叶亮"
}