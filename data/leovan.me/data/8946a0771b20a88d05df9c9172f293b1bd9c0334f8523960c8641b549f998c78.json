{
  "Source": "leovan.me",
  "Title": "流形学习 (Manifold Learning)",
  "Link": "https://leovan.me/cn/2018/03/manifold-learning/",
  "Content": "\u003carticle class=\"main\"\u003e\n    \u003cheader class=\"content-title\"\u003e\n    \n\u003ch1 class=\"title\"\u003e\n  \n  流形学习 (Manifold Learning)\n  \n\u003c/h1\u003e\n\n\n\n\n\n\n\n\u003ch2 class=\"author-date\"\u003e范叶亮 / \n2018-03-16\u003c/h2\u003e\n\n\n\n\u003ch3 class=\"post-meta\"\u003e\n\n\n\u003cstrong\u003e分类: \u003c/strong\u003e\n\u003ca href=\"/categories/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0\"\u003e机器学习\u003c/a\u003e, \u003ca href=\"/categories/%E8%A1%A8%E7%A4%BA%E5%AD%A6%E4%B9%A0\"\u003e表示学习\u003c/a\u003e\n\n\n\n\n/\n\n\n\n\n\u003cstrong\u003e标签: \u003c/strong\u003e\n\u003cspan\u003e流行学习\u003c/span\u003e, \u003cspan\u003eManifold Learning\u003c/span\u003e, \u003cspan\u003e降维\u003c/span\u003e, \u003cspan\u003eDimensionality Reduction\u003c/span\u003e, \u003cspan\u003eISOMAP\u003c/span\u003e, \u003cspan\u003eLLE\u003c/span\u003e, \u003cspan\u003eLE\u003c/span\u003e, \u003cspan\u003eLTSA\u003c/span\u003e, \u003cspan\u003eMDS\u003c/span\u003e\n\n\n\n\n/\n\n\n\u003cstrong\u003e字数: \u003c/strong\u003e\n6206\n\u003c/h3\u003e\n\n\n\n\u003chr/\u003e\n\n\n\n    \n    \n    \u003cins class=\"adsbygoogle\" style=\"display:block; text-align:center;\" data-ad-layout=\"in-article\" data-ad-format=\"fluid\" data-ad-client=\"ca-pub-2608165017777396\" data-ad-slot=\"1261604535\"\u003e\u003c/ins\u003e\n    \u003cscript\u003e\n    (adsbygoogle = window.adsbygoogle || []).push({});\n    \u003c/script\u003e\n    \n    \n    \u003c/header\u003e\n\n\n\n\n\u003ch1 id=\"降维\"\u003e降维\u003c/h1\u003e\n\u003cp\u003e在之前的 \u003ca href=\"/cn/2017/12/evd-svd-and-pca\"\u003e博客\u003c/a\u003e 中，我们曾经介绍过 PCA 方法及其降维的作用。在原始数据中各个特征之间存在着一定的信息冗余，随着特征的不断增加就容易出现“维数灾难”的问题，因此降维的目的就是在尽可能多的保留原始信息的同时减少数据的维度。一般情况下我们将降维方法分为：\u003cstrong\u003e线性降维方法\u003c/strong\u003e和\u003cstrong\u003e非线性降维方法\u003c/strong\u003e，线性降维方法的典型算法有：\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e主成份分析 (PCA, Principal Component Analysis) \u003csup id=\"fnref:1\"\u003e\u003ca href=\"#fn:1\" class=\"footnote-ref\" role=\"doc-noteref\"\u003e1\u003c/a\u003e\u003c/sup\u003e\u003c/li\u003e\n\u003cli\u003e线性判别分写 (LDA, Linear Discriminant Analysis) \u003csup id=\"fnref:2\"\u003e\u003ca href=\"#fn:2\" class=\"footnote-ref\" role=\"doc-noteref\"\u003e2\u003c/a\u003e\u003c/sup\u003e\u003c/li\u003e\n\u003cli\u003e多尺度变换 (MDS, Multi-Dimensional Scaling) \u003csup id=\"fnref:3\"\u003e\u003ca href=\"#fn:3\" class=\"footnote-ref\" role=\"doc-noteref\"\u003e3\u003c/a\u003e\u003c/sup\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e非线性降维方法中在此我们仅列举一些基于流行学习的算法：\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e保距特征映射 (ISOMAP) \u003csup id=\"fnref:4\"\u003e\u003ca href=\"#fn:4\" class=\"footnote-ref\" role=\"doc-noteref\"\u003e4\u003c/a\u003e\u003c/sup\u003e\u003c/li\u003e\n\u003cli\u003e局部线性嵌入 (LLE, Locally Linear Embedding) \u003csup id=\"fnref:5\"\u003e\u003ca href=\"#fn:5\" class=\"footnote-ref\" role=\"doc-noteref\"\u003e5\u003c/a\u003e\u003c/sup\u003e\u003c/li\u003e\n\u003cli\u003e拉普拉斯特征映射 (LE, Laplacian Eigenmap) \u003csup id=\"fnref:6\"\u003e\u003ca href=\"#fn:6\" class=\"footnote-ref\" role=\"doc-noteref\"\u003e6\u003c/a\u003e\u003c/sup\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e在现实数据中，很多情况数据是无法通过线性的方法进行降维表示的，因此就需要非线性的降维算法出马了。\u003c/p\u003e\n\u003ch1 id=\"流形\"\u003e流形\u003c/h1\u003e\n\u003cp\u003e在调研流形相关概念时，发现要想深一步的理解这些概念还是需要详细的了解微分几何相关的内容，鉴于本文的目的主要是介绍流形学习 (主要是降维角度) 的相关内容，因此我们对流形仅做一些粗略的介绍。\u003c/p\u003e\n\u003cp\u003e“\u003cstrong\u003e流形\u003c/strong\u003e”是英文单词 \u003cstrong\u003eManifold\u003c/strong\u003e 的中文译名，它源于德文术语 Mannigfaltigkeit，最早出现在 Riemann 1851 年的博士论文中，用来表示某种属性所能取到的所有值 \u003csup id=\"fnref:7\"\u003e\u003ca href=\"#fn:7\" class=\"footnote-ref\" role=\"doc-noteref\"\u003e7\u003c/a\u003e\u003c/sup\u003e。为了更好的理解流形，我们先引入几个概念：\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003e拓扑结构 (拓扑)\u003c/strong\u003e 任意给定集合 \u003ccode\u003e$X$\u003c/code\u003e 上的一个\u003cstrong\u003e拓扑结构 (拓扑)\u003c/strong\u003e 是 \u003ccode\u003e$X$\u003c/code\u003e 的某些特定子集组成的集合 \u003ccode\u003e$\\tau \\subset 2^X$\u003c/code\u003e，其中那些特定子集称为 \u003ccode\u003e$\\tau$\u003c/code\u003e 所声明的\u003cstrong\u003e开集\u003c/strong\u003e，同时满足如下性质：\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003e空集和全集是开集，即 \u003ccode\u003e$\\varnothing, X \\in \\tau$\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003e任意多个开集的并集是开集\u003c/li\u003e\n\u003cli\u003e有限多个开集的交集是开集\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003e\u003cstrong\u003e拓扑空间\u003c/strong\u003e 指定了拓扑结构的集合就称为一个\u003cstrong\u003e拓扑空间\u003c/strong\u003e。\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"/images/cn/2018-03-16-manifold-learning/topological-space-sample.png\" alt=\"\"/\u003e\u003c/p\u003e\n\u003cp\u003e上图中给出了一些拓扑空间的示例，其中左侧 4 个为正确示例，右侧 2 个为错误示例。右上角的缺少了 {2} 和 {3} 的并集 {2, 3}，右下角的缺少了 {1, 2} 和 {2, 3} 的交集 {2}。\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003e同胚\u003c/strong\u003e 两个拓扑空间 \u003ccode\u003e$\\left(X, \\tau_X\\right)$\u003c/code\u003e 和 \u003ccode\u003e$\\left(Y, \\tau_Y\\right)$\u003c/code\u003e 之间的函数 \u003ccode\u003e$f: X \\to Y$\u003c/code\u003e 称为\u003cstrong\u003e同胚\u003c/strong\u003e，如果它具有下列性质：\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003e\u003ccode\u003e$f$\u003c/code\u003e 是双射 (单射和满射)\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003e$f$\u003c/code\u003e 是连续的\u003c/li\u003e\n\u003cli\u003e反函数 \u003ccode\u003e$f^{−1}$\u003c/code\u003e 也是连续的 (\u003ccode\u003e$f$\u003c/code\u003e 是开映射)\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003e如果拓扑空间是一个几何物体，同胚就是把物体连续延展和弯曲，使其成为一个新的物体。因此，正方形和圆是同胚的，但球面和环面就不是。用一幅图形象的理解同胚，例如下图所示的\u003cstrong\u003e咖啡杯\u003c/strong\u003e和\u003cstrong\u003e甜甜圈\u003c/strong\u003e \u003csup id=\"fnref:8\"\u003e\u003ca href=\"#fn:8\" class=\"footnote-ref\" role=\"doc-noteref\"\u003e8\u003c/a\u003e\u003c/sup\u003e：\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"/images/cn/2018-03-16-manifold-learning/mug-and-torus-morph.gif\" alt=\"\"/\u003e\u003c/p\u003e\n\u003cp\u003e最后我们回过头来解释到底什么是\u003cstrong\u003e流形\u003c/strong\u003e？流形并不是一个“形状”，而是一个“空间” \u003csup id=\"fnref:9\"\u003e\u003ca href=\"#fn:9\" class=\"footnote-ref\" role=\"doc-noteref\"\u003e9\u003c/a\u003e\u003c/sup\u003e。最容易定义的流形是\u003cstrong\u003e拓扑流形\u003c/strong\u003e，它局部看起来象一些“普通”的欧几里得空间 \u003ccode\u003e$\\mathbb{R}^n$\u003c/code\u003e，一个拓扑流形是一个局部同胚于一个欧几里得空间的拓扑空间。根据 Whitney 嵌入理论 \u003csup id=\"fnref:10\"\u003e\u003ca href=\"#fn:10\" class=\"footnote-ref\" role=\"doc-noteref\"\u003e10\u003c/a\u003e\u003c/sup\u003e，任何一个流形都可以嵌入到高维的欧氏空间中。例如，地球的表面可以理解为一个嵌入 3 维空间的 2 维流形，其局部同胚于 2 维的欧式空间，对于一个球体的表面，用极坐标的形式可以表示为\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003e$$ \\begin{equation} \\begin{split} x \u0026amp;= r \\sin \\theta \\cos \\phi \\\\ y \u0026amp;= r \\sin \\theta \\sin \\phi \\\\ z \u0026amp;= r \\cos \\theta \\end{split} \\end{equation} $$\u003c/code\u003e\u003c/p\u003e\n\u003cp\u003e也就是说其 3 个维度实际上是由 2 个变量控制的。\u003c/p\u003e\n\u003ch1 id=\"流形学习\"\u003e流形学习\u003c/h1\u003e\n\u003cp\u003e假设 \u003ccode\u003e$Y$\u003c/code\u003e 为一个欧式空间 \u003ccode\u003e$\\mathbb{R}^d$\u003c/code\u003e 的一个 \u003ccode\u003e$d$\u003c/code\u003e 维流形，\u003ccode\u003e$f: Y \\to \\mathbb{R}^D$\u003c/code\u003e 为一个光滑嵌入，对于 \u003ccode\u003e$D \u0026gt; d$\u003c/code\u003e，流形学习的目的就是根据空间 \u003ccode\u003e$\\mathbb{R}^D$\u003c/code\u003e 中的观测数据 \u003ccode\u003e$\\{x_i\\}$\u003c/code\u003e 重构 \u003ccode\u003e$Y$\u003c/code\u003e 和 \u003ccode\u003e$f$\u003c/code\u003e 的过程。隐含数据 \u003ccode\u003e$\\{y_i\\}$\u003c/code\u003e 由 \u003ccode\u003e$Y$\u003c/code\u003e 随机生成，通过光滑嵌入 \u003ccode\u003e$f$\u003c/code\u003e 生成观测数据，即 \u003ccode\u003e$\\{x_i = f\\left(y_i\\right)\\}$\u003c/code\u003e，所以我们可以将流形学习的问题看做是对于一个给定的观测数据一个生成模型的反向过程 \u003csup id=\"fnref:11\"\u003e\u003ca href=\"#fn:11\" class=\"footnote-ref\" role=\"doc-noteref\"\u003e11\u003c/a\u003e\u003c/sup\u003e。\u003c/p\u003e\n\u003cp\u003e在介绍具体的流形学习算法前，我们先引入几个 3 维数据用于解释后续的具体算法\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"/images/cn/2018-03-16-manifold-learning/manifold-examples.png\" alt=\"\"/\u003e\u003c/p\u003e\n\u003cp\u003e第一个为\u003cstrong\u003e瑞士卷 (Swiss Roll)\u003c/strong\u003e，其形状和我们日常生活中的瑞士卷相似；第二个为 \u003cstrong\u003eS 形曲线 (S Curve)\u003c/strong\u003e；第三个为一个被\u003cstrong\u003e切断的球面 (Severed Sphere)\u003c/strong\u003e。\u003c/p\u003e\n\u003ch2 id=\"mds\"\u003eMDS\u003c/h2\u003e\n\u003cp\u003e多尺度变换 (MDS, Multi-Dimensional Scaling) \u003csup id=\"fnref1:3\"\u003e\u003ca href=\"#fn:3\" class=\"footnote-ref\" role=\"doc-noteref\"\u003e3\u003c/a\u003e\u003c/sup\u003e 是一种通过保留样本在高维空间中的不相似性 (Dissimilarity) 降低数据维度的方法，在这里不相似性可以理解为样本之间的距离。因此，根据距离的度量方式不同可以将其分为度量型 (metric) MDS 和 非度量型 (non-metric) MDS。度量型 MDS 通过计算不同样本之间距离的度量值进行降维，而非度量型则仅考虑距离的排序信息，在此我们仅对度量型 MDS 做简单介绍。\u003c/p\u003e\n\u003cp\u003eMDS 的目标是保留样本在高维空间中的不相似性，假设 \u003ccode\u003e$x \\in \\mathbb{R}^D, x\u0026#39; \\in \\mathbb{R}^d, D \u0026gt; d$\u003c/code\u003e，则 MDS 的目标函数可以写为\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003e$$ \\min \\sum_{i, j} \\lvert dist \\left(x_i, x_j\\right) - dist \\left(x\u0026#39;_i, x\u0026#39;_j\\right) \\rvert $$\u003c/code\u003e\u003c/p\u003e\n\u003cp\u003e则，度量型 MDS 的算法的步骤如下：\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003e计算样本的距离矩阵 \u003ccode\u003e$\\boldsymbol{D} = \\left[d_{i, j}\\right] = \\left[dist \\left(x_i, x_j\\right)\\right]$\u003c/code\u003e。\u003c/li\u003e\n\u003cli\u003e构造矩阵 \u003ccode\u003e$\\boldsymbol{A} = \\left[a_{i, j}\\right] = \\left[- \\dfrac{1}{2} d_{i, j}^2\\right]$\u003c/code\u003e。\u003c/li\u003e\n\u003cli\u003e通过中心矫正的方法构造矩阵 \u003ccode\u003e$\\boldsymbol{B} = \\boldsymbol{J} \\boldsymbol{D} \\boldsymbol{J}, \\boldsymbol{J} = \\boldsymbol{I} - \\dfrac{1}{n} \\boldsymbol{O}$\u003c/code\u003e，其中 \u003ccode\u003e$\\boldsymbol{I}$\u003c/code\u003e 为 \u003ccode\u003e$n \\times n$\u003c/code\u003e 的单位阵，\u003ccode\u003e$\\boldsymbol{O}$\u003c/code\u003e 为 \u003ccode\u003e$n \\times n$\u003c/code\u003e 的值均为 \u003ccode\u003e$1$\u003c/code\u003e 的矩阵。\u003c/li\u003e\n\u003cli\u003e计算矩阵 \u003ccode\u003e$\\boldsymbol{B}$\u003c/code\u003e 的特征向量 \u003ccode\u003e$e_1, e_2, ..., e_m$\u003c/code\u003e 及其对应的特征值 \u003ccode\u003e$\\lambda_1, \\lambda_2, ..., \\lambda_m$\u003c/code\u003e。\u003c/li\u003e\n\u003cli\u003e确定维度 \u003ccode\u003e$k$\u003c/code\u003e，重构数据 \u003ccode\u003e$\\boldsymbol{X}\u0026#39; = \\boldsymbol{E}_k \\boldsymbol{\\Lambda}_k^{1/2}$\u003c/code\u003e，其中 \u003ccode\u003e$\\boldsymbol{\\Lambda}_k$\u003c/code\u003e 为前 \u003ccode\u003e$k$\u003c/code\u003e 个值最大的 \u003ccode\u003e$k$\u003c/code\u003e 个特征值构成的对角矩阵，\u003ccode\u003e$\\boldsymbol{E}_k$\u003c/code\u003e 是对应的 \u003ccode\u003e$k$\u003c/code\u003e 个特征向量构成的矩阵。\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003e在《多元统计分析》\u003csup id=\"fnref:12\"\u003e\u003ca href=\"#fn:12\" class=\"footnote-ref\" role=\"doc-noteref\"\u003e12\u003c/a\u003e\u003c/sup\u003e一书中证明了，\u003ccode\u003e$\\boldsymbol{X}$\u003c/code\u003e 的 \u003ccode\u003e$k$\u003c/code\u003e 维主坐标正好是将 \u003ccode\u003e$\\boldsymbol{X}$\u003c/code\u003e 中心化后 \u003ccode\u003e$n$\u003c/code\u003e 个样本的前 \u003ccode\u003e$k$\u003c/code\u003e 个主成份的值，由此可见 MDS 和 PCA 的作用是类似的。\u003c/p\u003e\n\u003cp\u003e我们利用中国省会的地理位置给出 MDS 的一个示例，首先我们获取中国省会共 34 个点的坐标，其次我们计算两两之间的距离，我们仅利用距离信息利用 MDS 还原出 2 维空间中的坐标，可视化结果如下所示\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"/images/cn/2018-03-16-manifold-learning/cities-mds.svg\" alt=\"\"/\u003e\u003c/p\u003e\n\u003cp\u003e其中，黑色的点为省会的真实位置，蓝色的点为利用距离矩阵和 MDS 还原出来的位置，为了绘制还原出的位置我们对 MDS 的结果做出了适当的翻转和变换。从结果中不难看出，尽管每个点的坐标相比真实坐标都有一定的偏离，但是其很好的保持了相对距离，这也正是 MDS 算法的要求。\u003c/p\u003e\n\u003ch2 id=\"isomap\"\u003eISOMAP\u003c/h2\u003e\n\u003cp\u003e对于一些非线性的流形，如果使用线性的降维方法得到的效果就不尽人意了，例如上文中提到的瑞士卷。在 ISOMAP 中，我们首先引入一个测地线的概念，在距离度量定义时，测地线可以定义为空间中两点的局域最短路径。形象的，在一个球面上，两点之间的测地线就是过这两个点的大圆的弧线\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"/images/cn/2018-03-16-manifold-learning/spherical-triangle.svg\" alt=\"\"/\u003e\u003c/p\u003e\n\u003cp\u003e那么，对于非线性流形，ISOMAP 则是通过构建邻接图，利用图上的最短距离来近似测地线。在构造邻接图时，我们使用最近邻算法，对于一个点 \u003ccode\u003e$x_i$\u003c/code\u003e 连接距离其最近的 \u003ccode\u003e$k$\u003c/code\u003e 个点，两点之间的距离我们则一般使用传统的欧式距离。则任意两点之间的测地线距离则可以利用构建的邻接图上的最短路径进行估计，图上的最短路问题我们可以通过 Dijkstra 或 Floyd-Warshall 算法计算。得到样本的距离矩阵后，ISOMAP 算法则使用 MDS 方法计算得到低维空间的座标映射。\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"/images/cn/2018-03-16-manifold-learning/swiss-roll-isomap.png\" alt=\"\"/\u003e\u003c/p\u003e\n\u003cp\u003e上图中，我们给出了利用 ISOMAP 对瑞士卷降至 2 维的一个格式化过程。第一幅图中，我们标注了 2 个蓝色的点，其中蓝色的直线为这 2 个点在三维空间中的欧式距离。第二幅图中，同样是相同的两个点，我们首先利用最近邻算法 (\u003ccode\u003e$k = 10$\u003c/code\u003e) 将瑞士卷所有的点连接为一个邻接图，其中红色的路径为这 2 个点在邻接图上的最短路。第三幅图是通过 ISOMAP 算法降维至 2 维的结果，其中蓝色的直线是这两个点在 2 维空间中的欧式距离，红色的路径是 3 维最短路在 2 维结果中的连线，可以看出两者是很相近的。\u003c/p\u003e\n\u003ch2 id=\"lle\"\u003eLLE\u003c/h2\u003e\n\u003cp\u003e局部线性嵌入 (LLE, Locally Linear Embedding) \u003csup id=\"fnref1:5\"\u003e\u003ca href=\"#fn:5\" class=\"footnote-ref\" role=\"doc-noteref\"\u003e5\u003c/a\u003e\u003c/sup\u003e，从这个名称上我们不难看出其不同与 ISOMAP 那种通过都建邻接图保留全局结构的，而是从局部结构出发对数据进行降维。在 LLE 方法中，主要有如下的基本假设：\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e一个流形的局部可以近似于一个欧式空间\u003c/li\u003e\n\u003cli\u003e每个样本均可以利用其邻居进行线性重构\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e基于上面的假设，LLE 算法的流程如下：\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003e对于点 \u003ccode\u003e$X_i$\u003c/code\u003e，计算距离其最近的 \u003ccode\u003e$k$\u003c/code\u003e 个点，\u003ccode\u003e$X_j, j \\in N_i$\u003c/code\u003e。\u003c/li\u003e\n\u003cli\u003e计算权重 \u003ccode\u003e$W_{ij}$\u003c/code\u003e 是的能够通过点 \u003ccode\u003e$X_i$\u003c/code\u003e 的邻居节点最优的重构该点，即最小化\n\u003ccode\u003e$$ \\epsilon \\left(W\\right) = \\sum_i \\left\\lVert X_i - \\sum_j W_{ij} X_j \\right\\rVert ^2 $$\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003e通过权重 \u003ccode\u003e$W_{ij}$\u003c/code\u003e 计算 \u003ccode\u003e$X$\u003c/code\u003e 的低维最优重构 \u003ccode\u003e$Y$\u003c/code\u003e，即最小化\n\u003ccode\u003e$$ \\phi \\left(Y\\right) = \\sum_i \\left\\lVert Y_i - \\sum_j W_{ij} Y_j \\right\\rVert ^2 $$\u003c/code\u003e\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003e具体上述问题的优化求解过程在此就不在详细描述。针对 LLE 算法，后续很多人从不同方面对其进行了改进：\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eHessian LLE \u003csup id=\"fnref:13\"\u003e\u003ca href=\"#fn:13\" class=\"footnote-ref\" role=\"doc-noteref\"\u003e13\u003c/a\u003e\u003c/sup\u003e 在局部中不再考虑局部的线性关系，而是保持局部的 Hessian 矩阵的二次型的关系。\u003c/li\u003e\n\u003cli\u003eModified LLE \u003csup id=\"fnref:14\"\u003e\u003ca href=\"#fn:14\" class=\"footnote-ref\" role=\"doc-noteref\"\u003e14\u003c/a\u003e\u003c/sup\u003e 则是修改了寻找最临近的 \u003ccode\u003e$k$\u003c/code\u003e 个样本的方案，其在寻找 \u003ccode\u003e$k$\u003c/code\u003e 近邻时希望找到的近邻尽量分布在样本的各个方向，而不是集中在一侧。\u003c/li\u003e\n\u003cli\u003eLTSA (Local Tangent Space Alignment) \u003csup id=\"fnref:15\"\u003e\u003ca href=\"#fn:15\" class=\"footnote-ref\" role=\"doc-noteref\"\u003e15\u003c/a\u003e\u003c/sup\u003e 则是除了保留了局部的几何性质，同时使用的一个从局部几何到整体性质过渡的 alignment 方法，因此可以理解为是一个局部和整体的组合。\u003c/li\u003e\n\u003c/ol\u003e\n\u003ch2 id=\"le\"\u003eLE\u003c/h2\u003e\n\u003cp\u003eLE (Laplacian Eigenmap) \u003csup id=\"fnref1:6\"\u003e\u003ca href=\"#fn:6\" class=\"footnote-ref\" role=\"doc-noteref\"\u003e6\u003c/a\u003e\u003c/sup\u003e 的基本思想是认为在高维空间中距离近的点映射到低维空间中后其位置也相距很近。LE 从这个思想出发，最终将问题转化为求解图拉普拉斯算子的广义特征值问题，具体的一些证明不在这里详细展开说明，具体请参见原文，下面仅给出 LE 算法的流程：\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003e构建邻接图。\u003c/li\u003e\n\u003cli\u003e构建邻接矩阵 \u003ccode\u003e$W$\u003c/code\u003e，构建邻接矩阵有两种方法：对于点 \u003ccode\u003e$i$\u003c/code\u003e 和点 \u003ccode\u003e$j$\u003c/code\u003e 相连，如果利用 Hear Kernel (参数 \u003ccode\u003e$t \\in \\mathbb{R}$\u003c/code\u003e)，则令 \u003ccode\u003e$W_{ij} = \\exp \\left(\\dfrac{- \\left\\lVert x_i - x_j \\right\\rVert ^ 2}{t}\\right)$\u003c/code\u003e；如果使用简介方案，则令 \u003ccode\u003e$W_{ij} = 1$\u003c/code\u003e，对于不相连的点，则令 \u003ccode\u003e$W_{ij} = 0$\u003c/code\u003e。\u003c/li\u003e\n\u003cli\u003e进行特征映射，通过上面构造的图 \u003ccode\u003e$G$\u003c/code\u003e，计算如下广义特征值和特征向量\n\u003ccode\u003e$$ L f = \\lambda D f $$\u003c/code\u003e\n其中 \u003ccode\u003e$D$\u003c/code\u003e 是一个对角矩阵，\u003ccode\u003e$D_{ii} = \\sum_{j} W_{ji}$\u003c/code\u003e，\u003ccode\u003e$L = D - W$\u003c/code\u003e 即为拉普拉斯矩阵。对于上式的解 \u003ccode\u003e$f_0, .., f_{k-1}$\u003c/code\u003e 为根据特征值从小到大的排序，其中 \u003ccode\u003e$0 = \\lambda_0 \\leq \\lambda_1 \\leq ... \\leq \\lambda_{k-1}$\u003c/code\u003e，则降维至 \u003ccode\u003e$d$\u003c/code\u003e 维的后的特征即为 \u003ccode\u003e$\\left(f_1, f_2, ..., f_d\\right)$\u003c/code\u003e。\u003c/li\u003e\n\u003c/ol\u003e\n\u003ch2 id=\"sne-和-t-sne\"\u003eSNE 和 t-SNE\u003c/h2\u003e\n\u003ch3 id=\"sne\"\u003eSNE\u003c/h3\u003e\n\u003cp\u003eSNE (Stochastic Neighbor Embedding) \u003csup id=\"fnref:16\"\u003e\u003ca href=\"#fn:16\" class=\"footnote-ref\" role=\"doc-noteref\"\u003e16\u003c/a\u003e\u003c/sup\u003e 是由 Hinton 等人提出的一种降维算法，其方法的基本假设如下：\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003e对象之间的相似度可以用概率进行表示，即：相似的对象有更高的概率被同时选择，不相似的对象有较低的概率被同时选择。\u003c/li\u003e\n\u003cli\u003e在高维空间中构建的这种概率分布应该尽可能的同低维空间中的概率分布相似。\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003e对于两个点 \u003ccode\u003e$x_i, x_j$\u003c/code\u003e，假设 \u003ccode\u003e$x_i$\u003c/code\u003e 以条件概率 \u003ccode\u003e$p_{j∣i}$\u003c/code\u003e 选择 \u003ccode\u003e$x_j$\u003c/code\u003e 作为它的邻近点，因此如果两者距离更近 (更相似)，则概率值越大，反之概率值越小，则我们定义 \u003ccode\u003e$p_{j∣i}$\u003c/code\u003e 如下：\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003e$$ p_{j∣i} = \\dfrac{\\exp \\left(\\dfrac{- \\left\\lVert x_i - x_j \\right\\rVert ^ 2}{2 \\sigma_i^2}\\right)}{\\sum_{k \\neq i} \\exp \\left(\\dfrac{- \\left\\lVert x_i - x_k \\right\\rVert ^ 2}{2 \\sigma_i^2}\\right)} $$\u003c/code\u003e\u003c/p\u003e\n\u003cp\u003e其中，\u003ccode\u003e$\\sigma_i$\u003c/code\u003e 为参数，同时我们设置 \u003ccode\u003e$p_{i∣i} = 0$\u003c/code\u003e，因为我们仅需衡量不同对象之间的相似度。\u003c/p\u003e\n\u003cp\u003e类似的，根据 SNE 的基本思想，当数据被映射到低维空间中后，其概率分布应同高维空间中的分布尽可能的相似，假设点 \u003ccode\u003e$x_i, x_j$\u003c/code\u003e 在低维空间中的映射点为 \u003ccode\u003e$y_i, y_j$\u003c/code\u003e，则在低维空间中的条件概率 \u003ccode\u003e$q_{j∣i}$\u003c/code\u003e 定义为：\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003e$$ q_{j∣i} = \\dfrac{\\exp \\left(- \\left\\lVert y_i - y_j \\right\\rVert ^ 2\\right)}{\\sum_{k \\neq i} \\exp \\left(- \\left\\lVert y_i - y_k \\right\\rVert ^ 2\\right)} $$\u003c/code\u003e\u003c/p\u003e\n\u003cp\u003e同样，我们设置 \u003ccode\u003e$q_{i∣i} = 0$\u003c/code\u003e。从 SNE 的基本假设出发，我们的目的是使得数据在高维空间中的条件概率尽可能的和其在低维空间中的条件概率相同，因此对于全部点样本点而言，就是保证高维空间的概率分布 \u003ccode\u003e$P_i$\u003c/code\u003e 和低维空间的概率分布 \u003ccode\u003e$Q_i$\u003c/code\u003e 尽量形同。在这里我们利用 KL 散度衡量这两个概率分布的差异，则 SNE 的损失函数可以写为：\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003e$$ C = \\sum_{i} KL \\left(P_i \\Vert Q_i\\right) = \\sum_{i} \\sum_{j} p_{j∣i} \\log \\dfrac{p_{j∣i}}{q_{j∣i}} $$\u003c/code\u003e\u003c/p\u003e\n\u003cp\u003e因为 KL 散度具有不对称性可知，当在原始空间中两点距离较远而降维后的空间中距离较近 (即，\u003ccode\u003e$q_{j|i} \u0026lt; p_{j|i}$\u003c/code\u003e) 时，会产生较大的 cost，相反则会产生较小的 cost。正是这种不对称性的损失函数导致了 SNE 算法更加关注局部结构，相比忽略了全局结构。\u003c/p\u003e\n\u003cp\u003e上文中，对于不同的点，\u003ccode\u003e$\\sigma_i$\u003c/code\u003e 具有不同的值，SNE 算法利用困惑度 (Perplexity) 对其进行优化寻找一个最佳的 \u003ccode\u003e$\\sigma$\u003c/code\u003e，对于一个随机变量 \u003ccode\u003e$P_i$\u003c/code\u003e，困惑度定义如下：\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003e$$ Perp \\left(P_i\\right) = 2^{H \\left(P_i\\right)} $$\u003c/code\u003e\u003c/p\u003e\n\u003cp\u003e其中，\u003ccode\u003e$H \\left(P_i\\right) = \\sum_{j} p_{j|i} \\log_2 p_{j|i}$\u003c/code\u003e 表示 \u003ccode\u003e$P_i$\u003c/code\u003e 的熵。困惑度可以解释为一个点附近的有效近邻点个数。SNE 对困惑度的调整比较有鲁棒性，通常选择 5-50 之间，给定之后，使用二分搜索的方式寻找合适的 \u003ccode\u003e$\\sigma$\u003c/code\u003e。\u003c/p\u003e\n\u003cp\u003eSNE 的损失函数对 \u003ccode\u003e$y_i$\u003c/code\u003e 求梯度后，可得：\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003e$$ \\dfrac{\\delta C}{\\delta y_i} = 2 \\sum_j \\left(p_{j|i} - q_{j|i} + p_{i|j} - q_{i|j}\\right) \\left(y_i - y_j\\right) $$\u003c/code\u003e\u003c/p\u003e\n\u003ch3 id=\"t-sne\"\u003et-SNE\u003c/h3\u003e\n\u003cp\u003eSNE 为我们提供了一种很好的降维方法，但是其本身也存在一定的问题，主要有如下两点：\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003cstrong\u003e不对称问题\u003c/strong\u003e：损失函数中的 KL 散度具有不对称性，导致 SNE 更加关注局部结构，相比忽略了全局结构。\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003e拥挤问题\u003c/strong\u003e：从高维空间映射到低维空间后，不同类别的簇容易挤在一起，无法较好地区分开。\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e针对这两个问题，Maaten 等人又提出了 t-SNE 算法对其进行优化 \u003csup id=\"fnref:17\"\u003e\u003ca href=\"#fn:17\" class=\"footnote-ref\" role=\"doc-noteref\"\u003e17\u003c/a\u003e\u003c/sup\u003e。\u003c/p\u003e\n\u003cp\u003e针对不对称问题，Maaten 采用的方法是用联合概率分布来替代条件概率分布。高维控件中的联合概率分布为 \u003ccode\u003e$P$\u003c/code\u003e，低维空间中的联合概率分布为 \u003ccode\u003e$Q$\u003c/code\u003e，则对于任意的 \u003ccode\u003e$i, j$\u003c/code\u003e，有 \u003ccode\u003e$p_{ij} = p_{ji}, q_{ij} = q_{ji}$\u003c/code\u003e，联合概率定义为：\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003e$$ \\begin{align} p_{ij} \u0026amp;= \\dfrac{\\exp \\left(\\dfrac{- \\left\\lVert x_i - x_j \\right\\rVert ^ 2}{2 \\sigma^2}\\right)}{\\sum_{k \\neq l} \\exp \\left(\\dfrac{- \\left\\lVert x_k - x_l \\right\\rVert ^ 2}{2 \\sigma^2}\\right)} \\\\ q_{ij} \u0026amp;= \\dfrac{\\exp \\left(- \\left\\lVert y_i - y_j \\right\\rVert ^ 2\\right)}{\\sum_{k \\neq l} \\exp \\left(- \\left\\lVert y_k - y_l \\right\\rVert ^ 2\\right)} \\end{align} $$\u003c/code\u003e\u003c/p\u003e\n\u003cp\u003e虽然这样保证了对称性，但是对于异常的情况，例如数据点 \u003ccode\u003e$x_i$\u003c/code\u003e 在距离群簇较远，则 \u003ccode\u003e$\\lVert x_i − x_j \\rVert ^ 2$\u003c/code\u003e 的值会很大，而 \u003ccode\u003e$p_{ij}$\u003c/code\u003e 会相应变得非常小，也就是说 \u003ccode\u003e$x_i$\u003c/code\u003e 的位置很远这件事情对损失函数影响很小 (惩罚过小)，那这个点在低维空间中将无法从其他点中区分出来。因此 Maaten 提出了对称的条件概率来重新定义上述联合概率 \u003ccode\u003e$p_{ij}$\u003c/code\u003e ，对于数量为 \u003ccode\u003e$n$\u003c/code\u003e 的数据点，新的概率公式是：\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003e$$ p_{ij} = \\dfrac{p_{j|i} + p_{i|j}}{2n} $$\u003c/code\u003e\u003c/p\u003e\n\u003cp\u003e则损失函数更新为：\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003e$$ C = \\sum_{i} KL \\left(P_i \\Vert Q_i\\right) = \\sum_{i} \\sum_{j} p_{ij} \\log \\dfrac{p_{ij}}{q_{ij}} $$\u003c/code\u003e\u003c/p\u003e\n\u003cp\u003e梯度更新为：\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003e$$ \\dfrac{\\delta C}{\\delta y_i} = 4 \\sum_j \\left(p_{ij} - q_{ij}\\right) \\left(y_i - y_j\\right) $$\u003c/code\u003e\u003c/p\u003e\n\u003cp\u003e拥挤问题 (Crowding) 就是从高维空间映射到低维空间后，不同类别的簇容易挤在一起，不能很好的地区分开。t-SNE 则是利用了 t 分布重新定义 \u003ccode\u003e$q_{ij}$\u003c/code\u003e，t 分布具有长尾特性，相比于高斯分布，其在尾部趋向于 0 的速度更慢，对比如图所示：\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"/images/cn/2018-03-16-manifold-learning/gassion-t-comparison.png\" alt=\"\"/\u003e\u003c/p\u003e\n\u003cp\u003e利用 t 分布重新定义的 \u003ccode\u003e$q_{ij}$\u003c/code\u003e 为：\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003e$$ q_{ij} = \\dfrac{\\left(1 + \\lVert y_i - y_j \\rVert ^ 2\\right) ^ {-1}}{\\sum_{k \\neq l} \\left(1 + \\lVert y_k - y_l \\rVert ^ 2\\right) ^ {-1}} $$\u003c/code\u003e\u003c/p\u003e\n\u003cp\u003e梯度更新为：\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003e$$ \\dfrac{\\delta C}{\\delta y_i} = 4 \\sum_j \\left(p_{ij} - q_{ij}\\right) \\left(y_i - y_j\\right) \\left(1 + \\lVert y_i - y_j \\rVert ^ 2\\right) ^ {-1} $$\u003c/code\u003e\u003c/p\u003e\n\u003cp\u003e利用 t-SNE 对 MNIST 数据集进行降维可视化结果如下：\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"/images/cn/2018-03-16-manifold-learning/mnist-t-sne.png\" alt=\"\"/\u003e\u003c/p\u003e\n\u003ch2 id=\"方法比较\"\u003e方法比较\u003c/h2\u003e\n\u003cp\u003e针对上述的若干算法，我们简单列举一下每个算法的优缺点\u003c/p\u003e\n\u003ctable\u003e\n\u003cthead\u003e\n\u003ctr\u003e\n\u003cth\u003e方法\u003c/th\u003e\n\u003cth\u003e优点\u003c/th\u003e\n\u003cth\u003e缺点\u003c/th\u003e\n\u003c/tr\u003e\n\u003c/thead\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd\u003eIsomap\u003c/td\u003e\n\u003ctd\u003e1. 保持流形的全局几何结构 \u003cbr/\u003e 2. 适用于学习内部平坦的低维流形\u003c/td\u003e\n\u003ctd\u003e1. 对于数据量较大的情况，计算效率过低 \u003cbr/\u003e 2. 不适于学习有较大内在曲率的流形\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003eLLE\u003c/td\u003e\n\u003ctd\u003e1. 可以学习任意维的局部线性的低维流形 \u003cbr/\u003e 2. 归结为稀疏矩阵特征值计算，计算复杂度相对较小\u003c/td\u003e\n\u003ctd\u003e1. 所学习的流形只能是不闭合的 \u003cbr/\u003e 2. 要求样本在流形上是稠密采样的 \u003cbr/\u003e 3.对样本中的噪声和邻域参数比较敏感\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003eLE\u003c/td\u003e\n\u003ctd\u003e1. 是局部非线性方法，与谱图理论有很紧密的联系 \u003cbr/\u003e 2. 通过求解稀疏矩阵的特征值问题解析地求出整体最优解，效率非常高 \u003cbr/\u003e 3. 使原空间中离得很近的点在低维空间也离得很近，可以用于聚类\u003c/td\u003e\n\u003ctd\u003e1. 对算法参数和数据采样密度较敏感 \u003cbr/\u003e 2. 不能有效保持流形的全局几何结构\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003eSNE, t-SNE\u003c/td\u003e\n\u003ctd\u003e1. 非线性降维效果相较上述方法较好\u003c/td\u003e\n\u003ctd\u003e1. 大规模高维数据时，效率显著降低 \u003cbr/\u003e 2. 参数对不同数据集较为敏感\u003c/td\u003e\n\u003c/tr\u003e\n\u003c/tbody\u003e\n\u003c/table\u003e\n\u003cp\u003e对于\u003cstrong\u003e瑞士卷 (Swiss Roll)\u003c/strong\u003e，\u003cstrong\u003eS 形曲线 (S Curve)\u003c/strong\u003e 和\u003cstrong\u003e切断的球面 (Severed Sphere)\u003c/strong\u003e，我们利用不同的流形算法对其进行降维，可视化的对比结果如下面 3 张图所示，图中同时标注了算法的运行时间，实现主要参照了 scikit-learn 关于流形学习算法的比较 \u003csup id=\"fnref:18\"\u003e\u003ca href=\"#fn:18\" class=\"footnote-ref\" role=\"doc-noteref\"\u003e18\u003c/a\u003e\u003c/sup\u003e。\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"/images/cn/2018-03-16-manifold-learning/s-curve.png\" alt=\"\"/\u003e\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"/images/cn/2018-03-16-manifold-learning/swiss-roll.png\" alt=\"\"/\u003e\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"/images/cn/2018-03-16-manifold-learning/severed-sphere.png\" alt=\"\"/\u003e\u003c/p\u003e\n\u003cp\u003e文中相关图片绘制实现详见\u003ca href=\"https://github.com/leovan/leovan.me/tree/main/static/codes/cn/2018-03-16-manifold-learning\"\u003e代码\u003c/a\u003e，本文部分内容参考了\u003cstrong\u003e流形学习专题介绍\u003c/strong\u003e \u003csup id=\"fnref:19\"\u003e\u003ca href=\"#fn:19\" class=\"footnote-ref\" role=\"doc-noteref\"\u003e19\u003c/a\u003e\u003c/sup\u003e， \u003cstrong\u003e流形学习\u003c/strong\u003e \u003csup id=\"fnref:20\"\u003e\u003ca href=\"#fn:20\" class=\"footnote-ref\" role=\"doc-noteref\"\u003e20\u003c/a\u003e\u003c/sup\u003e，\u003cstrong\u003eChrispher\u003c/strong\u003e \u003csup id=\"fnref:21\"\u003e\u003ca href=\"#fn:21\" class=\"footnote-ref\" role=\"doc-noteref\"\u003e21\u003c/a\u003e\u003c/sup\u003e 的博客和 \u003cstrong\u003ebingo\u003c/strong\u003e \u003csup id=\"fnref:22\"\u003e\u003ca href=\"#fn:22\" class=\"footnote-ref\" role=\"doc-noteref\"\u003e22\u003c/a\u003e\u003c/sup\u003e 的博客。\u003c/p\u003e\n\u003cdiv class=\"footnotes\" role=\"doc-endnotes\"\u003e\n\u003chr/\u003e\n\u003col\u003e\n\u003cli id=\"fn:1\"\u003e\n\u003cp\u003eJolliffe, Ian T. “Principal component analysis and factor analysis.” \u003cem\u003ePrincipal component analysis.\u003c/em\u003e Springer, New York, NY, 1986. 115-128. \u003ca href=\"#fnref:1\" class=\"footnote-backref\" role=\"doc-backlink\"\u003e↩︎\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli id=\"fn:2\"\u003e\n\u003cp\u003eBalakrishnama, Suresh, and Aravind Ganapathiraju. “Linear discriminant analysis-a brief tutorial.” \u003cem\u003eInstitute for Signal and information Processing\u003c/em\u003e 18 (1998): 1-8. \u003ca href=\"#fnref:2\" class=\"footnote-backref\" role=\"doc-backlink\"\u003e↩︎\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli id=\"fn:3\"\u003e\n\u003cp\u003eCox, Trevor F., and Michael AA Cox. \u003cem\u003eMultidimensional scaling.\u003c/em\u003e CRC press, 2000. \u003ca href=\"#fnref:3\" class=\"footnote-backref\" role=\"doc-backlink\"\u003e↩︎\u003c/a\u003e \u003ca href=\"#fnref1:3\" class=\"footnote-backref\" role=\"doc-backlink\"\u003e↩︎\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli id=\"fn:4\"\u003e\n\u003cp\u003eTenenbaum, Joshua B., Vin De Silva, and John C. Langford. “A global geometric framework for nonlinear dimensionality reduction.” \u003cem\u003eScience\u003c/em\u003e 290.5500 (2000): 2319-2323. \u003ca href=\"#fnref:4\" class=\"footnote-backref\" role=\"doc-backlink\"\u003e↩︎\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli id=\"fn:5\"\u003e\n\u003cp\u003eRoweis, Sam T., and Lawrence K. Saul. “Nonlinear dimensionality reduction by locally linear embedding.” \u003cem\u003eScience\u003c/em\u003e 290.5500 (2000): 2323-2326. \u003ca href=\"#fnref:5\" class=\"footnote-backref\" role=\"doc-backlink\"\u003e↩︎\u003c/a\u003e \u003ca href=\"#fnref1:5\" class=\"footnote-backref\" role=\"doc-backlink\"\u003e↩︎\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli id=\"fn:6\"\u003e\n\u003cp\u003eBelkin, Mikhail, and Partha Niyogi. “Laplacian eigenmaps for dimensionality reduction and data representation.” \u003cem\u003eNeural computation\u003c/em\u003e 15.6 (2003): 1373-1396. \u003ca href=\"#fnref:6\" class=\"footnote-backref\" role=\"doc-backlink\"\u003e↩︎\u003c/a\u003e \u003ca href=\"#fnref1:6\" class=\"footnote-backref\" role=\"doc-backlink\"\u003e↩︎\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli id=\"fn:7\"\u003e\n\u003cp\u003e梅加强. 流形与几何初步 \u003ca href=\"#fnref:7\" class=\"footnote-backref\" role=\"doc-backlink\"\u003e↩︎\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli id=\"fn:8\"\u003e\n\u003cp\u003e\u003ca href=\"https://zh.wikipedia.org/zh-hans/%E6%B5%81%E5%BD%A2\"\u003ehttps://zh.wikipedia.org/zh-hans/流形\u003c/a\u003e \u003ca href=\"#fnref:8\" class=\"footnote-backref\" role=\"doc-backlink\"\u003e↩︎\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli id=\"fn:9\"\u003e\n\u003cp\u003epluskid. \u003ca href=\"http://blog.pluskid.org/?p=533\"\u003e浅谈流形学习\u003c/a\u003e \u003ca href=\"#fnref:9\" class=\"footnote-backref\" role=\"doc-backlink\"\u003e↩︎\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli id=\"fn:10\"\u003e\n\u003cp\u003e\u003ca href=\"https://en.wikipedia.org/wiki/Whitney_embedding_theorem\"\u003ehttps://en.wikipedia.org/wiki/Whitney_embedding_theorem\u003c/a\u003e \u003ca href=\"#fnref:10\" class=\"footnote-backref\" role=\"doc-backlink\"\u003e↩︎\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli id=\"fn:11\"\u003e\n\u003cp\u003eSilva, Vin D., and Joshua B. Tenenbaum. “Global versus local methods in nonlinear dimensionality reduction.” \u003cem\u003eAdvances in neural information processing systems.\u003c/em\u003e 2003. \u003ca href=\"#fnref:11\" class=\"footnote-backref\" role=\"doc-backlink\"\u003e↩︎\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli id=\"fn:12\"\u003e\n\u003cp\u003e何晓群. 多元统计分析 \u003ca href=\"#fnref:12\" class=\"footnote-backref\" role=\"doc-backlink\"\u003e↩︎\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli id=\"fn:13\"\u003e\n\u003cp\u003eDonoho, David L., and Carrie Grimes. “Hessian eigenmaps: Locally linear embedding techniques for high-dimensional data.” \u003cem\u003eProceedings of the National Academy of Sciences\u003c/em\u003e 100.10 (2003): 5591-5596. \u003ca href=\"#fnref:13\" class=\"footnote-backref\" role=\"doc-backlink\"\u003e↩︎\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli id=\"fn:14\"\u003e\n\u003cp\u003eZhang, Zhenyue, and Jing Wang. “MLLE: Modified locally linear embedding using multiple weights.” \u003cem\u003eAdvances in neural information processing systems.\u003c/em\u003e 2007. \u003ca href=\"#fnref:14\" class=\"footnote-backref\" role=\"doc-backlink\"\u003e↩︎\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli id=\"fn:15\"\u003e\n\u003cp\u003eZhang, Zhenyue, and Hongyuan Zha. “Principal manifolds and nonlinear dimensionality reduction via tangent space alignment.” \u003cem\u003eSIAM journal on scientific computing\u003c/em\u003e 26.1 (2004): 313-338. \u003ca href=\"#fnref:15\" class=\"footnote-backref\" role=\"doc-backlink\"\u003e↩︎\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli id=\"fn:16\"\u003e\n\u003cp\u003eHinton, Geoffrey E., and Sam T. Roweis. “Stochastic neighbor embedding.” \u003cem\u003eAdvances in neural information processing systems.\u003c/em\u003e 2003. \u003ca href=\"#fnref:16\" class=\"footnote-backref\" role=\"doc-backlink\"\u003e↩︎\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli id=\"fn:17\"\u003e\n\u003cp\u003eMaaten, Laurens van der, and Geoffrey Hinton. “Visualizing data using t-SNE.” \u003cem\u003eJournal of machine learning research\u003c/em\u003e 9.Nov (2008): 2579-2605. \u003ca href=\"#fnref:17\" class=\"footnote-backref\" role=\"doc-backlink\"\u003e↩︎\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli id=\"fn:18\"\u003e\n\u003cp\u003e\u003ca href=\"http://scikit-learn.org/stable/auto_examples/manifold/plot_compare_methods.html\"\u003ehttp://scikit-learn.org/stable/auto_examples/manifold/plot_compare_methods.html\u003c/a\u003e \u003ca href=\"#fnref:18\" class=\"footnote-backref\" role=\"doc-backlink\"\u003e↩︎\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli id=\"fn:19\"\u003e\n\u003cp\u003e王瑞平. 流形学习专题介绍 \u003ca href=\"#fnref:19\" class=\"footnote-backref\" role=\"doc-backlink\"\u003e↩︎\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli id=\"fn:20\"\u003e\n\u003cp\u003e何晓飞. 流形学习 \u003ca href=\"#fnref:20\" class=\"footnote-backref\" role=\"doc-backlink\"\u003e↩︎\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli id=\"fn:21\"\u003e\n\u003cp\u003e\u003ca href=\"http://www.datakit.cn/blog/2017/02/05/t_sne_full.html\"\u003ehttp://www.datakit.cn/blog/2017/02/05/t_sne_full.html\u003c/a\u003e \u003ca href=\"#fnref:21\" class=\"footnote-backref\" role=\"doc-backlink\"\u003e↩︎\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli id=\"fn:22\"\u003e\n\u003cp\u003e\u003ca href=\"http://bindog.github.io/blog/2016/06/04/from-sne-to-tsne-to-largevis/\"\u003ehttp://bindog.github.io/blog/2016/06/04/from-sne-to-tsne-to-largevis/\u003c/a\u003e \u003ca href=\"#fnref:22\" class=\"footnote-backref\" role=\"doc-backlink\"\u003e↩︎\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ol\u003e\n\u003c/div\u003e\n\n\n\n\n\n\u003cdiv class=\"donate\"\u003e\n  \u003cdiv class=\"donate-header\"\u003e\u003c/div\u003e\n  \u003cdiv class=\"donate-slug\" id=\"donate-slug\"\u003emanifold-learning\u003c/div\u003e\n  \u003cbutton class=\"donate-button\"\u003e赞 赏\u003c/button\u003e\n  \u003cdiv class=\"donate-footer\"\u003e「真诚赞赏，手留余香」\u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"donate-modal-wrapper\"\u003e\n  \u003cdiv class=\"donate-modal\"\u003e\n    \u003cdiv class=\"donate-box\"\u003e\n      \u003cdiv class=\"donate-box-content\"\u003e\n        \u003cdiv class=\"donate-box-content-inner\"\u003e\n          \u003cdiv class=\"donate-box-header\"\u003e「真诚赞赏，手留余香」\u003c/div\u003e\n          \u003cdiv class=\"donate-box-body\"\u003e\n            \u003cdiv class=\"donate-box-money\"\u003e\n              \u003cbutton class=\"donate-box-money-button donate-box-money-button-unchecked\" id=\"donate-box-money-button-2\" data-v=\"2\" data-unchecked=\"￥ 2\" data-checked=\"2 元\"\u003e￥ 2\u003c/button\u003e\n              \u003cbutton class=\"donate-box-money-button donate-box-money-button-unchecked\" id=\"donate-box-money-button-5\" data-v=\"5\" data-unchecked=\"￥ 5\" data-checked=\"5 元\"\u003e￥ 5\u003c/button\u003e\n              \u003cbutton class=\"donate-box-money-button donate-box-money-button-unchecked\" id=\"donate-box-money-button-10\" data-v=\"10\" data-unchecked=\"￥ 10\" data-checked=\"10 元\"\u003e￥ 10\u003c/button\u003e\n              \u003cbutton class=\"donate-box-money-button donate-box-money-button-unchecked\" id=\"donate-box-money-button-50\" data-v=\"50\" data-unchecked=\"￥ 50\" data-checked=\"50 元\"\u003e￥ 50\u003c/button\u003e\n              \u003cbutton class=\"donate-box-money-button donate-box-money-button-unchecked\" id=\"donate-box-money-button-100\" data-v=\"100\" data-unchecked=\"￥ 100\" data-checked=\"100 元\"\u003e￥ 100\u003c/button\u003e\n              \u003cbutton class=\"donate-box-money-button donate-box-money-button-unchecked\" id=\"donate-box-money-button-custom\" data-v=\"custom\" data-unchecked=\"任意金额\" data-checked=\"任意金额\"\u003e任意金额\u003c/button\u003e\n            \u003c/div\u003e\n            \u003cdiv class=\"donate-box-pay\"\u003e\n              \u003cimg class=\"donate-box-pay-qrcode\" id=\"donate-box-pay-qrcode\" src=\"\"/\u003e\n            \u003c/div\u003e\n          \u003c/div\u003e\n          \u003cdiv class=\"donate-box-footer\"\u003e\n            \u003cdiv class=\"donate-box-pay-method donate-box-pay-method-checked\" data-v=\"wechat-pay\"\u003e\n              \u003cimg class=\"donate-box-pay-method-image\" id=\"donate-box-pay-method-image-wechat-pay\" src=\"\"/\u003e\n            \u003c/div\u003e\n            \u003cdiv class=\"donate-box-pay-method\" data-v=\"alipay\"\u003e\n              \u003cimg class=\"donate-box-pay-method-image\" id=\"donate-box-pay-method-image-alipay\" src=\"\"/\u003e\n            \u003c/div\u003e\n          \u003c/div\u003e\n        \u003c/div\u003e\n      \u003c/div\u003e\n    \u003c/div\u003e\n    \u003cbutton type=\"button\" class=\"donate-box-close-button\"\u003e\n      \u003csvg class=\"donate-box-close-button-icon\" fill=\"#fff\" viewBox=\"0 0 24 24\" width=\"24\" height=\"24\"\u003e\u003cpath d=\"M13.486 12l5.208-5.207a1.048 1.048 0 0 0-.006-1.483 1.046 1.046 0 0 0-1.482-.005L12 10.514 6.793 5.305a1.048 1.048 0 0 0-1.483.005 1.046 1.046 0 0 0-.005 1.483L10.514 12l-5.208 5.207a1.048 1.048 0 0 0 .006 1.483 1.046 1.046 0 0 0 1.482.005L12 13.486l5.207 5.208a1.048 1.048 0 0 0 1.483-.006 1.046 1.046 0 0 0 .005-1.482L13.486 12z\" fill-rule=\"evenodd\"\u003e\u003c/path\u003e\u003c/svg\u003e\n    \u003c/button\u003e\n  \u003c/div\u003e\n\u003c/div\u003e\n\n\u003cscript type=\"text/javascript\" src=\"/js/donate.js\"\u003e\u003c/script\u003e\n\n\n  \u003cfooter\u003e\n  \n\u003cnav class=\"post-nav\"\u003e\n  \u003cspan class=\"nav-prev\"\u003e← \u003ca href=\"/cn/2018/02/optimization-methods-for-deeplearning/\"\u003e深度学习优化算法 (Optimization Methods for Deeplearning)\u003c/a\u003e\u003c/span\u003e\n  \u003cspan class=\"nav-next\"\u003e\u003ca href=\"/cn/2018/05/cross-platform-gui-application-based-on-pyqt/\"\u003e基于 PyQt5/PySide2 和 QML 的跨平台 GUI 程序开发\u003c/a\u003e →\u003c/span\u003e\n\u003c/nav\u003e\n\n\n\n\n\u003cins class=\"adsbygoogle\" style=\"display:block; text-align:center;\" data-ad-layout=\"in-article\" data-ad-format=\"fluid\" data-ad-client=\"ca-pub-2608165017777396\" data-ad-slot=\"8302038603\"\u003e\u003c/ins\u003e\n\u003cscript\u003e\n  (adsbygoogle = window.adsbygoogle || []).push({});\n\u003c/script\u003e\n\n\n\n\u003cscript src=\"//cdn.jsdelivr.net/npm/js-cookie@3.0.5/dist/js.cookie.min.js\"\u003e\u003c/script\u003e\n\u003cscript src=\"/js/toggle-theme.js\"\u003e\u003c/script\u003e\n\n\n\u003cscript src=\"/js/no-highlight.js\"\u003e\u003c/script\u003e\n\u003cscript src=\"/js/math-code.js\"\u003e\u003c/script\u003e\n\u003cscript src=\"/js/heading-anchor.js\"\u003e\u003c/script\u003e\n\n\n\n\u003csection class=\"comments\"\u003e\n\u003cscript src=\"https://giscus.app/client.js\" data-repo=\"leovan/leovan.me\" data-repo-id=\"MDEwOlJlcG9zaXRvcnkxMTMxOTY0Mjc=\" data-category=\"Comments\" data-category-id=\"DIC_kwDOBr89i84CT-R7\" data-mapping=\"pathname\" data-strict=\"1\" data-reactions-enabled=\"1\" data-emit-metadata=\"0\" data-input-position=\"top\" data-theme=\"preferred_color_scheme\" data-lang=\"zh-CN\" data-loading=\"lazy\" crossorigin=\"anonymous\" defer=\"\"\u003e\n\u003c/script\u003e\n\u003c/section\u003e\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\u003cscript async=\"\" src=\"/js/center-img.js\"\u003e\u003c/script\u003e\n\u003cscript async=\"\" src=\"/js/right-quote.js\"\u003e\u003c/script\u003e\n\u003cscript async=\"\" src=\"/js/external-link.js\"\u003e\u003c/script\u003e\n\u003cscript async=\"\" src=\"/js/alt-title.js\"\u003e\u003c/script\u003e\n\u003cscript async=\"\" src=\"/js/figure.js\"\u003e\u003c/script\u003e\n\n\n\n\u003cscript src=\"//cdn.jsdelivr.net/npm/lazysizes@5.3.2/lazysizes.min.js\"\u003e\u003c/script\u003e\n\n\n\u003cscript src=\"//cdn.jsdelivr.net/npm/vanilla-back-to-top@latest/dist/vanilla-back-to-top.min.js\"\u003e\u003c/script\u003e\n\u003cscript\u003e\naddBackToTop({\n  diameter: 48\n});\n\u003c/script\u003e\n\n  \u003chr/\u003e\n  \u003cdiv class=\"copyright no-border-bottom\"\u003e\n    \u003cdiv class=\"copyright-author-year\"\u003e\n      \u003cspan\u003eCopyright © 2017-2024 \u003ca href=\"/\"\u003e范叶亮 | Leo Van\u003c/a\u003e\u003c/span\u003e\n    \u003c/div\u003e\n  \u003c/div\u003e\n  \u003c/footer\u003e\n  \u003c/article\u003e",
  "Date": "2018-03-16T00:00:00Z",
  "Author": "范叶亮"
}