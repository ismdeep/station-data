{
  "Source": "leovan.me",
  "Title": "基于内容的图像检索 (Content Based Image Retrieval, CBIR)",
  "Link": "https://leovan.me/cn/2022/01/content-based-image-retrieval/",
  "Content": "\u003carticle class=\"main\"\u003e\n    \u003cheader class=\"content-title\"\u003e\n    \n\u003ch1 class=\"title\"\u003e\n  \n  基于内容的图像检索 (Content Based Image Retrieval, CBIR)\n  \n\u003c/h1\u003e\n\n\n\n\n\n\n\n\u003ch2 class=\"author-date\"\u003e范叶亮 / \n2022-01-27\u003c/h2\u003e\n\n\n\n\u003ch3 class=\"post-meta\"\u003e\n\n\n\u003cstrong\u003e分类: \u003c/strong\u003e\n\u003ca href=\"/categories/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0\"\u003e机器学习\u003c/a\u003e, \u003ca href=\"/categories/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0\"\u003e深度学习\u003c/a\u003e, \u003ca href=\"/categories/%E8%A1%A8%E7%A4%BA%E5%AD%A6%E4%B9%A0\"\u003e表示学习\u003c/a\u003e\n\n\n\n\n/\n\n\n\n\n\u003cstrong\u003e标签: \u003c/strong\u003e\n\u003cspan\u003e图像\u003c/span\u003e, \u003cspan\u003e检索\u003c/span\u003e, \u003cspan\u003e图像检索\u003c/span\u003e, \u003cspan\u003eImage Retrieval\u003c/span\u003e, \u003cspan\u003e实例检索\u003c/span\u003e, \u003cspan\u003eInstance Retrieval\u003c/span\u003e, \u003cspan\u003e基于内容的图像检索\u003c/span\u003e, \u003cspan\u003eCBIR\u003c/span\u003e, \u003cspan\u003eContent Based Image Retrieval\u003c/span\u003e, \u003cspan\u003eSIFT\u003c/span\u003e, \u003cspan\u003eScale-invariant Feature Transform\u003c/span\u003e, \u003cspan\u003e视觉词汇\u003c/span\u003e, \u003cspan\u003eVisual Word\u003c/span\u003e, \u003cspan\u003eHarris 角点检测\u003c/span\u003e, \u003cspan\u003e尺度空间\u003c/span\u003e, \u003cspan\u003e高斯拉普拉斯算子\u003c/span\u003e, \u003cspan\u003eLaplacian of Gaussian\u003c/span\u003e, \u003cspan\u003eLoG\u003c/span\u003e, \u003cspan\u003e高斯差分算子\u003c/span\u003e, \u003cspan\u003eDifference of Gaussian\u003c/span\u003e, \u003cspan\u003eDoG\u003c/span\u003e, \u003cspan\u003e高斯金字塔\u003c/span\u003e, \u003cspan\u003eOctave\u003c/span\u003e, \u003cspan\u003eInterval\u003c/span\u003e, \u003cspan\u003e子像素插值\u003c/span\u003e, \u003cspan\u003eSub-pixel Interpolation\u003c/span\u003e, \u003cspan\u003e梯度幅值\u003c/span\u003e, \u003cspan\u003eBoF\u003c/span\u003e, \u003cspan\u003eBag of Features\u003c/span\u003e, \u003cspan\u003eBag of Visual Words\u003c/span\u003e, \u003cspan\u003e视觉词典\u003c/span\u003e, \u003cspan\u003eVLAD\u003c/span\u003e, \u003cspan\u003eVector of Local Aggregated Descriptors\u003c/span\u003e, \u003cspan\u003eFisher 向量\u003c/span\u003e, \u003cspan\u003eFV\u003c/span\u003e, \u003cspan\u003eFisher Vector\u003c/span\u003e, \u003cspan\u003e高斯混合模型\u003c/span\u003e, \u003cspan\u003eGMM\u003c/span\u003e, \u003cspan\u003eGaussian Mixture Model\u003c/span\u003e, \u003cspan\u003e空间金字塔模型\u003c/span\u003e, \u003cspan\u003eSpatial Pyramid Models\u003c/span\u003e, \u003cspan\u003e区域候选网络\u003c/span\u003e, \u003cspan\u003eRegion Proposal Networks\u003c/span\u003e, \u003cspan\u003eRPN\u003c/span\u003e, \u003cspan\u003eRANSAC\u003c/span\u003e, \u003cspan\u003eMAC\u003c/span\u003e, \u003cspan\u003eR-MAC\u003c/span\u003e, \u003cspan\u003eGeM polling\u003c/span\u003e, \u003cspan\u003eSPoC\u003c/span\u003e, \u003cspan\u003eCroW\u003c/span\u003e, \u003cspan\u003eCAM+CroW\u003c/span\u003e, \u003cspan\u003eintra-model\u003c/span\u003e, \u003cspan\u003einter-model\u003c/span\u003e, \u003cspan\u003eearly fusion\u003c/span\u003e, \u003cspan\u003elate fusion\u003c/span\u003e\n\n\n\n\n/\n\n\n\u003cstrong\u003e字数: \u003c/strong\u003e\n11292\n\u003c/h3\u003e\n\n\n\n\u003chr/\u003e\n\n\n\n    \n    \n    \u003cins class=\"adsbygoogle\" style=\"display:block; text-align:center;\" data-ad-layout=\"in-article\" data-ad-format=\"fluid\" data-ad-client=\"ca-pub-2608165017777396\" data-ad-slot=\"1261604535\"\u003e\u003c/ins\u003e\n    \u003cscript\u003e\n    (adsbygoogle = window.adsbygoogle || []).push({});\n    \u003c/script\u003e\n    \n    \n    \u003c/header\u003e\n\n\n\n\u003cdiv class=\"toc-depth-3\"\u003e\u003cnav id=\"TableOfContents\"\u003e\n  \u003cul\u003e\n    \u003cli\u003e\u003ca href=\"#基于-sift-的图像检索\"\u003e基于 SIFT 的图像检索\u003c/a\u003e\n      \u003cul\u003e\n        \u003cli\u003e\u003ca href=\"#局部特征提取\"\u003e局部特征提取\u003c/a\u003e\n          \u003cul\u003e\n            \u003cli\u003e\u003ca href=\"#harris-角点检测\"\u003eHarris 角点检测\u003c/a\u003e\u003c/li\u003e\n            \u003cli\u003e\u003ca href=\"#尺度空间极值检测\"\u003e尺度空间极值检测\u003c/a\u003e\u003c/li\u003e\n            \u003cli\u003e\u003ca href=\"#关键点定位\"\u003e关键点定位\u003c/a\u003e\u003c/li\u003e\n            \u003cli\u003e\u003ca href=\"#关键点方向指定\"\u003e关键点方向指定\u003c/a\u003e\u003c/li\u003e\n            \u003cli\u003e\u003ca href=\"#关键点特征描述符\"\u003e关键点特征描述符\u003c/a\u003e\u003c/li\u003e\n          \u003c/ul\u003e\n        \u003c/li\u003e\n        \u003cli\u003e\u003ca href=\"#特征编码\"\u003e特征编码\u003c/a\u003e\n          \u003cul\u003e\n            \u003cli\u003e\u003ca href=\"#bof\"\u003eBoF\u003c/a\u003e\u003c/li\u003e\n            \u003cli\u003e\u003ca href=\"#vlad\"\u003eVLAD\u003c/a\u003e\u003c/li\u003e\n            \u003cli\u003e\u003ca href=\"#fv\"\u003eFV\u003c/a\u003e\u003c/li\u003e\n          \u003c/ul\u003e\n        \u003c/li\u003e\n        \u003cli\u003e\u003ca href=\"#图像检索\"\u003e图像检索\u003c/a\u003e\n          \u003cul\u003e\n            \u003cli\u003e\u003ca href=\"#倒排索引\"\u003e倒排索引\u003c/a\u003e\u003c/li\u003e\n            \u003cli\u003e\u003ca href=\"#ann\"\u003eANN\u003c/a\u003e\u003c/li\u003e\n          \u003c/ul\u003e\n        \u003c/li\u003e\n      \u003c/ul\u003e\n    \u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#基于深度学习的图像检索\"\u003e基于深度学习的图像检索\u003c/a\u003e\n      \u003cul\u003e\n        \u003cli\u003e\u003ca href=\"#网络前馈方式\"\u003e网络前馈方式\u003c/a\u003e\n          \u003cul\u003e\n            \u003cli\u003e\u003ca href=\"#单路前馈方法\"\u003e单路前馈方法\u003c/a\u003e\u003c/li\u003e\n            \u003cli\u003e\u003ca href=\"#多路前馈方法\"\u003e多路前馈方法\u003c/a\u003e\u003c/li\u003e\n          \u003c/ul\u003e\n        \u003c/li\u003e\n        \u003cli\u003e\u003ca href=\"#深度特征选择\"\u003e深度特征选择\u003c/a\u003e\n          \u003cul\u003e\n            \u003cli\u003e\u003ca href=\"#从全连接层提取\"\u003e从全连接层提取\u003c/a\u003e\u003c/li\u003e\n            \u003cli\u003e\u003ca href=\"#从卷积层提取\"\u003e从卷积层提取\u003c/a\u003e\u003c/li\u003e\n          \u003c/ul\u003e\n        \u003c/li\u003e\n        \u003cli\u003e\u003ca href=\"#特征融合策略\"\u003e特征融合策略\u003c/a\u003e\n          \u003cul\u003e\n            \u003cli\u003e\u003ca href=\"#层级别融合\"\u003e层级别融合\u003c/a\u003e\u003c/li\u003e\n            \u003cli\u003e\u003ca href=\"#模型级别融合\"\u003e模型级别融合\u003c/a\u003e\u003c/li\u003e\n          \u003c/ul\u003e\n        \u003c/li\u003e\n        \u003cli\u003e\u003ca href=\"#特征嵌入和集成\"\u003e特征嵌入和集成\u003c/a\u003e\n          \u003cul\u003e\n            \u003cli\u003e\u003ca href=\"#匹配全局特征\"\u003e匹配全局特征\u003c/a\u003e\u003c/li\u003e\n            \u003cli\u003e\u003ca href=\"#匹配局部特征\"\u003e匹配局部特征\u003c/a\u003e\u003c/li\u003e\n            \u003cli\u003e\u003ca href=\"#注意力机制\"\u003e注意力机制\u003c/a\u003e\u003c/li\u003e\n            \u003cli\u003e\u003ca href=\"#哈希嵌入\"\u003e哈希嵌入\u003c/a\u003e\u003c/li\u003e\n          \u003c/ul\u003e\n        \u003c/li\u003e\n        \u003cli\u003e\u003ca href=\"#模型微调\"\u003e模型微调\u003c/a\u003e\n          \u003cul\u003e\n            \u003cli\u003e\u003ca href=\"#有监督微调\"\u003e有监督微调\u003c/a\u003e\u003c/li\u003e\n            \u003cli\u003e\u003ca href=\"#无监督微调\"\u003e无监督微调\u003c/a\u003e\u003c/li\u003e\n          \u003c/ul\u003e\n        \u003c/li\u003e\n      \u003c/ul\u003e\n    \u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#开放资源\"\u003e开放资源\u003c/a\u003e\u003c/li\u003e\n  \u003c/ul\u003e\n\u003c/nav\u003e\u003c/div\u003e\n\n\n\u003cblockquote\u003e\n\u003cp\u003e本文主要参考自 \u003cem\u003eSIFT meets CNN: A decade survey of instance retrieval\u003c/em\u003e \u003csup id=\"fnref:1\"\u003e\u003ca href=\"#fn:1\" class=\"footnote-ref\" role=\"doc-noteref\"\u003e1\u003c/a\u003e\u003c/sup\u003e 和 \u003cem\u003eDeep Learning for Instance Retrieval: A Survey\u003c/em\u003e \u003csup id=\"fnref:2\"\u003e\u003ca href=\"#fn:2\" class=\"footnote-ref\" role=\"doc-noteref\"\u003e2\u003c/a\u003e\u003c/sup\u003e。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003e\u003cstrong\u003e基于内容的图像检索（Content-based image retrieval，CBIR）\u003c/strong\u003e，属于图像分析的一个研究领域。基于内容的图像检索目的是在给定查询图像的前提下，依据内容信息或指定查询标准，在图像数据库中搜索并查找出符合查询条件的相应图片 \u003csup id=\"fnref:3\"\u003e\u003ca href=\"#fn:3\" class=\"footnote-ref\" role=\"doc-noteref\"\u003e3\u003c/a\u003e\u003c/sup\u003e。\u003c/p\u003e\n\u003cp\u003e根据不同的视觉表示方法，可以将基于内容的图像检索方法分为两类：\u003cstrong\u003e基于 SIFT 特征的\u003c/strong\u003e和\u003cstrong\u003e基于深度学习的\u003c/strong\u003e。基于 SIFT 特征的方法分为如下 3 类：\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003e\u003cstrong\u003e使用小型编码本\u003c/strong\u003e：视觉词汇少于几千个，紧凑向量在降维和编码之前生成。\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003e使用中型编码本\u003c/strong\u003e：考虑到 BoW 的稀疏性和视觉词汇的低区分度，使用倒排索引和二进制签名方法。准确率和效率之间的权衡是该算法的主要影响因素。\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003e使用大型编码本\u003c/strong\u003e：考虑到 BoW 直方图的稀疏性和视觉词汇的高区分度，在算法中使用了倒排索引和存储友好型的签名方式。在编码本生成和编码中使用了类似的方法。\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003e基于深度学习的方法分为如下 3 类：\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003e\u003cstrong\u003e混合型方法\u003c/strong\u003e：图像块被多次输入到 CNN 中用于特征提取。编码与索引方法和基于 SIFT 的检索方法类似。\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003e使用预训练的模型\u003c/strong\u003e：通过在类似 ImageNet 的大数据集预训练的 CNN 模型进行单通道特征提取，同时使用紧凑编码和池化技术。\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003e使用微调的模型\u003c/strong\u003e：在图像与目标数据具有相似分布的训练集上对 CNN 模型进行微调。通过端到端的方法利用 CNN 模型进行单通道特征提取。这种视觉表示方法可以提升模型的区分能力。\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003e各类模型的异同点如下表所示：\u003c/p\u003e\n\u003ctable\u003e\n\u003cthead\u003e\n  \u003ctr\u003e\n    \u003cth colspan=\"2\"\u003e方法类型\u003c/th\u003e\n    \u003cth\u003e检测\u003c/th\u003e\n    \u003cth\u003e描述\u003c/th\u003e\n    \u003cth\u003e编码\u003c/th\u003e\n    \u003cth\u003e维度\u003c/th\u003e\n    \u003cth\u003e索引\u003c/th\u003e\n  \u003c/tr\u003e\n\u003c/thead\u003e\n\u003ctbody\u003e\n  \u003ctr\u003e\n    \u003ctd rowspan=\"3\"\u003e基于 SIFT\u003c/td\u003e\n    \u003ctd\u003e大编码本\u003c/td\u003e\n    \u003ctd rowspan=\"3\"\u003eDoG,\u003cbr/\u003eHessian-Affine,\u003cbr/\u003edense patches 等\u003c/td\u003e\n    \u003ctd rowspan=\"3\"\u003e局部不变\u003cbr/\u003e描述，例如：\u003cbr/\u003eSIFT\u003c/td\u003e\n    \u003ctd\u003eHard, soft\u003c/td\u003e\n    \u003ctd\u003e高\u003c/td\u003e\n    \u003ctd\u003e倒排索引\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003ctd\u003e中编码本\u003c/td\u003e\n    \u003ctd\u003eHard, soft, HE\u003c/td\u003e\n    \u003ctd\u003e中\u003c/td\u003e\n    \u003ctd\u003e倒排索引\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003ctd\u003e小编码本\u003c/td\u003e\n    \u003ctd\u003eVLAD, FV\u003c/td\u003e\n    \u003ctd\u003e低\u003c/td\u003e\n    \u003ctd\u003eANN 模型\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003ctd rowspan=\"3\"\u003e基于深度学习\u003c/td\u003e\n    \u003ctd\u003e混合模型\u003c/td\u003e\n    \u003ctd\u003e图像块\u003c/td\u003e\n    \u003ctd\u003eCNN 特征\u003c/td\u003e\n    \u003ctd\u003eVLAD, FV, pooling\u003c/td\u003e\n    \u003ctd\u003e不定\u003c/td\u003e\n    \u003ctd\u003eANN 模型\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003ctd\u003e预训练模型\u003c/td\u003e\n    \u003ctd colspan=\"2\"\u003e预训练 CNN 模型的列特征或全连接层\u003c/td\u003e\n    \u003ctd\u003eVLAD, FV, pooling\u003c/td\u003e\n    \u003ctd\u003e低\u003c/td\u003e\n    \u003ctd\u003eANN 模型\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003ctd\u003e微调模型\u003c/td\u003e\n    \u003ctd colspan=\"3\"\u003e从预训练 CNN 模型中端到端提取的全局特征\u003c/td\u003e\n    \u003ctd\u003e低\u003c/td\u003e\n    \u003ctd\u003eANN 模型\u003c/td\u003e\n  \u003c/tr\u003e\n\u003c/tbody\u003e\n\u003c/table\u003e\n\u003cp\u003e基于内容的图像检索里程碑节点如下图所示：\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"/images/cn/2022-01-27-content-based-image-retrieval/cbir-history.png\" alt=\"\"/\u003e\u003c/p\u003e\n\u003ch1 id=\"基于-sift-的图像检索\"\u003e基于 SIFT 的图像检索\u003c/h1\u003e\n\u003cp\u003e基于 SIFT 的图像检索流程如下图所示：\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"/images/cn/2022-01-27-content-based-image-retrieval/sift-and-dl-based-cbir-pipeline.png\" alt=\"\"/\u003e\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003e\u003cstrong\u003e局部特征提取\u003c/strong\u003e：假设有一个包含 \u003ccode\u003e$N$\u003c/code\u003e 张图片的集合 \u003ccode\u003e$\\mathcal{G}$\u003c/code\u003e。指定一个特征检测器，从稀疏的兴趣点或密集的图像块中提取局部描述符。我们用 \u003ccode\u003e$D$\u003c/code\u003e 表示局部描述符，\u003ccode\u003e$\\left\\{f_{i}\\right\\}_{i=i}^{D}, f_{i} \\in \\mathbb{R}^{p}$\u003c/code\u003e 表示图像中被检测的区域。\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003e编码本训练\u003c/strong\u003e：基于 SIFT 的方法需要离线训练一个编码本。编码本中的每个视觉词汇位于子空间的中心，称为 Voronoi Cell。一个更大的密码本对应一个更精细的划分，进而产生更有区分性的视觉词汇，反之亦然。假设存在一个用无标注数据集训练的局部描述符池 \u003ccode\u003e$\\mathcal{F} \\equiv\\left\\{f_{i}\\right\\}_{i=1}^{M}$\u003c/code\u003e，一个基准方法是利用 K-means 将 \u003ccode\u003e$M$\u003c/code\u003e 个点聚类成 \u003ccode\u003e$K$\u003c/code\u003e 个簇，这 \u003ccode\u003e$K$\u003c/code\u003e 个视觉词汇则构成了大小为 \u003ccode\u003e$K$\u003c/code\u003e 的编码本。\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003e特征编码\u003c/strong\u003e：一个局部描述符 \u003ccode\u003e$f_{i} \\in \\mathbb{R}^{p}$\u003c/code\u003e 通过特征编码过程 \u003ccode\u003e$f_{i} \\rightarrow g_{i}$\u003c/code\u003e 被映射到嵌入特征 \u003ccode\u003e$g_{i} \\in \\mathbb{R}^{l}$\u003c/code\u003e。当使用 K-means 聚类时，\u003ccode\u003e$f_i$\u003c/code\u003e 可以根据其与视觉词汇的距离进行编码。\u003c/li\u003e\n\u003c/ol\u003e\n\u003ch2 id=\"局部特征提取\"\u003e局部特征提取\u003c/h2\u003e\n\u003ch3 id=\"harris-角点检测\"\u003eHarris 角点检测\u003c/h3\u003e\n\u003cp\u003e特征点在图像中一般有具体的坐标，并具有某些数学特征，如局部最大或最小灰度、以及某些梯度特征等。可以通过加权的差值平方和来形式化的比较一个图像的两个区块：\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003e$$ \\label{eq:e_u_v} E\\left(u, v\\right) = \\sum_{x, y} w\\left(x, y\\right)\\left[I\\left(x + u, y + v\\right)-I\\left(x, y\\right)\\right]^{2} $$\u003c/code\u003e\u003c/p\u003e\n\u003cp\u003e其中，\u003ccode\u003e$I$\u003c/code\u003e 为待比较的图像，\u003ccode\u003e$\\left(u, v\\right)$\u003c/code\u003e 为平移向量，\u003ccode\u003e$w\\left(x, y\\right)$\u003c/code\u003e 是在空间上变化的权重。\u003c/p\u003e\n\u003cp\u003e根据泰勒展开，窗口平移后图像的一阶近似为：\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003e$$ \\begin{aligned} I(x + u, y + v) \u0026amp;= I(x, y) + I_{x}(x, y) u + I_{y}(x, y) v + O\\left(u^2, v^2\\right) \\\\ \u0026amp; \\approx I(x, y) + I_{x}(x, y) u + I_{y}(x, y) v \\end{aligned} $$\u003c/code\u003e\u003c/p\u003e\n\u003cp\u003e其中，\u003ccode\u003e$I_{x}$\u003c/code\u003e 和 \u003ccode\u003e$I_{y}$\u003c/code\u003e 是图像 \u003ccode\u003e$I(x, y)$\u003c/code\u003e 的偏导数，那么式 \u003ccode\u003e$\\ref{eq:e_u_v}$\u003c/code\u003e 可以简化为：\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003e$$ \\begin{aligned} E\\left(u, v\\right) \u0026amp; \\approx \\sum_{x, y} w(x, y)\\left[I_{x}(x, y) u + I_{y}(x, y) v\\right]^{2} \\\\ \u0026amp;=\\left[\\begin{array}{ll} u \u0026amp; v \\end{array}\\right] M(x, y)\\left[\\begin{array}{c} u \\\\ v \\end{array}\\right] \\end{aligned} $$\u003c/code\u003e\u003c/p\u003e\n\u003cp\u003e其中，\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003e$$ M=\\sum w(x, y)\\left[\\begin{array}{cc} I_{x}^{2} \u0026amp; I_{x} I_{y} \\\\ I_{x} I_{y} \u0026amp; I_{y}^{2} \\end{array}\\right] $$\u003c/code\u003e\u003c/p\u003e\n\u003cp\u003e通过求解 \u003ccode\u003e$M$\u003c/code\u003e 的特征向量，我们可以获得 \u003ccode\u003e$E(u, v)$\u003c/code\u003e 最大和最小增量的方向，对应的特征值则为实际的增量值。Harris 角点检测方法对每一个窗口定义了一个 \u003ccode\u003e$R$\u003c/code\u003e 值：\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003e$$ R = \\operatorname{det} M - k (\\operatorname{trace} M)^{2} $$\u003c/code\u003e\u003c/p\u003e\n\u003cp\u003e其中，\u003ccode\u003e$\\operatorname{det} M = \\lambda_1 \\lambda_2$\u003c/code\u003e 是矩阵 \u003ccode\u003e$M$\u003c/code\u003e 的行列式，\u003ccode\u003e$\\operatorname{trace} M = \\lambda_1 + \\lambda_2$\u003c/code\u003e 是矩阵 \u003ccode\u003e$M$\u003c/code\u003e 的迹，\u003ccode\u003e$\\lambda_1$\u003c/code\u003e 和 \u003ccode\u003e$\\lambda_2$\u003c/code\u003e 为矩阵 \u003ccode\u003e$M$\u003c/code\u003e 特征值，\u003ccode\u003e$k$\u003c/code\u003e 为经验常数，通常取值为 \u003ccode\u003e$[0.04, 0.06]$\u003c/code\u003e。特征值决定了当前区域是一个角、边还是平坦区域。\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003e当 \u003ccode\u003e$\\lvert R \\rvert$\u003c/code\u003e 比较小时，\u003ccode\u003e$\\lambda_1$\u003c/code\u003e 和 \u003ccode\u003e$\\lambda_2$\u003c/code\u003e 均比较小，则区域为平坦区域。\u003c/li\u003e\n\u003cli\u003e当 \u003ccode\u003e$R \u0026lt; 0$\u003c/code\u003e 时，\u003ccode\u003e$\\lambda_1 \\gg \\lambda_2$\u003c/code\u003e 或 \u003ccode\u003e$\\lambda_1 \\ll \\lambda_2$\u003c/code\u003e，则区域为边。\u003c/li\u003e\n\u003cli\u003e当 \u003ccode\u003e$R$\u003c/code\u003e 较大时，\u003ccode\u003e$\\lambda_1$\u003c/code\u003e 和 \u003ccode\u003e$\\lambda_2$\u003c/code\u003e 都很大且 \u003ccode\u003e$\\lambda_1 \\sim \\lambda_2$\u003c/code\u003e，则区域为角。\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003e\u003cimg src=\"/images/cn/2022-01-27-content-based-image-retrieval/harris-corner-detector-eigen-values.png\" alt=\"\"/\u003e\u003c/p\u003e\n\u003cp\u003eHarris 角点检测方法具备如下性质：\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003e\u003cstrong\u003e\u003ccode\u003e$k$\u003c/code\u003e 影响被检测角点数量\u003c/strong\u003e：增大 \u003ccode\u003e$k$\u003c/code\u003e 将减小 \u003ccode\u003e$R$\u003c/code\u003e，从而减少被检测角点的数量，反之亦然。\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003e对亮度和对比度的变化不敏感\u003c/strong\u003e：Harris 角点检测对图像进行微分运算，微分运算对图像密度的拉升或收缩和对亮度的抬高或下降不敏感。\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003e具有旋转不变性\u003c/strong\u003e：Harris 角点检测算子使用的是角点附近区域的灰度二阶矩矩阵。而二阶矩矩阵可以表示成一个椭圆，椭圆的长短轴正是二阶矩矩阵特征值平方根的倒数。当特征椭圆转动时，特征值并不发生变化，所以判断角点的 \u003ccode\u003e$R$\u003c/code\u003e 值也不发生变化。\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003e不具有尺度不变性\u003c/strong\u003e：如下图所示，当左图被缩小时，在检测窗口尺寸不变的前提下，在窗口内所包含图像的内容是完全不同的。左侧的图像可能被检测为边缘或曲线，而右侧的图像则可能被检测为一个角点。\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003e\u003cimg src=\"/images/cn/2022-01-27-content-based-image-retrieval/harris-corner-detector-scale-variant.png\" alt=\"\"/\u003e\u003c/p\u003e\n\u003cp\u003e利用 Harris 方法检测角点的效果如下图所示（代码详见\u003ca href=\"https://github.com/leovan/leovan.me/tree/main/static/codes/cn/2022-01-27-content-based-image-retrieval/harris-corner-detector.py\"\u003e这里\u003c/a\u003e）：\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"/images/cn/2022-01-27-content-based-image-retrieval/blox-raw-and-harris-corner.png\" alt=\"\"/\u003e\u003c/p\u003e\n\u003ch3 id=\"尺度空间极值检测\"\u003e尺度空间极值检测\u003c/h3\u003e\n\u003cp\u003e为了使检测到的特征点具备尺度不变性，使能够在不同尺度检测到尽可能完整的特征点或关键点，则需要借助尺度空间理论来描述图像的多尺度特征。相关研究证明高斯卷积核是实现尺度变换的唯一线性核。因此可用图像的高斯金字塔表示尺度空间，而且尺度规范化的 LoG 算子具有尺度不变性，在具体实现中，可用高斯差分（ DoG）算子近似 LoG 算子，在构建的尺度空间中检测稳定的特征点。\u003c/p\u003e\n\u003cp\u003e在图像处理模型中引入一个被视为尺度的参数，通过连续变化尺度参数获取多尺度下的空间表示序列，对这些空间序列提取某些特征描述子，抽象成特征向量，实现图像在不同尺度或不同分辨率的特征提取。尺度空间中各尺度图像的模糊程度逐渐变大，模拟人在由近到远时目标在人眼视网膜上的成像过程。而且尺度空间需满足一定的不变性，包括图像灰度不变性、对比度不变性、平移不变性、尺度不变性以及旋转不变性等。在某些情况下甚至要求尺度空间算子具备仿射不变性。\u003c/p\u003e\n\u003cp\u003e图像的尺度空间 \u003ccode\u003e$L(x, y, \\sigma)$\u003c/code\u003e 可以定义为图像 \u003ccode\u003e$I(x, y)$\u003c/code\u003e 与可变尺度的高斯函数 \u003ccode\u003e$G(x, y, \\sigma)$\u003c/code\u003e 的卷积：\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003e$$ \\begin{aligned} L(x, y, \\sigma) \u0026amp;= G(x, y, \\sigma) * I(x, y) \\\\ G(x, y, \\sigma) \u0026amp;= \\frac{1}{2 \\pi \\sigma^{2}} e^{-\\frac{x^{2}+y^{2}}{2 \\sigma^{2}}} \\end{aligned} $$\u003c/code\u003e\u003c/p\u003e\n\u003cp\u003e其中，\u003ccode\u003e$\\sigma$\u003c/code\u003e 是尺度变化因子，大小决定图像的平滑程度，值越大图像越模糊。大尺度对应图像的概貌特征，小尺度对应图像的细节特征。一般根据 \u003ccode\u003e$3 \\sigma$\u003c/code\u003e 原则，高斯核矩阵的大小设为 \u003ccode\u003e$(6 \\sigma+1) \\times(6 \\sigma+1)$\u003c/code\u003e。\u003c/p\u003e\n\u003cp\u003e尺度归一化的高斯拉普拉斯函数 \u003ccode\u003e$\\sigma^{2} \\nabla^{2} G$\u003c/code\u003e 可以提取稳定的特征，高斯差分函数（Difference-of-Gaussian，DoG）\n\u003csup id=\"fnref:4\"\u003e\u003ca href=\"#fn:4\" class=\"footnote-ref\" role=\"doc-noteref\"\u003e4\u003c/a\u003e\u003c/sup\u003e 与尺度归一化的高斯拉普拉斯函数近似：\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003e$$ \\begin{aligned} LoG \u0026amp;= \\sigma^{2} \\nabla^{2} G \\\\ DoG \u0026amp;= G(x, y, \\sigma_2) - G(x, y, \\sigma_1) \\end{aligned} $$\u003c/code\u003e\u003c/p\u003e\n\u003cp\u003e利用差分近似替代微分，有：\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003e$$ \\sigma \\nabla^{2} G=\\frac{\\partial G}{\\partial \\sigma} \\approx \\frac{G(x, y, k \\sigma)-G(x, y, \\sigma)}{k \\sigma-\\sigma} $$\u003c/code\u003e\u003c/p\u003e\n\u003cp\u003e因此有：\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003e$$ G(x, y, k \\sigma)-G(x, y, \\sigma) \\approx(k-1) \\sigma^{2} \\nabla^{2} G $$\u003c/code\u003e\u003c/p\u003e\n\u003cp\u003e其中，\u003ccode\u003e$k - 1$\u003c/code\u003e 是个常数，不影响极值点的检测，DoG 和 LoG 的对比图如下：\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"/images/cn/2022-01-27-content-based-image-retrieval/log-dog.png\" alt=\"\"/\u003e\u003c/p\u003e\n\u003cp\u003e在使用高斯金字塔构建尺度空间时，主要包括两部分：对图像做下采样，以及对图像做不同尺度的高斯模糊。对图像做降采样得到不同尺度的图像，也就是不同的组（Octave），后面的 Octave（高一层的金字塔）为上一个 Octave（低一层的金字塔）下采样得到，图像宽高分别为上一个 Octave 的 1/2 。每组（Octave）又分为若干层（Interval），通过对图像做不同尺度的高斯模糊得到，如下图所示：\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"/images/cn/2022-01-27-content-based-image-retrieval/dog-pyramid.png\" alt=\"\"/\u003e\u003c/p\u003e\n\u003cp\u003e在由图像金字塔表示的尺度空间中，Octave 由原始图像的大小和塔顶图像的大小决定：\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003e$$ Octave = \\log_2 \\left(\\min\\left(w_b, h_b\\right)\\right) - \\log_2 \\left(\\min\\left(w_t, h_t\\right)\\right) $$\u003c/code\u003e\u003c/p\u003e\n\u003cp\u003e其中，\u003ccode\u003e$w_b$\u003c/code\u003e 和 \u003ccode\u003e$h_b$\u003c/code\u003e 分别为原始图像的宽和高，\u003ccode\u003e$w_t$\u003c/code\u003e 和 \u003ccode\u003e$h_t$\u003c/code\u003e 分别为金字塔顶部图像的宽和高。\u003c/p\u003e\n\u003cp\u003e尺度参数 \u003ccode\u003e$\\sigma$\u003c/code\u003e 的取值与金字塔的组数和层数相关，设第一组第一层的尺度参数取值为 \u003ccode\u003e$\\sigma \\left(1, 1\\right)$\u003c/code\u003e，一般取值为 \u003ccode\u003e$1.6$\u003c/code\u003e，则第 \u003ccode\u003e$m$\u003c/code\u003e 组第 \u003ccode\u003e$n$\u003c/code\u003e 层的取值为：\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003e$$ \\sigma(m, n)=\\sigma\\left(1, 1\\right) \\cdot 2^{m-1} \\cdot k^{n-1}, \\quad k=2^{1/S} $$\u003c/code\u003e\u003c/p\u003e\n\u003cp\u003e其中，\u003ccode\u003e$S$\u003c/code\u003e 为金字塔中每组的有效层数，\u003ccode\u003e$k=2^{1/S}$\u003c/code\u003e 是变化尺度因子。在检测极值点前对原始图像的高斯平滑会导致图像高频信息的丢失，所以在建立尺度空间之前，先利用双线性插值将图像扩大为原来的两倍，以保留原始图像信息，增加特征点数量。\u003c/p\u003e\n\u003cp\u003e为了寻找 DoG 尺度空间的极值点，每一个采样点要和其所有邻域像素相比较，如下图所示，中间检测点与其同尺度的 8 个邻域像素点以及上下相邻两层对应的 9×2 个像素点一共 26 个点作比较，以确保在图像空间和尺度空间都能检测到极值点。一个像素点如果在 DoG 尺度空间本层及上下两层的 26 邻域中取得最大或最小值时，就可以认为该点是图像在该尺度下的一个特征点。\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"/images/cn/2022-01-27-content-based-image-retrieval/dog-extremum.png\" alt=\"\"/\u003e\u003c/p\u003e\n\u003cp\u003e在极值比较的过程中，每一组差分图像的首末两层是无法比较的，为了在每组中检测 \u003ccode\u003e$S$\u003c/code\u003e 个尺度的极值点，则 DoG 金字塔每组须有 \u003ccode\u003e$S+2$\u003c/code\u003e 层图像，高斯金字塔每组须有 \u003ccode\u003e$S+3$\u003c/code\u003e 层图像。另外，在下采样时，高斯金字塔中后一组（Octive）的底层图像是由前一组图像的倒数第 3 张图像（\u003ccode\u003e$S+1$\u003c/code\u003e 层）隔点采样得到。这样也保证了尺度变化的连续性，如下图所示：\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"/images/cn/2022-01-27-content-based-image-retrieval/dog-scale-varation.png\" alt=\"\"/\u003e\u003c/p\u003e\n\u003ch3 id=\"关键点定位\"\u003e关键点定位\u003c/h3\u003e\n\u003cp\u003e在 DoG 尺度空间检测到的极值点是离散的，通过拟合三元二次函数可以精确定位关键点的位置和尺度，达到亚像素精度。同时去除低对比度的检测点和不稳定的边缘点（因为 DoG 算子会产生较强的边缘响应），以增强匹配稳定性，提高抗噪声能力。\u003c/p\u003e\n\u003cp\u003e离散空间的极值点并不是真正的极值点，如下图所示一维函数离散空间得到的极值点与连续空间极值点的差别。利用已知的离散空间点插值得到的连续空间极值点的方法叫做子像素插值（Sub-pixel Interpolation）。\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"/images/cn/2022-01-27-content-based-image-retrieval/extremum-points.png\" alt=\"\"/\u003e\u003c/p\u003e\n\u003cp\u003e假设在尺度为 \u003ccode\u003e$\\sigma$\u003c/code\u003e 的尺度图像 \u003ccode\u003e$D(x, y, \\sigma)$\u003c/code\u003e 检测到一个局部极值点，空间位置为 \u003ccode\u003e$(x, y, \\sigma)$\u003c/code\u003e。根据上图直观可知，它只是离散情况下的极值点，而连续情况下，极值点可能坐落在 \u003ccode\u003e$(x, y, \\sigma)$\u003c/code\u003e 附近，设连续情况的正真极值点偏离 \u003ccode\u003e$(x, y, \\sigma)$\u003c/code\u003e 的坐标为 \u003ccode\u003e$(\\Delta x, \\Delta y, \\Delta \\sigma)$\u003c/code\u003e。则对 \u003ccode\u003e$D(x + \\Delta x, y + \\Delta y, \\sigma + \\Delta \\sigma)$\u003c/code\u003e 在 \u003ccode\u003e$D(x, y, \\sigma)$\u003c/code\u003e 处进行泰勒展开（保留二阶），有：\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003e$$ \\begin{split} \u0026amp; \\ D(x+\\Delta x, y+\\Delta y, \\sigma+\\Delta \\sigma) \\\\ \\approx \u0026amp; \\ D(x, y, \\sigma)+\\left[\\begin{array}{lll} \\frac{\\partial D}{\\partial x} \u0026amp; \\frac{\\partial D}{\\partial y} \u0026amp; \\frac{\\partial D}{\\partial \\sigma} \\end{array}\\right]\\left[\\begin{array}{c} \\Delta x \\\\ \\Delta y \\\\ \\Delta \\sigma \\end{array}\\right] \\\\ \u0026amp; +\\frac{1}{2}\\left[\\begin{array}{lll} \\Delta x \u0026amp; \\Delta y \u0026amp; \\Delta \\sigma \\end{array}\\right]\\left[\\begin{array}{lll} \\frac{\\partial D^{2}}{\\partial x^{2}} \u0026amp; \\frac{\\partial D^{2}}{\\partial x \\partial y} \u0026amp; \\frac{\\partial^{2} D}{\\partial x \\partial \\sigma} \\\\ \\frac{\\partial D^{2}}{\\partial y \\partial x} \u0026amp; \\frac{\\partial D^{2}}{\\partial y^{2}} \u0026amp; \\frac{\\partial D^{2}}{\\partial y \\partial \\sigma} \\\\ \\frac{\\partial D^{2}}{\\partial \\sigma \\partial x} \u0026amp; \\frac{\\partial D^{2}}{\\partial \\sigma \\partial y} \u0026amp; \\frac{\\partial D^{2}}{\\partial \\sigma^{2}} \\end{array}\\right]\\left[\\begin{array}{c} \\Delta x \\\\ \\Delta y \\\\ \\Delta \\sigma \\end{array}\\right] \\end{split} $$\u003c/code\u003e\u003c/p\u003e\n\u003cp\u003e将上式写成矢量形式如下：\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003e$$ D(X+\\Delta X)=D(X)+\\frac{\\partial D^{\\top}(X)}{\\partial X} \\Delta X+\\frac{1}{2} \\Delta X^{\\top} \\frac{\\partial^{2} D(X)}{\\partial X^{2}} \\Delta X $$\u003c/code\u003e\u003c/p\u003e\n\u003cp\u003e上式对 \u003ccode\u003e$\\Delta X$\u003c/code\u003e 求导，并令其等于零，可以得到极值点的偏移量：\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003e$$ \\Delta X=-\\frac{\\partial^{2} D(X)}{\\partial X^{2}}^{-1} \\frac{\\partial D^{\\top}(X)}{\\partial X} $$\u003c/code\u003e\u003c/p\u003e\n\u003cp\u003e通过多次迭代（Lowe SIFT 算法里最多迭代 5 次），得到最终候选点的精确位置与尺度 \u003ccode\u003e$\\hat{X}$\u003c/code\u003e。当超出所设定的迭代次数或者超出图像边界的范围时应删除该点，如果 \u003ccode\u003e$\\lvert D(\\hat{X}) \\rvert$\u003c/code\u003e 小于某个阈值则将该极值点也应该删除。\u003c/p\u003e\n\u003cp\u003e高斯差分函数有较强的边缘响应，对于比较像边缘的点应该去除掉。这样的点的特征为在某个方向有较大主曲率，而在垂直的方向主曲率很小。主曲率可通过一个 \u003ccode\u003e$2 \\times 2$\u003c/code\u003e 的 Hessian 矩阵求出：\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003e$$ H=\\left[\\begin{array}{ll} D_{x x} \u0026amp; D_{x y} \\\\ D_{x y} \u0026amp; D_{y y} \\end{array}\\right] $$\u003c/code\u003e\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003e$D$\u003c/code\u003e 的主曲率和 \u003ccode\u003e$H$\u003c/code\u003e 的特征值成正比，令 \u003ccode\u003e$\\alpha$\u003c/code\u003e 为较大的特征值，\u003ccode\u003e$\\beta$\u003c/code\u003e 为较小的特征值，\u003ccode\u003e$\\alpha = \\gamma\\beta$\u003c/code\u003e，则有：\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003e$$ \\begin{aligned} \\operatorname{trace}(H) \u0026amp;= D_{x x}+D_{y y}=\\alpha+\\beta \\\\ \\operatorname{det}(H) \u0026amp;= D_{x x} D_{y y}-\\left(D_{x y}\\right)^{2}=\\alpha \\beta \\\\ \\frac{\\operatorname{trace}(H)^{2}}{\\operatorname{det}(H)} \u0026amp;= \\frac{(\\alpha+\\beta)^{2}}{\\alpha \\beta}=\\frac{(\\gamma+1)^{2}}{\\gamma} \\end{aligned} $$\u003c/code\u003e\u003c/p\u003e\n\u003cp\u003e上式的结果只与两个特征值的比例有关，而与具体特征值无关。当两个特征值相等时，\u003ccode\u003e$\\dfrac{(\\gamma+1)^{2}}{\\gamma}$\u003c/code\u003e 的值最小，随着 \u003ccode\u003e$\\gamma$\u003c/code\u003e 的增加，\u003ccode\u003e$\\dfrac{(\\gamma+1)^{2}}{\\gamma}$\u003c/code\u003e 的值也增加。设定一个阈值 \u003ccode\u003e$\\gamma_t$\u003c/code\u003e（Lowe SIFT 算法里最 \u003ccode\u003e$\\gamma_t = 10$\u003c/code\u003e），若：\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003e$$ \\frac{\\operatorname{trace}(H)^{2}}{\\operatorname{det}(H)}\u0026lt;\\frac{\\left(\\gamma_{t}+1\\right)^{2}}{\\gamma_{t}} $$\u003c/code\u003e\u003c/p\u003e\n\u003cp\u003e则认为该关键点不是边缘，否则予以剔除。\u003c/p\u003e\n\u003ch3 id=\"关键点方向指定\"\u003e关键点方向指定\u003c/h3\u003e\n\u003cp\u003e为了使特征描述符具有旋转不变性，需要利用关键点邻域像素的梯度方向分布特性为每个关键点指定方向参数。对于在 DoG 金字塔中检测出的关键点，在其邻近高斯金字塔图像的 3𝜎 邻域窗口内计算其梯度幅值和方向，公式如下：\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003e$$ \\begin{aligned} \u0026amp;m(x, y)=\\sqrt{(L(x+1, y)-L(x-1, y))^{2}+(L(x, y+1)-L(x, y-1))^{2}} \\\\ \u0026amp;\\theta(x, y)=\\arctan ((L(x, y+1)-L(x, y-1)) /(L(x+1, y)-L(x-1, y))) \\end{aligned} $$\u003c/code\u003e\u003c/p\u003e\n\u003cp\u003e其中，\u003ccode\u003e$L$\u003c/code\u003e 为关键点所在尺度空间的灰度值，\u003ccode\u003e$m(x, y)$\u003c/code\u003e 为梯度幅值，\u003ccode\u003e$\\theta(x, y)$\u003c/code\u003e 为梯度方向。对于模值 \u003ccode\u003e$m(x, y)$\u003c/code\u003e 按照 \u003ccode\u003e$\\theta = 1.5 \\theta_{oct}$\u003c/code\u003e 邻域窗口为 \u003ccode\u003e$3 \\theta$\u003c/code\u003e 的高斯分布加权。在完成关键点的梯度计算后，使用直方图统计邻域内像素的梯度和方向，梯度直方图将梯度方向 \u003ccode\u003e$\\left(0,360^{\\circ}\\right)$\u003c/code\u003e 分为 36 个柱（bins），如下图所示（为简化，图中只画了八个方向的直方图），直方图的峰值所在的方向代表了该关键点的主方向。\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"/images/cn/2022-01-27-content-based-image-retrieval/orientation-assignment.png\" alt=\"\"/\u003e\u003c/p\u003e\n\u003cp\u003e梯度方向直方图的峰值代表了该特征点处邻域梯度的主方向，为了增强鲁棒性，保留峰值大于主方向峰值 80% 的方向作为该关键点的辅方向。因此，在相同位置和尺度，将会有多个关键点被创建但方向不同，这可以提高特征点匹配的稳定性。\u003c/p\u003e\n\u003ch3 id=\"关键点特征描述符\"\u003e关键点特征描述符\u003c/h3\u003e\n\u003cp\u003e在经过上述流程后，检测到的每个关键点有三个信息：位置、尺度以及方向，接下来就是为每个关键点建立一个描述符，用一组向量将这个关键点描述出来。这个特征描述符不但包括关键点，还包括其邻域像素的贡献，而且需具备较高的独特性和稳定性，以提高特征点匹配的准确率。SIFT 特征描述符是关键点邻域梯度经过高斯加权后统计结果的一种表示。通过对关键点周围图像区域分块，计算块内的梯度直方图，得到表示局部特征点信息的特征向量。例如在尺度空间 \u003ccode\u003e$4 \\times 4$\u003c/code\u003e 的窗口内统计 8 个方向的梯度直方图，生成一个 \u003ccode\u003e$4 \\times 4 \\times 8 = 128$\u003c/code\u003e 维的表示向量。\u003c/p\u003e\n\u003cp\u003e特征描述符与特征点所在的尺度有关，因此，对梯度的求取应在特征点对应的高斯图像上进行。将关键点附近的邻域划分为 \u003ccode\u003e$d \\times d$\u003c/code\u003e 个子区域 \u003ccode\u003e$(d = 4)$\u003c/code\u003e，每个子区域做为一个种子点，每个种子点有 8 个方向。每个子区域的大小与关键点方向分配时相同，即每个区域边长为 \u003ccode\u003e$3 \\theta_{oct}$\u003c/code\u003e。考虑到实际计算时需要进行三线性插值，采样窗口区域半边长设为 \u003ccode\u003e$\\dfrac{3 \\theta_{oct} (d + 1)}{2}$\u003c/code\u003e，又考虑到旋转因素（坐标轴旋转至关键点主方向），这个值需要乘以 \u003ccode\u003e$\\sqrt{2}$\u003c/code\u003e，最后所需的图像区域半径为：\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003e$$ \\text{radius} = \\dfrac{3 \\sigma_{oct} \\times \\sqrt{2} \\times(d+1)}{2} $$\u003c/code\u003e\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"/images/cn/2022-01-27-content-based-image-retrieval/sampling-area.png\" alt=\"\"/\u003e\u003c/p\u003e\n\u003cp\u003e将坐标轴旋转至关键点主方向，以确保旋转不变性。如下图所示：\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"/images/cn/2022-01-27-content-based-image-retrieval/rotate-coordinate.png\" alt=\"\"/\u003e\u003c/p\u003e\n\u003cp\u003e旋转后采样点的新坐标为：\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003e$$ \\left[\\begin{array}{l} x^{\\prime} \\\\ y^{\\prime} \\end{array}\\right]=\\left[\\begin{array}{cc} \\cos \\theta \u0026amp; -\\sin \\theta \\\\ \\sin \\theta \u0026amp; \\cos \\theta \\end{array}\\right]\\left[\\begin{array}{l} x \\\\ y \\end{array}\\right] \\quad(x, y \\in[\\text {-radius, radius }]) $$\u003c/code\u003e\u003c/p\u003e\n\u003cp\u003e在图像半径区域内对每个像素点求其梯度幅值和方向，并对每个梯度幅值乘以高斯权重：\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003e$$ w=m(u+x, b+v) \\times e^{-\\frac{x^{\\prime 2}+y^{\\prime 2}}{2 \\sigma_{w}^{2}}} $$\u003c/code\u003e\u003c/p\u003e\n\u003cp\u003e其中，\u003ccode\u003e$u$\u003c/code\u003e 和 \u003ccode\u003e$v$\u003c/code\u003e 表示关键点在高斯金字塔图中的位置坐标，\u003ccode\u003e$x$\u003c/code\u003e 和 \u003ccode\u003e$y$\u003c/code\u003e 为旋转坐标轴至关键点主方向\u003cstrong\u003e之前\u003c/strong\u003e相对关键点的偏移量，\u003ccode\u003e$x^{\\prime}$\u003c/code\u003e 和 \u003ccode\u003e$y^{\\prime}$\u003c/code\u003e 为旋转坐标轴至关键点主方向\u003cstrong\u003e之后\u003c/strong\u003e相对关键点的偏移量。\u003c/p\u003e\n\u003cp\u003e将旋转后的采样点坐标分配到对应的子区域，计算影响子区域的采样点的梯度和方向，分配到 8 个方向上。旋转后的采样点 \u003ccode\u003e$(x^{\\prime}, y^{\\prime})$\u003c/code\u003e 落在子区域的下标为：\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003e$$ \\left[\\begin{array}{l} x_{d} \\\\ y_{d} \\end{array}\\right]=\\frac{1}{3 \\sigma_{o c t}}\\left[\\begin{array}{c} x^{\\prime} \\\\ y^{\\prime} \\end{array}\\right]+\\frac{d}{2}, \\quad x_{d}, y_{d} \\in[0, d] $$\u003c/code\u003e\u003c/p\u003e\n\u003cp\u003e将采样点在子区域的下标进行三线性插值，根据三维坐标计算与周围子区域的距离，按距离远近计算权重，最终累加在相应子区域的相关方向上的权值为：\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003e$$ w^{\\prime} = w \\cdot\\left[d_{r}^{i} \\cdot\\left(1-d_{r}\\right)^{1-i}\\right] \\cdot\\left[d_{c}^{j} \\cdot\\left(1-d_{c}^{1-j}\\right)\\right] \\cdot\\left[d_{o}^{k} \\cdot\\left(1-d_{o}\\right)^{1-k}\\right] $$\u003c/code\u003e\u003c/p\u003e\n\u003cp\u003e其中，\u003ccode\u003e$i, j, k$\u003c/code\u003e 取值为 0 或 1，\u003ccode\u003e$d_r, 1- d_r$\u003c/code\u003e 是对相邻两行的贡献因子，\u003ccode\u003e$d_c, 1- d_c$\u003c/code\u003e 是对相邻两列的贡献因子，\u003ccode\u003e$d_o, 1- d_o$\u003c/code\u003e 是对相邻两个方向的贡献因子。插值计算每个种子点八个方向的梯度，最终结果如下图所示：\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"/images/cn/2022-01-27-content-based-image-retrieval/gradient-hist.png\" alt=\"\"/\u003e\u003c/p\u003e\n\u003cp\u003e得到 128 维特征向量后，为了去除光照变化的影响，需要对向量进行归一化处理。非线性光照变化仍可能导致梯度幅值的较大变化，但对梯度方向影响较小。因此对于超过阈值 0.2 的梯度幅值设为 0.2 ，然后再进行一次归一化。最后将特征向量按照对应高斯金字塔的尺度大小排序。至此，SIFT 特征描述符形成。\u003c/p\u003e\n\u003cp\u003e利用 SIFT 方法检测关键点的效果如下图所示（代码详见\u003ca href=\"https://github.com/leovan/leovan.me/tree/main/static/codes/cn/2022-01-27-content-based-image-retrieval/sift-key-points.py\"\u003e这里\u003c/a\u003e）：\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"/images/cn/2022-01-27-content-based-image-retrieval/home-raw-and-sift-key-points.png\" alt=\"\"/\u003e\u003c/p\u003e\n\u003cp\u003eSIFT 方法的优点如下：\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003e\u003cstrong\u003e局部\u003c/strong\u003e：SIFT 特征是图像的局部特征，其对旋转、尺度缩放、亮度变化保持不变性，对视角变化、仿射变换、噪声也保持一定程度的稳定性。\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003e独特\u003c/strong\u003e：信息量丰富，适用于在海量特征数据库中进行快速、准确的匹配。\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003e大量\u003c/strong\u003e：即使少数的几个物体也可以产生大量的 SIFT 特征向量。\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003e高效\u003c/strong\u003e：经优化的 SIFT 匹配算法甚至可以达到实时的要求。\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003e可扩展\u003c/strong\u003e：可以很方便的与其他形式的特征向量进行联合。\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003eSIFT 方法的缺点如下：\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003e默认算法的实时性不高。\u003c/li\u003e\n\u003cli\u003e部分情况下特征点较少。\u003c/li\u003e\n\u003cli\u003e对边缘光滑的目标无法准确提取特征点。\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003e对于 SIFT 的改进可以参考 SURF \u003csup id=\"fnref:5\"\u003e\u003ca href=\"#fn:5\" class=\"footnote-ref\" role=\"doc-noteref\"\u003e5\u003c/a\u003e\u003c/sup\u003e 和 CSIFT \u003csup id=\"fnref:6\"\u003e\u003ca href=\"#fn:6\" class=\"footnote-ref\" role=\"doc-noteref\"\u003e6\u003c/a\u003e\u003c/sup\u003e。\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e本小节参考：\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003e\u003ca href=\"https://docs.opencv.org/5.x/dc/d0d/tutorial_py_features_harris.html\"\u003ehttps://docs.opencv.org/5.x/dc/d0d/tutorial_py_features_harris.html\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://docs.opencv.org/5.x/da/df5/tutorial_py_sift_intro.html\"\u003ehttps://docs.opencv.org/5.x/da/df5/tutorial_py_sift_intro.html\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://lsxiang.github.io/Journey2SLAM/computer_vision/Harris/\"\u003ehttps://lsxiang.github.io/Journey2SLAM/computer_vision/Harris/\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://lsxiang.github.io/Journey2SLAM/computer_vision/SIFT/\"\u003ehttps://lsxiang.github.io/Journey2SLAM/computer_vision/SIFT/\u003c/a\u003e\u003c/li\u003e\n\u003c/ol\u003e\n\u003c/blockquote\u003e\n\u003ch2 id=\"特征编码\"\u003e特征编码\u003c/h2\u003e\n\u003ch3 id=\"bof\"\u003eBoF\u003c/h3\u003e\n\u003cp\u003eBoF（Bag of Features, Bag of Visual Words）\u003csup id=\"fnref:7\"\u003e\u003ca href=\"#fn:7\" class=\"footnote-ref\" role=\"doc-noteref\"\u003e7\u003c/a\u003e\u003c/sup\u003e \u003csup id=\"fnref:8\"\u003e\u003ca href=\"#fn:8\" class=\"footnote-ref\" role=\"doc-noteref\"\u003e8\u003c/a\u003e\u003c/sup\u003e 借鉴了文本中的 BoW（Bag of Words）模型的思路。从图像抽象出很多具有代表性的「关键词」，形成一个字典，再统计每张图片中出现的「关键词」频率，得到图片的特征向量。BoF 算法的流程如下：\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003e\u003cstrong\u003e局部特征提取\u003c/strong\u003e：利用上文中的 SIFT 等类似方法提取图片的局部特征，每个图片提取的特征数量不同，但每个特征的维度是相同的（例如：128 维）。\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003e构建视觉词典\u003c/strong\u003e：利用 K-means 等算法将所有图片的所有特征向量进行聚类，得到 \u003ccode\u003e$K$\u003c/code\u003e 个聚类中心，即 \u003ccode\u003e$K$\u003c/code\u003e 个视觉词汇（Visual Word）。由于特征数量可能非常大，使用 K-means 算法聚类会相当耗时。\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003e生成 BoF 特征\u003c/strong\u003e：对于一个图像中的每一个特征，都可以在视觉词典中找到一个最相似的视觉词汇，因此可以对该图像统计得到一个 \u003ccode\u003e$K$\u003c/code\u003e 维的直方图，每个值表示图像中局部特征在视觉词典中相似视觉词汇的频率。针对该步骤可以利用 TF-IDF 的思想获取加权的 BoF 特征结果。\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003eBoF 算法的一些缺点也比较明显：\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003e在使用 K-means 进行聚类时，\u003ccode\u003e$K$\u003c/code\u003e 和初始聚类中心的选取对结果敏感。字典过大，词汇缺乏一般性，对噪声敏感；字典过小，词汇区分性较差，无法充分表示图片。对于海量数据计算所需的时间和空间复杂度都比较高。\u003c/li\u003e\n\u003cli\u003e将图像表示成一个无序的特征，丢失了图片中的空间信息，表示上存在一定局限。\u003c/li\u003e\n\u003c/ol\u003e\n\u003ch3 id=\"vlad\"\u003eVLAD\u003c/h3\u003e\n\u003cp\u003eVLAD（Vector of Local Aggregated Descriptors）\u003csup id=\"fnref:9\"\u003e\u003ca href=\"#fn:9\" class=\"footnote-ref\" role=\"doc-noteref\"\u003e9\u003c/a\u003e\u003c/sup\u003e 方法同 BoF 类似，但在生成特征时采用如下公式：\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003e$$ V(j, k)=\\sum_{i=1}^{N} \\operatorname{sign}_{k}\\left(x_{i}\\right)\\left(x_{i}(j)-c_{k}(j)\\right), \\quad k \\in K, j \\in D $$\u003c/code\u003e\u003c/p\u003e\n\u003cp\u003e其中，\u003ccode\u003e$K$\u003c/code\u003e 为词典大小，\u003ccode\u003e$N$\u003c/code\u003e 为图片的局部特征数量，\u003ccode\u003e$D$\u003c/code\u003e 为每个局部特征的维度，\u003ccode\u003e$x_i$\u003c/code\u003e 表示第 \u003ccode\u003e$i$\u003c/code\u003e 个局部特征，\u003ccode\u003e$c_k$\u003c/code\u003e 表示第 \u003ccode\u003e$k$\u003c/code\u003e 个聚类中心，\u003ccode\u003e$\\operatorname{sign}_k$\u003c/code\u003e 是一个符号函数，如果 \u003ccode\u003e$x_i$\u003c/code\u003e 不属于聚类中心 \u003ccode\u003e$c_k$\u003c/code\u003e 则为 \u003ccode\u003e$0$\u003c/code\u003e，反之则为 \u003ccode\u003e$1$\u003c/code\u003e。\u003c/p\u003e\n\u003cp\u003e从上式中可以看出 VLAD 累加了每个聚类的所有特征残差，通过 \u003ccode\u003e$x_i - c_k$\u003c/code\u003e 将图像本身的局部特征分布差异转换为聚类中心的分布差异，通过归一化和降维等手段得到最终的全局特征。\u003c/p\u003e\n\u003ch3 id=\"fv\"\u003eFV\u003c/h3\u003e\n\u003cp\u003eFV（Fisher Vector）\u003csup id=\"fnref:10\"\u003e\u003ca href=\"#fn:10\" class=\"footnote-ref\" role=\"doc-noteref\"\u003e10\u003c/a\u003e\u003c/sup\u003e 本质上是用似然函数的梯度向量表示一幅图像。梯度向量的物理意义就是描述能够使模型更好地适应数据的参数变化方向，也就是数据拟合中参数调优的过程。在 FV 中我们采用高斯混合模型（Gaussian Mixture Model，GMM）。\u003c/p\u003e\n\u003cp\u003e高斯混合模型是由多个高斯模型线性叠加而成，公式如下：\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003e$$ p(x)=\\sum_{k=1}^{K} \\pi_{k} N\\left(x \\mid \\mu_{k}, \\Sigma_{k}\\right) $$\u003c/code\u003e\u003c/p\u003e\n\u003cp\u003e其中，\u003ccode\u003e$p(x)$\u003c/code\u003e 表示数据 \u003ccode\u003e$x$\u003c/code\u003e 出现的概率，\u003ccode\u003e$K$\u003c/code\u003e 表示高斯模型个数，\u003ccode\u003e$\\pi_k$\u003c/code\u003e 表示第 \u003ccode\u003e$k$\u003c/code\u003e 个高斯模型的权重，\u003ccode\u003e$\\mu_k$\u003c/code\u003e 表示第 \u003ccode\u003e$k$\u003c/code\u003e 个高斯分布的均值，\u003ccode\u003e$\\Sigma_k$\u003c/code\u003e 表示第 \u003ccode\u003e$k$\u003c/code\u003e 个高斯分布的方差。理论上，只要 \u003ccode\u003e$K$\u003c/code\u003e 足够大，GMM 可以逼近任意一种概率分布。\u003c/p\u003e\n\u003cp\u003eGMM 的目标是求解参数 \u003ccode\u003e$\\pi_k, \\mu_k, \\Sigma_k$\u003c/code\u003e 使得它确定的概率分布生成这些给定数据的概率最大，即 \u003ccode\u003e$\\Pi_{i=1}^{N} p\\left(x_{i}\\right)$\u003c/code\u003e 最大。假设各个数据点之间满足独立同分布，可以将其转换成对数似然函数：\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003e$$ \\sum_{i=1}^{N} \\log \\left(p \\left(x_i\\right)\\right) $$\u003c/code\u003e\u003c/p\u003e\n\u003cp\u003e假设 GMM 模型包含 \u003ccode\u003e$K$\u003c/code\u003e 个高斯模型，则模型的参数集合为 \u003ccode\u003e$\\lambda = \\left\\{w_i, \\mu_k, \\Sigma_k, k = 1, \\cdots, K\\right\\}$\u003c/code\u003e，假设共有 \u003ccode\u003e$T$\u003c/code\u003e 个特征向量，则似然函数可以表示为：\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003e$$ \\mathcal{L} (x \\mid \\lambda)=\\sum_{t=1}^{T} \\log \\left(p\\left(x_{t} \\mid \\lambda\\right)\\right) $$\u003c/code\u003e\u003c/p\u003e\n\u003cp\u003e其中的高斯分布是多个基高斯分布的混合：\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003e$$ \\label{eq:fv_gmm} p\\left(x_{t} \\mid \\lambda\\right)=\\sum_{k=1}^{K} w_{k} * p_{k}\\left(x_{t} \\mid \\lambda\\right) $$\u003c/code\u003e\u003c/p\u003e\n\u003cp\u003e每个基高斯分布又可以表示为：\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003e$$ p_{k}\\left(x_{t} \\mid \\lambda\\right) = \\dfrac{1}{\\left(2 \\pi\\right)^{\\frac{D}{2}} \\lvert\\Sigma_k\\rvert^{\\frac{1}{2}}} e^{-\\frac{1}{2} \\left(x - \\mu_k\\right)^{\\prime} \\Sigma_k^{-1} \\left(x - \\mu_k\\right)} $$\u003c/code\u003e\u003c/p\u003e\n\u003cp\u003e由贝叶斯公式可知，描述符 \u003ccode\u003e$x_t$\u003c/code\u003e 数据第 \u003ccode\u003e$i$\u003c/code\u003e 个高斯模型的概率为：\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003e$$ \\gamma_{t}(i)=\\frac{w_{i} u_{i}\\left(x_{t}\\right)}{\\sum_{k=1}^{K} w_{k} u_{k}\\left(x_{t}\\right)} $$\u003c/code\u003e\u003c/p\u003e\n\u003cp\u003e则公式 \u003ccode\u003e$\\ref{eq:fv_gmm}$\u003c/code\u003e 的梯度分量为：\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003e$$ \\begin{aligned} \\frac{\\partial \\mathcal{L}(X \\mid \\lambda)}{\\partial w_{i}} \u0026amp;=\\sum_{t=1}^{T}\\left[\\frac{\\gamma_{t}(i)}{w_{i}}-\\frac{\\gamma_{t}(1)}{w_{1}}\\right] \\text { for } i \\geq 2, \\\\ \\frac{\\partial \\mathcal{L}(X \\mid \\lambda)}{\\partial \\mu_{i}^{d}} \u0026amp;=\\sum_{t=1}^{T} \\gamma_{t}(i)\\left[\\frac{x_{t}^{d}-\\mu_{i}^{d}}{\\left(\\sigma_{i}^{d}\\right)^{2}}\\right], \\\\ \\frac{\\partial \\mathcal{L}(X \\mid \\lambda)}{\\partial \\sigma_{i}^{d}} \u0026amp;=\\sum_{t=1}^{T} \\gamma_{t}(i)\\left[\\frac{\\left(x_{t}^{d}-\\mu_{i}^{d}\\right)^{2}}{\\left(\\sigma_{i}^{d}\\right)^{3}}-\\frac{1}{\\sigma_{i}^{d}}\\right] . \\end{aligned} $$\u003c/code\u003e\u003c/p\u003e\n\u003cp\u003e由于概率空间和欧氏空间的归一化方式不同，在此引入 Fisher Matrix 进行归一化：\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003e$$ \\begin{aligned} f_{w_{i}} \u0026amp;=T\\left(\\frac{1}{w_{i}}+\\frac{1}{w_{1}}\\right) \\\\ f_{\\mu_{i}^{d}} \u0026amp;=\\frac{T w_{i}}{\\left(\\sigma_{i}^{d}\\right)^{2}}, \\\\ f_{\\sigma_{i}^{d}} \u0026amp;=\\frac{2 T w_{i}}{\\left(\\sigma_{i}^{d}\\right)^{2}} . \\end{aligned} $$\u003c/code\u003e\u003c/p\u003e\n\u003cp\u003e归一化后即为 Fisher 向量：\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003e$$ \\begin{aligned} \\mathscr{G}_{\\alpha_{k}}^{X} \u0026amp;= f_{w_i}^{1/2} \\frac{\\partial \\mathcal{L}(X \\mid \\lambda)}{\\partial w_{i}} =\\frac{1}{\\sqrt{w_{k}}} \\sum_{t=1}^{T}\\left(\\gamma_{t}(k)-w_{k}\\right), \\\\ \\mathscr{G}_{\\mu_{k}}^{X} \u0026amp;= f_{\\mu_i^d}^{1/2} \\frac{\\partial \\mathcal{L}(X \\mid \\lambda)}{\\partial \\mu_{i}^{d}} =\\frac{1}{\\sqrt{w_{k}}} \\sum_{t=1}^{T} \\gamma_{t}(k)\\left(\\frac{x_{t}-\\mu_{k}}{\\sigma_{k}}\\right), \\\\ \\mathscr{G}_{\\sigma_{k}}^{X} \u0026amp;= f_{\\sigma_i^d}^{1/2} \\frac{\\partial \\mathcal{L}(X \\mid \\lambda)}{\\partial \\sigma_{i}^{d}} =\\frac{1}{\\sqrt{w_{k}}} \\sum_{t=1}^{T} \\gamma_{t}(k) \\frac{1}{\\sqrt{2}}\\left[\\frac{\\left(x_{t}-\\mu_{k}\\right)^{2}}{\\sigma_{k}^{2}}-1\\right] \\end{aligned} $$\u003c/code\u003e\u003c/p\u003e\n\u003cp\u003e其中 \u003ccode\u003e$\\mathscr{G}_{\\alpha_{k}}^{X}$\u003c/code\u003e 同 BoF 有类似效果，\u003ccode\u003e$\\mathscr{G}_{\\mu_{k}}^{X}$\u003c/code\u003e 同 VLAD 有类似效果。\u003c/p\u003e\n\u003ch2 id=\"图像检索\"\u003e图像检索\u003c/h2\u003e\n\u003ch3 id=\"倒排索引\"\u003e倒排索引\u003c/h3\u003e\n\u003cp\u003e倒排索引是一种提高存储和检索效率的算法，它常被用于大/中等规模的编码本中，结构如下图所示：\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"/images/cn/2022-01-27-content-based-image-retrieval/image-retrieval-indexing.png\" alt=\"\"/\u003e\u003c/p\u003e\n\u003cp\u003e倒排索引是一个一维结构，其中每一个条目对应编码本中的一个视觉词汇。每一个视觉词汇都包含一个倒排表，每个倒排表中的索引被称为索引特征或者记录。倒排索引很好地发挥了大规模编码本词汇直方图稀疏性的特点。\u003c/p\u003e\n\u003ch3 id=\"ann\"\u003eANN\u003c/h3\u003e\n\u003cp\u003e基于近似最近邻搜索（Approximate Nearest Neighbor Search，ANN）的方法，请参考之前的\u003ca href=\"/cn/2020/08/nearest-neighbor-search/\"\u003e博客\u003c/a\u003e。\u003c/p\u003e\n\u003ch1 id=\"基于深度学习的图像检索\"\u003e基于深度学习的图像检索\u003c/h1\u003e\n\u003cp\u003e基于深度学的图像检索流程如下图所示：\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"/images/cn/2022-01-27-content-based-image-retrieval/dl-based-cbir-pipeline.png\" alt=\"\"/\u003e\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003e\u003cstrong\u003e网络前馈方式\u003c/strong\u003e：将图片输入 DCNN 的方式有两种：单路和多路。单路将整个图片作为输入，多路依赖区域提取，例如空间金字塔模型（Spatial Pyramid Models）和区域候选网络（Region Proposal Networks，RPN）。\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003e深度特征提取\u003c/strong\u003e：基于整个图像或部分区块的输入，网络的激活值可以用作原始的特征。全连接层提供了一个全局的视野，将一整个图片表示为单个向量。\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003e特征嵌入和集成\u003c/strong\u003e：基于图片级别或区块级别的描述符，构造全局或局部特征时包含两个重要步骤，通常为 PCA 和白化。特征嵌入将独立的局部特征映射到一个高维向量，特征集成则将多个映射的向量合并成一个单一向量。\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003e特征匹配\u003c/strong\u003e：特征匹配用来衡量图片之间特征的相似度。全局匹配可以通过欧式、汉明或其他距离度量进行高效计算。对于局部特征，可以通过 RANSAC \u003csup id=\"fnref:11\"\u003e\u003ca href=\"#fn:11\" class=\"footnote-ref\" role=\"doc-noteref\"\u003e11\u003c/a\u003e\u003c/sup\u003e 和近期的一些改进方法对局部特征进行相似度汇总来评估相似性。\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003e关于卷积神经网络的细节介绍，请参考之前的\u003ca href=\"/cn/2018/08/cnn/\"\u003e博客\u003c/a\u003e。\u003c/p\u003e\n\u003ch2 id=\"网络前馈方式\"\u003e网络前馈方式\u003c/h2\u003e\n\u003ch3 id=\"单路前馈方法\"\u003e单路前馈方法\u003c/h3\u003e\n\u003cp\u003e单路前馈方法是将整个图片直接输入模型来提取特征。由于仅将图片输入模型一次，该方法效率较高。对于这类方法，全连接层和最后一个卷积层可以作为特征提取器。\u003c/p\u003e\n\u003ch3 id=\"多路前馈方法\"\u003e多路前馈方法\u003c/h3\u003e\n\u003cp\u003e相比于单路前馈方法，多路前馈方法由于需要将生成的多个图像块输入到模型中，因此相对耗时。这类方法通常包含两个步骤：图像块识别和图像块描述。使用不同方法可以获得不同尺度的图像块，如下图所示：\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"/images/cn/2022-01-27-content-based-image-retrieval/image-patch-generation-schemes.png\" alt=\"\"/\u003e\u003c/p\u003e\n\u003cp\u003e其中，(a) 为固定窗口大小划分的区块，(b) 为空间金字塔模型（Spatial Pyramid Model，SPM）划分的区块，(c) 为稠密采样的区块，(d) 为通过区域候选网络（Region Proposal Network，RPN）获得的候选区块。\u003c/p\u003e\n\u003ch2 id=\"深度特征选择\"\u003e深度特征选择\u003c/h2\u003e\n\u003cp\u003e特征选择决定了提取特征的表达范围，例如：从全连接层可以获得\u003cstrong\u003e全局级别特征\u003c/strong\u003e，从卷积层可以获得\u003cstrong\u003e区块级别特征\u003c/strong\u003e。\u003c/p\u003e\n\u003ch3 id=\"从全连接层提取\"\u003e从全连接层提取\u003c/h3\u003e\n\u003cp\u003e将全连接层作为全局特征提取器，通过 PCA 降维和标准化后可以用于度量图像的相似性。但由于这一层是全连接的，每个神经元都会产生图像级别的描述符，这会导致两个明显的缺陷：包括无关信息和缺少局部几何不变性。\u003c/p\u003e\n\u003cp\u003e针对第一个缺陷，可以通过多路前馈方法来提取区块级别特征。针对第二个缺陷，缺乏几何不变性会影响图像变换（如：裁剪、遮挡）时的鲁棒性，通过使用中间卷积层可以来解决。\u003c/p\u003e\n\u003ch3 id=\"从卷积层提取\"\u003e从卷积层提取\u003c/h3\u003e\n\u003cp\u003e从卷积层（通常是最后一层）提取的特征保留了更多的结构细节，这对实例检索尤为有利。卷积层的神经元仅同局部区域相连接，这样较小的视野确保所生成的特征包含更多局部结构信息，同时对于图像变换更为鲁棒。\u003c/p\u003e\n\u003cp\u003e加和/平均和最大池化是用于生成全局特征的两个简单的集成方法，一些其他的集成方法，例如：MAC \u003csup id=\"fnref:12\"\u003e\u003ca href=\"#fn:12\" class=\"footnote-ref\" role=\"doc-noteref\"\u003e12\u003c/a\u003e\u003c/sup\u003e，R-MAC \u003csup id=\"fnref:13\"\u003e\u003ca href=\"#fn:13\" class=\"footnote-ref\" role=\"doc-noteref\"\u003e13\u003c/a\u003e\u003c/sup\u003e，GeM polling \u003csup id=\"fnref:14\"\u003e\u003ca href=\"#fn:14\" class=\"footnote-ref\" role=\"doc-noteref\"\u003e14\u003c/a\u003e\u003c/sup\u003e，SPoC \u003csup id=\"fnref:15\"\u003e\u003ca href=\"#fn:15\" class=\"footnote-ref\" role=\"doc-noteref\"\u003e15\u003c/a\u003e\u003c/sup\u003e，CroW \u003csup id=\"fnref:16\"\u003e\u003ca href=\"#fn:16\" class=\"footnote-ref\" role=\"doc-noteref\"\u003e16\u003c/a\u003e\u003c/sup\u003e 和 CAM+CroW \u003csup id=\"fnref:17\"\u003e\u003ca href=\"#fn:17\" class=\"footnote-ref\" role=\"doc-noteref\"\u003e17\u003c/a\u003e\u003c/sup\u003e 如下图所示：\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"/images/cn/2022-01-27-content-based-image-retrieval/representative-methods-in-single-pass-methods.png\" alt=\"\"/\u003e\u003c/p\u003e\n\u003ch2 id=\"特征融合策略\"\u003e特征融合策略\u003c/h2\u003e\n\u003ch3 id=\"层级别融合\"\u003e层级别融合\u003c/h3\u003e\n\u003cp\u003e通过层级别融合，可以在深度网络中融合多个全连接层。全连接层的特征保留了全局高层级语义信息，卷积层的特征保留了局部中低层级的信息。因此，全局特征和局部特征在测量语义相似度时相辅相成，可以在一定程度上保证检索的效果。\u003c/p\u003e\n\u003ch3 id=\"模型级别融合\"\u003e模型级别融合\u003c/h3\u003e\n\u003cp\u003e融合不同模型的特征也是可行的，这种融合方式关注于模型之间的互补性质，其可以分为：intra-model 和 inter-model 两类。intra-model 融合方式建议使用多个具有相似性或者结构上高度兼容的模型，而 inter-model 融合方式则使用结构上具有很大不同的模型。\u003c/p\u003e\n\u003cp\u003einter-model 和 intra-model 融合同模型选择有关。融合候选模型的所有特征，然后根据拼接的特征学习得到一个度量，这种方式称为 early fusion 策略。或者对每个模型的特征学习各自的最优度量，然后组合这些度量用于最终的检索排名，这种方式称为 late fusion 策略。\u003c/p\u003e\n\u003ch2 id=\"特征嵌入和集成\"\u003e特征嵌入和集成\u003c/h2\u003e\n\u003cp\u003e特征嵌入和集成的主要目的是进一步提高从 DCNN 中提取的特征的区分能力，来生成用于检索特定实例的最终全局或局部特征。\u003c/p\u003e\n\u003ch3 id=\"匹配全局特征\"\u003e匹配全局特征\u003c/h3\u003e\n\u003cp\u003e全局特征可以从全连接层中提取，然后进行降维和标准化，通常情况下没有进一步的聚合过程。卷积特征也可以被集成到全局特征中，简单的方式是通过加和/平均或最大池化。卷积特征可以作为局部区域的描述符，因此可以利用基于 SIFT 的图像检索中提到的 BoF，VLAD，FV 等模型对其进行编码，然后再将他们聚合为一个全局描述符。\u003c/p\u003e\n\u003ch3 id=\"匹配局部特征\"\u003e匹配局部特征\u003c/h3\u003e\n\u003cp\u003e尽管全局特征匹配对于特征提取和相似度计算都具有很高的效率，但全局特征与空间验证和对应估计不兼容，这些是实例级别检索任务的重要过程。在匹配过程中，全局特征只匹配一次，而局部特征匹配通过汇总所有单个局部特征的相似性来评估（即多对多匹配）。\u003c/p\u003e\n\u003ch3 id=\"注意力机制\"\u003e注意力机制\u003c/h3\u003e\n\u003cp\u003e注意力机制可以看作是一种特征聚合，其核心思想是突出最相关的特征部分，通过计算注意力映射来实现。获取注意力映射的方法可以分为两类：非参数和参数，如下图所示，主要区别在于注意力映射中的重要性权重是否可学习。\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"/images/cn/2022-01-27-content-based-image-retrieval/attention-mechanisms.png\" alt=\"\"/\u003e\u003c/p\u003e\n\u003cp\u003e非参数加权是一种突出特征重要性的直接方法，相应的注意力映射可以通过通道或空间池化获得，如 (a) 和 (b) 所示。参数注意力映射可以通过深度网络学习，其输入可以是图像块或特征映射，这些方法通常用于有监督的度量学习，如 (c) 和 (d) 所示。\u003c/p\u003e\n\u003ch3 id=\"哈希嵌入\"\u003e哈希嵌入\u003c/h3\u003e\n\u003cp\u003e深度网络提取的实值特征通常是高维的，不太适合检索。因此，将深层特征转换为更紧凑的编码具有重要意义。由于其计算和存储效率，哈希算法已被广泛用于全局和局部描述符。\u003c/p\u003e\n\u003cp\u003e哈希函数可以作为一个层插入到深度网络中，以便可以通过有监督或无监督的方式同时训练和优化哈希码和深度网络。哈希函数训练时，相似图像的哈希码嵌入会尽可能的接近，不相似图像的哈希码嵌入会尽可能的分离。\u003c/p\u003e\n\u003ch2 id=\"模型微调\"\u003e模型微调\u003c/h2\u003e\n\u003cp\u003e微调方法已被广泛研究以学习更好的检索特征。在基于图像分类的数据集上预训练的 DCNN 对类间可变性非常稳健，随后将成对的监督信息引入排名损失中，通过对检索表示进行正则化来微调网络。具有清晰且定义良好的真实标签的标准数据集对于微调深度模型以执行准确的实例级检索是必不可少的，否则就需要开发无监督的微调方法。在网络微调之后，可以将特征作为全局或局部来进行检索。\u003c/p\u003e\n\u003ch3 id=\"有监督微调\"\u003e有监督微调\u003c/h3\u003e\n\u003cp\u003e下图展示了不同类型的有监督微调方法：\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"/images/cn/2022-01-27-content-based-image-retrieval/schemes-of-supervised-fine-tuning.png\" alt=\"\"/\u003e\u003c/p\u003e\n\u003cp\u003e下图展示了不同类型的有监督微调损失函数：\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"/images/cn/2022-01-27-content-based-image-retrieval/different-losses-for-network-fine-tuning.png\" alt=\"\"/\u003e\u003c/p\u003e\n\u003ch3 id=\"无监督微调\"\u003e无监督微调\u003c/h3\u003e\n\u003cp\u003e由于成本等问题可能导致监督信息不足，从而监督网络微调变得不可行。因此，用于图像检索的无监督微调方法是非常必要的。对于无监督微调，两个方向是通过流形学习和聚类技术挖掘特征之间的相关性。具体细节不再展开讨论，详细内容请参见原文。\u003c/p\u003e\n\u003ch1 id=\"开放资源\"\u003e开放资源\u003c/h1\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://kobiso.github.io/Computer-Vision-Leaderboard/sop\"\u003eStanford Online Products Retrieval Leaderboard\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://kobiso.github.io/Computer-Vision-Leaderboard/cars\"\u003eCARS196 Retrieval Leaderboard\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://kobiso.github.io/Computer-Vision-Leaderboard/cub\"\u003eCUB-200-2011 Retrieval Leaderboard\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://kobiso.github.io/Computer-Vision-Leaderboard/in-shop\"\u003eIn-shop Clothes Retrieval Leaderboard\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://paperswithcode.com/task/image-retrieval\"\u003eImage Retrieval - Paper with code\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"footnotes\" role=\"doc-endnotes\"\u003e\n\u003chr/\u003e\n\u003col\u003e\n\u003cli id=\"fn:1\"\u003e\n\u003cp\u003eZheng, L., Yang, Y., \u0026amp; Tian, Q. (2017). SIFT meets CNN: A decade survey of instance retrieval. \u003cem\u003eIEEE transactions on pattern analysis and machine intelligence, 40\u003c/em\u003e(5), 1224-1244. \u003ca href=\"#fnref:1\" class=\"footnote-backref\" role=\"doc-backlink\"\u003e↩︎\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli id=\"fn:2\"\u003e\n\u003cp\u003eChen W., Liu Y., Wang W., Bakker E., Georigiou T., Fieguth P., Liu L., \u0026amp; Lew M. (2022). Deep Learning for Instance Retrieval: A Survey. \u003cem\u003earXiv:2101.11282\u003c/em\u003e \u003ca href=\"#fnref:2\" class=\"footnote-backref\" role=\"doc-backlink\"\u003e↩︎\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli id=\"fn:3\"\u003e\n\u003cp\u003e\u003ca href=\"https://zh.wikipedia.org/wiki/\"\u003ehttps://zh.wikipedia.org/wiki/\u003c/a\u003e基于内容的图像检索 \u003ca href=\"#fnref:3\" class=\"footnote-backref\" role=\"doc-backlink\"\u003e↩︎\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli id=\"fn:4\"\u003e\n\u003cp\u003eLindeberg, T. (1994). Scale-space theory: A basic tool for analyzing structures at different scales. \u003cem\u003eJournal of applied statistics, 21\u003c/em\u003e(1-2), 225-270. \u003ca href=\"#fnref:4\" class=\"footnote-backref\" role=\"doc-backlink\"\u003e↩︎\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli id=\"fn:5\"\u003e\n\u003cp\u003eBay, H., Tuytelaars, T., \u0026amp; Van Gool, L. (2006, May). Surf: Speeded up robust features. \u003cem\u003eIn European conference on computer vision\u003c/em\u003e (pp. 404-417). Springer, Berlin, Heidelberg. \u003ca href=\"#fnref:5\" class=\"footnote-backref\" role=\"doc-backlink\"\u003e↩︎\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli id=\"fn:6\"\u003e\n\u003cp\u003eAbdel-Hakim, A. E., \u0026amp; Farag, A. A. (2006, June). CSIFT: A SIFT descriptor with color invariant characteristics. \u003cem\u003eIn 2006 IEEE computer society conference on computer vision and pattern recognition (CVPR\u0026#39;06)\u003c/em\u003e (Vol. 2, pp. 1978-1983). Ieee. \u003ca href=\"#fnref:6\" class=\"footnote-backref\" role=\"doc-backlink\"\u003e↩︎\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli id=\"fn:7\"\u003e\n\u003cp\u003eSivic, J., \u0026amp; Zisserman, A. (2003, October). Video Google: A text retrieval approach to object matching in videos. \u003cem\u003eIn Computer Vision, IEEE International Conference on\u003c/em\u003e (Vol. 3, pp. 1470-1470). IEEE Computer Society. \u003ca href=\"#fnref:7\" class=\"footnote-backref\" role=\"doc-backlink\"\u003e↩︎\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli id=\"fn:8\"\u003e\n\u003cp\u003eRadenović, F., Jégou, H., \u0026amp; Chum, O. (2015, June). Multiple measurements and joint dimensionality reduction for large scale image search with short vectors. \u003cem\u003eIn Proceedings of the 5th ACM on International Conference on Multimedia Retrieval\u003c/em\u003e (pp. 587-590). \u003ca href=\"#fnref:8\" class=\"footnote-backref\" role=\"doc-backlink\"\u003e↩︎\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli id=\"fn:9\"\u003e\n\u003cp\u003eJégou, H., Douze, M., Schmid, C., \u0026amp; Pérez, P. (2010, June). Aggregating local descriptors into a compact image representation. \u003cem\u003eIn 2010 IEEE computer society conference on computer vision and pattern recognition\u003c/em\u003e (pp. 3304-3311). IEEE. \u003ca href=\"#fnref:9\" class=\"footnote-backref\" role=\"doc-backlink\"\u003e↩︎\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli id=\"fn:10\"\u003e\n\u003cp\u003ePerronnin, F., Sánchez, J., \u0026amp; Mensink, T. (2010, September). Improving the fisher kernel for large-scale image classification. \u003cem\u003eIn European conference on computer vision\u003c/em\u003e (pp. 143-156). Springer, Berlin, Heidelberg. \u003ca href=\"#fnref:10\" class=\"footnote-backref\" role=\"doc-backlink\"\u003e↩︎\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli id=\"fn:11\"\u003e\n\u003cp\u003eFischler, M. A., \u0026amp; Bolles, R. C. (1981). Random sample consensus: a paradigm for model fitting with applications to image analysis and automated cartography. \u003cem\u003eCommunications of the ACM, 24\u003c/em\u003e(6), 381-395. \u003ca href=\"#fnref:11\" class=\"footnote-backref\" role=\"doc-backlink\"\u003e↩︎\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli id=\"fn:12\"\u003e\n\u003cp\u003eRazavian, A. S., Sullivan, J., Carlsson, S., \u0026amp; Maki, A. (2016). Visual instance retrieval with deep convolutional networks. \u003cem\u003eITE Transactions on Media Technology and Applications, 4\u003c/em\u003e(3), 251-258. \u003ca href=\"#fnref:12\" class=\"footnote-backref\" role=\"doc-backlink\"\u003e↩︎\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli id=\"fn:13\"\u003e\n\u003cp\u003eTolias, G., Sicre, R., \u0026amp; Jégou, H. (2015). Particular object retrieval with integral max-pooling of CNN activations. \u003cem\u003earXiv preprint arXiv:1511.05879\u003c/em\u003e. \u003ca href=\"#fnref:13\" class=\"footnote-backref\" role=\"doc-backlink\"\u003e↩︎\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli id=\"fn:14\"\u003e\n\u003cp\u003eRadenović, F., Tolias, G., \u0026amp; Chum, O. (2018). Fine-tuning CNN image retrieval with no human annotation. \u003cem\u003eIEEE transactions on pattern analysis and machine intelligence, 41\u003c/em\u003e(7), 1655-1668. \u003ca href=\"#fnref:14\" class=\"footnote-backref\" role=\"doc-backlink\"\u003e↩︎\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli id=\"fn:15\"\u003e\n\u003cp\u003eBabenko, A., \u0026amp; Lempitsky, V. (2015). Aggregating local deep features for image retrieval. \u003cem\u003eIn Proceedings of the IEEE international conference on computer vision\u003c/em\u003e (pp. 1269-1277). \u003ca href=\"#fnref:15\" class=\"footnote-backref\" role=\"doc-backlink\"\u003e↩︎\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli id=\"fn:16\"\u003e\n\u003cp\u003eKalantidis, Y., Mellina, C., \u0026amp; Osindero, S. (2016, October). Cross-dimensional weighting for aggregated deep convolutional features. \u003cem\u003eIn European conference on computer vision\u003c/em\u003e (pp. 685-701). Springer, Cham. \u003ca href=\"#fnref:16\" class=\"footnote-backref\" role=\"doc-backlink\"\u003e↩︎\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli id=\"fn:17\"\u003e\n\u003cp\u003eJimenez, A., Alvarez, J. M., \u0026amp; Giro-i-Nieto, X. (2017). Class-weighted convolutional features for visual instance search. \u003cem\u003earXiv preprint arXiv:1707.02581\u003c/em\u003e. \u003ca href=\"#fnref:17\" class=\"footnote-backref\" role=\"doc-backlink\"\u003e↩︎\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ol\u003e\n\u003c/div\u003e\n\n\n\n\n\n\u003cdiv class=\"donate\"\u003e\n  \u003cdiv class=\"donate-header\"\u003e\u003c/div\u003e\n  \u003cdiv class=\"donate-slug\" id=\"donate-slug\"\u003econtent-based-image-retrieval\u003c/div\u003e\n  \u003cbutton class=\"donate-button\"\u003e赞 赏\u003c/button\u003e\n  \u003cdiv class=\"donate-footer\"\u003e「真诚赞赏，手留余香」\u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"donate-modal-wrapper\"\u003e\n  \u003cdiv class=\"donate-modal\"\u003e\n    \u003cdiv class=\"donate-box\"\u003e\n      \u003cdiv class=\"donate-box-content\"\u003e\n        \u003cdiv class=\"donate-box-content-inner\"\u003e\n          \u003cdiv class=\"donate-box-header\"\u003e「真诚赞赏，手留余香」\u003c/div\u003e\n          \u003cdiv class=\"donate-box-body\"\u003e\n            \u003cdiv class=\"donate-box-money\"\u003e\n              \u003cbutton class=\"donate-box-money-button donate-box-money-button-unchecked\" id=\"donate-box-money-button-2\" data-v=\"2\" data-unchecked=\"￥ 2\" data-checked=\"2 元\"\u003e￥ 2\u003c/button\u003e\n              \u003cbutton class=\"donate-box-money-button donate-box-money-button-unchecked\" id=\"donate-box-money-button-5\" data-v=\"5\" data-unchecked=\"￥ 5\" data-checked=\"5 元\"\u003e￥ 5\u003c/button\u003e\n              \u003cbutton class=\"donate-box-money-button donate-box-money-button-unchecked\" id=\"donate-box-money-button-10\" data-v=\"10\" data-unchecked=\"￥ 10\" data-checked=\"10 元\"\u003e￥ 10\u003c/button\u003e\n              \u003cbutton class=\"donate-box-money-button donate-box-money-button-unchecked\" id=\"donate-box-money-button-50\" data-v=\"50\" data-unchecked=\"￥ 50\" data-checked=\"50 元\"\u003e￥ 50\u003c/button\u003e\n              \u003cbutton class=\"donate-box-money-button donate-box-money-button-unchecked\" id=\"donate-box-money-button-100\" data-v=\"100\" data-unchecked=\"￥ 100\" data-checked=\"100 元\"\u003e￥ 100\u003c/button\u003e\n              \u003cbutton class=\"donate-box-money-button donate-box-money-button-unchecked\" id=\"donate-box-money-button-custom\" data-v=\"custom\" data-unchecked=\"任意金额\" data-checked=\"任意金额\"\u003e任意金额\u003c/button\u003e\n            \u003c/div\u003e\n            \u003cdiv class=\"donate-box-pay\"\u003e\n              \u003cimg class=\"donate-box-pay-qrcode\" id=\"donate-box-pay-qrcode\" src=\"\"/\u003e\n            \u003c/div\u003e\n          \u003c/div\u003e\n          \u003cdiv class=\"donate-box-footer\"\u003e\n            \u003cdiv class=\"donate-box-pay-method donate-box-pay-method-checked\" data-v=\"wechat-pay\"\u003e\n              \u003cimg class=\"donate-box-pay-method-image\" id=\"donate-box-pay-method-image-wechat-pay\" src=\"\"/\u003e\n            \u003c/div\u003e\n            \u003cdiv class=\"donate-box-pay-method\" data-v=\"alipay\"\u003e\n              \u003cimg class=\"donate-box-pay-method-image\" id=\"donate-box-pay-method-image-alipay\" src=\"\"/\u003e\n            \u003c/div\u003e\n          \u003c/div\u003e\n        \u003c/div\u003e\n      \u003c/div\u003e\n    \u003c/div\u003e\n    \u003cbutton type=\"button\" class=\"donate-box-close-button\"\u003e\n      \u003csvg class=\"donate-box-close-button-icon\" fill=\"#fff\" viewBox=\"0 0 24 24\" width=\"24\" height=\"24\"\u003e\u003cpath d=\"M13.486 12l5.208-5.207a1.048 1.048 0 0 0-.006-1.483 1.046 1.046 0 0 0-1.482-.005L12 10.514 6.793 5.305a1.048 1.048 0 0 0-1.483.005 1.046 1.046 0 0 0-.005 1.483L10.514 12l-5.208 5.207a1.048 1.048 0 0 0 .006 1.483 1.046 1.046 0 0 0 1.482.005L12 13.486l5.207 5.208a1.048 1.048 0 0 0 1.483-.006 1.046 1.046 0 0 0 .005-1.482L13.486 12z\" fill-rule=\"evenodd\"\u003e\u003c/path\u003e\u003c/svg\u003e\n    \u003c/button\u003e\n  \u003c/div\u003e\n\u003c/div\u003e\n\n\u003cscript type=\"text/javascript\" src=\"/js/donate.js\"\u003e\u003c/script\u003e\n\n\n  \u003cfooter\u003e\n  \n\u003cnav class=\"post-nav\"\u003e\n  \u003cspan class=\"nav-prev\"\u003e← \u003ca href=\"/cn/2021/10/abtest-you-should-know/\"\u003e你所应该知道的 A/B 测试 (A/B Test You Should Know)\u003c/a\u003e\u003c/span\u003e\n  \u003cspan class=\"nav-next\"\u003e\u003ca href=\"/cn/2022/04/survived-from-this-round-of-layoff/\"\u003e小记这一波裁员浪潮\u003c/a\u003e →\u003c/span\u003e\n\u003c/nav\u003e\n\n\n\n\n\u003cins class=\"adsbygoogle\" style=\"display:block; text-align:center;\" data-ad-layout=\"in-article\" data-ad-format=\"fluid\" data-ad-client=\"ca-pub-2608165017777396\" data-ad-slot=\"8302038603\"\u003e\u003c/ins\u003e\n\u003cscript\u003e\n  (adsbygoogle = window.adsbygoogle || []).push({});\n\u003c/script\u003e\n\n\n\n\u003cscript src=\"//cdn.jsdelivr.net/npm/js-cookie@3.0.5/dist/js.cookie.min.js\"\u003e\u003c/script\u003e\n\u003cscript src=\"/js/toggle-theme.js\"\u003e\u003c/script\u003e\n\n\n\u003cscript src=\"/js/no-highlight.js\"\u003e\u003c/script\u003e\n\u003cscript src=\"/js/math-code.js\"\u003e\u003c/script\u003e\n\u003cscript src=\"/js/heading-anchor.js\"\u003e\u003c/script\u003e\n\n\n\n\u003csection class=\"comments\"\u003e\n\u003cscript src=\"https://giscus.app/client.js\" data-repo=\"leovan/leovan.me\" data-repo-id=\"MDEwOlJlcG9zaXRvcnkxMTMxOTY0Mjc=\" data-category=\"Comments\" data-category-id=\"DIC_kwDOBr89i84CT-R7\" data-mapping=\"pathname\" data-strict=\"1\" data-reactions-enabled=\"1\" data-emit-metadata=\"0\" data-input-position=\"top\" data-theme=\"preferred_color_scheme\" data-lang=\"zh-CN\" data-loading=\"lazy\" crossorigin=\"anonymous\" defer=\"\"\u003e\n\u003c/script\u003e\n\u003c/section\u003e\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\u003cscript async=\"\" src=\"/js/center-img.js\"\u003e\u003c/script\u003e\n\u003cscript async=\"\" src=\"/js/right-quote.js\"\u003e\u003c/script\u003e\n\u003cscript async=\"\" src=\"/js/external-link.js\"\u003e\u003c/script\u003e\n\u003cscript async=\"\" src=\"/js/alt-title.js\"\u003e\u003c/script\u003e\n\u003cscript async=\"\" src=\"/js/figure.js\"\u003e\u003c/script\u003e\n\n\n\n\u003cscript src=\"//cdn.jsdelivr.net/npm/lazysizes@5.3.2/lazysizes.min.js\"\u003e\u003c/script\u003e\n\n\n\u003cscript src=\"//cdn.jsdelivr.net/npm/vanilla-back-to-top@latest/dist/vanilla-back-to-top.min.js\"\u003e\u003c/script\u003e\n\u003cscript\u003e\naddBackToTop({\n  diameter: 48\n});\n\u003c/script\u003e\n\n  \u003chr/\u003e\n  \u003cdiv class=\"copyright no-border-bottom\"\u003e\n    \u003cdiv class=\"copyright-author-year\"\u003e\n      \u003cspan\u003eCopyright © 2017-2024 \u003ca href=\"/\"\u003e范叶亮 | Leo Van\u003c/a\u003e\u003c/span\u003e\n    \u003c/div\u003e\n  \u003c/div\u003e\n  \u003c/footer\u003e\n  \u003c/article\u003e",
  "Date": "2022-01-27T00:00:00Z",
  "Author": "范叶亮"
}