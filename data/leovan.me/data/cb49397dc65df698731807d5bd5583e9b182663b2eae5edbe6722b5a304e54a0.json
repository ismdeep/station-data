{
  "Source": "leovan.me",
  "Title": "当我谈修图时，我谈些什么",
  "Link": "https://leovan.me/cn/2023/04/what-i-talk-about-when-i-talk-about-photo-retouching-colors-part-1/",
  "Content": "\u003carticle class=\"main\"\u003e\n    \u003cheader class=\"content-title\"\u003e\n    \n\u003ch1 class=\"title\"\u003e\n  \n  当我谈修图时，我谈些什么\n  \n\u003c/h1\u003e\n\u003ch2 class=\"subtitle\"\u003e色彩篇 Part 1\u003c/h2\u003e\n\n\n\n\n\n\n\u003ch2 class=\"author-date\"\u003e范叶亮 / \n2023-04-22\u003c/h2\u003e\n\n\n\n\u003ch3 class=\"post-meta\"\u003e\n\n\n\u003cstrong\u003e分类: \u003c/strong\u003e\n\u003ca href=\"/categories/%E7%A7%91%E6%99%AE\"\u003e科普\u003c/a\u003e, \u003ca href=\"/categories/%E5%BD%93%E6%88%91%E8%B0%88\"\u003e当我谈\u003c/a\u003e, \u003ca href=\"/categories/%E7%94%9F%E6%B4%BB\"\u003e生活\u003c/a\u003e\n\n\n\n\n/\n\n\n\n\n\u003cstrong\u003e标签: \u003c/strong\u003e\n\u003cspan\u003e修图\u003c/span\u003e, \u003cspan\u003e色彩空间\u003c/span\u003e, \u003cspan\u003e色彩模型\u003c/span\u003e, \u003cspan\u003eRGB\u003c/span\u003e, \u003cspan\u003e加法混色模型\u003c/span\u003e, \u003cspan\u003eCMYK\u003c/span\u003e, \u003cspan\u003e减法混色模型\u003c/span\u003e, \u003cspan\u003eHSV\u003c/span\u003e, \u003cspan\u003eHSL\u003c/span\u003e, \u003cspan\u003e色相\u003c/span\u003e, \u003cspan\u003e饱和度\u003c/span\u003e, \u003cspan\u003e明度\u003c/span\u003e, \u003cspan\u003e亮度\u003c/span\u003e, \u003cspan\u003e直方图\u003c/span\u003e, \u003cspan\u003e色温\u003c/span\u003e, \u003cspan\u003e色调\u003c/span\u003e\n\n\n\n\n/\n\n\n\u003cstrong\u003e字数: \u003c/strong\u003e\n2696\n\u003c/h3\u003e\n\n\n\n\u003chr/\u003e\n\n\n\n    \n    \n    \u003cins class=\"adsbygoogle\" style=\"display:block; text-align:center;\" data-ad-layout=\"in-article\" data-ad-format=\"fluid\" data-ad-client=\"ca-pub-2608165017777396\" data-ad-slot=\"1261604535\"\u003e\u003c/ins\u003e\n    \u003cscript\u003e\n    (adsbygoogle = window.adsbygoogle || []).push({});\n    \u003c/script\u003e\n    \n    \n    \u003c/header\u003e\n\n\n\n\n\u003cblockquote\u003e\n\u003cp\u003e文本是「当我谈」系列的第一篇博客，后续「当我谈」系列会从程序员的视角一起科普认知未曾触及的其他领域。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003ch1 id=\"色彩空间\"\u003e色彩空间\u003c/h1\u003e\n\u003cp\u003e\u003cstrong\u003e色彩空间\u003c/strong\u003e是对色彩的组织方式，借助色彩空间和针对物理设备的测试，可以得到色彩的固定模拟和数字表示。\u003cstrong\u003e色彩模型\u003c/strong\u003e是一种抽象数学模型，通过一组数字来描述颜色。由于“色彩空间”有着固定的色彩模型和映射函数组合，非正式场合下，这一词汇也被用来指代色彩模型。\u003c/p\u003e\n\u003ch2 id=\"rgb\"\u003eRGB\u003c/h2\u003e\n\u003cp\u003e红绿蓝（RGB）色彩模型，是一种\u003cstrong\u003e加法混色模型\u003c/strong\u003e，将\u003cb style=\"color: #FF0000;\"\u003e红（Red）\u003c/b\u003e、\u003cb style=\"color: #00FF00;\"\u003e绿（Green）\u003c/b\u003e、\u003cb style=\"color: #0000FF;\"\u003e蓝（Blue）\u003c/b\u003e三原色的色光以不同的比例相加，以合成产生各种色彩光。三原色的原理不是出于物理原因，而是由于生理原因造成的。\u003c/p\u003e\n\u003cp\u003eRGB 色彩模型可以映射到一个立方体上，如下图所示：\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"/images/cn/2023-04-22-what-i-talk-about-when-i-talk-about-photo-retouching/rgb.png\" alt=\"\"/\u003e\u003c/p\u003e\n\u003cp\u003e红绿蓝的三原色光显示技术广泛用于电视和计算机的显示器，利用红、绿、蓝三原色作为子像素组成的真色彩像素，透过眼睛及大脑的模糊化，“人类看到”不存在于显示器上的感知色彩。\u003c/p\u003e\n\u003ch2 id=\"cmyk\"\u003eCMYK\u003c/h2\u003e\n\u003cp\u003e印刷四分色模式（CMYK）是彩色印刷中采用的一种\u003cstrong\u003e减法混色模型\u003c/strong\u003e，利用色料的三原色混色原理，加上黑色油墨，共计四种颜色混合叠加，形成所谓的“全彩印刷”。四种标准颜色分别是：\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003cb style=\"color: #00FFFF;\"\u003eCyan\u003c/b\u003e：青色或“水蓝”\u003c/li\u003e\n\u003cli\u003e\u003cb style=\"color: #FF00FF;\"\u003eMagenta\u003c/b\u003e：洋红色或“紫色”\u003c/li\u003e\n\u003cli\u003e\u003cb style=\"color: #FFFF00;\"\u003eYellow\u003c/b\u003e：黄色\u003c/li\u003e\n\u003cli\u003e\u003cb style=\"color: #000000;\"\u003eKey plate\u003c/b\u003e：因实务上多使用黑色，所以也可以简单视为 \u003cstrong\u003eblacK\u003c/strong\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eCMY 叠色的示意图如下所示：\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"/images/cn/2023-04-22-what-i-talk-about-when-i-talk-about-photo-retouching/cmyk.png\" alt=\"\"/\u003e\u003c/p\u003e\n\u003cp\u003e利用 $0$ 到 $1$ 的浮点数表示 $R, G, B$ 和 $C, M, Y, K$，从四分色向三原光转换公式如下：\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003e$$ \\begin{aligned} R \u0026amp;= \\left(1 - C\\right) \\left(1 - K\\right) \\\\ G \u0026amp;= \\left(1 - M\\right) \\left(1 - K\\right) \\\\ B \u0026amp;= \\left(1 - Y\\right) \\left(1 - K\\right) \\end{aligned} $$\u003c/code\u003e\u003c/p\u003e\n\u003cp\u003e从三原光向四分色转换公式如下：\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003e$$ \\begin{aligned} C \u0026amp;= 1 - \\dfrac{R}{\\max \\left(R, G, B\\right)} \\\\ M \u0026amp;= 1 - \\dfrac{G}{\\max \\left(R, G, B\\right)} \\\\ Y \u0026amp;= 1 - \\dfrac{B}{\\max \\left(R, G, B\\right)} \\\\ K \u0026amp;= 1 - \\max \\left(R, G, B\\right) \\\\ \\end{aligned} $$\u003c/code\u003e\u003c/p\u003e\n\u003ch2 id=\"hsl-和-hsv\"\u003eHSL 和 HSV\u003c/h2\u003e\n\u003cp\u003eHSL 和 HSV 都是一种将 RGB 色彩模型中的点在圆柱坐标系中的表示法。这两种表示法试图做到比基于笛卡尔坐标系的几何结构 RGB 更加直观。HSL 即色相、饱和度、亮度（Hue，Saturation，Lightness），HSV 即色相、饱和度、明度（Hue，Saturation，Value），又称 HSB，其中 B 为 Brightness。另种色彩空间定义如下图所示：\u003c/p\u003e\n\u003cfigure\u003e\n  \u003cimg class=\"lazyload\" data-src=\"/images/cn/2023-04-22-what-i-talk-about-when-i-talk-about-photo-retouching/hsl-hsv.png\" data-large-max-width=\"100%\" data-middle-max-width=\"100%\" data-small-max-width=\"100%\"/\u003e\n  \u003cfigcaption class=\"kai\"\u003eHSL 和 HSV 色彩空间\u003c/figcaption\u003e\n\u003c/figure\u003e\n\u003ch3 id=\"色相\"\u003e色相\u003c/h3\u003e\n\u003cp\u003e色相（Hue）指的是色彩的外相，是在不同波长的光照射下，人眼所感觉到的不同的颜色。在 HSL 和 HSV 色彩空间中，色相是以\u003cb style=\"color: #FF0000\"\u003e红色\u003c/b\u003e为 0 度（360 度）、\u003cb style=\"color: #FFFF00\"\u003e黄色\u003c/b\u003e为 60 度、\u003cb style=\"color: #00FF00\"\u003e绿色\u003c/b\u003e为 120 度、\u003cb style=\"color: #00FFFF\"\u003e青色\u003c/b\u003e为 180 度、\u003cb style=\"color: #0000FF\"\u003e蓝色\u003c/b\u003e为 240 度、\u003cb style=\"color: #FF00FF\"\u003e洋红色\u003c/b\u003e为 300 度。如下图所示：\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"/images/cn/2023-04-22-what-i-talk-about-when-i-talk-about-photo-retouching/hue-scale.png\" alt=\"\"/\u003e\u003c/p\u003e\n\u003ch3 id=\"饱和度\"\u003e饱和度\u003c/h3\u003e\n\u003cp\u003e饱和度（Saturation）指的是色彩的纯度，饱和度由光强度和它在不同波长的光谱中分布的程度共同决定。下图为红色从最小饱和度到最大饱和度的示例：\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"/images/cn/2023-04-22-what-i-talk-about-when-i-talk-about-photo-retouching/red-saturations.png\" alt=\"\"/\u003e\u003c/p\u003e\n\u003ch3 id=\"亮度和明度\"\u003e亮度和明度\u003c/h3\u003e\n\u003cp\u003e明度值是与同样亮的白色物体相比，某物的亮的程度。如果我们拍摄一张图像，提取图像色相、饱和度和明度值，然后将它们与不同色彩空间的明度值进行比较，可以迅速地从视觉上得出差异。如下图所示，HSV 色彩空间中的 V 值和 HSL 色彩空间中的 L 值与感知明度值明显不同：\u003c/p\u003e\n\u003cdiv class=\"flex\" style=\"\n  display: flex;\n  flex-direction: row;\n  flex-wrap: nowrap;\n  justify-content: space-between;\n  align-items: center;\n  align-content: center;\n  row-gap: 10px;\n  column-gap: 10px;\"\u003e\n\u003cdiv class=\"flex-item\" style=\"\n  order: 0;\n  flex-grow: 0;\n  flex-shrink: 1;\n  flex-basis: auto;\n  align-self: auto;\"\u003e\n  \u003cfigure\u003e\n  \u003cimg class=\"lazyload\" data-src=\"/images/cn/2023-04-22-what-i-talk-about-when-i-talk-about-photo-retouching/fire-breather.jpg\" data-large-max-width=\"100%\" data-middle-max-width=\"100%\" data-small-max-width=\"100%\"/\u003e\n  \u003cfigcaption class=\"kai\"\u003e原始图片\u003c/figcaption\u003e\n\u003c/figure\u003e\n\u003c/div\u003e\n\u003cdiv class=\"flex-item\" style=\"\n  order: 0;\n  flex-grow: 0;\n  flex-shrink: 1;\n  flex-basis: auto;\n  align-self: auto;\"\u003e\n  \u003cfigure\u003e\n  \u003cimg class=\"lazyload\" data-src=\"/images/cn/2023-04-22-what-i-talk-about-when-i-talk-about-photo-retouching/fire-breather-hsl-l.jpg\" data-large-max-width=\"100%\" data-middle-max-width=\"100%\" data-small-max-width=\"100%\"/\u003e\n  \u003cfigcaption class=\"kai\"\u003eHSL 中的 L\u003c/figcaption\u003e\n\u003c/figure\u003e\n\u003c/div\u003e\n\u003cdiv class=\"flex-item\" style=\"\n  order: 0;\n  flex-grow: 0;\n  flex-shrink: 1;\n  flex-basis: auto;\n  align-self: auto;\"\u003e\n  \u003cfigure\u003e\n  \u003cimg class=\"lazyload\" data-src=\"/images/cn/2023-04-22-what-i-talk-about-when-i-talk-about-photo-retouching/fire-breather-hsv-v.jpg\" data-large-max-width=\"100%\" data-middle-max-width=\"100%\" data-small-max-width=\"100%\"/\u003e\n  \u003cfigcaption class=\"kai\"\u003eHSV 中的 V\u003c/figcaption\u003e\n\u003c/figure\u003e\n\u003c/div\u003e\n\u003c/div\u003e\n\u003ch3 id=\"差异\"\u003e差异\u003c/h3\u003e\n\u003cp\u003eHSV 和 HSL 两者对于色相（H）的定义一致，但对于饱和度（S）和亮度与明度（L 与 B）的定义并不一致。\u003c/p\u003e\n\u003cp\u003e在 HSL 中，饱和度独立于亮度存在，也就是说非常浅的颜色和非常深的颜色都可以在 HSL 中非常饱和。而在 HSV 中，接近于白色的颜色都具有较低的饱和度。\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eHSV 中的 S 控制纯色中混入白色的量，值越大，混入的白色越少，颜色越纯。\u003c/li\u003e\n\u003cli\u003eHSV 中的 V 控制纯色中混入黑色的量，值越大，混入的黑色越少，明度越高。\u003c/li\u003e\n\u003cli\u003eHSL 中的 S 和黑白没有关系，饱和度不控制颜色中混入白色和黑色的多少。\u003c/li\u003e\n\u003cli\u003eHSL 中的 L 控制纯色中混入白色和黑色的多少。\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e以 Photoshop 和 Afiinity Photo 两款软件的拾色器为例：\u003c/p\u003e\n\u003cdiv class=\"flex\" style=\"\n  display: flex;\n  flex-direction: row;\n  flex-wrap: nowrap;\n  justify-content: space-around;\n  align-items: center;\n  align-content: center;\n  row-gap: 10px;\n  column-gap: 10px;\"\u003e\n\u003cdiv class=\"flex-item\" style=\"\n  order: 0;\n  flex-grow: 0;\n  flex-shrink: 1;\n  flex-basis: auto;\n  align-self: auto;\"\u003e\n  \u003cfigure\u003e\n  \u003cimg class=\"lazyload\" data-src=\"/images/cn/2023-04-22-what-i-talk-about-when-i-talk-about-photo-retouching/color-picker-photoshop.png\" data-large-max-width=\"100%\" data-middle-max-width=\"100%\" data-small-max-width=\"100%\"/\u003e\n  \u003cfigcaption class=\"kai\"\u003ePhotoshop 拾色器（HSV）\u003c/figcaption\u003e\n\u003c/figure\u003e\n\u003c/div\u003e\n\u003cdiv class=\"flex-item\" style=\"\n  order: 0;\n  flex-grow: 0;\n  flex-shrink: 1;\n  flex-basis: auto;\n  align-self: auto;\"\u003e\n  \u003cfigure\u003e\n  \u003cimg class=\"lazyload\" data-src=\"/images/cn/2023-04-22-what-i-talk-about-when-i-talk-about-photo-retouching/color-picker-affinityphoto.png\" data-large-max-width=\"100%\" data-middle-max-width=\"100%\" data-small-max-width=\"100%\"/\u003e\n  \u003cfigcaption class=\"kai\"\u003eAfiinity Photo 拾色器（HSL）\u003c/figcaption\u003e\n\u003c/figure\u003e\n\u003c/div\u003e\n\u003c/div\u003e\n\u003cp\u003e两个软件分别采用 HSV 和 HSL 色彩空间，其横轴为饱和度（S），纵轴分别为明度（V）和亮度（L）。不难看出，在 Photoshop 拾色器中，越往上混入的黑色越少，明度越高；越往右混入的白色越少，纯度越高。在 Afiinity Photo 拾色器中，下部为纯黑色，亮度最小，从下往上，混入的黑色逐渐减少，直到 50% 位置处完全没有黑色混入，继续往上走，混入的白色逐渐增加，直到 100% 位置处完全变为纯白色，亮度最高。\u003c/p\u003e\n\u003ch1 id=\"直方图\"\u003e直方图\u003c/h1\u003e\n\u003cp\u003e图像直方图是反映图像\u003cstrong\u003e色彩亮度\u003c/strong\u003e的直方图，其中 $x$ 轴表示亮度值，$y$ 轴表示图像中该亮度值像素点的个数。以 $8$ 位图像为例，亮度的取值范围为 $\\left[0, 2^8-1\\right]$，即 $\\left[0, 255\\right]$。以如下图片为例（原始图片：\u003ca href=\"/images/cn/2023-04-22-what-i-talk-about-when-i-talk-about-photo-retouching/demo.jpg\"\u003e链接\u003c/a\u003e）：\u003c/p\u003e\n\u003cfigure\u003e\n  \u003cimg class=\"lazyload\" data-src=\"/images/cn/2023-04-22-what-i-talk-about-when-i-talk-about-photo-retouching/demo-small.jpg\" data-large-max-width=\"100%\" data-middle-max-width=\"100%\" data-small-max-width=\"100%\"/\u003e\n  \u003cfigcaption class=\"kai\"\u003e原始图片\u003c/figcaption\u003e\n\u003c/figure\u003e\n\u003cp\u003e在 Lightroom 中直方图如下所示：\u003c/p\u003e\n\u003cfigure\u003e\n  \u003cimg class=\"lazyload\" data-src=\"/images/cn/2023-04-22-what-i-talk-about-when-i-talk-about-photo-retouching/demo-lightroom-image-histgram.png\" data-large-max-width=\"100%\" data-middle-max-width=\"100%\" data-small-max-width=\"100%\"/\u003e\n  \u003cfigcaption class=\"kai\"\u003e原始图片 Lightroom 直方图\u003c/figcaption\u003e\n\u003c/figure\u003e\n\u003cp\u003e利用 Python 绘制的直方图如下所示：\u003c/p\u003e\n\u003clink rel=\"stylesheet\" href=\"/css/details-summary.css\"/\u003e\n\u003cdetails\u003e\n  \u003csummary\u003e直方图代码\u003c/summary\u003e\n  \u003cdiv class=\"detail-content\"\u003e\n\u003cpre\u003e\u003ccode class=\"language-python\"\u003eimport cv2\n\nimport numpy as np\nimport matplotlib.pyplot as plt\n\ngray_img = cv2.imread(\u0026#39;demo.jpg\u0026#39;, cv2.IMREAD_GRAYSCALE)\nimg = cv2.imread(\u0026#39;demo.jpg\u0026#39;)\nimg_channels = cv2.split(img)\nheight, width = gray_img.shape\ngray_img_hist = cv2.calcHist([gray_img], [0], None, [256], [0, 256])\nimg_channels_hist = [cv2.calcHist([img_channel], [0], None, [256], [0, 256])\n                     for img_channel in img_channels]\n\nfig, ax = plt.subplots(1, 1)\n\nax.plot(gray_img_hist, color=\u0026#39;0.6\u0026#39;, label=\u0026#39;灰\u0026#39;)\n\nfor (img_channel_hist, color, label) in zip(\n  img_channels_hist, [\u0026#39;#6695ff\u0026#39;, \u0026#39;#70df5f\u0026#39;, \u0026#39;#f74048\u0026#39;], [\u0026#39;蓝\u0026#39;, \u0026#39;绿\u0026#39;, \u0026#39;红\u0026#39;]):\n    ax.plot(img_channel_hist, color=color, label=label)\n\nsegments = [0, 28, 85, 170, 227, 255]\nsegments_text = [\u0026#39;黑色\u0026#39;, \u0026#39;阴影\u0026#39;, \u0026#39;曝光\u0026#39;, \u0026#39;高光\u0026#39;, \u0026#39;白色\u0026#39;]\n\nfor (left_border, right_border, segment_text) in \\\n        zip(segments[:-1], segments[1:], segments_text):\n  if left_border != 0:\n    ax.axvline(x=left_border, ymin=0, color=\u0026#39;black\u0026#39;)\n  \n  ax.annotate(\n      segment_text,\n      xy=((left_border + right_border) / 2, np.max(img_channels_hist) / 3),\n      ha=\u0026#39;center\u0026#39;)\n\nax.legend(loc=\u0026#39;upper center\u0026#39;)\nplt.xlim([0, 256])\nax.set_xticks([0, 32, 64, 96, 128, 160, 192, 224, 256])\nax.axes.get_yaxis().set_visible(False)\n\nplt.tight_layout()\nfig.set_size_inches(8, 4)\nplt.savefig(\u0026#39;demo-image-histgram.png\u0026#39;, dpi=100)\n\u003c/code\u003e\u003c/pre\u003e\n\u003c/div\u003e\n\u003c/details\u003e\n\u003cfigure\u003e\n  \u003cimg class=\"lazyload\" data-src=\"/images/cn/2023-04-22-what-i-talk-about-when-i-talk-about-photo-retouching/demo-image-histgram.png\" data-large-max-width=\"100%\" data-middle-max-width=\"100%\" data-small-max-width=\"100%\"/\u003e\n  \u003cfigcaption class=\"kai\"\u003e原始图片直方图\u003c/figcaption\u003e\n\u003c/figure\u003e\n\u003cp\u003e直方图以 $28, 85, 170, 227$ 为分界线可以划分为\u003cstrong\u003e黑色\u003c/strong\u003e、\u003cstrong\u003e阴影\u003c/strong\u003e、\u003cstrong\u003e曝光\u003c/strong\u003e、\u003cstrong\u003e高光\u003c/strong\u003e、\u003cstrong\u003e白色\u003c/strong\u003e共 5 个区域。其中曝光区域以适中的亮度保留了图片最多的细节，阴影和高光对应了照片中较暗和较亮的区域，黑色和白色两个部分则几乎没有任何细节。当整个直方图\u003cstrong\u003e过于偏左\u003c/strong\u003e时表示\u003cstrong\u003e欠曝\u003c/strong\u003e，\u003cstrong\u003e过于偏右\u003c/strong\u003e时则表示\u003cstrong\u003e过曝\u003c/strong\u003e。\u003c/p\u003e\n\u003ch1 id=\"色温\"\u003e色温\u003c/h1\u003e\n\u003cp\u003e色温（Temperature）是指照片中光源发出相似的光的黑体辐射体所具有的开尔文温度。开尔文温度越\u003cstrong\u003e低\u003c/strong\u003e光越\u003cstrong\u003e暖\u003c/strong\u003e，开尔文温度越\u003cstrong\u003e高\u003c/strong\u003e光越\u003cstrong\u003e冷\u003c/strong\u003e，如下图所示：\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"/images/cn/2023-04-22-what-i-talk-about-when-i-talk-about-photo-retouching/color-temperature.png\" alt=\"\"/\u003e\u003c/p\u003e\n\u003cp\u003e针对图片分别应用 5000K 和 10000K 色温的对比结果如下图所示：\u003c/p\u003e\n\u003cdetails\u003e\n  \u003csummary\u003e色温代码\u003c/summary\u003e\n  \u003cdiv class=\"detail-content\"\u003e\n\u003cpre\u003e\u003ccode class=\"language-python\"\u003eimport math\nimport cv2\n\nimport numpy as np\n\n\ndef __kelvin_to_rgb(kelvin: int) -\u0026gt; (int, int, int):\n  kelvin = np.clip(kelvin, min_val=1000, max_val=40000)\n  temperature = kelvin / 100.0\n\n  # 红色通道\n  if temperature \u0026lt; 66.0:\n      red = 255\n  else:\n      # a + b x + c Log[x] /.\n      # {a -\u0026gt; 351.97690566805693`,\n      # b -\u0026gt; 0.114206453784165`,\n      # c -\u0026gt; -40.25366309332127\n      # x -\u0026gt; (kelvin/100) - 55}\n      red = temperature - 55.0\n      red = 351.97690566805693 + 0.114206453784165 * red \\\n            - 40.25366309332127 * math.log(red)\n\n  # 绿色通道\n  if temperature \u0026lt; 66.0:\n      # a + b x + c Log[x] /.\n      # {a -\u0026gt; -155.25485562709179`,\n      # b -\u0026gt; -0.44596950469579133`,\n      # c -\u0026gt; 104.49216199393888`,\n      # x -\u0026gt; (kelvin/100) - 2}\n      green = temperature - 2\n      green = -155.25485562709179 - 0.44596950469579133 * green \\\n              + 104.49216199393888 * math.log(green)\n  else:\n      # a + b x + c Log[x] /.\n      # {a -\u0026gt; 325.4494125711974`,\n      # b -\u0026gt; 0.07943456536662342`,\n      # c -\u0026gt; -28.0852963507957`,\n      # x -\u0026gt; (kelvin/100) - 50}\n      green = temperature - 50.0\n      green = 325.4494125711974 + 0.07943456536662342 * green \\\n              - 28.0852963507957 * math.log(green)\n\n  # 蓝色通道\n  if temperature \u0026gt;= 66.0:\n      blue = 255\n  elif temperature \u0026lt;= 20.0:\n      blue = 0\n  else:\n      # a + b x + c Log[x] /.\n      # {a -\u0026gt; -254.76935184120902`,\n      # b -\u0026gt; 0.8274096064007395`,\n      # c -\u0026gt; 115.67994401066147`,\n      # x -\u0026gt; kelvin/100 - 10}\n      blue = temperature - 10.0\n      blue = -254.76935184120902 + 0.8274096064007395 * blue \\\n             + 115.67994401066147 * math.log(blue)\n\n  return np.clip(red, 0, 255), np.clip(green, 0, 255), np.clip(blue, 0, 255)\n\n\ndef __mix_color(v1, v2, ratio: float):\n  return np.array((1.0 - ratio) * v1 + 0.5).astype(np.uint8) \\\n      + np.array(ratio * v2).astype(np.uint8)\n\n\ndef __keep_original_lightness(original_image, image):\n  original_l = cv2.cvtColor(original_image, cv2.COLOR_BGR2HLS)[..., 1]\n  h, l, s = cv2.split(cv2.cvtColor(image, cv2.COLOR_BGR2HLS))\n\n  return cv2.cvtColor(cv2.merge([h, original_l, s]), cv2.COLOR_HLS2BGR)\n\n\ndef apply_temperature(\n        image,\n        temperature,\n        keep_original_lightness: bool = True):\n  b, g, r = cv2.split(image)\n  n_b = np.clip(b.astype(np.single) - temperature, 0, 255).astype(np.uint8)\n  n_r = np.clip(r.astype(np.single) + temperature, 0, 255).astype(np.uint8)\n  ret_image = cv2.merge([n_b, g, n_r])\n\n  return __keep_original_lightness(image, ret_image) \\\n      if keep_original_lightness else ret_image\n\n\ndef apply_kelvin(\n        image,\n        kelvin: int,\n        strength: float = 0.6,\n        keep_original_lightness: bool = True):\n  b, g, r = cv2.split(image)\n  k_r, k_g, k_b = __kelvin_to_rgb(kelvin)\n  n_r, n_g, n_b = __mix_color(r, k_r, strength), \\\n      __mix_color(g, k_g, strength), __mix_color(b, k_b, strength)\n  ret_image = cv2.merge([n_b, n_g, n_r])\n\n  return __keep_original_lightness(image, ret_image) \\\n      if keep_original_lightness else ret_image\n\n\nimg = cv2.imread(\u0026#39;demo.jpg\u0026#39;)\ncv2.imwrite(\u0026#39;demo-color-temperature-cold.jpg\u0026#39;, apply_kelvin(img, 5000))\ncv2.imwrite(\u0026#39;demo-color-temperature-cold.jpg\u0026#39;, apply_kelvin(img, 10000))\n\u003c/code\u003e\u003c/pre\u003e\n\u003c/div\u003e\n\u003c/details\u003e\n\n\u003clink rel=\"stylesheet\" type=\"text/css\" href=\"//cdn.jsdelivr.net/npm/image-compare-viewer@latest/dist/image-compare-viewer.min.css\"/\u003e\n\n\n\n\u003cp\u003e\n  \u003c/p\u003e\u003cdiv class=\"image-compare\" data-show-labels=\"true\" data-label-before=\"暖色\" data-label-after=\"冷色\"\u003e\n    \u003cimg src=\"/images/cn/2023-04-22-what-i-talk-about-when-i-talk-about-photo-retouching/demo-color-temperature-warm.jpg\"/\u003e\n    \u003cimg src=\"/images/cn/2023-04-22-what-i-talk-about-when-i-talk-about-photo-retouching/demo-color-temperature-cold.jpg\"/\u003e\n  \u003c/div\u003e\n\u003cp\u003e\u003c/p\u003e\n\n\u003ch1 id=\"色调\"\u003e色调\u003c/h1\u003e\n\u003cp\u003e色调（Tint）允许我们为了实现中和色偏或增加色偏的目的，而将色偏向绿色或洋红色转变。针对图片分别应用 -30 和 +30 色调的对比结果如下图所示：\u003c/p\u003e\n\u003cdetails\u003e\n  \u003csummary\u003e色调代码\u003c/summary\u003e\n  \u003cdiv class=\"detail-content\"\u003e\n\u003cpre\u003e\u003ccode class=\"language-python\"\u003eimport cv2\n\nimport numpy as np\n\n\ndef __keep_original_lightness(original_image, image):\n  original_l = cv2.cvtColor(original_image, cv2.COLOR_BGR2HLS)[..., 1]\n  h, l, s = cv2.split(cv2.cvtColor(image, cv2.COLOR_BGR2HLS))\n\n  return cv2.cvtColor(cv2.merge([h, original_l, s]), cv2.COLOR_HLS2BGR)\n\n\ndef apply_tint(image, tint, keep_original_lightness: bool = True):\n  b, g, r = cv2.split(image)\n  n_g = np.clip(g.astype(np.single) + tint, 0, 255).astype(np.uint8)\n  ret_image = cv2.merge([b, n_g, r])\n\n  return __keep_original_lightness(image, ret_image) \\\n    if keep_original_lightness else ret_image\n\n\nimg = cv2.imread(\u0026#39;demo.jpg\u0026#39;)\ncv2.imwrite(\u0026#39;demo-color-tint-negative.jpg\u0026#39;, apply_tint(img, -30))\ncv2.imwrite(\u0026#39;demo-color-tint-positive.jpg\u0026#39;, apply_tint(img, +30))\n\u003c/code\u003e\u003c/pre\u003e\n\u003c/div\u003e\n\u003c/details\u003e\n\n\n\u003cp\u003e\n  \u003c/p\u003e\u003cdiv class=\"image-compare\" data-show-labels=\"true\" data-label-before=\"洋红\" data-label-after=\"绿色\"\u003e\n    \u003cimg src=\"/images/cn/2023-04-22-what-i-talk-about-when-i-talk-about-photo-retouching/demo-color-tint-negative.jpg\"/\u003e\n    \u003cimg src=\"/images/cn/2023-04-22-what-i-talk-about-when-i-talk-about-photo-retouching/demo-color-tint-positive.jpg\"/\u003e\n  \u003c/div\u003e\n\u003cp\u003e\u003c/p\u003e\n\n\n\n\n\n\n\u003cdiv class=\"donate\"\u003e\n  \u003cdiv class=\"donate-header\"\u003e\u003c/div\u003e\n  \u003cdiv class=\"donate-slug\" id=\"donate-slug\"\u003ewhat-i-talk-about-when-i-talk-about-photo-retouching-colors-part-1\u003c/div\u003e\n  \u003cbutton class=\"donate-button\"\u003e赞 赏\u003c/button\u003e\n  \u003cdiv class=\"donate-footer\"\u003e「真诚赞赏，手留余香」\u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"donate-modal-wrapper\"\u003e\n  \u003cdiv class=\"donate-modal\"\u003e\n    \u003cdiv class=\"donate-box\"\u003e\n      \u003cdiv class=\"donate-box-content\"\u003e\n        \u003cdiv class=\"donate-box-content-inner\"\u003e\n          \u003cdiv class=\"donate-box-header\"\u003e「真诚赞赏，手留余香」\u003c/div\u003e\n          \u003cdiv class=\"donate-box-body\"\u003e\n            \u003cdiv class=\"donate-box-money\"\u003e\n              \u003cbutton class=\"donate-box-money-button donate-box-money-button-unchecked\" id=\"donate-box-money-button-2\" data-v=\"2\" data-unchecked=\"￥ 2\" data-checked=\"2 元\"\u003e￥ 2\u003c/button\u003e\n              \u003cbutton class=\"donate-box-money-button donate-box-money-button-unchecked\" id=\"donate-box-money-button-5\" data-v=\"5\" data-unchecked=\"￥ 5\" data-checked=\"5 元\"\u003e￥ 5\u003c/button\u003e\n              \u003cbutton class=\"donate-box-money-button donate-box-money-button-unchecked\" id=\"donate-box-money-button-10\" data-v=\"10\" data-unchecked=\"￥ 10\" data-checked=\"10 元\"\u003e￥ 10\u003c/button\u003e\n              \u003cbutton class=\"donate-box-money-button donate-box-money-button-unchecked\" id=\"donate-box-money-button-50\" data-v=\"50\" data-unchecked=\"￥ 50\" data-checked=\"50 元\"\u003e￥ 50\u003c/button\u003e\n              \u003cbutton class=\"donate-box-money-button donate-box-money-button-unchecked\" id=\"donate-box-money-button-100\" data-v=\"100\" data-unchecked=\"￥ 100\" data-checked=\"100 元\"\u003e￥ 100\u003c/button\u003e\n              \u003cbutton class=\"donate-box-money-button donate-box-money-button-unchecked\" id=\"donate-box-money-button-custom\" data-v=\"custom\" data-unchecked=\"任意金额\" data-checked=\"任意金额\"\u003e任意金额\u003c/button\u003e\n            \u003c/div\u003e\n            \u003cdiv class=\"donate-box-pay\"\u003e\n              \u003cimg class=\"donate-box-pay-qrcode\" id=\"donate-box-pay-qrcode\" src=\"\"/\u003e\n            \u003c/div\u003e\n          \u003c/div\u003e\n          \u003cdiv class=\"donate-box-footer\"\u003e\n            \u003cdiv class=\"donate-box-pay-method donate-box-pay-method-checked\" data-v=\"wechat-pay\"\u003e\n              \u003cimg class=\"donate-box-pay-method-image\" id=\"donate-box-pay-method-image-wechat-pay\" src=\"\"/\u003e\n            \u003c/div\u003e\n            \u003cdiv class=\"donate-box-pay-method\" data-v=\"alipay\"\u003e\n              \u003cimg class=\"donate-box-pay-method-image\" id=\"donate-box-pay-method-image-alipay\" src=\"\"/\u003e\n            \u003c/div\u003e\n          \u003c/div\u003e\n        \u003c/div\u003e\n      \u003c/div\u003e\n    \u003c/div\u003e\n    \u003cbutton type=\"button\" class=\"donate-box-close-button\"\u003e\n      \u003csvg class=\"donate-box-close-button-icon\" fill=\"#fff\" viewBox=\"0 0 24 24\" width=\"24\" height=\"24\"\u003e\u003cpath d=\"M13.486 12l5.208-5.207a1.048 1.048 0 0 0-.006-1.483 1.046 1.046 0 0 0-1.482-.005L12 10.514 6.793 5.305a1.048 1.048 0 0 0-1.483.005 1.046 1.046 0 0 0-.005 1.483L10.514 12l-5.208 5.207a1.048 1.048 0 0 0 .006 1.483 1.046 1.046 0 0 0 1.482.005L12 13.486l5.207 5.208a1.048 1.048 0 0 0 1.483-.006 1.046 1.046 0 0 0 .005-1.482L13.486 12z\" fill-rule=\"evenodd\"\u003e\u003c/path\u003e\u003c/svg\u003e\n    \u003c/button\u003e\n  \u003c/div\u003e\n\u003c/div\u003e\n\n\u003cscript type=\"text/javascript\" src=\"/js/donate.js\"\u003e\u003c/script\u003e\n\n\n  \u003cfooter\u003e\n  \n\u003cnav class=\"post-nav\"\u003e\n  \u003cspan class=\"nav-prev\"\u003e← \u003ca href=\"/cn/2023/03/gpu-machine-learning-environment-configuration-under-windows-with-wsl2-and-ubuntu/\"\u003e在 Windows 下利用 WSL2 和 Ubuntu 配置 GPU 机器学习环境 (GPU Machine Leanring Environment Configuration under Windows with WSL2 and Ubuntu)\u003c/a\u003e\u003c/span\u003e\n  \u003cspan class=\"nav-next\"\u003e\u003ca href=\"/cn/2023/05/css-display-and-position/\"\u003eCSS 布局和定位 (CSS Display \u0026amp; Position)\u003c/a\u003e →\u003c/span\u003e\n\u003c/nav\u003e\n\n\n\n\n\u003cins class=\"adsbygoogle\" style=\"display:block; text-align:center;\" data-ad-layout=\"in-article\" data-ad-format=\"fluid\" data-ad-client=\"ca-pub-2608165017777396\" data-ad-slot=\"8302038603\"\u003e\u003c/ins\u003e\n\u003cscript\u003e\n  (adsbygoogle = window.adsbygoogle || []).push({});\n\u003c/script\u003e\n\n\n\n\u003cscript src=\"//cdn.jsdelivr.net/npm/js-cookie@3.0.5/dist/js.cookie.min.js\"\u003e\u003c/script\u003e\n\u003cscript src=\"/js/toggle-theme.js\"\u003e\u003c/script\u003e\n\n\n\u003cscript src=\"/js/no-highlight.js\"\u003e\u003c/script\u003e\n\u003cscript src=\"/js/math-code.js\"\u003e\u003c/script\u003e\n\u003cscript src=\"/js/heading-anchor.js\"\u003e\u003c/script\u003e\n\n\n\n\u003csection class=\"comments\"\u003e\n\u003cscript src=\"https://giscus.app/client.js\" data-repo=\"leovan/leovan.me\" data-repo-id=\"MDEwOlJlcG9zaXRvcnkxMTMxOTY0Mjc=\" data-category=\"Comments\" data-category-id=\"DIC_kwDOBr89i84CT-R7\" data-mapping=\"pathname\" data-strict=\"1\" data-reactions-enabled=\"1\" data-emit-metadata=\"0\" data-input-position=\"top\" data-theme=\"preferred_color_scheme\" data-lang=\"zh-CN\" data-loading=\"lazy\" crossorigin=\"anonymous\" defer=\"\"\u003e\n\u003c/script\u003e\n\u003c/section\u003e\n\n\n\u003cscript src=\"//cdn.jsdelivr.net/npm/clipboard@2.0.11/dist/clipboard.min.js\"\u003e\u003c/script\u003e\n\u003cscript src=\"//cdn.jsdelivr.net/npm/prismjs@1.29.0/prism.min.js\"\u003e\u003c/script\u003e\n\u003cscript src=\"//cdn.jsdelivr.net/npm/prismjs@1.29.0/plugins/autoloader/prism-autoloader.min.js\"\u003e\u003c/script\u003e\n\u003cscript src=\"//cdn.jsdelivr.net/npm/prismjs@1.29.0/plugins/toolbar/prism-toolbar.min.js\"\u003e\u003c/script\u003e\n\u003cscript\u003e\n  (function() {\n    if (!self.Prism) {\n      return;\n    }\n\n    \n    Prism.languages.dos = Prism.languages.powershell;\n    Prism.languages.gremlin = Prism.languages.groovy;\n\n    let languages = {\n      'r': 'R', 'python': 'Python', 'xml': 'XML', 'html': 'HTML',\n      'yaml': 'YAML', 'latex': 'LaTeX', 'tex': 'TeX',\n      'powershell': 'PowerShell', 'javascript': 'JavaScript',\n      'dos': 'DOS', 'qml': 'QML', 'json': 'JSON', 'bash': 'Bash',\n      'text': 'Text', 'txt': 'Text', 'sparql': 'SPARQL',\n      'gremlin': 'Gremlin', 'cypher': 'Cypher', 'ngql': 'nGQL',\n      'shell': 'Shell', 'sql': 'SQL', 'apacheconf': 'Apache Configuration', 'c': 'C', 'css': 'CSS'\n    };\n\n    Prism.hooks.add('before-highlight', function(env) {\n      if (env.language !== 'plain') {\n        let language = languages[env.language] || env.language;\n        env.element.setAttribute('data-language', language);\n      }\n    });\n\n    \n    let ClipboardJS = window.ClipboardJS || undefined;\n\n    Prism.plugins.toolbar.registerButton('copy-to-clipboard', function(env) {\n      let linkCopy = document.createElement('button');\n      linkCopy.classList.add('prism-button-copy');\n\n      registerClipboard();\n\n      return linkCopy;\n\n      function registerClipboard() {\n        let clip = new ClipboardJS(linkCopy, {\n          'text': function () {\n            return env.code;\n          }\n        });\n\n        clip.on('success', function() {\n          linkCopy.classList.add('prism-button-copy-success');\n          resetText();\n        });\n        clip.on('error', function () {\n          linkCopy.classList.add('prism-button-copy-error');\n          resetText();\n        });\n      }\n\n      function resetText() {\n        setTimeout(function () {\n          linkCopy.classList.remove('prism-button-copy-success');\n          linkCopy.classList.remove('prism-button-copy-error');\n        }, 1600);\n      }\n    });\n  })();\n\u003c/script\u003e\n\n\n\n\n\n\u003cscript src=\"//cdn.jsdelivr.net/npm/image-compare-viewer@latest/dist/image-compare-viewer.min.js\"\u003e\u003c/script\u003e\n\u003cscript type=\"text/javascript\"\u003e\n(function(d) {\n  d.querySelectorAll(\".image-compare\").forEach(function(elem) {\n    let options = {\n      controlColor: elem.dataset.controlColor || \"#FFFFFF\",\n      controlShadow: elem.dataset.controlColor || true,\n      addCircle: elem.dataset.addCircle || false,\n      addCircleBlur: elem.dataset.addCircleBlur || true,\n      showLabels: elem.dataset.showLabels || false,\n      labelOptions: {\n        before: elem.dataset.labelBefore || \"Before\",\n        after: elem.dataset.labelAfter || \"After\",\n        onHover: elem.dataset.labelOnHover || false\n      },\n      smoothing: elem.dataset.smoothing || true,\n      smoothingAmount: elem.dataset.smoothingAmount || 100,\n      hoverStart: elem.dataset.hoverStart || false,\n      verticalMode: elem.dataset.verticalMode || false,\n      startingPoint: elem.dataset.startingPoint || 50,\n      fluidMode: elem.dataset.fluidMode || false\n    };\n    const viewer = new ImageCompare(elem, options).mount();\n  });\n})(document);\n\u003c/script\u003e\n\n\n\n\n\n\n\n\n\n\u003cscript async=\"\" src=\"/js/center-img.js\"\u003e\u003c/script\u003e\n\u003cscript async=\"\" src=\"/js/right-quote.js\"\u003e\u003c/script\u003e\n\u003cscript async=\"\" src=\"/js/external-link.js\"\u003e\u003c/script\u003e\n\u003cscript async=\"\" src=\"/js/alt-title.js\"\u003e\u003c/script\u003e\n\u003cscript async=\"\" src=\"/js/figure.js\"\u003e\u003c/script\u003e\n\n\n\n\u003cscript src=\"//cdn.jsdelivr.net/npm/lazysizes@5.3.2/lazysizes.min.js\"\u003e\u003c/script\u003e\n\n\n\u003cscript src=\"//cdn.jsdelivr.net/npm/vanilla-back-to-top@latest/dist/vanilla-back-to-top.min.js\"\u003e\u003c/script\u003e\n\u003cscript\u003e\naddBackToTop({\n  diameter: 48\n});\n\u003c/script\u003e\n\n  \u003chr/\u003e\n  \u003cdiv class=\"copyright no-border-bottom\"\u003e\n    \u003cdiv class=\"copyright-author-year\"\u003e\n      \u003cspan\u003eCopyright © 2017-2024 \u003ca href=\"/\"\u003e范叶亮 | Leo Van\u003c/a\u003e\u003c/span\u003e\n    \u003c/div\u003e\n  \u003c/div\u003e\n  \u003c/footer\u003e\n  \u003c/article\u003e",
  "Date": "2023-04-22T00:00:00Z",
  "Author": "范叶亮"
}