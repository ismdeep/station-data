{
  "Source": "leovan.me",
  "Title": "文学编程和可重复性研究 (Literate Programming and Reproducible Research)",
  "Link": "https://leovan.me/cn/2023/03/literate-programming-and-reproducible-research/",
  "Content": "\u003carticle class=\"main\"\u003e\n    \u003cheader class=\"content-title\"\u003e\n    \n\u003ch1 class=\"title\"\u003e\n  \n  文学编程和可重复性研究 (Literate Programming and Reproducible Research)\n  \n\u003c/h1\u003e\n\n\n\n\n\n\n\n\u003ch2 class=\"author-date\"\u003e范叶亮 / \n2023-03-11\u003c/h2\u003e\n\n\n\n\u003ch3 class=\"post-meta\"\u003e\n\n\n\u003cstrong\u003e分类: \u003c/strong\u003e\n\u003ca href=\"/categories/%E7%BC%96%E7%A8%8B\"\u003e编程\u003c/a\u003e\n\n\n\n\n/\n\n\n\n\n\u003cstrong\u003e标签: \u003c/strong\u003e\n\u003cspan\u003e文学编程\u003c/span\u003e, \u003cspan\u003eLiterate Programming\u003c/span\u003e, \u003cspan\u003e可重复性\u003c/span\u003e, \u003cspan\u003eReproducible\u003c/span\u003e, \u003cspan\u003e可重复性研究\u003c/span\u003e, \u003cspan\u003eReproducible Research\u003c/span\u003e, \u003cspan\u003e高德纳\u003c/span\u003e, \u003cspan\u003eDonald Ervin Knuth\u003c/span\u003e, \u003cspan\u003eTangle\u003c/span\u003e, \u003cspan\u003eWeave\u003c/span\u003e, \u003cspan\u003eWEB\u003c/span\u003e, \u003cspan\u003eCWEB\u003c/span\u003e, \u003cspan\u003enoweb\u003c/span\u003e, \u003cspan\u003eOrg Mode\u003c/span\u003e, \u003cspan\u003eSweave\u003c/span\u003e, \u003cspan\u003eknitr\u003c/span\u003e, \u003cspan\u003eJupyter\u003c/span\u003e, \u003cspan\u003eQuarto\u003c/span\u003e, \u003cspan\u003eR Markdown\u003c/span\u003e, \u003cspan\u003ebookdown\u003c/span\u003e, \u003cspan\u003edistill\u003c/span\u003e, \u003cspan\u003exaringan\u003c/span\u003e, \u003cspan\u003eblogdown\u003c/span\u003e, \u003cspan\u003eCloudflare Pages\u003c/span\u003e, \u003cspan\u003eNetlify\u003c/span\u003e, \u003cspan\u003eVercel\u003c/span\u003e, \u003cspan\u003eHugo\u003c/span\u003e, \u003cspan\u003eremark.js\u003c/span\u003e, \u003cspan\u003ereveal.js\u003c/span\u003e\n\n\n\n\n/\n\n\n\u003cstrong\u003e字数: \u003c/strong\u003e\n3960\n\u003c/h3\u003e\n\n\n\n\u003chr/\u003e\n\n\n\n    \n    \n    \u003cins class=\"adsbygoogle\" style=\"display:block; text-align:center;\" data-ad-layout=\"in-article\" data-ad-format=\"fluid\" data-ad-client=\"ca-pub-2608165017777396\" data-ad-slot=\"1261604535\"\u003e\u003c/ins\u003e\n    \u003cscript\u003e\n    (adsbygoogle = window.adsbygoogle || []).push({});\n    \u003c/script\u003e\n    \n    \n    \u003c/header\u003e\n\n\n\n\n\u003ch1 id=\"文学编程\"\u003e文学编程\u003c/h1\u003e\n\u003cp\u003e文学式编程（Literate Programming）是由高德纳提出的编程方法，希望能用来取代结构化编程范型。正如高德纳所构想的那样，文学编程范型不同于传统的由计算机强加的编写程序的方式和顺序，而代之以让程序员用他们自己思维内在的逻辑和流程所要求的顺序开发程序。文学编程自由地表达逻辑，而且它用人类日常使用的语言写出来，就好像一篇文章一样，文章里包括用来隐藏抽象的巨集和传统的源代码。文学编程工具用来从文学源文件中获得两种表达方式，一种用于计算机进一步的编译和执行，称作“绕出”（tangled）的代码，一种用于格式化文档，称作从文学源代码中“织出”（woven）。虽然第一代文学编程工具特定于计算机语言，但后来的工具可以不依赖具体语言，并且存在于比编程语言更高的层次中 \u003csup id=\"fnref:1\"\u003e\u003ca href=\"#fn:1\" class=\"footnote-ref\" role=\"doc-noteref\"\u003e1\u003c/a\u003e\u003c/sup\u003e。\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"/images/cn/2023-03-11-literate-programming-and-reproducible-research/dual-usage-of-a-web-file.png\" alt=\"\"/\u003e\u003c/p\u003e\n\u003cp\u003e如高德纳在论文 \u003csup id=\"fnref:2\"\u003e\u003ca href=\"#fn:2\" class=\"footnote-ref\" role=\"doc-noteref\"\u003e2\u003c/a\u003e\u003c/sup\u003e 中所示，相同的源文件经过“tangle”可以编译为机器代码，经过“weave”可以编译为文档。\u003c/p\u003e\n\u003ch2 id=\"文学编程历史\"\u003e文学编程历史\u003c/h2\u003e\n\u003cp\u003e从高德纳提出文学编程的概念后，各家各派都在将这个编程范式付诸实践。我接触文学编程已经比较晚了，算是从 R Markdown 和 knitr 开始，开始时写写分析报告和做做幻灯片，慢慢的在更多场景我发现这很适合。\u003c/p\u003e\n\u003ch3 id=\"web-cweb-noweb\"\u003eWEB, CWEB \u0026amp; noweb\u003c/h3\u003e\n\u003cp\u003eWEB 是一种计算机编程语言系统，它由高德纳设计，是第一种实现他称作“文学编程”的语言。WEB 包含了 2 个主要程序：TANGLE，从源文本生成可编译的 Pascal 代码，以及 WEAVE，使用 TeX 生成格式漂亮可打印的文档。CWEB 是 WEB 的 C 语言新版本，noweb 是另外一种借鉴了 WEB 的文学编程工具，同时与语言无关 \u003csup id=\"fnref:3\"\u003e\u003ca href=\"#fn:3\" class=\"footnote-ref\" role=\"doc-noteref\"\u003e3\u003c/a\u003e\u003c/sup\u003e。\u003c/p\u003e\n\u003cp\u003e以 \u003ca href=\"https://github.com/nrnrnr/noweb/blob/master/examples/wc.nw\"\u003e\u003ccode\u003ewc.nw\u003c/code\u003e\u003c/a\u003e 为例，其为 Unix 单词统计程序 \u003ccode\u003ewc\u003c/code\u003e 的 noweb 版本重写，原始的 CWEB 版本可以在高德纳的《文学编程》一书中找到。noweb 源代码中包含 TeX 代码和 C 语言代码，每个 C 语言代码片段都以一个 \u003ccode\u003e\u0026lt;\u0026lt;代码片段名称\u0026gt;\u0026gt;=\u003c/code\u003e 开头，以 \u003ccode\u003e@\u003c/code\u003e 结尾，程序的入口为 \u003ccode\u003e\u0026lt;\u0026lt;*\u0026gt;\u0026gt;=\u003c/code\u003e。在某个代码片段中调用其他代码片段只需要输入 \u003ccode\u003e\u0026lt;\u0026lt;代码片段名称\u0026gt;\u0026gt;\u003c/code\u003e 即可。\u003c/p\u003e\n\u003cp\u003e安装 \u003ca href=\"https://github.com/nrnrnr/noweb\"\u003e\u003ccode\u003enoweb\u003c/code\u003e\u003c/a\u003e，通过如下命令可以将 \u003ccode\u003ewc.nw\u003c/code\u003e 编译为 C 语言代码 \u003ccode\u003ewc.c\u003c/code\u003e：\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"language-shell\"\u003enotangle -L wc.nw \u0026gt; wc.c\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003e通过如下命令可以将 \u003ccode\u003ewc.nw\u003c/code\u003e 编译为 TeX 源代码：\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"language-shell\"\u003enoweave -autodefs c -index wc.nw \u0026gt; wc.tex\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch3 id=\"org-mode\"\u003eOrg Mode\u003c/h3\u003e\n\u003cp\u003e\u003ca href=\"https://orgmode.org/\"\u003eOrg Mode\u003c/a\u003e 是由 Carsten Dominik 于 2003 年发明的用于文本编辑器 \u003ca href=\"https://www.gnu.org/software/emacs/\"\u003eEmacs\u003c/a\u003e 的一种支持内容分级显示的编辑模式。这种模式下可以创建待办列表，日志管理，做笔记，做工程计划或者写网页。Org Mode 通常启用于后缀名为 org 的纯文本文件，使用星号标记有层次的内容（如文章大纲、话题与子话题、嵌套代码），并提供一组函数用于读取并展示这类标记以及操纵内容（如折叠大纲内容、移动元素、更改待办项状态）\u003csup id=\"fnref:4\"\u003e\u003ca href=\"#fn:4\" class=\"footnote-ref\" role=\"doc-noteref\"\u003e4\u003c/a\u003e\u003c/sup\u003e。\u003c/p\u003e\n\u003cp\u003e在 Org Mode 中使用 \u003ccode\u003e#+BEGIN_SRC\u003c/code\u003e 和 \u003ccode\u003e#+END_SRC\u003c/code\u003e 来标记代码块，在 \u003ccode\u003e#+BEGIN_SRC\u003c/code\u003e 后指定嵌入的代码类型，例如嵌入 C 语言源代码：\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"language-c\"\u003e#+BEGIN_SRC c\nint main(void) {\n  return 0;\n}\n#+END_SRC\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003e更多关于在 Org Mode 中的文学编程应用可以参见 \u003ca href=\"https://github.com/lujun9972/emacs-document/blob/master/org-mode/%E6%96%87%E5%AD%A6%E7%BC%96%E7%A8%8B%E7%AE%80%E4%BB%8B.org\"\u003elujun9972/emacs-document\u003c/a\u003e。\u003c/p\u003e\n\u003ch3 id=\"sweave-knitr\"\u003eSweave \u0026amp; knitr\u003c/h3\u003e\n\u003cp\u003e\u003ca href=\"https://stat.ethz.ch/R-manual/R-devel/library/utils/doc/Sweave.pdf\"\u003eSweave\u003c/a\u003e 是 R 语言的 WEB 实现，为什么是 Sweave 而不是 Rweave，没有仔细去找解释，但我猜测是由于 R 语言的前身为 S 语言吧。既然有了 Sweave 为什么没有 Stangle 呢？也是猜测，或许 Sweave 的作者在创作之初就更侧重于将 R 代码及其运行结果嵌入，“织出”最终阅读友好的文档吧。当然，由于 R 是一门统计分析语言，将所有 R 代码提取出来编译成可执行文件并不是它的优势，我猜这应该也是没有 Stangle 的一个原因吧。当然，也并不是没有人打算这么做，\u003ca href=\"https://thinkr-open.github.io/fusen/\"\u003efusen\u003c/a\u003e 是一个基于 R Markdown 直接生成 R 扩展包的扩展包，从一定程度上应该算是 tangle 的理念实现吧。\u003c/p\u003e\n\u003cp\u003eSweave 是基于 R 和 LaTeX 的实现，但 LaTeX 的学习曲线相对比较陡峭，\u003ca href=\"https://yihui.org/knitr/\"\u003eknitr\u003c/a\u003e 的出现拓展了 Sweave 的功能，例如：内容方面增加支持了 Markdown 等，代码方面增加支持了 Python 等。除此之外，也衍生出了多种多样的文档格式，例如：幻灯片（\u003ca href=\"https://github.com/yihui/xaringan\"\u003exaringan\u003c/a\u003e），图书（\u003ca href=\"https://bookdown.org/\"\u003ebookdown\u003c/a\u003e）和博客（\u003ca href=\"https://github.com/rstudio/blogdown\"\u003eblogdown\u003c/a\u003e）等等。\u003c/p\u003e\n\u003cp\u003e在 R Markdown 中使用如下方式嵌入代码，在 \u003ccode\u003e{}\u003c/code\u003e 中指定嵌入代码的类型，例如嵌入并执行 R 语言源代码：\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"language-r\"\u003e```{r}\nadd \u0026lt;- function(a, b) {\n  return(a + b)\n}\n\nprint(add(1, 1))\n```\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003e在同一个 R Markdown 文件中可以同时插入 R 和 Python 等多种不同语言的源代码，通过 \u003ca href=\"https://rstudio.github.io/reticulate/\"\u003ereticulate\u003c/a\u003e 甚至可以实现 R 和 Python 之间的数据交互。\u003c/p\u003e\n\u003ch3 id=\"jupyter\"\u003eJupyter\u003c/h3\u003e\n\u003cp\u003e\u003ca href=\"https://jupyter.org/\"\u003eJupyter\u003c/a\u003e 是从 IPython Notebook 发展而来，基于 Python 语言的强大优势，其在业界迅速占领了一大片应用市场，后来 Jupyter 也逐渐支持其他语言。虽然现在 R Markdown 也支持在 RStuido 等编辑器中逐行运行，但个人认为 Jupyter 的最大优势就在于边写边运行，这也使得 Jupyter 在教育等需要实时运行的领域应用最为广泛。\u003c/p\u003e\n\u003cp\u003eJupyter 仍以 \u003ccode\u003e.ipynb\u003c/code\u003e 为扩展名，其底层为 JSON 格式的文本文件。原生 Jupyter 针对一个文件仅支持一种 Kernel，即运行一种类型的代码，当通过一些\u003ca href=\"https://rpy2.github.io/doc/latest/html/generated_rst/notebooks.html\"\u003e技巧\u003c/a\u003e也可以实现同时运行多种类型的代码。\u003c/p\u003e\n\u003ch3 id=\"quarto\"\u003eQuarto\u003c/h3\u003e\n\u003cp\u003e\u003ca href=\"https://quarto.org/\"\u003eQuarto\u003c/a\u003e 是 Posit（RStudio 的新公司名）开发的一个基于 \u003ca href=\"https://pandoc.org/\"\u003ePandoc\u003c/a\u003e 的开源技术出版系统。Quarto 的目标是改进科学和技术文档的创建和协作过程，其希望将 R Markdown、\u003ca href=\"https://bookdown.org/\"\u003ebookdown\u003c/a\u003e、\u003ca href=\"https://rstudio.github.io/distill/\"\u003edistill\u003c/a\u003e、\u003ca href=\"https://slides.yihui.org/xaringan/\"\u003exaringan\u003c/a\u003e 等功能统一到一个系统中。\u003c/p\u003e\n\u003cp\u003eQuarto 的工作流程同 R Markdown 类似，如下图所示：\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"/images/cn/2023-03-11-literate-programming-and-reproducible-research/qmd-how-it-works.png\" alt=\"\"/\u003e\u003c/p\u003e\n\u003cp\u003e所以，Quarto 的到来是否意味着 R Markdown 的消失呢？官方 \u003ca href=\"https://quarto.org/docs/faq/rmarkdown.html#is-r-markdown-going-away-will-my-r-markdown-documents-continue-to-work\"\u003eFAQ\u003c/a\u003e 给到了否定的答案。不过我认为 Quarto 「一统天下」的野心还是有的，只是基于现状可能这条路还需要再走一阵子。如下是我从当先（2023 年初）现状和个人的一些需求，认为 Quarto 和 R Markdown 之间存在的一些区别：\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e博客方面，个人需要动态输出的场景不多，blogdown 是基于 Hugo 的实现，动态文档是利用 knitr 将 R Markdown 直接渲染为 HTML 再交由 Hugo 处理。支持 Hugo 的自动化部署（例如：\u003ca href=\"https://developers.cloudflare.com/pages/framework-guides/deploy-a-hugo-site/\"\u003eCloudflare Pages\u003c/a\u003e，\u003ca href=\"https://docs.netlify.com/integrations/frameworks/#hugo\"\u003eNetlify\u003c/a\u003e，\u003ca href=\"https://vercel.com/docs\"\u003eVercel\u003c/a\u003e 等）对比 Quarto 的自动化部署选择要更多些。\u003c/li\u003e\n\u003cli\u003e幻灯片方面，xaringan 是基于 \u003ca href=\"https://remarkjs.com/\"\u003eremark.js\u003c/a\u003e 实现的，Quarto 是基于 \u003ca href=\"https://revealjs.com/\"\u003ereveal.js\u003c/a\u003e。两者没有孰优孰劣，接触 remark.js 更久一些，更熟悉一些，可能就更偏好一些，不过 remark.js 目前处于非活跃开发状态，这可能是 Quarto 选择 reveal.js 的一个原因吧。\u003c/li\u003e\n\u003cli\u003e书籍方面，这个不得不说 Quarto 真的是赞了。我认为书籍输出格式是所有格式中最复杂的一个，这也使得在代码\u003ca href=\"https://quarto.org/docs/computations/execution-options.html\"\u003e执行参数\u003c/a\u003e、\u003ca href=\"https://quarto.org/docs/extensions/\"\u003e扩展组件\u003c/a\u003e 等方面比 bookdown 支持更灵活的 Quarto 在实践中更好用些。\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e还是很希望 Quarto 在未来能够做更好的统一，这也会让我们面对不同输出场景中复用更多相同的知识和技巧。\u003c/p\u003e\n\u003ch2 id=\"当我谈文学编程时我谈些什么\"\u003e当我谈文学编程时我谈些什么\u003c/h2\u003e\n\u003cp\u003e高德纳提出了文学编程的理念，Peter Seibel 也存在不同的看法：\u003ca href=\"https://gigamonkeys.com/code-reading/\"\u003e编码并非文学\u003c/a\u003e。其实这两者并不是对立的，只是角度不同而已。我认为文学编程更适合数据分析型工程，针对功能系统型工程确实很难融入文学编程。以当下的实践来看，从 R Markdown，到 Jupyter，再到 Quarto，无一例外是针对技术和科学等场景提供数据分析功能，而针对系统工程开发，更多还是遵循着产品文档和工程代码分离。\u003c/p\u003e\n\u003cp\u003e文学编程是一种理念，类似一门新的语言，从客观上能解决一些特定领域的问题，也能在某些场景中提高效率。但整个生态的发展离不开真正「喜欢」的人参与，不断改善和大力推广才能保证生态的持续发展。除了商业团队的主推以外，我认为开源精神和社区参与也很重要，真正的繁华从来不是一家独大而是全民参与。\u003c/p\u003e\n\u003ch1 id=\"可重复性研究\"\u003e可重复性研究\u003c/h1\u003e\n\u003cp\u003e可重复性研究的范畴要比文学编程更广泛，文学编程主要围绕计算机相关科学展开，可重复性研究则是面向全部科学的。可重复性研究指的是科学结果应该在其推论完全透明的方式记录下来 \u003csup id=\"fnref:5\"\u003e\u003ca href=\"#fn:5\" class=\"footnote-ref\" role=\"doc-noteref\"\u003e5\u003c/a\u003e\u003c/sup\u003e。\u003c/p\u003e\n\u003cfigure\u003e\n  \u003cimg class=\"lazyload\" data-src=\"/images/cn/2023-03-11-literate-programming-and-reproducible-research/draw-owl.jpg\" data-large-max-width=\"100%\" data-middle-max-width=\"100%\" data-small-max-width=\"100%\"/\u003e\n  \n  \u003cfigcaption class=\"kai\"\u003e图片来源：\u003ca href=\"https://github.com/mickaeltemporao/reproducible-research-in-python\"\u003ehttps://github.com/mickaeltemporao/reproducible-research-in-python\u003c/a\u003e\u003c/figcaption\u003e\n  \n\u003c/figure\u003e\n\u003cp\u003e上图生动地描述了可重复性研究的重要性。在此我们依旧围绕计算机相关科学讨论可重复性研究。文学编程通过将代码嵌入文档中实现了代码结果的可重复性动态生成，但除了代码之外，可重复性研究还需要关注代码的运行环境和使用的数据等，这些同样会影响研究的最终结果。\u003c/p\u003e\n\u003ch2 id=\"运行环境\"\u003e运行环境\u003c/h2\u003e\n\u003cp\u003e硬件、内核、操作系统、语言、扩展包等代码运行环境都会对最终的研究结果产生影响，如下图所示：\u003c/p\u003e\n\u003cfigure\u003e\n  \u003cimg class=\"lazyload\" data-src=\"/images/cn/2023-03-11-literate-programming-and-reproducible-research/reproducible-research-layers.png\" data-large-max-width=\"80%\" data-middle-max-width=\"80%\" data-small-max-width=\"100%\"/\u003e\n  \n  \u003cfigcaption class=\"kai\"\u003e图片来源：\u003ca href=\"https://github.com/MozillaFoundation/2017-fellows-sf\"\u003ehttps://github.com/MozillaFoundation/2017-fellows-sf\u003c/a\u003e\u003c/figcaption\u003e\n  \n\u003c/figure\u003e\n\u003cp\u003e硬件问题在苹果推出基于 arm 架构的 M1 芯片时一度带来了不少的麻烦，虽然 macOS 提供了转义工具，但在推出的早起仍出现大量软件兼容问题。不过随着这几年的发展，软件的兼容性问题已经得到了极大的改善，因此在硬件这一层几乎不再会有太多问题。\u003c/p\u003e\n\u003cp\u003e内核和操作系统可以粗略的认为是同一层级，这也是在日常研究中会经常遇到的问题。有时候在自己电脑系统上跑地好好的代码，拿到别人电脑上就会出现各种问题。在工程部署阶段，通过 docker 等虚拟化技术是可以保证代码运行的系统环境是相同的，但在分析研究阶段这并不好用。在这个层面感觉比较好的解决方案就是使用多系统兼容的软件、语言、扩展包等，如果确实需要使用指定系统的工具，在代码层面实现兼容或提示兼容问题会是不错的选择。\u003c/p\u003e\n\u003cp\u003e语言和扩展包层面的问题在真实场景中遇到的并不多，我们不必非要在 Python 和 R 中二选一，也不必非要在 PyTorch 和 Tensorflow 中二选一。但至少要保证使用相关研究领域中常用的工具、语言和扩展包，当然这些最好甚至应该是开源的，这样其他人才能够无障碍的获取相关代码依赖。\u003c/p\u003e\n\u003ch2 id=\"数据公开\"\u003e数据公开\u003c/h2\u003e\n\u003cp\u003e在可重复性研究中，数据公开也很重要，没有研究的输入数据，哪怕分析代码全部公开，也无法得到相同的研究结果。最理想的情况就是完全公开所用的原始数据，但这个在涉及到私有域数据时往往又是不现实的。针对这个问题有多种可以尝试解决的方案：\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003e数据脱敏。例如：针对涉及隐私的 ID 可以转换为无意义的 ID，一般情况不会对研究产生影响。例如：针对涉及商业机密的价格或销量可以添加扰动量或进行分箱处理，但这会对研究产生一定的影响。\u003c/li\u003e\n\u003cli\u003e人造数据。针对所需的数据格式完全人工创造虚拟数据，不过在复杂场景下其成本较高，甚至无法实现。\u003c/li\u003e\n\u003c/ol\u003e\n\u003cdiv class=\"footnotes\" role=\"doc-endnotes\"\u003e\n\u003chr/\u003e\n\u003col\u003e\n\u003cli id=\"fn:1\"\u003e\n\u003cp\u003e\u003ca href=\"https://zh.wikipedia.org/zh-hans/\"\u003ehttps://zh.wikipedia.org/zh-hans/\u003c/a\u003e文学编程 \u003ca href=\"#fnref:1\" class=\"footnote-backref\" role=\"doc-backlink\"\u003e↩︎\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli id=\"fn:2\"\u003e\n\u003cp\u003eKnuth, Donald Ervin. “Literate programming.” \u003cem\u003eThe computer journal\u003c/em\u003e 27.2 (1984): 97-111. \u003ca href=\"#fnref:2\" class=\"footnote-backref\" role=\"doc-backlink\"\u003e↩︎\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli id=\"fn:3\"\u003e\n\u003cp\u003e\u003ca href=\"https://zh.wikipedia.org/zh-hans/WEB\"\u003ehttps://zh.wikipedia.org/zh-hans/WEB\u003c/a\u003e \u003ca href=\"#fnref:3\" class=\"footnote-backref\" role=\"doc-backlink\"\u003e↩︎\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli id=\"fn:4\"\u003e\n\u003cp\u003e\u003ca href=\"https://zh.wikipedia.org/zh-hans/Org-\"\u003ehttps://zh.wikipedia.org/zh-hans/Org-\u003c/a\u003e模式 \u003ca href=\"#fnref:4\" class=\"footnote-backref\" role=\"doc-backlink\"\u003e↩︎\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli id=\"fn:5\"\u003e\n\u003cp\u003e\u003ca href=\"https://en.wikipedia.org/wiki/Reproducibility\"\u003ehttps://en.wikipedia.org/wiki/Reproducibility\u003c/a\u003e \u003ca href=\"#fnref:5\" class=\"footnote-backref\" role=\"doc-backlink\"\u003e↩︎\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ol\u003e\n\u003c/div\u003e\n\n\n\n\n\n\u003cdiv class=\"donate\"\u003e\n  \u003cdiv class=\"donate-header\"\u003e\u003c/div\u003e\n  \u003cdiv class=\"donate-slug\" id=\"donate-slug\"\u003eliterate-programming-and-reproducible-research\u003c/div\u003e\n  \u003cbutton class=\"donate-button\"\u003e赞 赏\u003c/button\u003e\n  \u003cdiv class=\"donate-footer\"\u003e「真诚赞赏，手留余香」\u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"donate-modal-wrapper\"\u003e\n  \u003cdiv class=\"donate-modal\"\u003e\n    \u003cdiv class=\"donate-box\"\u003e\n      \u003cdiv class=\"donate-box-content\"\u003e\n        \u003cdiv class=\"donate-box-content-inner\"\u003e\n          \u003cdiv class=\"donate-box-header\"\u003e「真诚赞赏，手留余香」\u003c/div\u003e\n          \u003cdiv class=\"donate-box-body\"\u003e\n            \u003cdiv class=\"donate-box-money\"\u003e\n              \u003cbutton class=\"donate-box-money-button donate-box-money-button-unchecked\" id=\"donate-box-money-button-2\" data-v=\"2\" data-unchecked=\"￥ 2\" data-checked=\"2 元\"\u003e￥ 2\u003c/button\u003e\n              \u003cbutton class=\"donate-box-money-button donate-box-money-button-unchecked\" id=\"donate-box-money-button-5\" data-v=\"5\" data-unchecked=\"￥ 5\" data-checked=\"5 元\"\u003e￥ 5\u003c/button\u003e\n              \u003cbutton class=\"donate-box-money-button donate-box-money-button-unchecked\" id=\"donate-box-money-button-10\" data-v=\"10\" data-unchecked=\"￥ 10\" data-checked=\"10 元\"\u003e￥ 10\u003c/button\u003e\n              \u003cbutton class=\"donate-box-money-button donate-box-money-button-unchecked\" id=\"donate-box-money-button-50\" data-v=\"50\" data-unchecked=\"￥ 50\" data-checked=\"50 元\"\u003e￥ 50\u003c/button\u003e\n              \u003cbutton class=\"donate-box-money-button donate-box-money-button-unchecked\" id=\"donate-box-money-button-100\" data-v=\"100\" data-unchecked=\"￥ 100\" data-checked=\"100 元\"\u003e￥ 100\u003c/button\u003e\n              \u003cbutton class=\"donate-box-money-button donate-box-money-button-unchecked\" id=\"donate-box-money-button-custom\" data-v=\"custom\" data-unchecked=\"任意金额\" data-checked=\"任意金额\"\u003e任意金额\u003c/button\u003e\n            \u003c/div\u003e\n            \u003cdiv class=\"donate-box-pay\"\u003e\n              \u003cimg class=\"donate-box-pay-qrcode\" id=\"donate-box-pay-qrcode\" src=\"\"/\u003e\n            \u003c/div\u003e\n          \u003c/div\u003e\n          \u003cdiv class=\"donate-box-footer\"\u003e\n            \u003cdiv class=\"donate-box-pay-method donate-box-pay-method-checked\" data-v=\"wechat-pay\"\u003e\n              \u003cimg class=\"donate-box-pay-method-image\" id=\"donate-box-pay-method-image-wechat-pay\" src=\"\"/\u003e\n            \u003c/div\u003e\n            \u003cdiv class=\"donate-box-pay-method\" data-v=\"alipay\"\u003e\n              \u003cimg class=\"donate-box-pay-method-image\" id=\"donate-box-pay-method-image-alipay\" src=\"\"/\u003e\n            \u003c/div\u003e\n          \u003c/div\u003e\n        \u003c/div\u003e\n      \u003c/div\u003e\n    \u003c/div\u003e\n    \u003cbutton type=\"button\" class=\"donate-box-close-button\"\u003e\n      \u003csvg class=\"donate-box-close-button-icon\" fill=\"#fff\" viewBox=\"0 0 24 24\" width=\"24\" height=\"24\"\u003e\u003cpath d=\"M13.486 12l5.208-5.207a1.048 1.048 0 0 0-.006-1.483 1.046 1.046 0 0 0-1.482-.005L12 10.514 6.793 5.305a1.048 1.048 0 0 0-1.483.005 1.046 1.046 0 0 0-.005 1.483L10.514 12l-5.208 5.207a1.048 1.048 0 0 0 .006 1.483 1.046 1.046 0 0 0 1.482.005L12 13.486l5.207 5.208a1.048 1.048 0 0 0 1.483-.006 1.046 1.046 0 0 0 .005-1.482L13.486 12z\" fill-rule=\"evenodd\"\u003e\u003c/path\u003e\u003c/svg\u003e\n    \u003c/button\u003e\n  \u003c/div\u003e\n\u003c/div\u003e\n\n\u003cscript type=\"text/javascript\" src=\"/js/donate.js\"\u003e\u003c/script\u003e\n\n\n  \u003cfooter\u003e\n  \n\u003cnav class=\"post-nav\"\u003e\n  \u003cspan class=\"nav-prev\"\u003e← \u003ca href=\"/cn/2023/01/build-home-media-center-with-jellyfin-on-openwrt/\"\u003e在 OpenWrt 中安装 Jellyfin 搭建家庭影音中心\u003c/a\u003e\u003c/span\u003e\n  \u003cspan class=\"nav-next\"\u003e\u003ca href=\"/cn/2023/03/gpu-machine-learning-environment-configuration-under-windows-with-wsl2-and-ubuntu/\"\u003e在 Windows 下利用 WSL2 和 Ubuntu 配置 GPU 机器学习环境 (GPU Machine Leanring Environment Configuration under Windows with WSL2 and Ubuntu)\u003c/a\u003e →\u003c/span\u003e\n\u003c/nav\u003e\n\n\n\n\n\u003cins class=\"adsbygoogle\" style=\"display:block; text-align:center;\" data-ad-layout=\"in-article\" data-ad-format=\"fluid\" data-ad-client=\"ca-pub-2608165017777396\" data-ad-slot=\"8302038603\"\u003e\u003c/ins\u003e\n\u003cscript\u003e\n  (adsbygoogle = window.adsbygoogle || []).push({});\n\u003c/script\u003e\n\n\n\n\u003cscript src=\"//cdn.jsdelivr.net/npm/js-cookie@3.0.5/dist/js.cookie.min.js\"\u003e\u003c/script\u003e\n\u003cscript src=\"/js/toggle-theme.js\"\u003e\u003c/script\u003e\n\n\n\u003cscript src=\"/js/no-highlight.js\"\u003e\u003c/script\u003e\n\u003cscript src=\"/js/math-code.js\"\u003e\u003c/script\u003e\n\u003cscript src=\"/js/heading-anchor.js\"\u003e\u003c/script\u003e\n\n\n\n\u003csection class=\"comments\"\u003e\n\u003cscript src=\"https://giscus.app/client.js\" data-repo=\"leovan/leovan.me\" data-repo-id=\"MDEwOlJlcG9zaXRvcnkxMTMxOTY0Mjc=\" data-category=\"Comments\" data-category-id=\"DIC_kwDOBr89i84CT-R7\" data-mapping=\"pathname\" data-strict=\"1\" data-reactions-enabled=\"1\" data-emit-metadata=\"0\" data-input-position=\"top\" data-theme=\"preferred_color_scheme\" data-lang=\"zh-CN\" data-loading=\"lazy\" crossorigin=\"anonymous\" defer=\"\"\u003e\n\u003c/script\u003e\n\u003c/section\u003e\n\n\n\u003cscript src=\"//cdn.jsdelivr.net/npm/clipboard@2.0.11/dist/clipboard.min.js\"\u003e\u003c/script\u003e\n\u003cscript src=\"//cdn.jsdelivr.net/npm/prismjs@1.29.0/prism.min.js\"\u003e\u003c/script\u003e\n\u003cscript src=\"//cdn.jsdelivr.net/npm/prismjs@1.29.0/plugins/autoloader/prism-autoloader.min.js\"\u003e\u003c/script\u003e\n\u003cscript src=\"//cdn.jsdelivr.net/npm/prismjs@1.29.0/plugins/toolbar/prism-toolbar.min.js\"\u003e\u003c/script\u003e\n\u003cscript\u003e\n  (function() {\n    if (!self.Prism) {\n      return;\n    }\n\n    \n    Prism.languages.dos = Prism.languages.powershell;\n    Prism.languages.gremlin = Prism.languages.groovy;\n\n    let languages = {\n      'r': 'R', 'python': 'Python', 'xml': 'XML', 'html': 'HTML',\n      'yaml': 'YAML', 'latex': 'LaTeX', 'tex': 'TeX',\n      'powershell': 'PowerShell', 'javascript': 'JavaScript',\n      'dos': 'DOS', 'qml': 'QML', 'json': 'JSON', 'bash': 'Bash',\n      'text': 'Text', 'txt': 'Text', 'sparql': 'SPARQL',\n      'gremlin': 'Gremlin', 'cypher': 'Cypher', 'ngql': 'nGQL',\n      'shell': 'Shell', 'sql': 'SQL', 'apacheconf': 'Apache Configuration', 'c': 'C', 'css': 'CSS'\n    };\n\n    Prism.hooks.add('before-highlight', function(env) {\n      if (env.language !== 'plain') {\n        let language = languages[env.language] || env.language;\n        env.element.setAttribute('data-language', language);\n      }\n    });\n\n    \n    let ClipboardJS = window.ClipboardJS || undefined;\n\n    Prism.plugins.toolbar.registerButton('copy-to-clipboard', function(env) {\n      let linkCopy = document.createElement('button');\n      linkCopy.classList.add('prism-button-copy');\n\n      registerClipboard();\n\n      return linkCopy;\n\n      function registerClipboard() {\n        let clip = new ClipboardJS(linkCopy, {\n          'text': function () {\n            return env.code;\n          }\n        });\n\n        clip.on('success', function() {\n          linkCopy.classList.add('prism-button-copy-success');\n          resetText();\n        });\n        clip.on('error', function () {\n          linkCopy.classList.add('prism-button-copy-error');\n          resetText();\n        });\n      }\n\n      function resetText() {\n        setTimeout(function () {\n          linkCopy.classList.remove('prism-button-copy-success');\n          linkCopy.classList.remove('prism-button-copy-error');\n        }, 1600);\n      }\n    });\n  })();\n\u003c/script\u003e\n\n\n\n\n\n\n\n\n\n\n\n\n\n\u003cscript async=\"\" src=\"/js/center-img.js\"\u003e\u003c/script\u003e\n\u003cscript async=\"\" src=\"/js/right-quote.js\"\u003e\u003c/script\u003e\n\u003cscript async=\"\" src=\"/js/external-link.js\"\u003e\u003c/script\u003e\n\u003cscript async=\"\" src=\"/js/alt-title.js\"\u003e\u003c/script\u003e\n\u003cscript async=\"\" src=\"/js/figure.js\"\u003e\u003c/script\u003e\n\n\n\n\u003cscript src=\"//cdn.jsdelivr.net/npm/lazysizes@5.3.2/lazysizes.min.js\"\u003e\u003c/script\u003e\n\n\n\u003cscript src=\"//cdn.jsdelivr.net/npm/vanilla-back-to-top@latest/dist/vanilla-back-to-top.min.js\"\u003e\u003c/script\u003e\n\u003cscript\u003e\naddBackToTop({\n  diameter: 48\n});\n\u003c/script\u003e\n\n  \u003chr/\u003e\n  \u003cdiv class=\"copyright no-border-bottom\"\u003e\n    \u003cdiv class=\"copyright-author-year\"\u003e\n      \u003cspan\u003eCopyright © 2017-2024 \u003ca href=\"/\"\u003e范叶亮 | Leo Van\u003c/a\u003e\u003c/span\u003e\n    \u003c/div\u003e\n  \u003c/div\u003e\n  \u003c/footer\u003e\n  \u003c/article\u003e",
  "Date": "2023-03-11T00:00:00Z",
  "Author": "范叶亮"
}