{
  "Source": "leovan.me",
  "Title": "网络表示，测度和度量 (Network Representation, Measures \u0026 Metrics)",
  "Link": "https://leovan.me/cn/2020/11/network-representation-measures-and-metrics/",
  "Content": "\u003carticle class=\"main\"\u003e\n    \u003cheader class=\"content-title\"\u003e\n    \n\u003ch1 class=\"title\"\u003e\n  \n  网络表示，测度和度量 (Network Representation, Measures \u0026amp; Metrics)\n  \n\u003c/h1\u003e\n\u003ch2 class=\"subtitle\"\u003e复杂网络系列\u003c/h2\u003e\n\n\n\n\n\n\n\u003ch2 class=\"author-date\"\u003e范叶亮 / \n2020-11-21\u003c/h2\u003e\n\n\n\n\u003ch3 class=\"post-meta\"\u003e\n\n\n\u003cstrong\u003e分类: \u003c/strong\u003e\n\u003ca href=\"/categories/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0\"\u003e机器学习\u003c/a\u003e, \u003ca href=\"/categories/%E5%A4%8D%E6%9D%82%E7%BD%91%E7%BB%9C\"\u003e复杂网络\u003c/a\u003e\n\n\n\n\n/\n\n\n\n\n\u003cstrong\u003e标签: \u003c/strong\u003e\n\u003cspan\u003e复杂网络\u003c/span\u003e, \u003cspan\u003e网络\u003c/span\u003e, \u003cspan\u003e网络表示\u003c/span\u003e, \u003cspan\u003e图\u003c/span\u003e, \u003cspan\u003eGraph\u003c/span\u003e, \u003cspan\u003e顶点\u003c/span\u003e, \u003cspan\u003eVertex\u003c/span\u003e, \u003cspan\u003e边\u003c/span\u003e, \u003cspan\u003eEdge\u003c/span\u003e, \u003cspan\u003e重边\u003c/span\u003e, \u003cspan\u003eMultiedge\u003c/span\u003e, \u003cspan\u003e简单网络\u003c/span\u003e, \u003cspan\u003eSimple Network\u003c/span\u003e, \u003cspan\u003e简单图\u003c/span\u003e, \u003cspan\u003eSimple Graph\u003c/span\u003e, \u003cspan\u003e重图\u003c/span\u003e, \u003cspan\u003eMultigraph\u003c/span\u003e, \u003cspan\u003e无向网络\u003c/span\u003e, \u003cspan\u003eUndirected Network\u003c/span\u003e, \u003cspan\u003e边列表\u003c/span\u003e, \u003cspan\u003eEdge List\u003c/span\u003e, \u003cspan\u003e邻接矩阵\u003c/span\u003e, \u003cspan\u003eAdjacency Matrix\u003c/span\u003e, \u003cspan\u003e加权网络\u003c/span\u003e, \u003cspan\u003eWeighted Network\u003c/span\u003e, \u003cspan\u003e赋值网络\u003c/span\u003e, \u003cspan\u003eValued Network\u003c/span\u003e, \u003cspan\u003e有向网络\u003c/span\u003e, \u003cspan\u003eDirected Network\u003c/span\u003e, \u003cspan\u003e有向图\u003c/span\u003e, \u003cspan\u003eDirected Graph\u003c/span\u003e, \u003cspan\u003e有向边\u003c/span\u003e, \u003cspan\u003eDirected Edge\u003c/span\u003e, \u003cspan\u003e超边\u003c/span\u003e, \u003cspan\u003eHyperedge\u003c/span\u003e, \u003cspan\u003e超图\u003c/span\u003e, \u003cspan\u003eHypergraph\u003c/span\u003e, \u003cspan\u003e隶属网络\u003c/span\u003e, \u003cspan\u003e二分网络\u003c/span\u003e, \u003cspan\u003e二分图\u003c/span\u003e, \u003cspan\u003eBipartite Network\u003c/span\u003e, \u003cspan\u003e关联矩阵\u003c/span\u003e, \u003cspan\u003eIncidence Matrix\u003c/span\u003e, \u003cspan\u003e单模投影\u003c/span\u003e, \u003cspan\u003eOne-mode Projection\u003c/span\u003e, \u003cspan\u003e树\u003c/span\u003e, \u003cspan\u003eTree\u003c/span\u003e, \u003cspan\u003e森林\u003c/span\u003e, \u003cspan\u003eForest\u003c/span\u003e, \u003cspan\u003e度\u003c/span\u003e, \u003cspan\u003eDegree\u003c/span\u003e, \u003cspan\u003e连通度\u003c/span\u003e, \u003cspan\u003eConnectance\u003c/span\u003e, \u003cspan\u003e密度\u003c/span\u003e, \u003cspan\u003eDensity\u003c/span\u003e, \u003cspan\u003e入度\u003c/span\u003e, \u003cspan\u003ein-degree\u003c/span\u003e, \u003cspan\u003e出度\u003c/span\u003e, \u003cspan\u003eout-degree\u003c/span\u003e, \u003cspan\u003e路径\u003c/span\u003e, \u003cspan\u003e测地路径\u003c/span\u003e, \u003cspan\u003eGeodesic Path\u003c/span\u003e, \u003cspan\u003e最短路径\u003c/span\u003e, \u003cspan\u003eShortest Path\u003c/span\u003e, \u003cspan\u003e直径\u003c/span\u003e, \u003cspan\u003eDiameter\u003c/span\u003e, \u003cspan\u003e欧拉路径\u003c/span\u003e, \u003cspan\u003eEulerian Path\u003c/span\u003e, \u003cspan\u003e哈密顿路径\u003c/span\u003e, \u003cspan\u003eHamiltonian Path\u003c/span\u003e, \u003cspan\u003e连通\u003c/span\u003e, \u003cspan\u003eConnected\u003c/span\u003e, \u003cspan\u003e非连通\u003c/span\u003e, \u003cspan\u003eDisconnected\u003c/span\u003e, \u003cspan\u003e分支\u003c/span\u003e, \u003cspan\u003eComponent\u003c/span\u003e, \u003cspan\u003e连通度\u003c/span\u003e, \u003cspan\u003eConnectivity\u003c/span\u003e, \u003cspan\u003e子图\u003c/span\u003e, \u003cspan\u003eSubgraph\u003c/span\u003e, \u003cspan\u003e生成子图\u003c/span\u003e, \u003cspan\u003eSpanning Subgraph\u003c/span\u003e, \u003cspan\u003e导出子图\u003c/span\u003e, \u003cspan\u003eInduced Subgraph\u003c/span\u003e, \u003cspan\u003eMotif\u003c/span\u003e, \u003cspan\u003eGraphlets\u003c/span\u003e, \u003cspan\u003e测度\u003c/span\u003e, \u003cspan\u003e度量\u003c/span\u003e, \u003cspan\u003e中心性\u003c/span\u003e, \u003cspan\u003eCentrality\u003c/span\u003e, \u003cspan\u003e度中心性\u003c/span\u003e, \u003cspan\u003eDegree Centrality\u003c/span\u003e, \u003cspan\u003eKatz 中心性\u003c/span\u003e, \u003cspan\u003eKatz Centrality\u003c/span\u003e, \u003cspan\u003ePageRank\u003c/span\u003e, \u003cspan\u003e接近度中心性\u003c/span\u003e, \u003cspan\u003eCloseness Centrality\u003c/span\u003e, \u003cspan\u003e调和中心性\u003c/span\u003e, \u003cspan\u003eHarmonic Centrality\u003c/span\u003e, \u003cspan\u003e介数中心性\u003c/span\u003e, \u003cspan\u003eBetweenness Centrality\u003c/span\u003e, \u003cspan\u003e传递性\u003c/span\u003e, \u003cspan\u003eTransitivity\u003c/span\u003e, \u003cspan\u003e团\u003c/span\u003e, \u003cspan\u003eClique\u003c/span\u003e, \u003cspan\u003e完全传递性\u003c/span\u003e, \u003cspan\u003e部分传递性\u003c/span\u003e, \u003cspan\u003e闭合三元组\u003c/span\u003e, \u003cspan\u003eClosed Triad\u003c/span\u003e, \u003cspan\u003e聚类系数\u003c/span\u003e, \u003cspan\u003eClustering Coefficient\u003c/span\u003e, \u003cspan\u003e局部聚类系数\u003c/span\u003e, \u003cspan\u003eLocal Clustering Coefficient\u003c/span\u003e, \u003cspan\u003e相互性\u003c/span\u003e, \u003cspan\u003eReciprocity\u003c/span\u003e, \u003cspan\u003e相似性\u003c/span\u003e, \u003cspan\u003e结构等价\u003c/span\u003e, \u003cspan\u003eStructural Equivalence\u003c/span\u003e, \u003cspan\u003e规则等价\u003c/span\u003e, \u003cspan\u003eRegular Equivalence\u003c/span\u003e, \u003cspan\u003e余弦相似性\u003c/span\u003e, \u003cspan\u003eCosine Similarity\u003c/span\u003e, \u003cspan\u003e皮尔逊相关系数\u003c/span\u003e, \u003cspan\u003ePearson Correlation Coefficient\u003c/span\u003e, \u003cspan\u003e同质性\u003c/span\u003e, \u003cspan\u003eHomophily\u003c/span\u003e, \u003cspan\u003e同配混合\u003c/span\u003e, \u003cspan\u003eAssortative Mixing\u003c/span\u003e, \u003cspan\u003e异配混合\u003c/span\u003e, \u003cspan\u003eDisassortative Mixing\u003c/span\u003e, \u003cspan\u003e模块度\u003c/span\u003e, \u003cspan\u003eModularity\u003c/span\u003e, \u003cspan\u003e同配系数\u003c/span\u003e, \u003cspan\u003eAssortativity Coefficience\u003c/span\u003e, \u003cspan\u003e边缘\u003c/span\u003e, \u003cspan\u003ePeriphery\u003c/span\u003e, \u003cspan\u003e核心结构\u003c/span\u003e, \u003cspan\u003eCore Structure\u003c/span\u003e, \u003cspan\u003e边缘结构\u003c/span\u003e, \u003cspan\u003ePeriphery Structure\u003c/span\u003e\n\n\n\n\n/\n\n\n\u003cstrong\u003e字数: \u003c/strong\u003e\n7582\n\u003c/h3\u003e\n\n\n\n\u003chr/\u003e\n\n\n\n    \n    \n    \u003cins class=\"adsbygoogle\" style=\"display:block; text-align:center;\" data-ad-layout=\"in-article\" data-ad-format=\"fluid\" data-ad-client=\"ca-pub-2608165017777396\" data-ad-slot=\"1261604535\"\u003e\u003c/ins\u003e\n    \u003cscript\u003e\n    (adsbygoogle = window.adsbygoogle || []).push({});\n    \u003c/script\u003e\n    \n    \n    \u003c/header\u003e\n\n\n\n\u003cdiv class=\"toc-depth-3\"\u003e\u003cnav id=\"TableOfContents\"\u003e\n  \u003cul\u003e\n    \u003cli\u003e\u003ca href=\"#网络表示\"\u003e网络表示\u003c/a\u003e\n      \u003cul\u003e\n        \u003cli\u003e\u003ca href=\"#无向网络\"\u003e无向网络\u003c/a\u003e\u003c/li\u003e\n        \u003cli\u003e\u003ca href=\"#加权网络\"\u003e加权网络\u003c/a\u003e\u003c/li\u003e\n        \u003cli\u003e\u003ca href=\"#有向网络\"\u003e有向网络\u003c/a\u003e\u003c/li\u003e\n        \u003cli\u003e\u003ca href=\"#超图\"\u003e超图\u003c/a\u003e\u003c/li\u003e\n        \u003cli\u003e\u003ca href=\"#二分网络\"\u003e二分网络\u003c/a\u003e\u003c/li\u003e\n        \u003cli\u003e\u003ca href=\"#树\"\u003e树\u003c/a\u003e\u003c/li\u003e\n        \u003cli\u003e\u003ca href=\"#度\"\u003e度\u003c/a\u003e\u003c/li\u003e\n        \u003cli\u003e\u003ca href=\"#路径\"\u003e路径\u003c/a\u003e\u003c/li\u003e\n        \u003cli\u003e\u003ca href=\"#分支\"\u003e分支\u003c/a\u003e\u003c/li\u003e\n        \u003cli\u003e\u003ca href=\"#连通度\"\u003e连通度\u003c/a\u003e\u003c/li\u003e\n        \u003cli\u003e\u003ca href=\"#子图\"\u003e子图\u003c/a\u003e\u003c/li\u003e\n        \u003cli\u003e\u003ca href=\"#motif\"\u003eMotif\u003c/a\u003e\u003c/li\u003e\n        \u003cli\u003e\u003ca href=\"#graphlets\"\u003eGraphlets\u003c/a\u003e\u003c/li\u003e\n      \u003c/ul\u003e\n    \u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#测度和度量\"\u003e测度和度量\u003c/a\u003e\n      \u003cul\u003e\n        \u003cli\u003e\u003ca href=\"#中心性\"\u003e中心性\u003c/a\u003e\n          \u003cul\u003e\n            \u003cli\u003e\u003ca href=\"#度中心性\"\u003e度中心性\u003c/a\u003e\u003c/li\u003e\n            \u003cli\u003e\u003ca href=\"#特征向量中心性\"\u003e特征向量中心性\u003c/a\u003e\u003c/li\u003e\n            \u003cli\u003e\u003ca href=\"#katz-中心性\"\u003eKatz 中心性\u003c/a\u003e\u003c/li\u003e\n            \u003cli\u003e\u003ca href=\"#pagerank\"\u003ePageRank\u003c/a\u003e\u003c/li\u003e\n            \u003cli\u003e\u003ca href=\"#接近度中心性\"\u003e接近度中心性\u003c/a\u003e\u003c/li\u003e\n            \u003cli\u003e\u003ca href=\"#介数中心性\"\u003e介数中心性\u003c/a\u003e\u003c/li\u003e\n          \u003c/ul\u003e\n        \u003c/li\u003e\n        \u003cli\u003e\u003ca href=\"#传递性\"\u003e传递性\u003c/a\u003e\u003c/li\u003e\n        \u003cli\u003e\u003ca href=\"#相互性\"\u003e相互性\u003c/a\u003e\u003c/li\u003e\n        \u003cli\u003e\u003ca href=\"#相似性\"\u003e相似性\u003c/a\u003e\n          \u003cul\u003e\n            \u003cli\u003e\u003ca href=\"#结构等价\"\u003e结构等价\u003c/a\u003e\u003c/li\u003e\n            \u003cli\u003e\u003ca href=\"#规则等价\"\u003e规则等价\u003c/a\u003e\u003c/li\u003e\n          \u003c/ul\u003e\n        \u003c/li\u003e\n        \u003cli\u003e\u003ca href=\"#同质性\"\u003e同质性\u003c/a\u003e\n          \u003cul\u003e\n            \u003cli\u003e\u003ca href=\"#依据枚举特征的同配混合\"\u003e依据枚举特征的同配混合\u003c/a\u003e\u003c/li\u003e\n            \u003cli\u003e\u003ca href=\"#依据标量特征的同配混合\"\u003e依据标量特征的同配混合\u003c/a\u003e\u003c/li\u003e\n            \u003cli\u003e\u003ca href=\"#依据度的同配混合\"\u003e依据度的同配混合\u003c/a\u003e\u003c/li\u003e\n          \u003c/ul\u003e\n        \u003c/li\u003e\n      \u003c/ul\u003e\n    \u003c/li\u003e\n  \u003c/ul\u003e\n\u003c/nav\u003e\u003c/div\u003e\n\n\n\u003clink rel=\"stylesheet\" href=\"/css/admonition.css\"/\u003e\n\u003cdiv class=\"admonition admonition-note  kai\"\u003e\n  \u003cdiv class=\"admonition-content\"\u003e本文为\u003ca href=\"/categories/%E5%A4%8D%E6%9D%82%E7%BD%91%E7%BB%9C/\"\u003e《复杂网络系列》\u003c/a\u003e文章，本文内容主要参考自：《网络科学引论》\u003c/div\u003e\n\u003c/div\u003e\n\u003cp\u003e\u003cstrong\u003e网络\u003c/strong\u003e（network）也称为\u003cstrong\u003e图\u003c/strong\u003e（graph），是一个由多个\u003cstrong\u003e顶点\u003c/strong\u003e（vertex）及连接顶点的\u003cstrong\u003e边\u003c/strong\u003e（edge）组成的集合。在网络中，我们通常用 \u003ccode\u003e$n$\u003c/code\u003e 表示顶点的数目，用 \u003ccode\u003e$m$\u003c/code\u003e 表示边的数目。在大多数网络中两个顶点之间都只有一条边，极少数情况下，两个顶点之间有多条边，称之为\u003cstrong\u003e重边\u003c/strong\u003e（multiedge）。在极特殊情况下，还会存在连接到顶点自身的边，称之为\u003cstrong\u003e自边\u003c/strong\u003e（self-edge）。既没有自边也没有重边的图称之为\u003cstrong\u003e简单网络\u003c/strong\u003e（simple network）或\u003cstrong\u003e简单图\u003c/strong\u003e（simple graph），存在重边的网络称之为\u003cstrong\u003e重图\u003c/strong\u003e（multigraph）。相关概念示例如下：\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"/images/cn/2020-11-21-network-representation-measures-and-metrics/graph.png\" alt=\"\"/\u003e\u003c/p\u003e\n\u003ch1 id=\"网络表示\"\u003e网络表示\u003c/h1\u003e\n\u003ch2 id=\"无向网络\"\u003e无向网络\u003c/h2\u003e\n\u003cp\u003e对于一个包含 \u003ccode\u003e$n$\u003c/code\u003e 个顶点的无向图，可以用整数 \u003ccode\u003e$1$\u003c/code\u003e 到 \u003ccode\u003e$n$\u003c/code\u003e 对各个顶点进行标注。如果用 \u003ccode\u003e$\\left(i, j\\right)$\u003c/code\u003e 表示顶点 \u003ccode\u003e$i$\u003c/code\u003e 和顶点 \u003ccode\u003e$j$\u003c/code\u003e 之间的边，那么通过给定 \u003ccode\u003e$n$\u003c/code\u003e 的值及所有边的列表就能表示一个完整的网络，这种表示方法称之为\u003cstrong\u003e边列表\u003c/strong\u003e（edge list）。\u003c/p\u003e\n\u003cp\u003e相比于边列表，\u003cstrong\u003e邻接矩阵\u003c/strong\u003e（adjacency matrix）可以更好地表示网络。一个简单图的邻接矩阵 \u003ccode\u003e$\\mathbf{A}$\u003c/code\u003e 中元素 \u003ccode\u003e$A_{ij}$\u003c/code\u003e 的含义如下：\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003e$$ A_{ij}=\\left\\{\\begin{array}{ll} 1 \u0026amp; \\text{如果顶点 } i \\text{ 和顶点 } j \\text{ 之间存在一条边} \\\\ 0 \u0026amp; \\text{其他} \\end{array}\\right. $$\u003c/code\u003e\u003c/p\u003e\n\u003cp\u003e对于一个没有自边的网络，其邻接矩阵有两个特点：\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003e邻接矩阵对角线上的元素取值均为零。\u003c/li\u003e\n\u003cli\u003e邻接矩阵是对称的。\u003c/li\u003e\n\u003c/ol\u003e\n\u003ch2 id=\"加权网络\"\u003e加权网络\u003c/h2\u003e\n\u003cp\u003e对于\u003cstrong\u003e加权网络\u003c/strong\u003e（weighted network）和\u003cstrong\u003e赋值网络\u003c/strong\u003e（valued network）可以将邻接矩阵中对应元素的值设定为相应的权重的方式来进行表示。\u003c/p\u003e\n\u003ch2 id=\"有向网络\"\u003e有向网络\u003c/h2\u003e\n\u003cp\u003e\u003cstrong\u003e有向网络\u003c/strong\u003e（directed network）或\u003cstrong\u003e有向图\u003c/strong\u003e（directed graph）有时简称为 digraph，在这类网络中，每条边都有方向，从一个顶点指向另一个顶点，称之为\u003cstrong\u003e有向边\u003c/strong\u003e（directed edge）。\u003c/p\u003e\n\u003cdiv class=\"admonition admonition-note  kai\"\u003e\n  \u003cp class=\"admonition-title\"\u003e注意\u003c/p\u003e\n  \u003cdiv class=\"admonition-content\"\u003e有向网络的邻接矩阵中元素 \u003ccode\u003e$A_{ij} = 1$\u003c/code\u003e 时表示存在从顶点 \u003ccode\u003e$j$\u003c/code\u003e 到顶点 \u003ccode\u003e$i$\u003c/code\u003e 的边。虽然表示方法有些出人意料，但在数据计算上会带来极大的方便。\u003c/div\u003e\n\u003c/div\u003e\n\u003ch2 id=\"超图\"\u003e超图\u003c/h2\u003e\n\u003cp\u003e在某些类型的网络中，一些边会同时连接多个顶点。例如：创建一个社会网络，用来表示一个大规模社区中的各个家庭。每个家庭都可能会有两名或多名成员，因此表示这些家庭之间关系的做好方法就是使用一种广义边来同时连接多个顶点。这样的边称之为\u003cstrong\u003e超边\u003c/strong\u003e（hyperedge），含有超边的网络称之为\u003cstrong\u003e超图\u003c/strong\u003e（hypergraph）。下图 (a) 表示一个小型超图，其中超边用环的形式表示。\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"/images/cn/2020-11-21-network-representation-measures-and-metrics/hypergraph.png\" alt=\"\"/\u003e\u003c/p\u003e\n\u003cp\u003e当一个网络中的顶点因为某种群组之间的关系被连接在一起时，可以使用超图来表示这个网络，在社会学中，这样的网络称之为\u003cstrong\u003e隶属网络\u003c/strong\u003e。对于超图，可于采用\u003cstrong\u003e二分图\u003c/strong\u003e的方式进行表示，通过引入 4 个新的顶点代表 4 个群组，在顶点及其所属群组之间通过边连接，如上图 (b) 所示。\u003c/p\u003e\n\u003ch2 id=\"二分网络\"\u003e二分网络\u003c/h2\u003e\n\u003cp\u003e群组内成员之间的关系可以用超图中的超边表示，也可以等价地用更方便的\u003cstrong\u003e二分图\u003c/strong\u003e（bipartite network）表示。这种网络中有两类顶点，一类顶点代表原始顶点，另一类顶点则表示原始顶点所属的群组。\u003c/p\u003e\n\u003cp\u003e二分网络中，与邻接矩阵等价的是一个矩形矩阵，称之为\u003cstrong\u003e关联矩阵\u003c/strong\u003e（incidence matrix）。如果 \u003ccode\u003e$n$\u003c/code\u003e 代表人数或网络中的成员数目，\u003ccode\u003e$g$\u003c/code\u003e 是群组的数目，那么关联矩阵 \u003ccode\u003e$\\mathbf{B}$\u003c/code\u003e 是一个 \u003ccode\u003e$g \\times n$\u003c/code\u003e 的矩阵，其元素 \u003ccode\u003e$B_{ij}$\u003c/code\u003e 的取值含义如下：\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003e$$ B_{ij}=\\left\\{\\begin{array}{ll} 1 \u0026amp; \\text{如果顶点 } j  \\text{ 属于群组 } i \\\\ 0 \u0026amp; \\text{其他} \\end{array}\\right. $$\u003c/code\u003e\u003c/p\u003e\n\u003cp\u003e研究统一类型顶点之间的直接联系可以通过对二分网络进行\u003cstrong\u003e单模投影\u003c/strong\u003e（one-mode projection），推导出同类顶点之间的直接联系，如下图所示。\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"/images/cn/2020-11-21-network-representation-measures-and-metrics/one-mode-projection.png\" alt=\"\"/\u003e\u003c/p\u003e\n\u003ch2 id=\"树\"\u003e树\u003c/h2\u003e\n\u003cp\u003e**树（tree）**是连通的、无向的且不包含闭合循环的网络，如下图所示。\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"/images/cn/2020-11-21-network-representation-measures-and-metrics/tree.png\" alt=\"\"/\u003e\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003e连通\u003c/strong\u003e是指任意两个顶点之间都存在一条相互可达的路径。一个网络可能有两个或多个部分组成，每个部分相互之间不连通，如果任意单独的部分都为树，则称这个网络为\u003cstrong\u003e森林\u003c/strong\u003e（forest）。\u003c/p\u003e\n\u003cp\u003e由于树没有闭合循环，因此任意两个顶点之间有且只有一条相连的路径。如果一个树有 \u003ccode\u003e$n$\u003c/code\u003e 个顶点，那么它有且仅有 \u003ccode\u003e$n - 1$\u003c/code\u003e 条边。\u003c/p\u003e\n\u003ch2 id=\"度\"\u003e度\u003c/h2\u003e\n\u003cp\u003e图中顶点的\u003cstrong\u003e度\u003c/strong\u003e（degree）是指与其直接相连的边数目。将顶点 \u003ccode\u003e$i$\u003c/code\u003e 的度表示为 \u003ccode\u003e$k_i$\u003c/code\u003e，对于有 \u003ccode\u003e$n$\u003c/code\u003e 个顶点构成的无向图，可利用邻接矩阵将度表示为：\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003e$$ k_i = \\sum_{j=1}^{n} A_{ij} $$\u003c/code\u003e\u003c/p\u003e\n\u003cp\u003e在无向图中，每个边都有两端，如果一共有 \u003ccode\u003e$m$\u003c/code\u003e 条边，那么就有 \u003ccode\u003e$2m$\u003c/code\u003e 个边的端点。同时，边的端点数与所有顶点度的总和相等：\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003e$$ 2m = \\sum_{j=1}^{n} k_i $$\u003c/code\u003e\u003c/p\u003e\n\u003cp\u003e即\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003e$$ m = \\dfrac{1}{2} \\sum_{i=1}^{n} k_i = \\dfrac{1}{2} \\sum_{ij} A_{ij} $$\u003c/code\u003e\u003c/p\u003e\n\u003cp\u003e无向图中顶点度的均值 \u003ccode\u003e$c$\u003c/code\u003e 为：\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003e$$ c = \\dfrac{1}{n} \\sum_{i=1}^{n} k_i $$\u003c/code\u003e\u003c/p\u003e\n\u003cp\u003e综上可得：\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003e$$ c = \\dfrac{2m}{n} $$\u003c/code\u003e\u003c/p\u003e\n\u003cp\u003e在一个简单图中，可能的边数的最大值是 \u003ccode\u003e$\\dbinom{n}{2} = \\dfrac{1}{2} n \\left(n - 1\\right)$\u003c/code\u003e 个。图的\u003cstrong\u003e连通度\u003c/strong\u003e（connectance）或\u003cstrong\u003e密度\u003c/strong\u003e（density）\u003ccode\u003e$\\rho$\u003c/code\u003e 是所有图中实际出现的边的数目与边数最大值之间的比值：\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003e$$ \\rho = \\dfrac{m}{\\dbinom{n}{2}} = \\dfrac{2m}{n \\left(n - 1\\right)} = \\dfrac{c}{n - 1} $$\u003c/code\u003e\u003c/p\u003e\n\u003cp\u003e在有向图中，每个顶点有两个度：\u003cstrong\u003e入度\u003c/strong\u003e（in-degree）是连接到该顶点的入边的数目，\u003cstrong\u003e出度\u003c/strong\u003e（out-degree）是出边数目。当从顶点 \u003ccode\u003e$j$\u003c/code\u003e 到 \u003ccode\u003e$i$\u003c/code\u003e 有一条边时，邻接矩阵中对应的元素 \u003ccode\u003e$A_{ij} = 1$\u003c/code\u003e，则入度和出度记为：\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003e$$ k_i^{\\text{in}} = \\sum_{j=1}^{n} A_{ij}, k_j^{\\text{out}} = \\sum_{i=1}^{n} A_{ij} $$\u003c/code\u003e\u003c/p\u003e\n\u003cp\u003e在有向图中，边的数目 \u003ccode\u003e$m$\u003c/code\u003e 等于入边的端点数总和，也等于出边的端点数总和，有：\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003e$$ m=\\sum_{i=1}^{n} k_{i}^{\\mathrm{in}}=\\sum_{j=1}^{n} k_{j}^{\\mathrm{out}}=\\sum_{i j} A_{i j} $$\u003c/code\u003e\u003c/p\u003e\n\u003cp\u003e每个有向图的入度的均值 \u003ccode\u003e$c_{\\text{in}}$\u003c/code\u003e 和出度的均值 \u003ccode\u003e$c_{\\text{out}}$\u003c/code\u003e 是相等的：\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003e$$ c_{\\text {in }}=\\frac{1}{n} \\sum_{i=1}^{n} k_{i}^{\\text {in }}=\\frac{1}{n} \\sum_{j=1}^{n} k_{j}^{\\text {out }}=c_{\\text {out }} $$\u003c/code\u003e\u003c/p\u003e\n\u003cp\u003e简化后有：\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003e$$ c = \\dfrac{m}{n} $$\u003c/code\u003e\u003c/p\u003e\n\u003ch2 id=\"路径\"\u003e路径\u003c/h2\u003e\n\u003cp\u003e网络中的\u003cstrong\u003e路径\u003c/strong\u003e是指由一组顶点构成的序列，序列中每两个连续顶点都通过网络中的边连接在一起，路径长度等于该路径经过的边的数目（而非顶点的数目）。从顶点 \u003ccode\u003e$j$\u003c/code\u003e 到顶点 \u003ccode\u003e$i$\u003c/code\u003e 存在长度为 \u003ccode\u003e$r$\u003c/code\u003e 的路径总数为：\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003e$$ N_{ij}^{\\left(r\\right)} = \\left[\\mathbf{A}^r\\right]_{ij} $$\u003c/code\u003e\u003c/p\u003e\n\u003cp\u003e其中，\u003ccode\u003e$\\left[\\cdots\\right]_{ij}$\u003c/code\u003e 表示矩阵中的第 \u003ccode\u003e$i$\u003c/code\u003e 行、第 \u003ccode\u003e$j$\u003c/code\u003e 列的元素。\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003e测地路径\u003c/strong\u003e（geodesic path），简称为\u003cstrong\u003e最短路径\u003c/strong\u003e（shortest path），即两个顶点间不存在更短路径的路径。图的\u003cstrong\u003e直径\u003c/strong\u003e（diameter）是指图中任意一对相互连接的顶点之间的最长测地路径长度。\u003cstrong\u003e欧拉路径\u003c/strong\u003e（Eulerian path）是经过网络中的所有边且每条边只经过一次的路径。\u003cstrong\u003e哈密顿路径\u003c/strong\u003e（Hamiltonian path）是访问网络的所有顶点且每个顶点只访问一次的路径。\u003c/p\u003e\n\u003ch2 id=\"分支\"\u003e分支\u003c/h2\u003e\n\u003cp\u003e如果一个网络中两个顶点之间不存在路径，则称这个网络是\u003cstrong\u003e非连通\u003c/strong\u003e（disconnected）的，如果网络中任意两个顶点之间都能找到一条路径，则称这个网络是\u003cstrong\u003e连通\u003c/strong\u003e（connected）的。\u003c/p\u003e\n\u003cp\u003e网络中的子群称为\u003cstrong\u003e分支\u003c/strong\u003e（component）。分支是网络中顶点的子集，该子集中任何两个顶点之间至少存在一条路径，在保证该性质的前提下，网络中其他顶点都不能被添加到这个子集中。在保证一个给定性质的前提下，不能再向它添加其他顶点，就称其为\u003cstrong\u003e最大子集\u003c/strong\u003e（maximal subset）。\u003c/p\u003e\n\u003ch2 id=\"连通度\"\u003e连通度\u003c/h2\u003e\n\u003cp\u003e如果两条路经除了起点和终点外，不共享其他任何顶点，那么这两条路径是\u003cstrong\u003e顶点独立\u003c/strong\u003e（vertex-independent）的。如果两条路径是顶点独立的，那么也是边独立的，反之则不成立。\u003c/p\u003e\n\u003cp\u003e两个顶点之间的独立路径数称为顶点之间的\u003cstrong\u003e连通度\u003c/strong\u003e（connectivity），如果明确考虑边还是顶点，则需利用\u003cstrong\u003e边连通度\u003c/strong\u003e（edge connectivity）及\u003cstrong\u003e顶点连通度\u003c/strong\u003e（vertex connectivity）的概念。\u003c/p\u003e\n\u003ch2 id=\"子图\"\u003e子图\u003c/h2\u003e\n\u003cp\u003e令原图表示为 \u003ccode\u003e$G = \\left(V, E\\right)$\u003c/code\u003e，其中，\u003ccode\u003e$V$\u003c/code\u003e 是图中所有顶点的集合，\u003ccode\u003e$E$\u003c/code\u003e 是图中所有边的集合，有：\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003e\u003cstrong\u003e子图\u003c/strong\u003e（subgraph）：\u003ccode\u003e$G\u0026#39;$\u003c/code\u003e 中所有顶点和边均包含于原图 \u003ccode\u003e$G$\u003c/code\u003e 中，即 \u003ccode\u003e$E\u0026#39; \\in E, V\u0026#39; \\in V$\u003c/code\u003e。\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003e生成子图\u003c/strong\u003e（spanning subgraph）：\u003ccode\u003e$G\u0026#39;$\u003c/code\u003e 中顶点同原图 \u003ccode\u003e$G$\u003c/code\u003e 相同，且 \u003ccode\u003e$E\u0026#39; \\in E$\u003c/code\u003e。\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003e导出子图\u003c/strong\u003e（induced subgraph）：\u003ccode\u003e$G\u0026#39;$\u003c/code\u003e 中，\u003ccode\u003e$V\u0026#39; \\in V$\u003c/code\u003e，同时对于 \u003ccode\u003e$V\u0026#39;$\u003c/code\u003e 中任意一个顶点，只要在原图 \u003ccode\u003e$G$\u003c/code\u003e 中有对应的边，则也应包含在 \u003ccode\u003e$E\u0026#39;$\u003c/code\u003e 中。\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003e\u003cimg src=\"/images/cn/2020-11-21-network-representation-measures-and-metrics/subgraph.png\" alt=\"\"/\u003e\u003c/p\u003e\n\u003ch2 id=\"motif\"\u003eMotif\u003c/h2\u003e\n\u003cp\u003eMotif \u003csup id=\"fnref:1\"\u003e\u003ca href=\"#fn:1\" class=\"footnote-ref\" role=\"doc-noteref\"\u003e1\u003c/a\u003e\u003c/sup\u003e 被定义为反复出现的重要连接模式。这些模式在真实的网络中要比随机网络中出现的更加频繁，如下图所示：\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"/images/cn/2020-11-21-network-representation-measures-and-metrics/motifs-real-randomized-networks.png\" alt=\"\"/\u003e\u003c/p\u003e\n\u003cp\u003eMotif 的显著性定义为：\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003e$$ Z_i = \\dfrac{N_i^{\\text{real}} - \\bar{N}_i^{\\text{rand}}}{\\text{std} \\left(N_i^{\\text{rand}}\\right)} $$\u003c/code\u003e\u003c/p\u003e\n\u003cp\u003e其中，\u003ccode\u003e$N_i^{\\text{real}}$\u003c/code\u003e 为模式在真实图中出现的次数，\u003ccode\u003e$N_i^{\\text{rand}}$\u003c/code\u003e 为模式在随机图中出现的次数。\u003c/p\u003e\n\u003ch2 id=\"graphlets\"\u003eGraphlets\u003c/h2\u003e\n\u003cp\u003eGraphlets 是对 Motif 的扩展，Motif 是从全局的角度发现模式，而 Graphlets 是从局部角度出发。Graphlets 是连接的非同构子图，这里要求子图为导出子图。下图展示了节点数为 2 至 5 的所有 Graphlets：\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"/images/cn/2020-11-21-network-representation-measures-and-metrics/graphlets.png\" alt=\"\"/\u003e\u003c/p\u003e\n\u003cp\u003e更多关于 Motif 和 Graphlets 的细节请参见 \u003csup id=\"fnref:2\"\u003e\u003ca href=\"#fn:2\" class=\"footnote-ref\" role=\"doc-noteref\"\u003e2\u003c/a\u003e\u003c/sup\u003e \u003csup id=\"fnref:3\"\u003e\u003ca href=\"#fn:3\" class=\"footnote-ref\" role=\"doc-noteref\"\u003e3\u003c/a\u003e\u003c/sup\u003e 。\u003c/p\u003e\n\u003ch1 id=\"测度和度量\"\u003e测度和度量\u003c/h1\u003e\n\u003ch2 id=\"中心性\"\u003e中心性\u003c/h2\u003e\n\u003ch3 id=\"度中心性\"\u003e度中心性\u003c/h3\u003e\n\u003cp\u003e\u003cstrong\u003e中心性\u003c/strong\u003e（centrality）是研究“网络中哪些顶点是最重要或最核心的？”这个问题的一个概念。网络中心性的最简单的测度是顶点的度，即与顶点相连的边的数量。有时为了强调度作为中心性测度的用途，在社会学中也称之为\u003cstrong\u003e度中心性\u003c/strong\u003e（degree centrality）。\u003c/p\u003e\n\u003ch3 id=\"特征向量中心性\"\u003e特征向量中心性\u003c/h3\u003e\n\u003cp\u003e度中心性可自然地扩展为\u003cstrong\u003e特征向量中心性\u003c/strong\u003e（eigenvector centrality）。可以将度中心性理解为给某顶点所有邻居顶点赋予一个“中心性值”，但并非所有连接顶点的值都是相同的。很多情况下，一个顶点会由于连接到一些本身很重要的点，而使自身的重要性得到提升，这就是特征向量中心性的本质。\u003c/p\u003e\n\u003cp\u003e对于每个顶点 \u003ccode\u003e$i$\u003c/code\u003e，假设其中心性为 \u003ccode\u003e$x_i$\u003c/code\u003e。对于所有 \u003ccode\u003e$i$\u003c/code\u003e，可以设其初始值 \u003ccode\u003e$x_i = 1$\u003c/code\u003e，利用该值可以计算出另一个更能体现中心性的值 \u003ccode\u003e$x\u0026#39;_i$\u003c/code\u003e，将 \u003ccode\u003e$x\u0026#39;_i$\u003c/code\u003e 定义为 \u003ccode\u003e$i$\u003c/code\u003e 所有邻居顶点的中心性之和：\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003e$$ x\u0026#39;_i = \\sum_{j} A_{ij} x_j $$\u003c/code\u003e\u003c/p\u003e\n\u003cp\u003e重复该过程可以得到更好的估计值，重复 \u003ccode\u003e$t$\u003c/code\u003e 步后，中心性 \u003ccode\u003e$\\mathbf{x} \\left(t\\right)$\u003c/code\u003e 的计算公式如下：\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003e$$ \\mathbf{x} \\left(t\\right) = \\mathbf{A}^t \\mathbf{x} \\left(0\\right) $$\u003c/code\u003e\u003c/p\u003e\n\u003cp\u003e当 \u003ccode\u003e$t \\to \\infty$\u003c/code\u003e 时，中心性向量的极限与邻接矩阵中的主特征向量成正比。因此，可以等价地认为中心性 \u003ccode\u003e$\\mathbf{x}$\u003c/code\u003e 满足：\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003e$$ \\mathbf{A} \\mathbf{x} = \\kappa_1 \\mathbf{x} $$\u003c/code\u003e\u003c/p\u003e\n\u003cp\u003e其中，\u003ccode\u003e$\\kappa_1$\u003c/code\u003e 为矩阵 \u003ccode\u003e$\\mathbf{A}$\u003c/code\u003e 的特征值中的最大值。\u003c/p\u003e\n\u003cp\u003e特征向量中心性对于有向图和无向图都适用。在有向图中，邻接矩阵是非对称的，因此网络有两类特征向量，通常情况下我们选择右特征向量来定义中心性。因为在有向网络中，中心性主要是由指向顶点的顶点，而不是由顶点指向的顶点赋予的。\u003c/p\u003e\n\u003ch3 id=\"katz-中心性\"\u003eKatz 中心性\u003c/h3\u003e\n\u003cp\u003e\u003cstrong\u003eKatz 中心性\u003c/strong\u003e解决了特征向量中心性中节点中心性可能为零的问题。通过为网络中每个顶点赋予少量的“免费”中心性，可以定义：\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003e$$ x_i = \\alpha \\sum_{j} A_{ij} x_j + \\beta $$\u003c/code\u003e\u003c/p\u003e\n\u003cp\u003e其中，\u003ccode\u003e$\\alpha$\u003c/code\u003e 和 \u003ccode\u003e$\\beta$\u003c/code\u003e 是正常数。使用矩阵表示可以写成：\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003e$$ \\mathbf{x} = \\alpha \\mathbf{A} \\mathbf{x} + \\beta \\mathbf{1} $$\u003c/code\u003e\u003c/p\u003e\n\u003cp\u003e其中，\u003ccode\u003e$\\mathbf{1}$\u003c/code\u003e 代表向量 \u003ccode\u003e$\\left(1, 1, 1, \\cdots\\right)$\u003c/code\u003e。重新整理有 \u003ccode\u003e$\\mathbf{x} = \\beta \\left(\\mathbf{I} - \\alpha \\mathbf{A}\\right)^{-1} \\mathbf{1}$\u003c/code\u003e，由于只关心相对值，通常可以设置 \u003ccode\u003e$\\beta = 1$\u003c/code\u003e，则有：\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003e$$ \\mathbf{x} = \\left(\\mathbf{I} - \\alpha \\mathbf{A}\\right)^{-1} \\mathbf{1} $$\u003c/code\u003e\u003c/p\u003e\n\u003ch3 id=\"pagerank\"\u003ePageRank\u003c/h3\u003e\n\u003cp\u003eKatz 中心性有一个不足，被一个 Katz 中心性较高的顶点指向的顶点具有较高的 Katz 中心性，但如果这个中心性较高的顶点指向大量顶点，那么这些大量被指向的顶点也会拥有较高的中心性，但这种估计并非总是恰当的。在新的中心性中，那些指向很多其他顶点的顶点，即使本身的中心性很高，但也只能传递给它指向的每个顶点少量的中心性，定义为：\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003e$$ x_{i}=\\alpha \\sum_{j} A_{i j} \\frac{x_{j}}{k_{j}^{\\text {out }}}+\\beta $$\u003c/code\u003e\u003c/p\u003e\n\u003cp\u003e其中，\u003ccode\u003e$k_j^{\\text{out}}$\u003c/code\u003e 为顶点的出度，当 \u003ccode\u003e$k_j^{\\text{out}} = 0$\u003c/code\u003e 时可以将其设定为任何一个非零值，都不会影响计算结果。利用矩阵的形式，可以表示为：\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003e$$ \\mathbf{x}=\\alpha \\mathbf{AD}^{-1} \\mathbf{x}+\\beta \\mathbf{1} $$\u003c/code\u003e\u003c/p\u003e\n\u003cp\u003e其中，\u003ccode\u003e$\\mathbf{D}$\u003c/code\u003e 为对角矩阵，\u003ccode\u003e$D_{ii} = \\max \\left(k_j^{\\text{out}}, 1\\right)$\u003c/code\u003e。同之前一样，\u003ccode\u003e$\\beta$\u003c/code\u003e 只是整个公式的因子，设置 \u003ccode\u003e$\\beta = 1$\u003c/code\u003e，有：\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003e$$ \\mathbf{x}=\\left(\\mathbf{I}-\\alpha \\mathbf{A} \\mathbf{D}^{-1}\\right)^{-1} \\mathbf{1} $$\u003c/code\u003e\u003c/p\u003e\n\u003cp\u003e该中心性即为 \u003cstrong\u003ePageRank\u003c/strong\u003e。\u003c/p\u003e\n\u003cp\u003e上述 4 种中心性的区别和联系如下表所示：\u003c/p\u003e\n\u003ctable\u003e\n\u003cthead\u003e\n\u003ctr\u003e\n\u003cth\u003e\u003c/th\u003e\n\u003cth\u003e带有常数项\u003c/th\u003e\n\u003cth\u003e不带常数项\u003c/th\u003e\n\u003c/tr\u003e\n\u003c/thead\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd\u003e除以出度\u003c/td\u003e\n\u003ctd\u003e\u003ccode\u003e$\\mathbf{x} = \\left(\\mathbf{I}-\\alpha \\mathbf{A} \\mathbf{D}^{-1}\\right)^{-1} \\mathbf{1}$\u003c/code\u003e\u003cbr/\u003ePageRank\u003c/td\u003e\n\u003ctd\u003e\u003ccode\u003e$\\mathbf{x} = \\mathbf{A} \\mathbf{D}^{-1} \\mathbf{x}$\u003c/code\u003e\u003cbr/\u003e度中心性\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e不除出度\u003c/td\u003e\n\u003ctd\u003e\u003ccode\u003e$\\mathbf{x} = \\left(\\mathbf{I} - \\alpha \\mathbf{A}\\right)^{-1} \\mathbf{1}$\u003c/code\u003e\u003cbr/\u003eKatz 中心性\u003c/td\u003e\n\u003ctd\u003e\u003ccode\u003e$\\mathbf{x} = \\kappa_1^{-1} \\mathbf{A} \\mathbf{x}$\u003c/code\u003e\u003cbr/\u003e特征向量中心性\u003c/td\u003e\n\u003c/tr\u003e\n\u003c/tbody\u003e\n\u003c/table\u003e\n\u003ch3 id=\"接近度中心性\"\u003e接近度中心性\u003c/h3\u003e\n\u003cp\u003e\u003cstrong\u003e接近度中心性\u003c/strong\u003e（closeness centrality）用于度量一个顶点到其他顶点的平均距离。\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003e$$ C_{i}=\\frac{1}{\\ell_{i}}=\\frac{n}{\\sum_{j} d_{i j}} $$\u003c/code\u003e\u003c/p\u003e\n\u003cp\u003e其中，\u003ccode\u003e$d_{i j}$\u003c/code\u003e 表示从顶点 \u003ccode\u003e$i$\u003c/code\u003e 到 \u003ccode\u003e$j$\u003c/code\u003e 的测地路径长度，即路径中边的总数，\u003ccode\u003e$\\ell_{i}$\u003c/code\u003e 表示从 \u003ccode\u003e$i$\u003c/code\u003e 到 \u003ccode\u003e$j$\u003c/code\u003e 的平均测地距离。在大多数网络中，顶点之间的测地距离一般都较小，并且随着网络规模的增长，该值只是以对数级别速度缓慢增长。\u003c/p\u003e\n\u003cp\u003e在不同分支中的两个顶点之间的测地距离定义为无穷大，则 \u003ccode\u003e$C_i$\u003c/code\u003e 为零。为了解决这个问题，最常见的方法是只计算同一分支内部的顶点的平均测地距离。新的定义使用顶点之间的调和平均测地距离：\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003e$$ C_{i}^{\\prime}=\\frac{1}{n-1} \\sum_{j(\\neq i)} \\frac{1}{d_{i j}} $$\u003c/code\u003e\u003c/p\u003e\n\u003cp\u003e公式中排除了 \u003ccode\u003e$j = i$\u003c/code\u003e 的情况，因为 \u003ccode\u003e$d_{ii} = 0$\u003c/code\u003e。结果也称之为\u003cstrong\u003e调和中心性\u003c/strong\u003e（harmonic centrality）。\u003c/p\u003e\n\u003ch3 id=\"介数中心性\"\u003e介数中心性\u003c/h3\u003e\n\u003cp\u003e\u003cstrong\u003e介数中心性\u003c/strong\u003e（betweenness centrality）描述了一个顶点在其他顶点之间路径上的分布程度。假设在网络中每两个顶点之间，在每个单位时间内以相等的概率交换信息，信息总是沿着网络中最短测地路径传播，如果有多条最短测地路径则随机选择。由于消息是沿着最短路径以相同的速率传播，因此经过某个顶点的消息数与经过该顶点的测地路径数成正比。测地路径数就是所谓的介数中心性，简称\u003cstrong\u003e介数\u003c/strong\u003e。\u003c/p\u003e\n\u003cp\u003e定义 \u003ccode\u003e$n_{st}^i$\u003c/code\u003e 为从 \u003ccode\u003e$s$\u003c/code\u003e 到 \u003ccode\u003e$t$\u003c/code\u003e 经过 \u003ccode\u003e$i$\u003c/code\u003e 的测地路径数量，定义 \u003ccode\u003e$g_{st}$\u003c/code\u003e 为从 \u003ccode\u003e$s$\u003c/code\u003e 到 \u003ccode\u003e$t$\u003c/code\u003e 的测地路径总数，那么顶点 \u003ccode\u003e$i$\u003c/code\u003e 的介数中心性可以表示为：\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003e$$ x_{i}=\\sum_{s t} \\frac{n_{s t}^{i}}{g_{s t}} $$\u003c/code\u003e\u003c/p\u003e\n\u003cp\u003e高介数中心性的顶点由于控制着其他顶点之间的消息传递，在网络中有着很强的影响力。删除介数最高的顶点，也最有可能破坏其他顶点之间的通信。\u003c/p\u003e\n\u003cp\u003e不同中心性的可视化如下图所示：\u003c/p\u003e\n\u003cfigure\u003e\n  \u003cimg class=\"lazyload\" data-src=\"/images/cn/2020-11-21-network-representation-measures-and-metrics/centrality-measures.png\" data-large-max-width=\"100%\" data-middle-max-width=\"100%\" data-small-max-width=\"100%\"/\u003e\n  \n  \u003cfigcaption class=\"kai\"\u003e不同中心性可视化 \u003ca href=\"https://commons.wikimedia.org/w/index.php?curid=39064835\"\u003eBy Tapiocozzo, CC BY-SA 4.0\u003c/a\u003e\u003c/figcaption\u003e\n  \n\u003c/figure\u003e\n\u003cp\u003e其中，A：介数中心性；B：接近度中心性；C：特征向量中心性；D：度中心性；E：调和中心性；F：Katz 中心性。\u003c/p\u003e\n\u003ch2 id=\"传递性\"\u003e传递性\u003c/h2\u003e\n\u003cp\u003e\u003cstrong\u003e传递性\u003c/strong\u003e（transitivity）在社会网络中的重要性要比其他网络中重要得多。在数学上，对于关系“\u003ccode\u003e$\\circ$\u003c/code\u003e”，如果 \u003ccode\u003e$a \\circ b$\u003c/code\u003e 和 \u003ccode\u003e$b \\circ c$\u003c/code\u003e，若能推出 \u003ccode\u003e$a \\circ c$\u003c/code\u003e，则称 \u003ccode\u003e$\\circ$\u003c/code\u003e 具有传递性。\u003c/p\u003e\n\u003cp\u003e完全传递性值出现在每一个分支都是全连通的子图或团的网络中。\u003cstrong\u003e团\u003c/strong\u003e（clique）是指无向图网络中的一个最大顶点子集，在该子集中任何两个顶点之间都有一条边直接连接。完全传递性没有太多的实际意义，而部分传递性却很有用。在很多网络中，\u003ccode\u003e$u$\u003c/code\u003e 认识 \u003ccode\u003e$v$\u003c/code\u003e 且 \u003ccode\u003e$v$\u003c/code\u003e 认识 \u003ccode\u003e$w$\u003c/code\u003e，并不能保证 \u003ccode\u003e$u$\u003c/code\u003e 认识 \u003ccode\u003e$w$\u003c/code\u003e，但两者之间相互认识的概率很大。\u003c/p\u003e\n\u003cp\u003e如果 \u003ccode\u003e$u$\u003c/code\u003e 也认识 \u003ccode\u003e$w$\u003c/code\u003e，则称该路径是闭合的。在社会网络术语中，称 \u003ccode\u003e$u, v, w$\u003c/code\u003e 这 3 个顶点形成一个\u003cstrong\u003e闭合三元组\u003c/strong\u003e（closed triad）。我们将\u003cstrong\u003e聚类系数\u003c/strong\u003e（clustering coefficient）定义为网络中所有长度为 2 的路径中闭合路径所占的比例：\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003e$$ C = \\dfrac{\\text{长度为 2 的路径中闭合路径数}}{\\text{长度为 2 的路径数}} $$\u003c/code\u003e\u003c/p\u003e\n\u003cp\u003e其取值范围在 0 到 1 之间。社会网络的聚类系数比其他网络偏高。\u003c/p\u003e\n\u003cp\u003e对于顶点 \u003ccode\u003e$i$\u003c/code\u003e，定地单个顶点的聚类系数为：\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003e$$ C_i = \\dfrac{\\text{顶点 i 的邻居顶点中直接相连的顶点对数}}{\\text{顶点 i 的邻居顶点对总数}} $$\u003c/code\u003e\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003e$C_i$\u003c/code\u003e 也称为\u003cstrong\u003e局部聚类系数\u003c/strong\u003e（local clustering coefficient），该值代表了 \u003ccode\u003e$i$\u003c/code\u003e 的朋友之间互为朋友的平均概率。\u003c/p\u003e\n\u003ch2 id=\"相互性\"\u003e相互性\u003c/h2\u003e\n\u003cp\u003e聚类系数观察的是长度为 3 的循环，长度为 2 的循环的频率通过\u003cstrong\u003e相互性\u003c/strong\u003e（reciprocity）来度量，该频率描述了两个顶点之间相互指向的概率。\u003c/p\u003e\n\u003ch2 id=\"相似性\"\u003e相似性\u003c/h2\u003e\n\u003cp\u003e社会网络分析的另一个核心概念是顶点之间的相似性。构造网络相似性的测度有两种基本方法：\u003cstrong\u003e结构等价\u003c/strong\u003e（structural equivalence）和\u003cstrong\u003e规则等价\u003c/strong\u003e（regular equivalence），如下图所示：\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"/images/cn/2020-11-21-network-representation-measures-and-metrics/structural-and-regular-equivalence.png\" alt=\"\"/\u003e\u003c/p\u003e\n\u003ch3 id=\"结构等价\"\u003e结构等价\u003c/h3\u003e\n\u003cp\u003e针对无向网络中，最简单和最显而易见的结构等价测度就是计算两个顶点的共享邻居顶点数。在无向网络中，顶点 \u003ccode\u003e$i$\u003c/code\u003e 和 \u003ccode\u003e$j$\u003c/code\u003e 的共享邻居顶点数表示为 \u003ccode\u003e$n_{ij}$\u003c/code\u003e，有：\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003e$$ n_{ij} = \\sum_{k} A_{ik} A_{kj} $$\u003c/code\u003e\u003c/p\u003e\n\u003cp\u003e利用\u003cstrong\u003e余弦相似度\u003c/strong\u003e可以更好的对其进行度量。将邻接矩阵的第 \u003ccode\u003e$i$\u003c/code\u003e 和第 \u003ccode\u003e$j$\u003c/code\u003e 行分别看成两个向量，然后将这两个向量之间的夹角余弦值用于相似性度量，有：\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003e$$ \\sigma_{i j}=\\cos \\theta=\\frac{\\sum_{k} A_{i k} A_{k j}}{\\sqrt{\\sum_{k} A_{i k}^{2}} \\sqrt{\\Sigma_{k} A_{j k}^{2}}} $$\u003c/code\u003e\u003c/p\u003e\n\u003cp\u003e假设网络是不带权重的简单图，上式可以化简为：\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003e$$ \\sigma_{i j}=\\frac{\\sum_{k} A_{i k} A_{k j}}{\\sqrt{k_{i}} \\sqrt{k_{j}}}=\\frac{n_{i j}}{\\sqrt{k_{i} k_{j}}} $$\u003c/code\u003e\u003c/p\u003e\n\u003cp\u003e其中，\u003ccode\u003e$k_i$\u003c/code\u003e 是顶点 \u003ccode\u003e$i$\u003c/code\u003e 的度。余弦相似度的取值范围为从 0 到 1，1 表示两个顶点之间拥有完全相同的邻居节点。\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003e皮尔逊相关系数\u003c/strong\u003e通过同随机选择邻居顶点条件下共享邻居顶点数的期望值进行比较的方式进行计算，得到的标准的皮尔逊相关系数为：\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003e$$ r_{i j}=\\frac{\\sum_{k}\\left(A_{i k}-\\left\\langle A_{i}\\right\\rangle\\right)\\left(A_{j k}-\\left\\langle A_{j}\\right\\rangle\\right)}{\\sqrt{\\sum_{k}\\left(A_{i k}-\\left\\langle A_{i}\\right\\rangle\\right)^{2}} \\sqrt{\\sum_{k}\\left(A_{j k}-\\left\\langle A_{j}\\right\\rangle\\right)^{2}}} $$\u003c/code\u003e\u003c/p\u003e\n\u003cp\u003e上式的取值范围从 -1 到 1，数值越大表明两者之间越相似。\u003c/p\u003e\n\u003ch3 id=\"规则等价\"\u003e规则等价\u003c/h3\u003e\n\u003cp\u003e规则等价的顶点不必共享邻居顶点，但是两个顶点的邻居顶点本身要具有相似性。一些简单的代数测度思想如下：定义一个相似性值 \u003ccode\u003e$\\sigma_{ij}$\u003c/code\u003e，若顶点 \u003ccode\u003e$i$\u003c/code\u003e 和 \u003ccode\u003e$j$\u003c/code\u003e 各自的邻居顶点 \u003ccode\u003e$k$\u003c/code\u003e 和 \u003ccode\u003e$l$\u003c/code\u003e 本身具有较高的相似性，则 \u003ccode\u003e$i$\u003c/code\u003e 和 \u003ccode\u003e$j$\u003c/code\u003e 的相似性也较高。对于无向网络，有以下公式：\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003e$$ \\sigma_{i j}=\\alpha \\sum_{k l} A_{i k} A_{j l} \\sigma_{k l} $$\u003c/code\u003e\u003c/p\u003e\n\u003cp\u003e或者利用矩阵性质表示为 \u003ccode\u003e$\\mathbf{\\sigma} = \\alpha \\mathbf{A \\sigma A}$\u003c/code\u003e。\u003c/p\u003e\n\u003ch2 id=\"同质性\"\u003e同质性\u003c/h2\u003e\n\u003cp\u003e在社会网络中，人们倾向于选择那些他们认为与其自身在某些方面相似的人作为朋友，这种倾向性称为\u003cstrong\u003e同质性\u003c/strong\u003e（homophily）或\u003cstrong\u003e同配混合\u003c/strong\u003e（assortative mixing）。\u003c/p\u003e\n\u003ch3 id=\"依据枚举特征的同配混合\"\u003e依据枚举特征的同配混合\u003c/h3\u003e\n\u003cp\u003e假设有一个网络，其顶点根据某个\u003cstrong\u003e枚举特征\u003c/strong\u003e（例如：国籍、种族、性别等）分类，且该特征的取值是一个有限集合。如果网络中连接相同类型顶点之间的边所占比例很大，那么该网络就是同配的。量化同配性简单的方法是观测这部分边占总边数的比例，但这并不是很好的度量方法，因为如果所有顶点都是同一个类型，那么测度值就是 1。\u003c/p\u003e\n\u003cp\u003e好的测度可以通过首先找出连接同类顶点的边所占的比例，然后减去在不考虑顶点类型时，随机连接的边中，连接两个同类顶点的边所占比例的期望值的方式得到。常用的测度为\u003cstrong\u003e模块度\u003c/strong\u003e（modularity）：\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003e$$ Q=\\frac{1}{2 m} \\sum_{i j}\\left(A_{i j}-\\frac{k_{i} k_{j}}{2 m}\\right) \\delta_{g_{i} g_{i}} $$\u003c/code\u003e\u003c/p\u003e\n\u003cp\u003e其中，\u003ccode\u003e$k_i$\u003c/code\u003e 为顶点 \u003ccode\u003e$i$\u003c/code\u003e 的度，\u003ccode\u003e$g_i$\u003c/code\u003e 为顶点 \u003ccode\u003e$i$\u003c/code\u003e 的类型，\u003ccode\u003e$m$\u003c/code\u003e 为总边数，\u003ccode\u003e$\\delta_{ij}$\u003c/code\u003e 为\u003ca href=\"https://zh.wikipedia.org/wiki/%E5%85%8B%E7%BD%97%E5%86%85%E5%85%8B%CE%B4%E5%87%BD%E6%95%B0\"\u003e克罗内克函数\u003c/a\u003e。该值严格小于 1，如果同类顶点之间边数的实际值大于随机条件下的期望值，则该值为正数，否则为负数，值为正说明该网络是同配混合的。\u003c/p\u003e\n\u003ch3 id=\"依据标量特征的同配混合\"\u003e依据标量特征的同配混合\u003c/h3\u003e\n\u003cp\u003e如果根据\u003cstrong\u003e标量特征\u003c/strong\u003e（例如：年龄、收入等）来度量网络中的同质性。由于该类特征具有确定的顺序，因此根据标量的数值，不仅可以指出两个顶点在什么情况下是完全相同的，也可以指出它们在真么情况下是近似相同的。\u003c/p\u003e\n\u003cp\u003e令 \u003ccode\u003e$x_i$\u003c/code\u003e 为顶点 \u003ccode\u003e$i$\u003c/code\u003e 的标量值，\u003ccode\u003e$\\left(x_i, x_j\\right)$\u003c/code\u003e 为网络中每一条边 \u003ccode\u003e$\\left(i, j\\right)$\u003c/code\u003e 的两个端点的值，利用协方差可以得到\u003cstrong\u003e同配系数\u003c/strong\u003e：\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003e$$ r=\\frac{\\sum_{i j}\\left(A_{i j}-k_{i} k_{j} / 2 m\\right) x_{i} x_{j}}{\\sum_{i j}\\left(k_{i} \\delta_{i j}-k_{i} k_{j} / 2 m\\right) x_{i} x_{j}} $$\u003c/code\u003e\u003c/p\u003e\n\u003cp\u003e该系数在全同配混合网络中取最大值 1，在全异配混合网络中取最小值 -1，值 0 意味着边两端的顶点值是非相关的。\u003c/p\u003e\n\u003ch3 id=\"依据度的同配混合\"\u003e依据度的同配混合\u003c/h3\u003e\n\u003cp\u003e依据度的同配混合是依据标量特征的同配混合的一个特例。依据度的同配混合网络中，高度数顶点倾向于与其他高度数顶点相连，而低度数顶点倾向于与其他低度数顶点相连。\u003c/p\u003e\n\u003cp\u003e在同配网络中，度大的顶点倾向于聚集在一起的网络中，我们希望得到网络中这些度大的顶点构成的顶点块或核，它们周围是一些度小的顶点构成的低密度\u003cstrong\u003e边缘\u003c/strong\u003e（periphery）。这种\u003cstrong\u003e核心/边缘结构\u003c/strong\u003e（core/periphery structure）是社会网络的普遍特征。\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"/images/cn/2020-11-21-network-representation-measures-and-metrics/core-periphery-structure.png\" alt=\"\"/\u003e\u003c/p\u003e\n\u003cp\u003e上图 (a) 给出了一个小型的同配混合网络，其核心/边缘结构明显，上图 (b) 给出了一个小型异配混合网络，通常不具备核心/边缘结构，但顶点的分布更加均匀。\u003c/p\u003e\n\u003cdiv class=\"footnotes\" role=\"doc-endnotes\"\u003e\n\u003chr/\u003e\n\u003col\u003e\n\u003cli id=\"fn:1\"\u003e\n\u003cp\u003eMilo, R., Shen-Orr, S., Itzkovitz, S., Kashtan, N., Chklovskii, D., \u0026amp; Alon, U. (2002). Network motifs: simple building blocks of complex networks. \u003cem\u003eScience\u003c/em\u003e, 298(5594), 824-827. \u003ca href=\"#fnref:1\" class=\"footnote-backref\" role=\"doc-backlink\"\u003e↩︎\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli id=\"fn:2\"\u003e\n\u003cp\u003eJain, D., \u0026amp; Patgiri, R. (2019, April). Network Motifs: A Survey. In \u003cem\u003eInternational Conference on Advances in Computing and Data Sciences\u003c/em\u003e (pp. 80-91). Springer, Singapore. \u003ca href=\"#fnref:2\" class=\"footnote-backref\" role=\"doc-backlink\"\u003e↩︎\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli id=\"fn:3\"\u003e\n\u003cp\u003eHenderson, K., Gallagher, B., Eliassi-Rad, T., Tong, H., Basu, S., Akoglu, L., … \u0026amp; Li, L. (2012, August). Rolx: structural role extraction \u0026amp; mining in large graphs. In \u003cem\u003eProceedings of the 18th ACM SIGKDD international conference on Knowledge discovery and data mining\u003c/em\u003e (pp. 1231-1239). \u003ca href=\"#fnref:3\" class=\"footnote-backref\" role=\"doc-backlink\"\u003e↩︎\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ol\u003e\n\u003c/div\u003e\n\n\n\n\n\n\u003cdiv class=\"donate\"\u003e\n  \u003cdiv class=\"donate-header\"\u003e\u003c/div\u003e\n  \u003cdiv class=\"donate-slug\" id=\"donate-slug\"\u003enetwork-representation-measures-and-metrics\u003c/div\u003e\n  \u003cbutton class=\"donate-button\"\u003e赞 赏\u003c/button\u003e\n  \u003cdiv class=\"donate-footer\"\u003e「真诚赞赏，手留余香」\u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"donate-modal-wrapper\"\u003e\n  \u003cdiv class=\"donate-modal\"\u003e\n    \u003cdiv class=\"donate-box\"\u003e\n      \u003cdiv class=\"donate-box-content\"\u003e\n        \u003cdiv class=\"donate-box-content-inner\"\u003e\n          \u003cdiv class=\"donate-box-header\"\u003e「真诚赞赏，手留余香」\u003c/div\u003e\n          \u003cdiv class=\"donate-box-body\"\u003e\n            \u003cdiv class=\"donate-box-money\"\u003e\n              \u003cbutton class=\"donate-box-money-button donate-box-money-button-unchecked\" id=\"donate-box-money-button-2\" data-v=\"2\" data-unchecked=\"￥ 2\" data-checked=\"2 元\"\u003e￥ 2\u003c/button\u003e\n              \u003cbutton class=\"donate-box-money-button donate-box-money-button-unchecked\" id=\"donate-box-money-button-5\" data-v=\"5\" data-unchecked=\"￥ 5\" data-checked=\"5 元\"\u003e￥ 5\u003c/button\u003e\n              \u003cbutton class=\"donate-box-money-button donate-box-money-button-unchecked\" id=\"donate-box-money-button-10\" data-v=\"10\" data-unchecked=\"￥ 10\" data-checked=\"10 元\"\u003e￥ 10\u003c/button\u003e\n              \u003cbutton class=\"donate-box-money-button donate-box-money-button-unchecked\" id=\"donate-box-money-button-50\" data-v=\"50\" data-unchecked=\"￥ 50\" data-checked=\"50 元\"\u003e￥ 50\u003c/button\u003e\n              \u003cbutton class=\"donate-box-money-button donate-box-money-button-unchecked\" id=\"donate-box-money-button-100\" data-v=\"100\" data-unchecked=\"￥ 100\" data-checked=\"100 元\"\u003e￥ 100\u003c/button\u003e\n              \u003cbutton class=\"donate-box-money-button donate-box-money-button-unchecked\" id=\"donate-box-money-button-custom\" data-v=\"custom\" data-unchecked=\"任意金额\" data-checked=\"任意金额\"\u003e任意金额\u003c/button\u003e\n            \u003c/div\u003e\n            \u003cdiv class=\"donate-box-pay\"\u003e\n              \u003cimg class=\"donate-box-pay-qrcode\" id=\"donate-box-pay-qrcode\" src=\"\"/\u003e\n            \u003c/div\u003e\n          \u003c/div\u003e\n          \u003cdiv class=\"donate-box-footer\"\u003e\n            \u003cdiv class=\"donate-box-pay-method donate-box-pay-method-checked\" data-v=\"wechat-pay\"\u003e\n              \u003cimg class=\"donate-box-pay-method-image\" id=\"donate-box-pay-method-image-wechat-pay\" src=\"\"/\u003e\n            \u003c/div\u003e\n            \u003cdiv class=\"donate-box-pay-method\" data-v=\"alipay\"\u003e\n              \u003cimg class=\"donate-box-pay-method-image\" id=\"donate-box-pay-method-image-alipay\" src=\"\"/\u003e\n            \u003c/div\u003e\n          \u003c/div\u003e\n        \u003c/div\u003e\n      \u003c/div\u003e\n    \u003c/div\u003e\n    \u003cbutton type=\"button\" class=\"donate-box-close-button\"\u003e\n      \u003csvg class=\"donate-box-close-button-icon\" fill=\"#fff\" viewBox=\"0 0 24 24\" width=\"24\" height=\"24\"\u003e\u003cpath d=\"M13.486 12l5.208-5.207a1.048 1.048 0 0 0-.006-1.483 1.046 1.046 0 0 0-1.482-.005L12 10.514 6.793 5.305a1.048 1.048 0 0 0-1.483.005 1.046 1.046 0 0 0-.005 1.483L10.514 12l-5.208 5.207a1.048 1.048 0 0 0 .006 1.483 1.046 1.046 0 0 0 1.482.005L12 13.486l5.207 5.208a1.048 1.048 0 0 0 1.483-.006 1.046 1.046 0 0 0 .005-1.482L13.486 12z\" fill-rule=\"evenodd\"\u003e\u003c/path\u003e\u003c/svg\u003e\n    \u003c/button\u003e\n  \u003c/div\u003e\n\u003c/div\u003e\n\n\u003cscript type=\"text/javascript\" src=\"/js/donate.js\"\u003e\u003c/script\u003e\n\n\n  \u003cfooter\u003e\n  \n\u003cnav class=\"post-nav\"\u003e\n  \u003cspan class=\"nav-prev\"\u003e← \u003ca href=\"/cn/2020/10/text-similarity/\"\u003e文本相似度 (Text Similarity)\u003c/a\u003e\u003c/span\u003e\n  \u003cspan class=\"nav-next\"\u003e\u003ca href=\"/cn/2020/11/structure-of-real-world-network/\"\u003e真实世界网络结构 (Structure of Real-World Network)\u003c/a\u003e →\u003c/span\u003e\n\u003c/nav\u003e\n\n\n\n\n\u003cins class=\"adsbygoogle\" style=\"display:block; text-align:center;\" data-ad-layout=\"in-article\" data-ad-format=\"fluid\" data-ad-client=\"ca-pub-2608165017777396\" data-ad-slot=\"8302038603\"\u003e\u003c/ins\u003e\n\u003cscript\u003e\n  (adsbygoogle = window.adsbygoogle || []).push({});\n\u003c/script\u003e\n\n\n\n\u003cscript src=\"//cdn.jsdelivr.net/npm/js-cookie@3.0.5/dist/js.cookie.min.js\"\u003e\u003c/script\u003e\n\u003cscript src=\"/js/toggle-theme.js\"\u003e\u003c/script\u003e\n\n\n\u003cscript src=\"/js/no-highlight.js\"\u003e\u003c/script\u003e\n\u003cscript src=\"/js/math-code.js\"\u003e\u003c/script\u003e\n\u003cscript src=\"/js/heading-anchor.js\"\u003e\u003c/script\u003e\n\n\n\n\u003csection class=\"comments\"\u003e\n\u003cscript src=\"https://giscus.app/client.js\" data-repo=\"leovan/leovan.me\" data-repo-id=\"MDEwOlJlcG9zaXRvcnkxMTMxOTY0Mjc=\" data-category=\"Comments\" data-category-id=\"DIC_kwDOBr89i84CT-R7\" data-mapping=\"pathname\" data-strict=\"1\" data-reactions-enabled=\"1\" data-emit-metadata=\"0\" data-input-position=\"top\" data-theme=\"preferred_color_scheme\" data-lang=\"zh-CN\" data-loading=\"lazy\" crossorigin=\"anonymous\" defer=\"\"\u003e\n\u003c/script\u003e\n\u003c/section\u003e\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\u003cscript async=\"\" src=\"/js/center-img.js\"\u003e\u003c/script\u003e\n\u003cscript async=\"\" src=\"/js/right-quote.js\"\u003e\u003c/script\u003e\n\u003cscript async=\"\" src=\"/js/external-link.js\"\u003e\u003c/script\u003e\n\u003cscript async=\"\" src=\"/js/alt-title.js\"\u003e\u003c/script\u003e\n\u003cscript async=\"\" src=\"/js/figure.js\"\u003e\u003c/script\u003e\n\n\n\n\u003cscript src=\"//cdn.jsdelivr.net/npm/lazysizes@5.3.2/lazysizes.min.js\"\u003e\u003c/script\u003e\n\n\n\u003cscript src=\"//cdn.jsdelivr.net/npm/vanilla-back-to-top@latest/dist/vanilla-back-to-top.min.js\"\u003e\u003c/script\u003e\n\u003cscript\u003e\naddBackToTop({\n  diameter: 48\n});\n\u003c/script\u003e\n\n  \u003chr/\u003e\n  \u003cdiv class=\"copyright no-border-bottom\"\u003e\n    \u003cdiv class=\"copyright-author-year\"\u003e\n      \u003cspan\u003eCopyright © 2017-2024 \u003ca href=\"/\"\u003e范叶亮 | Leo Van\u003c/a\u003e\u003c/span\u003e\n    \u003c/div\u003e\n  \u003c/div\u003e\n  \u003c/footer\u003e\n  \u003c/article\u003e",
  "Date": "2020-11-21T00:00:00Z",
  "Author": "范叶亮"
}