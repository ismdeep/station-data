{
  "Source": "leovan.me",
  "Title": "在群晖 NAS 上编译安装 tmux",
  "Link": "https://leovan.me/cn/2020/05/compile-and-install-tmux-on-synology-nas/",
  "Content": "\u003carticle class=\"main\"\u003e\n    \u003cheader class=\"content-title\"\u003e\n    \n\u003ch1 class=\"title\"\u003e\n  \n  在群晖 NAS 上编译安装 tmux\n  \n\u003c/h1\u003e\n\n\n\n\n\n\n\n\u003ch2 class=\"author-date\"\u003e范叶亮 / \n2020-05-07\u003c/h2\u003e\n\n\n\n\u003ch3 class=\"post-meta\"\u003e\n\n\n\u003cstrong\u003e分类: \u003c/strong\u003e\n\u003ca href=\"/categories/%E7%BC%96%E7%A8%8B\"\u003e编程\u003c/a\u003e\n\n\n\n\n/\n\n\n\n\n\u003cstrong\u003e标签: \u003c/strong\u003e\n\u003cspan\u003e群晖\u003c/span\u003e, \u003cspan\u003eSynology\u003c/span\u003e, \u003cspan\u003eNAS\u003c/span\u003e, \u003cspan\u003etmux\u003c/span\u003e, \u003cspan\u003e编译\u003c/span\u003e, \u003cspan\u003e构建\u003c/span\u003e\n\n\n\n\n/\n\n\n\u003cstrong\u003e字数: \u003c/strong\u003e\n1153\n\u003c/h3\u003e\n\n\n\n\u003chr/\u003e\n\n\n\n    \n    \n    \u003cins class=\"adsbygoogle\" style=\"display:block; text-align:center;\" data-ad-layout=\"in-article\" data-ad-format=\"fluid\" data-ad-client=\"ca-pub-2608165017777396\" data-ad-slot=\"1261604535\"\u003e\u003c/ins\u003e\n    \u003cscript\u003e\n    (adsbygoogle = window.adsbygoogle || []).push({});\n    \u003c/script\u003e\n    \n    \n    \u003c/header\u003e\n\n\n\n\n\u003ch1 id=\"工具链安装\"\u003e工具链安装\u003c/h1\u003e\n\u003cp\u003e登录 NAS 控制台，在系统根目录创建 \u003ccode\u003etoolkit\u003c/code\u003e 目录：\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"language-shell\"\u003esudo mkdir /toolkit\nsudo chown -R username:users /toolkit\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003e其中 \u003ccode\u003eusername\u003c/code\u003e 为使用的用户名，如果后续使用过程中出现磁盘空间不足的问题，可以在其他具有较大容量的分区建立 \u003ccode\u003etoolkit\u003c/code\u003e，再在根目录建立软链进行使用：\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"language-shell\"\u003emkdir /xxx/toolkit\nsudo ln -s /xxx/toolkit /toolkit\nsudo chown -R username:users /toolkit\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003e之后下载相关工具脚本：\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"language-shell\"\u003ecd /toolkit\ngit clone https://github.com/SynologyOpenSource/pkgscripts-ng.git\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003e工具脚本使用 Python 3 实现，请确保 NAS 已经安装 Python 3，后续使用过程中如果提示相关 Python 扩展包未安装的情况请自行安装后重试。实验的 Synology NAS 为 DS418play，系统版本为 \u003cstrong\u003eDSM 6.2.2\u003c/strong\u003e 系统，处理器为 INTEL Celeron J3355 处理器（产品代号：\u003cstrong\u003eApollo Lake\u003c/strong\u003e），首先利用 \u003ccode\u003eEnvDeploy\u003c/code\u003e 下载所需的编译环境：\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"language-shell\"\u003ecd /toolkit/pkgscripts-ng\nsudo ./EnvDeploy -v 6.2 -p apollolake\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003e请根据自己机器的系统版本和处理器类型自行调整 \u003ccode\u003e-v\u003c/code\u003e 和 \u003ccode\u003e-p\u003c/code\u003e 参数。如果下载速度较慢可以手动从 \u003ca href=\"https://sourceforge.net/projects/dsgpl/files/toolkit/DSM6.2/\"\u003ehttps://sourceforge.net/projects/dsgpl/files/toolkit/DSM6.2/\u003c/a\u003e 下载下列文件：\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003ebase_env-6.2.txz\nds.apollolake-6.2.dev.txz\nds.apollolake-6.2.env.txz\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003e将其放置到 \u003ccode\u003e/toolkit/toolkit_tarballs\u003c/code\u003e 目录中，然后通过如下命令进行部署安装：\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"language-shell\"\u003esudo ./EnvDeploy -v 6.2 -p apollolake -t /toolkit/toolkit_tarballs\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch1 id=\"编译-tmux\"\u003e编译 tmux\u003c/h1\u003e\n\u003cp\u003e在 \u003ccode\u003e/toolkit\u003c/code\u003e 目录下建立 \u003ccode\u003esource\u003c/code\u003e 文件夹，并将 tmux 源代码（本文以 3.1b 版本为例）下载到该文件夹中：\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"language-shell\"\u003ecd /toolkit\nmkdir source\ncd source\nwget https://github.com/tmux/tmux/releases/download/3.1b/tmux-3.1b.tar.gz\ntar -zxvf tmux-3.1b.tar.gz\nmv tmux-3.1b tmux\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003e在 tmux 源代码根目录中建立 \u003ccode\u003eSynoBuildConf\u003c/code\u003e 文件夹，并在文件夹中创建如下文件：\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"language-shell\"\u003ecd /toolkit/source/tmux\nmkdir SynoBuildConf\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003e\u003ccode\u003ebuild\u003c/code\u003e\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"language-bash\"\u003e#!/bin/bash\n\ncase ${MakeClean} in\n\t[Yy][Ee][Ss])\n\t\tmake distclean\n\t\t;;\nesac\n\nNCURSES_INCS=\u0026#34;$(pkg-config ncurses --cflags)\u0026#34;\nNCURSES_LIBS=\u0026#34;$(pkg-config ncurses --libs)\u0026#34;\n\nCFLAGS=\u0026#34;${CFLAGS} ${NCURSES_INCS}\u0026#34;\nLDFLAGS=\u0026#34;${LDFLAGS} ${NCURSES_LIBS}\u0026#34;\n\nenv CC=\u0026#34;${CC}\u0026#34; AR=\u0026#34;${AR}\u0026#34; CFLAGS=\u0026#34;${CFLAGS}\u0026#34; LDFLAGS=\u0026#34;${LDFLAGS}\u0026#34; \\\n./configure ${ConfigOpt}\n\nmake ${MAKE_FLAGS}\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003e\u003ccode\u003edepends\u003c/code\u003e\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"language-bash\"\u003e[default]\nall=\u0026#34;6.2\u0026#34;\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003e\u003ccode\u003einstall\u003c/code\u003e\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"language-bash\"\u003e#!/bin/bash\n\nPKG_NAME=\u0026#34;tmux\u0026#34;\nTGZ_DIR=\u0026#34;/tmp/_${PKG_NAME}_tgz\u0026#34;\nPKG_DIR=\u0026#34;/tmp/_${PKG_NAME}_pkg\u0026#34;\nPKG_DEST=\u0026#34;/image/packages\u0026#34;\n\nsource /pkgscripts-ng/include/pkg_util.sh\n\ncreate_package_tgz() {\n\t## clear destination directory\n\tfor dir in $TGZ_DIR $PKG_DIR; do\n\t\trm -rf \u0026#34;$dir\u0026#34;\n\tdone\n\tfor dir in $TGZ_DIR $PKG_DIR; do\n\t\tmkdir -p \u0026#34;$dir\u0026#34;\n\tdone\n\n\t## install needed file into TGZ_DIR\n\tDESTDIR=\u0026#34;${TGZ_DIR}\u0026#34; make install\n\n\t## create package.tgz\n\tpkg_make_package $TGZ_DIR $PKG_DIR\n}\n\ncreate_package_spk(){\n\t## Copy package center scripts to PKG_DIR\n\tcp -r synology/scripts/ $PKG_DIR\n\n\t## Copy package icon\n\tcp -av synology/PACKAGE_ICON*.PNG $PKG_DIR\n\n\t## Generate INFO file\n\tsynology/INFO.sh \u0026gt; INFO\n\tcp INFO $PKG_DIR\n\n\t## Create the final spk.\n\tmkdir -p $PKG_DEST\n\tpkg_make_spk $PKG_DIR $PKG_DEST\n}\n\nmain() {\n\tcreate_package_tgz\n\tcreate_package_spk\n}\n\nmain \u0026#34;$@\u0026#34;\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003e在 tmux 源代码根目录中建立 \u003ccode\u003esynology\u003c/code\u003e 文件夹，并在文件夹中创建如下文件：\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"language-shell\"\u003ecd /toolkit/source/tmux\nmkdir synology\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003e\u003ccode\u003eINFO.sh\u003c/code\u003e\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"language-bash\"\u003e#!/bin/sh\n\n. /pkgscripts-ng/include/pkg_util.sh\n\npackage=\u0026#34;tmux\u0026#34;\nversion=\u0026#34;3.1b\u0026#34;\ndisplayname=\u0026#34;tmux\u0026#34;\narch=\u0026#34;$(pkg_get_platform) \u0026#34;\nmaintainer=\u0026#34;tmux\u0026#34;\nmaintainer_url=\u0026#34;https://github.com/tmux\u0026#34;\ndistributor=\u0026#34;Leo Van\u0026#34;\ndistributor_url=\u0026#34;https://leovan.me\u0026#34;\ndescription=\u0026#34;tmux is a terminal multiplexer: it enables a number of terminals to be created, accessed, and controlled from a single screen. tmux may be detached from a screen and continue running in the background, then later reattached.\u0026#34;\nsupport_url=\u0026#34;https://github.com/tmux/tmux\u0026#34;\nthirdparty=\u0026#34;yes\u0026#34;\nstartable=\u0026#34;no\u0026#34;\nsilent_install=\u0026#34;yes\u0026#34;\nsilent_upgrade=\u0026#34;yes\u0026#34;\nsilent_uninstall=\u0026#34;yes\u0026#34;\n\n[ \u0026#34;$(caller)\u0026#34; != \u0026#34;0 NULL\u0026#34; ] \u0026amp;\u0026amp; return 0\n\npkg_dump_info\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003e并为其添加运行权限：\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"language-shell\"\u003ecd /toolkit/source/tmux/scripts\nchmod u+x INFO.sh\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003e下载 tmux 图标并将其重命名：\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"language-shell\"\u003ecd /toolkit/source/tmux/synology\nwget https://raw.githubusercontent.com/tmux/tmux/master/logo/tmux-logo-huge.png\nconvert tmux-logo-huge.png -crop 480x480+0+0 -resize 72x PACKAGE_ICON.PNG\nconvert tmux-logo-huge.png -crop 480x480+0+0 -resize 256x PACKAGE_ICON_256.PNG\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003e此处需要使用 \u003ca href=\"https://www.imagemagick.org/\"\u003eImageMagick\u003c/a\u003e 对图标进行裁剪和缩放，请自行安装，或在本地对图片进行处理后上传到指定目录。在 \u003ccode\u003e/toolkit/source/tmux/synology\u003c/code\u003e 目录中建立 \u003ccode\u003escripts\u003c/code\u003e 文件夹，并在文件夹中创建如下文件：\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"language-shell\"\u003ecd /toolkit/source/tmux/synology\nmkdir scripts\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003e\u003ccode\u003epostinst\u003c/code\u003e\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"language-bash\"\u003e#!/bin/sh\n\nln -sf \u0026#34;$SYNOPKG_PKGDEST/usr/local/bin/tmux\u0026#34; /usr/bin/\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003e\u003ccode\u003epostuninst\u003c/code\u003e\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"language-bash\"\u003e#!/bin/sh\n\nrm -f /usr/local/bin/tmux\nrm -f /usr/bin/tmux\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003e\u003ccode\u003epostupgrade\u003c/code\u003e\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"language-bash\"\u003e#!/bin/sh\n\nexit 0\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003e\u003ccode\u003epreinst\u003c/code\u003e\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"language-bash\"\u003e#!/bin/sh\n\nexit 0\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003e\u003ccode\u003epreuninst\u003c/code\u003e\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"language-bash\"\u003e#!/bin/sh\n\nexit 0\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003e\u003ccode\u003epreupgrade\u003c/code\u003e\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"language-bash\"\u003e#!/bin/sh\n\nexit 0\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003e\u003ccode\u003estart-stop-status\u003c/code\u003e\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"language-bash\"\u003e#!/bin/sh\n\ncase $1 in\n\tstart)\n\t\texit 0\n\t;;\n\tstop)\n\t\texit 0\n\t;;\n\tstatus)\n\t\tif [ -h \u0026#34;/usr/bin/tmux\u0026#34; ]; then\n\t\t\texit 0\n\t\telse\n\t\t\texit 1\n\t\tfi\n\t;;\n\tkillall)\n        ;;\n\tlog)\n\t\texit 0\n\t;;\nesac\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003e为所有文件添加运行权限：\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"language-shell\"\u003ecd /toolkit/source/tmux/synology/scripts\nchmod u+x *\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003e利用 \u003ccode\u003ePkgCreate.py\u003c/code\u003e 构建 \u003ccode\u003etmux\u003c/code\u003e 扩展包：\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"language-shell\"\u003esudo ./PkgCreate.py -v 6.2 -p apollolake tmux\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003e最终构建完毕的扩展包位于 \u003ccode\u003e/toolkit/build_env/ds.apollolake-6.2/image/packages\u003c/code\u003e 中。\u003c/p\u003e\n\u003ch1 id=\"安装-tmux\"\u003e安装 tmux\u003c/h1\u003e\n\u003cp\u003e在 \u003ccode\u003e/toolkit/build_env/ds.apollolake-6.2/image/packages\u003c/code\u003e 目录中有两个编译好的扩展包，分别是 \u003ccode\u003etmux-apollolake-3.1b_debug.spk\u003c/code\u003e 和 \u003ccode\u003etmux-apollolake-3.1b.spk\u003c/code\u003e。其中 \u003ccode\u003etmux-apollolake-3.1b.spk\u003c/code\u003e 为 Release 版本，传输到本地，通过 NAS 的套件中心手动安装即可。安装完毕后，套件中心的“已安装”会出现 tmux，如下图所示：\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"/images/cn/2020-05-07-compile-and-install-tmux-on-synology-nas/tmux-installed.png\" alt=\"\"/\u003e\u003c/p\u003e\n\u003cp\u003e进入 NAS 控制台，运行 \u003ccode\u003etmux -V\u003c/code\u003e 可以得到安装好的 tmux 版本信息：\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"language-shell\"\u003etmux 3.1b\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003e在此放出编译好的 \u003ca href=\"https://cdn.leovan.me/packages/synology/tmux-apollolake-3.1b.spk\"\u003etmux 扩展包\u003c/a\u003e，方便和 DS418play 具有相同系统的 CPU 架构的小伙伴直接使用。\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e本文主要参考了 Synology 官方的扩展包构建指南：https://help.synology.com/developer-guide/create_package/index.html\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\n\n\n\n\u003cdiv class=\"donate\"\u003e\n  \u003cdiv class=\"donate-header\"\u003e\u003c/div\u003e\n  \u003cdiv class=\"donate-slug\" id=\"donate-slug\"\u003ecompile-and-install-tmux-on-synology-nas\u003c/div\u003e\n  \u003cbutton class=\"donate-button\"\u003e赞 赏\u003c/button\u003e\n  \u003cdiv class=\"donate-footer\"\u003e「真诚赞赏，手留余香」\u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"donate-modal-wrapper\"\u003e\n  \u003cdiv class=\"donate-modal\"\u003e\n    \u003cdiv class=\"donate-box\"\u003e\n      \u003cdiv class=\"donate-box-content\"\u003e\n        \u003cdiv class=\"donate-box-content-inner\"\u003e\n          \u003cdiv class=\"donate-box-header\"\u003e「真诚赞赏，手留余香」\u003c/div\u003e\n          \u003cdiv class=\"donate-box-body\"\u003e\n            \u003cdiv class=\"donate-box-money\"\u003e\n              \u003cbutton class=\"donate-box-money-button donate-box-money-button-unchecked\" id=\"donate-box-money-button-2\" data-v=\"2\" data-unchecked=\"￥ 2\" data-checked=\"2 元\"\u003e￥ 2\u003c/button\u003e\n              \u003cbutton class=\"donate-box-money-button donate-box-money-button-unchecked\" id=\"donate-box-money-button-5\" data-v=\"5\" data-unchecked=\"￥ 5\" data-checked=\"5 元\"\u003e￥ 5\u003c/button\u003e\n              \u003cbutton class=\"donate-box-money-button donate-box-money-button-unchecked\" id=\"donate-box-money-button-10\" data-v=\"10\" data-unchecked=\"￥ 10\" data-checked=\"10 元\"\u003e￥ 10\u003c/button\u003e\n              \u003cbutton class=\"donate-box-money-button donate-box-money-button-unchecked\" id=\"donate-box-money-button-50\" data-v=\"50\" data-unchecked=\"￥ 50\" data-checked=\"50 元\"\u003e￥ 50\u003c/button\u003e\n              \u003cbutton class=\"donate-box-money-button donate-box-money-button-unchecked\" id=\"donate-box-money-button-100\" data-v=\"100\" data-unchecked=\"￥ 100\" data-checked=\"100 元\"\u003e￥ 100\u003c/button\u003e\n              \u003cbutton class=\"donate-box-money-button donate-box-money-button-unchecked\" id=\"donate-box-money-button-custom\" data-v=\"custom\" data-unchecked=\"任意金额\" data-checked=\"任意金额\"\u003e任意金额\u003c/button\u003e\n            \u003c/div\u003e\n            \u003cdiv class=\"donate-box-pay\"\u003e\n              \u003cimg class=\"donate-box-pay-qrcode\" id=\"donate-box-pay-qrcode\" src=\"\"/\u003e\n            \u003c/div\u003e\n          \u003c/div\u003e\n          \u003cdiv class=\"donate-box-footer\"\u003e\n            \u003cdiv class=\"donate-box-pay-method donate-box-pay-method-checked\" data-v=\"wechat-pay\"\u003e\n              \u003cimg class=\"donate-box-pay-method-image\" id=\"donate-box-pay-method-image-wechat-pay\" src=\"\"/\u003e\n            \u003c/div\u003e\n            \u003cdiv class=\"donate-box-pay-method\" data-v=\"alipay\"\u003e\n              \u003cimg class=\"donate-box-pay-method-image\" id=\"donate-box-pay-method-image-alipay\" src=\"\"/\u003e\n            \u003c/div\u003e\n          \u003c/div\u003e\n        \u003c/div\u003e\n      \u003c/div\u003e\n    \u003c/div\u003e\n    \u003cbutton type=\"button\" class=\"donate-box-close-button\"\u003e\n      \u003csvg class=\"donate-box-close-button-icon\" fill=\"#fff\" viewBox=\"0 0 24 24\" width=\"24\" height=\"24\"\u003e\u003cpath d=\"M13.486 12l5.208-5.207a1.048 1.048 0 0 0-.006-1.483 1.046 1.046 0 0 0-1.482-.005L12 10.514 6.793 5.305a1.048 1.048 0 0 0-1.483.005 1.046 1.046 0 0 0-.005 1.483L10.514 12l-5.208 5.207a1.048 1.048 0 0 0 .006 1.483 1.046 1.046 0 0 0 1.482.005L12 13.486l5.207 5.208a1.048 1.048 0 0 0 1.483-.006 1.046 1.046 0 0 0 .005-1.482L13.486 12z\" fill-rule=\"evenodd\"\u003e\u003c/path\u003e\u003c/svg\u003e\n    \u003c/button\u003e\n  \u003c/div\u003e\n\u003c/div\u003e\n\n\u003cscript type=\"text/javascript\" src=\"/js/donate.js\"\u003e\u003c/script\u003e\n\n\n  \u003cfooter\u003e\n  \n\u003cnav class=\"post-nav\"\u003e\n  \u003cspan class=\"nav-prev\"\u003e← \u003ca href=\"/cn/2020/05/hmm-crf-and-sequence-labeling/\"\u003e隐马尔可夫 (Hidden Markov Model, HMM)，条件随机场 (Conditional Random Fields, CRF) 和序列标注 (Sequence Labeling)\u003c/a\u003e\u003c/span\u003e\n  \u003cspan class=\"nav-next\"\u003e\u003ca href=\"/cn/2020/05/introduction-of-reinforcement-learning/\"\u003e强化学习简介 (Introduction of Reinforcement Learning)\u003c/a\u003e →\u003c/span\u003e\n\u003c/nav\u003e\n\n\n\n\n\u003cins class=\"adsbygoogle\" style=\"display:block; text-align:center;\" data-ad-layout=\"in-article\" data-ad-format=\"fluid\" data-ad-client=\"ca-pub-2608165017777396\" data-ad-slot=\"8302038603\"\u003e\u003c/ins\u003e\n\u003cscript\u003e\n  (adsbygoogle = window.adsbygoogle || []).push({});\n\u003c/script\u003e\n\n\n\n\u003cscript src=\"//cdn.jsdelivr.net/npm/js-cookie@3.0.5/dist/js.cookie.min.js\"\u003e\u003c/script\u003e\n\u003cscript src=\"/js/toggle-theme.js\"\u003e\u003c/script\u003e\n\n\n\u003cscript src=\"/js/no-highlight.js\"\u003e\u003c/script\u003e\n\u003cscript src=\"/js/math-code.js\"\u003e\u003c/script\u003e\n\u003cscript src=\"/js/heading-anchor.js\"\u003e\u003c/script\u003e\n\n\n\n\u003csection class=\"comments\"\u003e\n\u003cscript src=\"https://giscus.app/client.js\" data-repo=\"leovan/leovan.me\" data-repo-id=\"MDEwOlJlcG9zaXRvcnkxMTMxOTY0Mjc=\" data-category=\"Comments\" data-category-id=\"DIC_kwDOBr89i84CT-R7\" data-mapping=\"pathname\" data-strict=\"1\" data-reactions-enabled=\"1\" data-emit-metadata=\"0\" data-input-position=\"top\" data-theme=\"preferred_color_scheme\" data-lang=\"zh-CN\" data-loading=\"lazy\" crossorigin=\"anonymous\" defer=\"\"\u003e\n\u003c/script\u003e\n\u003c/section\u003e\n\n\n\u003cscript src=\"//cdn.jsdelivr.net/npm/clipboard@2.0.11/dist/clipboard.min.js\"\u003e\u003c/script\u003e\n\u003cscript src=\"//cdn.jsdelivr.net/npm/prismjs@1.29.0/prism.min.js\"\u003e\u003c/script\u003e\n\u003cscript src=\"//cdn.jsdelivr.net/npm/prismjs@1.29.0/plugins/autoloader/prism-autoloader.min.js\"\u003e\u003c/script\u003e\n\u003cscript src=\"//cdn.jsdelivr.net/npm/prismjs@1.29.0/plugins/toolbar/prism-toolbar.min.js\"\u003e\u003c/script\u003e\n\u003cscript\u003e\n  (function() {\n    if (!self.Prism) {\n      return;\n    }\n\n    \n    Prism.languages.dos = Prism.languages.powershell;\n    Prism.languages.gremlin = Prism.languages.groovy;\n\n    let languages = {\n      'r': 'R', 'python': 'Python', 'xml': 'XML', 'html': 'HTML',\n      'yaml': 'YAML', 'latex': 'LaTeX', 'tex': 'TeX',\n      'powershell': 'PowerShell', 'javascript': 'JavaScript',\n      'dos': 'DOS', 'qml': 'QML', 'json': 'JSON', 'bash': 'Bash',\n      'text': 'Text', 'txt': 'Text', 'sparql': 'SPARQL',\n      'gremlin': 'Gremlin', 'cypher': 'Cypher', 'ngql': 'nGQL',\n      'shell': 'Shell', 'sql': 'SQL', 'apacheconf': 'Apache Configuration', 'c': 'C', 'css': 'CSS'\n    };\n\n    Prism.hooks.add('before-highlight', function(env) {\n      if (env.language !== 'plain') {\n        let language = languages[env.language] || env.language;\n        env.element.setAttribute('data-language', language);\n      }\n    });\n\n    \n    let ClipboardJS = window.ClipboardJS || undefined;\n\n    Prism.plugins.toolbar.registerButton('copy-to-clipboard', function(env) {\n      let linkCopy = document.createElement('button');\n      linkCopy.classList.add('prism-button-copy');\n\n      registerClipboard();\n\n      return linkCopy;\n\n      function registerClipboard() {\n        let clip = new ClipboardJS(linkCopy, {\n          'text': function () {\n            return env.code;\n          }\n        });\n\n        clip.on('success', function() {\n          linkCopy.classList.add('prism-button-copy-success');\n          resetText();\n        });\n        clip.on('error', function () {\n          linkCopy.classList.add('prism-button-copy-error');\n          resetText();\n        });\n      }\n\n      function resetText() {\n        setTimeout(function () {\n          linkCopy.classList.remove('prism-button-copy-success');\n          linkCopy.classList.remove('prism-button-copy-error');\n        }, 1600);\n      }\n    });\n  })();\n\u003c/script\u003e\n\n\n\n\n\n\n\n\n\n\n\n\n\n\u003cscript async=\"\" src=\"/js/center-img.js\"\u003e\u003c/script\u003e\n\u003cscript async=\"\" src=\"/js/right-quote.js\"\u003e\u003c/script\u003e\n\u003cscript async=\"\" src=\"/js/external-link.js\"\u003e\u003c/script\u003e\n\u003cscript async=\"\" src=\"/js/alt-title.js\"\u003e\u003c/script\u003e\n\u003cscript async=\"\" src=\"/js/figure.js\"\u003e\u003c/script\u003e\n\n\n\n\u003cscript src=\"//cdn.jsdelivr.net/npm/lazysizes@5.3.2/lazysizes.min.js\"\u003e\u003c/script\u003e\n\n\n\u003cscript src=\"//cdn.jsdelivr.net/npm/vanilla-back-to-top@latest/dist/vanilla-back-to-top.min.js\"\u003e\u003c/script\u003e\n\u003cscript\u003e\naddBackToTop({\n  diameter: 48\n});\n\u003c/script\u003e\n\n  \u003chr/\u003e\n  \u003cdiv class=\"copyright no-border-bottom\"\u003e\n    \u003cdiv class=\"copyright-author-year\"\u003e\n      \u003cspan\u003eCopyright © 2017-2024 \u003ca href=\"/\"\u003e范叶亮 | Leo Van\u003c/a\u003e\u003c/span\u003e\n    \u003c/div\u003e\n  \u003c/div\u003e\n  \u003c/footer\u003e\n  \u003c/article\u003e",
  "Date": "2020-05-07T00:00:00Z",
  "Author": "范叶亮"
}