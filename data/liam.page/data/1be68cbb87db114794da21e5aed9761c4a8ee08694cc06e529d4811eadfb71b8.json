{
  "Source": "liam.page",
  "Title": "使用 Nginx 搭建反向代理以访问 Gist",
  "Link": "https://liam.page/2015/09/07/reverse-proxy-to-get-access-to-gist/",
  "Content": "\u003cdiv class=\"post-body\" itemprop=\"articleBody\"\u003e\n\n      \n        \u003cp\u003e嗯，这么久没更新博文，是因为有一篇文章写了很久但一直没写完。真是哔了狗了。\u003c/p\u003e\n\u003cp\u003e今天想说的是一件更加哔了狗的事情。\u003c/p\u003e\n\u003cp\u003eGist 是 GitHub 推出的代码片段分享服务，是最好用的代码片段分享服务没有之一。但是，它被天杀的围墙挡在了外面；而挡住它的理由更是无厘头——有人在白宫上发起了一个针对围墙的请愿活动，使用 Gist 提供了一份围墙制作人员的\u003ca target=\"_blank\" rel=\"noopener\" href=\"http://yangzhe1991.org/blog/2013/01/%E8%87%AA%E7%94%B1/\"\u003e名单\u003c/a\u003e。\u003c/p\u003e\n\u003cp\u003e没办法，学习工作都需要用到 Gist，于是决定用 Nginx 在 EC2 上搭建一个针对 Gist 服务的反向代理服务器。\u003c/p\u003e\n\u003cspan id=\"more\"\u003e\u003c/span\u003e\n\n\u003ch2 id=\"反向代理\"\u003e\u003ca href=\"#反向代理\" class=\"headerlink\" title=\"反向代理\"\u003e\u003c/a\u003e反向代理\u003c/h2\u003e\u003cp\u003e想必大家对代理服务器并不陌生，但是对「反向代理」这个名词却不一定了解。\u003c/p\u003e\n\u003cp\u003e实际上，代理服务器按照起到的功能作用可以分为两种：正向代理服务器和反向代理服务器。我们用得比较多的是正向代理服务器：它横在客户端前面，代理客户端的行为，向服务器发出请求。反向代理服务器则与之相反：它横在服务器面前，代理服务器的行为，接受客户端的请求，然后向服务器请求资源后，以服务器的身份将资源内容返回给客户端。\u003c/p\u003e\n\u003cp\u003e\u003cimg data-src=\"//liam.page/attachment/attachment/images/Network/Reverse_Proxy.png\" alt=\"反向代理示意图\"/\u003e\u003c/p\u003e\n\u003cp\u003e对于大型网站来说，反向代理可以作为 DMZ 服务器，承担屏蔽外网访问的功能。此时，外网所有的访问，都通过 DMZ 转发到内网相应的服务器上，从内网服务器获取内容后，再经由 DMZ 返回给外网的客户端。这样，外网客户端无法获知内网的网络拓扑结构，这对内网是一种保护。\u003c/p\u003e\n\u003cp\u003e现在我们希望在对于围墙可信的某计算机上搭建一个反向代理服务器，并赋予它一个特定的域名（比如 \u003ccode\u003eexample.com\u003c/code\u003e）。这样，我们访问 \u003ccode\u003eexample.com\u003c/code\u003e 就相当于访问了 \u003ccode\u003egist.github.com\u003c/code\u003e。\u003c/p\u003e\n\u003ch2 id=\"编译安装-Nginx\"\u003e\u003ca href=\"#编译安装-Nginx\" class=\"headerlink\" title=\"编译安装 Nginx\"\u003e\u003c/a\u003e编译安装 Nginx\u003c/h2\u003e\u003cp\u003eNginx 是俄罗斯大神 Igor Sysoev 开发的网页服务器，稳定、高效、并发能力好；最关键的是，用它来配置反向代理服务器非常方便。\u003c/p\u003e\n\u003cp\u003e首先我们来编译安装 Nginx。\u003c/p\u003e\n\u003ch3 id=\"前期准备\"\u003e\u003ca href=\"#前期准备\" class=\"headerlink\" title=\"前期准备\"\u003e\u003c/a\u003e前期准备\u003c/h3\u003e\u003cp\u003e编译安装需要 \u003ccode\u003egcc\u003c/code\u003e 和 \u003ccode\u003eg++\u003c/code\u003e 之类的编译器，文章之后的内容都默认你的服务器上已经安装了这些工具。\u003c/p\u003e\n\u003cp\u003e我的 EC2 服务器用的是 Ubuntu Server，安装这些工具可以用 \u003ccode\u003eapt-get\u003c/code\u003e。\u003c/p\u003e\n\u003cfigure class=\"highlight bash\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003esudo apt-get install build-essential\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003esudo apt-get install libtool\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e接下来，我们需要安装 PCRE、zlib 以及 openssl 库。PCRE 是用 Perl 写的正则表达式库，zlib 库在 \u003ccode\u003egzip\u003c/code\u003e 压缩的时候会用到，openssl 则是著名的 SSL 库。\u003c/p\u003e\n\u003cp\u003e我们将源码保存在 \u003ccode\u003e/usr/local/src\u003c/code\u003e，然后开始下载和编译 PCRE、zlib 和 openssl 库。\u003c/p\u003e\n\u003cfigure class=\"highlight bash\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e8\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e9\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e10\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e11\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e12\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e13\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e14\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e15\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e16\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e17\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e18\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e19\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e20\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"comment\"\u003e# PCRE\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"built_in\"\u003ecd\u003c/span\u003e /usr/local/src\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003esudo wget ftp://ftp.csx.cam.ac.uk/pub/software/programming/pcre/pcre-8.37.tar.gz\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003esudo tar -zvxf pcre-8.37.tar.gz\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"built_in\"\u003ecd\u003c/span\u003e pcre-8.37\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003esudo ./configure\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003esudo make\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003esudo make install\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"comment\"\u003e# zlib\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"built_in\"\u003ecd\u003c/span\u003e /usr/local/src\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003esudo wget http://zlib.net/zlib-1.2.8.tar.gz\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003esudo tar -zvxf zlib-1.2.8.tar.gz\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"built_in\"\u003ecd\u003c/span\u003e zlib-1.2.8\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003esudo ./configure\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003esudo make\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003esudo make install\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"comment\"\u003e# openssl\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"built_in\"\u003ecd\u003c/span\u003e /usr/local/src\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003esudo wget http://www.openssl.org/source/openssl-1.0.0s.tar.gz\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003esudo tar -zvxf openssl-1.0.0s.tar.gz\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003ch3 id=\"安装-Nginx\"\u003e\u003ca href=\"#安装-Nginx\" class=\"headerlink\" title=\"安装 Nginx\"\u003e\u003c/a\u003e安装 Nginx\u003c/h3\u003e\u003cp\u003eNginx 最新的版本是 1.9.4。我们下载并安装它。\u003c/p\u003e\n\u003cfigure class=\"highlight bash\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e8\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e9\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e10\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e11\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e12\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e13\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e14\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"built_in\"\u003ecd\u003c/span\u003e /usr/local/src\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003esudo wget http://nginx.org/download/nginx-1.9.4.tar.gz\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003esudo tar -zvxf nginx-1.9.4.tar.gz\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"built_in\"\u003ecd\u003c/span\u003e nginx-1.4.2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003esudo ./configure --sbin-path=/usr/local/nginx/nginx\\\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e--conf-path=/usr/local/nginx/nginx.conf\\\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e--pid-path=/usr/local/nginx/nginx.pid\\\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e--with-http_ssl_module --with-http_sub_module\\\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e--with-http_stub_status_module\\\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e--with-pcre=/usr/local/src/pcre-8.37\\\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e--with-zlib=/usr/local/src/zlib-1.2.8\\\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e--with-openssl=/usr/local/src/openssl-1.0.0s\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003esudo make\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003esudo make install\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e这里，\u003ccode\u003e./configure\u003c/code\u003e 配置的时候：\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003e--sbin-path\u003c/code\u003e 指定了二进制文件的位置\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003e--conf-path\u003c/code\u003e 指定了配置文件的位置\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003e--pid-path\u003c/code\u003e 指定了 pid 文件存放的位置\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003e--with-http_ssl_module\u003c/code\u003e 将会安装 SSL 模块\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003e--with-http_sub_module\u003c/code\u003e 将会安装替换模块，之后的 URL 替换会用到它\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003e--with-http_stub_status_module\u003c/code\u003e 将会安装性能监视模块\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003e--with-pcre\u003c/code\u003e 链接 PCRE 库\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003e--with-zlib\u003c/code\u003e 链接 zlib 库\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003e--with-openssl\u003c/code\u003e 链接 openssl 库\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"测试运行\"\u003e\u003ca href=\"#测试运行\" class=\"headerlink\" title=\"测试运行\"\u003e\u003c/a\u003e测试运行\u003c/h3\u003e\u003cp\u003e首先确定 \u003ccode\u003e80\u003c/code\u003e 端口没有被占用：\u003c/p\u003e\n\u003cfigure class=\"highlight bash\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003enetstat -ano | grep 80\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e然后执行命令，运行 Nginx：\u003c/p\u003e\n\u003cfigure class=\"highlight bash\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003esudo /usr/local/nginx/nginx\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e查看 \u003ccode\u003e80\u003c/code\u003e 端口的情况：\u003c/p\u003e\n\u003cfigure class=\"highlight bash\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003enetstat -ano | grep 80\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e出现下列结果，则说明 Nginx 已成功运行，并且正在监听 \u003ccode\u003e80\u003c/code\u003e 端口：\u003c/p\u003e\n\u003cfigure class=\"highlight plaintext\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003etcp     0      0 0.0.0.0:80     0.0.0.0:*   LISTEN  off (0.00/0/0)\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003ch2 id=\"配置反向代理\"\u003e\u003ca href=\"#配置反向代理\" class=\"headerlink\" title=\"配置反向代理\"\u003e\u003c/a\u003e配置反向代理\u003c/h2\u003e\u003cp\u003eNginx 的配置文件是用花括号对 \u003ccode\u003e{}\u003c/code\u003e 嵌套而成的结构化配置文件。这里我们不讲 Nginx 配置文件的详细内容，关于它的详细说明可以参见\u003ca target=\"_blank\" rel=\"noopener\" href=\"http://www.cnblogs.com/xiaogangqq123/archive/2011/03/02/1969006.html\"\u003e这篇博客\u003c/a\u003e。\u003c/p\u003e\n\u003cp\u003e按照安装时指定的内容，我们需要找到 \u003ccode\u003e/usr/local/nginx/nginx.conf\u003c/code\u003e 中的 \u003ccode\u003ehttp\u003c/code\u003e 块，在其中添加以下内容：\u003c/p\u003e\n\u003cfigure class=\"highlight plaintext\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e8\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e9\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e10\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e11\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e12\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e13\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e14\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e15\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e16\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e17\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e18\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e19\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e20\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e# server, gist reverse proxy\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eserver {\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    listen  80;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    server_name gist.example.com;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    access_log  off;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    resolver    8.8.8.8;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    location / {\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        proxy_pass          https://gist.github.com;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        proxy_cache_valid   200 302 1h;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        proxy_cache_valid   404 1m;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        proxy_cache_use_stale error timeout invalid_header updating\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e            http_500 http_502 http_503 http_504;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        proxy_set_header    Accept-Encoding \u0026#34;\u0026#34;;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        proxy_set_header    Accept-Language \u0026#34;zh-CN\u0026#34;;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        proxy_set_header    User-Agent $http_user_agent;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        sub_filter  https://gist-assets.github.com/ http://gist.example.com;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        sub_filter  https://gist.github.com/ http://gist.example.com;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        sub_filter_once     off;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    }\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e}\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e这里对它做一个解释。\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003e井号开头的行是注释\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eserver\u003c/code\u003e 开始了 \u003ccode\u003eserver\u003c/code\u003e 块\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003elisten\u003c/code\u003e 表明 Nginx 将会在 \u003ccode\u003e80\u003c/code\u003e 端口监听\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eserver_name\u003c/code\u003e 是我们给反向代理配置的域名，访问这个域名就相当于访问 Gist\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eaccess_log\u003c/code\u003e 是日志文件的配置，这里为了简化我将它关掉了\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eresolver\u003c/code\u003e 是 DNS 服务器\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003elocation\u003c/code\u003e 块具体配置反向代理的行为\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eproxy_pass\u003c/code\u003e 说明将会将请求转发至 Gist\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eproxy_cache_valid\u003c/code\u003e 配置缓存\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eproxy_cache_valid\u003c/code\u003e 同上\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eproxy_cache_use_stale\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003e同上\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eproxy_set_header\u003c/code\u003e 设置 HTTP 请求头，\u003ccode\u003eAccept-Encoding \u0026#34;\u0026#34;\u003c/code\u003e 表示拒绝任何压缩，这保证了服务器返回给反向代理的内容是未经压缩的，以便进行 URL 替换\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eproxy_set_header\u003c/code\u003e 设置 HTTP 请求头，语言设置\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eproxy_set_header\u003c/code\u003e 设置 HTTP 请求头，设置 UA\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003esub_filter\u003c/code\u003e URL 替换\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003esub_filter\u003c/code\u003e 同上\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003esub_filter_once\u003c/code\u003e 被关闭，替换所有可替换的内容\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003e这样，访问 \u003ccode\u003ehttp://gist.example.com\u003c/code\u003e 就相当于访问了 \u003ccode\u003ehttps://gist.github.com\u003c/code\u003e。最后，我们需要让 Nginx 载入新的配置文件：\u003c/p\u003e\n\u003cfigure class=\"highlight bash\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003esudo /usr/local/nginx/nginx -t\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n    \u003c/div\u003e",
  "Date": "2015-09-07T09:33:44Z",
  "Author": "Liam Huang"
}