{
  "Source": "liam.page",
  "Title": "100 行代码实现 PageRank 算法",
  "Link": "https://liam.page/2017/04/04/Python-100-lines-of-PageRank/",
  "Content": "\u003cdiv class=\"post-body\" itemprop=\"articleBody\"\u003e\n\n      \n        \u003cp\u003e搜索引擎是现代互联网的基础设施之一，而 ranking 则是搜索引擎的需要解决的核心问题。\u003c/p\u003e\n\u003cp\u003e最早尝试对搜索结果进行 ranking 的应该是 Yahoo 公司，但最终革命性突破的是 Google 公司的 Larry Page 与 Sergey Brin 发明的 PageRank 算法。\u003c/p\u003e\n\u003cspan id=\"more\"\u003e\u003c/span\u003e\n\n\u003ch2 id=\"简介\"\u003e\u003ca href=\"#简介\" class=\"headerlink\" title=\"简介\"\u003e\u003c/a\u003e简介\u003c/h2\u003e\u003cp\u003ePageRank 算法的表述很简单，大体上只需要几句话就能表述清楚（不包含一些细微的修正）：\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e将整个互联网，看做一张有向图\u003cul\u003e\n\u003cli\u003e网页是图上的点\u003c/li\u003e\n\u003cli\u003e链接是图上的有向边\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e每个网页都有一个权威性得分，称作 PageRank，可以把它当做是一种「投票权」\u003c/li\u003e\n\u003cli\u003e将每一个超链接作为一次「投票」\u003cul\u003e\n\u003cli\u003e每个网页的 PageRank 等于所有具有指向该网页超链接的网页的 PageRank 的加权和\u003c/li\u003e\n\u003cli\u003e这些权值等于这些网页各自向外链接数目的倒数\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003ePageRank 算法的高明之处，我认为有两点：\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e在表述上清晰明了，所谓简单就是美；\u003c/li\u003e\n\u003cli\u003e将互联网作为一个整体来对待，暗合系统论的观点。\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e按照《数学之美》（吴军）的说法，PageRank 的算法思想主要来自于 Larry Page，而 Sergey Brin 则将其转化为矩阵的迭代运算并证明其收敛性（解决了鸡生蛋生鸡的悖论）。\u003c/p\u003e\n\u003ch2 id=\"Python-实现\"\u003e\u003ca href=\"#Python-实现\" class=\"headerlink\" title=\"Python 实现\"\u003e\u003c/a\u003ePython 实现\u003c/h2\u003e\u003cp\u003e以下是用 Python 实现的 PageRank 算法——当然，没有做任何计算上的优化，仅用于展现算法本身。\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e原始数据下载：\u003ca target=\"_blank\" rel=\"noopener\" href=\"https://course.ccs.neu.edu/cs6200f14/wt2g_inlinks\"\u003ehttps://course.ccs.neu.edu/cs6200f14/wt2g_inlinks\u003c/a\u003e；需要预处理。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cfigure class=\"highlight python\"\u003e\u003cfigcaption\u003e\u003cspan\u003ePageRank.py\u003c/span\u003e\u003c/figcaption\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e8\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e9\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e10\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e11\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e12\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e13\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e14\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e15\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e16\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e17\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e18\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e19\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e20\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e21\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e22\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e23\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e24\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e25\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e26\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e27\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e28\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e29\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e30\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e31\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e32\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e33\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e34\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e35\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e36\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e37\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e38\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e39\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e40\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e41\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e42\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e43\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e44\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e45\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e46\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e47\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e48\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e49\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e50\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e51\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e52\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e53\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e54\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e55\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e56\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e57\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e58\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e59\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e60\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e61\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e62\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e63\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e64\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e65\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e66\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e67\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e68\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e69\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e70\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e71\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e72\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e73\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e74\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e75\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e76\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e77\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e78\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e79\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e80\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e81\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e82\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e83\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e84\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e85\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e86\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e87\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e88\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e89\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e90\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e91\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e92\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e93\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e94\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e95\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e96\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e97\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e98\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e99\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e100\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"keyword\"\u003eclass\u003c/span\u003e \u003cspan class=\"title class_\"\u003eVertex\u003c/span\u003e:\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"keyword\"\u003edef\u003c/span\u003e \u003cspan class=\"title function_\"\u003e__init__\u003c/span\u003e(\u003cspan class=\"params\"\u003eself\u003c/span\u003e):\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        self.in_degree = \u003cspan class=\"number\"\u003e0\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        self.out_degree = \u003cspan class=\"number\"\u003e0\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        self.pagerank = \u003cspan class=\"number\"\u003e0.0\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"keyword\"\u003eclass\u003c/span\u003e \u003cspan class=\"title class_\"\u003eEdge\u003c/span\u003e:\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"keyword\"\u003edef\u003c/span\u003e \u003cspan class=\"title function_\"\u003e__init__\u003c/span\u003e(\u003cspan class=\"params\"\u003eself, start, end\u003c/span\u003e):\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        self.start_id = start\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        self.end_id = end\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"keyword\"\u003edef\u003c/span\u003e \u003cspan class=\"title function_\"\u003eaddVertex\u003c/span\u003e(\u003cspan class=\"params\"\u003evertex_name, vtx_map\u003c/span\u003e):\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"string\"\u003e\u0026#39;\u0026#39;\u0026#39;\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"string\"\u003e    return the id of vertex_name\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"string\"\u003e    if exists in vtx_map, return directly\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"string\"\u003e    if not exists, add it, and then return\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"string\"\u003e\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"string\"\u003e    vertex_name: string, the url of a web page\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"string\"\u003e    vtx_map: dict, the map from url to id\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"string\"\u003e    \u0026#39;\u0026#39;\u0026#39;\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    res_id = \u003cspan class=\"number\"\u003e0\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"keyword\"\u003eif\u003c/span\u003e vertex_name \u003cspan class=\"keyword\"\u003ein\u003c/span\u003e vtx_map:\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        \u003cspan class=\"keyword\"\u003ereturn\u003c/span\u003e vtx_map[vertex_name]\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"keyword\"\u003eelse\u003c/span\u003e:\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        res_id = \u003cspan class=\"built_in\"\u003elen\u003c/span\u003e(vtx_map)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        vtx_map[vertex_name] = res_id\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"keyword\"\u003ereturn\u003c/span\u003e res_id\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"keyword\"\u003edef\u003c/span\u003e \u003cspan class=\"title function_\"\u003ereadTable\u003c/span\u003e(\u003cspan class=\"params\"\u003efname, vtx_map, edge_list\u003c/span\u003e):\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"string\"\u003e\u0026#39;\u0026#39;\u0026#39;\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"string\"\u003e    read fname line by line, update the vtx_map and edge_list\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"string\"\u003e\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"string\"\u003e    fname: string, the file name of the table\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"string\"\u003e    vtx_map: dict, the map from url to id\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"string\"\u003e    edge_list: list, the list of all edges\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"string\"\u003e    \u0026#39;\u0026#39;\u0026#39;\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"keyword\"\u003ewith\u003c/span\u003e \u003cspan class=\"built_in\"\u003eopen\u003c/span\u003e(fname, \u003cspan class=\"string\"\u003e\u0026#39;r\u0026#39;\u003c/span\u003e) \u003cspan class=\"keyword\"\u003eas\u003c/span\u003e fin:\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        \u003cspan class=\"keyword\"\u003efor\u003c/span\u003e line \u003cspan class=\"keyword\"\u003ein\u003c/span\u003e fin.readlines():\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e            tmp = line.strip().split(\u003cspan class=\"string\"\u003e\u0026#39;\\t\u0026#39;\u003c/span\u003e)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e            \u003cspan class=\"keyword\"\u003eassert\u003c/span\u003e(\u003cspan class=\"built_in\"\u003elen\u003c/span\u003e(tmp) == \u003cspan class=\"number\"\u003e2\u003c/span\u003e)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e            start = addVertex(tmp[\u003cspan class=\"number\"\u003e0\u003c/span\u003e], vtx_map)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e            end = addVertex(tmp[\u003cspan class=\"number\"\u003e1\u003c/span\u003e], vtx_map)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e            edge_list.append(Edge(start, end))\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"keyword\"\u003ereturn\u003c/span\u003e \u003cspan class=\"literal\"\u003eNone\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"keyword\"\u003edef\u003c/span\u003e \u003cspan class=\"title function_\"\u003einitialize\u003c/span\u003e(\u003cspan class=\"params\"\u003evtx_map, edge_list, vtx_list\u003c/span\u003e):\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"string\"\u003e\u0026#39;\u0026#39;\u0026#39;\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"string\"\u003e    initialize the data structures\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"string\"\u003e\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"string\"\u003e    vtx_map: dict, the map from url to id\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"string\"\u003e    edge_list: list, the list of all edges\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"string\"\u003e    vtx_list: list, the list of all vertices\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"string\"\u003e    \u0026#39;\u0026#39;\u0026#39;\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    vtx_num = \u003cspan class=\"built_in\"\u003elen\u003c/span\u003e(vtx_map)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"keyword\"\u003eassert\u003c/span\u003e(vtx_num \u0026gt; \u003cspan class=\"number\"\u003e0\u003c/span\u003e)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    vtx_list = [Vertex() \u003cspan class=\"keyword\"\u003efor\u003c/span\u003e _ \u003cspan class=\"keyword\"\u003ein\u003c/span\u003e \u003cspan class=\"built_in\"\u003erange\u003c/span\u003e(vtx_num)]\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"keyword\"\u003efor\u003c/span\u003e i \u003cspan class=\"keyword\"\u003ein\u003c/span\u003e \u003cspan class=\"built_in\"\u003erange\u003c/span\u003e(vtx_num):\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        vtx_list[i].pagerank = \u003cspan class=\"number\"\u003e1.0\u003c/span\u003e / vtx_num\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"keyword\"\u003efor\u003c/span\u003e edge \u003cspan class=\"keyword\"\u003ein\u003c/span\u003e edge_list:\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        vtx_list[edge.start_id].out_degree += \u003cspan class=\"number\"\u003e1\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        vtx_list[edge.end_id].in_degree += \u003cspan class=\"number\"\u003e1\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"keyword\"\u003ereturn\u003c/span\u003e \u003cspan class=\"literal\"\u003eNone\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"keyword\"\u003edef\u003c/span\u003e \u003cspan class=\"title function_\"\u003ecalcPagerank\u003c/span\u003e(\u003cspan class=\"params\"\u003ealpha, num_iter, vtx_map, edge_list\u003c/span\u003e):\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"string\"\u003e\u0026#39;\u0026#39;\u0026#39;\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"string\"\u003e    calc PageRank for all vertices\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"string\"\u003e    return: vtx_list, list, the list of all vertices\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"string\"\u003e\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"string\"\u003e    alpha: float, damping factor\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"string\"\u003e    num_iter: int, the upper limitation of calculation\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"string\"\u003e    vtx_map: dict, the map from url to id\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"string\"\u003e    edge_list: list, the list of all edges\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"string\"\u003e    \u0026#39;\u0026#39;\u0026#39;\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    vtx_list, pr_list = \u003cspan class=\"built_in\"\u003elist\u003c/span\u003e(), \u003cspan class=\"built_in\"\u003elist\u003c/span\u003e()\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    initialize(vtx_map, edge_list, vtx_list)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    vtx_num = \u003cspan class=\"built_in\"\u003elen\u003c/span\u003e(vtx_list)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"keyword\"\u003eassert\u003c/span\u003e(vtx_num \u0026gt; \u003cspan class=\"number\"\u003e0\u003c/span\u003e)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    alpha = \u003cspan class=\"built_in\"\u003efloat\u003c/span\u003e(alpha)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"keyword\"\u003efor\u003c/span\u003e _ \u003cspan class=\"keyword\"\u003ein\u003c/span\u003e \u003cspan class=\"built_in\"\u003erange\u003c/span\u003e(num_iter):\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        pr_list = [alpha / vtx_num \u003cspan class=\"keyword\"\u003efor\u003c/span\u003e _ \u003cspan class=\"keyword\"\u003ein\u003c/span\u003e \u003cspan class=\"built_in\"\u003erange\u003c/span\u003e(vtx_num)]\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        \u003cspan class=\"comment\"\u003e# calc\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        \u003cspan class=\"keyword\"\u003efor\u003c/span\u003e edge \u003cspan class=\"keyword\"\u003ein\u003c/span\u003e edge_list:\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e            pr_list.append((\u003cspan class=\"number\"\u003e1\u003c/span\u003e - alpha) * vtx_list[edge.start_id].pagerank / \\\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e                        vtx_list[edge.start_id].out_degree)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        \u003cspan class=\"comment\"\u003e# revise\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        revise = \u003cspan class=\"built_in\"\u003esum\u003c/span\u003e(\u003cspan class=\"built_in\"\u003emap\u003c/span\u003e(\u003cspan class=\"keyword\"\u003elambda\u003c/span\u003e vtx: (\u003cspan class=\"number\"\u003e1\u003c/span\u003e - alpha) * vtx.pagerank / vtx_num, \\\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e                        \u003cspan class=\"built_in\"\u003efilter\u003c/span\u003e(\u003cspan class=\"keyword\"\u003elambda\u003c/span\u003e vtx:(vtx.out_degree == \u003cspan class=\"number\"\u003e0\u003c/span\u003e), vtx_list)))\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        \u003cspan class=\"comment\"\u003e# update\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        \u003cspan class=\"keyword\"\u003efor\u003c/span\u003e i \u003cspan class=\"keyword\"\u003ein\u003c/span\u003e \u003cspan class=\"built_in\"\u003erange\u003c/span\u003e(vtx_num):\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e            vtx_list[i].pagerank = pr_list[i] + revise\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"keyword\"\u003ereturn\u003c/span\u003e vtx_list\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"keyword\"\u003edef\u003c/span\u003e \u003cspan class=\"title function_\"\u003edoCalcPageRank\u003c/span\u003e(\u003cspan class=\"params\"\u003efname = \u003cspan class=\"string\"\u003e\u0026#39;wt2g_inlinks.source\u0026#39;\u003c/span\u003e, alpha = \u003cspan class=\"number\"\u003e0.15\u003c/span\u003e, num_iter = \u003cspan class=\"number\"\u003e30\u003c/span\u003e\u003c/span\u003e):\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    vtx_map = \u003cspan class=\"built_in\"\u003edict\u003c/span\u003e()\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    edge_list = \u003cspan class=\"built_in\"\u003elist\u003c/span\u003e()\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    readTable(fname, vtx_map, edge_list)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"keyword\"\u003ereturn\u003c/span\u003e calcPagerank(alpha, num_iter, vtx_map, edge_list)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"keyword\"\u003eif\u003c/span\u003e __name__ == \u003cspan class=\"string\"\u003e\u0026#39;__main__\u0026#39;\u003c/span\u003e:\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"built_in\"\u003eprint\u003c/span\u003e doCalcPageRank()\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n    \u003c/div\u003e",
  "Date": "2017-04-04T07:13:11Z",
  "Author": "Liam Huang"
}