{
  "Source": "liam.page",
  "Title": "最佳搭档：利用 SSH 反向隧道和本地转发工具加速内网服务器的外网访问",
  "Link": "https://liam.page/2020/07/10/Making-Network-Faster-by-SSH-Reverse-Tunel/",
  "Content": "\u003cdiv class=\"post-body\" itemprop=\"articleBody\"\u003e\n\n      \n        \u003cp\u003e公司内网服务器（称作 \u003ccode\u003ehostA\u003c/code\u003e）访问外网速度特别慢，以至于使用 Linuxbrew 安装工具特别费事。经测试，下载同样的内容，处于办公网络的本机（称作 \u003ccode\u003ehostB\u003c/code\u003e）下载很快。遂起了代理加速的心思。\u003c/p\u003e\n\u003cp\u003e以下是解法。\u003c/p\u003e\n\u003cspan id=\"more\"\u003e\u003c/span\u003e\n\n\u003ch2 id=\"本机本地转发\"\u003e\u003ca href=\"#本机本地转发\" class=\"headerlink\" title=\"本机本地转发\"\u003e\u003c/a\u003e本机本地转发\u003c/h2\u003e\u003cp\u003e首先，我们需要在 \u003ccode\u003ehostB\u003c/code\u003e 上起一个进程，搭建一个本地的 socks5 代理。它将某个端口（记为 \u003ccode\u003eportB\u003c/code\u003e）收到的请求，全部转发到外网。\u003c/p\u003e\n\u003cp\u003e类似的工具有很多，这里不做展开。\u003c/p\u003e\n\u003ch2 id=\"反向隧道\"\u003e\u003ca href=\"#反向隧道\" class=\"headerlink\" title=\"反向隧道\"\u003e\u003c/a\u003e反向隧道\u003c/h2\u003e\u003cp\u003e\u003ca href=\"/2018/04/11/break-firewall-by-the-use-of-SSH-tunnel/\"\u003e前作\u003c/a\u003e中，我们介绍了 SSH 隧道功能。此处，我们可以从 \u003ccode\u003ehostB\u003c/code\u003e 向 \u003ccode\u003ehostA\u003c/code\u003e 建立一个反向隧道，并在 \u003ccode\u003ehostA\u003c/code\u003e 上绑定端口 \u003ccode\u003eportA\u003c/code\u003e。于是，发往 \u003ccode\u003ehostA:portA\u003c/code\u003e 的请求，都会经由 SSH 反向隧道转发到 \u003ccode\u003ehostB:portB\u003c/code\u003e，再发到外网。我们需要在 \u003ccode\u003ehostB\u003c/code\u003e 上执行：\u003c/p\u003e\n\u003cfigure class=\"highlight bash\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003essh -fTCNR localhost:portA:localhost:portB hostA\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e至此，大功告成~\u003c/p\u003e\n\n    \u003c/div\u003e",
  "Date": "2020-07-10T08:47:39Z",
  "Author": "Liam Huang"
}