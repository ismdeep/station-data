{
  "Source": "liam.page",
  "Title": "最佳搭档：利用 find 和 crontab 命令清理过期文件",
  "Link": "https://liam.page/2016/06/19/best-match-using-find-and-crontab-to-removed-outdated-files/",
  "Content": "\u003cdiv class=\"post-body\" itemprop=\"articleBody\"\u003e\n\n      \n        \u003cp\u003e不论是生活中还是工作中，总有一些文件会不断产生。这些文件可能是日志文件，也可以是系统核心转储文件。如若不加清理，查询特定文件就会非常困难，抑或是过多的核心转储文件占满了磁盘空间，影响正常程序执行。\u003c/p\u003e\n\u003cp\u003e为此，我们需要有一个简单高效的方式，定期清理过期文件。\u003c/p\u003e\n\u003cspan id=\"more\"\u003e\u003c/span\u003e\n\n\u003ch2 id=\"crontab-在时间的八音盒上翩翩起舞\"\u003e\u003ca href=\"#crontab-在时间的八音盒上翩翩起舞\" class=\"headerlink\" title=\"crontab: 在时间的八音盒上翩翩起舞\"\u003e\u003c/a\u003e\u003ccode\u003ecrontab\u003c/code\u003e: 在时间的八音盒上翩翩起舞\u003c/h2\u003e\u003cp\u003e\u003ccode\u003ecrontab\u003c/code\u003e 命令是 Linux 中用来设定重复执行命令或脚本的工具。它能够在指定的时间段内，按照需求以某一时间间隔执行命令或脚本。\u003c/p\u003e\n\u003ch3 id=\"crontab-的基本用法\"\u003e\u003ca href=\"#crontab-的基本用法\" class=\"headerlink\" title=\"crontab 的基本用法\"\u003e\u003c/a\u003e\u003ccode\u003ecrontab\u003c/code\u003e 的基本用法\u003c/h3\u003e\u003cfigure class=\"highlight bash\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003ecrontab [-u \u0026lt;user\u0026gt;] [-e|-l|-r]\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003ecrontab \u0026lt;filename\u0026gt;\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e\u003ccode\u003ecrontab \u0026lt;filename\u0026gt;\u003c/code\u003e 可以读入一个以 \u003ccode\u003ecrontab\u003c/code\u003e 语法书写的文件，并依照文件内的指示执行定时任务。与此同时，\u003ccode\u003ecrontab -l\u003c/code\u003e 能够在标准输出上列出当前用户所有的定时任务情况。因此，我们可以用 \u003ccode\u003ecrontab -l \u0026gt; \u0026lt;filename\u0026gt;\u003c/code\u003e 来保存当前 \u003ccode\u003ecrontab\u003c/code\u003e 的状况，在有需要的时候（比如误删除）用 \u003ccode\u003ecrontab \u0026lt;filename\u0026gt;\u003c/code\u003e 读入恢复。\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003ecrontab -e\u003c/code\u003e 则会启动系统默认的编辑器。这个编辑器由系统环境变量 \u003ccode\u003eEDITOR\u003c/code\u003e 指定；例如 \u003ccode\u003eexport EDITOR=vi\u003c/code\u003e，则 \u003ccode\u003ecrontab -e\u003c/code\u003e 会启动 \u003ccode\u003evi\u003c/code\u003e 来编辑当前用户的 \u003ccode\u003ecrontab\u003c/code\u003e 定时任务文件。\u003ccode\u003ecrontab -r\u003c/code\u003e 则会删除用户的所有 \u003ccode\u003ecrontab\u003c/code\u003e 定时任务。\u003c/p\u003e\n\u003cp\u003e用来指定用户的 \u003ccode\u003e-u \u0026lt;user\u0026gt;\u003c/code\u003e 选项则会改变 \u003ccode\u003e-e\u003c/code\u003e/\u003ccode\u003e-l\u003c/code\u003e/\u003ccode\u003e-r\u003c/code\u003e 等选项的行为。如果不通过 \u003ccode\u003e-u\u003c/code\u003e 指定用户，则默认的操作都是针对当前用户的；反之，则针对指定的用户。例如 \u003ccode\u003ecrontab -u Liam -r\u003c/code\u003e 则会删除用户 \u003ccode\u003eLiam\u003c/code\u003e 的 \u003ccode\u003ecrontab\u003c/code\u003e 定时任务——当然，你需要有足够的权限这么做。\u003c/p\u003e\n\u003ch3 id=\"crontab-文件的格式\"\u003e\u003ca href=\"#crontab-文件的格式\" class=\"headerlink\" title=\"crontab 文件的格式\"\u003e\u003c/a\u003e\u003ccode\u003ecrontab\u003c/code\u003e 文件的格式\u003c/h3\u003e\u003cp\u003e不管是用 \u003ccode\u003ecrontab \u0026lt;filename\u0026gt;\u003c/code\u003e 从文件读入定时任务，还是用 \u003ccode\u003ecrontab -e\u003c/code\u003e 编辑定时任务，我们都会接触到 \u003ccode\u003ecrontab\u003c/code\u003e 格式的命令。\u003ccode\u003ecrontab\u003c/code\u003e 的命令格式如下：\u003c/p\u003e\n\u003cp\u003e\u003cimg data-src=\"/uploads/images/Linux/crontab_cheatsheet.png\"/\u003e\u003c/p\u003e\n\u003cp\u003e从上图我们可以看出：\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e一条 \u003ccode\u003ecrontab\u003c/code\u003e 命令分成六列，写在一行内；\u003c/li\u003e\n\u003cli\u003e前 5 列用于定时，指明什么时候开始执行；\u003c/li\u003e\n\u003cli\u003e第 6 列用于指定需要定时执行的命令或脚本；\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e此外，和 Shell 脚本一样，在 \u003ccode\u003ecrontab\u003c/code\u003e 文件中，我们也可以用 \u003ccode\u003e#\u003c/code\u003e 来表示注释。\u003c/p\u003e\n\u003ch3 id=\"花式定时\"\u003e\u003ca href=\"#花式定时\" class=\"headerlink\" title=\"花式定时\"\u003e\u003c/a\u003e花式定时\u003c/h3\u003e\u003cp\u003e在 \u003ccode\u003ecrontab\u003c/code\u003e 命令中用于定时的前 5 列中，支持以下符号，用于「花式定时」：\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e星花（\u003ccode\u003e*\u003c/code\u003e）：代表所有可能的值；\u003c/li\u003e\n\u003cli\u003e逗号（\u003ccode\u003e,\u003c/code\u003e）：用逗号隔开同一字段的不同范围；\u003c/li\u003e\n\u003cli\u003e连字符（\u003ccode\u003e-\u003c/code\u003e）：用连字符连接两个整数，表示整数范围；\u003c/li\u003e\n\u003cli\u003e斜线（\u003ccode\u003e/\u003c/code\u003e)：实际上是除法斜线，用来指定时间间隔频率。\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"一些例子\"\u003e\u003ca href=\"#一些例子\" class=\"headerlink\" title=\"一些例子\"\u003e\u003c/a\u003e一些例子\u003c/h3\u003e\u003cp\u003e有了这些知识，我们就可以看一些实例了。\u003c/p\u003e\n\u003cfigure class=\"highlight bash\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e8\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e9\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e10\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"comment\"\u003e# 每分钟执行一次\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e* * * * * \u003cspan class=\"built_in\"\u003ecommand\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"comment\"\u003e# 每 5 分钟执行一次\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e*/5 * * * * \u003cspan class=\"built_in\"\u003ecommand\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"comment\"\u003e# 每个小时的 15 分和 45 分执行一次\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e15,45 * * * * \u003cspan class=\"built_in\"\u003ecommand\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"comment\"\u003e# 晚上 20:00 -- 20:15 每分钟执行一次\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e0-15 20 * * * \u003cspan class=\"built_in\"\u003ecommand\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"comment\"\u003e# 每周一上午 10 点执行一次\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e0 10 * * 1 \u003cspan class=\"built_in\"\u003ecommand\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003ch2 id=\"find-——-找些乐子\"\u003e\u003ca href=\"#find-——-找些乐子\" class=\"headerlink\" title=\"find —— 找些乐子\"\u003e\u003c/a\u003e\u003ccode\u003efind\u003c/code\u003e —— 找些乐子\u003c/h2\u003e\u003cp\u003e\u003ccode\u003eman find\u003c/code\u003e 给出的 \u003ccode\u003efind\u003c/code\u003e 命令的一般形式是：\u003c/p\u003e\n\u003cfigure class=\"highlight bash\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003efind [-H] [-L] [-P] [-D debugopts] [-Olevel] path ... [expression]\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e其中 \u003ccode\u003e[-H] [-L] [-P] [-D debugopts] [-Olevel]\u003c/code\u003e 很少会用到。因此，\u003ccode\u003efind\u003c/code\u003e 命令的一般形式可以简化为 \u003ccode\u003efind path ... [expression]\u003c/code\u003e；亦即，在一些路径（默认递归地包含子路径）中找到合适的文件，然后根据 \u003ccode\u003eexpression\u003c/code\u003e 执行相应动作。\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003epath ...\u003c/code\u003e: \u003ccode\u003efind\u003c/code\u003e 命令查找的路径\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eexpression\u003c/code\u003e: 具体形式是 \u003ccode\u003e-parameters [-exec -ok]\u003c/code\u003e\u003cul\u003e\n\u003cli\u003e\u003ccode\u003e-parameters\u003c/code\u003e 有很多，待下一节具体介绍常用的参数\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003e-exec command {} \\;\u003c/code\u003e 执行一条 Shell 命令\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003e-ok command {} \\;\u003c/code\u003e 同 \u003ccode\u003e-exec\u003c/code\u003e 的作用，不过在执行每条命令前，都会提示用户确认\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"常用的参数\"\u003e\u003ca href=\"#常用的参数\" class=\"headerlink\" title=\"常用的参数\"\u003e\u003c/a\u003e常用的参数\u003c/h3\u003e\u003cul\u003e\n\u003cli\u003e\u003ccode\u003e-name\u003c/code\u003e: 按照文件名查找文件，接受通配符\u003cul\u003e\n\u003cli\u003e\u003ccode\u003efind . -name \u0026#34;*.cpp\u0026#34;\u003c/code\u003e: 在当前目录 (\u003ccode\u003e.\u003c/code\u003e) 及子目录下递归地查找所有后缀为 \u003ccode\u003e.cpp\u003c/code\u003e 的文件，并打印在标准输出中\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003e-perm\u003c/code\u003e: 按照文件权限查找文件\u003cul\u003e\n\u003cli\u003e\u003ccode\u003efind . -perm 755\u003c/code\u003e: 在当前目录 (\u003ccode\u003e.\u003c/code\u003e) 及子目录下递归地查找所有权限为 \u003ccode\u003e755\u003c/code\u003e 的文件（目录），并打印在标准输出中\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003efind . -perm 644 -name \u0026#34;*.cpp\u0026#34;\u003c/code\u003e: 在当前目录及子目录下 (\u003ccode\u003e.\u003c/code\u003e) 递归地查找所有权限为 \u003ccode\u003e644\u003c/code\u003e 的 \u003ccode\u003e.cpp\u003c/code\u003e 文件，并打印在标准输出中\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003e-group\u003c/code\u003e: 按照文件的所属组查找\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003e-user\u003c/code\u003e: 按照文件的所有者查找\u003cul\u003e\n\u003cli\u003e\u003ccode\u003efind . -user search\u003c/code\u003e: 在当前目录 (\u003ccode\u003e.\u003c/code\u003e) 及子目录下递归地查找所有 \u003ccode\u003esearch\u003c/code\u003e 账号所属的文件，并打印在标准输出中\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003e-atime\u003c/code\u003e, \u003ccode\u003e-mtime\u003c/code\u003e, \u003ccode\u003e-amin\u003c/code\u003e, \u003ccode\u003e-mmin\u003c/code\u003e: \u003ccode\u003ea\u003c/code\u003e 开头的表示「按照上次访问时间查找」，\u003ccode\u003em\u003c/code\u003e 开头的表示「按照上次修改时间查找」；\u003ccode\u003e-n\u003c/code\u003e 表示 \u003ccode\u003en\u003c/code\u003e 时间内，\u003ccode\u003e+n\u003c/code\u003e 表示 \u003ccode\u003en\u003c/code\u003e 时间以前\u003cul\u003e\n\u003cli\u003e\u003ccode\u003efind . -atime +7\u003c/code\u003e: 在当前目录 (\u003ccode\u003e.\u003c/code\u003e) 及子目录下递归地查找所有上次访问在 7 天以前的文件，并打印在标准输出中\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003efind . -mmin -10\u003c/code\u003e: 在当前目录 (\u003ccode\u003e.\u003c/code\u003e) 及子目录下递归地查找所有上次修改在 10 分钟以内的文件，并打印在标准输出中\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003e-newer file1 ! file2\u003c/code\u003e: 查找比 \u003ccode\u003efile1\u003c/code\u003e 新但是比 \u003ccode\u003efile2\u003c/code\u003e 旧的文件\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003e-type [b|d|c|p|l|f]\u003c/code\u003e: 按照文件类型查找\u003cul\u003e\n\u003cli\u003e\u003ccode\u003eb\u003c/code\u003e: 块设备文件\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003ed\u003c/code\u003e: 目录\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003ec\u003c/code\u003e: 字符设备文件\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003ep\u003c/code\u003e: 管道文件\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003el\u003c/code\u003e: 符号链接文件\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003ef\u003c/code\u003e: 普通文件\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003e-follow\u003c/code\u003e: 如果 \u003ccode\u003efind\u003c/code\u003e 命令遇到符号链接文件，就跟踪至链接所指向的文件\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003e-delete\u003c/code\u003e: 删除查找到的文件或目录\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"定期清理\"\u003e\u003ca href=\"#定期清理\" class=\"headerlink\" title=\"定期清理\"\u003e\u003c/a\u003e定期清理\u003c/h2\u003e\u003cp\u003e至此，定期清理无用的文件就变得很简单了。我们只需要在 \u003ccode\u003ecrontab\u003c/code\u003e 里结合 \u003ccode\u003efind\u003c/code\u003e 命令的 \u003ccode\u003e-delete\u003c/code\u003e 选项即可。\u003c/p\u003e\n\u003cfigure class=\"highlight bash\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e0 8 * * * find /home/s/coredump -user search -\u003cspan class=\"built_in\"\u003etype\u003c/span\u003e f -mtime +7 -delete\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e这里，我们在每天早上 8 点整执行 \u003ccode\u003efind\u003c/code\u003e 命令；该命令会在 \u003ccode\u003e/home/s/coredump\u003c/code\u003e 目录下寻找 \u003ccode\u003esearch\u003c/code\u003e 用户创建的普通 7 天前的文件，然后删除掉。\u003c/p\u003e\n\n    \u003c/div\u003e",
  "Date": "2016-06-19T14:39:33Z",
  "Author": "Liam Huang"
}