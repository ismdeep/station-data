{
  "Source": "liam.page",
  "Title": "PIL 简明教程 - 在现有的图片上涂涂改改",
  "Link": "https://liam.page/2015/05/05/pil-tutorial-imagedraw-and-imagefont/",
  "Content": "\u003cdiv class=\"post-body\" itemprop=\"articleBody\"\u003e\n\n      \n        \u003cp\u003e这是系列文章的第二篇，参见\u003ca href=\"/series\"\u003e系列\u003c/a\u003e中的相关内容。\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"/2015/04/22/pil-tutorial-basic-usage/\"\u003e上一篇文章\u003c/a\u003e 介绍了 PIL 的基本情况，以及 \u003ccode\u003eImage\u003c/code\u003e 模块的基本用法。这篇文章，我们讨论一下 \u003ccode\u003eImageDraw\u003c/code\u003e 和 \u003ccode\u003eImageFont\u003c/code\u003e 两个模块的基本用法，说说如何用 PIL 在现有的图片上涂涂改改。\u003c/p\u003e\n\u003cspan id=\"more\"\u003e\u003c/span\u003e\n\n\u003ch2 id=\"ImageDraw-模块\"\u003e\u003ca href=\"#ImageDraw-模块\" class=\"headerlink\" title=\"ImageDraw 模块\"\u003e\u003c/a\u003e\u003ccode\u003eImageDraw\u003c/code\u003e 模块\u003c/h2\u003e\u003cp\u003e\u003ccode\u003eImageDraw\u003c/code\u003e 模块提供了 \u003ccode\u003eDraw\u003c/code\u003e 类，它能在 \u003ccode\u003eImage\u003c/code\u003e 实例上进行简单的 2D 绘图。当然复杂的绘图动作是由简单的动作合成而得的，理论上这些动作 \u003ccode\u003eImageDraw\u003c/code\u003e 模块也能做，只是相对复杂。如果你想在 \u003ccode\u003eImage\u003c/code\u003e 实例上做复杂的绘图动作，最好是自行对 \u003ccode\u003eImageDraw\u003c/code\u003e 模块提供的各种方法做一些封装。\u003c/p\u003e\n\u003ch3 id=\"创建一个-Draw-类的实例\"\u003e\u003ca href=\"#创建一个-Draw-类的实例\" class=\"headerlink\" title=\"创建一个 Draw 类的实例\"\u003e\u003c/a\u003e创建一个 \u003ccode\u003eDraw\u003c/code\u003e 类的实例\u003c/h3\u003e\u003cp\u003e要在 \u003ccode\u003eImage\u003c/code\u003e 实例上绘制新的图样，首先要做的就是创建一个 \u003ccode\u003eDraw\u003c/code\u003e 类的实例。\u003c/p\u003e\n\u003cfigure class=\"highlight python\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"keyword\"\u003efrom\u003c/span\u003e PIL \u003cspan class=\"keyword\"\u003eimport\u003c/span\u003e Image, ImageDraw\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003esourceFileName = \u003cspan class=\"string\"\u003e\u0026#34;source.png\u0026#34;\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eavatar         = Image.\u003cspan class=\"built_in\"\u003eopen\u003c/span\u003e(sourceFileName)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003edrawAvatar     = ImageDraw.Draw(avatar)\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e代码前三行我们已经见过，唯一的差别在于 \u003ccode\u003eimport\u003c/code\u003e 之后除了我们已经见过的 \u003ccode\u003eImage\u003c/code\u003e 模块，还有今次我们要使用的 \u003ccode\u003eImageDraw\u003c/code\u003e 模块。\u003c/p\u003e\n\u003ch3 id=\"从画两条平行线开始\"\u003e\u003ca href=\"#从画两条平行线开始\" class=\"headerlink\" title=\"从画两条平行线开始\"\u003e\u003c/a\u003e从画两条平行线开始\u003c/h3\u003e\u003cp\u003e\u003ccode\u003eDraw\u003c/code\u003e 类提供了 \u003ccode\u003eline(xy, options)\u003c/code\u003e 方法绘制直线。\u003c/p\u003e\n\u003cp\u003e其中 \u003ccode\u003exy\u003c/code\u003e 表示坐标列表，其形式可以是\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003e[(x1, y1), (x2, y2), ...]\u003c/code\u003e - 包含若干个元组的列表\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003e[x1, y1, x2, y2, ...]\u003c/code\u003e - 按照顺序包含坐标信息的列表\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003e[x1, y1, (x2, y2), ...]\u003c/code\u003e - 以上两种情况的混合\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003e((x1, y1), (x2, y2), ...)\u003c/code\u003e - 包含若干个元组的元组\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003e(x1, y1, x2, y2, ...)\u003c/code\u003e - 按照顺序包含坐标信息的元组\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003e(x1, y1, (x2, y2), ...)\u003c/code\u003e - 以上两种情况的混合\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e\u003ccode\u003eoptions\u003c/code\u003e 中可用的选项有\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003efill = (R, G, B)\u003c/code\u003e - 用于指定线条的颜色，其中 \u003ccode\u003eR\u003c/code\u003e、\u003ccode\u003eG\u003c/code\u003e、\u003ccode\u003eB\u003c/code\u003e 都是 0 -- 255 的整数\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003ewidth = integer\u003c/code\u003e - 用于指定线条的宽度，单位是像素\u003c/li\u003e\n\u003c/ul\u003e\n\u003cfigure class=\"highlight python\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e8\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e9\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e10\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e11\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e12\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e13\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e14\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"keyword\"\u003efrom\u003c/span\u003e PIL \u003cspan class=\"keyword\"\u003eimport\u003c/span\u003e Image, ImageDraw\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003esourceFileName = \u003cspan class=\"string\"\u003e\u0026#34;source.png\u0026#34;\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eavatar         = Image.\u003cspan class=\"built_in\"\u003eopen\u003c/span\u003e(sourceFileName)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003edrawAvatar     = ImageDraw.Draw(avatar)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003exSize, ySize = avatar.size\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003edrawAvatar.line([\u003cspan class=\"number\"\u003e0\u003c/span\u003e, \u003cspan class=\"number\"\u003e0.33\u003c/span\u003e * ySize, xSize, \u003cspan class=\"number\"\u003e0.33\u003c/span\u003e * ySize],\\\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    fill = (\u003cspan class=\"number\"\u003e255\u003c/span\u003e, \u003cspan class=\"number\"\u003e100\u003c/span\u003e, \u003cspan class=\"number\"\u003e0\u003c/span\u003e), width = \u003cspan class=\"number\"\u003e3\u003c/span\u003e)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003edrawAvatar.line([\u003cspan class=\"number\"\u003e0\u003c/span\u003e, \u003cspan class=\"number\"\u003e0.67\u003c/span\u003e * ySize, xSize, \u003cspan class=\"number\"\u003e0.67\u003c/span\u003e * ySize],\\\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    fill = (\u003cspan class=\"number\"\u003e255\u003c/span\u003e, \u003cspan class=\"number\"\u003e0\u003c/span\u003e, \u003cspan class=\"number\"\u003e0\u003c/span\u003e), width = \u003cspan class=\"number\"\u003e3\u003c/span\u003e)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"keyword\"\u003edel\u003c/span\u003e drawAvatar\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eavatar.show()\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e这里我们在图片的两个三等分位置分别画了一条宽度为 3 像素的平行线。一条颜色为 (255, 100, 0)，另一条则是 (255, 0, 0)。\u003c/p\u003e\n\u003cp\u003e值得注意的是代码的第 14 行，我们直接用 \u003ccode\u003eavatar.show()\u003c/code\u003e 来展现绘图的结果。可见**\u003ccode\u003eDraw\u003c/code\u003e 类的实例将直接在 \u003ccode\u003eImage\u003c/code\u003e 实例上进行操作**。\u003c/p\u003e\n\u003cp\u003e\u003cimg data-src=\"//liam.page/attachment/attachment/images/Python/pil-tutorial/draw-line.png\" alt=\"line 方法效果示例 \"/\u003e\u003c/p\u003e\n\u003ch3 id=\"画一段弧\"\u003e\u003ca href=\"#画一段弧\" class=\"headerlink\" title=\"画一段弧\"\u003e\u003c/a\u003e画一段弧\u003c/h3\u003e\u003cp\u003e\u003ccode\u003eDraw\u003c/code\u003e 类也提供了 \u003ccode\u003earc(xy, start, end, options)\u003c/code\u003e 方法来绘制弧。\u003c/p\u003e\n\u003cp\u003e这里的 \u003ccode\u003exy\u003c/code\u003e 是一个长度为 4 的列表，用来表示一个 bounding box（参考上一篇文章）。\u003ccode\u003estart\u003c/code\u003e 和 \u003ccode\u003eend\u003c/code\u003e 则是弧的起止角度，单位是 °。其中水平向右的方向为 0°，竖直向下的方向为 90°，水平向左的方向为 180°，竖直向上的方向为 270°。\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003eoptions\u003c/code\u003e 中可用的选项有\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003efill = (R, G, B)\u003c/code\u003e - 用于指定线条的颜色，其中 \u003ccode\u003eR\u003c/code\u003e、\u003ccode\u003eG\u003c/code\u003e、\u003ccode\u003eB\u003c/code\u003e 都是 0 -- 255 的整数\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e\u003ccode\u003earc\u003c/code\u003e 方法将在内切于 bounding box 的椭圆中，按照给定的起止角度切下一段弧，并绘制于 \u003ccode\u003eImage\u003c/code\u003e 示例之上。\u003c/p\u003e\n\u003cfigure class=\"highlight python\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e8\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e9\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e10\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e11\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e12\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"keyword\"\u003efrom\u003c/span\u003e PIL \u003cspan class=\"keyword\"\u003eimport\u003c/span\u003e Image, ImageDraw\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003esourceFileName = \u003cspan class=\"string\"\u003e\u0026#34;source.png\u0026#34;\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eavatar         = Image.\u003cspan class=\"built_in\"\u003eopen\u003c/span\u003e(sourceFileName)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003edrawAvatar     = ImageDraw.Draw(avatar)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003exSize, ySize = avatar.size\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003edrawAvatar.arc([\u003cspan class=\"number\"\u003e0\u003c/span\u003e, \u003cspan class=\"number\"\u003e0\u003c/span\u003e, xSize, ySize], \u003cspan class=\"number\"\u003e0\u003c/span\u003e, \u003cspan class=\"number\"\u003e90\u003c/span\u003e,\\\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    fill = (\u003cspan class=\"number\"\u003e255\u003c/span\u003e, \u003cspan class=\"number\"\u003e100\u003c/span\u003e, \u003cspan class=\"number\"\u003e255\u003c/span\u003e))\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"keyword\"\u003edel\u003c/span\u003e drawAvatar\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eavatar.show()\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e\u003cimg data-src=\"//liam.page/attachment/attachment/images/Python/pil-tutorial/draw-arc.png\" alt=\"arc 方法效果示例 \"/\u003e\u003c/p\u003e\n\u003ch3 id=\"在图片上写字\"\u003e\u003ca href=\"#在图片上写字\" class=\"headerlink\" title=\"在图片上写字\"\u003e\u003c/a\u003e在图片上写字\u003c/h3\u003e\u003cp\u003e\u003ccode\u003eDraw\u003c/code\u003e 类提供了 \u003ccode\u003etext(position, string, options)\u003c/code\u003e 方法，该方法可以在 \u003ccode\u003eImage\u003c/code\u003e 实例上写字。\u003c/p\u003e\n\u003cp\u003e需要说明的是，\u003ccode\u003eposition\u003c/code\u003e 指定的是文本左上角的顶点，而不是文本中心。这里可用的 \u003ccode\u003eoptions\u003c/code\u003e 有\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003efont = ImageFont instance\u003c/code\u003e - 指定字体，接受一个 \u003ccode\u003eImageFont\u003c/code\u003e 的实例\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003efill = (R, G, B)\u003c/code\u003e - 用于指定线条的颜色，其中 \u003ccode\u003eR\u003c/code\u003e、\u003ccode\u003eG\u003c/code\u003e、\u003ccode\u003eB\u003c/code\u003e 都是 0 -- 255 的整数\u003c/li\u003e\n\u003c/ul\u003e\n\u003cfigure class=\"highlight python\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e8\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e9\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e10\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e11\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e12\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"keyword\"\u003efrom\u003c/span\u003e PIL \u003cspan class=\"keyword\"\u003eimport\u003c/span\u003e Image, ImageDraw\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003esourceFileName = \u003cspan class=\"string\"\u003e\u0026#34;source.png\u0026#34;\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eavatar         = Image.\u003cspan class=\"built_in\"\u003eopen\u003c/span\u003e(sourceFileName)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003edrawAvatar     = ImageDraw.Draw(avatar)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003exSize, ySize = avatar.size\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003edrawAvatar.text([\u003cspan class=\"number\"\u003e0.9\u003c/span\u003e * xSize, \u003cspan class=\"number\"\u003e0.1\u003c/span\u003e * ySize - drawAvatar.textsize(\u003cspan class=\"string\"\u003e\u0026#34;3\u0026#34;\u003c/span\u003e)[\u003cspan class=\"number\"\u003e1\u003c/span\u003e]],\\\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"string\"\u003e\u0026#34;3\u0026#34;\u003c/span\u003e, fill = (\u003cspan class=\"number\"\u003e128\u003c/span\u003e, \u003cspan class=\"number\"\u003e0\u003c/span\u003e, \u003cspan class=\"number\"\u003e128\u003c/span\u003e))\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"keyword\"\u003edel\u003c/span\u003e drawAvatar\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eavatar.show()\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e\u003cimg data-src=\"//liam.page/attachment/attachment/images/Python/pil-tutorial/draw-text.png\" alt=\"text 方法效果示例 \"/\u003e\u003c/p\u003e\n\u003cp\u003e由于没有用 \u003ccode\u003efont\u003c/code\u003e 选项指定字体，这里使用了 \u003ccode\u003eImageDraw\u003c/code\u003e 的默认字体。不难发现，相对图片，字体太小了。为了调整字体，我们需要借助 \u003ccode\u003eImageFont\u003c/code\u003e 模块。\u003c/p\u003e\n\u003ch2 id=\"ImageFont-模块\"\u003e\u003ca href=\"#ImageFont-模块\" class=\"headerlink\" title=\"ImageFont 模块\"\u003e\u003c/a\u003e\u003ccode\u003eImageFont\u003c/code\u003e 模块\u003c/h2\u003e\u003cp\u003e\u003ccode\u003eImageFont\u003c/code\u003e 模块很简单，它定义了一个同名的类。\u003ccode\u003eImageFont\u003c/code\u003e 类的实例可以传给 \u003ccode\u003eImageDraw\u003c/code\u003e 中 \u003ccode\u003etext\u003c/code\u003e 方法的 \u003ccode\u003efont\u003c/code\u003e 的参数，起到字体选择的作用。\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003eImageFont\u003c/code\u003e 模块中的 \u003ccode\u003eload\u003c/code\u003e 函数可以加载一个 Image 格式的字体，并返回 \u003ccode\u003eImageFont\u003c/code\u003e 实例；其中的 \u003ccode\u003etruetype(fontfile, fontsize)\u003c/code\u003e 函数则可以加载 TrueType 或 OpenType 格式的字体，并返回 \u003ccode\u003eImageFont\u003c/code\u003e 参数。不过 \u003ccode\u003etruetype\u003c/code\u003e 函数需要额外安装 \u003ccode\u003e_imagingft\u003c/code\u003e 模块。\u003c/p\u003e\n\u003cp\u003e配置好之后，我们可以对上一节末尾的代码稍作修改：\u003c/p\u003e\n\u003cfigure class=\"highlight python\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e8\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e9\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e10\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e11\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e12\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e13\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e14\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e15\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e16\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"keyword\"\u003efrom\u003c/span\u003e PIL \u003cspan class=\"keyword\"\u003eimport\u003c/span\u003e Image, ImageDraw, ImageFont\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003esourceFileName = \u003cspan class=\"string\"\u003e\u0026#34;source.png\u0026#34;\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eavatar         = Image.\u003cspan class=\"built_in\"\u003eopen\u003c/span\u003e(sourceFileName)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003edrawAvatar     = ImageDraw.Draw(avatar)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003exSize, ySize = avatar.size\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003efontSize     = \u003cspan class=\"built_in\"\u003emin\u003c/span\u003e(xSize, ySize) // \u003cspan class=\"number\"\u003e11\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003emyFont       = ImageFont.truetype(\u003cspan class=\"string\"\u003e\u0026#34;/Library/Fonts/OsakaMono.ttf\u0026#34;\u003c/span\u003e, fontSize)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003edrawAvatar.text([\u003cspan class=\"number\"\u003e0.9\u003c/span\u003e * xSize, \u003cspan class=\"number\"\u003e0.1\u003c/span\u003e * ySize - fontSize],\\\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"string\"\u003e\u0026#34;3\u0026#34;\u003c/span\u003e, fill = (\u003cspan class=\"number\"\u003e255\u003c/span\u003e, \u003cspan class=\"number\"\u003e0\u003c/span\u003e, \u003cspan class=\"number\"\u003e0\u003c/span\u003e), font = myFont)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"keyword\"\u003edel\u003c/span\u003e drawAvatar\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eavatar.show()\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e这里我们引入了 \u003ccode\u003eImageFont\u003c/code\u003e 模块，并且创建了 \u003ccode\u003emyFont\u003c/code\u003e 实例。创建实例的时候，传入的字体尺寸由图片大小决定。最后在图片上写字的位置也与字体大小有关。\u003c/p\u003e\n\u003cp\u003e这样以来，我们就在图片的右上角写了一个红色的数字，就好像微信未读消息提示的那种效果。\u003c/p\u003e\n\u003cp\u003e\u003cimg data-src=\"//liam.page/attachment/attachment/images/Python/pil-tutorial/draw-text-font.png\" alt=\"引入 font 选项的 text 方法效果示例 \"/\u003e\u003c/p\u003e\n\u003ch2 id=\"小结\"\u003e\u003ca href=\"#小结\" class=\"headerlink\" title=\"小结\"\u003e\u003c/a\u003e小结\u003c/h2\u003e\u003cp\u003e\u003ccode\u003eImageDraw\u003c/code\u003e 模块还有许多其他的功能，比如绘制椭圆、多边形、矩形等。限于篇幅，这里就不一一介绍了。感兴趣的读者可以参看官方文档：\u003c/p\u003e\n\u003cp\u003e\u003ca target=\"_blank\" rel=\"noopener\" href=\"http://effbot.org/imagingbook/imagedraw.htm#methods\"\u003ehttp://effbot.org/imagingbook/imagedraw.htm#methods\u003c/a\u003e\u003c/p\u003e\n\n    \u003c/div\u003e",
  "Date": "2015-05-04T16:15:06Z",
  "Author": "Liam Huang"
}