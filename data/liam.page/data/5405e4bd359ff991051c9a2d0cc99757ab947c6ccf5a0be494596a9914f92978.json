{
  "Source": "liam.page",
  "Title": "在类模板定义的头文件之外实现类模板的成员函数",
  "Link": "https://liam.page/2017/02/19/implement-template-class-out-of-the-declaration-of-it/",
  "Content": "\u003cdiv class=\"post-body\" itemprop=\"articleBody\"\u003e\n\n      \n        \u003cp\u003e模板是一个 C++ 的高级特性，它使得程序员可以编写一个类或者函数，以相同的方式处理不同类型的数据。\u003c/p\u003e\n\u003cp\u003e前段时间在网上看到，有人认为类模板的成员函数必须实现在类模板的定义当中。这与我一直以来的认知是冲突的——我认为类模板和普通的类其实没有什么差别，除了它需要做额外的实例化之外。于是，我翻看了 C++ Primer，并检索了一些资料，就有了这篇文章。\u003c/p\u003e\n\u003cspan id=\"more\"\u003e\u003c/span\u003e\n\n\u003ch2 id=\"模板编译\"\u003e\u003ca href=\"#模板编译\" class=\"headerlink\" title=\"模板编译\"\u003e\u003c/a\u003e模板编译\u003c/h2\u003e\u003cp\u003eC++ 中的模板，是一个很有意思的概念。说它有意思，是因为这个模板的概念，和现实生活中的模板非常相似。因此，实际上只需要理解了现实生活中的模板，理解 C++ 中的模板的一些特殊性就容易了。\u003c/p\u003e\n\u003cp\u003e学生在写论文的时候，经常会去网上检索「LaTeX 论文模板」。下载下来之后，论文模板实际上只有一个简单的骨架。学生们需要在这个骨架的基础上，书写、构建自己的内容，才能变成实际的论文。这个过程，我们称其为「实例化」；这是一个从一般到特殊的过程——从一个一般化的模板，填入自己的内容，变成自己的论文。\u003c/p\u003e\n\u003cp\u003eC++ 中的模板也是一样。当程序员定义了一个模板后，它只是一个骨架。而只有当编译器知道用户需要传入的模板类型参数之后，编译器才会给出一个「有血有肉」的函数（对应函数模板）或者类（对应类模板）。因此，对于模板的编译，我们需要知道：\u003cstrong\u003e当我们使用模板时（具体来说，是实例化时），编译器才会根据模板的定义生成具体的代码\u003c/strong\u003e。这个特性，决定了涉及到模板的错误检测时机可能与一般的代码有所差异。\u003c/p\u003e\n\u003ch2 id=\"类模板的特殊性\"\u003e\u003ca href=\"#类模板的特殊性\" class=\"headerlink\" title=\"类模板的特殊性\"\u003e\u003c/a\u003e类模板的特殊性\u003c/h2\u003e\u003cp\u003e对于普通的类，当我们使用这个类时，编译器必须能够知道类的定义。但是，类中的成员函数，则不必在编译时就能被编译器读到——可以在链接的过程中，再确定具体的类成员函数。因此，一个通常的做法是：在头文件中进行类的定义和类成员函数的声明；而在源文件中实现类的成员函数。\u003c/p\u003e\n\u003cp\u003e对于类模板来说，当我们使用这个类模板时，会传入模板类型参数，而后编译器会根据类模板和传入的类型参数生成类对应的代码。因此，此时编译器必须能够知道类的定义，也必须知道类中成员函数的实现。类模板的这一特殊性，使得在处理类模板相应的实现的时候，通常会把类模板的定义和成员函数的实现都放在头文件里。\u003c/p\u003e\n\u003ch2 id=\"在类模板的定义之外实现成员函数\"\u003e\u003ca href=\"#在类模板的定义之外实现成员函数\" class=\"headerlink\" title=\"在类模板的定义之外实现成员函数\"\u003e\u003c/a\u003e在类模板的定义之外实现成员函数\u003c/h2\u003e\u003cp\u003e与普通的类相同，程序员既可以在类定义的内部实现成员函数，此时这些成员函数会被隐式地声明为 \u003ccode\u003einline\u003c/code\u003e 的；程序员也可以在类定义的外部实现成员函数。不过，对于后者，会有需要注意的地方。\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003e类模板的成员函数必然是函数模板\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003e这是因为，类模板的成员函数和类模板共享模板参数；并且，类模板的每个实例，其成员函数都是互相独立的。因此，哪怕类模板的某个成员函数，完全不会用到模板参数，它也必须是一个函数模板，并且模板参数和类模板的参数保持一致。\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003e在类模板实例化时，类模板的成员函数必须是可见的\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003e这个原因，在上一节已经讲过了。\u003c/p\u003e\n\u003ch2 id=\"两种做法\"\u003e\u003ca href=\"#两种做法\" class=\"headerlink\" title=\"两种做法\"\u003e\u003c/a\u003e两种做法\u003c/h2\u003e\u003cp\u003e至此，我们可以讨论一下，在类模板定义的头文件之外实现其成员函数，具体要怎么做了。一般来说，有两种做法。\u003c/p\u003e\n\u003ch3 id=\"在头文件末尾引入实现源文件\"\u003e\u003ca href=\"#在头文件末尾引入实现源文件\" class=\"headerlink\" title=\"在头文件末尾引入实现源文件\"\u003e\u003c/a\u003e在头文件末尾引入实现源文件\u003c/h3\u003e\u003cp\u003e这样一来，成员函数的实现会被 \u003ccode\u003e#include\u003c/code\u003e 包含进头文件，实际上在编译器看来和写在头文件内没有本质的差别了。\u003c/p\u003e\n\u003cfigure class=\"highlight cpp\"\u003e\u003cfigcaption\u003e\u003cspan\u003efoo.h\u003c/span\u003e\u003c/figcaption\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e8\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e9\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e10\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e#\u003cspan class=\"keyword\"\u003eifndef\u003c/span\u003e FOO_\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e#\u003cspan class=\"keyword\"\u003edefine\u003c/span\u003e FOO_\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"keyword\"\u003etemplate\u003c/span\u003e\u0026lt;\u003cspan class=\"keyword\"\u003etypename\u003c/span\u003e T\u0026gt;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"keyword\"\u003eclass\u003c/span\u003e \u003cspan class=\"title class_\"\u003eFoo\u003c/span\u003e {\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    T val;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"function\"\u003e\u003cspan class=\"type\"\u003evoid\u003c/span\u003e \u003cspan class=\"title\"\u003edoSomething\u003c/span\u003e\u003cspan class=\"params\"\u003e(T param)\u003c/span\u003e\u003c/span\u003e;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e};\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e#\u003cspan class=\"keyword\"\u003einclude\u003c/span\u003e \u003cspan class=\"string\"\u003e\u0026#34;foo.tpp\u0026#34;\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e#\u003cspan class=\"keyword\"\u003eendif\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cfigure class=\"highlight cpp\"\u003e\u003cfigcaption\u003e\u003cspan\u003efoo.tpp\u003c/span\u003e\u003c/figcaption\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"keyword\"\u003etemplate\u003c/span\u003e\u0026lt;\u003cspan class=\"keyword\"\u003etypename\u003c/span\u003e T\u0026gt;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"type\"\u003evoid\u003c/span\u003e Foo\u0026lt;T\u0026gt;::\u003cspan class=\"built_in\"\u003edoSomething\u003c/span\u003e(T param) {\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"comment\"\u003e// do something\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e}\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003ch3 id=\"在实现时显示地实例化类模板\"\u003e\u003ca href=\"#在实现时显示地实例化类模板\" class=\"headerlink\" title=\"在实现时显示地实例化类模板\"\u003e\u003c/a\u003e在实现时显示地实例化类模板\u003c/h3\u003e\u003cp\u003e这种情况下，只有实例化的版本才能被使用——因为只有它们真正被编译成了类代码；其它未实例化的版本，实际是没有定义的类。\u003c/p\u003e\n\u003cfigure class=\"highlight cpp\"\u003e\u003cfigcaption\u003e\u003cspan\u003ebar.h\u003c/span\u003e\u003c/figcaption\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e8\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e#\u003cspan class=\"keyword\"\u003eifndef\u003c/span\u003e BAR_\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e#\u003cspan class=\"keyword\"\u003edefine\u003c/span\u003e BAR_\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"keyword\"\u003etemplate\u003c/span\u003e\u0026lt;\u003cspan class=\"keyword\"\u003etypename\u003c/span\u003e T\u0026gt;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"keyword\"\u003eclass\u003c/span\u003e \u003cspan class=\"title class_\"\u003eBar\u003c/span\u003e {\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    T val;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"function\"\u003e\u003cspan class=\"type\"\u003evoid\u003c/span\u003e \u003cspan class=\"title\"\u003edoSomething\u003c/span\u003e\u003cspan class=\"params\"\u003e(T param)\u003c/span\u003e\u003c/span\u003e;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e};\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e#\u003cspan class=\"keyword\"\u003eendif\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cfigure class=\"highlight cpp\"\u003e\u003cfigcaption\u003e\u003cspan\u003ebar.cpp\u003c/span\u003e\u003c/figcaption\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e8\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e#\u003cspan class=\"keyword\"\u003einclude\u003c/span\u003e \u003cspan class=\"string\"\u003e\u0026#34;bar.h\u0026#34;\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"keyword\"\u003etemplate\u003c/span\u003e\u0026lt;\u003cspan class=\"keyword\"\u003etypename\u003c/span\u003e T\u0026gt;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"type\"\u003evoid\u003c/span\u003e Bar\u0026lt;T\u0026gt;::\u003cspan class=\"built_in\"\u003edoSomething\u003c/span\u003e(T param) {\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"comment\"\u003e// do something\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e}\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"keyword\"\u003etemplate\u003c/span\u003e \u003cspan class=\"keyword\"\u003eclass\u003c/span\u003e \u003cspan class=\"title class_\"\u003eBar\u003c/span\u003e\u0026lt;\u003cspan class=\"type\"\u003eint\u003c/span\u003e\u0026gt;;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"keyword\"\u003etemplate\u003c/span\u003e \u003cspan class=\"keyword\"\u003eclass\u003c/span\u003e \u003cspan class=\"title class_\"\u003eBar\u003c/span\u003e\u0026lt;\u003cspan class=\"type\"\u003edouble\u003c/span\u003e\u0026gt;;\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e当编译过 \u003ccode\u003ebar.cpp\u003c/code\u003e 之后，其它包含头文件 \u003ccode\u003ebar.h\u003c/code\u003e 并与其目标文件链接的源文件，就可以使用 \u003ccode\u003eBar\u0026lt;int\u0026gt;\u003c/code\u003e 和 \u003ccode\u003eBar\u0026lt;double\u0026gt;\u003c/code\u003e 这两个类了。而使用其它版本，则会报错。\u003c/p\u003e\n\n    \u003c/div\u003e",
  "Date": "2017-02-19T08:00:52Z",
  "Author": "Liam Huang"
}