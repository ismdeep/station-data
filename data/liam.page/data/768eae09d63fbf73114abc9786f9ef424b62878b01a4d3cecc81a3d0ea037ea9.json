{
  "Source": "liam.page",
  "Title": "动态规划与状态机：最大子序列和问题的扩展",
  "Link": "https://liam.page/2016/05/13/dynamic-programming-and-state-machine/",
  "Content": "\u003cdiv class=\"post-body\" itemprop=\"articleBody\"\u003e\n\n      \n        \u003cp\u003e\u003ca href=\"/2016/05/12/max-subsequence-sum-in-circular-list/\"\u003e前作\u003c/a\u003e以最大子序列和问题为起点，引出了动态规划思想的核心框架。今日恰逢构建之法群里，讨论起一个股票买卖问题，我用动态规划解决了。和邹欣老师的交流中，我进一步发现，引入状态机后，实际上股票买卖问题是最大子序列和问题的扩展。并且，这样的扩展可以更进一步地接近动态规划的核心，因此续作此篇，讨论一下动态规划与状态机。\u003c/p\u003e\n\u003cspan id=\"more\"\u003e\u003c/span\u003e\n\n\u003ch2 id=\"动态规划与状态机\"\u003e\u003ca href=\"#动态规划与状态机\" class=\"headerlink\" title=\"动态规划与状态机\"\u003e\u003c/a\u003e动态规划与状态机\u003c/h2\u003e\u003cp\u003e状态机是一种抽象的数学模型。它描述的是一些特定的状态，以及在这些状态之间转移的行为。如果状态的数量和转移方式都是有限的，那么这就是一个有限状态机。下图是一个有限状态机的示例：\u003c/p\u003e\n\u003cp\u003e\u003cimg data-src=\"/uploads/images/ACS/state_machine_demo.png\"/\u003e\u003c/p\u003e\n\u003cp\u003e图中，每一个圆圈代表一个状态；每一道箭头代表一次转移；箭头上的内容则是转移的条件。\u003c/p\u003e\n\u003cp\u003e在前作中，我们讨论了动态规划思想的核心框架，其中提到了阶段、状态和最优子结构等概念。仔细琢磨这些概念，我们就能发现，他们和状态机中的概念是能够对应起来的：\u003c/p\u003e\n\u003ctable\u003e\n\u003cthead\u003e\n\u003ctr\u003e\n\u003cth\u003e状态机\u003c/th\u003e\n\u003cth\u003e动态规划\u003c/th\u003e\n\u003c/tr\u003e\n\u003c/thead\u003e\n\u003ctbody\u003e\u003ctr\u003e\n\u003ctd\u003e阶段\u003c/td\u003e\n\u003ctd\u003e状态的集合\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e状态\u003c/td\u003e\n\u003ctd\u003e状态\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e转移\u003c/td\u003e\n\u003ctd\u003e从一个阶段到下一个阶段\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e转移条件\u003c/td\u003e\n\u003ctd\u003e最优子结构\u003c/td\u003e\n\u003c/tr\u003e\n\u003c/tbody\u003e\u003c/table\u003e\n\u003cp\u003e唯一的区别在于，动态规划只关注每个阶段的局部最优解；而状态机理论中，则没有这种倾向。\u003c/p\u003e\n\u003cp\u003e可见，动态规划思想，实际上是一种特殊的状态机罢了。\u003c/p\u003e\n\u003ch2 id=\"再探-Kadane-算法\"\u003e\u003ca href=\"#再探-Kadane-算法\" class=\"headerlink\" title=\"再探 Kadane 算法\"\u003e\u003c/a\u003e再探 Kadane 算法\u003c/h2\u003e\u003cp\u003e那么，在最大子序列和的 Kadane 算法中，蕴含了怎样的状态机呢？呃，好吧。这个状态机非常简单，所以可能很多人都意识不到。\u003c/p\u003e\n\u003cp\u003e\u003cimg data-src=\"/uploads/images/ACS/state_machine_kadane.png\"/\u003e\u003c/p\u003e\n\u003cp\u003e没错，就只有一个状态点而已。\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003estart：读入序列中第一个整数\u003c/li\u003e\n\u003cli\u003e$\\text{S}_a$：以当前整数为结尾的子序列之和\u003cul\u003e\n\u003cli\u003e最优解：上述和中最大的那个\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e转移：读入下一个整数\u003c/li\u003e\n\u003cli\u003e最优解的转移条件（最优子结构）：\u003ccode\u003elocal_max  = max (local_max + nums[i], nums[i])\u003c/code\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e不难发现，代码中的循环，实际上就是实现了这个状态机而已。\u003c/p\u003e\n\u003ch2 id=\"股票买卖问题\"\u003e\u003ca href=\"#股票买卖问题\" class=\"headerlink\" title=\"股票买卖问题\"\u003e\u003c/a\u003e股票买卖问题\u003c/h2\u003e\u003cp\u003e接下来我们看一个最大子序列和的升级版问题：股票买卖问题。\u003c/p\u003e\n\u003cp\u003e这个问题是说：\u003cbr/\u003e给定一个包含若干整数（正负不限）的序列，该序列中的数值对应过去某天的股票价格。假设只有一张股票可以买卖，你可以自由地选择在某天买入或卖出，但必须保证：先买入后卖出、卖出后至少一天不允许交易（cooldown day）、每天最多只能交易一次（要么买入、要么卖出、要么不交易）。现在请问，在买入卖出的过程中，你最多能挣取多大收益？\u003c/p\u003e\n\u003cp\u003e假设我们对如下序列做讨论：\u003c/p\u003e\n\u003cfigure class=\"highlight python\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003eprices = [\u003cspan class=\"number\"\u003e1\u003c/span\u003e, \u003cspan class=\"number\"\u003e2\u003c/span\u003e, \u003cspan class=\"number\"\u003e3\u003c/span\u003e, \u003cspan class=\"number\"\u003e1\u003c/span\u003e, \u003cspan class=\"number\"\u003e1\u003c/span\u003e, \u003cspan class=\"number\"\u003e2\u003c/span\u003e, \u003cspan class=\"number\"\u003e5\u003c/span\u003e, \u003cspan class=\"number\"\u003e3\u003c/span\u003e, \u003cspan class=\"number\"\u003e4\u003c/span\u003e, \u003cspan class=\"number\"\u003e2\u003c/span\u003e]\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e对于这个问题，我们可以定义如图所示的状态机：\u003c/p\u003e\n\u003cp\u003e\u003cimg data-src=\"/uploads/images/ACS/state_machine_stocks.png\"/\u003e\u003c/p\u003e\n\u003cp\u003e这个状态机是对问题的忠实还原：\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e两个 \u003ccode\u003estart\u003c/code\u003e 表示最开始你可以选择休息，也可以选择购买股票。\u003c/li\u003e\n\u003cli\u003e买入股票后，进入状态 $\\text{S}_1$，此时可以选择休息，或者卖出股票进入状态 $\\text{S}_2$。\u003c/li\u003e\n\u003cli\u003e卖出股票后，进入状态 $\\text{S}_2$，此时只能选择休息（cooldown day）进入状态 $\\text{S}_0$。\u003c/li\u003e\n\u003cli\u003e进入状态 $\\text{S}_0$ 后，可以选择继续休息，也可以选择买入股票。\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e我们要做的事情有两件：1. 定义初始状态；2. 找到在状态转移过程中，状态最优解之间的关系。\u003c/p\u003e\n\u003cp\u003e这很好做，因为我们有状态机作为参考。\u003c/p\u003e\n\u003cp\u003e对于 $\\text{S}_0$ 状态来说，如果第一天不做操作，那么收益为 0，即 \u003ccode\u003es0[0] = 0\u003c/code\u003e。接下来考虑，如果第 \u003ccode\u003ei\u003c/code\u003e 天进入了 $\\text{S}_0$ 状态，那么第 \u003ccode\u003ei - 1\u003c/code\u003e 天要么在 $\\text{S}_0$ 状态，要么在 $\\text{S}_2$ 状态。因此 \u003ccode\u003es0[i] = max (s0[i - 1], s2[i - 1])\u003c/code\u003e。\u003c/p\u003e\n\u003cp\u003e对于 $\\text{S}_1$ 状态来说，如果第一天买入股票，那么收益为 \u003ccode\u003e-prices[0]\u003c/code\u003e，即 \u003ccode\u003es1[0] = -prices[0]\u003c/code\u003e。接下来考虑，如果第 \u003ccode\u003ei\u003c/code\u003e 天进入了 $\\text{S}_1$ 状态，那么第 \u003ccode\u003ei - 1\u003c/code\u003e 天要么在 $\\text{S}_0$ 状态，要么在 $\\text{S}_1$ 状态。因此 \u003ccode\u003es1[i] = max (s0[i - 1] - prices[i], s1[i - 1])\u003c/code\u003e。\u003c/p\u003e\n\u003cp\u003e对于 $\\text{S}_2$ 状态来说，不存在第一天就卖出的现象，因此我们需要一个足够小的值，来表示这种不可能出现的状态，即 \u003ccode\u003es2[0] = -sys.maxint - 1\u003c/code\u003e。接下来考虑，如果第 \u003ccode\u003ei\u003c/code\u003e 天进入了 $\\text{S}_2$ 状态，那么第 \u003ccode\u003ei - 1\u003c/code\u003e 天必然在 $\\text{S}_1$ 状态。因此 \u003ccode\u003es2[i] = s1[i - 1] + prices[i]\u003c/code\u003e。\u003c/p\u003e\n\u003cp\u003e于是，我们很容易能写出代码：\u003c/p\u003e\n\u003cfigure class=\"highlight python\"\u003e\u003cfigcaption\u003e\u003cspan\u003emaxProfit.py\u003c/span\u003e\u003c/figcaption\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e8\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e9\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e10\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e11\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e12\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e13\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e14\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e15\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e16\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e17\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e18\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e19\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e20\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e21\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e22\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"keyword\"\u003eimport\u003c/span\u003e sys\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"keyword\"\u003edef\u003c/span\u003e \u003cspan class=\"title function_\"\u003emaxProfit\u003c/span\u003e (prices):\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    length = \u003cspan class=\"built_in\"\u003elen\u003c/span\u003e (prices)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"keyword\"\u003eif\u003c/span\u003e length \u0026lt; \u003cspan class=\"number\"\u003e2\u003c/span\u003e:\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        \u003cspan class=\"keyword\"\u003ereturn\u003c/span\u003e \u003cspan class=\"number\"\u003e0\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    s0, s1, s2          = [\u003cspan class=\"number\"\u003e0\u003c/span\u003e] * length, [\u003cspan class=\"number\"\u003e0\u003c/span\u003e] * length, [\u003cspan class=\"number\"\u003e0\u003c/span\u003e] * length\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    s0[\u003cspan class=\"number\"\u003e0\u003c/span\u003e], s1[\u003cspan class=\"number\"\u003e0\u003c/span\u003e], s2[\u003cspan class=\"number\"\u003e0\u003c/span\u003e] = \u003cspan class=\"number\"\u003e0\u003c/span\u003e, -prices[\u003cspan class=\"number\"\u003e0\u003c/span\u003e], -sys.maxint - \u003cspan class=\"number\"\u003e1\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"keyword\"\u003efor\u003c/span\u003e i \u003cspan class=\"keyword\"\u003ein\u003c/span\u003e xrange (\u003cspan class=\"number\"\u003e1\u003c/span\u003e, length):\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        s0[i] = \u003cspan class=\"built_in\"\u003emax\u003c/span\u003e (s0[i - \u003cspan class=\"number\"\u003e1\u003c/span\u003e], s2[i - \u003cspan class=\"number\"\u003e1\u003c/span\u003e])\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        s1[i] = \u003cspan class=\"built_in\"\u003emax\u003c/span\u003e (s0[i - \u003cspan class=\"number\"\u003e1\u003c/span\u003e] - prices[i], s1[i - \u003cspan class=\"number\"\u003e1\u003c/span\u003e])\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        s2[i] = s1[i - \u003cspan class=\"number\"\u003e1\u003c/span\u003e] + prices[i]\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"keyword\"\u003ereturn\u003c/span\u003e \u003cspan class=\"built_in\"\u003emax\u003c/span\u003e (s0[-\u003cspan class=\"number\"\u003e1\u003c/span\u003e], s2[-\u003cspan class=\"number\"\u003e1\u003c/span\u003e])\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"keyword\"\u003eif\u003c/span\u003e __name__ == \u003cspan class=\"string\"\u003e\u0026#34;__main__\u0026#34;\u003c/span\u003e:\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    test_cases = [[], [\u003cspan class=\"number\"\u003e1\u003c/span\u003e], [\u003cspan class=\"number\"\u003e1\u003c/span\u003e, \u003cspan class=\"number\"\u003e2\u003c/span\u003e, \u003cspan class=\"number\"\u003e3\u003c/span\u003e, \u003cspan class=\"number\"\u003e1\u003c/span\u003e, \u003cspan class=\"number\"\u003e1\u003c/span\u003e, \u003cspan class=\"number\"\u003e2\u003c/span\u003e, \u003cspan class=\"number\"\u003e5\u003c/span\u003e, \u003cspan class=\"number\"\u003e3\u003c/span\u003e, \u003cspan class=\"number\"\u003e4\u003c/span\u003e, \u003cspan class=\"number\"\u003e2\u003c/span\u003e],\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e                    [\u003cspan class=\"number\"\u003e6\u003c/span\u003e, \u003cspan class=\"number\"\u003e5\u003c/span\u003e, \u003cspan class=\"number\"\u003e4\u003c/span\u003e, \u003cspan class=\"number\"\u003e3\u003c/span\u003e, \u003cspan class=\"number\"\u003e2\u003c/span\u003e, \u003cspan class=\"number\"\u003e1\u003c/span\u003e, \u003cspan class=\"number\"\u003e0\u003c/span\u003e]]\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"keyword\"\u003efor\u003c/span\u003e prices \u003cspan class=\"keyword\"\u003ein\u003c/span\u003e test_cases:\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        \u003cspan class=\"built_in\"\u003eprint\u003c/span\u003e \u003cspan class=\"string\"\u003e\u0026#34;The maxProfit of\u0026#34;\u003c/span\u003e, prices, \u003cspan class=\"string\"\u003e\u0026#34;is\u0026#34;\u003c/span\u003e, maxProfit (prices)\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e结果输出：\u003c/p\u003e\n\u003cfigure class=\"highlight python\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003eThe maxProfit of [] \u003cspan class=\"keyword\"\u003eis\u003c/span\u003e \u003cspan class=\"number\"\u003e0\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eThe maxProfit of [\u003cspan class=\"number\"\u003e1\u003c/span\u003e] \u003cspan class=\"keyword\"\u003eis\u003c/span\u003e \u003cspan class=\"number\"\u003e0\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eThe maxProfit of [\u003cspan class=\"number\"\u003e1\u003c/span\u003e, \u003cspan class=\"number\"\u003e2\u003c/span\u003e, \u003cspan class=\"number\"\u003e3\u003c/span\u003e, \u003cspan class=\"number\"\u003e1\u003c/span\u003e, \u003cspan class=\"number\"\u003e1\u003c/span\u003e, \u003cspan class=\"number\"\u003e2\u003c/span\u003e, \u003cspan class=\"number\"\u003e5\u003c/span\u003e, \u003cspan class=\"number\"\u003e3\u003c/span\u003e, \u003cspan class=\"number\"\u003e4\u003c/span\u003e, \u003cspan class=\"number\"\u003e2\u003c/span\u003e] \u003cspan class=\"keyword\"\u003eis\u003c/span\u003e \u003cspan class=\"number\"\u003e6\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eThe maxProfit of [\u003cspan class=\"number\"\u003e6\u003c/span\u003e, \u003cspan class=\"number\"\u003e5\u003c/span\u003e, \u003cspan class=\"number\"\u003e4\u003c/span\u003e, \u003cspan class=\"number\"\u003e3\u003c/span\u003e, \u003cspan class=\"number\"\u003e2\u003c/span\u003e, \u003cspan class=\"number\"\u003e1\u003c/span\u003e, \u003cspan class=\"number\"\u003e0\u003c/span\u003e] \u003cspan class=\"keyword\"\u003eis\u003c/span\u003e \u003cspan class=\"number\"\u003e0\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e符合预期；并且，由于循环内的操作均可以在常数时间内完成，因此这是一个 \u003ccode\u003eO(n)\u003c/code\u003e 复杂度的算法。\u003c/p\u003e\n\n    \u003c/div\u003e",
  "Date": "2016-05-13T12:57:29Z",
  "Author": "Liam Huang"
}