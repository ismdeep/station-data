{
  "Source": "liam.page",
  "Title": "谈谈 C++ 中集合的交集和并集",
  "Link": "https://liam.page/2017/12/13/set-intersection-and-union-in-Cpp/",
  "Content": "\u003cdiv class=\"post-body\" itemprop=\"articleBody\"\u003e\n\n      \n        \u003cp\u003e在数学中，集合是最基本的概念之一。编程时，我们不可避免地会涉及到集合及其相关操作。在 C++ 中，标准模板库（STL）提供了 \u003ccode\u003estd::set\u003c/code\u003e/\u003ccode\u003estd::unordered_set\u003c/code\u003e 两种传统意义上的集合（除此之外，还有 \u003ccode\u003estd::multiset\u003c/code\u003e 和 \u003ccode\u003estd::unordered_multiset\u003c/code\u003e）。其中，\u003ccode\u003estd::set\u003c/code\u003e（和 \u003ccode\u003estd::multiset\u003c/code\u003e）定义在头文件 \u003ccode\u003eset\u003c/code\u003e 当中，从 C++98 起就有支持；而 \u003ccode\u003estd::unordered_set\u003c/code\u003e（和 \u003ccode\u003estd::unordered_multiset\u003c/code\u003e）则定义在头文件 \u003ccode\u003eunordered_set\u003c/code\u003e 当中，从 C++11 开始支持。\u003c/p\u003e\n\u003cp\u003e此篇我们讨论如何在 C++ 中进行集合的交集和并集操作。\u003c/p\u003e\n\u003cspan id=\"more\"\u003e\u003c/span\u003e\n\n\u003ch2 id=\"std-set-和-std-unordered-set-简介\"\u003e\u003ca href=\"#std-set-和-std-unordered-set-简介\" class=\"headerlink\" title=\"std::set 和 std::unordered_set 简介\"\u003e\u003c/a\u003e\u003ccode\u003estd::set\u003c/code\u003e 和 \u003ccode\u003estd::unordered_set\u003c/code\u003e 简介\u003c/h2\u003e\u003cp\u003e在 C++ 标准中，\u003ccode\u003estd::set\u003c/code\u003e 是基于平衡二叉树的（经典的 SGI STL 以红黑树实现），因而是有序的。以恰当的方式，比如以 \u003ccode\u003estd::set\u003c/code\u003e 的迭代器，遍历，可以得到有序的结果。在 C++ 标准中，\u003ccode\u003estd::unordered_set\u003c/code\u003e 则是基于哈希表的。因此，遍历 \u003ccode\u003estd::unordered_set\u003c/code\u003e 得到的顺序是不被保证的。\u003ccode\u003estd::unordered_set\u003c/code\u003e 的插入、查找、计数等操作的时间复杂度是 $O(1)$。\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e如果你更喜欢 \u003ccode\u003ehash_set\u003c/code\u003e 这个名字，你也可以借助 C++11 的 \u003ccode\u003eusing\u003c/code\u003e 关键字的新功能，将 \u003ccode\u003ehash_set\u003c/code\u003e 作为 \u003ccode\u003eunordered_set\u003c/code\u003e 的别名。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cfigure class=\"highlight cpp\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e8\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e#\u003cspan class=\"keyword\"\u003einclude\u003c/span\u003e \u003cspan class=\"string\"\u003e\u0026lt;unordered_set\u0026gt;\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"keyword\"\u003enamespace\u003c/span\u003e std {\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"keyword\"\u003etemplate\u003c/span\u003e \u0026lt;\u003cspan class=\"keyword\"\u003etypename\u003c/span\u003e Key,\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e          \u003cspan class=\"keyword\"\u003etypename\u003c/span\u003e Hash = std::hash\u0026lt;Key\u0026gt;,\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e          \u003cspan class=\"keyword\"\u003etypename\u003c/span\u003e KeyEqual = std::equal_to\u0026lt;Key\u0026gt;,\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e          \u003cspan class=\"keyword\"\u003etypename\u003c/span\u003e Allocator = std::allocator\u0026lt;Key\u0026gt;\u0026gt;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"keyword\"\u003eusing\u003c/span\u003e hash_set = unordered_set\u0026lt;Key, Hash, KeyEqual, Allocator\u0026gt;;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e}  \u003cspan class=\"comment\"\u003e// namespace std\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\u003cblockquote\u003e\n\u003cp\u003e之后，就能像使用 \u003ccode\u003estd::unordered_set\u003c/code\u003e 那样使用 \u003ccode\u003estd::hash_set\u003c/code\u003e 了。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003e因为 \u003ccode\u003estd::set\u003c/code\u003e 和 \u003ccode\u003estd::unordered_set\u003c/code\u003e 底层使用了不同的数据结构，它们对外表现出来的性能也不相同。\u003ccode\u003estd::set\u003c/code\u003e 的插入、查找、计数等操作的时间复杂度是 $O(\\log n)$。\u003ccode\u003estd::unordered_set\u003c/code\u003e 的插入、查找、计数等操作的时间复杂度是 $O(1)$。因此，在集合中元素的顺序很重要时，可以考虑使用 \u003ccode\u003eset::set\u003c/code\u003e 来保存元素；当顺序相对不重要，但会反复进行插入、查找等操作时，则应考虑使用 \u003ccode\u003eset::unordered_set\u003c/code\u003e。\u003c/p\u003e\n\u003cp\u003e我们用下面这段代码来演示 \u003ccode\u003estd::set\u003c/code\u003e 和 \u003ccode\u003estd::unordered_set\u003c/code\u003e 的用法。\u003c/p\u003e\n\u003cfigure class=\"highlight cpp\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e8\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e9\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e10\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e11\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e12\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e13\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e14\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e15\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e16\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e17\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e18\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e19\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e20\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e21\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e22\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e23\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e24\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e25\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e26\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e27\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e28\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e29\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e30\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e31\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e32\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e33\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e34\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e35\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e36\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e37\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e38\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e#\u003cspan class=\"keyword\"\u003einclude\u003c/span\u003e \u003cspan class=\"string\"\u003e\u0026lt;iostream\u0026gt;\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e#\u003cspan class=\"keyword\"\u003einclude\u003c/span\u003e \u003cspan class=\"string\"\u003e\u0026lt;string\u0026gt;\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e#\u003cspan class=\"keyword\"\u003eifdef\u003c/span\u003e HASH_        \u003cspan class=\"comment\"\u003e// 1.\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e#\u003cspan class=\"keyword\"\u003einclude\u003c/span\u003e \u003cspan class=\"string\"\u003e\u0026lt;unordered_set\u0026gt;\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e#\u003cspan class=\"keyword\"\u003eelse\u003c/span\u003e  \u003cspan class=\"comment\"\u003e// HASH_\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e#\u003cspan class=\"keyword\"\u003einclude\u003c/span\u003e \u003cspan class=\"string\"\u003e\u0026lt;set\u0026gt;\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e#\u003cspan class=\"keyword\"\u003eendif\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"keyword\"\u003enamespace\u003c/span\u003e test {\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e#\u003cspan class=\"keyword\"\u003eifdef\u003c/span\u003e HASH_        \u003cspan class=\"comment\"\u003e// 1.\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"keyword\"\u003etemplate\u003c/span\u003e \u0026lt;\u003cspan class=\"keyword\"\u003etypename\u003c/span\u003e Key,\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e          \u003cspan class=\"keyword\"\u003etypename\u003c/span\u003e Hash = std::hash\u0026lt;Key\u0026gt;,\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e          \u003cspan class=\"keyword\"\u003etypename\u003c/span\u003e KeyEqual = std::equal_to\u0026lt;Key\u0026gt;,\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e          \u003cspan class=\"keyword\"\u003etypename\u003c/span\u003e Allocator = std::allocator\u0026lt;Key\u0026gt;\u0026gt;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"keyword\"\u003eusing\u003c/span\u003e set = std::unordered_set\u0026lt;Key, Hash, KeyEqual, Allocator\u0026gt;;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e#\u003cspan class=\"keyword\"\u003eelse\u003c/span\u003e  \u003cspan class=\"comment\"\u003e// HASH_\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"keyword\"\u003etemplate\u003c/span\u003e \u0026lt;\u003cspan class=\"keyword\"\u003etypename\u003c/span\u003e Key,\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e          \u003cspan class=\"keyword\"\u003etypename\u003c/span\u003e Compare = std::less\u0026lt;Key\u0026gt;,\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e          \u003cspan class=\"keyword\"\u003etypename\u003c/span\u003e Allocator = std::allocator\u0026lt;Key\u0026gt;\u0026gt;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"keyword\"\u003eusing\u003c/span\u003e set = std::set\u0026lt;Key, Compare, Allocator\u0026gt;;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e#\u003cspan class=\"keyword\"\u003eendif\u003c/span\u003e  \u003cspan class=\"comment\"\u003e// HASH_\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e}  \u003cspan class=\"comment\"\u003e// namespace test\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"function\"\u003e\u003cspan class=\"type\"\u003eint\u003c/span\u003e \u003cspan class=\"title\"\u003emain\u003c/span\u003e\u003cspan class=\"params\"\u003e()\u003c/span\u003e \u003c/span\u003e{\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    test::set\u0026lt;std::string\u0026gt; set{\u003cspan class=\"string\"\u003e\u0026#34;Hello\u0026#34;\u003c/span\u003e, \u003cspan class=\"string\"\u003e\u0026#34;world\u0026#34;\u003c/span\u003e, \u003cspan class=\"string\"\u003e\u0026#34;!\u0026#34;\u003c/span\u003e};           \u003cspan class=\"comment\"\u003e// 2.\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    set.\u003cspan class=\"built_in\"\u003einsert\u003c/span\u003e(\u003cspan class=\"string\"\u003e\u0026#34;hello\u0026#34;\u003c/span\u003e);                                         \u003cspan class=\"comment\"\u003e// 3.\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    set.\u003cspan class=\"built_in\"\u003einsert\u003c/span\u003e(\u003cspan class=\"string\"\u003e\u0026#34;world\u0026#34;\u003c/span\u003e);                                         \u003cspan class=\"comment\"\u003e// 4.\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"keyword\"\u003efor\u003c/span\u003e (\u003cspan class=\"type\"\u003econst\u003c/span\u003e \u003cspan class=\"keyword\"\u003eauto\u003c/span\u003e\u0026amp; i : set) {\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        std::cout \u0026lt;\u0026lt; i;                                          \u003cspan class=\"comment\"\u003e// 5.\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        \u003cspan class=\"keyword\"\u003eif\u003c/span\u003e ((set.\u003cspan class=\"built_in\"\u003ecount\u003c/span\u003e(i) \u0026gt; \u003cspan class=\"number\"\u003e0\u003c/span\u003e) == (set.\u003cspan class=\"built_in\"\u003efind\u003c/span\u003e(i) != set.\u003cspan class=\"built_in\"\u003eend\u003c/span\u003e())) {  \u003cspan class=\"comment\"\u003e// 6.\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e            std::cout \u0026lt;\u0026lt; \u003cspan class=\"string\"\u003e\u0026#34;\\tYES!\\n\u0026#34;\u003c/span\u003e;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        }\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    }\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"keyword\"\u003ereturn\u003c/span\u003e \u003cspan class=\"number\"\u003e0\u003c/span\u003e;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e}\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e(1) 利用预处理器，在 \u003ccode\u003eHASH_\u003c/code\u003e 有定义时，加载 \u003ccode\u003eunordered_set\u003c/code\u003e 头文件，并将 \u003ccode\u003etest::set\u003c/code\u003e 作为 \u003ccode\u003estd::unordered_set\u003c/code\u003e 的等价类型；否则，加载 \u003ccode\u003eset\u003c/code\u003e 头文件，并将 \u003ccode\u003etest::set\u003c/code\u003e 作为 \u003ccode\u003estd::set\u003c/code\u003e 的等价类型。(2) 声明并定义了名为 \u003ccode\u003eset\u003c/code\u003e 的变量，其中包含 \u003ccode\u003e\u0026#34;Hello\u0026#34;\u003c/code\u003e/\u003ccode\u003e\u0026#34;world\u0026#34;\u003c/code\u003e/\u003ccode\u003e\u0026#34;!\u0026#34;\u003c/code\u003e 三个元素。注意，这里的 \u003ccode\u003eset\u003c/code\u003e 不带名字空间前缀，因而不会与 \u003ccode\u003estd::set\u003c/code\u003e 或者 \u003ccode\u003etest::set\u003c/code\u003e 冲突。(3) 和 (4) 处分别将 \u003ccode\u003e\u0026#34;hello\u0026#34;\u003c/code\u003e 和 \u003ccode\u003e\u0026#34;world\u0026#34;\u003c/code\u003e 插入 \u003ccode\u003eset\u003c/code\u003e。(5) 在按迭代器顺序遍历集合。(6) 则给出了查询元素是否属于集合的两种等价方式。\u003c/p\u003e\n\u003cp\u003e当定义 \u003ccode\u003eHASH_\u003c/code\u003e 时，可能的输出为：\u003c/p\u003e\n\u003cfigure class=\"highlight bash\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e$ g++ -std=c++11 foo.cpp -DHASH_\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e$ ./a.out\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003ehello   YES!\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e!       YES!\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eworld   YES!\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eHello   YES!\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e当不定义 \u003ccode\u003eHASH_\u003c/code\u003e 时，输出应为：\u003c/p\u003e\n\u003cfigure class=\"highlight bash\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e$ g++ -std=c++11 foo.cpp\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e$ ./a.out\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e!       YES!\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eHello   YES!\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003ehello   YES!\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eworld   YES!\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e不难发现，不论是使用 \u003ccode\u003estd::set\u003c/code\u003e 还是 \u003ccode\u003estd::unordered_set\u003c/code\u003e，重复插入的 \u003ccode\u003e\u0026#34;hello\u0026#34;\u003c/code\u003e 在集合中都只存在一份；此外，\u003ccode\u003estd::set\u003c/code\u003e 是有序的，而 \u003ccode\u003estd::unordered_set\u003c/code\u003e 是无序的。另一方面，我们发现，使用 \u003ccode\u003eset.count(i) \u0026gt; 0\u003c/code\u003e 和 \u003ccode\u003eset.find(i) != set.end()\u003c/code\u003e 判断集合中是否存在元素 \u003ccode\u003ei\u003c/code\u003e 是等价的。\u003c/p\u003e\n\u003ch2 id=\"标准库提供的-std-set-intersection-和-std-set-union\"\u003e\u003ca href=\"#标准库提供的-std-set-intersection-和-std-set-union\" class=\"headerlink\" title=\"标准库提供的 std::set_intersection 和 std::set_union\"\u003e\u003c/a\u003e标准库提供的 \u003ccode\u003estd::set_intersection\u003c/code\u003e 和 \u003ccode\u003estd::set_union\u003c/code\u003e\u003c/h2\u003e\u003cp\u003e标准库提供了 \u003ca target=\"_blank\" rel=\"noopener\" href=\"http://en.cppreference.com/w/cpp/algorithm/set_intersection\"\u003e\u003ccode\u003estd::set_intersection\u003c/code\u003e\u003c/a\u003e 和 \u003ca target=\"_blank\" rel=\"noopener\" href=\"http://en.cppreference.com/w/cpp/algorithm/set_union\"\u003e\u003ccode\u003estd::set_union\u003c/code\u003e\u003c/a\u003e 两个函数，用于对容器内的元素进行集合求交、求并，而后将得到的结果保存在 \u003ccode\u003eOutputIt\u003c/code\u003e 对应的容器当中。这两个函数定义在头文件 \u003ccode\u003ealgorithm\u003c/code\u003e 当中。\u003c/p\u003e\n\u003cp\u003e不过，这两个函数都要求原始集合是排序的。因此，我们无法将这两个函数直接运用在 \u003ccode\u003estd::unordered_set\u003c/code\u003e 上。\u003c/p\u003e\n\u003cp\u003e我们用下面这段代码演示这两个函数的用法。\u003c/p\u003e\n\u003cfigure class=\"highlight cpp\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e8\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e9\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e10\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e11\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e12\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e13\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e14\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e15\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e16\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e17\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e18\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e19\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e20\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e21\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e22\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e23\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e24\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e25\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e26\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e27\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e28\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e29\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e30\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e31\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e32\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e33\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e34\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e35\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e36\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e37\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e38\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e39\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e40\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e41\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e42\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e43\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e44\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e45\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e46\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e47\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e48\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e49\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e50\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e#\u003cspan class=\"keyword\"\u003einclude\u003c/span\u003e \u003cspan class=\"string\"\u003e\u0026lt;iostream\u0026gt;\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e#\u003cspan class=\"keyword\"\u003einclude\u003c/span\u003e \u003cspan class=\"string\"\u003e\u0026lt;iterator\u0026gt;\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e#\u003cspan class=\"keyword\"\u003einclude\u003c/span\u003e \u003cspan class=\"string\"\u003e\u0026lt;algorithm\u0026gt;\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e#\u003cspan class=\"keyword\"\u003eifdef\u003c/span\u003e HASH_\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e#\u003cspan class=\"keyword\"\u003einclude\u003c/span\u003e \u003cspan class=\"string\"\u003e\u0026lt;unordered_set\u0026gt;\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e#\u003cspan class=\"keyword\"\u003eelse\u003c/span\u003e  \u003cspan class=\"comment\"\u003e// HASH_\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e#\u003cspan class=\"keyword\"\u003einclude\u003c/span\u003e \u003cspan class=\"string\"\u003e\u0026lt;set\u0026gt;\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e#\u003cspan class=\"keyword\"\u003eendif\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"keyword\"\u003enamespace\u003c/span\u003e test {\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e#\u003cspan class=\"keyword\"\u003eifdef\u003c/span\u003e HASH_\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"keyword\"\u003etemplate\u003c/span\u003e \u0026lt;\u003cspan class=\"keyword\"\u003etypename\u003c/span\u003e Key,\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e          \u003cspan class=\"keyword\"\u003etypename\u003c/span\u003e Hash = std::hash\u0026lt;Key\u0026gt;,\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e          \u003cspan class=\"keyword\"\u003etypename\u003c/span\u003e KeyEqual = std::equal_to\u0026lt;Key\u0026gt;,\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e          \u003cspan class=\"keyword\"\u003etypename\u003c/span\u003e Allocator = std::allocator\u0026lt;Key\u0026gt;\u0026gt;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"keyword\"\u003eusing\u003c/span\u003e set = std::unordered_set\u0026lt;Key, Hash, KeyEqual, Allocator\u0026gt;;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e#\u003cspan class=\"keyword\"\u003eelse\u003c/span\u003e  \u003cspan class=\"comment\"\u003e// HASH_\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"keyword\"\u003etemplate\u003c/span\u003e \u0026lt;\u003cspan class=\"keyword\"\u003etypename\u003c/span\u003e Key,\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e          \u003cspan class=\"keyword\"\u003etypename\u003c/span\u003e Compare = std::less\u0026lt;Key\u0026gt;,\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e          \u003cspan class=\"keyword\"\u003etypename\u003c/span\u003e Allocator = std::allocator\u0026lt;Key\u0026gt;\u0026gt;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"keyword\"\u003eusing\u003c/span\u003e set = std::set\u0026lt;Key, Compare, Allocator\u0026gt;;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e#\u003cspan class=\"keyword\"\u003eendif\u003c/span\u003e  \u003cspan class=\"comment\"\u003e// HASH_\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e}  \u003cspan class=\"comment\"\u003e// namespace test\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"function\"\u003e\u003cspan class=\"type\"\u003eint\u003c/span\u003e \u003cspan class=\"title\"\u003emain\u003c/span\u003e\u003cspan class=\"params\"\u003e()\u003c/span\u003e \u003c/span\u003e{\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    test::set\u0026lt;\u003cspan class=\"type\"\u003eint\u003c/span\u003e\u0026gt; lhs{\u003cspan class=\"number\"\u003e1\u003c/span\u003e, \u003cspan class=\"number\"\u003e2\u003c/span\u003e, \u003cspan class=\"number\"\u003e3\u003c/span\u003e, \u003cspan class=\"number\"\u003e4\u003c/span\u003e};                             \u003cspan class=\"comment\"\u003e// 1.\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    test::set\u0026lt;\u003cspan class=\"type\"\u003eint\u003c/span\u003e\u0026gt; rhs{\u003cspan class=\"number\"\u003e3\u003c/span\u003e, \u003cspan class=\"number\"\u003e4\u003c/span\u003e, \u003cspan class=\"number\"\u003e5\u003c/span\u003e, \u003cspan class=\"number\"\u003e6\u003c/span\u003e};                             \u003cspan class=\"comment\"\u003e// 2.\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    test::set\u0026lt;\u003cspan class=\"type\"\u003eint\u003c/span\u003e\u0026gt; result;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    std::\u003cspan class=\"built_in\"\u003eset_intersection\u003c/span\u003e(lhs.\u003cspan class=\"built_in\"\u003ebegin\u003c/span\u003e(), lhs.\u003cspan class=\"built_in\"\u003eend\u003c/span\u003e(),               \u003cspan class=\"comment\"\u003e// 3.\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e                          rhs.\u003cspan class=\"built_in\"\u003ebegin\u003c/span\u003e(), rhs.\u003cspan class=\"built_in\"\u003eend\u003c/span\u003e(),               \u003cspan class=\"comment\"\u003e// 4.\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e                          std::\u003cspan class=\"built_in\"\u003einserter\u003c/span\u003e(result, result.\u003cspan class=\"built_in\"\u003eend\u003c/span\u003e())); \u003cspan class=\"comment\"\u003e// 5.\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"keyword\"\u003efor\u003c/span\u003e (\u003cspan class=\"type\"\u003econst\u003c/span\u003e \u003cspan class=\"keyword\"\u003eauto\u003c/span\u003e\u0026amp; i : result) {\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        std::cout \u0026lt;\u0026lt; i \u0026lt;\u0026lt; \u003cspan class=\"string\"\u003e\u0026#39; \u0026#39;\u003c/span\u003e;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    }\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    std::cout \u0026lt;\u0026lt; \u003cspan class=\"string\"\u003e\u0026#39;\\n\u0026#39;\u003c/span\u003e;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    result.\u003cspan class=\"built_in\"\u003eclear\u003c/span\u003e();\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    std::\u003cspan class=\"built_in\"\u003eset_union\u003c/span\u003e(lhs.\u003cspan class=\"built_in\"\u003ebegin\u003c/span\u003e(), lhs.\u003cspan class=\"built_in\"\u003eend\u003c/span\u003e(),                      \u003cspan class=\"comment\"\u003e// 6.\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e                   rhs.\u003cspan class=\"built_in\"\u003ebegin\u003c/span\u003e(), rhs.\u003cspan class=\"built_in\"\u003eend\u003c/span\u003e(),                      \u003cspan class=\"comment\"\u003e// 7.\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e                   std::\u003cspan class=\"built_in\"\u003einserter\u003c/span\u003e(result, result.\u003cspan class=\"built_in\"\u003eend\u003c/span\u003e()));        \u003cspan class=\"comment\"\u003e// 8.\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"keyword\"\u003efor\u003c/span\u003e (\u003cspan class=\"type\"\u003econst\u003c/span\u003e \u003cspan class=\"keyword\"\u003eauto\u003c/span\u003e\u0026amp; i : result) {\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        std::cout \u0026lt;\u0026lt; i \u0026lt;\u0026lt; \u003cspan class=\"string\"\u003e\u0026#39; \u0026#39;\u003c/span\u003e;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    }\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    std::cout \u0026lt;\u0026lt; \u003cspan class=\"string\"\u003e\u0026#39;\\n\u0026#39;\u003c/span\u003e;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"keyword\"\u003ereturn\u003c/span\u003e \u003cspan class=\"number\"\u003e0\u003c/span\u003e;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e}\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e(1) 和 (2) 声明并定义了两个 \u003ccode\u003etest::set\u0026lt;int\u0026gt;\u003c/code\u003e 类的对象：\u003ccode\u003elhs\u003c/code\u003e 和 \u003ccode\u003erhs\u003c/code\u003e。在 (3) 处，我们向 \u003ccode\u003estd::set_intersection\u003c/code\u003e 传入了 \u003ccode\u003elhs\u003c/code\u003e 的首末位置迭代器；在 (4) 处，我们向函数传入了 \u003ccode\u003erhs\u003c/code\u003e 的首末位置迭代器；在 (5) 处，我们向函数传入了 \u003ccode\u003eresult\u003c/code\u003e 的输出迭代器。随后，我们在 (6)(7)(8) 处做了类似的事情，不过是把函数 \u003ccode\u003estd::set_intersection\u003c/code\u003e 替换成了 \u003ccode\u003estd::set_union\u003c/code\u003e。\u003c/p\u003e\n\u003cp\u003e如此一来，我们应有可能的输出：\u003c/p\u003e\n\u003cfigure class=\"highlight bash\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e8\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e$ g++ -std=c++11 foo.cpp -DHASH_\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e$ ./a.out\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5 6 1 2 3 4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e$ g++ -std=c++11 foo.cpp\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e$ ./a.out\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3 4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e1 2 3 4 5 6\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e不难发现，当使用 \u003ccode\u003estd::unordered_set\u003c/code\u003e 时，函数 \u003ccode\u003estd::set_intersection\u003c/code\u003e 工作不正常（\u003ccode\u003estd::set_union\u003c/code\u003e 恰好看起来正常，实际也不正常）。当使用 \u003ccode\u003estd::set\u003c/code\u003e 时，由于基于平衡二叉树的集合是有序的，因此两个函数工作正常。\u003c/p\u003e\n\u003cp\u003e由于 \u003ccode\u003estd::set_intersection\u003c/code\u003e 和 \u003ccode\u003estd::set_union\u003c/code\u003e 接受的输入是迭代器；事实上，这两个函数不光能对集合求交集和并集，还能接收任意有序的序列的迭代器并求交集和并集。可见，虽然名字是「集合交集」和「集合并集」，但这两个函数的行为与我们默认的交集和并集的概念并不一致。更有甚者，由于这两个函数要求容器有序，所以不能作用在 \u003ccode\u003estd::unoredered_set\u003c/code\u003e 类型的对象上。因此，我们可以考虑定义自己的求交、求并函数。\u003c/p\u003e\n\u003ch2 id=\"定义自己的求交、求并函数\"\u003e\u003ca href=\"#定义自己的求交、求并函数\" class=\"headerlink\" title=\"定义自己的求交、求并函数\"\u003e\u003c/a\u003e定义自己的求交、求并函数\u003c/h2\u003e\u003cp\u003e我们以下面的例子呈现我们自己定义的求交、求并函数。\u003c/p\u003e\n\u003cfigure class=\"highlight cpp\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e8\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e9\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e10\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e11\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e12\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e13\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e14\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e15\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e16\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e17\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e18\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e19\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e20\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e21\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e22\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e23\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e24\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e25\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e26\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e27\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e28\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e29\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e30\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e31\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e32\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e33\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e34\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e35\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e36\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e37\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e38\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e39\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e40\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e41\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e42\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e43\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e44\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e45\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e46\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e47\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e48\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e49\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e50\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e51\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e52\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e53\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e54\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e55\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e56\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e57\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e58\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e59\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e60\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e61\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e62\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e63\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e64\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e65\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e66\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e67\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e#\u003cspan class=\"keyword\"\u003einclude\u003c/span\u003e \u003cspan class=\"string\"\u003e\u0026lt;iostream\u0026gt;\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e#\u003cspan class=\"keyword\"\u003eifdef\u003c/span\u003e HASH_\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e#\u003cspan class=\"keyword\"\u003einclude\u003c/span\u003e \u003cspan class=\"string\"\u003e\u0026lt;unordered_set\u0026gt;\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e#\u003cspan class=\"keyword\"\u003eelse\u003c/span\u003e  \u003cspan class=\"comment\"\u003e// HASH_\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e#\u003cspan class=\"keyword\"\u003einclude\u003c/span\u003e \u003cspan class=\"string\"\u003e\u0026lt;set\u0026gt;\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e#\u003cspan class=\"keyword\"\u003eendif\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"keyword\"\u003enamespace\u003c/span\u003e test {\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e#\u003cspan class=\"keyword\"\u003eifdef\u003c/span\u003e HASH_\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"keyword\"\u003etemplate\u003c/span\u003e \u0026lt;\u003cspan class=\"keyword\"\u003etypename\u003c/span\u003e Key,\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e          \u003cspan class=\"keyword\"\u003etypename\u003c/span\u003e Hash = std::hash\u0026lt;Key\u0026gt;,\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e          \u003cspan class=\"keyword\"\u003etypename\u003c/span\u003e KeyEqual = std::equal_to\u0026lt;Key\u0026gt;,\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e          \u003cspan class=\"keyword\"\u003etypename\u003c/span\u003e Allocator = std::allocator\u0026lt;Key\u0026gt;\u0026gt;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"keyword\"\u003eusing\u003c/span\u003e set = std::unordered_set\u0026lt;Key, Hash, KeyEqual, Allocator\u0026gt;;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e#\u003cspan class=\"keyword\"\u003eelse\u003c/span\u003e  \u003cspan class=\"comment\"\u003e// HASH_\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"keyword\"\u003etemplate\u003c/span\u003e \u0026lt;\u003cspan class=\"keyword\"\u003etypename\u003c/span\u003e Key,\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e          \u003cspan class=\"keyword\"\u003etypename\u003c/span\u003e Compare = std::less\u0026lt;Key\u0026gt;,\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e          \u003cspan class=\"keyword\"\u003etypename\u003c/span\u003e Allocator = std::allocator\u0026lt;Key\u0026gt;\u0026gt;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"keyword\"\u003eusing\u003c/span\u003e set = std::set\u0026lt;Key, Compare, Allocator\u0026gt;;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e#\u003cspan class=\"keyword\"\u003eendif\u003c/span\u003e  \u003cspan class=\"comment\"\u003e// HASH_\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e}  \u003cspan class=\"comment\"\u003e// namespace test\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"keyword\"\u003enamespace\u003c/span\u003e setop {\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"keyword\"\u003etemplate\u003c/span\u003e \u0026lt;\u003cspan class=\"keyword\"\u003etypename\u003c/span\u003e Set\u0026gt;                                             \u003cspan class=\"comment\"\u003e// 1.\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"function\"\u003e\u003cspan class=\"type\"\u003estatic\u003c/span\u003e \u003cspan class=\"keyword\"\u003einline\u003c/span\u003e Set\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"function\"\u003e\u003cspan class=\"title\"\u003eset_union\u003c/span\u003e\u003cspan class=\"params\"\u003e(\u003cspan class=\"type\"\u003econst\u003c/span\u003e Set\u0026amp; lhs, \u003cspan class=\"type\"\u003econst\u003c/span\u003e Set\u0026amp; rhs)\u003c/span\u003e \u003c/span\u003e{\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    Set uset{lhs};                                                  \u003cspan class=\"comment\"\u003e// 2.\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    uset.\u003cspan class=\"built_in\"\u003einsert\u003c/span\u003e(rhs.\u003cspan class=\"built_in\"\u003ebegin\u003c/span\u003e(), rhs.\u003cspan class=\"built_in\"\u003eend\u003c/span\u003e());                            \u003cspan class=\"comment\"\u003e// 3.\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"keyword\"\u003ereturn\u003c/span\u003e std::\u003cspan class=\"built_in\"\u003emove\u003c/span\u003e(uset);                                         \u003cspan class=\"comment\"\u003e// 4.\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e}\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"keyword\"\u003etemplate\u003c/span\u003e \u0026lt;\u003cspan class=\"keyword\"\u003etypename\u003c/span\u003e Set, \u003cspan class=\"keyword\"\u003etypename\u003c/span\u003e Key = \u003cspan class=\"keyword\"\u003etypename\u003c/span\u003e Set::value_type\u0026gt;    \u003cspan class=\"comment\"\u003e// 5.\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"type\"\u003estatic\u003c/span\u003e \u003cspan class=\"keyword\"\u003einline\u003c/span\u003e Set\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"built_in\"\u003eset_intersection\u003c/span\u003e(\u003cspan class=\"type\"\u003econst\u003c/span\u003e Set\u0026amp; lhs, \u003cspan class=\"type\"\u003econst\u003c/span\u003e Set\u0026amp; rhs) {\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"keyword\"\u003eif\u003c/span\u003e (lhs.\u003cspan class=\"built_in\"\u003esize\u003c/span\u003e() \u0026lt;= rhs.\u003cspan class=\"built_in\"\u003esize\u003c/span\u003e()) {                                 \u003cspan class=\"comment\"\u003e// 6.\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        Set iset;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        \u003cspan class=\"keyword\"\u003efor\u003c/span\u003e (\u003cspan class=\"type\"\u003econst\u003c/span\u003e Key\u0026amp; key : lhs) {\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e            \u003cspan class=\"keyword\"\u003eif\u003c/span\u003e (rhs.\u003cspan class=\"built_in\"\u003ecount\u003c/span\u003e(key) \u0026gt; \u003cspan class=\"number\"\u003e0\u003c/span\u003e) {                               \u003cspan class=\"comment\"\u003e// 7.\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e                iset.\u003cspan class=\"built_in\"\u003einsert\u003c/span\u003e(key);\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e            }\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        }\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        \u003cspan class=\"keyword\"\u003ereturn\u003c/span\u003e std::\u003cspan class=\"built_in\"\u003emove\u003c/span\u003e(iset);\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    } \u003cspan class=\"keyword\"\u003eelse\u003c/span\u003e {\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        \u003cspan class=\"keyword\"\u003ereturn\u003c/span\u003e \u003cspan class=\"built_in\"\u003eset_intersection\u003c/span\u003e(rhs, lhs);\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    }\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e}\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e}  \u003cspan class=\"comment\"\u003e// namespace setop\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"function\"\u003e\u003cspan class=\"type\"\u003eint\u003c/span\u003e \u003cspan class=\"title\"\u003emain\u003c/span\u003e\u003cspan class=\"params\"\u003e()\u003c/span\u003e \u003c/span\u003e{\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    test::set\u0026lt;\u003cspan class=\"type\"\u003eint\u003c/span\u003e\u0026gt; lhs{\u003cspan class=\"number\"\u003e1\u003c/span\u003e, \u003cspan class=\"number\"\u003e2\u003c/span\u003e, \u003cspan class=\"number\"\u003e3\u003c/span\u003e, \u003cspan class=\"number\"\u003e4\u003c/span\u003e};\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    test::set\u0026lt;\u003cspan class=\"type\"\u003eint\u003c/span\u003e\u0026gt; rhs{\u003cspan class=\"number\"\u003e3\u003c/span\u003e, \u003cspan class=\"number\"\u003e4\u003c/span\u003e, \u003cspan class=\"number\"\u003e5\u003c/span\u003e, \u003cspan class=\"number\"\u003e6\u003c/span\u003e};\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"type\"\u003econst\u003c/span\u003e \u003cspan class=\"keyword\"\u003eauto\u003c/span\u003e iset = setop::\u003cspan class=\"built_in\"\u003eset_intersection\u003c/span\u003e(lhs, rhs);            \u003cspan class=\"comment\"\u003e// 8.\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"type\"\u003econst\u003c/span\u003e \u003cspan class=\"keyword\"\u003eauto\u003c/span\u003e uset = setop::\u003cspan class=\"built_in\"\u003eset_union\u003c/span\u003e(lhs, rhs);                   \u003cspan class=\"comment\"\u003e// 9.\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"keyword\"\u003efor\u003c/span\u003e (\u003cspan class=\"type\"\u003econst\u003c/span\u003e \u003cspan class=\"keyword\"\u003eauto\u003c/span\u003e\u0026amp; i : iset) {\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        std::cout \u0026lt;\u0026lt; i \u0026lt;\u0026lt; \u003cspan class=\"string\"\u003e\u0026#39; \u0026#39;\u003c/span\u003e;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    }\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    std::cout \u0026lt;\u0026lt; \u003cspan class=\"string\"\u003e\u0026#39;\\n\u0026#39;\u003c/span\u003e;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"keyword\"\u003efor\u003c/span\u003e (\u003cspan class=\"type\"\u003econst\u003c/span\u003e \u003cspan class=\"keyword\"\u003eauto\u003c/span\u003e\u0026amp; i : uset) {\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        std::cout \u0026lt;\u0026lt; i \u0026lt;\u0026lt; \u003cspan class=\"string\"\u003e\u0026#39; \u0026#39;\u003c/span\u003e;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    }\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    std::cout \u0026lt;\u0026lt; \u003cspan class=\"string\"\u003e\u0026#39;\\n\u0026#39;\u003c/span\u003e;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"keyword\"\u003ereturn\u003c/span\u003e \u003cspan class=\"number\"\u003e0\u003c/span\u003e;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e}\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e(1) 和 (5) 表明，\u003ccode\u003esetop::set_union\u003c/code\u003e 和 \u003ccode\u003esetop::set_intersection\u003c/code\u003e 都是函数模板，可以接受任何符合要求的容器。其中，在 (5) 的模板声明中，我们使用了 \u003ccode\u003etypename Set::value_type\u003c/code\u003e 这样的语法。这是因为，对于编译器来说，它并不知道 \u003ccode\u003eSet::value_type\u003c/code\u003e 是一个类型还是 \u003ccode\u003eSet\u003c/code\u003e 这个名字空间地下的名为 \u003ccode\u003evalue_type\u003c/code\u003e；此处我们明确地告诉编译器，它应当是一个类型名。\u003c/p\u003e\n\u003cp\u003e在 (2) 处，我们通过 \u003ccode\u003eSet\u003c/code\u003e 的拷贝构造函数，将 \u003ccode\u003elhs\u003c/code\u003e 中的元素全都拷贝到 \u003ccode\u003euset\u003c/code\u003e 当中。这样一来，\u003ccode\u003euset\u003c/code\u003e 当中就包含了 \u003ccode\u003elhs\u003c/code\u003e 中的所有元素。在 (3) 处，我们通过 \u003ccode\u003einsert\u003c/code\u003e 函数，将 \u003ccode\u003erhs\u003c/code\u003e 的全部元素依次插入到 \u003ccode\u003euset\u003c/code\u003e 当中。这样一来，\u003ccode\u003euset\u003c/code\u003e 当中也包含了 \u003ccode\u003erhs\u003c/code\u003e 中的所有元素。因此，此时它是 \u003ccode\u003elhs\u003c/code\u003e 和 \u003ccode\u003erhs\u003c/code\u003e 的并集；我们在 (4) 处将 \u003ccode\u003euset\u003c/code\u003e 返回。值得一提的是，为了避免可能的额外拷贝（返回值拷贝），我们明确使用了 \u003ccode\u003estd::move\u003c/code\u003e 将 \u003ccode\u003euset\u003c/code\u003e 作为右值返回。不过，即使不这么写，现代编译器也会优化这一拷贝过程。\u003c/p\u003e\n\u003cp\u003e(6) 比较了 \u003ccode\u003elhs\u003c/code\u003e 和 \u003ccode\u003erhs\u003c/code\u003e 的大小。这里使用 \u003ccode\u003e\u0026lt;=\u003c/code\u003e 而不使用 \u003ccode\u003e\u0026lt;\u003c/code\u003e，是为了避免两个集合元素个数相同时无限递归。(7) 处使用了 \u003ccode\u003erhs.count(key) \u0026gt; 0\u003c/code\u003e 的方式，验证 \u003ccode\u003ekey\u003c/code\u003e 是否在 \u003ccode\u003erhs\u003c/code\u003e 这一集合当中。显然，它比使用 \u003ccode\u003efind\u003c/code\u003e 然后与 \u003ccode\u003erhs.end()\u003c/code\u003e 进行比较来得自然。\u003c/p\u003e\n\u003cp\u003e如此一来，我们有可能的输出：\u003c/p\u003e\n\u003cfigure class=\"highlight bash\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e8\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e$ g++ -std=c++11 foo.cpp -DHASH_\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e$ ./a.out\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3 4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5 6 1 2 3 4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e$ g++ -std=c++11 foo.cpp\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e$ ./a.out\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3 4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e1 2 3 4 5 6\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e不难发现，两个函数工作良好。\u003c/p\u003e\n\n    \u003c/div\u003e",
  "Date": "2017-12-13T13:01:08Z",
  "Author": "Liam Huang"
}