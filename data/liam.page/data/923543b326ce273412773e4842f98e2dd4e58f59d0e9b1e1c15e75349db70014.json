{
  "Source": "liam.page",
  "Title": "LaTeX 插图时对文件扩展名的处理",
  "Link": "https://liam.page/2019/01/27/keep-single-dot-in-image-filename-for-LaTeX/",
  "Content": "\u003cdiv class=\"post-body\" itemprop=\"articleBody\"\u003e\n\n      \n        \u003cp\u003e这是一篇简单的记录，缘起于有人在 XeLaTeX 中插入 \u003ccode\u003e.png\u003c/code\u003e 格式的图片，但提示 \u003ccode\u003eno boundingbox\u003c/code\u003e。这与我的认知不同：这一错误通常只在 LaTeX 方式编译时才会出现，而且加上 \u003ccode\u003ebmpsize\u003c/code\u003e 宏包结合 \u003ccode\u003eDVIPDFMx\u003c/code\u003e 驱动就能解决。但这次问题出现在 \u003ccode\u003eXeLaTeX\u003c/code\u003e 下，我感到很奇怪，也引起了我的兴趣。\u003c/p\u003e\n\u003cspan id=\"more\"\u003e\u003c/span\u003e\n\n\u003ch2 id=\"MWE\"\u003e\u003ca href=\"#MWE\" class=\"headerlink\" title=\"MWE\"\u003e\u003c/a\u003eMWE\u003c/h2\u003e\u003cp\u003e最小工作示例如下：\u003c/p\u003e\n\u003cfigure class=\"highlight tex\"\u003e\u003cfigcaption\u003e\u003cspan\u003etest.tex\u003c/span\u003e\u003c/figcaption\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"comment\"\u003e% compile with XeLaTeX\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"keyword\"\u003e\\documentclass\u003c/span\u003e{article}\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"keyword\"\u003e\\usepackage\u003c/span\u003e{graphicx}\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"keyword\"\u003e\\begin\u003c/span\u003e{document}\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  \u003cspan class=\"keyword\"\u003e\\includegraphics\u003c/span\u003e{foo.bar.png}   \u003cspan class=\"comment\"\u003e% reports error (no boundingbox)\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"keyword\"\u003e\\end\u003c/span\u003e{document}\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e报错如下：\u003c/p\u003e\n\u003cfigure class=\"highlight plaintext\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e8\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e9\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e10\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e! LaTeX Error: Cannot determine size of graphic in foo.bar.png (no BoundingBox)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e.\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eSee the LaTeX manual or LaTeX Companion for explanation.\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eType  H \u0026lt;return\u0026gt;  for immediate help.\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e ...\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003el.5   \\includegraphics{foo.bar.png}\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e                                      % reports error (no boundingbox)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e?\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003ch2 id=\"分析\"\u003e\u003ca href=\"#分析\" class=\"headerlink\" title=\"分析\"\u003e\u003c/a\u003e分析\u003c/h2\u003e\u003cp\u003e如前所述，这就很奇怪了。我第一反应是图片本身有什么问题。但多方检查都没发现有什么问题。考虑到同样的代码在 pdfLaTeX 下编译理应也能通过并顺利输出，故执行命令 \u003ccode\u003epdflatex test.tex\u003c/code\u003e，并观察现象。\u003c/p\u003e\n\u003cfigure class=\"highlight plaintext\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e8\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e9\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e! LaTeX Error: Unknown graphics extension: .bar.png.\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eSee the LaTeX manual or LaTeX Companion for explanation.\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eType  H \u0026lt;return\u0026gt;  for immediate help.\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e ...\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003el.5   \\includegraphics{foo.bar.png}\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e                                      % reports error (no boundingbox)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e?\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e出乎意料，本该顺利通过的代码，在 pdfLaTeX 下也报错了。不过，这次报错的问题和使用 XeLaTeX 时还不太一样。pdfLaTeX 提示说不认识名为 \u003ccode\u003e.bar.png\u003c/code\u003e 的图片扩展名。\u003c/p\u003e\n\u003cp\u003e这给了我新的提示。显然 pdfLaTeX 在处理图片时，以第一个 \u003ccode\u003e.\u003c/code\u003e 作为分割，之后的部分都是扩展名；而后根据图片文件的扩展名去处理。推测 XeLaTeX 也会做类似的操作，只是细节上有所不同，XeLaTeX 没有在遇见 \u003ccode\u003e.bar.png\u003c/code\u003e 这个扩展名的第一时间报错，而是延迟到了计算边界框尺寸时发现没有匹配该扩展名（\u003ccode\u003e.bar.png\u003c/code\u003e）时才报错。如果确实如此，那么在 \u003ccode\u003egraphicx.sty\u003c/code\u003e 当中应该有所体现。追溯到 \u003ccode\u003egraphicx.sty\u003c/code\u003e 依赖的 \u003ccode\u003egraphics.sty\u003c/code\u003e 当中：\u003c/p\u003e\n\u003cfigure class=\"highlight tex\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"keyword\"\u003e\\def\u003c/span\u003e\u003cspan class=\"keyword\"\u003e\\Ginclude@graphics\u003c/span\u003e\u003cspan class=\"params\"\u003e#1\u003c/span\u003e{\u003cspan class=\"comment\"\u003e%\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  \u003cspan class=\"keyword\"\u003e\\begingroup\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  \u003cspan class=\"keyword\"\u003e\\let\u003c/span\u003e\u003cspan class=\"keyword\"\u003e\\input@path\u003c/span\u003e\u003cspan class=\"keyword\"\u003e\\Ginput@path\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  \u003cspan class=\"keyword\"\u003e\\filename@parse\u003c/span\u003e{\u003cspan class=\"params\"\u003e#1\u003c/span\u003e}\u003cspan class=\"comment\"\u003e%\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  \u003cspan class=\"keyword\"\u003e\\ifx\u003c/span\u003e\u003cspan class=\"keyword\"\u003e\\filename@ext\u003c/span\u003e\u003cspan class=\"keyword\"\u003e\\relax\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"comment\"\u003e% ...\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e显然，\u003ccode\u003e\\filename@parse\u003c/code\u003e 是在解析图片文件的文件名。这是一个定义在 LaTeX2e 中的底层命令，根据其文档，它会将解析结果保存在 \u003ccode\u003e\\filename@area\u003c/code\u003e, \u003ccode\u003e\\filename@base\u003c/code\u003e, \u003ccode\u003e\\filename@ext\u003c/code\u003e 三个宏当中。在 \u003ccode\u003e\\filename@parse\u003c/code\u003e 的定义中，解析扩展名是通过利用 TeX 的宏定义式的技巧来实现的：\u003c/p\u003e\n\u003cfigure class=\"highlight tex\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"keyword\"\u003e\\def\u003c/span\u003e\u003cspan class=\"keyword\"\u003e\\filename@simple\u003c/span\u003e\u003cspan class=\"params\"\u003e#1\u003c/span\u003e.\u003cspan class=\"params\"\u003e#2\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e在调用 \u003ccode\u003e\\filename@simple\u003c/code\u003e 时，会将遇到的第一个 \u003ccode\u003e.\u003c/code\u003e 之前的内容当做 \u003ccode\u003e#1\u003c/code\u003e 而把 \u003ccode\u003e.\u003c/code\u003e 之后的内容当做 \u003ccode\u003e#2\u003c/code\u003e。这个 \u003ccode\u003e#2\u003c/code\u003e 最后被保存在了 \u003ccode\u003e\\filename@ext\u003c/code\u003e 当中，作为文件扩展名。\u003c/p\u003e\n\u003ch2 id=\"解决办法\"\u003e\u003ca href=\"#解决办法\" class=\"headerlink\" title=\"解决办法\"\u003e\u003c/a\u003e解决办法\u003c/h2\u003e\u003cp\u003e了解了问题的根源，解决起来就容易了。\u003c/p\u003e\n\u003cp\u003e最简单的绕过办法，是保持图片文件的文件名当中只有一个句点，用于区分文件名及其扩展名。这样 TeX 就不会被误导了。例如，将 MWE 中的文件名从 \u003ccode\u003efoo.bar.png\u003c/code\u003e 改为 \u003ccode\u003efoo_bar.png\u003c/code\u003e，再尝试于 LaTeX 当中插入。\u003c/p\u003e\n\u003cp\u003e如果不想修改文件名，那么可以利用 TeX 的分组，将真实的文件名包裹在一对分组花括号当中。也就是写成形如这样的代码 \u003ccode\u003e{foo.bar}.png\u003c/code\u003e。这样，在 \u003ccode\u003e\\filename@simple\u003c/code\u003e 处理参数的过程中，由于 \u003ccode\u003efoo.bar\u003c/code\u003e 被放在一个分组当中，整个被当成是一个 token，因而不会被打散，也因而能解析到正确的扩展名 \u003ccode\u003epng\u003c/code\u003e。\u003c/p\u003e\n\n    \u003c/div\u003e",
  "Date": "2019-01-27T11:04:27Z",
  "Author": "Liam Huang"
}