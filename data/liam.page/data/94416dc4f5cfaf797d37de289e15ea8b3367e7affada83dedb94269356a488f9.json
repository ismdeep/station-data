{
  "Source": "liam.page",
  "Title": "在 Tmux 创建 window 或 pane 之后执行命令",
  "Link": "https://liam.page/2019/03/07/execute-command-after-create-new-window-or-pane-in-Tmux/",
  "Content": "\u003cdiv class=\"post-body\" itemprop=\"articleBody\"\u003e\n\n      \n        \u003cblockquote\u003e\n\u003cp\u003e这是一篇简单的记录。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003e最近在服务器上安装 Tmux，但每次新建 window 或 pane 之后，不会加载 \u003ccode\u003e.bashrc\u003c/code\u003e 中的内容。这大概与机器上默认的 login shell 的配置有关。一瞬间，脑海里想到的有两种解法。\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e修改 Tmux 默认启动的 shell；\u003c/li\u003e\n\u003cli\u003e在 Tmux 创建 window 或 pane 之后执行命令，\u003ccode\u003esource ~/.bashrc\u003c/code\u003e。\u003c/li\u003e\n\u003c/ul\u003e\n\u003cspan id=\"more\"\u003e\u003c/span\u003e\n\n\u003cp\u003e前一种解法不难，但只有这单一的用处。修改 \u003ccode\u003e~/.tmux.conf\u003c/code\u003e：\u003c/p\u003e\n\u003cfigure class=\"highlight bash\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003eset-option -g default-shell \u003cspan class=\"string\"\u003e\u0026#34;/bin/bash\u0026#34;\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e后一种解法就灵活多了。具体就是在 \u003ccode\u003esplit-window\u003c/code\u003e 或者 \u003ccode\u003enew-window\u003c/code\u003e 之后向 shell 发送命令。修改 \u003ccode\u003e~/.tmux.conf\u003c/code\u003e：\u003c/p\u003e\n\u003cfigure class=\"highlight bash\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"built_in\"\u003ebind\u003c/span\u003e c new-window \\; send-keys \u003cspan class=\"string\"\u003e\u0026#34;source ~/.bashrc; clear\u0026#34;\u003c/span\u003e Enter\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"built_in\"\u003ebind\u003c/span\u003e - splitw -v \\; send-keys \u003cspan class=\"string\"\u003e\u0026#34;source ~/.bashrc; clear\u0026#34;\u003c/span\u003e Enter\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"built_in\"\u003ebind\u003c/span\u003e | splitw -h \\; send-keys \u003cspan class=\"string\"\u003e\u0026#34;source ~/.bashrc; clear\u0026#34;\u003c/span\u003e Enter\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e此处我将 \u003ccode\u003eprefix + c\u003c/code\u003e 绑定为产生新 window 的快捷键，而后向 shell 发送 \u003ccode\u003esource ~/.bashrc; clear\u003c/code\u003e 的命令并回车。\u003ccode\u003eprefix + -\u003c/code\u003e 和 \u003ccode\u003eprefox + |\u003c/code\u003e 则分别被设置为纵向和横向分割 window 产生新的 pane，同样会发送相关命令到 shell。如此一来，前述问题就解决了。\u003c/p\u003e\n\n    \u003c/div\u003e",
  "Date": "2019-03-07T07:19:32Z",
  "Author": "Liam Huang"
}