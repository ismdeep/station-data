{
  "Source": "liam.page",
  "Title": "PIL 简明教程 - 基本用法",
  "Link": "https://liam.page/2015/04/22/pil-tutorial-basic-usage/",
  "Content": "\u003cdiv class=\"post-body\" itemprop=\"articleBody\"\u003e\n\n      \n        \u003cp\u003e这是系列文章的第一篇，参见\u003ca href=\"/series\"\u003e系列\u003c/a\u003e中的相关内容。\u003c/p\u003e\n\u003cp\u003ePIL (Python Image Library) 是 Python 平台处理图片的事实标准，兼具强大的功能和简洁的 API。这篇文章将从 PIL 的安装开始，介绍 PIL 的基本情况和基本用法。\u003c/p\u003e\n\u003cspan id=\"more\"\u003e\u003c/span\u003e\n\n\u003ch2 id=\"安装\"\u003e\u003ca href=\"#安装\" class=\"headerlink\" title=\"安装\"\u003e\u003c/a\u003e安装\u003c/h2\u003e\u003cp\u003e虽然本篇介绍的是 PIL，但实际上安装的却是 Pillow。PIL 的更新速度很慢，而且存在一些难以配置的问题，不推荐使用；而 Pillow 库则是 PIL 的一个分支，维护和开发活跃，Pillow 兼容 PIL 的绝大多数语法，推荐使用。\u003c/p\u003e\n\u003cp\u003e在安装 Pillow 之前，需要安装好一些开源库。对于 Mac OS X 而言，可以用 HomeBrew 来安装：\u003c/p\u003e\n\u003cfigure class=\"highlight bash\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003esudo \u003cspan class=\"built_in\"\u003echown\u003c/span\u003e -R \u003cspan class=\"variable\"\u003e$USER\u003c/span\u003e:admin /usr/local\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003ebrew install libtiff libjpeg libpng webp little-cms2 freetype\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003esudo pip install Pillow\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e安装好之后，打开 Python 解释器，输入 \u003ccode\u003efrom PIL import Image\u003c/code\u003e 来测试是否安装成功。\u003c/p\u003e\n\u003ch2 id=\"新建一个-Image-类的实例\"\u003e\u003ca href=\"#新建一个-Image-类的实例\" class=\"headerlink\" title=\"新建一个 Image 类的实例\"\u003e\u003c/a\u003e新建一个 \u003ccode\u003eImage\u003c/code\u003e 类的实例\u003c/h2\u003e\u003cp\u003ePIL 的主要功能定义在 \u003ccode\u003eImage\u003c/code\u003e 类当中，而 \u003ccode\u003eImage\u003c/code\u003e 类定义在同名的 \u003ccode\u003eImage\u003c/code\u003e 模块当中。使用 PIL 的功能，一般都是从新建一个 \u003ccode\u003eImage\u003c/code\u003e 类的实例开始。新建 \u003ccode\u003eImage\u003c/code\u003e 类的实例有多种方法。你可以用 \u003ccode\u003eImage\u003c/code\u003e 模块的 \u003ccode\u003eopen()\u003c/code\u003e 函数打开已有的图片档案，也可以处理其它的实例，或者从零开始构建一个实例。\u003c/p\u003e\n\u003cfigure class=\"highlight python\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"keyword\"\u003efrom\u003c/span\u003e PIL \u003cspan class=\"keyword\"\u003eimport\u003c/span\u003e Image\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003esourceFileName = \u003cspan class=\"string\"\u003e\u0026#34;source.png\u0026#34;\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eavatar         = Image.\u003cspan class=\"built_in\"\u003eopen\u003c/span\u003e(sourceFileName)\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e上述代码引入了 Image 模块，并以 \u003ccode\u003eopen()\u003c/code\u003e 方法打开了 \u003ccode\u003esource.png\u003c/code\u003e 这个图像，构建了名为 \u003ccode\u003eavatar\u003c/code\u003e 的实例。如果打开失败，则会抛出 \u003ccode\u003eIOError\u003c/code\u003e 异常。\u003c/p\u003e\n\u003cp\u003e接下来你可以使用 \u003ccode\u003eshow()\u003c/code\u003e 方法来查看实例。注意，PIL 会将实例暂存为一个临时文件，而后打开它。\u003c/p\u003e\n\u003cfigure class=\"highlight python\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003eavatar.show()\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e\u003cimg data-src=\"//liam.page/attachment/attachment/images/Python/pil-tutorial/Image_show.png\" alt=\"使用 `show()` 方法查看实例的内容 \"/\u003e\u003c/p\u003e\n\u003ch2 id=\"查看实例的属性\"\u003e\u003ca href=\"#查看实例的属性\" class=\"headerlink\" title=\"查看实例的属性\"\u003e\u003c/a\u003e查看实例的属性\u003c/h2\u003e\u003cp\u003e\u003ccode\u003eImage\u003c/code\u003e 类的实例有 5 个属性，分别是：\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003eformat\u003c/code\u003e: 以 \u003ccode\u003estring\u003c/code\u003e 返回图片档案的格式（\u003ccode\u003eJPG\u003c/code\u003e, \u003ccode\u003ePNG\u003c/code\u003e, \u003ccode\u003eBMP\u003c/code\u003e, \u003ccode\u003eNone\u003c/code\u003e, etc.）；如果不是从打开文件得到的实例，则返回 \u003ccode\u003eNone\u003c/code\u003e。\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003emode\u003c/code\u003e: 以 \u003ccode\u003estring\u003c/code\u003e 返回图片的模式（RGB, CMYK, etc.）；完整的列表参见 \u003ca target=\"_blank\" rel=\"noopener\" href=\"http://effbot.org/imagingbook/concepts.htm#mode\"\u003e官方说明·图片模式列表\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003esize\u003c/code\u003e: 以二元 tuple 返回图片档案的尺寸 (width, height)\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003epalette\u003c/code\u003e: 仅当 \u003ccode\u003emode\u003c/code\u003e 为 \u003ccode\u003eP\u003c/code\u003e 时有效，返回 \u003ccode\u003eImagePalette\u003c/code\u003e 示例\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003einfo\u003c/code\u003e: 以字典形式返回示例的信息\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e我们接着上面的代码：\u003c/p\u003e\n\u003cfigure class=\"highlight python\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"built_in\"\u003eprint\u003c/span\u003e avatar.\u003cspan class=\"built_in\"\u003eformat\u003c/span\u003e, avatar.size, avatar.mode\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e\u003cimg data-src=\"//liam.page/attachment/attachment/images/Python/pil-tutorial/Image_attrib.png\" alt=\"查看示例的属性 \"/\u003e\u003c/p\u003e\n\u003cp\u003e这里我们看到返回了图片的格式 \u003ccode\u003ePNG\u003c/code\u003e、图片的大小 \u003ccode\u003e(400, 400)\u003c/code\u003e 和图片的模式 \u003ccode\u003eRGB\u003c/code\u003e。\u003c/p\u003e\n\u003ch2 id=\"实例的方法\"\u003e\u003ca href=\"#实例的方法\" class=\"headerlink\" title=\"实例的方法\"\u003e\u003c/a\u003e实例的方法\u003c/h2\u003e\u003cp\u003e\u003ccode\u003eImage\u003c/code\u003e 类定义了许多方法，这里无法一一列出（也无必要）。如果有需要，可以参看 \u003ca target=\"_blank\" rel=\"noopener\" href=\"http://effbot.org/imagingbook/image.htm\"\u003e官方说明·\u003ccode\u003eImage\u003c/code\u003e 模块\u003c/a\u003e。这里仅列出几个有趣的应用。\u003c/p\u003e\n\u003ch3 id=\"图片-IO-转换图片格式\"\u003e\u003ca href=\"#图片-IO-转换图片格式\" class=\"headerlink\" title=\"图片 IO - 转换图片格式\"\u003e\u003c/a\u003e图片 IO - 转换图片格式\u003c/h3\u003e\u003cp\u003e\u003ccode\u003eImage\u003c/code\u003e 模块提供了 \u003ccode\u003eopen()\u003c/code\u003e 函数打开图片档案，\u003ccode\u003eImage\u003c/code\u003e 类则提供了 \u003ccode\u003esave()\u003c/code\u003e 方法将图片实例保存为图片档案。\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003esave()\u003c/code\u003e 函数可以以特定的图片格式保存图片档案。比如 \u003ccode\u003esave(\u0026#39;target.jpg\u0026#39;, \u0026#39;JPG\u0026#39;)\u003c/code\u003e 将会以 \u003ccode\u003eJPG\u003c/code\u003e 格式将图片示例保存为 \u003ccode\u003etarget.jpg\u003c/code\u003e。不过，大多数时候也可以省略图片格式。此时，\u003ccode\u003esave()\u003c/code\u003e 方法会根据文件扩展名来选择相应的图片格式。\u003c/p\u003e\n\u003cp\u003e我们以一个转换图片格式的脚本进行分析。\u003c/p\u003e\n\u003cfigure class=\"highlight python\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e8\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e9\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e10\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e11\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"keyword\"\u003eimport\u003c/span\u003e os, sys\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"keyword\"\u003efrom\u003c/span\u003e PIL \u003cspan class=\"keyword\"\u003eimport\u003c/span\u003e Image\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"keyword\"\u003efor\u003c/span\u003e infile \u003cspan class=\"keyword\"\u003ein\u003c/span\u003e sys.argv[\u003cspan class=\"number\"\u003e1\u003c/span\u003e:]:\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    f, e = os.path.splitext(infile)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    outfile = f + \u003cspan class=\"string\"\u003e\u0026#34;.jpg\u0026#34;\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"keyword\"\u003eif\u003c/span\u003e infile != outfile:\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        \u003cspan class=\"keyword\"\u003etry\u003c/span\u003e:\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e            Image.\u003cspan class=\"built_in\"\u003eopen\u003c/span\u003e(infile).save(outfile)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        \u003cspan class=\"keyword\"\u003eexcept\u003c/span\u003e IOError:\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e            \u003cspan class=\"built_in\"\u003eprint\u003c/span\u003e \u003cspan class=\"string\"\u003e\u0026#34;cannot convert\u0026#34;\u003c/span\u003e, infile\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e这里，\u003ccode\u003ef\u003c/code\u003e 是除去扩展名之外的文件名。在 \u003ccode\u003etry\u003c/code\u003e 语句中，我们尝试打开图片档案，然后以 \u003ccode\u003e.jpg\u003c/code\u003e 为扩展名保存图片档案。\u003ccode\u003esave()\u003c/code\u003e 方法会根据扩展名，将图片以 \u003ccode\u003eJPG\u003c/code\u003e 格式保存为档案。如果图片档案无法打开，则在终端上打印无法转换的消息。\u003c/p\u003e\n\u003ch3 id=\"制作缩略图\"\u003e\u003ca href=\"#制作缩略图\" class=\"headerlink\" title=\"制作缩略图\"\u003e\u003c/a\u003e制作缩略图\u003c/h3\u003e\u003cp\u003e\u003ccode\u003eImage\u003c/code\u003e 类的 \u003ccode\u003ethumbnail()\u003c/code\u003e 方法可以用来制作缩略图。它接受一个二元数组作为缩略图的尺寸，然后将示例缩小到指定尺寸。\u003c/p\u003e\n\u003cfigure class=\"highlight python\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e8\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e9\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e10\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e11\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e12\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e13\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"keyword\"\u003eimport\u003c/span\u003e os, sys\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"keyword\"\u003efrom\u003c/span\u003e PIL \u003cspan class=\"keyword\"\u003eimport\u003c/span\u003e Image\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"keyword\"\u003efor\u003c/span\u003e infile \u003cspan class=\"keyword\"\u003ein\u003c/span\u003e sys.argv[\u003cspan class=\"number\"\u003e1\u003c/span\u003e:]:\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    outfile = os.path.splitext(infile)[\u003cspan class=\"number\"\u003e0\u003c/span\u003e] + \u003cspan class=\"string\"\u003e\u0026#34;.thumbnail\u0026#34;\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"keyword\"\u003eif\u003c/span\u003e infile != outfile:\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        \u003cspan class=\"keyword\"\u003etry\u003c/span\u003e:\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e            im   = Image.\u003cspan class=\"built_in\"\u003eopen\u003c/span\u003e(infile)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e            x, y = im.size\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e            im.thumbnail((x//\u003cspan class=\"number\"\u003e2\u003c/span\u003e, y//\u003cspan class=\"number\"\u003e2\u003c/span\u003e))\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e            im.save(outfile, \u003cspan class=\"string\"\u003e\u0026#34;JPEG\u0026#34;\u003c/span\u003e)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        \u003cspan class=\"keyword\"\u003eexcept\u003c/span\u003e IOError:\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e            \u003cspan class=\"built_in\"\u003eprint\u003c/span\u003e \u003cspan class=\"string\"\u003e\u0026#34;cannot create thumbnail for\u0026#34;\u003c/span\u003e, infile\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e这里我们用 \u003ccode\u003eim.size\u003c/code\u003e 获取原图档的尺寸，然后以 \u003ccode\u003ethumbnail()\u003c/code\u003e 制作缩略图，大小则是原先图档的四分之一。同样，如果图档无法打开，则在终端上打印无法执行的提示。\u003c/p\u003e\n\u003ch3 id=\"剪裁图档\"\u003e\u003ca href=\"#剪裁图档\" class=\"headerlink\" title=\"剪裁图档\"\u003e\u003c/a\u003e剪裁图档\u003c/h3\u003e\u003cp\u003e以前也写过 \u003ca target=\"_blank\" rel=\"noopener\" href=\"http://liam0205.me/2014/01/27/Py-Incise-Images/\"\u003e一篇博客\u003c/a\u003e，讲述如何用 PIL 批量剪裁图档，供参考。\u003c/p\u003e\n\u003ch3 id=\"变形与粘贴\"\u003e\u003ca href=\"#变形与粘贴\" class=\"headerlink\" title=\"变形与粘贴\"\u003e\u003c/a\u003e变形与粘贴\u003c/h3\u003e\u003cp\u003e\u003ccode\u003etranspose()\u003c/code\u003e 方法可以将图片左右颠倒、上下颠倒、旋转 90°、旋转 180° 或旋转 270°。\u003ccode\u003epaste()\u003c/code\u003e 方法则可以将一个 \u003ccode\u003eImage\u003c/code\u003e 示例粘贴到另一个 \u003ccode\u003eImage\u003c/code\u003e 示例上。\u003c/p\u003e\n\u003cp\u003e我们尝试将一张图片的左半部分截取下来，左右颠倒之后旋转 180°；将图片的右半边不作更改粘贴到左半部分；最后将修改过的左半部分粘贴到右半部分。\u003c/p\u003e\n\u003cfigure class=\"highlight python\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e8\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e9\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e10\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e11\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e12\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e13\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e14\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e15\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e16\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e17\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e18\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e19\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e20\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e21\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e22\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e23\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e24\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e25\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e26\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e27\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e28\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e29\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e30\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e31\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e32\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"keyword\"\u003efrom\u003c/span\u003e PIL \u003cspan class=\"keyword\"\u003eimport\u003c/span\u003e Image\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eimageFName = \u003cspan class=\"string\"\u003e\u0026#39;source.png\u0026#39;\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"keyword\"\u003edef\u003c/span\u003e \u003cspan class=\"title function_\"\u003eiamge_transpose\u003c/span\u003e(\u003cspan class=\"params\"\u003eimage\u003c/span\u003e):\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"string\"\u003e\u0026#39;\u0026#39;\u0026#39;\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"string\"\u003e        Input: a Image instance\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"string\"\u003e        Output: a transposed Image instance\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"string\"\u003e        Function:\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"string\"\u003e            * switches the left and the right part of a Image instance\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"string\"\u003e            * for the left part of the original instance, flips left and right\\\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"string\"\u003e                and then make it upside down.\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"string\"\u003e    \u0026#39;\u0026#39;\u0026#39;\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    xsize, ysize = image.size\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    xsizeLeft    = xsize // \u003cspan class=\"number\"\u003e2\u003c/span\u003e \u003cspan class=\"comment\"\u003e# while xsizeRight = xsize - xsizeLeft\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    boxLeft      = (\u003cspan class=\"number\"\u003e0\u003c/span\u003e, \u003cspan class=\"number\"\u003e0\u003c/span\u003e, xsizeLeft, ysize)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    boxRight     = (xsizeLeft, \u003cspan class=\"number\"\u003e0\u003c/span\u003e, xsize, ysize)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    boxLeftNew   = (\u003cspan class=\"number\"\u003e0\u003c/span\u003e, \u003cspan class=\"number\"\u003e0\u003c/span\u003e, xsize - xsizeLeft, ysize)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    boxRightNew  = (xsize - xsizeLeft, \u003cspan class=\"number\"\u003e0\u003c/span\u003e, xsize, ysize)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    partLeft     = image.crop(boxLeft).transpose(Image.FLIP_LEFT_RIGHT).\\\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        transpose(Image.ROTATE_180)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    partRight    = image.crop(boxRight)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    image.paste(partRight, boxLeftNew)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    image.paste(partLeft, boxRightNew)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"keyword\"\u003ereturn\u003c/span\u003e image\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eavatar = Image.\u003cspan class=\"built_in\"\u003eopen\u003c/span\u003e(imageFName)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eavatar = iamge_transpose(avatar)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eavatar.show()\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e\u003ccode\u003eimage_transpose()\u003c/code\u003e 函数定义之前的部分很简单，而函数本身也由文档叙述得比较清楚。\u003c/p\u003e\n\u003cp\u003e这里我们以 \u003ccode\u003exsize\u003c/code\u003e 和 \u003ccode\u003eysize\u003c/code\u003e 接收图片的宽和高，然后以 \u003ccode\u003exsizeLeft\u003c/code\u003e 计算得到左半边图片的大小。需要注意的是，我们构建了四个元组，并命名为盒子。这个盒子用直角坐标的值在 \u003ccode\u003eimage\u003c/code\u003e 的画布上框定了一个区域。注意，\u003ccode\u003eImage\u003c/code\u003e 模块以图片的左上角为直角坐标原点，向右为 \u003ccode\u003ex\u003c/code\u003e 轴正方向，向下为 \u003ccode\u003ey\u003c/code\u003e 轴正方向。元组中的前两个数，代表区域左上角的坐标值；后两个数代表区域右下角的坐标值。\u003c/p\u003e\n\u003cp\u003e接下来的代码相当易懂。我们先用 \u003ccode\u003ecrop()\u003c/code\u003e 方法将原图 \u003ccode\u003eboxLeft\u003c/code\u003e 的区域（也就是原图的左半边）切下来，然后用 \u003ccode\u003etranspose()\u003c/code\u003e 方法先后进行左右颠倒和旋转 180° 的工作，并最周公将它保存在 \u003ccode\u003epartLeft\u003c/code\u003e 这个实例中。而 \u003ccode\u003epartRight\u003c/code\u003e 的操作更为简单。\u003c/p\u003e\n\u003cp\u003e函数的最后，我们用 \u003ccode\u003epaste()\u003c/code\u003e 方法，将前两步得到的 \u003ccode\u003epartLeft\u003c/code\u003e 和 \u003ccode\u003epartRight\u003c/code\u003e 分别粘贴到指定的区域；并最终返回 \u003ccode\u003eimage\u003c/code\u003e 示例。\u003c/p\u003e\n\u003cp\u003e代码片段的最后，我们用 \u003ccode\u003eshow()\u003c/code\u003e 方法展示图片。\u003c/p\u003e\n\u003cp\u003e\u003cimg data-src=\"//liam.page/attachment/attachment/images/Python/pil-tutorial/transpose_paste.png\" alt=\"变形和旋转 \"/\u003e\u003c/p\u003e\n\n    \u003c/div\u003e",
  "Date": "2015-04-22T09:46:31Z",
  "Author": "Liam Huang"
}