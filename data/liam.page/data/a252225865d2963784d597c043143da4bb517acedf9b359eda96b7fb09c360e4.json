{
  "Source": "liam.page",
  "Title": "在 C++ 中的 switch-case 语句中使用 C 风格字符串",
  "Link": "https://liam.page/2018/11/05/apply-C-style-string-in-switch-case-clause/",
  "Content": "\u003cdiv class=\"post-body\" itemprop=\"articleBody\"\u003e\n\n      \n        \u003cp\u003e众所周知，C/C++ 语言中的 \u003ccode\u003eswitch\u003c/code\u003e-\u003ccode\u003ecase\u003c/code\u003e 语句只支持整型数字的逻辑分支。因此，当我们需要对整型数字之外的变量进行分支判断时，就只能依赖 \u003ccode\u003eif\u003c/code\u003e-\u003ccode\u003eelse\u003c/code\u003e 语句了。例如：\u003c/p\u003e\n\u003cfigure class=\"highlight cpp\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"keyword\"\u003eif\u003c/span\u003e (policy == \u003cspan class=\"string\"\u003e\u0026#34;SINGLE\u0026#34;\u003c/span\u003e) {\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    ;  \u003cspan class=\"comment\"\u003e// do something\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e} \u003cspan class=\"keyword\"\u003eelse\u003c/span\u003e \u003cspan class=\"keyword\"\u003eif\u003c/span\u003e (policy == \u003cspan class=\"string\"\u003e\u0026#34;MULTIPLE\u0026#34;\u003c/span\u003e) {\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    ;  \u003cspan class=\"comment\"\u003e// do something\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e} \u003cspan class=\"keyword\"\u003eelse\u003c/span\u003e {  \u003cspan class=\"comment\"\u003e// UNSPECIFIED\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    ;  \u003cspan class=\"comment\"\u003e// do something\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e}\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e这种情况下，虽然我们用 \u003ccode\u003eif\u003c/code\u003e-\u003ccode\u003eelse\u003c/code\u003e 语句实现了类似 \u003ccode\u003eswitch\u003c/code\u003e-\u003ccode\u003ecase\u003c/code\u003e 语句的功能。但一方面写起来未免麻烦，分支多了难以维护；另一方面如果分支很多，那么执行起来需要注意进行字符串相等性判断，效率很低。因此，这篇文章尝试通过一些取巧的方式来解决这个问题。\u003c/p\u003e\n\u003cspan id=\"more\"\u003e\u003c/span\u003e\n\n\u003ch2 id=\"HASH\"\u003e\u003ca href=\"#HASH\" class=\"headerlink\" title=\"HASH\"\u003e\u003c/a\u003eHASH\u003c/h2\u003e\u003cp\u003e无论如何，语言层面的 \u003ccode\u003eswtch\u003c/code\u003e-\u003ccode\u003ecase\u003c/code\u003e 限制是绕不开的。因此，我们需要找到一个有效的办法，将字符串与整形数字对应起来。虽然不甚完美，但是 Hash 是一种解决办法。于是我们针对 C 风格的字符串定义 Hash 函数。\u003c/p\u003e\n\u003cfigure class=\"highlight cpp\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e8\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e9\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e10\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e11\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e12\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e13\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e14\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e15\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"keyword\"\u003eusing\u003c/span\u003e \u003cspan class=\"type\"\u003ehash_t\u003c/span\u003e = \u003cspan class=\"type\"\u003esize_t\u003c/span\u003e;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"keyword\"\u003econstexpr\u003c/span\u003e \u003cspan class=\"type\"\u003ehash_t\u003c/span\u003e prime = \u003cspan class=\"number\"\u003e0x100000001B3\u003c/span\u003eull;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"keyword\"\u003econstexpr\u003c/span\u003e \u003cspan class=\"type\"\u003ehash_t\u003c/span\u003e basis = \u003cspan class=\"number\"\u003e0xCBF29CE484222325\u003c/span\u003eull;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"function\"\u003e\u003cspan class=\"type\"\u003ehash_t\u003c/span\u003e \u003cspan class=\"title\"\u003ehash_run_time\u003c/span\u003e\u003cspan class=\"params\"\u003e(\u003cspan class=\"type\"\u003econst\u003c/span\u003e \u003cspan class=\"type\"\u003echar\u003c/span\u003e* str)\u003c/span\u003e \u003c/span\u003e{\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"type\"\u003ehash_t\u003c/span\u003e ret = basis;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"keyword\"\u003ewhile\u003c/span\u003e (*str) {\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        ret ^= *str;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        ret *= prime;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        str++;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    }\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"keyword\"\u003ereturn\u003c/span\u003e ret;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e}\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e如此，我们「似乎」便可以针对字符串使用 \u003ccode\u003eswitch\u003c/code\u003e-\u003ccode\u003ecase\u003c/code\u003e 语句了。\u003c/p\u003e\n\u003cfigure class=\"highlight cpp\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e8\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e9\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e10\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e11\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e12\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e13\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e14\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e15\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"function\"\u003e\u003cspan class=\"type\"\u003evoid\u003c/span\u003e \u003cspan class=\"title\"\u003esimple_switch\u003c/span\u003e\u003cspan class=\"params\"\u003e(\u003cspan class=\"type\"\u003econst\u003c/span\u003e \u003cspan class=\"type\"\u003echar\u003c/span\u003e* str)\u003c/span\u003e \u003c/span\u003e{\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"keyword\"\u003eswitch\u003c/span\u003e (\u003cspan class=\"built_in\"\u003ehash_run_time\u003c/span\u003e(str)) {\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        \u003cspan class=\"function\"\u003e\u003cspan class=\"keyword\"\u003ecase\u003c/span\u003e \u003cspan class=\"title\"\u003ehash_run_time\u003c/span\u003e\u003cspan class=\"params\"\u003e(\u003cspan class=\"string\"\u003e\u0026#34;first\u0026#34;\u003c/span\u003e)\u003c/span\u003e:\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"function\"\u003e            std::cout \u0026lt;\u0026lt; \u003cspan class=\"string\"\u003e\u0026#34;1st\u0026#34;\u003c/span\u003e \u0026lt;\u0026lt; std::endl;\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e            \u003cspan class=\"keyword\"\u003ebreak\u003c/span\u003e;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        \u003cspan class=\"function\"\u003e\u003cspan class=\"keyword\"\u003ecase\u003c/span\u003e \u003cspan class=\"title\"\u003ehash_run_time\u003c/span\u003e\u003cspan class=\"params\"\u003e(\u003cspan class=\"string\"\u003e\u0026#34;second\u0026#34;\u003c/span\u003e)\u003c/span\u003e:\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"function\"\u003e            std::cout \u0026lt;\u0026lt; \u003cspan class=\"string\"\u003e\u0026#34;2nd\u0026#34;\u003c/span\u003e \u0026lt;\u0026lt; std::endl;\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e            \u003cspan class=\"keyword\"\u003ebreak\u003c/span\u003e;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        \u003cspan class=\"function\"\u003e\u003cspan class=\"keyword\"\u003ecase\u003c/span\u003e \u003cspan class=\"title\"\u003ehash_run_time\u003c/span\u003e\u003cspan class=\"params\"\u003e(\u003cspan class=\"string\"\u003e\u0026#34;third\u0026#34;\u003c/span\u003e)\u003c/span\u003e:\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"function\"\u003e            std::cout \u0026lt;\u0026lt; \u003cspan class=\"string\"\u003e\u0026#34;3rd\u0026#34;\u003c/span\u003e \u0026lt;\u0026lt; std::endl;\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e            \u003cspan class=\"keyword\"\u003ebreak\u003c/span\u003e;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        \u003cspan class=\"keyword\"\u003edefault\u003c/span\u003e:\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e            std::cout \u0026lt;\u0026lt; \u003cspan class=\"string\"\u003e\u0026#34;Default...\u0026#34;\u003c/span\u003e \u0026lt;\u0026lt; std::endl;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    }\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e}\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003ch2 id=\"constexpr-函数\"\u003e\u003ca href=\"#constexpr-函数\" class=\"headerlink\" title=\"constexpr 函数\"\u003e\u003c/a\u003e\u003ccode\u003econstexpr\u003c/code\u003e 函数\u003c/h2\u003e\u003cp\u003e然而，如果你编译这段代码，编译器就会提醒你在 \u003ccode\u003ecase\u003c/code\u003e 处必须使用常量表达式。因此，对于 \u003ccode\u003ecase\u003c/code\u003e 的分支选项，我们不仅要将他们转换为整型 \u003ccode\u003ehash_t\u003c/code\u003e，还必须保证它们在编译期就能运算完成，从而作为常量表达式。考虑到，在 C++11 中常量表达式函数必须只能有一个 \u003ccode\u003ereturn\u003c/code\u003e 语句（在 C++14 之后就没有这个限制了），因此我们需要借助 C++ 中的三元运算符 \u003ccode\u003e?:\u003c/code\u003e 将 \u003ccode\u003ehash_run_time\u003c/code\u003e 函数改造为递归形式。\u003c/p\u003e\n\u003cfigure class=\"highlight cpp\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"function\"\u003e\u003cspan class=\"keyword\"\u003econstexpr\u003c/span\u003e \u003cspan class=\"type\"\u003ehash_t\u003c/span\u003e \u003cspan class=\"title\"\u003ehash_compile_time\u003c/span\u003e\u003cspan class=\"params\"\u003e(\u003cspan class=\"type\"\u003econst\u003c/span\u003e \u003cspan class=\"type\"\u003echar\u003c/span\u003e* str, \u003cspan class=\"type\"\u003ehash_t\u003c/span\u003e last_value = basis)\u003c/span\u003e \u003c/span\u003e{\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"keyword\"\u003ereturn\u003c/span\u003e *str ? \u003cspan class=\"built_in\"\u003ehash_compile_time\u003c/span\u003e(str + \u003cspan class=\"number\"\u003e1\u003c/span\u003e, (*str ^ last_value) * prime) : last_value;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e}\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e同时，\u003ccode\u003esimple_switch\u003c/code\u003e 函数也需要改造一下：\u003c/p\u003e\n\u003cfigure class=\"highlight cpp\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e8\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e9\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e10\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e11\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e12\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e13\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e14\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e15\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"function\"\u003e\u003cspan class=\"type\"\u003evoid\u003c/span\u003e \u003cspan class=\"title\"\u003esimple_switch\u003c/span\u003e\u003cspan class=\"params\"\u003e(\u003cspan class=\"type\"\u003econst\u003c/span\u003e \u003cspan class=\"type\"\u003echar\u003c/span\u003e* str)\u003c/span\u003e \u003c/span\u003e{\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"keyword\"\u003eswitch\u003c/span\u003e (\u003cspan class=\"built_in\"\u003ehash_run_time\u003c/span\u003e(str)) {\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        \u003cspan class=\"function\"\u003e\u003cspan class=\"keyword\"\u003ecase\u003c/span\u003e \u003cspan class=\"title\"\u003ehash_compile_time\u003c/span\u003e\u003cspan class=\"params\"\u003e(\u003cspan class=\"string\"\u003e\u0026#34;first\u0026#34;\u003c/span\u003e)\u003c/span\u003e:\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"function\"\u003e            std::cout \u0026lt;\u0026lt; \u003cspan class=\"string\"\u003e\u0026#34;1st\u0026#34;\u003c/span\u003e \u0026lt;\u0026lt; std::endl;\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e            \u003cspan class=\"keyword\"\u003ebreak\u003c/span\u003e;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        \u003cspan class=\"function\"\u003e\u003cspan class=\"keyword\"\u003ecase\u003c/span\u003e \u003cspan class=\"title\"\u003ehash_compile_time\u003c/span\u003e\u003cspan class=\"params\"\u003e(\u003cspan class=\"string\"\u003e\u0026#34;second\u0026#34;\u003c/span\u003e)\u003c/span\u003e:\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"function\"\u003e            std::cout \u0026lt;\u0026lt; \u003cspan class=\"string\"\u003e\u0026#34;2nd\u0026#34;\u003c/span\u003e \u0026lt;\u0026lt; std::endl;\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e            \u003cspan class=\"keyword\"\u003ebreak\u003c/span\u003e;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        \u003cspan class=\"function\"\u003e\u003cspan class=\"keyword\"\u003ecase\u003c/span\u003e \u003cspan class=\"title\"\u003ehash_compile_time\u003c/span\u003e\u003cspan class=\"params\"\u003e(\u003cspan class=\"string\"\u003e\u0026#34;third\u0026#34;\u003c/span\u003e)\u003c/span\u003e:\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"function\"\u003e            std::cout \u0026lt;\u0026lt; \u003cspan class=\"string\"\u003e\u0026#34;3rd\u0026#34;\u003c/span\u003e \u0026lt;\u0026lt; std::endl;\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e            \u003cspan class=\"keyword\"\u003ebreak\u003c/span\u003e;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        \u003cspan class=\"keyword\"\u003edefault\u003c/span\u003e:\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e            std::cout \u0026lt;\u0026lt; \u003cspan class=\"string\"\u003e\u0026#34;Default...\u0026#34;\u003c/span\u003e \u0026lt;\u0026lt; std::endl;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    }\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e}\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e此时，\u003ccode\u003esimple_switch\u003c/code\u003e 函数已可通过编译。\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e事实上，用于处理输入的 \u003ccode\u003ehash_run_time\u003c/code\u003e 也可以被 \u003ccode\u003ehash_compile_time\u003c/code\u003e 替代。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003ch2 id=\"用户定义的字面值常量后缀\"\u003e\u003ca href=\"#用户定义的字面值常量后缀\" class=\"headerlink\" title=\"用户定义的字面值常量后缀\"\u003e\u003c/a\u003e用户定义的字面值常量后缀\u003c/h2\u003e\u003cp\u003e尽管此时代码已经可以通过编译并使用，但在每个 \u003ccode\u003ecase\u003c/code\u003e 处都写一个函数调用未免麻烦。于是我们需要引入\u003ca target=\"_blank\" rel=\"noopener\" href=\"https://en.cppreference.com/w/cpp/language/user_literal\"\u003e用户定义的字面值常量后缀（User-defined suffix）\u003c/a\u003e简化代码。\u003c/p\u003e\n\u003cfigure class=\"highlight cpp\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"keyword\"\u003econstexpr\u003c/span\u003e \u003cspan class=\"type\"\u003ehash_t\u003c/span\u003e \u003cspan class=\"keyword\"\u003eoperator\u003c/span\u003e \u003cspan class=\"string\"\u003e\u0026#34;\u0026#34;\u003c/span\u003e _hash(\u003cspan class=\"type\"\u003econst\u003c/span\u003e \u003cspan class=\"type\"\u003echar\u003c/span\u003e* p, \u003cspan class=\"type\"\u003esize_t\u003c/span\u003e) {\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"keyword\"\u003ereturn\u003c/span\u003e \u003cspan class=\"built_in\"\u003ehash_compile_time\u003c/span\u003e(p);\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e}\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e于是，\u003ccode\u003esimple_switch\u003c/code\u003e 函数可被简化为：\u003c/p\u003e\n\u003cfigure class=\"highlight cpp\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e8\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e9\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e10\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e11\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e12\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e13\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e14\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e15\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"function\"\u003e\u003cspan class=\"type\"\u003evoid\u003c/span\u003e \u003cspan class=\"title\"\u003esimple_switch\u003c/span\u003e\u003cspan class=\"params\"\u003e(\u003cspan class=\"type\"\u003econst\u003c/span\u003e \u003cspan class=\"type\"\u003echar\u003c/span\u003e* str)\u003c/span\u003e \u003c/span\u003e{\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"keyword\"\u003eswitch\u003c/span\u003e (\u003cspan class=\"built_in\"\u003ehash_run_time\u003c/span\u003e(str)) {\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        \u003cspan class=\"keyword\"\u003ecase\u003c/span\u003e \u003cspan class=\"string\"\u003e\u0026#34;first\u0026#34;\u003c/span\u003e_hash:\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e            std::cout \u0026lt;\u0026lt; \u003cspan class=\"string\"\u003e\u0026#34;1st\u0026#34;\u003c/span\u003e \u0026lt;\u0026lt; std::endl;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e            \u003cspan class=\"keyword\"\u003ebreak\u003c/span\u003e;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        \u003cspan class=\"keyword\"\u003ecase\u003c/span\u003e \u003cspan class=\"string\"\u003e\u0026#34;second\u0026#34;\u003c/span\u003e_hash:\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e            std::cout \u0026lt;\u0026lt; \u003cspan class=\"string\"\u003e\u0026#34;2nd\u0026#34;\u003c/span\u003e \u0026lt;\u0026lt; std::endl;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e            \u003cspan class=\"keyword\"\u003ebreak\u003c/span\u003e;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        \u003cspan class=\"keyword\"\u003ecase\u003c/span\u003e \u003cspan class=\"string\"\u003e\u0026#34;third\u0026#34;\u003c/span\u003e_hash:\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e            std::cout \u0026lt;\u0026lt; \u003cspan class=\"string\"\u003e\u0026#34;3rd\u0026#34;\u003c/span\u003e \u0026lt;\u0026lt; std::endl;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e            \u003cspan class=\"keyword\"\u003ebreak\u003c/span\u003e;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        \u003cspan class=\"keyword\"\u003edefault\u003c/span\u003e:\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e            std::cout \u0026lt;\u0026lt; \u003cspan class=\"string\"\u003e\u0026#34;Default...\u0026#34;\u003c/span\u003e \u0026lt;\u0026lt; std::endl;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    }\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e}\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e完整的测试代码可见：\u003ca target=\"_blank\" rel=\"noopener\" href=\"https://gist.github.com/25dcb10e55b3cb2306931aa277355bbf\"\u003ehttps://gist.github.com/25dcb10e55b3cb2306931aa277355bbf\u003c/a\u003e。\u003c/p\u003e\n\n    \u003c/div\u003e",
  "Date": "2018-11-05T07:18:16Z",
  "Author": "Liam Huang"
}