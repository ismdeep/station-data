{
  "Source": "liam.page",
  "Title": "设计一个线程安全的数据重载器",
  "Link": "https://liam.page/2021/01/03/design-a-thread-safe-data-reloader-in-cxx/",
  "Content": "\u003cdiv class=\"post-body\" itemprop=\"articleBody\"\u003e\n\n      \n        \u003cp\u003e实际工程中，可能会遇见这样的场景：\u003c/p\u003e\n\u003cp\u003e一个词典，在 C++ 里实现为一个 \u003ccode\u003eclass\u003c/code\u003e。它的生命周期从进程启动开始到进程杀死结束。这个词典很大，所以在多线程工作的时候，希望在全局共享一份。\u003c/p\u003e\n\u003cp\u003e现在的问题是，进程可能持续跑很长时间，比如跑几个月。在进程执行过程中，这个词典可能会更新。于是我需要重新载入词典。要求线程安全并且高效地做这个重新载入的工作。\u003c/p\u003e\n\u003cp\u003e今天我们来设计一下，要怎样实现它。\u003c/p\u003e\n\u003cspan id=\"more\"\u003e\u003c/span\u003e\n\n\u003ch2 id=\"初步讨论\"\u003e\u003ca href=\"#初步讨论\" class=\"headerlink\" title=\"初步讨论\"\u003e\u003c/a\u003e初步讨论\u003c/h2\u003e\u003cp\u003e比较显然的是，这一功能将代码分成了相对独立的两个部分：词典和重载器。词典负责数据的管理，并提供数据查询的功能。重载器负责按照一定规则，触发重载动作，以及负责提供安全的词典访问机制。\u003c/p\u003e\n\u003cp\u003e为通用计，我们希望重载器能够管理多种不同的词典。这些词典可能管理不同的数据类型、格式，也可能提供不同的访问接口。就后者而言，这意味着不同词典类可能提供了不同的查询函数签名。\u003c/p\u003e\n\u003cp\u003e为解决这个问题，考虑到重载器只需负责触发重载动作，而不需关心查询接口，在 C++ 里大体有两种比较成熟的思路：\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e实现一个基类，其名为 \u003ccode\u003eReloadable\u003c/code\u003e，并定义一个名为 \u003ccode\u003eload\u003c/code\u003e 的纯虚函数作为接口。所有词典继承 \u003ccode\u003eReloadable\u003c/code\u003e，并实现该接口，而后作为模板类 \u003ccode\u003eReloader\u003c/code\u003e 的模板参数，传递给重载器，重载器调用 \u003ccode\u003eload\u003c/code\u003e 接口。\u003c/li\u003e\n\u003cli\u003e无需基类，将词典类多种多样的读取接口，封装成各自的可调用对象（利用 \u003ccode\u003estd::bind\u003c/code\u003e 之类的工具），而后作为回调函数传递给 \u003ccode\u003eReloader\u003c/code\u003e。\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e前一种方式是面向对象和模板思路，后一种方式是函数式的思路。两种方式的共同特点，是都可以在少量修改的情况下，应用于已有的词典类。相较而言，后一种方式完全不用修改已有的词典类本身，提供了更大的自由度。\u003c/p\u003e\n\u003cp\u003e但在工程中，这种自由度累积起来，往往会泛滥成灾。因此我个人更倾向于使用第一个方案。\u003c/p\u003e\n\u003cp\u003e至此，我们需要设计一个 \u003ccode\u003eReloadable\u003c/code\u003e 和一个 \u003ccode\u003eReloader\u003c/code\u003e 类，来实现这个需求。\u003c/p\u003e\n\u003ch2 id=\"Reloadable\"\u003e\u003ca href=\"#Reloadable\" class=\"headerlink\" title=\"Reloadable\"\u003e\u003c/a\u003e\u003ccode\u003eReloadable\u003c/code\u003e\u003c/h2\u003e\u003cp\u003e按讨论，\u003ccode\u003eReloadable\u003c/code\u003e 应该是一个虚基类，其有一个名为 \u003ccode\u003eload\u003c/code\u003e 的纯虚函数作为接口，负责读入数据。我们将其定义如下。\u003c/p\u003e\n\u003cfigure class=\"highlight cpp\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e8\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e9\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e10\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e11\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e12\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"keyword\"\u003estruct\u003c/span\u003e \u003cspan class=\"title class_\"\u003eReloadable\u003c/span\u003e {\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  \u003cspan class=\"built_in\"\u003eReloadable\u003c/span\u003e() = \u003cspan class=\"keyword\"\u003edefault\u003c/span\u003e;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  \u003cspan class=\"keyword\"\u003evirtual\u003c/span\u003e ~\u003cspan class=\"built_in\"\u003eReloadable\u003c/span\u003e() = \u003cspan class=\"keyword\"\u003edefault\u003c/span\u003e;  \u003cspan class=\"comment\"\u003e// 1.\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  \u003cspan class=\"built_in\"\u003eReloadable\u003c/span\u003e(\u003cspan class=\"type\"\u003econst\u003c/span\u003e Reloadable\u0026amp;) = \u003cspan class=\"keyword\"\u003edelete\u003c/span\u003e;  \u003cspan class=\"comment\"\u003e// 2.a.\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  Reloadable\u0026amp; \u003cspan class=\"keyword\"\u003eoperator\u003c/span\u003e=(\u003cspan class=\"type\"\u003econst\u003c/span\u003e Reloadable\u0026amp;) = \u003cspan class=\"keyword\"\u003edelete\u003c/span\u003e;  \u003cspan class=\"comment\"\u003e// 2.b.\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  \u003cspan class=\"built_in\"\u003eReloadable\u003c/span\u003e(Reloadable\u0026amp;\u0026amp;) = \u003cspan class=\"keyword\"\u003edefault\u003c/span\u003e;  \u003cspan class=\"comment\"\u003e// 3.a.\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  Reloadable\u0026amp; \u003cspan class=\"keyword\"\u003eoperator\u003c/span\u003e=(Reloadable\u0026amp;\u0026amp;) = \u003cspan class=\"keyword\"\u003edefault\u003c/span\u003e;  \u003cspan class=\"comment\"\u003e// 3.b.\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  \u003cspan class=\"function\"\u003e\u003cspan class=\"keyword\"\u003evirtual\u003c/span\u003e \u003cspan class=\"type\"\u003ebool\u003c/span\u003e \u003cspan class=\"title\"\u003eload\u003c/span\u003e\u003cspan class=\"params\"\u003e(\u003cspan class=\"type\"\u003econst\u003c/span\u003e std::string\u0026amp; path)\u003c/span\u003e \u003c/span\u003e= \u003cspan class=\"number\"\u003e0\u003c/span\u003e;  \u003cspan class=\"comment\"\u003e// 4\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e};\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e这里，\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003e我们将析构函数声明为 \u003ccode\u003evirtual\u003c/code\u003e，是因为显然 \u003ccode\u003eReloadable\u003c/code\u003e 会是一个基类。为避免子类析构不完全造成内存泄露，我们都需要将基类的析构函数声明为虚函数。\u003c/li\u003e\n\u003cli\u003e由于词典数据往往很大，而又在多线程中共享。那么显然对数据的拷贝是不必要的。于是我们将拷贝构造和拷贝赋值都声明为 \u003ccode\u003edelete\u003c/code\u003e。\u003c/li\u003e\n\u003cli\u003e与 (2) 对应，移动操作是允许的。\u003c/li\u003e\n\u003cli\u003e我们将 \u003ccode\u003eload\u003c/code\u003e 接口声明为纯虚的，它留待子类实现。入参 \u003ccode\u003epath\u003c/code\u003e 是一个字符串，它通常会是一个路径，指向数据本身，或是词典的配置文件。\u003c/li\u003e\n\u003c/ol\u003e\n\u003ch2 id=\"Reloader\"\u003e\u003ca href=\"#Reloader\" class=\"headerlink\" title=\"Reloader\"\u003e\u003c/a\u003e\u003ccode\u003eReloader\u003c/code\u003e\u003c/h2\u003e\u003cp\u003e按讨论，\u003ccode\u003eReloader\u003c/code\u003e 应该是一个虚基类模板。它有一个模板参数 \u003ccode\u003ePayload\u003c/code\u003e，是 \u003ccode\u003eReloadable\u003c/code\u003e 的子类。而后提供几个关键接口：\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003einit\u003c/code\u003e：负责初始化重载器。由于重载器会在多线程共享，所以初始化应该只执行一次。\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003einited\u003c/code\u003e：负责观察重载器是否已初始化成功。\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eget\u003c/code\u003e：负责返回 \u003ccode\u003ePayload\u003c/code\u003e，供外部使用。\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eterminate\u003c/code\u003e：负责终止重载器，通常在进程终止时调用它。\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e于是我们可以设计 \u003ccode\u003eReloader\u003c/code\u003e 的大体框架。\u003c/p\u003e\n\u003cfigure class=\"highlight cpp\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e8\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e9\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e10\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e11\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e12\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e13\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e14\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e15\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e16\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e17\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e18\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e19\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e20\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e21\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e22\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e23\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e24\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"keyword\"\u003etemplate\u003c/span\u003e \u0026lt;\u003cspan class=\"keyword\"\u003etypename\u003c/span\u003e Payload,\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e          std::\u003cspan class=\"type\"\u003eenable_if_t\u003c/span\u003e\u0026lt;std::is_base_of\u0026lt;Reloadable, Payload\u0026gt;::value, \u003cspan class=\"type\"\u003ebool\u003c/span\u003e\u0026gt; = \u003cspan class=\"literal\"\u003etrue\u003c/span\u003e\u0026gt;  \u003cspan class=\"comment\"\u003e// 4.\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"keyword\"\u003eclass\u003c/span\u003e Reloader {\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e \u003cspan class=\"keyword\"\u003epublic\u003c/span\u003e:\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  \u003cspan class=\"keyword\"\u003eusing\u003c/span\u003e \u003cspan class=\"type\"\u003epayload_t\u003c/span\u003e = Payload;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  \u003cspan class=\"keyword\"\u003eusing\u003c/span\u003e \u003cspan class=\"type\"\u003eptr_t\u003c/span\u003e = std::shared_ptr\u0026lt;\u003cspan class=\"type\"\u003epayload_t\u003c/span\u003e\u0026gt;;  \u003cspan class=\"comment\"\u003e// 1.a.\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e \u003cspan class=\"keyword\"\u003epublic\u003c/span\u003e:\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  \u003cspan class=\"built_in\"\u003eReloader\u003c/span\u003e() = \u003cspan class=\"keyword\"\u003edefault\u003c/span\u003e;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  \u003cspan class=\"keyword\"\u003evirtual\u003c/span\u003e ~\u003cspan class=\"built_in\"\u003eReloader\u003c/span\u003e() = \u003cspan class=\"keyword\"\u003edefault\u003c/span\u003e;  \u003cspan class=\"comment\"\u003e// 2.a.\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e \u003cspan class=\"keyword\"\u003eprivate\u003c/span\u003e:\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  \u003cspan class=\"built_in\"\u003eReloader\u003c/span\u003e(\u003cspan class=\"type\"\u003econst\u003c/span\u003e Reloader\u0026amp;) = \u003cspan class=\"keyword\"\u003edelete\u003c/span\u003e;  \u003cspan class=\"comment\"\u003e// 2.b.\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  Reloader\u0026amp; \u003cspan class=\"keyword\"\u003eoperator\u003c/span\u003e=(\u003cspan class=\"type\"\u003econst\u003c/span\u003e Reloader\u0026amp;) = \u003cspan class=\"keyword\"\u003edelete\u003c/span\u003e;  \u003cspan class=\"comment\"\u003e// 2.c.\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e \u003cspan class=\"keyword\"\u003epublic\u003c/span\u003e:  \u003cspan class=\"comment\"\u003e// modifiers\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  \u003cspan class=\"function\"\u003e\u003cspan class=\"type\"\u003ebool\u003c/span\u003e \u003cspan class=\"title\"\u003einit\u003c/span\u003e\u003cspan class=\"params\"\u003e(\u003cspan class=\"type\"\u003econst\u003c/span\u003e std::string\u0026amp; path)\u003c/span\u003e\u003c/span\u003e;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  \u003cspan class=\"function\"\u003e\u003cspan class=\"keyword\"\u003evirtual\u003c/span\u003e \u003cspan class=\"type\"\u003evoid\u003c/span\u003e \u003cspan class=\"title\"\u003eterminate\u003c/span\u003e\u003cspan class=\"params\"\u003e()\u003c/span\u003e \u003c/span\u003e= \u003cspan class=\"number\"\u003e0\u003c/span\u003e;  \u003cspan class=\"comment\"\u003e// 3.\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e \u003cspan class=\"keyword\"\u003epublic\u003c/span\u003e:  \u003cspan class=\"comment\"\u003e// observers\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  \u003cspan class=\"function\"\u003e\u003cspan class=\"type\"\u003ebool\u003c/span\u003e \u003cspan class=\"title\"\u003einited\u003c/span\u003e\u003cspan class=\"params\"\u003e()\u003c/span\u003e \u003cspan class=\"type\"\u003econst\u003c/span\u003e\u003c/span\u003e;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  \u003cspan class=\"function\"\u003e\u003cspan class=\"type\"\u003eptr_t\u003c/span\u003e \u003cspan class=\"title\"\u003eget\u003c/span\u003e\u003cspan class=\"params\"\u003e()\u003c/span\u003e \u003cspan class=\"type\"\u003econst\u003c/span\u003e\u003c/span\u003e;  \u003cspan class=\"comment\"\u003e// 1.b.\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e};\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e这里，\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003e\u003ccode\u003eget\u003c/code\u003e 接口的返回类型是 \u003ccode\u003ePayload\u003c/code\u003e 的智能指针。此处用智能指针，有两个考虑。一是避免值语义，使用引用语义。这样避免了数据的拷贝（实际上 \u003ccode\u003ePayload\u003c/code\u003e 已经禁止了拷贝，想用值语义必然报错）。二是管理 \u003ccode\u003ePayload\u003c/code\u003e 的生命周期，避免使用裸指针时，外部通过 \u003ccode\u003eget\u003c/code\u003e 拿到数据，却为 \u003ccode\u003ereload\u003c/code\u003e 析构，造成野指针。\u003c/li\u003e\n\u003cli\u003e基于类似的理由，我们将 \u003ccode\u003eReloader\u003c/code\u003e 的析构函数声明为 \u003ccode\u003evirtual\u003c/code\u003e，将拷贝动作声明为 \u003ccode\u003edelete\u003c/code\u003e。\u003c/li\u003e\n\u003cli\u003e和 \u003ccode\u003einit\u003c/code\u003e 不同，\u003ccode\u003eterminate\u003c/code\u003e 接口被声明为纯虚。这是因为，适应不同的重载方式，其 \u003ccode\u003einit\u003c/code\u003e 都承担了相同的指责：第一次载入数据；而 \u003ccode\u003eterminate\u003c/code\u003e 则依据重载方式会有不同的写法。\u003c/li\u003e\n\u003cli\u003e这里 \u003ccode\u003estd::enable_if_t\u003c/code\u003e，强制保证了模板参数 \u003ccode\u003ePayload\u003c/code\u003e 是 \u003ccode\u003eReloadable\u003c/code\u003e。这保证了 \u003ccode\u003ePayload\u003c/code\u003e 一定有符合规范的 \u003ccode\u003eload\u003c/code\u003e 接口。\u003c/li\u003e\n\u003c/ol\u003e\n\u003ch3 id=\"inited\"\u003e\u003ca href=\"#inited\" class=\"headerlink\" title=\"inited\"\u003e\u003c/a\u003e\u003ccode\u003einited\u003c/code\u003e\u003c/h3\u003e\u003cp\u003e我们首先考虑观察器 \u003ccode\u003einited\u003c/code\u003e。重载器是否初始化，这个状态对于外部，有三种：\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e未初始化\u003c/li\u003e\n\u003cli\u003e初始化中\u003c/li\u003e\n\u003cli\u003e已初始化\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e当然，可能还有第四种：初始化失败。我们可将其归结于「未初始化」当中。\u003c/p\u003e\n\u003cp\u003e虽有三种状态，但对于外部来说，有意义的只有「是/否」。于是，我们可用一原子变量，来维护初始化状态。于是我们有：\u003c/p\u003e\n\u003cfigure class=\"highlight cpp\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e8\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e9\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e10\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e11\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e12\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e13\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e14\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"keyword\"\u003etemplate\u003c/span\u003e \u0026lt;\u003cspan class=\"keyword\"\u003etypename\u003c/span\u003e Payload\u0026gt;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"keyword\"\u003eclass\u003c/span\u003e \u003cspan class=\"title class_\"\u003eReloader\u003c/span\u003e {\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  \u003cspan class=\"comment\"\u003e// ...\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e \u003cspan class=\"keyword\"\u003eprivate\u003c/span\u003e:\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  std::atomic_bool inited_{\u003cspan class=\"literal\"\u003efalse\u003c/span\u003e};\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  \u003cspan class=\"comment\"\u003e// ...\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e \u003cspan class=\"keyword\"\u003epublic\u003c/span\u003e:  \u003cspan class=\"comment\"\u003e// observers\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  \u003cspan class=\"function\"\u003e\u003cspan class=\"type\"\u003ebool\u003c/span\u003e \u003cspan class=\"title\"\u003einited\u003c/span\u003e\u003cspan class=\"params\"\u003e()\u003c/span\u003e \u003cspan class=\"type\"\u003econst\u003c/span\u003e \u003c/span\u003e{\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"keyword\"\u003ereturn\u003c/span\u003e inited_.\u003cspan class=\"built_in\"\u003eload\u003c/span\u003e(std::memory_order_acquire);  \u003cspan class=\"comment\"\u003e// 1.\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  }\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  \u003cspan class=\"comment\"\u003e// ...\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e};\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003col\u003e\n\u003cli\u003e这里唯一需要关注的是顺序标记。\u003ccode\u003estd::memory_order_acquire\u003c/code\u003e 与 release-store 组成同步关系，确保 \u003ccode\u003einited()\u003c/code\u003e 函数返回 \u003ccode\u003etrue\u003c/code\u003e 时，确实有 \u003ccode\u003ereload()\u003c/code\u003e 和 \u003ccode\u003elaunch()\u003c/code\u003e 已执行完毕。\u003c/li\u003e\n\u003c/ol\u003e\n\u003ch3 id=\"get\"\u003e\u003ca href=\"#get\" class=\"headerlink\" title=\"get\"\u003e\u003c/a\u003e\u003ccode\u003eget\u003c/code\u003e\u003c/h3\u003e\u003cp\u003e显然，\u003ccode\u003eReloader\u003c/code\u003e 应该有一个成员，保存着由其管理的数据的智能指针。当外部调用 \u003ccode\u003eget\u003c/code\u003e 接口时，我们根据初始化状态，来判断如何返回。\u003c/p\u003e\n\u003cfigure class=\"highlight cpp\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e8\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e9\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e10\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e11\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e12\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e13\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e14\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e15\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e16\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e17\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e18\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e19\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e20\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e21\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e22\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"keyword\"\u003etemplate\u003c/span\u003e \u0026lt;\u003cspan class=\"keyword\"\u003etypename\u003c/span\u003e Payload\u0026gt;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"keyword\"\u003eclass\u003c/span\u003e \u003cspan class=\"title class_\"\u003eReloader\u003c/span\u003e {\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  \u003cspan class=\"comment\"\u003e// ...\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e \u003cspan class=\"keyword\"\u003eprivate\u003c/span\u003e:\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  \u003cspan class=\"comment\"\u003e// ...\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  \u003cspan class=\"keyword\"\u003emutable\u003c/span\u003e std::shared_mutex mtx_;  \u003cspan class=\"comment\"\u003e// 1.a.\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  \u003cspan class=\"type\"\u003eptr_t\u003c/span\u003e payload_;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  \u003cspan class=\"comment\"\u003e// ...\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e \u003cspan class=\"keyword\"\u003epublic\u003c/span\u003e:  \u003cspan class=\"comment\"\u003e// observers\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  \u003cspan class=\"comment\"\u003e// ...\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  \u003cspan class=\"function\"\u003e\u003cspan class=\"type\"\u003eptr_t\u003c/span\u003e \u003cspan class=\"title\"\u003eget\u003c/span\u003e\u003cspan class=\"params\"\u003e()\u003c/span\u003e \u003cspan class=\"type\"\u003econst\u003c/span\u003e \u003c/span\u003e{\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"keyword\"\u003eif\u003c/span\u003e (\u003cspan class=\"built_in\"\u003einited\u003c/span\u003e()) {  \u003cspan class=\"comment\"\u003e// 2.\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e      \u003cspan class=\"function\"\u003estd::shared_lock\u0026lt;std::shared_mutex\u0026gt; \u003cspan class=\"title\"\u003elk\u003c/span\u003e\u003cspan class=\"params\"\u003e(mtx_)\u003c/span\u003e\u003c/span\u003e;  \u003cspan class=\"comment\"\u003e// 1.b.\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e      \u003cspan class=\"keyword\"\u003ereturn\u003c/span\u003e payload_;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    } \u003cspan class=\"keyword\"\u003eelse\u003c/span\u003e {\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e      \u003cspan class=\"keyword\"\u003ereturn\u003c/span\u003e \u003cspan class=\"literal\"\u003enullptr\u003c/span\u003e;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    }\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  }\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  \u003cspan class=\"comment\"\u003e// ...\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e};\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e这里，\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003e我们用一个读写锁（共享互斥量）来保护智能指针 \u003ccode\u003epayload_\u003c/code\u003e。这是因为，虽然 \u003ccode\u003estd::shared_ptr\u003c/code\u003e 当中的引用计数是原子的，但是 \u003ccode\u003estd::shared_ptr\u003c/code\u003e 本身并无线程安全保证。考虑到我们可能在多线程中同时读写 \u003ccode\u003epayload_\u003c/code\u003e，因此必须要加锁。此处细节，可参考\u003ca target=\"_blank\" rel=\"noopener\" href=\"https://blog.csdn.net/Solstice/article/details/8547547\"\u003e陈硕的雄文\u003c/a\u003e。\u003c/li\u003e\n\u003cli\u003e这里是对 \u003ccode\u003eReloader\u003c/code\u003e 状态的判断。若未初始化，则返回空指针。\u003c/li\u003e\n\u003c/ol\u003e\n\u003ch3 id=\"init\"\u003e\u003ca href=\"#init\" class=\"headerlink\" title=\"init\"\u003e\u003c/a\u003e\u003ccode\u003einit\u003c/code\u003e\u003c/h3\u003e\u003cp\u003e有了这些铺垫，我们可以来实现修改器 \u003ccode\u003einit\u003c/code\u003e 了。\u003c/p\u003e\n\u003cfigure class=\"highlight cpp\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e8\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e9\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e10\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e11\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e12\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e13\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e14\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e15\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e16\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e17\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e18\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e19\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e20\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e21\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e22\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e23\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e24\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e25\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e26\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e27\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e28\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e29\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e30\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e31\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e32\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e33\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e34\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e35\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e36\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e37\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e38\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e39\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e40\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e41\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e42\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e43\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e44\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e45\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e46\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e47\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"keyword\"\u003etemplate\u003c/span\u003e \u0026lt;\u003cspan class=\"keyword\"\u003etypename\u003c/span\u003e Payload\u0026gt;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"keyword\"\u003eclass\u003c/span\u003e \u003cspan class=\"title class_\"\u003eReloader\u003c/span\u003e {\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  \u003cspan class=\"comment\"\u003e// ...\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e \u003cspan class=\"keyword\"\u003eprivate\u003c/span\u003e:\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  \u003cspan class=\"comment\"\u003e// ...\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  std::once_flag init_flag_;  \u003cspan class=\"comment\"\u003e// 1.a.\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  std::string path_;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  \u003cspan class=\"comment\"\u003e// ...\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e \u003cspan class=\"keyword\"\u003epublic\u003c/span\u003e:  \u003cspan class=\"comment\"\u003e// modifiers\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  \u003cspan class=\"function\"\u003e\u003cspan class=\"type\"\u003ebool\u003c/span\u003e \u003cspan class=\"title\"\u003einit\u003c/span\u003e\u003cspan class=\"params\"\u003e(\u003cspan class=\"type\"\u003econst\u003c/span\u003e std::string\u0026amp; path)\u003c/span\u003e \u003c/span\u003e{\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    std::\u003cspan class=\"built_in\"\u003ecall_once\u003c/span\u003e(init_flag_, [\u0026amp;]() -\u0026gt; \u003cspan class=\"type\"\u003evoid\u003c/span\u003e {  \u003cspan class=\"comment\"\u003e// 1.b.\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e      \u003cspan class=\"keyword\"\u003ethis\u003c/span\u003e-\u0026gt;\u003cspan class=\"built_in\"\u003epath\u003c/span\u003e(path);\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e      \u003cspan class=\"keyword\"\u003eif\u003c/span\u003e (\u003cspan class=\"built_in\"\u003ereload\u003c/span\u003e()) {  \u003cspan class=\"comment\"\u003e// 2.a.\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        \u003cspan class=\"built_in\"\u003elaunch\u003c/span\u003e();  \u003cspan class=\"comment\"\u003e// 3.a.\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        inited_.\u003cspan class=\"built_in\"\u003estore\u003c/span\u003e(\u003cspan class=\"literal\"\u003etrue\u003c/span\u003e, std::memory_order_release);  \u003cspan class=\"comment\"\u003e//4.a.\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e      } \u003cspan class=\"keyword\"\u003eelse\u003c/span\u003e {\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        \u003cspan class=\"keyword\"\u003ereturn\u003c/span\u003e;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e      }\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    });\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"keyword\"\u003ereturn\u003c/span\u003e \u003cspan class=\"built_in\"\u003einited\u003c/span\u003e();  \u003cspan class=\"comment\"\u003e// 4.b.\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  }\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  \u003cspan class=\"comment\"\u003e// ...\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e \u003cspan class=\"keyword\"\u003eprotected\u003c/span\u003e:  \u003cspan class=\"comment\"\u003e// modifiers\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  \u003cspan class=\"function\"\u003e\u003cspan class=\"type\"\u003ebool\u003c/span\u003e \u003cspan class=\"title\"\u003ereload\u003c/span\u003e\u003cspan class=\"params\"\u003e()\u003c/span\u003e \u003c/span\u003e{  \u003cspan class=\"comment\"\u003e// 2.b.\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"type\"\u003eptr_t\u003c/span\u003e tmp = std::\u003cspan class=\"built_in\"\u003emake_shared\u003c/span\u003e\u0026lt;\u003cspan class=\"type\"\u003epayload_t\u003c/span\u003e\u0026gt;();  \u003cspan class=\"comment\"\u003e// 5.a.\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"keyword\"\u003eif\u003c/span\u003e (tmp-\u0026gt;\u003cspan class=\"built_in\"\u003eload\u003c/span\u003e(path_)) {  \u003cspan class=\"comment\"\u003e// 5.b.\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e      {\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        \u003cspan class=\"function\"\u003estd::unique_lock\u0026lt;shared_mutex\u0026gt; \u003cspan class=\"title\"\u003elk\u003c/span\u003e\u003cspan class=\"params\"\u003e(mtx_)\u003c/span\u003e\u003c/span\u003e;  \u003cspan class=\"comment\"\u003e// 6.\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        payload_.\u003cspan class=\"built_in\"\u003eswap\u003c/span\u003e(tmp);  \u003cspan class=\"comment\"\u003e// 7.\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e      }\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e      \u003cspan class=\"keyword\"\u003ereturn\u003c/span\u003e \u003cspan class=\"literal\"\u003etrue\u003c/span\u003e;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    } \u003cspan class=\"keyword\"\u003eelse\u003c/span\u003e {\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e      \u003cspan class=\"keyword\"\u003ereturn\u003c/span\u003e \u003cspan class=\"literal\"\u003efalse\u003c/span\u003e;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    }\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  }\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  \u003cspan class=\"function\"\u003e\u003cspan class=\"type\"\u003evoid\u003c/span\u003e \u003cspan class=\"title\"\u003epath\u003c/span\u003e\u003cspan class=\"params\"\u003e(\u003cspan class=\"type\"\u003econst\u003c/span\u003e std::string\u0026amp; p)\u003c/span\u003e \u003c/span\u003e{\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    path_ = p;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  }\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e \u003cspan class=\"keyword\"\u003eprivate\u003c/span\u003e:\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  \u003cspan class=\"function\"\u003e\u003cspan class=\"keyword\"\u003evirtual\u003c/span\u003e \u003cspan class=\"type\"\u003evoid\u003c/span\u003e \u003cspan class=\"title\"\u003elaunch\u003c/span\u003e\u003cspan class=\"params\"\u003e()\u003c/span\u003e \u003c/span\u003e= \u003cspan class=\"number\"\u003e0\u003c/span\u003e;  \u003cspan class=\"comment\"\u003e// 3.b.\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e};\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e这里，\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003e为保证 \u003ccode\u003einit\u003c/code\u003e 只执行一次，我们使用 C++ 标准中提供的 \u003ccode\u003estd::once_flag\u003c/code\u003e 和 \u003ccode\u003estd::call_once\u003c/code\u003e。\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003ereload\u003c/code\u003e 接口如其名，每次重载器触发重载动作时，都应调用它。\u003ccode\u003einit\u003c/code\u003e 实际是第一次重载，当然也会调用它。\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003elaunch\u003c/code\u003e 是一个纯虚函数，它由子类模板实现。\u003ccode\u003elaunch\u003c/code\u003e 负责初始化重载器的一些细节工作，以便在进程声明周期中循环/监视文件变动，触发重载。\u003c/li\u003e\n\u003cli\u003e维护 \u003ccode\u003einited_\u003c/code\u003e 原子变量，与 \u003ccode\u003einited\u003c/code\u003e 接口遥相呼应。这里的\u003ca href=\"/2021/12/11/memory-order-cpp-02/\"\u003e顺序标记\u003c/a\u003e是 \u003ccode\u003estd::memory_order_release\u003c/code\u003e，是为了构造一个同步关系：当读到 \u003ccode\u003einited_\u003c/code\u003e 的值为 \u003ccode\u003etrue\u003c/code\u003e 时，(2) 和 (3) 都确实已执行完毕。\u003c/li\u003e\n\u003cli\u003e重载时，为避免影响正在对外提供服务的 \u003ccode\u003epayload_\u003c/code\u003e 指针，我们通过临时指针来载入数据。\u003c/li\u003e\n\u003cli\u003e若临时指针载入数据成功，我们在读写锁（共享互斥量）的「写入状态」的保护下，更新 \u003ccode\u003epayload_\u003c/code\u003e 的值。\u003c/li\u003e\n\u003cli\u003e这里使用 \u003ccode\u003epayload_.swap(tmp)\u003c/code\u003e 而非 \u003ccode\u003epayload_ = std::move(tmp)\u003c/code\u003e 的原因在于，后者会导致立即析构 \u003ccode\u003epayload_\u003c/code\u003e 先前指向的对象。考虑到此时尚在写入锁保护下，而析构词典对象可能非常耗时，这种做法是不明智的。使用 \u003ccode\u003eswap\u003c/code\u003e 延迟析构旧对象（在 \u003ccode\u003ereturn\u003c/code\u003e 处，析构 \u003ccode\u003etmp\u003c/code\u003e 时），是更好的选择。\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003e至此，\u003ccode\u003eReloader\u003c/code\u003e 的主要接口，我们就已实现完备。\u003c/p\u003e\n\u003ch2 id=\"更多\"\u003e\u003ca href=\"#更多\" class=\"headerlink\" title=\"更多\"\u003e\u003c/a\u003e更多\u003c/h2\u003e\u003cp\u003e在现有的 \u003ccode\u003eReloadable\u003c/code\u003e 和 \u003ccode\u003eReloader\u003c/code\u003e 的基础上，我们可借助\u003ca href=\"/2020/10/14/implement-a-timed-looper-in-cxx/\"\u003e前文提到的时间循环器\u003c/a\u003e来实现一个基于倒计时轮询的重载器；又可借助\u003ca href=\"/2020/10/27/implement-a-singleton-class-template-in-cxx/\"\u003e前文提到的单例模式\u003c/a\u003e，让重载器于多线程共享。另附一个\u003ca target=\"_blank\" rel=\"noopener\" href=\"https://github.com/Liam0205/data-reloader\"\u003e仓库\u003c/a\u003e，供来者学习参考。\u003c/p\u003e\n\u003ch2 id=\"对不同意见的回复\"\u003e\u003ca href=\"#对不同意见的回复\" class=\"headerlink\" title=\"对不同意见的回复\"\u003e\u003c/a\u003e对不同意见的回复\u003c/h2\u003e\u003cp\u003e文章出来已经收到了一些反对意见。此处做一些回复。\u003c/p\u003e\n\u003ch3 id=\"Reloadable-不是必须的，只需实现相同的接口即可。\"\u003e\u003ca href=\"#Reloadable-不是必须的，只需实现相同的接口即可。\" class=\"headerlink\" title=\"Reloadable 不是必须的，只需实现相同的接口即可。\"\u003e\u003c/a\u003e\u003ccode\u003eReloadable\u003c/code\u003e 不是必须的，只需实现相同的接口即可。\u003c/h3\u003e\u003cp\u003e诚然，若能保证所有用到 \u003ccode\u003eReloader\u003c/code\u003e 的类，都实现了相同的接口，那么 \u003ccode\u003eReloadable\u003c/code\u003e 及对应的 \u003ccode\u003estd::enable_if_t\u003c/code\u003e 可以去掉。但在实际工程中，这是一个相当高的要求，通常很难达到。这是因为，很可能在实现 \u003ccode\u003eReloader\u003c/code\u003e 类模板时，代码库当中已有不少词典、模型类。这些 legacy codes 可能并不遵循现下定义的标准接口。若要使它们为 \u003ccode\u003eReloader\u003c/code\u003e 所管理，则需要细致地修改，而后祈祷编译不出错。而若是使它们继承 \u003ccode\u003eReloadable\u003c/code\u003e，则编译器会告诉你哪些词典/模型类还未正确修改。——编译器要么提示你，尚有纯虚函数未实现而无法实例化；要么提醒你 \u003ccode\u003eReloader\u003c/code\u003e 的 \u003ccode\u003ePayload\u003c/code\u003e 类并非由 \u003ccode\u003eReloadable\u003c/code\u003e 派生而得。\u003c/p\u003e\n\u003cp\u003e退一步说，即使能够通过口头/文档约束，达到接口统一的要求；那么，既然你已经在代码上约束大家实现 \u003ccode\u003eload\u003c/code\u003e 接口了，那么交给编译器去用 \u003ccode\u003estd::enable_if_t\u003c/code\u003e 做一次校验岂非更好？\u003c/p\u003e\n\u003cp\u003e因此，我们倾向于保留 \u003ccode\u003eReloadable\u003c/code\u003e 及相应的 \u003ccode\u003estd::enable_if_t\u003c/code\u003e 之设计。\u003c/p\u003e\n\u003ch3 id=\"在-Reloader-类当中，实现一个-lookup-接口，避免通过-get-接口返回词典类，是否更好？\"\u003e\u003ca href=\"#在-Reloader-类当中，实现一个-lookup-接口，避免通过-get-接口返回词典类，是否更好？\" class=\"headerlink\" title=\"在 Reloader 类当中，实现一个 lookup 接口，避免通过 get 接口返回词典类，是否更好？\"\u003e\u003c/a\u003e在 \u003ccode\u003eReloader\u003c/code\u003e 类当中，实现一个 \u003ccode\u003elookup\u003c/code\u003e 接口，避免通过 \u003ccode\u003eget\u003c/code\u003e 接口返回词典类，是否更好？\u003c/h3\u003e\u003cp\u003e若能约束所有词典类，都有一个统一的 \u003ccode\u003elookup\u003c/code\u003e 接口，那这样做自然可以。但 \u003ccode\u003eReloader\u003c/code\u003e 并非单纯针对词典类设计，例如带有 \u003ccode\u003epredict\u003c/code\u003e 接口的模型类，也能为 \u003ccode\u003eReloader\u003c/code\u003e 所管理。讲到底，\u003ccode\u003eReloader\u003c/code\u003e 只是为管理进程运行时可能需要重载的资源而设计的，对于资源是什么，\u003ccode\u003eReloader\u003c/code\u003e 本身并不关心。\u003c/p\u003e\n\u003cp\u003e即便 \u003ccode\u003eReloader\u003c/code\u003e 仅仅只为词典设计，这样封装接口也有至少三个劣势。\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e基于与前一问题类似的理由，对于 legacy codes 的修改，会比较麻烦。\u003c/li\u003e\n\u003cli\u003e过早地约束了词典可用的接口，而忽略了词典的多样性。于是在将来的使用中，新的词典（比如涉及到二段查询的词典）可能无法轻易套用 \u003ccode\u003eReloader\u003c/code\u003e。\u003c/li\u003e\n\u003cli\u003e在单次请求中，我们希望对词典的多次查询的结果稳定。但在 \u003ccode\u003eReloader\u0026lt;Payload\u0026gt;::lookup()\u003c/code\u003e 当中，我们无法保证这一点。因为在单次请求过程中，可能触发了 \u003ccode\u003ereload\u003c/code\u003e 动作，于是相邻两次查询时，词典内容可能已经发生变化，造成对业务不可知的影响。\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e反过来讲，通过对内部智能指针加锁，返回只能指针的拷贝，则基本避免了这种影响。\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003elegacy codes 只需 \u003ccode\u003esed\u003c/code\u003e 替换即可。\u003c/li\u003e\n\u003cli\u003e不约束词典可用接口。\u003c/li\u003e\n\u003cli\u003e通过拷贝传递出去的智能指针，hook 住词典内容；即便在使用过程中触发 \u003ccode\u003ereload\u003c/code\u003e 动作，词典内容也不会提前析构，保证结果统一性。\u003c/li\u003e\n\u003c/ul\u003e\n\n    \u003c/div\u003e",
  "Date": "2021-01-03T01:35:49Z",
  "Author": "Liam Huang"
}