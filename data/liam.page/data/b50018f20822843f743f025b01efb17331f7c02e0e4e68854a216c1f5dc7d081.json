{
  "Source": "liam.page",
  "Title": "谈谈智能指针：原理及其实现",
  "Link": "https://liam.page/2018/01/13/smart-pointer/",
  "Content": "\u003cdiv class=\"post-body\" itemprop=\"articleBody\"\u003e\n\n      \n        \u003cp\u003e\u003ca href=\"/2017/11/26/surrogate-in-Cpp/\"\u003e前作\u003c/a\u003e中，我们借助代理类对 \u003ccode\u003eAnimal\u003c/code\u003e 及其子类的实例（事实上 \u003ccode\u003eAnimal\u003c/code\u003e 是纯虚类，无法实例化）进行代理。\u003c/p\u003e\n\u003cp\u003e本文，我们将对代理类进行进一步分析，察觉一些细微的差别，而后引出智能指针。\u003c/p\u003e\n\u003cspan id=\"more\"\u003e\u003c/span\u003e\n\n\u003ch2 id=\"反思代理类\"\u003e\u003ca href=\"#反思代理类\" class=\"headerlink\" title=\"反思代理类\"\u003e\u003c/a\u003e反思代理类\u003c/h2\u003e\u003cp\u003e\u003ca href=\"/2017/11/26/surrogate-in-Cpp/\"\u003e前作\u003c/a\u003e设计的代理类主要有两个方面的考量。其一是希望代理类将被代理的对象完全地管理起来，使得程序员自己不需要手动去分配和释放内存。基于这个考量，对代理类的复制、移动、赋值都伴随着被代理对象的相应变化。其二是希望代理类在一定程度上保留被代理对象多态的特性。为此，代理类需要保存基类指针作为代理类成员，并为相关函数预留接口（单独实现的 \u003ccode\u003esay()\u003c/code\u003e 函数）。\u003c/p\u003e\n\u003cp\u003e从第二个方面来看，代理类的行为，其实类似于指针。但从第一个方面来看，代理类又破坏了指针语义，而带上了值语义。这是因为，当我们复制代理类对象时，其内部的对象也会随之复制。\u003c/p\u003e\n\u003cp\u003e考虑到对于某些类型的对象，复制操作的开销很大，甚至是在逻辑上不可行的。因此，我们需要思考，如何在保留代理类的优势时，避免不必要的复制和移动操作。这就引出了智能指针（smart pointer）的话题。\u003c/p\u003e\n\u003ch2 id=\"代理类与智能指针\"\u003e\u003ca href=\"#代理类与智能指针\" class=\"headerlink\" title=\"代理类与智能指针\"\u003e\u003c/a\u003e代理类与智能指针\u003c/h2\u003e\u003cp\u003e要避免不必要的对被代理对象的复制和移动操作，就要反过来回顾我们为何要这样设计。若是想清楚了如此设计的原因，再能想到替代方案，就有可能避免这些多余的复制和移动操作。\u003c/p\u003e\n\u003cp\u003e在代理类中，为了保证被代理的对象的生存期覆盖相应代理类对象的生存期，我们强迫每个代理类的对象生成时，都与初始化它的对象脱离关系。脱离关系的办法，一方面是复制，一方面是移动。复制的情况下，代理类对象里保存了被代理的原对象的副本，因此二者没有关系。移动的情况下，代理类对象里保存了从原对象中窃取的资源；原对象在代理类对象生成之后，就（在逻辑上）不可用了，因此二者也没有关系。这部分的设计，从逻辑上说是不可避免的，因而是没有问题的。\u003c/p\u003e\n\u003cp\u003e除此之外，在对代理类的对象进行复制、移动时，代理类对象中被代理的部分也会被复制和移动。这样一来，代理类实现了与被代理对象的一一对应。如果「代理对象与被代理对象一一对应」是确实的需求，那么这样设计就是不可避免的，也就没有问题。然而，在大多数情况下，我们希望代理类仍然能像指针那样工作：允许多个代理类对象绑定在同一个被代理对象上。这样一来频繁的复制、移动就变成缺陷了。这样的需求是很自然的，举几例如下：\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e向函数拷贝传值时；\u003c/li\u003e\n\u003cli\u003e代理类对象作为函数的返回值时；\u003c/li\u003e\n\u003cli\u003e在循环中，将代理类对象作为临时值，用于保存中间状态时。\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e这样一来，我们对代理类的需求就形成了看似矛盾的两个方面：\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e代理类能控制被代理对象的生存期，也就是要处理好对象的构造、析构；\u003c/li\u003e\n\u003cli\u003e要允许多个代理类绑定同一个被代理对象。\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e为了解决这样的矛盾，我们必须付出一些代价：维护一个计数器，用于记录有多少个代理类绑定在被代理的对象之上。由于我们希望这样的代理类使用起来和指针相似，所以这样的代理类又称为智能指针。\u003c/p\u003e\n\u003ch2 id=\"第一次尝试\"\u003e\u003ca href=\"#第一次尝试\" class=\"headerlink\" title=\"第一次尝试\"\u003e\u003c/a\u003e第一次尝试\u003c/h2\u003e\u003ch3 id=\"被绑定的对象\"\u003e\u003ca href=\"#被绑定的对象\" class=\"headerlink\" title=\"被绑定的对象\"\u003e\u003c/a\u003e被绑定的对象\u003c/h3\u003e\u003cp\u003e前作使用了 \u003ccode\u003eAnimal\u003c/code\u003e 及其派生类 \u003ccode\u003eCat\u003c/code\u003e/\u003ccode\u003eDog\u003c/code\u003e 为例。不失一般性，此处先不考虑继承与多态，考虑将智能指针实现出来。因此，我们考虑代表屏幕上像素点坐标的类 \u003ccode\u003ePoint\u003c/code\u003e，它的定义如下。\u003c/p\u003e\n\u003cfigure class=\"highlight cpp\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e8\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e9\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e10\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e11\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e12\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e13\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e14\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e15\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e16\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"keyword\"\u003eclass\u003c/span\u003e \u003cspan class=\"title class_\"\u003ePoint\u003c/span\u003e {\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e \u003cspan class=\"keyword\"\u003eprivate\u003c/span\u003e:\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  \u003cspan class=\"type\"\u003eint\u003c/span\u003e x_ = \u003cspan class=\"number\"\u003e0\u003c/span\u003e;                               \u003cspan class=\"comment\"\u003e// 1.\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  \u003cspan class=\"type\"\u003eint\u003c/span\u003e y_ = \u003cspan class=\"number\"\u003e0\u003c/span\u003e;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e \u003cspan class=\"keyword\"\u003epublic\u003c/span\u003e:\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  \u003cspan class=\"built_in\"\u003ePoint\u003c/span\u003e() = \u003cspan class=\"keyword\"\u003edefault\u003c/span\u003e;                        \u003cspan class=\"comment\"\u003e// 2.\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  \u003cspan class=\"built_in\"\u003ePoint\u003c/span\u003e(\u003cspan class=\"type\"\u003eint\u003c/span\u003e x, \u003cspan class=\"type\"\u003eint\u003c/span\u003e y) : x_{x}, y_{y} {}     \u003cspan class=\"comment\"\u003e// 3.\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e \u003cspan class=\"keyword\"\u003epublic\u003c/span\u003e:\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  \u003cspan class=\"function\"\u003e\u003cspan class=\"type\"\u003eint\u003c/span\u003e \u003cspan class=\"title\"\u003ex\u003c/span\u003e\u003cspan class=\"params\"\u003e()\u003c/span\u003e \u003cspan class=\"type\"\u003econst\u003c/span\u003e \u003c/span\u003e{ \u003cspan class=\"keyword\"\u003ereturn\u003c/span\u003e x_; }              \u003cspan class=\"comment\"\u003e// 4.\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  \u003cspan class=\"function\"\u003e\u003cspan class=\"type\"\u003eint\u003c/span\u003e \u003cspan class=\"title\"\u003ey\u003c/span\u003e\u003cspan class=\"params\"\u003e()\u003c/span\u003e \u003cspan class=\"type\"\u003econst\u003c/span\u003e \u003c/span\u003e{ \u003cspan class=\"keyword\"\u003ereturn\u003c/span\u003e y_; }\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  \u003cspan class=\"function\"\u003ePoint\u0026amp; \u003cspan class=\"title\"\u003ex\u003c/span\u003e\u003cspan class=\"params\"\u003e(\u003cspan class=\"type\"\u003eint\u003c/span\u003e x)\u003c/span\u003e \u003c/span\u003e{ x_ = x; \u003cspan class=\"keyword\"\u003ereturn\u003c/span\u003e *\u003cspan class=\"keyword\"\u003ethis\u003c/span\u003e; } \u003cspan class=\"comment\"\u003e// 5.\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  \u003cspan class=\"function\"\u003ePoint\u0026amp; \u003cspan class=\"title\"\u003ey\u003c/span\u003e\u003cspan class=\"params\"\u003e(\u003cspan class=\"type\"\u003eint\u003c/span\u003e y)\u003c/span\u003e \u003c/span\u003e{ y_ = y; \u003cspan class=\"keyword\"\u003ereturn\u003c/span\u003e *\u003cspan class=\"keyword\"\u003ethis\u003c/span\u003e; }\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e};\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e这里，由于 (1) 处给出了数据成员的类内初始值，所以 (2) 处无需自己定义默认构造函数，让编译器合成即可。(3) 处的参数没有给函数参数默认值（即没有声明为 \u003ccode\u003ePoint(int x = 0, int y = 0)\u003c/code\u003e，这是为了防止类似 \u003ccode\u003ePoint(0)\u003c/code\u003e 的调用（因为对于平面上的点来说，这样初始化在语义上是不正确的）。对于移动和拷贝构造函数及赋值运算符，则可由编译器自动合成。(4) 和 (5) 利用函数重载，实现了对数据成员的访问和修改的接口。其中 (5) 处设计为返回 \u003ccode\u003ePoint\u0026amp;\u003c/code\u003e 是为了允许类似这样的语法 \u003ccode\u003epoint.x(42).y(42)\u003c/code\u003e。\u003c/p\u003e\n\u003ch3 id=\"智能指针\"\u003e\u003ca href=\"#智能指针\" class=\"headerlink\" title=\"智能指针\"\u003e\u003c/a\u003e智能指针\u003c/h3\u003e\u003cp\u003e我们先不考虑智能指针对类型的泛用性（不使用模板），来观察对 \u003ccode\u003ePoint\u003c/code\u003e 类应该如何设计智能指针类 \u003ccode\u003eSmartPointer\u003c/code\u003e。\u003c/p\u003e\n\u003ch4 id=\"管理对象\"\u003e\u003ca href=\"#管理对象\" class=\"headerlink\" title=\"管理对象\"\u003e\u003c/a\u003e管理对象\u003c/h4\u003e\u003cp\u003e和前作遇到的问题一样，我们也要考虑智能指针如何管理对象。为了避免被管理的对象生存期短于智能指针对象，我们只能有以下几种情况，从 \u003ccode\u003ePoint\u003c/code\u003e 对象开始去构造智能指针对象。\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e传入 \u003ccode\u003enew\u003c/code\u003e 得到的指针：\u003ccode\u003eSmartPointer sp(new Point());\u003c/code\u003e；\u003c/li\u003e\n\u003cli\u003e传入 \u003ccode\u003ePoint\u003c/code\u003e 对象，而后拷贝一份被 \u003ccode\u003eSmartPointer\u003c/code\u003e 管理：\u003ccode\u003eSmartPointer sp(p);\u003c/code\u003e；\u003c/li\u003e\n\u003cli\u003e将用于构造 \u003ccode\u003ePoint\u003c/code\u003e 的参数传递给 \u003ccode\u003eSmartPointer\u003c/code\u003e 的构造函数，直接构造：\u003ccode\u003eSmartPointer sp(0, 0);\u003c/code\u003e。\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e因此，我们的 \u003ccode\u003eSmartPointer\u003c/code\u003e 类应该有以下一些构造函数。\u003c/p\u003e\n\u003cfigure class=\"highlight cpp\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e8\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e9\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e10\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e11\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e12\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e13\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e14\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e15\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e16\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003eSmartPointer {\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e \u003cspan class=\"keyword\"\u003epublic\u003c/span\u003e:\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  \u003cspan class=\"built_in\"\u003eSmartPointer\u003c/span\u003e(Point* pp);\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  \u003cspan class=\"built_in\"\u003eSmartPointer\u003c/span\u003e(Point p);\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  \u003cspan class=\"built_in\"\u003eSmartPointer\u003c/span\u003e(\u003cspan class=\"type\"\u003eint\u003c/span\u003e x, \u003cspan class=\"type\"\u003eint\u003c/span\u003e y);\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e \u003cspan class=\"keyword\"\u003epublic\u003c/span\u003e:\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  \u003cspan class=\"built_in\"\u003eSmartPointer\u003c/span\u003e();\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  \u003cspan class=\"built_in\"\u003eSmartPointer\u003c/span\u003e(\u003cspan class=\"type\"\u003econst\u003c/span\u003e SmartPointer\u0026amp; other);\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  \u003cspan class=\"built_in\"\u003eSmartPointer\u003c/span\u003e(SmartPointer\u0026amp;\u0026amp; other);\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  SmartPointer\u0026amp; \u003cspan class=\"keyword\"\u003eoperator\u003c/span\u003e=(\u003cspan class=\"type\"\u003econst\u003c/span\u003e SmartPointer\u0026amp; other);\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  SmartPointer\u0026amp; \u003cspan class=\"keyword\"\u003eoperator\u003c/span\u003e=(SmartPointer\u0026amp;\u0026amp; other) \u003cspan class=\"keyword\"\u003enoexcept\u003c/span\u003e;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  ~\u003cspan class=\"built_in\"\u003eSmartPointer\u003c/span\u003e();\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  \u003cspan class=\"comment\"\u003e// ...\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e};\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003ch4 id=\"获取对象\"\u003e\u003ca href=\"#获取对象\" class=\"headerlink\" title=\"获取对象\"\u003e\u003c/a\u003e获取对象\u003c/h4\u003e\u003cp\u003e我们还需要考虑，如何从智能指针对象出发，使用被绑定的对象。为此，我们可以重载 \u003ccode\u003eSmartPointer\u003c/code\u003e 类的 \u003ccode\u003eoperator-\u0026gt;()\u003c/code\u003e 和 \u003ccode\u003eoperator*()\u003c/code\u003e 操作符，将相关操作转发给底层的 \u003ccode\u003ePoint\u003c/code\u003e 对象。\u003c/p\u003e\n\u003cp\u003e因此，\u003ccode\u003eSmartPointer\u003c/code\u003e 类的声明又多了两个重载函数。\u003c/p\u003e\n\u003cfigure class=\"highlight cpp\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e8\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e9\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e10\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e11\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e12\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e13\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e14\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e15\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e16\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e17\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e18\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e19\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e20\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e21\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003eSmartPointer {\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e \u003cspan class=\"keyword\"\u003epublic\u003c/span\u003e:\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  \u003cspan class=\"built_in\"\u003eSmartPointer\u003c/span\u003e(Point* pp);\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  \u003cspan class=\"built_in\"\u003eSmartPointer\u003c/span\u003e(\u003cspan class=\"type\"\u003econst\u003c/span\u003e Point\u0026amp; p);\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  \u003cspan class=\"built_in\"\u003eSmartPointer\u003c/span\u003e(Point\u0026amp;\u0026amp; p);\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  \u003cspan class=\"built_in\"\u003eSmartPointer\u003c/span\u003e(\u003cspan class=\"type\"\u003eint\u003c/span\u003e x, \u003cspan class=\"type\"\u003eint\u003c/span\u003e y);\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e \u003cspan class=\"keyword\"\u003epublic\u003c/span\u003e:\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  \u003cspan class=\"built_in\"\u003eSmartPointer\u003c/span\u003e();\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  \u003cspan class=\"built_in\"\u003eSmartPointer\u003c/span\u003e(\u003cspan class=\"type\"\u003econst\u003c/span\u003e SmartPointer\u0026amp; other);\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  \u003cspan class=\"built_in\"\u003eSmartPointer\u003c/span\u003e(SmartPointer\u0026amp;\u0026amp; other) \u003cspan class=\"keyword\"\u003enoexcept\u003c/span\u003e;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  SmartPointer\u0026amp; \u003cspan class=\"keyword\"\u003eoperator\u003c/span\u003e=(\u003cspan class=\"type\"\u003econst\u003c/span\u003e SmartPointer\u0026amp; other);\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  SmartPointer\u0026amp; \u003cspan class=\"keyword\"\u003eoperator\u003c/span\u003e=(SmartPointer\u0026amp;\u0026amp; other) \u003cspan class=\"keyword\"\u003enoexcept\u003c/span\u003e;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  ~\u003cspan class=\"built_in\"\u003eSmartPointer\u003c/span\u003e();\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e \u003cspan class=\"keyword\"\u003epublic\u003c/span\u003e:\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  Point* \u003cspan class=\"keyword\"\u003eoperator\u003c/span\u003e-\u0026gt;() \u003cspan class=\"type\"\u003econst\u003c/span\u003e \u003cspan class=\"keyword\"\u003enoexcept\u003c/span\u003e;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  Point\u0026amp; \u003cspan class=\"keyword\"\u003eoperator\u003c/span\u003e*() \u003cspan class=\"type\"\u003econst\u003c/span\u003e \u003cspan class=\"keyword\"\u003enoexcept\u003c/span\u003e;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  \u003cspan class=\"comment\"\u003e// ...\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e};\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003ch4 id=\"引用计数\"\u003e\u003ca href=\"#引用计数\" class=\"headerlink\" title=\"引用计数\"\u003e\u003c/a\u003e引用计数\u003c/h4\u003e\u003cp\u003e先前提到，为了实现智能指针的效果，我们必须借助一个计数器，以便随时获知有多少智能指针绑定在同一个对象上。显而易见，这个计数器不应该是 \u003ccode\u003eSmartPointer\u003c/code\u003e 的一部分。这是因为，如果计数器是 \u003ccode\u003eSmartPointer\u003c/code\u003e 的一部分，那么每次增减计数器的值，都必须广播到每一个管理着目标对象的智能指针。这样做的代价太大了。\u003c/p\u003e\n\u003cp\u003e为此，我们为 \u003ccode\u003ePoint\u003c/code\u003e 类构造一个辅助类 \u003ccode\u003ePointCounter\u003c/code\u003e，来做计数器使用。\u003ccode\u003ePointCounter\u003c/code\u003e 类完全是为了实现 \u003ccode\u003eSmartPointer\u003c/code\u003e 而设计的，它不应被 \u003ccode\u003eSmartPointer\u003c/code\u003e 类以外的代码修改。因此，\u003ccode\u003ePointCounter\u003c/code\u003e 类的所有成员都应是 \u003ccode\u003eprivate\u003c/code\u003e 的，并声明 \u003ccode\u003eSmartPointer\u003c/code\u003e 为其友元类。\u003c/p\u003e\n\u003cfigure class=\"highlight cpp\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e8\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e9\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e10\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e11\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e12\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"keyword\"\u003eclass\u003c/span\u003e \u003cspan class=\"title class_\"\u003ePointCounter\u003c/span\u003e {\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e \u003cspan class=\"keyword\"\u003eprivate\u003c/span\u003e:\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  \u003cspan class=\"keyword\"\u003efriend\u003c/span\u003e \u003cspan class=\"keyword\"\u003eclass\u003c/span\u003e \u003cspan class=\"title class_\"\u003eSmartPointer\u003c/span\u003e;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  Point p_;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  \u003cspan class=\"type\"\u003esize_t\u003c/span\u003e count_;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  \u003cspan class=\"built_in\"\u003ePointCounter\u003c/span\u003e() : count_{\u003cspan class=\"number\"\u003e1\u003c/span\u003e} {}                         \u003cspan class=\"comment\"\u003e// 1.\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  \u003cspan class=\"built_in\"\u003ePointCounter\u003c/span\u003e(\u003cspan class=\"type\"\u003econst\u003c/span\u003e Point\u0026amp; p) : p_{p}, count_{\u003cspan class=\"number\"\u003e1\u003c/span\u003e} {}    \u003cspan class=\"comment\"\u003e// 2.\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  \u003cspan class=\"built_in\"\u003ePointCounter\u003c/span\u003e(Point\u0026amp;\u0026amp; p) : p_{p}, count_{\u003cspan class=\"number\"\u003e1\u003c/span\u003e} {}         \u003cspan class=\"comment\"\u003e// 3.\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  \u003cspan class=\"built_in\"\u003ePointCounter\u003c/span\u003e(\u003cspan class=\"type\"\u003eint\u003c/span\u003e x, \u003cspan class=\"type\"\u003eint\u003c/span\u003e y) : p_{x, y}, count_{\u003cspan class=\"number\"\u003e1\u003c/span\u003e} {}   \u003cspan class=\"comment\"\u003e// 4.\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e};\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e由于 \u003ccode\u003ePointCounter\u003c/code\u003e 是为了计数而设计的，因此 (1) 处的所有构造函数，在构造时都将计数器设置为 \u003ccode\u003e1\u003c/code\u003e。(2), (3) 两处则分别是调用 \u003ccode\u003ePoint\u003c/code\u003e 类的拷贝和移动构造函数。(4) 则调用 \u003ccode\u003ePoint(int x, int y)\u003c/code\u003e。\u003c/p\u003e\n\u003ch4 id=\"SmartPointer-的实现\"\u003e\u003ca href=\"#SmartPointer-的实现\" class=\"headerlink\" title=\"SmartPointer 的实现\"\u003e\u003c/a\u003e\u003ccode\u003eSmartPointer\u003c/code\u003e 的实现\u003c/h4\u003e\u003cp\u003e至此，我们可以实现 \u003ccode\u003eSmartPointer\u003c/code\u003e 类了。\u003c/p\u003e\n\u003cfigure class=\"highlight cpp\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e8\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e9\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e10\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e11\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e12\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e13\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e14\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e15\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e16\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e17\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e18\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e19\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e20\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e21\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e22\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e23\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e24\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e25\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e26\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e27\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e28\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e29\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e30\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e31\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e32\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e33\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e34\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e35\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e36\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e37\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e38\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e39\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e40\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e41\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e42\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e43\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e44\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e45\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e46\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e47\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e48\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e49\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e50\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e51\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e52\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e53\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e54\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"keyword\"\u003eclass\u003c/span\u003e \u003cspan class=\"title class_\"\u003eSmartPointer\u003c/span\u003e {\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e \u003cspan class=\"keyword\"\u003epublic\u003c/span\u003e:\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  \u003cspan class=\"built_in\"\u003eSmartPointer\u003c/span\u003e(Point* pp) : ptctr_{\u003cspan class=\"keyword\"\u003enew\u003c/span\u003e \u003cspan class=\"built_in\"\u003ePointCounter\u003c/span\u003e(*pp)} {}            \u003cspan class=\"comment\"\u003e// 1.\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  \u003cspan class=\"built_in\"\u003eSmartPointer\u003c/span\u003e(\u003cspan class=\"type\"\u003econst\u003c/span\u003e Point\u0026amp; p) : ptctr_{\u003cspan class=\"keyword\"\u003enew\u003c/span\u003e \u003cspan class=\"built_in\"\u003ePointCounter\u003c/span\u003e(p)} {}\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  \u003cspan class=\"built_in\"\u003eSmartPointer\u003c/span\u003e(Point\u0026amp;\u0026amp; p) : ptctr_{\u003cspan class=\"keyword\"\u003enew\u003c/span\u003e \u003cspan class=\"built_in\"\u003ePointCounter\u003c/span\u003e(p)} {}\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  \u003cspan class=\"built_in\"\u003eSmartPointer\u003c/span\u003e(\u003cspan class=\"type\"\u003eint\u003c/span\u003e x, \u003cspan class=\"type\"\u003eint\u003c/span\u003e y) : ptctr_{\u003cspan class=\"keyword\"\u003enew\u003c/span\u003e \u003cspan class=\"built_in\"\u003ePointCounter\u003c/span\u003e(x, y)} {}\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e \u003cspan class=\"keyword\"\u003eprivate\u003c/span\u003e:\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  \u003cspan class=\"type\"\u003evoid\u003c/span\u003e \u003cspan class=\"built_in\"\u003etry_decrease\u003c/span\u003e() {\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"keyword\"\u003eif\u003c/span\u003e (\u003cspan class=\"literal\"\u003enullptr\u003c/span\u003e != ptctr_) {\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e      \u003cspan class=\"keyword\"\u003eif\u003c/span\u003e (\u003cspan class=\"number\"\u003e1\u003c/span\u003e == ptctr_-\u0026gt;count_) {\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        \u003cspan class=\"keyword\"\u003edelete\u003c/span\u003e ptctr_;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e      } \u003cspan class=\"keyword\"\u003eelse\u003c/span\u003e {\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        --(ptctr_-\u0026gt;count_);\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e      }\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    } \u003cspan class=\"keyword\"\u003eelse\u003c/span\u003e {}\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  }\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e \u003cspan class=\"keyword\"\u003epublic\u003c/span\u003e:\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  \u003cspan class=\"built_in\"\u003eSmartPointer\u003c/span\u003e() : ptctr_{\u003cspan class=\"keyword\"\u003enew\u003c/span\u003e PointCounter} {}                          \u003cspan class=\"comment\"\u003e// 2.\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  \u003cspan class=\"built_in\"\u003eSmartPointer\u003c/span\u003e(\u003cspan class=\"type\"\u003econst\u003c/span\u003e SmartPointer\u0026amp; other) : ptctr_{other.ptctr_} {      \u003cspan class=\"comment\"\u003e// 3.\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    ++(ptctr_-\u0026gt;count_);\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  }\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  \u003cspan class=\"built_in\"\u003eSmartPointer\u003c/span\u003e(SmartPointer\u0026amp;\u0026amp; other) \u003cspan class=\"keyword\"\u003enoexcept\u003c/span\u003e : ptctr_{other.ptctr_} {\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    other.ptctr_ = \u003cspan class=\"literal\"\u003enullptr\u003c/span\u003e;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  }\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  SmartPointer\u0026amp; \u003cspan class=\"keyword\"\u003eoperator\u003c/span\u003e=(\u003cspan class=\"type\"\u003econst\u003c/span\u003e SmartPointer\u0026amp; other) {                  \u003cspan class=\"comment\"\u003e// 4.\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"built_in\"\u003etry_decrease\u003c/span\u003e();\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    ptctr_ = other.ptctr_;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    ++(ptctr_-\u0026gt;count_);\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"keyword\"\u003ereturn\u003c/span\u003e *\u003cspan class=\"keyword\"\u003ethis\u003c/span\u003e;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  }\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  SmartPointer\u0026amp; \u003cspan class=\"keyword\"\u003eoperator\u003c/span\u003e=(SmartPointer\u0026amp;\u0026amp; other) \u003cspan class=\"keyword\"\u003enoexcept\u003c/span\u003e {\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"built_in\"\u003etry_decrease\u003c/span\u003e();\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    ptctr_ = other.ptctr_;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    other.ptctr_ = \u003cspan class=\"literal\"\u003enullptr\u003c/span\u003e;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"keyword\"\u003ereturn\u003c/span\u003e *\u003cspan class=\"keyword\"\u003ethis\u003c/span\u003e;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  }\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  ~\u003cspan class=\"built_in\"\u003eSmartPointer\u003c/span\u003e() {\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"built_in\"\u003etry_decrease\u003c/span\u003e();\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    ptctr_ = \u003cspan class=\"literal\"\u003enullptr\u003c/span\u003e;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  }\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e \u003cspan class=\"keyword\"\u003epublic\u003c/span\u003e:\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  Point* \u003cspan class=\"keyword\"\u003eoperator\u003c/span\u003e-\u0026gt;() \u003cspan class=\"type\"\u003econst\u003c/span\u003e \u003cspan class=\"keyword\"\u003enoexcept\u003c/span\u003e {                                  \u003cspan class=\"comment\"\u003e// 5.\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"keyword\"\u003ereturn\u003c/span\u003e \u0026amp;(ptctr_-\u0026gt;p_);\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  }\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  Point\u0026amp; \u003cspan class=\"keyword\"\u003eoperator\u003c/span\u003e*() \u003cspan class=\"type\"\u003econst\u003c/span\u003e \u003cspan class=\"keyword\"\u003enoexcept\u003c/span\u003e {\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"keyword\"\u003ereturn\u003c/span\u003e ptctr_-\u0026gt;p_;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  }\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e \u003cspan class=\"keyword\"\u003eprivate\u003c/span\u003e:\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  PointCounter* ptctr_ = \u003cspan class=\"literal\"\u003enullptr\u003c/span\u003e;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e};\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e这里，(1) 处四个构造函数负责构造一个新的 \u003ccode\u003ePointCounter\u003c/code\u003e 对象，并将其指针赋值给 \u003ccode\u003eptctr_\u003c/code\u003e；(2) 处的默认构造函数则构造了一个空的 \u003ccode\u003ePointCounter\u003c/code\u003e 对象（其计数值也为 1）；(3) 处的拷贝和移动构造函数负责从 \u003ccode\u003eother\u003c/code\u003e 处获得 \u003ccode\u003eptctr_\u003c/code\u003e 的值，并处理好计数器的值的变化；(4) 是拷贝和移动赋值运算符，在执行时，首先要先释放计数器辅助类，而后从 \u003ccode\u003eother\u003c/code\u003e 处获取新的计数器辅助类对象的指针；(5) 处重载了成员访问运算符，将成员访问的操作转发到 \u003ccode\u003ePoint\u003c/code\u003e 对象上。\u003c/p\u003e\n\u003cp\u003e如此，我们就得到了第一版的智能指针的实现。\u003c/p\u003e\n\u003ch2 id=\"第二次尝试\"\u003e\u003ca href=\"#第二次尝试\" class=\"headerlink\" title=\"第二次尝试\"\u003e\u003c/a\u003e第二次尝试\u003c/h2\u003e\u003ch3 id=\"分析\"\u003e\u003ca href=\"#分析\" class=\"headerlink\" title=\"分析\"\u003e\u003c/a\u003e分析\u003c/h3\u003e\u003cp\u003e在第一次尝试的过程中，为了快速搭建模型，我们做一个假设：我们的例子从 \u003ccode\u003eAnimal\u003c/code\u003e 切换到了 \u003ccode\u003ePoint\u003c/code\u003e，从而忽略了继承和动态绑定。这个假设导致我们在后续处理引用计数的过程中，使用了十分粗暴的方式：定义一个与 \u003ccode\u003ePoint\u003c/code\u003e 对应的 \u003ccode\u003ePointCounter\u003c/code\u003e 类。事实上，这种方法是很不好的。\u003c/p\u003e\n\u003cp\u003e首先，\u003ccode\u003ePointCounter\u003c/code\u003e 类内包含了一个类型为 \u003ccode\u003ePoint\u003c/code\u003e 的成员，从而禁止了动态绑定。这是因为 C++ 的动态绑定是建立在基类的指针或引用的基础之上的。其次，从抽象的角度来说，\u003ccode\u003eSmartPointer\u003c/code\u003e 需要的计数器，与 \u003ccode\u003eSmartPointer\u003c/code\u003e 内绑定的对象的类型没有关系，因此不应该针对 \u003ccode\u003ePoint\u003c/code\u003e 类构建一个 \u003ccode\u003ePointCounter\u003c/code\u003e 辅助类。\u003c/p\u003e\n\u003cp\u003e当前 \u003ccode\u003eSmartPointer\u003c/code\u003e 类存在的问题，促使我们继续思考去解决。基本来说，我们需要对引用技术器进行单独的抽象，将数据与计数器分离开来。\u003c/p\u003e\n\u003ch3 id=\"引用计数器\"\u003e\u003ca href=\"#引用计数器\" class=\"headerlink\" title=\"引用计数器\"\u003e\u003c/a\u003e引用计数器\u003c/h3\u003e\u003cp\u003e我们从最基本的部分开始。\u003c/p\u003e\n\u003cp\u003e一个引用计数器类，至少应该包含一个指向无符号整数类型的指针。使用无符号的整数，是因为我们的目的是引用计数，它不会小于零。使用指针是因为我们希望为这个计数器动态分配内存，使得多个引用计数器类的对象可以共享。\u003c/p\u003e\n\u003cp\u003e因此，考虑构造函数、析构函数、赋值运算符，引用计数器类的定义目前看起来是这样。\u003c/p\u003e\n\u003cfigure class=\"highlight cpp\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e8\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e9\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e10\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e11\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e12\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e13\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e14\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e15\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e16\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e17\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e18\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e19\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e20\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e21\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e22\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e23\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e24\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e25\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e26\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e27\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e28\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e29\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e30\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e31\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e32\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e33\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e34\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e35\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e36\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e37\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e38\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"keyword\"\u003eclass\u003c/span\u003e \u003cspan class=\"title class_\"\u003eRefCount\u003c/span\u003e {\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e \u003cspan class=\"keyword\"\u003eprivate\u003c/span\u003e:\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  \u003cspan class=\"type\"\u003esize_t\u003c/span\u003e* count_ = \u003cspan class=\"literal\"\u003enullptr\u003c/span\u003e;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e \u003cspan class=\"keyword\"\u003eprivate\u003c/span\u003e:\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  \u003cspan class=\"function\"\u003e\u003cspan class=\"type\"\u003evoid\u003c/span\u003e \u003cspan class=\"title\"\u003etry_decrease\u003c/span\u003e\u003cspan class=\"params\"\u003e()\u003c/span\u003e \u003c/span\u003e{\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"keyword\"\u003eif\u003c/span\u003e (\u003cspan class=\"literal\"\u003enullptr\u003c/span\u003e != count_) {\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e      \u003cspan class=\"keyword\"\u003eif\u003c/span\u003e (\u003cspan class=\"number\"\u003e1\u003c/span\u003e == *count_) {\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        \u003cspan class=\"keyword\"\u003edelete\u003c/span\u003e count_;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e      } \u003cspan class=\"keyword\"\u003eelse\u003c/span\u003e {\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        --(*count_);\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e      }\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    } \u003cspan class=\"keyword\"\u003eelse\u003c/span\u003e {}\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  }\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e \u003cspan class=\"keyword\"\u003epublic\u003c/span\u003e:\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  \u003cspan class=\"built_in\"\u003eRefCount\u003c/span\u003e() : count_{\u003cspan class=\"keyword\"\u003enew\u003c/span\u003e \u003cspan class=\"built_in\"\u003esize_t\u003c/span\u003e(\u003cspan class=\"number\"\u003e1\u003c/span\u003e)} {}\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  \u003cspan class=\"built_in\"\u003eRefCount\u003c/span\u003e(\u003cspan class=\"type\"\u003econst\u003c/span\u003e RefCount\u0026amp; other) : count_{other.count_} { ++(*count_); }\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  \u003cspan class=\"built_in\"\u003eRefCount\u003c/span\u003e(RefCount\u0026amp;\u0026amp; other) : count_{other.count_} { other.count_ = \u003cspan class=\"literal\"\u003enullptr\u003c/span\u003e; }\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  RefCount\u0026amp; \u003cspan class=\"keyword\"\u003eoperator\u003c/span\u003e=(\u003cspan class=\"type\"\u003econst\u003c/span\u003e RefCount\u0026amp; other) {\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"built_in\"\u003etry_decrease\u003c/span\u003e();\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    count_ = other.count_;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    ++(*count_);\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"keyword\"\u003ereturn\u003c/span\u003e *\u003cspan class=\"keyword\"\u003ethis\u003c/span\u003e;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  }\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  RefCount\u0026amp; \u003cspan class=\"keyword\"\u003eoperator\u003c/span\u003e=(RefCount\u0026amp;\u0026amp; other) {\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"built_in\"\u003etry_decrease\u003c/span\u003e();\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    count_ = other.count_;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    other.count_ = \u003cspan class=\"literal\"\u003enullptr\u003c/span\u003e;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"keyword\"\u003ereturn\u003c/span\u003e *\u003cspan class=\"keyword\"\u003ethis\u003c/span\u003e;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  }\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  ~\u003cspan class=\"built_in\"\u003eRefCount\u003c/span\u003e() {\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"built_in\"\u003etry_decrease\u003c/span\u003e();\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    count_ = \u003cspan class=\"literal\"\u003enullptr\u003c/span\u003e;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  }\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  \u003cspan class=\"comment\"\u003e// ...\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e};\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e回顾 \u003ccode\u003eSmartPointer\u003c/code\u003e 的析构函数，我们不难发现：为了在合适的实际销毁 \u003ccode\u003ePoint\u003c/code\u003e 对象，我们必须有办法知道当前析构的 \u003ccode\u003eSmartPointer\u003c/code\u003e 是否为最后一个绑定在目标 \u003ccode\u003ePoint\u003c/code\u003e 对象上的智能指针。因此，我们的 \u003ccode\u003eRefCount\u003c/code\u003e 类必须提供这样的接口。\u003c/p\u003e\n\u003cfigure class=\"highlight cpp\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"keyword\"\u003eclass\u003c/span\u003e \u003cspan class=\"title class_\"\u003eRefCounter\u003c/span\u003e {\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  \u003cspan class=\"comment\"\u003e// ...\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e \u003cspan class=\"keyword\"\u003epublic\u003c/span\u003e:\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  \u003cspan class=\"function\"\u003e\u003cspan class=\"type\"\u003ebool\u003c/span\u003e \u003cspan class=\"title\"\u003eonly\u003c/span\u003e\u003cspan class=\"params\"\u003e()\u003c/span\u003e \u003cspan class=\"type\"\u003econst\u003c/span\u003e \u003c/span\u003e{ \u003cspan class=\"keyword\"\u003ereturn\u003c/span\u003e (\u003cspan class=\"number\"\u003e1\u003c/span\u003e == *count_); }\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e};\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003ch3 id=\"重新实现智能指针\"\u003e\u003ca href=\"#重新实现智能指针\" class=\"headerlink\" title=\"重新实现智能指针\"\u003e\u003c/a\u003e重新实现智能指针\u003c/h3\u003e\u003cp\u003e至此，我们可以考虑重新实现智能指针类了。\u003c/p\u003e\n\u003cfigure class=\"highlight cpp\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e8\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e9\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e10\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e11\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e12\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e13\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e14\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e15\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e16\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e17\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e18\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e19\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e20\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e21\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e22\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e23\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e24\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e25\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e26\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e27\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e28\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e29\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e30\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e31\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e32\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e33\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e34\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e35\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e36\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e37\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e38\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e39\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e40\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e41\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e42\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e43\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e44\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e45\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e46\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e47\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e48\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e49\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"keyword\"\u003eclass\u003c/span\u003e \u003cspan class=\"title class_\"\u003eSmartPointer\u003c/span\u003e {\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e \u003cspan class=\"keyword\"\u003epublic\u003c/span\u003e:\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  \u003cspan class=\"built_in\"\u003eSmartPointer\u003c/span\u003e(Point* pp) : point_{pp} {}                   \u003cspan class=\"comment\"\u003e// 1.\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  \u003cspan class=\"built_in\"\u003eSmartPointer\u003c/span\u003e(\u003cspan class=\"type\"\u003econst\u003c/span\u003e Point\u0026amp; p) : point_{\u003cspan class=\"keyword\"\u003enew\u003c/span\u003e \u003cspan class=\"built_in\"\u003ePoint\u003c/span\u003e(p)} {}\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  \u003cspan class=\"built_in\"\u003eSmartPointer\u003c/span\u003e(Point\u0026amp;\u0026amp; p) : point_{\u003cspan class=\"keyword\"\u003enew\u003c/span\u003e Point{p}} {}\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  \u003cspan class=\"built_in\"\u003eSmartPointer\u003c/span\u003e(\u003cspan class=\"type\"\u003eint\u003c/span\u003e x, \u003cspan class=\"type\"\u003eint\u003c/span\u003e y) : point_{\u003cspan class=\"keyword\"\u003enew\u003c/span\u003e Point{x, y}} {}\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e \u003cspan class=\"keyword\"\u003epublic\u003c/span\u003e:\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  \u003cspan class=\"built_in\"\u003eSmartPointer\u003c/span\u003e() : point_{\u003cspan class=\"keyword\"\u003enew\u003c/span\u003e Point} {}\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  \u003cspan class=\"built_in\"\u003eSmartPointer\u003c/span\u003e(\u003cspan class=\"type\"\u003econst\u003c/span\u003e SmartPointer\u0026amp; other) = \u003cspan class=\"keyword\"\u003edefault\u003c/span\u003e;        \u003cspan class=\"comment\"\u003e// 2.\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  \u003cspan class=\"built_in\"\u003eSmartPointer\u003c/span\u003e(SmartPointer\u0026amp;\u0026amp; other) \u003cspan class=\"keyword\"\u003enoexcept\u003c/span\u003e : point_{other.point_}, refc_{std::\u003cspan class=\"built_in\"\u003emove\u003c/span\u003e(other.refc_)} {\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    other.point_ = \u003cspan class=\"literal\"\u003enullptr\u003c/span\u003e;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  }\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  SmartPointer\u0026amp; \u003cspan class=\"keyword\"\u003eoperator\u003c/span\u003e=(\u003cspan class=\"type\"\u003econst\u003c/span\u003e SmartPointer\u0026amp; other) {      \u003cspan class=\"comment\"\u003e// 3.\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"keyword\"\u003eif\u003c/span\u003e (refc_.\u003cspan class=\"built_in\"\u003eonly\u003c/span\u003e()) {\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e      \u003cspan class=\"keyword\"\u003edelete\u003c/span\u003e point_;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    }\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    refc_  = other.refc_;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    point_ = other.point_;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"keyword\"\u003ereturn\u003c/span\u003e *\u003cspan class=\"keyword\"\u003ethis\u003c/span\u003e;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  }\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  SmartPointer\u0026amp; \u003cspan class=\"keyword\"\u003eoperator\u003c/span\u003e=(SmartPointer\u0026amp;\u0026amp; other) \u003cspan class=\"keyword\"\u003enoexcept\u003c/span\u003e {\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"keyword\"\u003eif\u003c/span\u003e (refc_.\u003cspan class=\"built_in\"\u003eonly\u003c/span\u003e()) {\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e      \u003cspan class=\"keyword\"\u003edelete\u003c/span\u003e point_;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    }\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    refc_  = std::\u003cspan class=\"built_in\"\u003emove\u003c/span\u003e(other.refc_);\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    point_ = other.point_;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    other.point_ = \u003cspan class=\"literal\"\u003enullptr\u003c/span\u003e;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"keyword\"\u003ereturn\u003c/span\u003e *\u003cspan class=\"keyword\"\u003ethis\u003c/span\u003e;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  }\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  ~\u003cspan class=\"built_in\"\u003eSmartPointer\u003c/span\u003e() {                                         \u003cspan class=\"comment\"\u003e// 4.\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"keyword\"\u003eif\u003c/span\u003e (point_ \u003cspan class=\"keyword\"\u003eand\u003c/span\u003e refc_.\u003cspan class=\"built_in\"\u003eonly\u003c/span\u003e()) {\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e      \u003cspan class=\"keyword\"\u003edelete\u003c/span\u003e point_;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e      point_ = \u003cspan class=\"literal\"\u003enullptr\u003c/span\u003e;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    }\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  }\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e \u003cspan class=\"keyword\"\u003epublic\u003c/span\u003e:\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  Point* \u003cspan class=\"keyword\"\u003eoperator\u003c/span\u003e-\u0026gt;() \u003cspan class=\"type\"\u003econst\u003c/span\u003e \u003cspan class=\"keyword\"\u003enoexcept\u003c/span\u003e {\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"keyword\"\u003ereturn\u003c/span\u003e point_;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  }\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  Point\u0026amp; \u003cspan class=\"keyword\"\u003eoperator\u003c/span\u003e*() \u003cspan class=\"type\"\u003econst\u003c/span\u003e \u003cspan class=\"keyword\"\u003enoexcept\u003c/span\u003e {\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"keyword\"\u003ereturn\u003c/span\u003e *point_;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  }\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e \u003cspan class=\"keyword\"\u003eprivate\u003c/span\u003e:\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  Point* point_ = \u003cspan class=\"literal\"\u003enullptr\u003c/span\u003e;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  RefCount refc_;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e};\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e这里，(1) 处定义的四个构造函数，由于无需再使用 \u003ccode\u003ePointCounter\u003c/code\u003e 类，变得简单了一些；由于 \u003ccode\u003eSmartPointer\u003c/code\u003e 的所有数据成员都能自己处理好拷贝和移动，因此 (2) 处 \u003ccode\u003eSmartPointer\u003c/code\u003e 的拷贝构造函数可以让编译器自动生成；(3) 处实现的拷贝和移动赋值运算符和之前相比也有了很大变化：由于 \u003ccode\u003eRefCount\u003c/code\u003e 可以提供了 \u003ccode\u003eonly()\u003c/code\u003e 接口，同时由于 \u003ccode\u003eRefCount\u003c/code\u003e 能够自行处理好拷贝和移动赋值，赋值运算的实现变得简单了很多；基于同样的原因，(4) 处的析构函数也无需处理 \u003ccode\u003eRefCount\u003c/code\u003e 类型的数据成员——交给它自己处理即可。\u003c/p\u003e\n\u003ch2 id=\"第三次尝试\"\u003e\u003ca href=\"#第三次尝试\" class=\"headerlink\" title=\"第三次尝试\"\u003e\u003c/a\u003e第三次尝试\u003c/h2\u003e\u003ch3 id=\"分析-1\"\u003e\u003ca href=\"#分析-1\" class=\"headerlink\" title=\"分析\"\u003e\u003c/a\u003e分析\u003c/h3\u003e\u003cp\u003e相比第一版，第二版的 \u003ccode\u003eSmartPointer\u003c/code\u003e 有了不少改进。但是，它有点名不副实——虽然类的名字是 \u003ccode\u003eSmartPointer\u003c/code\u003e，但是却只能和 \u003ccode\u003ePoint\u003c/code\u003e 这一个类联用。为此，我们需要 C++ 中的模板技术。\u003c/p\u003e\n\u003cp\u003e在第二版 \u003ccode\u003eSmartPointer\u003c/code\u003e 实现中，大多数的内容都与 \u003ccode\u003ePoint\u003c/code\u003e 类无关，唯独构造函数 \u003ccode\u003eSmartPointer(int x, int y)\u003c/code\u003e 是专为 \u003ccode\u003ePoint\u003c/code\u003e 类设计的。这一构造函数所作的唯一一件事情，是将收到的参数转发给 \u003ccode\u003ePoint\u003c/code\u003e 相应的构造函数。我们希望 \u003ccode\u003eSmartPointer\u003c/code\u003e 类的形式是 \u003ccode\u003etemplate \u0026lt;typename T\u0026gt; class SmartPointer;\u003c/code\u003e。但 \u003ccode\u003eT\u003c/code\u003e 的构造函数可以千奇百怪，于是若要将 \u003ccode\u003eT\u003c/code\u003e 的构造函数都在 \u003ccode\u003eSmartPointer\u003c/code\u003e 中做转发，就不得不变成 \u003ccode\u003etemplate \u0026lt;typename T, typename... Args\u0026gt; class SmartPointer;\u003c/code\u003e。这很不好；因此，我们需要将这类构造函数从 \u003ccode\u003eSmartPointer\u003c/code\u003e 的定义中迁移出去。\u003c/p\u003e\n\u003cp\u003e另一方面，我们又希望能够保留从 \u003ccode\u003eT\u003c/code\u003e 的构造函数出发，直接构造 \u003ccode\u003eSmartPointer\u003c/code\u003e 的能力。为此，我们需要引入一个函数模板 \u003ccode\u003emake_smart\u003c/code\u003e。\u003c/p\u003e\n\u003cfigure class=\"highlight cpp\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"function\"\u003e\u003cspan class=\"keyword\"\u003etemplate\u003c/span\u003e\u0026lt;\u003cspan class=\"keyword\"\u003etypename\u003c/span\u003e T, \u003cspan class=\"keyword\"\u003etypename\u003c/span\u003e... Args\u0026gt;\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"function\"\u003eSmartPointer\u0026lt;T\u0026gt; \u003cspan class=\"title\"\u003emake_smart\u003c/span\u003e\u003cspan class=\"params\"\u003e(Args\u0026amp;\u0026amp;... args)\u003c/span\u003e\u003c/span\u003e;\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e这个函数模板能够接受任意个数及类型的参数，并构造一个 \u003ccode\u003eSmartPointer\u0026lt;T\u0026gt;\u003c/code\u003e 类型的智能指针。\u003c/p\u003e\n\u003cp\u003e接下来，我们首先改造 \u003ccode\u003eSmartPointer\u003c/code\u003e 的定义，然后实现 \u003ccode\u003emake_smart\u003c/code\u003e 函数模板。\u003c/p\u003e\n\u003ch3 id=\"改造智能指针\"\u003e\u003ca href=\"#改造智能指针\" class=\"headerlink\" title=\"改造智能指针\"\u003e\u003c/a\u003e改造智能指针\u003c/h3\u003e\u003cp\u003e将 \u003ccode\u003eSmartPointer\u003c/code\u003e 改造成类模板是很容易的事情：只需要将所有的 \u003ccode\u003ePoint\u003c/code\u003e 改成 \u003ccode\u003eT\u003c/code\u003e，并声明为类模板即可——当然，要去掉上述构造函数。为了区分，这里将 \u003ccode\u003eSmartPointer\u003c/code\u003e 重命名为 \u003ccode\u003esmart_ptr\u003c/code\u003e。\u003c/p\u003e\n\u003cfigure class=\"highlight cpp\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e8\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e9\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e10\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e11\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e12\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e13\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e14\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e15\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e16\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e17\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e18\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e19\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e20\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e21\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e22\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e23\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e24\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e25\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e26\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e27\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e28\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e29\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e30\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e31\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e32\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e33\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e34\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e35\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e36\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e37\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e38\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e39\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e40\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e41\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e42\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e43\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e44\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e45\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e46\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e47\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e48\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e49\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e50\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"keyword\"\u003etemplate\u003c/span\u003e\u0026lt;\u003cspan class=\"keyword\"\u003etypename\u003c/span\u003e T\u0026gt;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"keyword\"\u003eclass\u003c/span\u003e \u003cspan class=\"title class_\"\u003esmart_ptr\u003c/span\u003e {\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e \u003cspan class=\"keyword\"\u003epublic\u003c/span\u003e:\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  \u003cspan class=\"keyword\"\u003eusing\u003c/span\u003e value_type = T;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e \u003cspan class=\"keyword\"\u003epublic\u003c/span\u003e:\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  \u003cspan class=\"built_in\"\u003esmart_ptr\u003c/span\u003e(value_type* pp) : value_{pp} {}\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  \u003cspan class=\"built_in\"\u003esmart_ptr\u003c/span\u003e(\u003cspan class=\"type\"\u003econst\u003c/span\u003e value_type\u0026amp; p) : value_{\u003cspan class=\"keyword\"\u003enew\u003c/span\u003e \u003cspan class=\"built_in\"\u003evalue_type\u003c/span\u003e(p)} {}\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  \u003cspan class=\"built_in\"\u003esmart_ptr\u003c/span\u003e(value_type\u0026amp;\u0026amp; p) : value_{\u003cspan class=\"keyword\"\u003enew\u003c/span\u003e value_type{p}} {}\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e \u003cspan class=\"keyword\"\u003epublic\u003c/span\u003e:\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  \u003cspan class=\"built_in\"\u003esmart_ptr\u003c/span\u003e() : value_{\u003cspan class=\"keyword\"\u003enew\u003c/span\u003e value_type} {}\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  \u003cspan class=\"built_in\"\u003esmart_ptr\u003c/span\u003e(\u003cspan class=\"type\"\u003econst\u003c/span\u003e smart_ptr\u0026amp; other) = \u003cspan class=\"keyword\"\u003edefault\u003c/span\u003e;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  \u003cspan class=\"built_in\"\u003esmart_ptr\u003c/span\u003e(smart_ptr\u0026amp;\u0026amp; other) = \u003cspan class=\"keyword\"\u003edefault\u003c/span\u003e;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  smart_ptr\u0026amp; \u003cspan class=\"keyword\"\u003eoperator\u003c/span\u003e=(\u003cspan class=\"type\"\u003econst\u003c/span\u003e smart_ptr\u0026amp; other) {\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"keyword\"\u003eif\u003c/span\u003e (refc_.\u003cspan class=\"built_in\"\u003eonly\u003c/span\u003e()) {\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e      \u003cspan class=\"keyword\"\u003edelete\u003c/span\u003e value_;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    }\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    refc_  = other.refc_;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    value_ = other.value_;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"keyword\"\u003ereturn\u003c/span\u003e *\u003cspan class=\"keyword\"\u003ethis\u003c/span\u003e;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  }\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  smart_ptr\u0026amp; \u003cspan class=\"keyword\"\u003eoperator\u003c/span\u003e=(smart_ptr\u0026amp;\u0026amp; other) \u003cspan class=\"keyword\"\u003enoexcept\u003c/span\u003e {\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"keyword\"\u003eif\u003c/span\u003e (refc_.\u003cspan class=\"built_in\"\u003eonly\u003c/span\u003e()) {\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e      \u003cspan class=\"keyword\"\u003edelete\u003c/span\u003e value_;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    }\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    refc_  = std::\u003cspan class=\"built_in\"\u003emove\u003c/span\u003e(other.refc_);\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    value_ = other.value_;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    other.value_ = \u003cspan class=\"literal\"\u003enullptr\u003c/span\u003e;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"keyword\"\u003ereturn\u003c/span\u003e *\u003cspan class=\"keyword\"\u003ethis\u003c/span\u003e;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  }\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  ~\u003cspan class=\"built_in\"\u003esmart_ptr\u003c/span\u003e() {\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"keyword\"\u003eif\u003c/span\u003e (value_ \u003cspan class=\"keyword\"\u003eand\u003c/span\u003e refc_.\u003cspan class=\"built_in\"\u003eonly\u003c/span\u003e()) {\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e      \u003cspan class=\"keyword\"\u003edelete\u003c/span\u003e value_;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e      value_ = \u003cspan class=\"literal\"\u003enullptr\u003c/span\u003e;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    }\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  }\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e \u003cspan class=\"keyword\"\u003epublic\u003c/span\u003e:\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  value_type* \u003cspan class=\"keyword\"\u003eoperator\u003c/span\u003e-\u0026gt;() \u003cspan class=\"type\"\u003econst\u003c/span\u003e \u003cspan class=\"keyword\"\u003enoexcept\u003c/span\u003e {\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"keyword\"\u003ereturn\u003c/span\u003e value_;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  }\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  value_type\u0026amp; \u003cspan class=\"keyword\"\u003eoperator\u003c/span\u003e*() \u003cspan class=\"type\"\u003econst\u003c/span\u003e \u003cspan class=\"keyword\"\u003enoexcept\u003c/span\u003e {\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"keyword\"\u003ereturn\u003c/span\u003e *value_;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  }\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e \u003cspan class=\"keyword\"\u003eprivate\u003c/span\u003e:\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  value_type* value_ = \u003cspan class=\"literal\"\u003enullptr\u003c/span\u003e;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  RefCount refc_;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e};\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003ch3 id=\"实现-make-smart-函数模板\"\u003e\u003ca href=\"#实现-make-smart-函数模板\" class=\"headerlink\" title=\"实现 make_smart 函数模板\"\u003e\u003c/a\u003e实现 \u003ccode\u003emake_smart\u003c/code\u003e 函数模板\u003c/h3\u003e\u003cp\u003e基础版本的 \u003ccode\u003emake_smart\u003c/code\u003e 也是很容易的，只需要将接收到的参数转发给 \u003ccode\u003eT\u003c/code\u003e 的构造函数即可。\u003c/p\u003e\n\u003cfigure class=\"highlight cpp\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"keyword\"\u003etemplate\u003c/span\u003e\u0026lt;\u003cspan class=\"keyword\"\u003etypename\u003c/span\u003e T, \u003cspan class=\"keyword\"\u003etypename\u003c/span\u003e... Args\u0026gt;                     \u003cspan class=\"comment\"\u003e// 1.\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"function\"\u003esmart_ptr\u0026lt;T\u0026gt; \u003cspan class=\"title\"\u003emake_smart\u003c/span\u003e\u003cspan class=\"params\"\u003e(Args\u0026amp;\u0026amp;... args)\u003c/span\u003e \u003c/span\u003e{                  \u003cspan class=\"comment\"\u003e// 2.\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  \u003cspan class=\"keyword\"\u003ereturn\u003c/span\u003e \u003cspan class=\"built_in\"\u003esmart_ptr\u003c/span\u003e\u0026lt;T\u0026gt;(\u003cspan class=\"keyword\"\u003enew\u003c/span\u003e \u003cspan class=\"built_in\"\u003eT\u003c/span\u003e(std::forward\u0026lt;Args\u0026gt;(args)...)); \u003cspan class=\"comment\"\u003e// 3.\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e}\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e这里，(1) 处使用了 C++11 中名为「参数包」的技术，使得函数模板可以接收任意多个任意类型的参数；(2) 处对参数包进行解包，使用右值引用模式接受参数，借助「引用折叠」技术接收任意类型的参数；(3) 处使用了 \u003ccode\u003estd::forward\u003c/code\u003e，将接收到的参数原封不动地完美地转发给 \u003ccode\u003eT\u003c/code\u003e 的构造函数。\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e关于参数包技术，将在未来的博文中介绍。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003e至此，完整代码可见\u003ca href=\"/uploads/codes/cpp/smart_ptr.cc\"\u003e这里\u003c/a\u003e。\u003c/p\u003e\n\n    \u003c/div\u003e",
  "Date": "2018-01-13T02:36:48Z",
  "Author": "Liam Huang"
}