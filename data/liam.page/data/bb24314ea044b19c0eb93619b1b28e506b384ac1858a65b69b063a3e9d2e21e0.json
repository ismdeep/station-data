{
  "Source": "liam.page",
  "Title": "利用 Excel 当中的 MATCH 和 XLOOKUP 函数实现集合与字典（映射）访问",
  "Link": "https://liam.page/2020/04/09/match-and-xlookup-in-excel/",
  "Content": "\u003cdiv class=\"post-body\" itemprop=\"articleBody\"\u003e\n\n      \n        \u003cp\u003e集合与字典（映射）是程序设计当中常见的两种容器类型。在 C++ 的标准模板库中，它们的实现分别是 \u003ccode\u003estd::set\u003c/code\u003e/\u003ccode\u003estd::multiset\u003c/code\u003e 与 \u003ccode\u003estd::map\u003c/code\u003e/\u003ccode\u003estd::multimap\u003c/code\u003e。（分别还有利用哈希表实现的 \u003ccode\u003eunordered\u003c/code\u003e 版本）其中，字典（映射）的键（Keys）可视作组成一个相应类型的集合。\u003c/p\u003e\n\u003cp\u003e对于集合或字典的读取，经典操作有两个：判断目标元素是否在集合当中、根据目标键获取相应值。\u003c/p\u003e\n\u003cp\u003e这篇文章讲讲在 Excel 中如何实现这两个功能。\u003c/p\u003e\n\u003cspan id=\"more\"\u003e\u003c/span\u003e\n\n\u003ch2 id=\"MATCH-函数\"\u003e\u003ca href=\"#MATCH-函数\" class=\"headerlink\" title=\"MATCH 函数\"\u003e\u003c/a\u003e\u003ccode\u003eMATCH\u003c/code\u003e 函数\u003c/h2\u003e\u003cp\u003eExcel 中的 \u003ccode\u003eMATCH\u003c/code\u003e 函数原型是 \u003ccode\u003eMATCH(lookup_value, lookup_array, [match_type])\u003c/code\u003e。函数可接受 3 个参数，其中前两个为必选参数，第三个为可选参数。第一个参数表示要被查找的值，第二个参数表示要在哪个范围查找，第三个参数表示如何匹配（\u003ccode\u003e0\u003c/code\u003e 表示相等，\u003ccode\u003e-1\u003c/code\u003e 表示小于，\u003ccode\u003e1\u003c/code\u003e 表示大于）。如果匹配成功，则函数返回目标值在范围内的索引，否则报错。\u003c/p\u003e\n\u003cp\u003e假设有下图所示的 \u003ccode\u003enamebook\u003c/code\u003e 表。\u003c/p\u003e\n\u003cp\u003e\u003cimg data-src=\"/uploads/images/Excel/namebook.jpg\"/\u003e\u003c/p\u003e\n\u003cp\u003e现在我们要看看下列人物是否登记在册。\u003c/p\u003e\n\u003cp\u003e\u003cimg data-src=\"/uploads/images/Excel/register-question.jpg\"/\u003e\u003c/p\u003e\n\u003cp\u003e对于 B2 单元格，我们可以用这样的函数 \u003ccode\u003e=NOT(ISERROR(MATCH(A2,namebook!$A$2:$A$4,0)))\u003c/code\u003e。这里核心是刚才介绍的 \u003ccode\u003eMATCH\u003c/code\u003e 函数。我们利用 \u003ccode\u003eISERROR\u003c/code\u003e 函数判断 \u003ccode\u003eMATCH\u003c/code\u003e 函数是否报错——若报错说明查无此人，否则说明登记在册。最后，再用 \u003ccode\u003eNOT\u003c/code\u003e 函数反转上述真值。如此则有如下图所示的结果。\u003c/p\u003e\n\u003cp\u003e\u003cimg data-src=\"/uploads/images/Excel/register-answer.jpg\"/\u003e\u003c/p\u003e\n\u003cp\u003e如此，我们就利用 \u003ccode\u003eMATCH\u003c/code\u003e 函数（搭配 \u003ccode\u003eISERROR\u003c/code\u003e 和 \u003ccode\u003eNOT\u003c/code\u003e 两个函数）实现了判断目标元素是否在集合当中的功能。\u003c/p\u003e\n\u003ch2 id=\"XLOOKUP-函数\"\u003e\u003ca href=\"#XLOOKUP-函数\" class=\"headerlink\" title=\"XLOOKUP 函数\"\u003e\u003c/a\u003e\u003ccode\u003eXLOOKUP\u003c/code\u003e 函数\u003c/h2\u003e\u003cp\u003eExcel 中的 \u003ccode\u003eXLOOKUP\u003c/code\u003e 函数原型是 \u003ccode\u003eXLOOKUP(lookup_value, lookup_array, return_array, [if_not_found], [match_mode], [search_mode])\u003c/code\u003e。函数可接受 6 个参数，其中前 3 个为必选参数，后 3 个为可选参数。第一个参数表示要被查找的值，第二个参数表示要在哪个范围（数组）查找，第三个参数表示返回的值在哪个范围（数组），第四个参数表示若未找到返回什么。最后两个参数是高级功能，参见\u003ca target=\"_blank\" rel=\"noopener\" href=\"https://support.office.com/en-us/article/xlookup-function-b7fd680e-6d10-43e6-84f9-88eae8bf5929\"\u003e微软的文档\u003c/a\u003e。如果匹配成功，假设目标值在待查数组中的索引为 \u003ccode\u003ei\u003c/code\u003e，则函数返回返回值数组下标 \u003ccode\u003ei\u003c/code\u003e 的单元格内容，否则报错或填入 \u003ccode\u003eif_not_found\u003c/code\u003e 内容。\u003c/p\u003e\n\u003cp\u003e还是看刚才的 \u003ccode\u003enamebook\u003c/code\u003e 表。\u003c/p\u003e\n\u003cp\u003e\u003cimg data-src=\"/uploads/images/Excel/namebook.jpg\"/\u003e\u003c/p\u003e\n\u003cp\u003e现在我们要看看下列人物是否登记在册，若登记在册的话登记身高是多少。对于 B2 单元格，我们可以用这样的函数 \u003ccode\u003e=XLOOKUP(A2,namebook!$A$2:$A$4,namebook!$B$2:$B$4,\u0026#34;未登记在册\u0026#34;)\u003c/code\u003e。\u003c/p\u003e\n\u003cp\u003e\u003cimg data-src=\"/uploads/images/Excel/height-solution.png\"/\u003e\u003c/p\u003e\n\n    \u003c/div\u003e",
  "Date": "2020-04-09T07:39:09Z",
  "Author": "Liam Huang"
}