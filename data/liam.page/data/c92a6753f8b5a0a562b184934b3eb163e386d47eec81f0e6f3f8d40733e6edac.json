{
  "Source": "liam.page",
  "Title": "最佳搭档：利用 sort 和 uniq 做集合运算",
  "Link": "https://liam.page/2016/05/05/best-match-using-sort-and-uniq-to-do-set-operations/",
  "Content": "\u003cdiv class=\"post-body\" itemprop=\"articleBody\"\u003e\n\n      \n        \u003cp\u003e工作中遇到一些需要做集合运算的场景。这种时候，写个 Python 脚本当然是个选择；然而，我却嫌弃太重量级。因此，在 Linux 工具中寻找到了能够胜任这一工作的 \u003ccode\u003esort\u003c/code\u003e 和 \u003ccode\u003euniq\u003c/code\u003e 两个命令。\u003c/p\u003e\n\u003cspan id=\"more\"\u003e\u003c/span\u003e\n\n\u003ch2 id=\"sort-生而为排序\"\u003e\u003ca href=\"#sort-生而为排序\" class=\"headerlink\" title=\"sort: 生而为排序\"\u003e\u003c/a\u003e\u003ccode\u003esort\u003c/code\u003e: 生而为排序\u003c/h2\u003e\u003cp\u003e\u003ccode\u003esort\u003c/code\u003e 命令的用法很简单。最基本的用法有两种：\u003c/p\u003e\n\u003cfigure class=\"highlight bash\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"built_in\"\u003ecat\u003c/span\u003e \u0026lt;filename\u0026gt; | \u003cspan class=\"built_in\"\u003esort\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"built_in\"\u003esort\u003c/span\u003e \u0026lt;file1\u0026gt; [\u0026lt;file2\u0026gt; [\u0026lt;file3\u0026gt; [...]]]\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e二者意义相同：\u003ccode\u003esort\u003c/code\u003e 会逐行读入文件内容；然后依 ASCII 编码的顺序，升序排列文件的行；最后输出到标准输出（通常是屏幕）。注意，\u003ccode\u003esort\u003c/code\u003e 可以连续读入多个文件，而后合在一起排序。\u003c/p\u003e\n\u003cp\u003e如果希望将 \u003ccode\u003esort\u003c/code\u003e 结果保存到文件，则需要用到 \u003ccode\u003e-o\u003c/code\u003e 选项（当然，大多数情况也可以用 \u003ccode\u003e\u0026gt;\u003c/code\u003e 重定向）：\u003c/p\u003e\n\u003cfigure class=\"highlight bash\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"built_in\"\u003esort\u003c/span\u003e \u0026lt;input\u0026gt; -o \u0026lt;output\u0026gt;\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e如果希望倒序排列，则需要用到 \u003ccode\u003e-r\u003c/code\u003e 选项：\u003c/p\u003e\n\u003cfigure class=\"highlight bash\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"built_in\"\u003esort\u003c/span\u003e -r \u0026lt;filename\u0026gt;\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e对于数字来说，按照 ASCII 编码排列就不合适了，此时可以用到 \u003ccode\u003e-n\u003c/code\u003e 选项：\u003c/p\u003e\n\u003cfigure class=\"highlight bash\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"built_in\"\u003esort\u003c/span\u003e -n \u0026lt;filename\u0026gt;\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e其他选项：\u003c/p\u003e\n\u003cfigure class=\"highlight bash\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e-u      去除重复行\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e-t      指定分隔符（通常与 -k 联用）\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e-k      指定用于排序的列号\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e-f      忽略大小写\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e-M      能够排序月份\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e-b      忽略行首空白\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003ch2 id=\"uniq-专治重复，一针见效\"\u003e\u003ca href=\"#uniq-专治重复，一针见效\" class=\"headerlink\" title=\"uniq: 专治重复，一针见效\"\u003e\u003c/a\u003e\u003ccode\u003euniq\u003c/code\u003e: 专治重复，一针见效\u003c/h2\u003e\u003cp\u003e\u003ccode\u003euniq\u003c/code\u003e 的作用可以描述为：针对相邻的重复行，进行相应的动作。\u003c/p\u003e\n\u003cp\u003e这句话中，有两个地方需要注意。首先，针对的是\u003cstrong\u003e相邻的重复行\u003c/strong\u003e。因此，\u003ccode\u003euniq\u003c/code\u003e 对于不相邻的重复行是不起作用的。其次，进行\u003cstrong\u003e相应的\u003c/strong\u003e动作。这意味着，\u003ccode\u003euniq\u003c/code\u003e 可以做的事情很多，不止一样。\u003c/p\u003e\n\u003cp\u003e不带任何参数的时候 \u003ccode\u003euniq\u003c/code\u003e 的动作是：对相邻的重复行进行去除。例如：\u003c/p\u003e\n\u003cfigure class=\"highlight bash\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"built_in\"\u003ecat\u003c/span\u003e \u0026lt;filename\u0026gt; | \u003cspan class=\"built_in\"\u003esort\u003c/span\u003e | \u003cspan class=\"built_in\"\u003euniq\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e我们已经见过了 \u003ccode\u003esort\u003c/code\u003e 的作用，那么上面命令的作用就很显然了：将 \u003ccode\u003e\u0026lt;filename\u0026gt;\u003c/code\u003e 按照 ASCII 升序排序；然后去除重复出现的行；最后将这个没有重复行的内容输出到标准输出。\u003c/p\u003e\n\u003cp\u003e给 \u003ccode\u003euniq\u003c/code\u003e 加上参数，就能解锁更多姿势。\u003c/p\u003e\n\u003cfigure class=\"highlight bash\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"built_in\"\u003ecat\u003c/span\u003e \u0026lt;filename\u0026gt; | \u003cspan class=\"built_in\"\u003esort\u003c/span\u003e | \u003cspan class=\"built_in\"\u003euniq\u003c/span\u003e -d     \u003cspan class=\"comment\"\u003e# 只显示重复的行，每行只显示一次\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"built_in\"\u003ecat\u003c/span\u003e \u0026lt;filename\u0026gt; | \u003cspan class=\"built_in\"\u003esort\u003c/span\u003e | \u003cspan class=\"built_in\"\u003euniq\u003c/span\u003e -D     \u003cspan class=\"comment\"\u003e# 只显示重复的行\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"built_in\"\u003ecat\u003c/span\u003e \u0026lt;filename\u0026gt; | \u003cspan class=\"built_in\"\u003esort\u003c/span\u003e | \u003cspan class=\"built_in\"\u003euniq\u003c/span\u003e -i     \u003cspan class=\"comment\"\u003e# 忽略大小写\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"built_in\"\u003ecat\u003c/span\u003e \u0026lt;filename\u0026gt; | \u003cspan class=\"built_in\"\u003esort\u003c/span\u003e | \u003cspan class=\"built_in\"\u003euniq\u003c/span\u003e -u     \u003cspan class=\"comment\"\u003e# 只显示只出现一次的行\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"built_in\"\u003ecat\u003c/span\u003e \u0026lt;filename\u0026gt; | \u003cspan class=\"built_in\"\u003esort\u003c/span\u003e | \u003cspan class=\"built_in\"\u003euniq\u003c/span\u003e -c     \u003cspan class=\"comment\"\u003e# 统计每行重复的次数\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003ch2 id=\"集合运算\"\u003e\u003ca href=\"#集合运算\" class=\"headerlink\" title=\"集合运算\"\u003e\u003c/a\u003e集合运算\u003c/h2\u003e\u003cp\u003e接下来，我们强行将 \u003ccode\u003esort\u003c/code\u003e 和 \u003ccode\u003euniq\u003c/code\u003e 凑到一起，看看会发生什么。\u003c/p\u003e\n\u003ch3 id=\"求交集\"\u003e\u003ca href=\"#求交集\" class=\"headerlink\" title=\"求交集\"\u003e\u003c/a\u003e求交集\u003c/h3\u003e\u003cp\u003e交集就是两个集合都出现的那些元素。放到我们的场景里，就是两个文件重复出现过的行。毫无疑问，我们需要 \u003ccode\u003euniq\u003c/code\u003e 的 \u003ccode\u003e-d\u003c/code\u003e 选项。\u003c/p\u003e\n\u003cfigure class=\"highlight bash\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"built_in\"\u003esort\u003c/span\u003e \u0026lt;file1\u0026gt; \u0026lt;file2\u0026gt; | \u003cspan class=\"built_in\"\u003euniq\u003c/span\u003e -d      \u003cspan class=\"comment\"\u003e# 交集\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003ch3 id=\"求并集\"\u003e\u003ca href=\"#求并集\" class=\"headerlink\" title=\"求并集\"\u003e\u003c/a\u003e求并集\u003c/h3\u003e\u003cp\u003e并集就是两个集合的元素加起来，去掉重复的部分。\u003ccode\u003euniq\u003c/code\u003e 就是为此而生的。\u003c/p\u003e\n\u003cfigure class=\"highlight bash\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"built_in\"\u003esort\u003c/span\u003e \u0026lt;file1\u0026gt; \u0026lt;file2\u0026gt; | \u003cspan class=\"built_in\"\u003euniq\u003c/span\u003e         \u003cspan class=\"comment\"\u003e# 并集\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003ch3 id=\"求差集\"\u003e\u003ca href=\"#求差集\" class=\"headerlink\" title=\"求差集\"\u003e\u003c/a\u003e求差集\u003c/h3\u003e\u003cp\u003e$A \\setminus B = {x\\mid x \\in A \\wedge x \\not\\in B}$，也就是存在于 $A$ 但不存在于 $B$ 的那些。简而言之，这是一个在集合 $A$ 中找到最高贵冷艳的元素的过程。\u003c/p\u003e\n\u003cp\u003e只要重复了，那就不叫高贵冷艳。同时我们知道，重复一次叫重复；重复两次，那也还是重复。因此，我们只需要将 \u003ccode\u003e\u0026lt;file1\u0026gt;\u003c/code\u003e 和两份 \u003ccode\u003e\u0026lt;file2\u0026gt;\u003c/code\u003e 放在一起，寻找只出现过一次的行就可以了。\u003c/p\u003e\n\u003cfigure class=\"highlight bash\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"built_in\"\u003esort\u003c/span\u003e \u0026lt;file1\u0026gt; \u0026lt;file2\u0026gt; \u0026lt;file2\u0026gt; | \u003cspan class=\"built_in\"\u003euniq\u003c/span\u003e -u  \u003cspan class=\"comment\"\u003e# 差集\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003ch3 id=\"求对称差\"\u003e\u003ca href=\"#求对称差\" class=\"headerlink\" title=\"求对称差\"\u003e\u003c/a\u003e求对称差\u003c/h3\u003e\u003cp\u003e$A \\bigtriangleup B = (A \\cup B) - (A \\cap B)$。上面已经求得了并集和交集，所以在此基础上求一个差集就好了对吧——你疯啦！？\u003c/p\u003e\n\u003cp\u003e对称差，就是要找到两个集合放在一起，也只出现了一次的那些元素。因此只需要简单的 \u003ccode\u003e-u\u003c/code\u003e 选项就好了。\u003c/p\u003e\n\u003cfigure class=\"highlight bash\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"built_in\"\u003esort\u003c/span\u003e \u0026lt;file1\u0026gt; \u0026lt;file2\u0026gt; | \u003cspan class=\"built_in\"\u003euniq\u003c/span\u003e -u  \u003cspan class=\"comment\"\u003e# 对称差集\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e好了，这就是用 Linux 命令做集合运算的故事了。\u003ccode\u003e:)\u003c/code\u003e\u003c/p\u003e\n\n    \u003c/div\u003e",
  "Date": "2016-05-05T15:13:01Z",
  "Author": "Liam Huang"
}