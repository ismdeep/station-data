{
  "Source": "liam.page",
  "Title": "用双向队列实现跑马灯和频率限制器",
  "Link": "https://liam.page/2016/09/23/using-deque-to-implement-marquee-and-rate-limiter/",
  "Content": "\u003cdiv class=\"post-body\" itemprop=\"articleBody\"\u003e\n\n      \n        \u003cp\u003e工作中涉及到的数据，其数量越来越大。这就是说，我用 Python 写的工具，需要更高的性能。今天琢磨着把小工具的性能一下子提升了一个数量级，每秒能发出、接收和处理 800 次请求。所谓「事无好坏，过则成灾」，800 QPS 虽然不至于将线上服务压垮，但是多少会对线上服务造成一定的影响（比如响应时间显著延长）。这是不好的。\u003c/p\u003e\n\u003cp\u003e为了防止架构组的同学过来撕，有必要给我的小工具加上 EVA 的\u003ca target=\"_blank\" rel=\"noopener\" href=\"https://zh.wikipedia.org/wiki/EVA_(%E6%88%B0%E9%AC%A5%E6%A9%9F%E6%A2%B0%E4%BA%BA)\"\u003e拘束器\u003c/a\u003e，限制一下 QPS。\u003c/p\u003e\n\u003cspan id=\"more\"\u003e\u003c/span\u003e\n\n\u003ch2 id=\"思路\"\u003e\u003ca href=\"#思路\" class=\"headerlink\" title=\"思路\"\u003e\u003c/a\u003e思路\u003c/h2\u003e\u003cp\u003eY 是 QA 组的同学，开发了一系列的平台，对此比较有经验。和 Y 的讨论中，他提出，应该实时监控远程服务的响应时间，动态调整发出请求的速度和工作的进程数量，将 QPS 固定住。\u003c/p\u003e\n\u003cp\u003e从研究的角度来说，这是一个比较精确的思路。但是要给上述工具加上这样一层壳，工作量还是有一些的。这样，不符合补丁「短平快」的要求。\u003c/p\u003e\n\u003cp\u003e为了找到更合适的方案，我重新理了一下需求：我只需要给 QPS 设置一个上限，防止压力过大影响线上服务就可以了，并不需要将 QPS 固定在定值上。这样一来，动态监控远程服务的响应时间，就变得不重要了。\u003c/p\u003e\n\u003cp\u003e那么怎样解决这个问题呢？\u003c/p\u003e\n\u003cp\u003e让我们先回顾一下 QPS 的含义。所谓 QPS，就是单位时间（$\\tau$）的请求次数（$k$）。限制 QPS，就是要限制单位时间 $\\tau$ 内的请求次数 $k$。换而言之，**我们需要保证，在接踵而来的请求中，任意连续的 $k+1$ 个请求，其首尾的时间间隔都严格大于 $\\tau$**。\u003c/p\u003e\n\u003cp\u003e因此，我们需要用一个数据结构，顺序保存最近的 $k$ 个请求发生的时间戳。当第 $k + 1$ 个请求来临时，我们需要对比它和保存的时间戳中的最早者之间的时间间隔 $t$。\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e如果 $t \u0026gt; \\tau$，那么对该请求放行，将当前时间戳保存到数据结构并淘汰掉最早的那个时间戳；\u003c/li\u003e\n\u003cli\u003e如果 $t \\leqslant \\tau$，那么抛弃或阻塞该请求，等待下一次调用。\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e算法浅显易懂，而实现起来，我们只需要一个固定长度的双向队列即可。\u003c/p\u003e\n\u003ch2 id=\"collections-库中的-deque\"\u003e\u003ca href=\"#collections-库中的-deque\" class=\"headerlink\" title=\"collections 库中的 deque\"\u003e\u003c/a\u003e\u003ccode\u003ecollections\u003c/code\u003e 库中的 \u003ccode\u003edeque\u003c/code\u003e\u003c/h2\u003e\u003cp\u003e在 Python 的 \u003ccode\u003elist\u003c/code\u003e 基础上加上一些限制条件，当然可以满足我们的需要。不过 \u003ccode\u003elist\u003c/code\u003e 是用线性表实现的；而在我们的环境里，需要频繁快速地进行元素的插入和删除操作。所以，我们对选用 \u003ccode\u003elist\u003c/code\u003e 作为基础数据结构需要慎重考虑。\u003c/p\u003e\n\u003cp\u003ePython 的标准库 \u003ccode\u003ecollections\u003c/code\u003e 是一组高性能的容器，其中提供了 \u003ccode\u003edeque\u003c/code\u003e 的双向队列。\u003ccode\u003edeque\u003c/code\u003e 使用链表实现的，因此能够在 \u003ccode\u003eO(1)\u003c/code\u003e 时间复杂度内进行队列首尾的插入和删除操作。从性能上说，\u003ccode\u003edeque\u003c/code\u003e 在我们的问题里，完胜 \u003ccode\u003elist\u003c/code\u003e。\u003c/p\u003e\n\u003ch3 id=\"插入和删除首尾的元素\"\u003e\u003ca href=\"#插入和删除首尾的元素\" class=\"headerlink\" title=\"插入和删除首尾的元素\"\u003e\u003c/a\u003e插入和删除首尾的元素\u003c/h3\u003e\u003cp\u003e\u003ccode\u003edeque\u003c/code\u003e 提供了简便的方法，在队列首尾增减元素。\u003c/p\u003e\n\u003cfigure class=\"highlight python\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e8\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e9\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e10\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e11\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e12\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e13\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e14\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e15\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e16\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e17\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e18\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e19\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e20\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e21\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e22\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003eIn [\u003cspan class=\"number\"\u003e1\u003c/span\u003e]: \u003cspan class=\"keyword\"\u003efrom\u003c/span\u003e collections \u003cspan class=\"keyword\"\u003eimport\u003c/span\u003e deque\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eIn [\u003cspan class=\"number\"\u003e2\u003c/span\u003e]: q = deque([\u003cspan class=\"string\"\u003e\u0026#39;a\u0026#39;\u003c/span\u003e, \u003cspan class=\"string\"\u003e\u0026#39;b\u0026#39;\u003c/span\u003e, \u003cspan class=\"string\"\u003e\u0026#39;c\u0026#39;\u003c/span\u003e])\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eIn [\u003cspan class=\"number\"\u003e3\u003c/span\u003e]: q.append(\u003cspan class=\"string\"\u003e\u0026#39;x\u0026#39;\u003c/span\u003e)       \u003cspan class=\"comment\"\u003e# 在队尾增加元素 \u0026#39;x\u0026#39;\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eIn [\u003cspan class=\"number\"\u003e4\u003c/span\u003e]: q.appendleft(\u003cspan class=\"string\"\u003e\u0026#39;y\u0026#39;\u003c/span\u003e)   \u003cspan class=\"comment\"\u003e# 在队首增加元素 \u0026#39;y\u0026#39;\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eIn [\u003cspan class=\"number\"\u003e5\u003c/span\u003e]: q\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eOut[\u003cspan class=\"number\"\u003e5\u003c/span\u003e]: deque([\u003cspan class=\"string\"\u003e\u0026#39;y\u0026#39;\u003c/span\u003e, \u003cspan class=\"string\"\u003e\u0026#39;a\u0026#39;\u003c/span\u003e, \u003cspan class=\"string\"\u003e\u0026#39;b\u0026#39;\u003c/span\u003e, \u003cspan class=\"string\"\u003e\u0026#39;c\u0026#39;\u003c/span\u003e, \u003cspan class=\"string\"\u003e\u0026#39;x\u0026#39;\u003c/span\u003e])\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eIn [\u003cspan class=\"number\"\u003e6\u003c/span\u003e]: q.pop()             \u003cspan class=\"comment\"\u003e# 删除队尾元素并返回它的值\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eOut[\u003cspan class=\"number\"\u003e6\u003c/span\u003e]: \u003cspan class=\"string\"\u003e\u0026#39;x\u0026#39;\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eIn [\u003cspan class=\"number\"\u003e7\u003c/span\u003e]: q\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eOut[\u003cspan class=\"number\"\u003e7\u003c/span\u003e]: deque([\u003cspan class=\"string\"\u003e\u0026#39;y\u0026#39;\u003c/span\u003e, \u003cspan class=\"string\"\u003e\u0026#39;a\u0026#39;\u003c/span\u003e, \u003cspan class=\"string\"\u003e\u0026#39;b\u0026#39;\u003c/span\u003e, \u003cspan class=\"string\"\u003e\u0026#39;c\u0026#39;\u003c/span\u003e])\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eIn [\u003cspan class=\"number\"\u003e8\u003c/span\u003e]: q.popleft()         \u003cspan class=\"comment\"\u003e# 删除队首元素并返回它的值\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eOut[\u003cspan class=\"number\"\u003e8\u003c/span\u003e]: \u003cspan class=\"string\"\u003e\u0026#39;y\u0026#39;\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eIn [\u003cspan class=\"number\"\u003e9\u003c/span\u003e]: q\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eOut[\u003cspan class=\"number\"\u003e9\u003c/span\u003e]: deque([\u003cspan class=\"string\"\u003e\u0026#39;a\u0026#39;\u003c/span\u003e, \u003cspan class=\"string\"\u003e\u0026#39;b\u0026#39;\u003c/span\u003e, \u003cspan class=\"string\"\u003e\u0026#39;c\u0026#39;\u003c/span\u003e])\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003ch3 id=\"限制长度\"\u003e\u003ca href=\"#限制长度\" class=\"headerlink\" title=\"限制长度\"\u003e\u003c/a\u003e限制长度\u003c/h3\u003e\u003cp\u003e在初始化一个 \u003ccode\u003edeque\u003c/code\u003e 的时候，可以指定它的最大长度（\u003ccode\u003emaxlen\u003c/code\u003e）。这个长度一旦指定，就是该 \u003ccode\u003edeque\u003c/code\u003e 实例的只读属性。当实例的长度达到设定的最大长度后\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e执行 \u003ccode\u003eappend(element)\u003c/code\u003e 会先执行 \u003ccode\u003epopleft()\u003c/code\u003e 删除队首元素，再将 \u003ccode\u003eelement\u003c/code\u003e 加在队尾；\u003c/li\u003e\n\u003cli\u003e执行 \u003ccode\u003eappendleft(element)\u003c/code\u003e 会先执行 \u003ccode\u003epop()\u003c/code\u003e 删除队尾元素，再将 \u003ccode\u003eelement\u003c/code\u003e 加在队首。\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e这真是\u003cstrong\u003e大快人心的大好事\u003c/strong\u003e啊，完美符合我们的需求。\u003c/p\u003e\n\u003ch3 id=\"轮转\"\u003e\u003ca href=\"#轮转\" class=\"headerlink\" title=\"轮转\"\u003e\u003c/a\u003e轮转\u003c/h3\u003e\u003cp\u003e\u003ccode\u003edeque\u003c/code\u003e 还提供了一个有趣的成员函数，名字是 \u003ccode\u003erotate(step)\u003c/code\u003e。其作用是：\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e当 \u003ccode\u003estep\u003c/code\u003e 是正整数时，从队首到队尾，循环挪动 \u003ccode\u003estep\u003c/code\u003e 步；\u003c/li\u003e\n\u003cli\u003e当 \u003ccode\u003estep\u003c/code\u003e 是负整数时，从队尾到队首，循环挪动 \u003ccode\u003estep\u003c/code\u003e 步。\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e通过 \u003ccode\u003erotate\u003c/code\u003e 函数，我们可以实现一个有趣是跑马灯程序。\u003c/p\u003e\n\u003cfigure class=\"highlight python\"\u003e\u003cfigcaption\u003e\u003cspan\u003emarquee.py\u003c/span\u003e\u003c/figcaption\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e8\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e9\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e10\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e11\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"keyword\"\u003eimport\u003c/span\u003e sys\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"keyword\"\u003eimport\u003c/span\u003e time\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"keyword\"\u003efrom\u003c/span\u003e collections \u003cspan class=\"keyword\"\u003eimport\u003c/span\u003e deque\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003emarquee = deque(\u003cspan class=\"string\"\u003e\u0026#39;\u0026gt;\u0026gt;-----\u0026#39;\u003c/span\u003e * \u003cspan class=\"number\"\u003e10\u003c/span\u003e)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"keyword\"\u003ewhile\u003c/span\u003e \u003cspan class=\"literal\"\u003eTrue\u003c/span\u003e:\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"built_in\"\u003eprint\u003c/span\u003e \u003cspan class=\"string\"\u003e\u0026#39;\\r%s\u0026#39;\u003c/span\u003e % \u003cspan class=\"string\"\u003e\u0026#39;\u0026#39;\u003c/span\u003e.join(marquee),\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    marquee.rotate(\u003cspan class=\"number\"\u003e1\u003c/span\u003e)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    sys.stdout.flush()\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    time.sleep(\u003cspan class=\"number\"\u003e0.04\u003c/span\u003e)\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003ch2 id=\"实现频率限制器\"\u003e\u003ca href=\"#实现频率限制器\" class=\"headerlink\" title=\"实现频率限制器\"\u003e\u003c/a\u003e实现频率限制器\u003c/h2\u003e\u003cp\u003e有了上面的分析，又有了 \u003ccode\u003edeque\u003c/code\u003e 这一好用的工具，实现一个这样的限制器，是很容易的。我们将它封装成一个类，方便调用。\u003c/p\u003e\n\u003cfigure class=\"highlight python\"\u003e\u003cfigcaption\u003e\u003cspan\u003erate_limiter.py\u003c/span\u003e\u003c/figcaption\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e8\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e9\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e10\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e11\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e12\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e13\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e14\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e15\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e16\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e17\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e18\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e19\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e20\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e21\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e22\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e23\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e24\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e25\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e26\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e27\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e28\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"keyword\"\u003efrom\u003c/span\u003e collections \u003cspan class=\"keyword\"\u003eimport\u003c/span\u003e deque\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"keyword\"\u003eimport\u003c/span\u003e time\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"keyword\"\u003eclass\u003c/span\u003e \u003cspan class=\"title class_\"\u003eRateLimiter\u003c/span\u003e:\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"keyword\"\u003edef\u003c/span\u003e \u003cspan class=\"title function_\"\u003e__init__\u003c/span\u003e(\u003cspan class=\"params\"\u003eself, maxCount = \u003cspan class=\"number\"\u003e5\u003c/span\u003e, timeUnit = \u003cspan class=\"number\"\u003e1\u003c/span\u003e\u003c/span\u003e):\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        self.timeUnit = timeUnit\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        self.deque    = deque (maxlen = maxCount)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"keyword\"\u003edef\u003c/span\u003e \u003cspan class=\"title function_\"\u003e__call__\u003c/span\u003e(\u003cspan class=\"params\"\u003eself\u003c/span\u003e):\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        \u003cspan class=\"keyword\"\u003eif\u003c/span\u003e self.deque.maxlen == \u003cspan class=\"built_in\"\u003elen\u003c/span\u003e(self.deque):\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e            cTime = time.time()\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e            \u003cspan class=\"keyword\"\u003eif\u003c/span\u003e cTime - self.deque[\u003cspan class=\"number\"\u003e0\u003c/span\u003e] \u0026gt; self.timeUnit:\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e                self.deque.append (cTime)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e                \u003cspan class=\"keyword\"\u003ereturn\u003c/span\u003e \u003cspan class=\"literal\"\u003eFalse\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e            \u003cspan class=\"keyword\"\u003eelse\u003c/span\u003e:\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e                \u003cspan class=\"keyword\"\u003ereturn\u003c/span\u003e \u003cspan class=\"literal\"\u003eTrue\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        self.deque.append (time.time())\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        \u003cspan class=\"keyword\"\u003ereturn\u003c/span\u003e \u003cspan class=\"literal\"\u003eFalse\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"keyword\"\u003eif\u003c/span\u003e __name__ == \u003cspan class=\"string\"\u003e\u0026#39;__main__\u0026#39;\u003c/span\u003e:\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"keyword\"\u003eimport\u003c/span\u003e random\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    checkLim = RateLimiter(maxCount = \u003cspan class=\"number\"\u003e8\u003c/span\u003e)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"keyword\"\u003efor\u003c/span\u003e i \u003cspan class=\"keyword\"\u003ein\u003c/span\u003e xrange(\u003cspan class=\"number\"\u003e50\u003c/span\u003e):\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        rTime = random.uniform(\u003cspan class=\"number\"\u003e0\u003c/span\u003e, \u003cspan class=\"number\"\u003e0.2\u003c/span\u003e)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        time.sleep(rTime)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        \u003cspan class=\"built_in\"\u003eprint\u003c/span\u003e i, \u003cspan class=\"string\"\u003e\u0026#34;block[%f]\u0026#34;\u003c/span\u003e % (rTime) \u003cspan class=\"keyword\"\u003eif\u003c/span\u003e checkLim() \u003cspan class=\"keyword\"\u003eelse\u003c/span\u003e \u003cspan class=\"string\"\u003e\u0026#34;pass[%f]\u0026#34;\u003c/span\u003e % (rTime)\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e代码很简单，唯一可能有趣的是 \u003ccode\u003e__call__\u003c/code\u003e 这个函数。它和一般的函数在功能上没有什么不同，但是有特别的作用：让 \u003ccode\u003eRateLimiter\u003c/code\u003e 这个类的实例成为可以调用的函数。这就是为什么我们可以用 \u003ccode\u003eif checkLim()\u003c/code\u003e 的原因。\u003c/p\u003e\n\u003cp\u003e代码的输出如下（由于加入了随机数，在你的计算机上执行可能不会完全相同），\u003ccode\u003epass\u003c/code\u003e 表示被放行，\u003ccode\u003eblock\u003c/code\u003e 表示频率过快，受到限制。\u003c/p\u003e\n\u003cfigure class=\"highlight plaintext\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e8\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e9\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e10\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e11\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e12\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e13\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e14\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e15\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e16\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e17\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e18\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e19\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e20\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e21\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e22\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e23\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e24\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e25\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e26\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e27\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e28\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e29\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e30\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e31\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e32\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e33\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e34\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e35\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e36\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e37\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e38\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e39\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e40\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e41\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e42\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e43\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e44\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e45\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e46\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e47\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e48\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e49\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e50\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e0 pass[0.109310]\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e1 pass[0.090743]\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2 pass[0.038481]\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3 pass[0.086077]\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4 pass[0.101313]\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5 pass[0.173419]\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6 pass[0.159947]\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7 pass[0.135079]\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e8 block[0.011212]\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e9 block[0.070294]\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e10 block[0.029171]\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e11 block[0.018660]\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e12 pass[0.080185]\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e13 pass[0.143896]\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e14 pass[0.191853]\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e15 pass[0.188746]\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e16 pass[0.198628]\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e17 pass[0.123896]\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e18 pass[0.144908]\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e19 pass[0.107941]\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e20 pass[0.080700]\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e21 pass[0.006529]\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e22 pass[0.171683]\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e23 block[0.040397]\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e24 pass[0.187498]\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e25 block[0.047226]\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e26 pass[0.124452]\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e27 pass[0.103683]\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e28 pass[0.153917]\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e29 block[0.021065]\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e30 pass[0.196360]\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e31 pass[0.042572]\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e32 pass[0.093290]\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e33 pass[0.113496]\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e34 pass[0.178457]\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e35 pass[0.079711]\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e36 pass[0.129189]\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e37 block[0.025027]\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e38 pass[0.130345]\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e39 block[0.037810]\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e40 block[0.020917]\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e41 pass[0.171373]\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e42 pass[0.031104]\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e43 pass[0.089182]\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e44 pass[0.175822]\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e45 pass[0.137213]\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e46 block[0.018022]\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e47 block[0.003023]\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e48 pass[0.167048]\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e49 pass[0.120170]\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n    \u003c/div\u003e",
  "Date": "2016-09-23T14:29:43Z",
  "Author": "Liam Huang"
}