{
  "Source": "liam.page",
  "Title": "解决 Git 2.24.1 与 OpenSSL 1.1.1b 的冲突",
  "Link": "https://liam.page/2020/01/07/fix-incompatiblities-between-git-2-24-1-and-openssl-1-1-1b/",
  "Content": "\u003cdiv class=\"post-body\" itemprop=\"articleBody\"\u003e\n\n      \n        \u003cp\u003e最近因为工作需要处理一些 SVN 仓库，但我还是偏好 Git。早些年就知道 Git 提供了 \u003ccode\u003egit svn\u003c/code\u003e 可以桥接 SVN。但今天发现公司开发机上的 Git 没有把 \u003ccode\u003egit svn\u003c/code\u003e 编译进来，也就是会报错：\u003c/p\u003e\n\u003cfigure class=\"highlight bash\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e8\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e9\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e$ git svn\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003egit: \u003cspan class=\"string\"\u003e\u0026#39;svn\u0026#39;\u003c/span\u003e is not a git \u003cspan class=\"built_in\"\u003ecommand\u003c/span\u003e. See \u003cspan class=\"string\"\u003e\u0026#39;git --help\u0026#39;\u003c/span\u003e.\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eDid you mean one of these?\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        fsck\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        \u003cspan class=\"built_in\"\u003emv\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        show\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        spop\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        st\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e又因为开发机上我没有 \u003ccode\u003eroot\u003c/code\u003e 权限，所以不得已只能自己从源码编译安装 Git。\u003c/p\u003e\n\u003cspan id=\"more\"\u003e\u003c/span\u003e\n\n\u003ch2 id=\"基本操作\"\u003e\u003ca href=\"#基本操作\" class=\"headerlink\" title=\"基本操作\"\u003e\u003c/a\u003e基本操作\u003c/h2\u003e\u003cp\u003e首先是下载、解包、\u003ccode\u003econfigure\u003c/code\u003e、\u003ccode\u003emake\u003c/code\u003e 一波流。\u003c/p\u003e\n\u003cfigure class=\"highlight bash\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e$ wget https://mirrors.edge.kernel.org/pub/software/scm/git/git-2.24.1.tar.gz\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e$ tar zvxf git-2.24.1.tar.gz\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e$ \u003cspan class=\"built_in\"\u003ecd\u003c/span\u003e git-2.24.1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e$ ./configure --prefix=~/.local --with-libpcre1 --with-curl --with-openssl=~/.local/include\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e$ make -j32\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e但在链接阶段报错，提示 \u003ccode\u003eSSLv23_method\u003c/code\u003e, \u003ccode\u003eSSL_library_init\u003c/code\u003e, \u003ccode\u003eSSL_load_error_strings\u003c/code\u003e, \u003ccode\u003esk_num\u003c/code\u003e, \u003ccode\u003esk_value\u003c/code\u003e, \u003ccode\u003esk_pop_free\u003c/code\u003e 等符号不存在。\u003c/p\u003e\n\u003cfigure class=\"highlight plaintext\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e8\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e9\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e10\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e11\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003eimap-send.o: In function `verify_hostname\u0026#39;:\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e~/downloads/git-2.24.1/imap-send.c:252: undefined reference to `sk_num\u0026#39;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e~/downloads/git-2.24.1/imap-send.c:254: undefined reference to `sk_value\u0026#39;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e~/downloads/git-2.24.1/imap-send.c:260: undefined reference to `sk_pop_free\u0026#39;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e~/downloads/git-2.24.1/imap-send.c:260: undefined reference to `sk_pop_free\u0026#39;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eimap-send.o: In function `ssl_socket_connect\u0026#39;:\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e~/downloads/git-2.24.1/imap-send.c:287: undefined reference to `SSL_library_init\u0026#39;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e~/downloads/git-2.24.1/imap-send.c:288: undefined reference to `SSL_load_error_strings\u0026#39;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e~/downloads/git-2.24.1/imap-send.c:290: undefined reference to `SSLv23_method\u0026#39;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003ecollect2: ld returned 1 exit status\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003emake: *** [git-imap-send] Error 1\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e我第一反应是 OpenSSL 没安装，或是没有正确配置。但随即发现，早先在安装别的工具的时候，已经安装了 OpenSSL 1.1.1b；并且已经修改了 \u003ccode\u003eLD_PATH\u003c/code\u003e 和 \u003ccode\u003eLD_LIBRARY_PATH\u003c/code\u003e 两个环境变量，确保链接器能够正确找到相应的共享对象（动态链接库）。\u003c/p\u003e\n\u003ch2 id=\"排查问题\"\u003e\u003ca href=\"#排查问题\" class=\"headerlink\" title=\"排查问题\"\u003e\u003c/a\u003e排查问题\u003c/h2\u003e\u003cp\u003e在确定 OpenSSL 已安装且能够被编译器、链接器正确找到之后，就只能去检查一下相应符号在共享对象中是否存在了。\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003eSSLv23_method\u003c/code\u003e, \u003ccode\u003eSSL_library_init\u003c/code\u003e 和 \u003ccode\u003eSSL_load_error_strings\u003c/code\u003e 显然属于 OpenSSL 当中的 \u003ccode\u003elibssl.so\u003c/code\u003e。于是执行命令\u003c/p\u003e\n\u003cfigure class=\"highlight bash\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e$ nm libssl.so | grep SSL_library_init\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e$ nm libssl.so | grep SSL_load_error_strings\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e$ nm libssl.so | grep SSLv23_method\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e返现返回均为空。这说明在 \u003ccode\u003elibssl.so\u003c/code\u003e 当中确实不存在这三个符号。\u003ccode\u003esk_num\u003c/code\u003e, \u003ccode\u003esk_value\u003c/code\u003e 和 \u003ccode\u003esk_pop_free\u003c/code\u003e 应当位于 \u003ccode\u003elibcrypto.so\u003c/code\u003e 当中，检查也有同样结果。\u003c/p\u003e\n\u003cp\u003e这就令人「满头大汉」了。难道是我下载 OpenSSL 的姿势不对？经过一番检索，在一个与 Git 无关的版本库的 commit log 中，发现了这么一段话：\u003c/p\u003e\n\u003cfigure class=\"highlight plaintext\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e8\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e9\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e# https://cbi-dev.igbmc.fr/niveale/tap-formatter/commit/b67a118e7a438009e5d44d0701c21d030c92aa94\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eFix: OpenSSL 1.1.0 renamed some symbols\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e- sk_free =\u0026gt; OPENSSL_sk_free\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e- sk_num =\u0026gt; OPENSSL_sk_num\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e- sk_pop_free =\u0026gt; OPENSSL_sk_pop_free\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e- sk_value =\u0026gt; OPENSSL_sk_value\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e- evp_md_ctx_create =\u0026gt; evp_md_ctx_new\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e- evp_md_ctx_destroy =\u0026gt; evp_md_ctx_free\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e原来，OpenSSL 自 1.1.0 开始，修改了部分 API 的名称，导致部分符号名发生了变化。此时，大胆猜想：\u003ccode\u003eSSL_*\u003c/code\u003e 等三个未定义的符号也是因为类似原因导致的。小心求证如下：\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e首先，在 \u003ccode\u003elibssl.so\u003c/code\u003e 当中检索含有 \u003ccode\u003einit\u003c/code\u003e 的符号，发现有名为 \u003ccode\u003eOPENSSL_init_ssl\u003c/code\u003e 的符号。看名字，其作用应该与 \u003ccode\u003eSSL_library_init\u003c/code\u003e 相近。\u003c/li\u003e\n\u003cli\u003e而后，在 Google 上检索 \u003ccode\u003eSSL_library_init OPENSSL_init_ssl\u003c/code\u003e，发现果然，也是在 1.1.0 版本中，该 API 发生了修改；并且 \u003ccode\u003eOPENSSL_init_ssl\u003c/code\u003e 包括了原先 \u003ccode\u003eSSL_library_init\u003c/code\u003e 和 \u003ccode\u003eSSL_load_error_strings\u003c/code\u003e 二者的功能。\u003c/li\u003e\n\u003cli\u003e最后，需要确定 \u003ccode\u003eSSLv23_method\u003c/code\u003e 的对应是什么。在 Google 上检索 \u003ccode\u003eSSLv23_method deprecated\u003c/code\u003e，发现在 \u003ca target=\"_blank\" rel=\"noopener\" href=\"https://www.openssl.org/docs/man1.1.0/man3/SSLv23_method.html\"\u003eOpenSSL 官方文档\u003c/a\u003e有提到，它已为 \u003ccode\u003eTLS_method\u003c/code\u003e 所代替。\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"解决\"\u003e\u003ca href=\"#解决\" class=\"headerlink\" title=\"解决\"\u003e\u003c/a\u003e解决\u003c/h2\u003e\u003cp\u003e于是检索 Git 代码中所有用到这些过时符号的代码，将他们分别修改为对应的新版本。之后编译、链接正常。最后，再顺手提交\u003ca target=\"_blank\" rel=\"noopener\" href=\"https://github.com/gitgitgadget/git/pull/516\"\u003e一个 patch\u003c/a\u003e。\u003c/p\u003e\n\n    \u003c/div\u003e",
  "Date": "2020-01-07T08:58:52Z",
  "Author": "Liam Huang"
}