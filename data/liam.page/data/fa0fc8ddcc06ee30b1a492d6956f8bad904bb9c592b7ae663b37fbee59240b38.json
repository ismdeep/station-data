{
  "Source": "liam.page",
  "Title": "在 Git 中 Checkout 历史版本",
  "Link": "https://liam.page/2015/04/29/git-checkout-history-version/",
  "Content": "\u003cdiv class=\"post-body\" itemprop=\"articleBody\"\u003e\n\n      \n        \u003cp\u003e昨天写代码的时候，误删了一个文件。今天发现的时候，commit 已经 push 到版本库了。本想用 \u003ccode\u003egit reset\u003c/code\u003e 回退版本，找回文件后重新提交。但是想起 Git 是一个版本控制系统哎，直接从版本库里 checkout 出某个文件的历史版本不就好了？\u003c/p\u003e\n\u003cp\u003e想法挺好，但是很久没用这个功能，自己已经不记得具体的命令了。于是查了下手册，把和 checkout 历史版本有关的几个命令都记录一下。\u003c/p\u003e\n\u003cspan id=\"more\"\u003e\u003c/span\u003e\n\n\u003ch3 id=\"从某个历史版本创建新的分支\"\u003e\u003ca href=\"#从某个历史版本创建新的分支\" class=\"headerlink\" title=\"从某个历史版本创建新的分支\"\u003e\u003c/a\u003e从某个历史版本创建新的分支\u003c/h3\u003e\u003cp\u003e在 Git 中从当前分支创建并检出新分支的命令是\u003c/p\u003e\n\u003cfigure class=\"highlight bash\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003egit checkout -b name-of-new-branch\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e这个命令实际上是\u003c/p\u003e\n\u003cfigure class=\"highlight bash\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003egit checkout -b name-of-new-branch current-branch\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e的简写形式。也就是说，当我们不指定 checkout 起点时，Git 默认从当前活动分支开始创建新的分支。\u003c/p\u003e\n\u003cp\u003eGit 的每个提交都有一个 SHA1 散列值（Hash 值）作为 ID。我们可以在 \u003ccode\u003echeckout\u003c/code\u003e 命令中使用这些 ID 作为起点。比如：\u003c/p\u003e\n\u003cfigure class=\"highlight bash\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003egit checkout -b name-of-new-branch 169d2dc\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e这样，Git 的活动分支会切换到 \u003ccode\u003ename-of-new-branch\u003c/code\u003e 这个分支上，而它的内容与 \u003ccode\u003e169d2dc\u003c/code\u003e 这个分支一致。\u003c/p\u003e\n\u003cp\u003e注意：SHA1 的散列值有 40 个字母，相当长。所以 Git 允许我们在不引起歧义的情况下，使用散列值的前几位作为缩写。\u003c/p\u003e\n\u003cp\u003e提示：你也可以用 \u003ccode\u003egit branch name-of-new-branch 169d2dc\u003c/code\u003e 来创建一个历史分支，而不切换到该分支。\u003c/p\u003e\n\u003ch3 id=\"将某个历史版本-checkout-到工作区\"\u003e\u003ca href=\"#将某个历史版本-checkout-到工作区\" class=\"headerlink\" title=\"将某个历史版本 checkout 到工作区\"\u003e\u003c/a\u003e将某个历史版本 checkout 到工作区\u003c/h3\u003e\u003cp\u003e首先说明，这样做会产生一个分离的 HEAD 指针，所以个人不推荐这么做。\u003c/p\u003e\n\u003cp\u003e如果我们工作在 \u003ccode\u003emaster\u003c/code\u003e 分支上，希望 checkout 到 \u003ccode\u003edev\u003c/code\u003e 分支上，我们会这么做：\u003c/p\u003e\n\u003cfigure class=\"highlight bash\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003egit checkout dev\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e这里 \u003ccode\u003edev\u003c/code\u003e 实际上是一个指针的别名，其本质也是一个 SHA1 散列值。所以，我们很自然地可以用\u003c/p\u003e\n\u003cfigure class=\"highlight bash\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003egit checkout \u0026lt;sha1-of-a-commit\u0026gt;\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e将某个历史版本 checkout 到工作区。\u003c/p\u003e\n\u003ch3 id=\"将某个文件的历史版本-checkout-到工作区\"\u003e\u003ca href=\"#将某个文件的历史版本-checkout-到工作区\" class=\"headerlink\" title=\"将某个文件的历史版本 checkout 到工作区\"\u003e\u003c/a\u003e将某个文件的历史版本 checkout 到工作区\u003c/h3\u003e\u003cp\u003e大多数时候，我们可能只需要对某一个文件做细小的修补，因此只 checkout 该文件就行了，并不需要操作整个 commit 或分支。\u003c/p\u003e\n\u003cp\u003e上一节我们介绍了如何将某个历史版本完整地 checkout 到工作区。实际上，我们只需要在上一节的命令之后加上需要 checkout 的文件即可。\u003c/p\u003e\n\u003cfigure class=\"highlight bash\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003egit checkout \u0026lt;sha1-of-a-commit\u0026gt; \u0026lt;/path/to/your/file\u0026gt;\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e当然，有时候你需要将某个文件的历史版本 checkout 出来，并以一个新的名字保存。这时候可以这么做：\u003c/p\u003e\n\u003cfigure class=\"highlight bash\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003egit show \u0026lt;sha1-of-a-commit\u0026gt;:\u0026lt;/path/to/your/file\u0026gt; \u0026gt; \u0026lt;/new/name/of/the/file\u0026gt;\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n    \u003c/div\u003e",
  "Date": "2015-04-29T00:44:56Z",
  "Author": "Liam Huang"
}