{
  "Source": "morningspace",
  "Title": "Kubernetes网络篇——ExternalIP和NodePort",
  "Link": "https://morningspace.github.io/tech/k8s-net-externalip-nodeport/",
  "Content": "\u003cdiv class=\"page__inner-wrap\"\u003e\n      \n\n      \u003csection class=\"page__content e-content\" itemprop=\"text\"\u003e\n        \n          \u003caside class=\"sidebar__right sticky\"\u003e\n            \u003cnav class=\"toc\"\u003e\n              \u003cheader\u003e\u003ch4 class=\"nav__title\"\u003e\u003ci class=\"fas fa-file-alt\"\u003e\u003c/i\u003e 在本页上\u003c/h4\u003e\u003c/header\u003e\n              \u003cul class=\"toc__menu\"\u003e\u003cli\u003e\u003ca href=\"#external-ip\"\u003eExternal IP\u003c/a\u003e\u003cul\u003e\u003cli\u003e\u003ca href=\"#地址伪装的作用\"\u003e地址伪装的作用\u003c/a\u003e\u003c/li\u003e\u003c/ul\u003e\u003c/li\u003e\u003cli\u003e\u003ca href=\"#nodeport\"\u003eNodePort\u003c/a\u003e\u003cul\u003e\u003cli\u003e\u003ca href=\"#集成外部负载均衡\"\u003e集成外部负载均衡\u003c/a\u003e\u003c/li\u003e\u003c/ul\u003e\u003c/li\u003e\u003cli\u003e\u003ca href=\"#小结\"\u003e小结\u003c/a\u003e\u003c/li\u003e\u003c/ul\u003e\n\n            \u003c/nav\u003e\n          \u003c/aside\u003e\n        \n        \u003cp\u003e注：\n本文采用\u003ca rel=\"license\" href=\"http://creativecommons.org/licenses/by-sa/4.0/\"\u003e知识共享署名-相同方式共享 4.0 国际许可协议\u003c/a\u003e进行许可。\u003c/p\u003e\n\n\u003cblockquote\u003e\n  \u003cp\u003eService的虚拟IP为Pod在集群内部的互通提供了便利，而ExternalIP和NodePort，则让我们从集群外部对Service的访问成为了可能。\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003e\u003cimg src=\"/assets/images/lab/k8s/externalip-nodeport.png\" alt=\"\" class=\"align-center\"/\u003e\u003c/p\u003e\n\n\u003cp\u003e在\u003ca href=\"/tech/k8s-net-service-1\"\u003eKubernetes网络篇——Service网络(上)\u003c/a\u003e和\u003ca href=\"/tech/k8s-net-service-1\"\u003eKubernetes网络篇——Service网络(下)\u003c/a\u003e里，我们了解了Kubernetes的Service网络。Service不仅实现了多Pod之间的负载均衡，而且还提供了虚拟IP，使Pod在集群内可以通过虚拟IP实现相互通信，而又不用担心Pod重启导致的IP地址变化。\u003c/p\u003e\n\n\u003cp\u003e但是，Service的虚拟IP只有在集群内部才有效，因此也被称为Cluster IP。对于集群以外的客户端，它们是无法通过Cluster IP访问到Service的。如果我们想从集群外部对Service进行访问，那就需要借助其他手段了。\u003c/p\u003e\n\n\u003ch2 id=\"external-ip\"\u003eExternal IP\u003c/h2\u003e\n\n\u003cp\u003e所谓External IP，就是为Service设置一个能够在集群外访问的IP地址。只要我们能确保，访问这个IP的数据包能够从集群外路由到集群内的某个节点上，再往后，就是集群内Service的常规通信，就可以运用我们在前面介绍Service网络时掌握的知识了。\u003c/p\u003e\n\n\u003cp\u003e下面我们就来为test-svc设置一个External IP，看看\u003ccode class=\"language-plaintext highlighter-rouge\"\u003eiptables\u003c/code\u003e规则会有哪些变化。为了方便后面分析比较，在修改test-svc的配置前，我们先把\u003ccode class=\"language-plaintext highlighter-rouge\"\u003eiptables\u003c/code\u003e当前的规则集保存到一个文件里：\u003c/p\u003e\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003e$ \u003c/span\u003eiptables-save \u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003erules-0\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e然后，执行\u003ccode class=\"language-plaintext highlighter-rouge\"\u003ekubectl edit\u003c/code\u003e命令，动态修改test-svc的配置：\u003c/p\u003e\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003e$ \u003c/span\u003ekubectl edit service test-svc\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e这个时候，kubectl会自动打开默认的文本编辑器，比如在我本地会打开vi，里面包含了test-svc的当前配置。我们要做的改动非常小，只要在\u003ccode class=\"language-plaintext highlighter-rouge\"\u003espec\u003c/code\u003e下面增加一项\u003ccode class=\"language-plaintext highlighter-rouge\"\u003eexternalIPs\u003c/code\u003e，填入我们预先规划好的IP地址，比如\u003ccode class=\"language-plaintext highlighter-rouge\"\u003e192.168.96.10\u003c/code\u003e：\u003c/p\u003e\n\u003cdiv class=\"language-yaml highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"na\"\u003eapiVersion\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003ev1\u003c/span\u003e\n\u003cspan class=\"na\"\u003ekind\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003eService\u003c/span\u003e\n\u003cspan class=\"na\"\u003emetadata\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e\n  \u003cspan class=\"na\"\u003eannotations\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e\n    \u003cspan class=\"s\"\u003ekubectl.kubernetes.io/last-applied-configuration\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"pi\"\u003e|\u003c/span\u003e\n      \u003cspan class=\"s\"\u003e{\u0026#34;apiVersion\u0026#34;:\u0026#34;v1\u0026#34;,\u0026#34;kind\u0026#34;:\u0026#34;Service\u0026#34;,\u0026#34;metadata\u0026#34;:{\u0026#34;annotations\u0026#34;:{},\u0026#34;name\u0026#34;:\u0026#34;test-svc\u0026#34;,\u0026#34;namespace\u0026#34;:\u0026#34;default\u0026#34;},\u0026#34;spec\u0026#34;:{\u0026#34;ports\u0026#34;:[{\u0026#34;port\u0026#34;:80,\u0026#34;targetPort\u0026#34;:\u0026#34;web-port\u0026#34;}],\u0026#34;selector\u0026#34;:{\u0026#34;app\u0026#34;:\u0026#34;lab-web\u0026#34;}}}\u003c/span\u003e\n  \u003cspan class=\"na\"\u003ecreationTimestamp\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"s\"\u003e2019-06-24T03:30:08Z\u0026#34;\u003c/span\u003e\n  \u003cspan class=\"na\"\u003ename\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003etest-svc\u003c/span\u003e\n  \u003cspan class=\"na\"\u003enamespace\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003edefault\u003c/span\u003e\n  \u003cspan class=\"na\"\u003eresourceVersion\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"s\"\u003e117804\u0026#34;\u003c/span\u003e\n  \u003cspan class=\"na\"\u003eselfLink\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003e/api/v1/namespaces/default/services/test-svc\u003c/span\u003e\n  \u003cspan class=\"na\"\u003euid\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003e5d85e807-9630-11e9-ab86-82d6af7a4ac8\u003c/span\u003e\n\u003cspan class=\"na\"\u003espec\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e\n  \u003cspan class=\"na\"\u003eclusterIP\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003e10.107.169.79\u003c/span\u003e\n  \u003cspan class=\"na\"\u003eexternalIPs\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e\n  \u003cspan class=\"pi\"\u003e-\u003c/span\u003e \u003cspan class=\"s\"\u003e192.168.96.10\u003c/span\u003e\n  \u003cspan class=\"na\"\u003eports\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e\n  \u003cspan class=\"pi\"\u003e-\u003c/span\u003e \u003cspan class=\"na\"\u003eport\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"m\"\u003e80\u003c/span\u003e\n    \u003cspan class=\"na\"\u003eprotocol\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003eTCP\u003c/span\u003e\n    \u003cspan class=\"na\"\u003etargetPort\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003eweb-port\u003c/span\u003e\n  \u003cspan class=\"na\"\u003eselector\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e\n    \u003cspan class=\"na\"\u003eapp\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003elab-web\u003c/span\u003e\n  \u003cspan class=\"na\"\u003esessionAffinity\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003eNone\u003c/span\u003e\n  \u003cspan class=\"na\"\u003etype\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003eClusterIP\u003c/span\u003e\n\u003cspan class=\"na\"\u003estatus\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e\n  \u003cspan class=\"na\"\u003eloadBalancer\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"pi\"\u003e{}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e保存退出以后，再执行\u003ccode class=\"language-plaintext highlighter-rouge\"\u003ekubectl get services\u003c/code\u003e，确保test-svc的配置已经成功得到了更新：\u003c/p\u003e\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003e$ \u003c/span\u003ekubectl get services \u003cspan class=\"nt\"\u003e-o\u003c/span\u003e wide\nNAME         TYPE        CLUSTER-IP      EXTERNAL-IP     PORT\u003cspan class=\"o\"\u003e(\u003c/span\u003eS\u003cspan class=\"o\"\u003e)\u003c/span\u003e   AGE   SELECTOR\nkubernetes   ClusterIP   10.96.0.1       \u0026lt;none\u0026gt;          443/TCP   24d   \u0026lt;none\u0026gt;\ntest-svc     ClusterIP   10.107.169.79   192.168.96.10   80/TCP    2d    \u003cspan class=\"nv\"\u003eapp\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003elab-web\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e从输出结果里我们可以看到，test-svc除了\u003ccode class=\"language-plaintext highlighter-rouge\"\u003eCLUSTER-IP\u003c/code\u003e一栏里有供集群内部访问的Cluster IP外，在\u003ccode class=\"language-plaintext highlighter-rouge\"\u003eEXTERNAL-IP\u003c/code\u003e一栏还列出了我们刚才设置的External IP。\u003c/p\u003e\n\n\u003cp\u003e接下来，我们再次执行\u003ccode class=\"language-plaintext highlighter-rouge\"\u003eiptables-save\u003c/code\u003e，并把输出结果存成文件：\u003c/p\u003e\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003e$ \u003c/span\u003eiptables-save \u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003erules-1\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e然后对前后两份\u003ccode class=\"language-plaintext highlighter-rouge\"\u003eiptables\u003c/code\u003e规则集进行对比，从中我们会看到下面几点变化：\u003c/p\u003e\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e⎢ \u003cspan class=\"nt\"\u003e-A\u003c/span\u003e KUBE-MARK-MASQ \u003cspan class=\"nt\"\u003e-j\u003c/span\u003e MARK \u003cspan class=\"nt\"\u003e--set-xmark\u003c/span\u003e 0x4000/0x4000\n⎢ \u003cspan class=\"nt\"\u003e-A\u003c/span\u003e KUBE-POSTROUTING \u003cspan class=\"nt\"\u003e-m\u003c/span\u003e comment \u003cspan class=\"nt\"\u003e--comment\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;kubernetes service traffic requiring SNAT\u0026#34;\u003c/span\u003e \u003cspan class=\"nt\"\u003e-m\u003c/span\u003e mark \u003cspan class=\"nt\"\u003e--mark\u003c/span\u003e 0x4000/0x4000 \u003cspan class=\"nt\"\u003e-j\u003c/span\u003e MASQUERADE\n⎢ ...\n① \u003cspan class=\"nt\"\u003e-A\u003c/span\u003e KUBE-SERVICES \u003cspan class=\"nt\"\u003e-d\u003c/span\u003e 192.168.96.10/32 \u003cspan class=\"nt\"\u003e-p\u003c/span\u003e tcp \u003cspan class=\"nt\"\u003e-m\u003c/span\u003e comment \u003cspan class=\"nt\"\u003e--comment\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;default/test-svc: external IP\u0026#34;\u003c/span\u003e \u003cspan class=\"nt\"\u003e-m\u003c/span\u003e tcp \u003cspan class=\"nt\"\u003e--dport\u003c/span\u003e 80 \u003cspan class=\"nt\"\u003e-j\u003c/span\u003e KUBE-MARK-MASQ\n② \u003cspan class=\"nt\"\u003e-A\u003c/span\u003e KUBE-SERVICES \u003cspan class=\"nt\"\u003e-d\u003c/span\u003e 192.168.96.10/32 \u003cspan class=\"nt\"\u003e-p\u003c/span\u003e tcp \u003cspan class=\"nt\"\u003e-m\u003c/span\u003e comment \u003cspan class=\"nt\"\u003e--comment\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;default/test-svc: external IP\u0026#34;\u003c/span\u003e \u003cspan class=\"nt\"\u003e-m\u003c/span\u003e tcp \u003cspan class=\"nt\"\u003e--dport\u003c/span\u003e 80 \u003cspan class=\"nt\"\u003e-m\u003c/span\u003e physdev \u003cspan class=\"o\"\u003e!\u003c/span\u003e \u003cspan class=\"nt\"\u003e--physdev-is-in\u003c/span\u003e \u003cspan class=\"nt\"\u003e-m\u003c/span\u003e addrtype \u003cspan class=\"o\"\u003e!\u003c/span\u003e \u003cspan class=\"nt\"\u003e--src-type\u003c/span\u003e LOCAL \u003cspan class=\"nt\"\u003e-j\u003c/span\u003e KUBE-SVC-W3OX4ZP4Y24AQZNW\n③ \u003cspan class=\"nt\"\u003e-A\u003c/span\u003e KUBE-SERVICES \u003cspan class=\"nt\"\u003e-d\u003c/span\u003e 192.168.96.10/32 \u003cspan class=\"nt\"\u003e-p\u003c/span\u003e tcp \u003cspan class=\"nt\"\u003e-m\u003c/span\u003e comment \u003cspan class=\"nt\"\u003e--comment\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;default/test-svc: external IP\u0026#34;\u003c/span\u003e \u003cspan class=\"nt\"\u003e-m\u003c/span\u003e tcp \u003cspan class=\"nt\"\u003e--dport\u003c/span\u003e 80 \u003cspan class=\"nt\"\u003e-m\u003c/span\u003e addrtype \u003cspan class=\"nt\"\u003e--dst-type\u003c/span\u003e LOCAL \u003cspan class=\"nt\"\u003e-j\u003c/span\u003e KUBE-SVC-W3OX4ZP4Y24AQZNW\n⎢ ...\n⎢ \u003cspan class=\"nt\"\u003e-A\u003c/span\u003e KUBE-SVC-W3OX4ZP4Y24AQZNW \u003cspan class=\"nt\"\u003e-m\u003c/span\u003e statistic \u003cspan class=\"nt\"\u003e--mode\u003c/span\u003e random \u003cspan class=\"nt\"\u003e--probability\u003c/span\u003e 0.33332999982 \u003cspan class=\"nt\"\u003e-j\u003c/span\u003e KUBE-SEP-E2HMOHPUOGTHZJEP\n⎢ \u003cspan class=\"nt\"\u003e-A\u003c/span\u003e KUBE-SVC-W3OX4ZP4Y24AQZNW \u003cspan class=\"nt\"\u003e-m\u003c/span\u003e statistic \u003cspan class=\"nt\"\u003e--mode\u003c/span\u003e random \u003cspan class=\"nt\"\u003e--probability\u003c/span\u003e 0.50000000000 \u003cspan class=\"nt\"\u003e-j\u003c/span\u003e KUBE-SEP-WFXGQBTRL5EC2R2Y\n⎢ \u003cspan class=\"nt\"\u003e-A\u003c/span\u003e KUBE-SVC-W3OX4ZP4Y24AQZNW \u003cspan class=\"nt\"\u003e-j\u003c/span\u003e KUBE-SEP-EEXR7SABLH35O4XP\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e其中，行①到行③是新增的规则，都是匹配目标地址为\u003ccode class=\"language-plaintext highlighter-rouge\"\u003e192.168.96.10\u003c/code\u003e（也就是我们设置的External IP）以及端口号为80的数据包的。\u003c/p\u003e\n\n\u003cul\u003e\n  \u003cli\u003e行①处的规则会跳转到KUBE-MARK-MASQ，也就是对数据包的源地址进行地址伪装。关于地址伪装，可以在\u003ca href=\"/tech/k8s-net-service-2\"\u003eKubernetes网络篇——Service网络(下)\u003c/a\u003e一文里找到更多细节，稍后我还会解释之所以要地址伪装的原因；\u003c/li\u003e\n  \u003cli\u003e在KUBE-MARK-MASQ为数据包设好地址伪装的标记以后，又会跳回行②和行③，继续匹配后面的规则；\u003c/li\u003e\n  \u003cli\u003e行②处的规则表示，如果数据包不是从bridge接口进来的(\u003ccode class=\"language-plaintext highlighter-rouge\"\u003e! --physdev-is-in\u003c/code\u003e)，同时源地址也不是LOCAL类型的(\u003ccode class=\"language-plaintext highlighter-rouge\"\u003e! --src-type LOCAL\u003c/code\u003e)，则匹配该规则，并跳转到KUBE-SVC-W3OX4ZP4Y24AQZNW链。这里，不从bridge接口进来，就说明访问Service的数据包一定不是来自Pod的；源地址不是LOCAL类型，则说明数据包一定不是由集群里的主机发起的；\u003c/li\u003e\n  \u003cli\u003e行③处的规则表示，如果数据包的目标地址是LOCAL类型的(\u003ccode class=\"language-plaintext highlighter-rouge\"\u003e--dst-type LOCAL\u003c/code\u003e)，则匹配该规则，并跳转到KUBE-SVC-W3OX4ZP4Y24AQZNW链。这说明我们为Service指定的External IP本身就是一个local地址，也就是某个本机网卡的IP地址；\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003e这两条规则实际上是要把数据包的来源限定在集群以外，也就是External IP要解决的典型场景。当跳转到KUBE-SVC-W3OX4ZP4Y24AQZNW链以后，再往后就和普通的集群内数据包处理逻辑完全一样了，这里就不再啰嗦了。\u003c/p\u003e\n\n\u003ch3 id=\"地址伪装的作用\"\u003e地址伪装的作用\u003c/h3\u003e\n\n\u003cp\u003e这里再解释一下地址伪装的重要性，我们先来看如果没有地址伪装会怎么样。\u003c/p\u003e\n\n\u003cp\u003e如果没有地址伪装，那么数据包在传送过程中的源地址就始终会是最初发送方的IP地址，也就是位于集群外的发起对Service请求的那个客户端。数据包在经过集群中的某个节点以后，最终会到达test-pod。而test-pod在返回结果的时候，会试图直接把返回的数据包发往集群外的那个客户端。但是，客户端在收到返回的数据包以后会立刻把包丢弃，因为包里的源地址（test-pod的IP地址）和它发送时指定的目标地址（test-svc的External IP）是不相符的。\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"/assets/images/lab/k8s/externalip-1.png\" alt=\"\" class=\"align-center\"/\u003e\u003c/p\u003e\n\n\u003cp\u003e如果使用了地址伪装，那么数据包在经过集群中的某个节点时，会把源地址替换成该节点的IP地址。这样一来，在test-pod看来，和它打交道的就是这个节点。所以，返回结果的时候，也会把数据包发往该节点。然后，数据包的源地址在这个节点上会再次被反向还原成Service的External IP，也就是客户端最初发起请求时所使用的那个目标地址。最终，数据包将成功到达客户端。\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"/assets/images/lab/k8s/externalip-2.png\" alt=\"\" class=\"align-center\"/\u003e\u003c/p\u003e\n\n\u003ch2 id=\"nodeport\"\u003eNodePort\u003c/h2\u003e\n\n\u003cp\u003eNodePort是另一种暴露Service的方法。它把Service通过端口号暴露到集群中的节点主机上，这也是为什么它被称为NodePort的原因。这样一来，通过访问主机上的某个端口号，我们就可以访问到Service了。\u003c/p\u003e\n\n\u003cp\u003e下面我们就来为test-svc配置一个NodePort。还是执行\u003ccode class=\"language-plaintext highlighter-rouge\"\u003ekubectl edit\u003c/code\u003e命令：\u003c/p\u003e\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003e$ \u003c/span\u003ekubectl edit service test-svc\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e按照下面的内容对test-svc的配置进行修改：\u003c/p\u003e\n\u003cdiv class=\"language-yaml highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"na\"\u003eapiVersion\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003ev1\u003c/span\u003e\n\u003cspan class=\"na\"\u003ekind\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003eService\u003c/span\u003e\n\u003cspan class=\"na\"\u003emetadata\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e\n  \u003cspan class=\"na\"\u003eannotations\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e\n    \u003cspan class=\"s\"\u003ekubectl.kubernetes.io/last-applied-configuration\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"pi\"\u003e|\u003c/span\u003e\n      \u003cspan class=\"s\"\u003e{\u0026#34;apiVersion\u0026#34;:\u0026#34;v1\u0026#34;,\u0026#34;kind\u0026#34;:\u0026#34;Service\u0026#34;,\u0026#34;metadata\u0026#34;:{\u0026#34;annotations\u0026#34;:{},\u0026#34;name\u0026#34;:\u0026#34;test-svc\u0026#34;,\u0026#34;namespace\u0026#34;:\u0026#34;default\u0026#34;},\u0026#34;spec\u0026#34;:{\u0026#34;ports\u0026#34;:[{\u0026#34;port\u0026#34;:80,\u0026#34;targetPort\u0026#34;:\u0026#34;web-port\u0026#34;}],\u0026#34;selector\u0026#34;:{\u0026#34;app\u0026#34;:\u0026#34;lab-web\u0026#34;}}}\u003c/span\u003e\n  \u003cspan class=\"na\"\u003ecreationTimestamp\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"s\"\u003e2019-06-24T03:30:08Z\u0026#34;\u003c/span\u003e\n  \u003cspan class=\"na\"\u003ename\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003etest-svc\u003c/span\u003e\n  \u003cspan class=\"na\"\u003enamespace\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003edefault\u003c/span\u003e\n  \u003cspan class=\"na\"\u003eresourceVersion\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"s\"\u003e3832\u0026#34;\u003c/span\u003e\n  \u003cspan class=\"na\"\u003eselfLink\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003e/api/v1/namespaces/default/services/test-svc\u003c/span\u003e\n  \u003cspan class=\"na\"\u003euid\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003e5d85e807-9630-11e9-ab86-82d6af7a4ac8\u003c/span\u003e\n\u003cspan class=\"na\"\u003espec\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e\n  \u003cspan class=\"na\"\u003eclusterIP\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003e10.107.169.79\u003c/span\u003e\n  \u003cspan class=\"na\"\u003eports\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e\n  \u003cspan class=\"pi\"\u003e-\u003c/span\u003e \u003cspan class=\"na\"\u003eport\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"m\"\u003e80\u003c/span\u003e\n    \u003cspan class=\"na\"\u003eprotocol\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003eTCP\u003c/span\u003e\n    \u003cspan class=\"na\"\u003etargetPort\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003eweb-port\u003c/span\u003e\n  \u003cspan class=\"na\"\u003eselector\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e\n    \u003cspan class=\"na\"\u003eapp\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003elab-web\u003c/span\u003e\n  \u003cspan class=\"na\"\u003esessionAffinity\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003eNone\u003c/span\u003e\n  \u003cspan class=\"na\"\u003etype\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003eNodePort\u003c/span\u003e\n\u003cspan class=\"na\"\u003estatus\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e\n  \u003cspan class=\"na\"\u003eloadBalancer\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"pi\"\u003e{}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e这里，我们去掉了之前的\u003ccode class=\"language-plaintext highlighter-rouge\"\u003eexternalIPs\u003c/code\u003e；并且，把\u003ccode class=\"language-plaintext highlighter-rouge\"\u003etype\u003c/code\u003e属性从\u003ccode class=\"language-plaintext highlighter-rouge\"\u003eClusterIP\u003c/code\u003e改成了\u003ccode class=\"language-plaintext highlighter-rouge\"\u003eNodePort\u003c/code\u003e。保存退出以后，再执行\u003ccode class=\"language-plaintext highlighter-rouge\"\u003ekubectl get services\u003c/code\u003e，确保test-svc的配置已经成功得到了更新：\u003c/p\u003e\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003e$ \u003c/span\u003ekubectl get services \u003cspan class=\"nt\"\u003e-o\u003c/span\u003e wide\nNAME         TYPE        CLUSTER-IP      EXTERNAL-IP   PORT\u003cspan class=\"o\"\u003e(\u003c/span\u003eS\u003cspan class=\"o\"\u003e)\u003c/span\u003e        AGE   SELECTOR\nkubernetes   ClusterIP   10.96.0.1       \u0026lt;none\u0026gt;        443/TCP        24d   \u0026lt;none\u0026gt;\ntest-svc     NodePort    10.107.169.79   \u0026lt;none\u0026gt;        80:30454/TCP   47h   \u003cspan class=\"nv\"\u003eapp\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003elab-web\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e可以看到，\u003ccode class=\"language-plaintext highlighter-rouge\"\u003eEXTERNAL-IP\u003c/code\u003e一栏现在变成了\u003ccode class=\"language-plaintext highlighter-rouge\"\u003e\u0026lt;none\u0026gt;\u003c/code\u003e，而\u003ccode class=\"language-plaintext highlighter-rouge\"\u003ePORTS\u003c/code\u003e栏和原来相比则有了变化。NodePort的这种处理方式和Docker在bridge network模式下对外暴露容器端口号的方式很像。这里，冒号前面的数字就是Service在容器内部的端口号；冒号后面的数字则是Service在节点主机上暴露出来的一个随机端口号，也就是NodePort。\u003c/p\u003e\n\n\u003cp\u003e另外，我们还注意到\u003ccode class=\"language-plaintext highlighter-rouge\"\u003eCLUSTER-IP\u003c/code\u003e一栏和之前保持一致。这表明，NodePort是工作在ClusterIP的基础上的。当我们为Service配置NodePort时，Kubernetes依然会为Service配置ClusterIP。因此，NodePort不会阻止Pod从集群内部通过Cluster IP对Service进行访问。\u003c/p\u003e\n\n\u003cp\u003e再来看一下，\u003ccode class=\"language-plaintext highlighter-rouge\"\u003eiptables\u003c/code\u003e规则方面的变化情况：\u003c/p\u003e\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e② \u003cspan class=\"nt\"\u003e-A\u003c/span\u003e KUBE-NODEPORTS \u003cspan class=\"nt\"\u003e-p\u003c/span\u003e tcp \u003cspan class=\"nt\"\u003e-m\u003c/span\u003e comment \u003cspan class=\"nt\"\u003e--comment\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;default/test-svc:\u0026#34;\u003c/span\u003e \u003cspan class=\"nt\"\u003e-m\u003c/span\u003e tcp \u003cspan class=\"nt\"\u003e--dport\u003c/span\u003e 30454 \u003cspan class=\"nt\"\u003e-j\u003c/span\u003e KUBE-MARK-MASQ\n③ \u003cspan class=\"nt\"\u003e-A\u003c/span\u003e KUBE-NODEPORTS \u003cspan class=\"nt\"\u003e-p\u003c/span\u003e tcp \u003cspan class=\"nt\"\u003e-m\u003c/span\u003e comment \u003cspan class=\"nt\"\u003e--comment\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;default/test-svc:\u0026#34;\u003c/span\u003e \u003cspan class=\"nt\"\u003e-m\u003c/span\u003e tcp \u003cspan class=\"nt\"\u003e--dport\u003c/span\u003e 30454 \u003cspan class=\"nt\"\u003e-j\u003c/span\u003e KUBE-SVC-W3OX4ZP4Y24AQZNW\n⎢ ...\n① \u003cspan class=\"nt\"\u003e-A\u003c/span\u003e KUBE-SERVICES \u003cspan class=\"nt\"\u003e-m\u003c/span\u003e comment \u003cspan class=\"nt\"\u003e--comment\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;kubernetes service nodeports; NOTE: this must be the last rule in this chain\u0026#34;\u003c/span\u003e \u003cspan class=\"nt\"\u003e-m\u003c/span\u003e addrtype \u003cspan class=\"nt\"\u003e--dst-type\u003c/span\u003e LOCAL \u003cspan class=\"nt\"\u003e-j\u003c/span\u003e KUBE-NODEPORTS\n⎢ ...\n⎢ \u003cspan class=\"nt\"\u003e-A\u003c/span\u003e KUBE-SVC-W3OX4ZP4Y24AQZNW \u003cspan class=\"nt\"\u003e-m\u003c/span\u003e statistic \u003cspan class=\"nt\"\u003e--mode\u003c/span\u003e random \u003cspan class=\"nt\"\u003e--probability\u003c/span\u003e 0.33332999982 \u003cspan class=\"nt\"\u003e-j\u003c/span\u003e KUBE-SEP-E2HMOHPUOGTHZJEP\n⎢ \u003cspan class=\"nt\"\u003e-A\u003c/span\u003e KUBE-SVC-W3OX4ZP4Y24AQZNW \u003cspan class=\"nt\"\u003e-m\u003c/span\u003e statistic \u003cspan class=\"nt\"\u003e--mode\u003c/span\u003e random \u003cspan class=\"nt\"\u003e--probability\u003c/span\u003e 0.50000000000 \u003cspan class=\"nt\"\u003e-j\u003c/span\u003e KUBE-SEP-WFXGQBTRL5EC2R2Y\n⎢ \u003cspan class=\"nt\"\u003e-A\u003c/span\u003e KUBE-SVC-W3OX4ZP4Y24AQZNW \u003cspan class=\"nt\"\u003e-j\u003c/span\u003e KUBE-SEP-EEXR7SABLH35O4XP\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cul\u003e\n  \u003cli\u003e和原来相比，行①处的规则是一直存在于\u003ccode class=\"language-plaintext highlighter-rouge\"\u003eiptables\u003c/code\u003e的规则集里面的。即使没有定义NodePort，它也存在，只是那时还没有KUBE-NODEPORTS链。这条规则的意思是，当数据包的目标地址是LOCAL类型的时候（\u003ccode class=\"language-plaintext highlighter-rouge\"\u003e--dst-type LOCAL\u003c/code\u003e），则匹配该规则，并跳转到KUBE-NODEPORTS链。这表明我们是在集群里的节点主机上向Service发起访问的；\u003c/li\u003e\n  \u003cli\u003e行②和行③处的规则是新加入的，表示当我们访问的端口号是30454时，会跳转到KUBE-SVC-W3OX4ZP4Y24AQZNW链，从那再往后就是正常的负载均衡逻辑了；\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch3 id=\"集成外部负载均衡\"\u003e集成外部负载均衡\u003c/h3\u003e\n\n\u003cp\u003e因为集群里的每个节点上都有大体相近的\u003ccode class=\"language-plaintext highlighter-rouge\"\u003eiptables\u003c/code\u003e规则集，所以在集群中的任何一个节点上向NodePort端口号发送请求，都可以访问到我们的test-svc。\u003c/p\u003e\n\n\u003cp\u003e基于这个原因，我们也可以把Kubernetes集群与外部的负载均衡服务进行集成，把集群中的所有节点都作为负载均衡服务连接的后端服务。然后再配上相应的健康检查(Health Check)，比如监听集群节点的某个端口。当集群中有节点出现故障而无法访问时，可以由外部的负载均衡服务自动进行调度。\u003c/p\u003e\n\n\u003ch2 id=\"小结\"\u003e小结\u003c/h2\u003e\n\n\u003cp\u003eExternalIP和NodePort都是为了将Service暴露到Kubernetes集群之外，从而让外部的客户端也能访问到集群内部的Service。其中，\u003c/p\u003e\n\n\u003cul\u003e\n  \u003cli\u003eExternalIP为Service提供了一个对外可见的IP地址；\u003c/li\u003e\n  \u003cli\u003eNodePort则通过端口号直接把Service暴露到了集群节点上，通过访问节点IP和端口号，就可以访问到Service；\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003e从\u003ccode class=\"language-plaintext highlighter-rouge\"\u003eiptables\u003c/code\u003e规则的角度来看，ExternalIP和NodePort都不过是原有Service基础上的规则叠加。在理解了Service网络的工作原理之后，再去理解ExternalIP和NodePort是非常容易的。\u003c/p\u003e\n\n        \n      \u003c/section\u003e\n\n      \u003cfooter class=\"page__meta\"\u003e\n        \n        \n  \n\n\n  \n\n  \u003cp class=\"page__taxonomy\"\u003e\n    \u003cstrong\u003e\u003ci class=\"fas fa-fw fa-tags\" aria-hidden=\"true\"\u003e\u003c/i\u003e 标签: \u003c/strong\u003e\n    \u003cspan itemprop=\"keywords\"\u003e\n    \n      \u003ca href=\"/tags/#dummies\" class=\"page__taxonomy-item p-category\" rel=\"tag\"\u003edummies\u003c/a\u003e\u003cspan class=\"sep\"\u003e, \u003c/span\u003e\n    \n      \u003ca href=\"/tags/#dummies-kubernetes\" class=\"page__taxonomy-item p-category\" rel=\"tag\"\u003edummies_kubernetes\u003c/a\u003e\u003cspan class=\"sep\"\u003e, \u003c/span\u003e\n    \n      \u003ca href=\"/tags/#kubernetes\" class=\"page__taxonomy-item p-category\" rel=\"tag\"\u003ekubernetes\u003c/a\u003e\u003cspan class=\"sep\"\u003e, \u003c/span\u003e\n    \n      \u003ca href=\"/tags/#lab\" class=\"page__taxonomy-item p-category\" rel=\"tag\"\u003elab\u003c/a\u003e\n    \n    \u003c/span\u003e\n  \u003c/p\u003e\n\n\n\n\n  \n\n\n  \n\n  \u003cp class=\"page__taxonomy\"\u003e\n    \u003cstrong\u003e\u003ci class=\"fas fa-fw fa-folder-open\" aria-hidden=\"true\"\u003e\u003c/i\u003e 分类: \u003c/strong\u003e\n    \u003cspan itemprop=\"keywords\"\u003e\n    \n      \u003ca href=\"/categories/#tech\" class=\"page__taxonomy-item p-category\" rel=\"tag\"\u003etech\u003c/a\u003e\n    \n    \u003c/span\u003e\n  \u003c/p\u003e\n\n\n        \n\n  \u003cp class=\"page__date\"\u003e\u003cstrong\u003e\u003ci class=\"fas fa-fw fa-calendar-alt\" aria-hidden=\"true\"\u003e\u003c/i\u003e 更新时间:\u003c/strong\u003e \u003ctime class=\"dt-published\" datetime=\"2021-05-09T00:00:00+08:00\"\u003eMay 9, 2021\u003c/time\u003e\u003c/p\u003e\n\n      \u003c/footer\u003e\n\n      \u003csection class=\"page__share\"\u003e\n  \n    \u003ch4 class=\"page__share-title\"\u003e分享\u003c/h4\u003e\n  \n\n  \u003ca href=\"https://twitter.com/intent/tweet?text=Kubernetes%E7%BD%91%E7%BB%9C%E7%AF%87%E2%80%94%E2%80%94ExternalIP%E5%92%8CNodePort%20https%3A%2F%2Fmorningspace.github.io%2Ftech%2Fk8s-net-externalip-nodeport%2F\" class=\"btn btn--twitter\" onclick=\"window.open(this.href, \u0026#39;window\u0026#39;, \u0026#39;left=20,top=20,width=500,height=500,toolbar=1,resizable=0\u0026#39;); return false;\" title=\"分享 Twitter\"\u003e\u003ci class=\"fab fa-fw fa-twitter\" aria-hidden=\"true\"\u003e\u003c/i\u003e\u003cspan\u003e Twitter\u003c/span\u003e\u003c/a\u003e\n\n  \u003ca href=\"https://www.facebook.com/sharer/sharer.php?u=https%3A%2F%2Fmorningspace.github.io%2Ftech%2Fk8s-net-externalip-nodeport%2F\" class=\"btn btn--facebook\" onclick=\"window.open(this.href, \u0026#39;window\u0026#39;, \u0026#39;left=20,top=20,width=500,height=500,toolbar=1,resizable=0\u0026#39;); return false;\" title=\"分享 Facebook\"\u003e\u003ci class=\"fab fa-fw fa-facebook\" aria-hidden=\"true\"\u003e\u003c/i\u003e\u003cspan\u003e Facebook\u003c/span\u003e\u003c/a\u003e\n\n  \u003ca href=\"https://www.linkedin.com/shareArticle?mini=true\u0026amp;url=https%3A%2F%2Fmorningspace.github.io%2Ftech%2Fk8s-net-externalip-nodeport%2F\" class=\"btn btn--linkedin\" onclick=\"window.open(this.href, \u0026#39;window\u0026#39;, \u0026#39;left=20,top=20,width=500,height=500,toolbar=1,resizable=0\u0026#39;); return false;\" title=\"分享 LinkedIn\"\u003e\u003ci class=\"fab fa-fw fa-linkedin\" aria-hidden=\"true\"\u003e\u003c/i\u003e\u003cspan\u003e LinkedIn\u003c/span\u003e\u003c/a\u003e\n\u003c/section\u003e\n\n\n      \n  \u003cnav class=\"pagination\"\u003e\n    \n      \u003ca href=\"/tech/k8s-net-service-2/\" class=\"pagination--pager\" title=\"Kubernetes网络篇——Service网络(下)\n\"\u003e向前\u003c/a\u003e\n    \n    \n      \u003ca href=\"/tech/k8s-net-ingress/\" class=\"pagination--pager\" title=\"Kubernetes网络篇——Ingress\n\"\u003e向后\u003c/a\u003e\n    \n  \u003c/nav\u003e\n\n    \u003c/div\u003e",
  "Date": "2021-05-09T00:00:00+08:00",
  "Author": "MornigSpace"
}