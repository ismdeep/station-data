{
  "Source": "morningspace",
  "Title": "Git合并那些事——当冲突发生的时候",
  "Link": "https://morningspace.github.io/tech/git-merge-stories-4/",
  "Content": "\u003cdiv class=\"page__inner-wrap\"\u003e\n      \n\n      \u003csection class=\"page__content e-content\" itemprop=\"text\"\u003e\n        \n          \u003caside class=\"sidebar__right sticky\"\u003e\n            \u003cnav class=\"toc\"\u003e\n              \u003cheader\u003e\u003ch4 class=\"nav__title\"\u003e\u003ci class=\"fas fa-file-alt\"\u003e\u003c/i\u003e 在本页上\u003c/h4\u003e\u003c/header\u003e\n              \u003cul class=\"toc__menu\"\u003e\u003cli\u003e\u003ca href=\"#制造冲突\"\u003e制造冲突\u003c/a\u003e\u003c/li\u003e\u003cli\u003e\u003ca href=\"#冲突背后\"\u003e冲突背后\u003c/a\u003e\u003cul\u003e\u003cli\u003e\u003ca href=\"#三份拷贝\"\u003e三份拷贝\u003c/a\u003e\u003c/li\u003e\u003cli\u003e\u003ca href=\"#使用git-diff\"\u003e使用git diff\u003c/a\u003e\u003c/li\u003e\u003cli\u003e\u003ca href=\"#使用git-log\"\u003e使用git log\u003c/a\u003e\u003c/li\u003e\u003cli\u003e\u003ca href=\"#使用git-checkout\"\u003e使用git checkout\u003c/a\u003e\u003c/li\u003e\u003c/ul\u003e\u003c/li\u003e\u003c/ul\u003e\n\n            \u003c/nav\u003e\n          \u003c/aside\u003e\n        \n        \u003cblockquote\u003e\n  \u003cp\u003e多人开发中的合并冲突是我们使用Git时常常会遇到的情况，小小合并门道大，讲述合并的那些事儿，晴耕 · 白话之“Git合并那些事”系列​持续连载中……\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003e注：\n本文的部分写作灵感来自于\u003ca href=\"https://git-scm.com/book/en/v2\"\u003e“Pro Git book”\u003c/a\u003e。感谢原作者的精彩分享。\n本文采用\u003ca rel=\"license\" href=\"http://creativecommons.org/licenses/by-sa/4.0/\"\u003e知识共享署名-相同方式共享 4.0 国际许可协议\u003c/a\u003e进行许可。\u003ca rel=\"license\" href=\"http://creativecommons.org/licenses/by-sa/4.0/\"\u003e\u003cimg alt=\"知识共享许可协议\" style=\"border-width:0\" src=\"https://i.creativecommons.org/l/by-sa/4.0/80x15.png\"/\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"/assets/images/lab/git/broken_git.png\" alt=\"\" class=\"align-center\"/\u003e\u003c/p\u003e\n\n\u003ch2 id=\"制造冲突\"\u003e制造冲突\u003c/h2\u003e\n\n\u003cp\u003e这篇文章所要讨论的，全部都是和我们进行分支合并时产生的合并冲突有关。为了通过实验加深理解，首先需要人为地制造出一个合并冲突来。下面我们就一步一步地来准备实验环境。\u003c/p\u003e\n\n\u003cp\u003e首先，我们新建一个本地Git库，叫做test-merge-conflict：\u003c/p\u003e\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003e$ \u003c/span\u003egit init test-merge-conflict\nInitialized empty Git repository \u003cspan class=\"k\"\u003ein\u003c/span\u003e /root/test-merge-conflict/.git/\n\u003cspan class=\"nv\"\u003e$ \u003c/span\u003e\u003cspan class=\"nb\"\u003ecd \u003c/span\u003etest-merge-conflict/\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e在master分支上新建README文件：\u003c/p\u003e\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003e$ \u003c/span\u003evi README\n\u003cspan class=\"nv\"\u003e$ \u003c/span\u003e\u003cspan class=\"nb\"\u003ecat \u003c/span\u003eREADME \nWhen conflict happens...\n\u003cspan class=\"k\"\u003e*\u003c/span\u003e Cancel the merge\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e并建立提交记录c0：\u003c/p\u003e\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003e$ \u003c/span\u003egit add \u003cspan class=\"nb\"\u003e.\u003c/span\u003e\n\u003cspan class=\"nv\"\u003e$ \u003c/span\u003egit commit \u003cspan class=\"nt\"\u003e-m\u003c/span\u003e c0\n\u003cspan class=\"o\"\u003e[\u003c/span\u003emaster \u003cspan class=\"o\"\u003e(\u003c/span\u003eroot-commit\u003cspan class=\"o\"\u003e)\u003c/span\u003e 12de8e7] c0\n 1 file changed, 2 insertions\u003cspan class=\"o\"\u003e(\u003c/span\u003e+\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n create mode 100644 README\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e然后，创建dev分支：\u003c/p\u003e\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003e$ \u003c/span\u003egit branch dev\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e并继续在master分支上修改README文件：\u003c/p\u003e\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003e$ \u003c/span\u003evi README\n\u003cspan class=\"nv\"\u003e$ \u003c/span\u003e\u003cspan class=\"nb\"\u003ecat \u003c/span\u003eREADME \nWhen conflict happens...\n\u003cspan class=\"k\"\u003e*\u003c/span\u003e Cancel the merge\n\u003cspan class=\"k\"\u003e*\u003c/span\u003e Understand the conflict\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e形成新的提交记录c1：\u003c/p\u003e\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003e$ \u003c/span\u003egit commit \u003cspan class=\"nt\"\u003e-am\u003c/span\u003e c1\n\u003cspan class=\"o\"\u003e[\u003c/span\u003emaster fc3fedf] c1\n 1 file changed, 1 insertion\u003cspan class=\"o\"\u003e(\u003c/span\u003e+\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e然后，切换到dev分支：\u003c/p\u003e\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003e$ \u003c/span\u003egit checkout dev\nSwitched to branch \u003cspan class=\"s1\"\u003e\u0026#39;dev\u0026#39;\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e继续修改README文件：\u003c/p\u003e\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003e$ \u003c/span\u003evi README \n\u003cspan class=\"nv\"\u003e$ \u003c/span\u003e\u003cspan class=\"nb\"\u003ecat \u003c/span\u003eREADME\nWhen conflict happens...\n\u003cspan class=\"k\"\u003e*\u003c/span\u003e Prepare\n\u003cspan class=\"k\"\u003e*\u003c/span\u003e Cancel the merge\n\u003cspan class=\"k\"\u003e*\u003c/span\u003e ...\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e并建立提交记录c2：\u003c/p\u003e\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003e$ \u003c/span\u003egit commit \u003cspan class=\"nt\"\u003e-am\u003c/span\u003e c2\n\u003cspan class=\"o\"\u003e[\u003c/span\u003edev f6cd947] c2\n 1 file changed, 2 insertions\u003cspan class=\"o\"\u003e(\u003c/span\u003e+\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e同时，再增加一个新文件.gitignore：\u003c/p\u003e\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003e$ \u003c/span\u003e\u003cspan class=\"nb\"\u003etouch\u003c/span\u003e .gitignore\n\u003cspan class=\"nv\"\u003e$ \u003c/span\u003egit add .gitignore\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e并建立提交记录c3：\u003c/p\u003e\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003e$ \u003c/span\u003egit commit \u003cspan class=\"nt\"\u003e-am\u003c/span\u003e c3\n\u003cspan class=\"o\"\u003e[\u003c/span\u003edev 225fb79] c3\n 1 file changed, 0 insertions\u003cspan class=\"o\"\u003e(\u003c/span\u003e+\u003cspan class=\"o\"\u003e)\u003c/span\u003e, 0 deletions\u003cspan class=\"o\"\u003e(\u003c/span\u003e-\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n create mode 100644 .gitignore\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e现在，让我们重新回到master分支：\u003c/p\u003e\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003e$ \u003c/span\u003egit checkout master\nSwitched to branch \u003cspan class=\"s1\"\u003e\u0026#39;master\u0026#39;\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e然后，把dev分支合并到master分支上来：\u003c/p\u003e\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003e$ \u003c/span\u003egit merge dev\nAuto-merging README\nCONFLICT \u003cspan class=\"o\"\u003e(\u003c/span\u003econtent\u003cspan class=\"o\"\u003e)\u003c/span\u003e: Merge conflict \u003cspan class=\"k\"\u003ein \u003c/span\u003eREADME\nAutomatic merge failed\u003cspan class=\"p\"\u003e;\u003c/span\u003e fix conflicts and \u003cspan class=\"k\"\u003ethen \u003c/span\u003ecommit the result.\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e这个时候，我们发现README在合并时产生了冲突。如果查看README的内容，还可以看到Git为我们自动添加的合并冲突标记：\u003c/p\u003e\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003e$ \u003c/span\u003e\u003cspan class=\"nb\"\u003ecat \u003c/span\u003eREADME \nWhen conflict happens...\n\u003cspan class=\"k\"\u003e*\u003c/span\u003e Prepare\n\u003cspan class=\"k\"\u003e*\u003c/span\u003e Cancel the merge\n\u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u0026lt;\u0026lt;\u0026lt;\u0026lt;\u003c/span\u003e\u0026lt; HEAD\n\u003cspan class=\"k\"\u003e*\u003c/span\u003e Understand the conflict\n\u003cspan class=\"o\"\u003e=======\u003c/span\u003e\n\u003cspan class=\"k\"\u003e*\u003c/span\u003e ...\n\u003cspan class=\"o\"\u003e\u0026gt;\u0026gt;\u0026gt;\u0026gt;\u0026gt;\u0026gt;\u0026gt;\u003c/span\u003e dev\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003ch2 id=\"冲突背后\"\u003e冲突背后\u003c/h2\u003e\n\n\u003ch3 id=\"三份拷贝\"\u003e三份拷贝\u003c/h3\u003e\n\n\u003cp\u003e当合并出现冲突的时候，Git会在它的index（或者说是“暂存区”）里，针对产生冲突的文件，记录下该文件的三份拷贝。分别对应于：代表“共同祖先”的提交记录（common ancestor commit，也叫merge-base commit），用数字1标识；代表当前分支上参与合并的提交记录（也叫ours commit），用数字2标识；代表被合并分支上参与合并的提交记录（也叫theris commit），用数字3标识。\u003c/p\u003e\n\n\u003cp\u003e可以通过\u003ccode class=\"language-plaintext highlighter-rouge\"\u003egit ls-files -u\u003c/code\u003e命令对这三份拷贝进行查看：\u003c/p\u003e\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003e$ \u003c/span\u003egit ls-files \u003cspan class=\"nt\"\u003e-u\u003c/span\u003e\n100644 45e560ae8081887efcfa21e0f06e8490b59297de 1\tREADME\n100644 75e3ffd958d236a08543a5ab0149c5ae262c7b32 2\tREADME\n100644 9612c0564c52f87357ff29a92b52947a7b0057d3 3\tREADME\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e其中，第一列代表的是mode值，100644对应的是普通文件。关于mode值更详细的介绍，大家可以在\u003ca href=\"/tech/inside-git-2\"\u003e“Git解密——Tree对象和Commit对象”\u003c/a\u003e一文里找到。第二列代表的是这些文件在.git目录下保存成Git对象所对应的唯一键。关于Git对象，可以在\u003ca href=\"/tech/inside-git-1\"\u003e“Git解密——认识Git对象”\u003c/a\u003e一文里找到更多的信息。第三列就是三份拷贝各自对应的数字标识。\u003c/p\u003e\n\n\u003cp\u003e我们还可以用\u003ccode class=\"language-plaintext highlighter-rouge\"\u003egit show\u003c/code\u003e命令，结合特殊的语法，查看具体的文件内容。\u003c/p\u003e\n\n\u003cp\u003e比如这是“共同祖先”的版本：\u003c/p\u003e\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003e$ \u003c/span\u003egit show :1:README \u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e README.common\n\u003cspan class=\"nv\"\u003e$ \u003c/span\u003e\u003cspan class=\"nb\"\u003ecat \u003c/span\u003eREADME.common\nWhen conflict happens...\n\u003cspan class=\"k\"\u003e*\u003c/span\u003e Cancel the merge\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e这是ours的版本：\u003c/p\u003e\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003e$ \u003c/span\u003egit show :2:README \u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e README.ours\n\u003cspan class=\"nv\"\u003e$ \u003c/span\u003e\u003cspan class=\"nb\"\u003ecat \u003c/span\u003eREADME.ours\nWhen conflict happens...\n\u003cspan class=\"k\"\u003e*\u003c/span\u003e Cancel the merge\n\u003cspan class=\"k\"\u003e*\u003c/span\u003e Understand the conflict\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e这是theirs的版本：\u003c/p\u003e\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003e$ \u003c/span\u003egit show :3:README \u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e README.theirs\n\u003cspan class=\"nv\"\u003e$ \u003c/span\u003e\u003cspan class=\"nb\"\u003ecat \u003c/span\u003eREADME.theirs\nWhen conflict happens...\n\u003cspan class=\"k\"\u003e*\u003c/span\u003e Prepare\n\u003cspan class=\"k\"\u003e*\u003c/span\u003e Cancel the merge\n\u003cspan class=\"k\"\u003e*\u003c/span\u003e ...\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e不仅如此，我们还可以利用这三个版本，结合\u003ccode class=\"language-plaintext highlighter-rouge\"\u003egit merge-file\u003c/code\u003e命令，显式地对README文件进行一次Three-Way Merge：\u003c/p\u003e\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003e$ \u003c/span\u003egit merge-file \u003cspan class=\"nt\"\u003e-p\u003c/span\u003e README.ours README.common README.theirs \u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e README.merged\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e这其中，参数\u003ccode class=\"language-plaintext highlighter-rouge\"\u003e-p\u003c/code\u003e是为了让Git把合并结果输出到标准输出设备，然后我们再利用重定向，把结果写入README.merged文件。默认情况下，合并后的结果会直接覆盖README.ours的内容。\u003c/p\u003e\n\n\u003cp\u003e当然，因为我们的合并存在冲突，所以还需要做进一步的手工编辑。当冲突解决后，我们可以使用\u003ccode class=\"language-plaintext highlighter-rouge\"\u003egit clean\u003c/code\u003e，清除所有手工合并时产生的多余临时文件：\u003c/p\u003e\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003e$ \u003c/span\u003egit clean \u003cspan class=\"nt\"\u003e-f\u003c/span\u003e\nRemoving README.common\nRemoving README.merged\nRemoving README.ours\nRemoving README.theirs\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003ch3 id=\"使用git-diff\"\u003e使用git diff\u003c/h3\u003e\n\n\u003cp\u003e当冲突发生的时候，Git为我们提供了很多工具，可以帮助我们进一步了解冲突的具体情况。比如，我们可以利用\u003ccode class=\"language-plaintext highlighter-rouge\"\u003egit diff\u003c/code\u003e，对当前工作目录下等待提交的内容（也就是自动合并后的结果）和三份拷贝进行比较：\u003c/p\u003e\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003e$ \u003c/span\u003egit diff\ndiff \u003cspan class=\"nt\"\u003e--cc\u003c/span\u003e README\nindex 75e3ffd,9612c05..0000000\n\u003cspan class=\"nt\"\u003e---\u003c/span\u003e a/README\n+++ b/README\n@@@ \u003cspan class=\"nt\"\u003e-1\u003c/span\u003e,3 \u003cspan class=\"nt\"\u003e-1\u003c/span\u003e,4 +1,8 @@@\n  When conflict happens...\n+ \u003cspan class=\"k\"\u003e*\u003c/span\u003e Prepare\n  \u003cspan class=\"k\"\u003e*\u003c/span\u003e Cancel the merge\n++\u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u0026lt;\u0026lt;\u0026lt;\u0026lt;\u003c/span\u003e\u0026lt; HEAD\n +\u003cspan class=\"k\"\u003e*\u003c/span\u003e Understand the conflict\n++\u003cspan class=\"o\"\u003e=======\u003c/span\u003e\n+ \u003cspan class=\"k\"\u003e*\u003c/span\u003e ...\n++\u0026gt;\u0026gt;\u0026gt;\u0026gt;\u0026gt;\u0026gt;\u0026gt; dev\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e执行\u003ccode class=\"language-plaintext highlighter-rouge\"\u003egit diff\u003c/code\u003e时，Git会把能够成功完成自动合并的部分略去，只列出当前遇到冲突的部分。对于冲突部分的表示方法，Git采用的是一种被称为“Combined Diff”的格式。其中，涉及冲突的每一行最前面会多出两列来。第一列告诉我们，当前工作目录里的内容是否和ours版本有差异；第二列告诉我们，当前工作目录里的内容是否和theirs版本有差异。如果是新增的，就用“+”表示；如果是删除的，就用“-”表示。\u003c/p\u003e\n\n\u003cp\u003e所以，在上面的例子里：\u003ccode class=\"language-plaintext highlighter-rouge\"\u003e* Prepare\u003c/code\u003e和\u003ccode class=\"language-plaintext highlighter-rouge\"\u003e* ...\u003c/code\u003e都是来自theirs版本，相对于ours版本而言新增的内容；\u003ccode class=\"language-plaintext highlighter-rouge\"\u003e* Understand the conflict\u003c/code\u003e则刚好相反；\u003ccode class=\"language-plaintext highlighter-rouge\"\u003e\u0026lt;\u0026lt;\u0026lt;\u0026lt;\u0026lt;\u0026lt;\u0026lt; HEAD\u003c/code\u003e，\u003ccode class=\"language-plaintext highlighter-rouge\"\u003e=======\u003c/code\u003e，\u003ccode class=\"language-plaintext highlighter-rouge\"\u003e\u0026gt;\u0026gt;\u0026gt;\u0026gt;\u0026gt;\u0026gt;\u0026gt; dev\u003c/code\u003e都是Git自动为我们加入的合并冲突标记，对于ours和theirs而言都是新增的内容。\u003c/p\u003e\n\n\u003cp\u003e另外，如果我们只想和当前分支合并前的内容进行比较，也可以使用\u003ccode class=\"language-plaintext highlighter-rouge\"\u003egit diff --ours\u003c/code\u003e；和被合并分支上的内容进行比较，可以使用\u003ccode class=\"language-plaintext highlighter-rouge\"\u003egit diff --theirs\u003c/code\u003e；和作为两个分支的共同祖先进行比较，则可以使用\u003ccode class=\"language-plaintext highlighter-rouge\"\u003egit diff --base\u003c/code\u003e。\u003c/p\u003e\n\n\u003ch3 id=\"使用git-log\"\u003e使用git log\u003c/h3\u003e\n\n\u003cp\u003e为了快速掌握合并冲突是由那些改动引起的，我们也可以利用\u003ccode class=\"language-plaintext highlighter-rouge\"\u003egit log\u003c/code\u003e查看提交历史。它可以帮助我们把参与合并的两个分支上，所有和当前这次合并相关的提交记录都列出来：\u003c/p\u003e\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003e$ \u003c/span\u003egit log \u003cspan class=\"nt\"\u003e--oneline\u003c/span\u003e \u003cspan class=\"nt\"\u003e--left-right\u003c/span\u003e HEAD...MERGE_HEAD\n\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e 225fb79 \u003cspan class=\"o\"\u003e(\u003c/span\u003edev\u003cspan class=\"o\"\u003e)\u003c/span\u003e c3\n\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e f6cd947 c2\n\u0026lt; fc3fedf \u003cspan class=\"o\"\u003e(\u003c/span\u003eHEAD -\u0026gt; master\u003cspan class=\"o\"\u003e)\u003c/span\u003e c1\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e这里，\u003ccode class=\"language-plaintext highlighter-rouge\"\u003eMERGE_HEAD\u003c/code\u003e指向的是我们的被合并分支。和它相对应的是\u003ccode class=\"language-plaintext highlighter-rouge\"\u003eORIG_HEAD\u003c/code\u003e，指向的是当前分支。因为在我们的例子里它等价于\u003ccode class=\"language-plaintext highlighter-rouge\"\u003eHEAD\u003c/code\u003e，所以我们就直接使用了\u003ccode class=\"language-plaintext highlighter-rouge\"\u003eHEAD\u003c/code\u003e。对于\u003ccode class=\"language-plaintext highlighter-rouge\"\u003eHEAD...MERGE_HEAD\u003c/code\u003e这种写法，我们用到了一种被称为“Triple Dot”的特殊语法。它指定的是，两个分支上的所有提交记录，但不包含这两个分支的共同祖先。例如，在我们的例子里，c1，c2，c3都是满足条件的。而c0则不满足条件，因为它是两个分支的共同祖先：\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"/assets/images/lab/git/merge-stories-15.png\" alt=\"\"/\u003e\u003c/p\u003e\n\n\u003cp\u003e上面的命令里，我们还使用了\u003ccode class=\"language-plaintext highlighter-rouge\"\u003e--left-right\u003c/code\u003e参数。它可以让Git标记出，影响合并结果的那些提交记录分别来自于哪个分支（左边还是右边）。来自左侧的提交记录会标记为\u003ccode class=\"language-plaintext highlighter-rouge\"\u003e\u0026lt;\u003c/code\u003e，在我们的例子里就是HEAD所指向的master分支；来自右侧的提交记录则会标记为\u003ccode class=\"language-plaintext highlighter-rouge\"\u003e\u0026gt;\u003c/code\u003e，在我们的例子里就是MERGE_HEAD所指向的被合并分支dev。\u003c/p\u003e\n\n\u003cp\u003e另外，如果我们把参数换成\u003ccode class=\"language-plaintext highlighter-rouge\"\u003e--merge\u003c/code\u003e，那么Git只会显示参与合并的两个分支上，直接造成当前文件冲突的那些提交记录：\u003c/p\u003e\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003e$ \u003c/span\u003egit log \u003cspan class=\"nt\"\u003e--oneline\u003c/span\u003e \u003cspan class=\"nt\"\u003e--left-right\u003c/span\u003e \u003cspan class=\"nt\"\u003e--merge\u003c/span\u003e\n\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e f6cd947 c2\n\u0026lt; fc3fedf \u003cspan class=\"o\"\u003e(\u003c/span\u003eHEAD -\u0026gt; master\u003cspan class=\"o\"\u003e)\u003c/span\u003e c1\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e这里我们并没有看到提交记录c3，因为c3没有涉及对README文件的修改。\u003c/p\u003e\n\n\u003ch3 id=\"使用git-checkout\"\u003e使用git checkout\u003c/h3\u003e\n\n\u003cp\u003e如果我们把存在冲突的文件改乱了，想重新开始；或者，如果我们只想从其他分支上合并个别文件，我们可以使用\u003ccode class=\"language-plaintext highlighter-rouge\"\u003egit checkout\u003c/code\u003e。结合\u003ccode class=\"language-plaintext highlighter-rouge\"\u003e--conflict\u003c/code\u003e参数，它可以把存在冲突的文件，或者我们希望合并的文件重新checkout出来，并重新加上代表合并冲突的标记：\u003c/p\u003e\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003e$ \u003c/span\u003egit checkout \u003cspan class=\"nt\"\u003e--conflict\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003ediff3 README\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e参数\u003ccode class=\"language-plaintext highlighter-rouge\"\u003e--conflict\u003c/code\u003e的取值可以是\u003ccode class=\"language-plaintext highlighter-rouge\"\u003emerge\u003c/code\u003e或者\u003ccode class=\"language-plaintext highlighter-rouge\"\u003ediff3\u003c/code\u003e。默认情况下使用\u003ccode class=\"language-plaintext highlighter-rouge\"\u003emerge\u003c/code\u003e，Git会在文件里发生冲突的地方把代表ours和theirs的内容都显示出来。如果使用了\u003ccode class=\"language-plaintext highlighter-rouge\"\u003ediff3\u003c/code\u003e，Git还会把代表merge base的部分也显示出来：\u003c/p\u003e\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003e$ \u003c/span\u003e\u003cspan class=\"nb\"\u003ecat \u003c/span\u003eREADME\nWhen conflict happens...\n\u003cspan class=\"k\"\u003e*\u003c/span\u003e Prepare\n\u003cspan class=\"k\"\u003e*\u003c/span\u003e Cancel the merge\n\u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u0026lt;\u0026lt;\u0026lt;\u0026lt;\u003c/span\u003e\u0026lt; ours\n\u003cspan class=\"k\"\u003e*\u003c/span\u003e Understand the conflict\n\u003cspan class=\"o\"\u003e||||||\u003c/span\u003e| base\n\u003cspan class=\"o\"\u003e=======\u003c/span\u003e\n\u003cspan class=\"k\"\u003e*\u003c/span\u003e ...\n\u003cspan class=\"o\"\u003e\u0026gt;\u0026gt;\u0026gt;\u0026gt;\u0026gt;\u0026gt;\u0026gt;\u003c/span\u003e theirs\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e其中，从\u003ccode class=\"language-plaintext highlighter-rouge\"\u003e|||||||\u003c/code\u003e开始到\u003ccode class=\"language-plaintext highlighter-rouge\"\u003e=======\u003c/code\u003e结束的部分就是代表merge base的部分。\u003c/p\u003e\n\n\u003cp\u003e另外，\u003ccode class=\"language-plaintext highlighter-rouge\"\u003egit checkout\u003c/code\u003e也可以带\u003ccode class=\"language-plaintext highlighter-rouge\"\u003e--ours\u003c/code\u003e或\u003ccode class=\"language-plaintext highlighter-rouge\"\u003e--theirs\u003c/code\u003e参数。这对于处理二进制文件的合并冲突很有用，因为二进制文件做文本比较没有意义，我们在合并时通常只要简单地选择其中一个分支上的内容就可以了。Git会为我们快速地选择参与合并的两个分支中的其中一方，而根本不需要做对比。\u003c/p\u003e\n\n        \n      \u003c/section\u003e\n\n      \u003cfooter class=\"page__meta\"\u003e\n        \n        \n  \n\n\n  \n\n  \u003cp class=\"page__taxonomy\"\u003e\n    \u003cstrong\u003e\u003ci class=\"fas fa-fw fa-tags\" aria-hidden=\"true\"\u003e\u003c/i\u003e 标签: \u003c/strong\u003e\n    \u003cspan itemprop=\"keywords\"\u003e\n    \n      \u003ca href=\"/tags/#dummies\" class=\"page__taxonomy-item p-category\" rel=\"tag\"\u003edummies\u003c/a\u003e\u003cspan class=\"sep\"\u003e, \u003c/span\u003e\n    \n      \u003ca href=\"/tags/#dummies-git\" class=\"page__taxonomy-item p-category\" rel=\"tag\"\u003edummies_git\u003c/a\u003e\u003cspan class=\"sep\"\u003e, \u003c/span\u003e\n    \n      \u003ca href=\"/tags/#git\" class=\"page__taxonomy-item p-category\" rel=\"tag\"\u003egit\u003c/a\u003e\u003cspan class=\"sep\"\u003e, \u003c/span\u003e\n    \n      \u003ca href=\"/tags/#lab\" class=\"page__taxonomy-item p-category\" rel=\"tag\"\u003elab\u003c/a\u003e\n    \n    \u003c/span\u003e\n  \u003c/p\u003e\n\n\n\n\n  \n\n\n  \n\n  \u003cp class=\"page__taxonomy\"\u003e\n    \u003cstrong\u003e\u003ci class=\"fas fa-fw fa-folder-open\" aria-hidden=\"true\"\u003e\u003c/i\u003e 分类: \u003c/strong\u003e\n    \u003cspan itemprop=\"keywords\"\u003e\n    \n      \u003ca href=\"/categories/#tech\" class=\"page__taxonomy-item p-category\" rel=\"tag\"\u003etech\u003c/a\u003e\n    \n    \u003c/span\u003e\n  \u003c/p\u003e\n\n\n        \n\n  \u003cp class=\"page__date\"\u003e\u003cstrong\u003e\u003ci class=\"fas fa-fw fa-calendar-alt\" aria-hidden=\"true\"\u003e\u003c/i\u003e 更新时间:\u003c/strong\u003e \u003ctime class=\"dt-published\" datetime=\"2019-09-17T00:00:00+08:00\"\u003eSeptember 17, 2019\u003c/time\u003e\u003c/p\u003e\n\n      \u003c/footer\u003e\n\n      \u003csection class=\"page__share\"\u003e\n  \n    \u003ch4 class=\"page__share-title\"\u003e分享\u003c/h4\u003e\n  \n\n  \u003ca href=\"https://twitter.com/intent/tweet?text=Git%E5%90%88%E5%B9%B6%E9%82%A3%E4%BA%9B%E4%BA%8B%E2%80%94%E2%80%94%E5%BD%93%E5%86%B2%E7%AA%81%E5%8F%91%E7%94%9F%E7%9A%84%E6%97%B6%E5%80%99%20https%3A%2F%2Fmorningspace.github.io%2Ftech%2Fgit-merge-stories-4%2F\" class=\"btn btn--twitter\" onclick=\"window.open(this.href, \u0026#39;window\u0026#39;, \u0026#39;left=20,top=20,width=500,height=500,toolbar=1,resizable=0\u0026#39;); return false;\" title=\"分享 Twitter\"\u003e\u003ci class=\"fab fa-fw fa-twitter\" aria-hidden=\"true\"\u003e\u003c/i\u003e\u003cspan\u003e Twitter\u003c/span\u003e\u003c/a\u003e\n\n  \u003ca href=\"https://www.facebook.com/sharer/sharer.php?u=https%3A%2F%2Fmorningspace.github.io%2Ftech%2Fgit-merge-stories-4%2F\" class=\"btn btn--facebook\" onclick=\"window.open(this.href, \u0026#39;window\u0026#39;, \u0026#39;left=20,top=20,width=500,height=500,toolbar=1,resizable=0\u0026#39;); return false;\" title=\"分享 Facebook\"\u003e\u003ci class=\"fab fa-fw fa-facebook\" aria-hidden=\"true\"\u003e\u003c/i\u003e\u003cspan\u003e Facebook\u003c/span\u003e\u003c/a\u003e\n\n  \u003ca href=\"https://www.linkedin.com/shareArticle?mini=true\u0026amp;url=https%3A%2F%2Fmorningspace.github.io%2Ftech%2Fgit-merge-stories-4%2F\" class=\"btn btn--linkedin\" onclick=\"window.open(this.href, \u0026#39;window\u0026#39;, \u0026#39;left=20,top=20,width=500,height=500,toolbar=1,resizable=0\u0026#39;); return false;\" title=\"分享 LinkedIn\"\u003e\u003ci class=\"fab fa-fw fa-linkedin\" aria-hidden=\"true\"\u003e\u003c/i\u003e\u003cspan\u003e LinkedIn\u003c/span\u003e\u003c/a\u003e\n\u003c/section\u003e\n\n\n      \n  \u003cnav class=\"pagination\"\u003e\n    \n      \u003ca href=\"/tech/all-in-one-k8s-playground/\" class=\"pagination--pager\" title=\"All-in-One K8S Playground中文使用指南\n\"\u003e向前\u003c/a\u003e\n    \n    \n      \u003ca href=\"/tech/git-merge-stories-5/\" class=\"pagination--pager\" title=\"Git合并那些事——撤销合并\n\"\u003e向后\u003c/a\u003e\n    \n  \u003c/nav\u003e\n\n    \u003c/div\u003e",
  "Date": "2019-09-17T00:00:00+08:00",
  "Author": "MornigSpace"
}