{
  "Source": "morningspace",
  "Title": "Kubernetes网络篇——自己动手写CNI插件(下)",
  "Link": "https://morningspace.github.io/tech/k8s-net-cni-coding-go/",
  "Content": "\u003cdiv class=\"page__inner-wrap\"\u003e\n      \n\n      \u003csection class=\"page__content e-content\" itemprop=\"text\"\u003e\n        \n          \u003caside class=\"sidebar__right sticky\"\u003e\n            \u003cnav class=\"toc\"\u003e\n              \u003cheader\u003e\u003ch4 class=\"nav__title\"\u003e\u003ci class=\"fas fa-file-alt\"\u003e\u003c/i\u003e 在本页上\u003c/h4\u003e\u003c/header\u003e\n              \u003cul class=\"toc__menu\"\u003e\u003cli\u003e\u003ca href=\"#第二个插件simple-bridge\"\u003e第二个插件：simple-bridge\u003c/a\u003e\u003c/li\u003e\u003cli\u003e\u003ca href=\"#准备工作\"\u003e准备工作\u003c/a\u003e\u003c/li\u003e\u003cli\u003e\u003ca href=\"#代码实现\"\u003e代码实现\u003c/a\u003e\u003cul\u003e\u003cli\u003e\u003ca href=\"#主体结构\"\u003e主体结构\u003c/a\u003e\u003c/li\u003e\u003cli\u003e\u003ca href=\"#第一步读取配置文件\"\u003e第一步：读取配置文件\u003c/a\u003e\u003c/li\u003e\u003cli\u003e\u003ca href=\"#第二步配置bridge\"\u003e第二步：配置bridge\u003c/a\u003e\u003c/li\u003e\u003cli\u003e\u003ca href=\"#第三步配置veth-pair\"\u003e第三步：配置veth pair\u003c/a\u003e\u003c/li\u003e\u003cli\u003e\u003ca href=\"#第四步分配ip地址\"\u003e第四步：分配IP地址\u003c/a\u003e\u003c/li\u003e\u003cli\u003e\u003ca href=\"#把所有代码串起来\"\u003e把所有代码串起来\u003c/a\u003e\u003c/li\u003e\u003c/ul\u003e\u003c/li\u003e\u003cli\u003e\u003ca href=\"#代码运行\"\u003e代码运行\u003c/a\u003e\u003c/li\u003e\u003c/ul\u003e\n\n            \u003c/nav\u003e\n          \u003c/aside\u003e\n        \n        \u003cp\u003e注：\n本文采用\u003ca rel=\"license\" href=\"http://creativecommons.org/licenses/by-sa/4.0/\"\u003e知识共享署名-相同方式共享 4.0 国际许可协议\u003c/a\u003e进行许可。\u003ca rel=\"license\" href=\"http://creativecommons.org/licenses/by-sa/4.0/\"\u003e\u003cimg alt=\"知识共享许可协议\" style=\"border-width:0\" src=\"https://i.creativecommons.org/l/by-sa/4.0/80x15.png\"/\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003cblockquote\u003e\n  \u003cp\u003e本文，我们将用go语言，结合CNI项目提供的go工具库，来开发一个接近真实更加复杂的插件。它和CNI的标准插件bridge类似，会为我们在宿主机上创建一个bridge，并把容器连接到bridge上。\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003e\u003cimg src=\"/assets/images/lab/k8s/cni-go.png\" alt=\"\" class=\"align-center\"/\u003e\u003c/p\u003e\n\n\u003ch2 id=\"第二个插件simple-bridge\"\u003e第二个插件：simple-bridge\u003c/h2\u003e\n\n\u003cp\u003e在\u003ca href=\"/tech/k8s-net-cni-coding-shell/\"\u003eKubernetes网络篇——自己动手写CNI插件(上)\u003c/a\u003e一文里，我们通过一个简单的例子演示了用shell脚本写的CNI插件，并成功地和rkt实现了互动。接下来，我们再用go语言来写一个更接近真实的CNI插件。\u003c/p\u003e\n\n\u003cp\u003e应该说，使用go来编写CNI插件是最顺理成章的。因为，CNI的GitHub项目提供了基于go语言的工具库，再加上go社区本身就有很多工具库，开发人员可以对Linux的网络功能进行各种丰富的控制。\u003c/p\u003e\n\n\u003cp\u003e我们知道，通常CNI插件会在容器启动和删除的时候被调用。在容器启动时，插件会为容器分配相应的网络资源，比如：网络连接，IP地址等。在容器删除时，插件会回收之前所创建的这些网络资源。我们即将要实现的这个插实际上是一个简化版的bridge插件，它会在容器启动时为我们在宿主机上创建一个bridge，并把容器连接到bridge上，最后再为容器分配好IP地址。\u003c/p\u003e\n\n\u003ch2 id=\"准备工作\"\u003e准备工作\u003c/h2\u003e\n\n\u003cp\u003e使用go语言开发需要准备好go的开发环境，因为等一下要用rkt来验证我们开发的插件，所以和之前一样，我会继续使用Debian环境。由于go环境的安装不是本文的关注点，所以这里就不展开了。\u003c/p\u003e\n\n\u003cp\u003e为了测试我们开发的插件，还需要一个网络配置文件：\u003c/p\u003e\n\u003cdiv class=\"language-json highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"w\"\u003e\n    \u003c/span\u003e\u003cspan class=\"nl\"\u003e\u0026#34;cniVersion\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;0.4.0\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n    \u003c/span\u003e\u003cspan class=\"nl\"\u003e\u0026#34;name\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;lab-cni-mybr-net\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n    \u003c/span\u003e\u003cspan class=\"nl\"\u003e\u0026#34;type\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;simple-bridge\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n    \u003c/span\u003e\u003cspan class=\"nl\"\u003e\u0026#34;bridge\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;lab-cni-mybr\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n    \u003c/span\u003e\u003cspan class=\"nl\"\u003e\u0026#34;ip\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;10.15.30.100/24\u0026#34;\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\u003cp\u003e这个文件非常简单，除了几个标准属性，如：CNI版本号，网络名称，插件类型（simple-bridge）外，还有两个特定于插件的参数。其中，\u003ccode class=\"language-plaintext highlighter-rouge\"\u003ebridge\u003c/code\u003e是宿主机上的bridge名称，\u003ccode class=\"language-plaintext highlighter-rouge\"\u003eip\u003c/code\u003e是veth pair位于容器一端的IP地址。我们把配置文件取名为\u003ccode class=\"language-plaintext highlighter-rouge\"\u003elab-cni-mybr-net.conf\u003c/code\u003e，存到\u003ccode class=\"language-plaintext highlighter-rouge\"\u003e/etc/rkt/net.d\u003c/code\u003e目录下。\u003c/p\u003e\n\n\u003ch2 id=\"代码实现\"\u003e代码实现\u003c/h2\u003e\n\n\u003cp\u003e下面我们就一起来看一下插件的代码实现。\u003c/p\u003e\n\n\u003ch3 id=\"主体结构\"\u003e主体结构\u003c/h3\u003e\n\n\u003cp\u003e首先来看一下代码的主体结构：\u003c/p\u003e\n\u003cdiv class=\"language-go highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"n\"\u003ePackage\u003c/span\u003e \u003cspan class=\"n\"\u003emain\u003c/span\u003e\n\n\u003cspan class=\"n\"\u003eImport\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\n  \u003cspan class=\"o\"\u003e...\u003c/span\u003e \u003cspan class=\"o\"\u003e...\u003c/span\u003e\n\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003efunc\u003c/span\u003e \u003cspan class=\"n\"\u003ecmdAdd\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eargs\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003eskel\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eCmdArgs\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"kt\"\u003eerror\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"o\"\u003e...\u003c/span\u003e \u003cspan class=\"o\"\u003e...\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003efunc\u003c/span\u003e \u003cspan class=\"n\"\u003ecmdCheck\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eargs\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003eskel\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eCmdArgs\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"kt\"\u003eerror\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"no\"\u003enil\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003efunc\u003c/span\u003e \u003cspan class=\"n\"\u003ecmdDel\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eargs\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003eskel\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eCmdArgs\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"kt\"\u003eerror\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"no\"\u003enil\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003efunc\u003c/span\u003e \u003cspan class=\"n\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"n\"\u003eskel\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ePluginMain\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ecmdAdd\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003ecmdCheck\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003ecmdDel\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eversion\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eAll\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003ebv\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eBuildString\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;simple-bridge\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e每一个go实现的CNI插件都具备如上的代码结构，除了用\u003ccode class=\"language-plaintext highlighter-rouge\"\u003eimport\u003c/code\u003e指令把需要的依赖引入进来以外，还需要实现三个函数，分别对应CNI的三个命令：\u003c/p\u003e\n\u003cul\u003e\n  \u003cli\u003ecmdAdd\u003c/li\u003e\n  \u003cli\u003ecmdCheck\u003c/li\u003e\n  \u003cli\u003ecmdDel\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003e然后在\u003ccode class=\"language-plaintext highlighter-rouge\"\u003emain\u003c/code\u003e函数里，通过CNI工具库提供的\u003ccode class=\"language-plaintext highlighter-rouge\"\u003eskel.PluginMain\u003c/code\u003e函数，把这三个函数注册进来。\u003ccode class=\"language-plaintext highlighter-rouge\"\u003eskel.PluginMain\u003c/code\u003e的倒数第二个参数用来指定插件所支持的CNI规范的版本，这里我们选择的是所有版本；最后一个参数通过调用工具类生成一段简单的帮助文本，如果在命令行直接执行插件的可执行文件，就会看到这段文本。\u003c/p\u003e\n\n\u003cp\u003e另外，为了能在代码里访问到插件所需的环境变量，以及通过标准输入设备传入的配置文件，我们使用了\u003ccode class=\"language-plaintext highlighter-rouge\"\u003eskel\u003c/code\u003e提供的数据类型\u003ccode class=\"language-plaintext highlighter-rouge\"\u003eCmdArgs\u003c/code\u003e：\u003c/p\u003e\n\u003cdiv class=\"language-go highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003etype\u003c/span\u003e \u003cspan class=\"n\"\u003eCmdArgs\u003c/span\u003e \u003cspan class=\"k\"\u003estruct\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eContainerID\u003c/span\u003e \u003cspan class=\"kt\"\u003estring\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eNetns\u003c/span\u003e \u003cspan class=\"kt\"\u003estring\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eIfName\u003c/span\u003e \u003cspan class=\"kt\"\u003estring\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eArgs\u003c/span\u003e \u003cspan class=\"kt\"\u003estring\u003c/span\u003e\n    \u003cspan class=\"n\"\u003ePath\u003c/span\u003e \u003cspan class=\"kt\"\u003estring\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eStdinData\u003c/span\u003e \u003cspan class=\"p\"\u003e[]\u003c/span\u003e\u003cspan class=\"kt\"\u003ebyte\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e可以看到，\u003ccode class=\"language-plaintext highlighter-rouge\"\u003eCmdArgs\u003c/code\u003e里大部分属性都分别对应相应的环境变量，最后一个属性代表通过标准输入设备传入的一个字节数组，对应于我们的网络配置文件。\u003c/p\u003e\n\n\u003cp\u003e我们的插件实现了CNI里的ADD命令，主要完成下面几个步骤：\u003c/p\u003e\n\n\u003cul\u003e\n  \u003cli\u003e读取网络定义的配置文件\u003c/li\u003e\n  \u003cli\u003e配置宿主机上的bridge\u003c/li\u003e\n  \u003cli\u003e创建veth pair，并把宿主机一端连到bridge上\u003c/li\u003e\n  \u003cli\u003e为容器端的网络接口分配指定的IP地址\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003e接下来，我们将针对上面几个步骤，逐一进行讲解。\u003c/p\u003e\n\n\u003ch3 id=\"第一步读取配置文件\"\u003e第一步：读取配置文件\u003c/h3\u003e\n\n\u003cp\u003e为了从配置文件里读取网络配置，我们定义了一个struct类型的数据结构。因为只关心网络配置文件里的\u003ccode class=\"language-plaintext highlighter-rouge\"\u003ebridge\u003c/code\u003e和\u003ccode class=\"language-plaintext highlighter-rouge\"\u003eip\u003c/code\u003e，所以这里只定义了两个属性：\u003c/p\u003e\n\u003cdiv class=\"language-go highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003etype\u003c/span\u003e \u003cspan class=\"n\"\u003eNetConf\u003c/span\u003e \u003cspan class=\"k\"\u003estruct\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"n\"\u003eBrName\u003c/span\u003e    \u003cspan class=\"kt\"\u003estring\u003c/span\u003e \u003cspan class=\"s\"\u003e`json:\u0026#34;bridge\u0026#34;`\u003c/span\u003e\n  \u003cspan class=\"n\"\u003eIPAddress\u003c/span\u003e \u003cspan class=\"kt\"\u003estring\u003c/span\u003e \u003cspan class=\"s\"\u003e`json:\u0026#34;ip\u0026#34;`\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e然后，我们在函数\u003ccode class=\"language-plaintext highlighter-rouge\"\u003eloadNetConf\u003c/code\u003e里实现了读取配置文件的逻辑：\u003c/p\u003e\n\u003cdiv class=\"language-go highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003efunc\u003c/span\u003e \u003cspan class=\"n\"\u003eloadNetConf\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ebytes\u003c/span\u003e \u003cspan class=\"p\"\u003e[]\u003c/span\u003e\u003cspan class=\"kt\"\u003ebyte\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003eNetConf\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"kt\"\u003eerror\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"n\"\u003en\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e\u003cspan class=\"n\"\u003eNetConf\u003c/span\u003e\u003cspan class=\"p\"\u003e{}\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"n\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"n\"\u003ejson\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eUnmarshal\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ebytes\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003en\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e \u003cspan class=\"n\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"no\"\u003enil\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"no\"\u003enil\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eerr\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n  \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003en\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"no\"\u003enil\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e这里，我们先创建了一个NetConf类型的变量\u003ccode class=\"language-plaintext highlighter-rouge\"\u003en\u003c/code\u003e，然后调用\u003ccode class=\"language-plaintext highlighter-rouge\"\u003ejson.Unmarshal\u003c/code\u003e函数，把来自标准输入设备的字节数据读入了这个变量。\u003c/p\u003e\n\n\u003ch3 id=\"第二步配置bridge\"\u003e第二步：配置bridge\u003c/h3\u003e\n\n\u003cp\u003e我们把对bridge的配置封装到了\u003ccode class=\"language-plaintext highlighter-rouge\"\u003esetupBridge\u003c/code\u003e函数里，它的输入参数就是前面调用\u003ccode class=\"language-plaintext highlighter-rouge\"\u003eloadNetConf\u003c/code\u003e的返回结果，也就是我们的网络配置信息。下面是函数的实现逻辑，这里主要利用了\u003ccode class=\"language-plaintext highlighter-rouge\"\u003enetlink\u003c/code\u003e包对bridge进行操作：\u003c/p\u003e\n\u003cdiv class=\"language-go highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003efunc\u003c/span\u003e \u003cspan class=\"n\"\u003esetupBridge\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003en\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003eNetConf\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003enetlink\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eBridge\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"kt\"\u003eerror\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"n\"\u003ebr\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e\u003cspan class=\"n\"\u003enetlink\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eBridge\u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e                          \u003cspan class=\"err\"\u003e①\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eLinkAttrs\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003enetlink\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eLinkAttrs\u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n      \u003cspan class=\"n\"\u003eName\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003en\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eBrName\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n      \u003cspan class=\"n\"\u003eMTU\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e  \u003cspan class=\"m\"\u003e1500\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n      \u003cspan class=\"n\"\u003eTxQLen\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u003c/span\u003e\u003cspan class=\"m\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e},\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n  \u003cspan class=\"n\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"n\"\u003enetlink\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eLinkAdd\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ebr\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e                      \u003cspan class=\"err\"\u003e②\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"n\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"no\"\u003enil\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u0026amp;\u003c/span\u003e \u003cspan class=\"n\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"n\"\u003esyscall\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eEEXIST\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"no\"\u003enil\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eerr\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n  \u003cspan class=\"n\"\u003ebr\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003ebridgeByName\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003en\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eBrName\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e                \u003cspan class=\"err\"\u003e③\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"n\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"no\"\u003enil\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"no\"\u003enil\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eerr\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n  \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"n\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"n\"\u003enetlink\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eLinkSetUp\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ebr\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e \u003cspan class=\"n\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"no\"\u003enil\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e   \u003cspan class=\"err\"\u003e④\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"no\"\u003enil\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eerr\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n  \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003ebr\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"no\"\u003enil\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e行①：创建\u003ccode class=\"language-plaintext highlighter-rouge\"\u003enetlink.Bridge\u003c/code\u003e对象，传入在配置文件里定义的\u003ccode class=\"language-plaintext highlighter-rouge\"\u003ebridge\u003c/code\u003e属性；\u003c/p\u003e\n\n\u003cp\u003e行②：调用\u003ccode class=\"language-plaintext highlighter-rouge\"\u003enetlink.LinkAdd\u003c/code\u003e函数，传入\u003ccode class=\"language-plaintext highlighter-rouge\"\u003enetlink.Bridge\u003c/code\u003e对象，把bridge创建出来，相当于执行\u003ccode class=\"language-plaintext highlighter-rouge\"\u003eip link add\u003c/code\u003e命令。如果创建失败时返回\u003ccode class=\"language-plaintext highlighter-rouge\"\u003esyscall.EEXIST\u003c/code\u003e，表示这个bridge已经存在了，这种情况我们认为是正常的；\u003c/p\u003e\n\n\u003cp\u003e行③：调用\u003ccode class=\"language-plaintext highlighter-rouge\"\u003ebridgeByName\u003c/code\u003e函数，重新读取一次新建的bridge，用于验证其是否被正确创建出来了；\u003c/p\u003e\n\n\u003cp\u003e行④：如果一切正常，则调用\u003ccode class=\"language-plaintext highlighter-rouge\"\u003enetlink.LinkSetUp\u003c/code\u003e函数，把bridge启动起来，相当于执行\u003ccode class=\"language-plaintext highlighter-rouge\"\u003eip link set ... up\u003c/code\u003e命令；\u003c/p\u003e\n\n\u003cp\u003e下面是\u003ccode class=\"language-plaintext highlighter-rouge\"\u003ebridgeByName\u003c/code\u003e函数的实现逻辑：\u003c/p\u003e\n\u003cdiv class=\"language-go highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003efunc\u003c/span\u003e \u003cspan class=\"n\"\u003ebridgeByName\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ename\u003c/span\u003e \u003cspan class=\"kt\"\u003estring\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003enetlink\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eBridge\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"kt\"\u003eerror\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"n\"\u003el\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"n\"\u003enetlink\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eLinkByName\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ename\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e  \u003cspan class=\"err\"\u003e①\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"n\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"no\"\u003enil\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"no\"\u003enil\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eerr\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n  \u003cspan class=\"n\"\u003ebr\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eok\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"n\"\u003el\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003enetlink\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eBridge\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e       \u003cspan class=\"err\"\u003e②\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"o\"\u003e!\u003c/span\u003e\u003cspan class=\"n\"\u003eok\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"no\"\u003enil\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003efmt\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eErrorf\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;%q already exists but is not a bridge\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003ename\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n  \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003ebr\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"no\"\u003enil\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e行①：调用\u003ccode class=\"language-plaintext highlighter-rouge\"\u003enetlink.LinkByName\u003c/code\u003e函数，传入bridge的名称，重新读取一次新建的bridge；\u003c/p\u003e\n\n\u003cp\u003e行②：尝试把读取出来的对象转换成\u003ccode class=\"language-plaintext highlighter-rouge\"\u003enetlink.Bridge\u003c/code\u003e类型，如果失败，就表示读出来的对象不是一个bridge，于是返回错误；\u003c/p\u003e\n\n\u003ch3 id=\"第三步配置veth-pair\"\u003e第三步：配置veth pair\u003c/h3\u003e\n\n\u003cp\u003e创建veth pair的逻辑被封装到了\u003ccode class=\"language-plaintext highlighter-rouge\"\u003esetupVeth\u003c/code\u003e函数里。它包含如下几个参数：\u003c/p\u003e\n\u003cul\u003e\n  \u003cli\u003enetns：容器对应的network namespace，类型为\u003ccode class=\"language-plaintext highlighter-rouge\"\u003eNetNS\u003c/code\u003e，属于CNI提供的工具包\u003ccode class=\"language-plaintext highlighter-rouge\"\u003ens\u003c/code\u003e里的一个数据结构；\u003c/li\u003e\n  \u003cli\u003ebr：位于宿主机上的bridge；\u003c/li\u003e\n  \u003cli\u003eifName：veth pair位于容器一端的网络接口名；\u003c/li\u003e\n  \u003cli\u003eipAddress：容器端网络接口的IP地址；\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003e下面来看一下函数的实现逻辑：\u003c/p\u003e\n\u003cdiv class=\"language-go highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003efunc\u003c/span\u003e \u003cspan class=\"n\"\u003esetupVeth\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003enetns\u003c/span\u003e \u003cspan class=\"n\"\u003ens\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eNetNS\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003ebr\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003enetlink\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eBridge\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eifName\u003c/span\u003e \u003cspan class=\"kt\"\u003estring\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eipAddress\u003c/span\u003e \u003cspan class=\"kt\"\u003estring\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"kt\"\u003eerror\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"n\"\u003ehostIface\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e\u003cspan class=\"n\"\u003ecurrent\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eInterface\u003c/span\u003e\u003cspan class=\"p\"\u003e{}\u003c/span\u003e                           \u003cspan class=\"err\"\u003e①\u003c/span\u003e\n\n  \u003cspan class=\"n\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"n\"\u003enetns\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eDo\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003efunc\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ehostNS\u003c/span\u003e \u003cspan class=\"n\"\u003ens\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eNetNS\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"kt\"\u003eerror\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e               \u003cspan class=\"err\"\u003e②\u003c/span\u003e\n    \u003cspan class=\"n\"\u003ehostVeth\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003econtainerVeth\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \n      \u003cspan class=\"n\"\u003eip\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eSetupVeth\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eifName\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"m\"\u003e1500\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003ehostNS\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e                      \u003cspan class=\"err\"\u003e③\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"n\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"no\"\u003enil\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n      \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003eerr\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n    \u003cspan class=\"n\"\u003ehostIface\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eName\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003ehostVeth\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eName\u003c/span\u003e                            \u003cspan class=\"err\"\u003e④\u003c/span\u003e\n\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"no\"\u003enil\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e})\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"n\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"no\"\u003enil\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003eerr\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n  \u003cspan class=\"n\"\u003ehostVeth\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"n\"\u003enetlink\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eLinkByName\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ehostIface\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eName\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e         \u003cspan class=\"err\"\u003e⑤\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"n\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"no\"\u003enil\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003eerr\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n  \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"n\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"n\"\u003enetlink\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eLinkSetMaster\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ehostVeth\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003ebr\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e \u003cspan class=\"n\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"no\"\u003enil\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"err\"\u003e⑥\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003eerr\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n  \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"no\"\u003enil\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e行①：这里用到了CNI提供的\u003ccode class=\"language-plaintext highlighter-rouge\"\u003etypes/current\u003c/code\u003e包，\u003ccode class=\"language-plaintext highlighter-rouge\"\u003eInterface\u003c/code\u003e是一个struct类型的数据结构，对应一个网络接口。我们用它来保存veth pair位于宿主机一端的网络接口信息，以方便后面的调用；\u003c/p\u003e\n\n\u003cp\u003e行②：这里的\u003ccode class=\"language-plaintext highlighter-rouge\"\u003enetns\u003c/code\u003e就是容器的network namespace，对应类型为\u003ccode class=\"language-plaintext highlighter-rouge\"\u003eNetNS\u003c/code\u003e。 \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eNetNS\u003c/code\u003e有一个特殊的函数\u003ccode class=\"language-plaintext highlighter-rouge\"\u003eDo\u003c/code\u003e，它接受一个函数闭包作为参数，而我们设置veth pair的逻辑就在这个闭包里；\u003c/p\u003e\n\n\u003cp\u003e对veth pair的配置是在容器的network namespace，即\u003ccode class=\"language-plaintext highlighter-rouge\"\u003enetns\u003c/code\u003e下进行的。在go里，每个操作系统线程都可能对应不同的network namespace，但由于go线程调度机制的特点，在我们的代码逻辑开始执行的时候，并不能够保证当前的network namespace就一定是容器所对应的那个，而\u003ccode class=\"language-plaintext highlighter-rouge\"\u003eDo\u003c/code\u003e函数就是用来解决这一问题的：\u003c/p\u003e\n\n\u003cp\u003e它通过调用\u003ccode class=\"language-plaintext highlighter-rouge\"\u003eruntime.LockOSThread()\u003c/code\u003e函数，锁定了执行闭包的当前线程。Do函数在执行闭包之前，会先保存当前线程的network namespace，也就是宿主机对应的namespace，并作为参数传入闭包。然后在闭包执行结束时，把当前network namespace恢复成宿主机对应的namespace。\u003c/p\u003e\n\n\u003cp\u003e行③：这里我们调用了\u003ccode class=\"language-plaintext highlighter-rouge\"\u003eSetupVeth\u003c/code\u003e函数，该函数位于CNI提供的\u003ccode class=\"language-plaintext highlighter-rouge\"\u003eip\u003c/code\u003e包里。利用它，我们在容器里创建了veth pair，把容器端的网络接口名设置为\u003ccode class=\"language-plaintext highlighter-rouge\"\u003eifName\u003c/code\u003e，并把宿主机一端的网络接口“移入”了宿主机的namespace里，即:\u003ccode class=\"language-plaintext highlighter-rouge\"\u003ehostNS\u003c/code\u003e；\u003c/p\u003e\n\n\u003cp\u003e行④：\u003ccode class=\"language-plaintext highlighter-rouge\"\u003eip.SetupVeth\u003c/code\u003e的返回结果里包含了宿主机一端的网络接口信息。这里，我们把接口名称保存到了前面行①处定义的\u003ccode class=\"language-plaintext highlighter-rouge\"\u003ehostIface\u003c/code\u003e里，以方便后面使用；\u003c/p\u003e\n\n\u003cp\u003e行⑤：通过调用\u003ccode class=\"language-plaintext highlighter-rouge\"\u003enetlink.LinkByName\u003c/code\u003e函数，并传入在行④处获取到的宿主机一端的网络接口名，我们拿到了宿主机一端的网络接口对象\u003ccode class=\"language-plaintext highlighter-rouge\"\u003ehostVeth\u003c/code\u003e；\u003c/p\u003e\n\n\u003cp\u003e行⑥：通过调用\u003ccode class=\"language-plaintext highlighter-rouge\"\u003enetlink.LinkSetMaster\u003c/code\u003e函数，并传入\u003ccode class=\"language-plaintext highlighter-rouge\"\u003ehostVeth\u003c/code\u003e，我们把veth pair的宿主机一端连到了bridge上；\u003c/p\u003e\n\n\u003ch3 id=\"第四步分配ip地址\"\u003e第四步：分配IP地址\u003c/h3\u003e\n\n\u003cp\u003e下面我们来为容器端的网络接口分配IP地址。这部分逻辑，被放在了传入\u003ccode class=\"language-plaintext highlighter-rouge\"\u003enetns.Do\u003c/code\u003e的那个闭包里，\u003ccode class=\"language-plaintext highlighter-rouge\"\u003eip.SetupVeth\u003c/code\u003e调用的后面：\u003c/p\u003e\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e  ipv4Addr, ipv4Net, err :\u003cspan class=\"o\"\u003e=\u003c/span\u003e net.ParseCIDR\u003cspan class=\"o\"\u003e(\u003c/span\u003eipAddress\u003cspan class=\"o\"\u003e)\u003c/span\u003e  ①\n  \u003cspan class=\"k\"\u003eif \u003c/span\u003eerr \u003cspan class=\"o\"\u003e!=\u003c/span\u003e nil \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ereturn \u003c/span\u003eerr\n  \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n  ipv4Net.IP \u003cspan class=\"o\"\u003e=\u003c/span\u003e ipv4Addr\n  addr :\u003cspan class=\"o\"\u003e=\u003c/span\u003e \u0026amp;netlink.Addr\u003cspan class=\"o\"\u003e{\u003c/span\u003eIPNet: ipv4Net\u003cspan class=\"o\"\u003e}\u003c/span\u003e               ②\n\n  \u003cspan class=\"nb\"\u003elink\u003c/span\u003e, err :\u003cspan class=\"o\"\u003e=\u003c/span\u003e netlink.LinkByName\u003cspan class=\"o\"\u003e(\u003c/span\u003econtainerVeth.Name\u003cspan class=\"o\"\u003e)\u003c/span\u003e ③\n  \u003cspan class=\"k\"\u003eif \u003c/span\u003eerr \u003cspan class=\"o\"\u003e!=\u003c/span\u003e nil \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ereturn \u003c/span\u003eerr\n  \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\n  \u003cspan class=\"k\"\u003eif \u003c/span\u003eerr \u003cspan class=\"o\"\u003e=\u003c/span\u003e netlink.AddrAdd\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"nb\"\u003elink\u003c/span\u003e, addr\u003cspan class=\"o\"\u003e)\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e err \u003cspan class=\"o\"\u003e!=\u003c/span\u003e nil \u003cspan class=\"o\"\u003e{\u003c/span\u003e  ④\n    \u003cspan class=\"k\"\u003ereturn \u003c/span\u003eerr\n  \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e行①：通过调用\u003ccode class=\"language-plaintext highlighter-rouge\"\u003enet.ParseCIDR\u003c/code\u003e函数，我们对传入\u003ccode class=\"language-plaintext highlighter-rouge\"\u003esetupVeth\u003c/code\u003e的\u003ccode class=\"language-plaintext highlighter-rouge\"\u003eipAddress\u003c/code\u003e进行解析，并生成\u003ccode class=\"language-plaintext highlighter-rouge\"\u003eipv4Addr\u003c/code\u003e和\u003ccode class=\"language-plaintext highlighter-rouge\"\u003eipv4Net\u003c/code\u003e对象，分别对应IP地址和所在网段。这里的\u003ccode class=\"language-plaintext highlighter-rouge\"\u003eipAddress\u003c/code\u003e就是前面在网络配置文件里定义的\u003ccode class=\"language-plaintext highlighter-rouge\"\u003eip\u003c/code\u003e属性；\u003c/p\u003e\n\n\u003cp\u003e行②：根据前面的解析结果，构造一个\u003ccode class=\"language-plaintext highlighter-rouge\"\u003enetlink.Addr\u003c/code\u003e对象，对应容器端网络接口的IP地址；\u003c/p\u003e\n\n\u003cp\u003e行③：调用\u003ccode class=\"language-plaintext highlighter-rouge\"\u003enetlink.LinkByName\u003c/code\u003e函数，传入\u003ccode class=\"language-plaintext highlighter-rouge\"\u003econtainerVeth.Name\u003c/code\u003e，获得容器端的网络接口对象。这里的\u003ccode class=\"language-plaintext highlighter-rouge\"\u003econtainerVeth\u003c/code\u003e是前面调用\u003ccode class=\"language-plaintext highlighter-rouge\"\u003eip.SetupVeth\u003c/code\u003e时返回的；\u003c/p\u003e\n\n\u003cp\u003e行④：调用\u003ccode class=\"language-plaintext highlighter-rouge\"\u003enetlink.AddrAdd\u003c/code\u003e函数，分别传入行③处获得的容器端网络接口和行②处构造的IP地址对象，完成IP地址的真正分配；\u003c/p\u003e\n\n\u003ch3 id=\"把所有代码串起来\"\u003e把所有代码串起来\u003c/h3\u003e\n\n\u003cp\u003e前面我们讲了每一步的实现逻辑，接下来就可以把这些逻辑在\u003ccode class=\"language-plaintext highlighter-rouge\"\u003ecmdAdd\u003c/code\u003e函数里串起来了：\u003c/p\u003e\n\u003cdiv class=\"language-go highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003efunc\u003c/span\u003e \u003cspan class=\"n\"\u003ecmdAdd\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eargs\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003eskel\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eCmdArgs\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"kt\"\u003eerror\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"n\"\u003en\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"n\"\u003eloadNetConf\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eargs\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eStdinData\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e     \u003cspan class=\"err\"\u003e①\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"n\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"no\"\u003enil\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003eerr\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n  \u003cspan class=\"n\"\u003ebr\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"n\"\u003esetupBridge\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003en\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e                 \u003cspan class=\"err\"\u003e②\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"n\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"no\"\u003enil\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003eerr\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n  \u003cspan class=\"n\"\u003enetns\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"n\"\u003ens\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eGetNS\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eargs\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eNetns\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e        \u003cspan class=\"err\"\u003e③\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"n\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"no\"\u003enil\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003eerr\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n  \u003cspan class=\"k\"\u003edefer\u003c/span\u003e \u003cspan class=\"n\"\u003enetns\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eClose\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\n  \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"n\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"n\"\u003esetupVeth\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003enetns\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003ebr\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e            \u003cspan class=\"err\"\u003e④\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eargs\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eIfName\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003en\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eIPAddress\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e \u003cspan class=\"n\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"no\"\u003enil\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003eerr\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n  \u003cspan class=\"n\"\u003eresult\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"n\"\u003ecurrent\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eResult\u003c/span\u003e\u003cspan class=\"p\"\u003e{}\u003c/span\u003e\n  \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003eresult\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ePrint\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e可以看到，这里的行①，②，④分别对应的就是我们前面提到的四个步骤。而行③是为调用\u003ccode class=\"language-plaintext highlighter-rouge\"\u003esetupVeth\u003c/code\u003e所做的准备，它利用\u003ccode class=\"language-plaintext highlighter-rouge\"\u003ens.GetNS\u003c/code\u003e函数获取到当前容器的network namespace，并作为参数传入了\u003ccode class=\"language-plaintext highlighter-rouge\"\u003esetupVeth\u003c/code\u003e里。\u003c/p\u003e\n\n\u003cp\u003e最后，前面已经讨论过，为了确保线程不会在我们对network namespace进行操作期间被切换，从而导致namespace被切换，我们在\u003ccode class=\"language-plaintext highlighter-rouge\"\u003einit\u003c/code\u003e函数里加入了对\u003ccode class=\"language-plaintext highlighter-rouge\"\u003eruntime.LockOSThread()\u003c/code\u003e的调用，\u003ccode class=\"language-plaintext highlighter-rouge\"\u003einit\u003c/code\u003e函数会在\u003ccode class=\"language-plaintext highlighter-rouge\"\u003emain\u003c/code\u003e函数执行之前被自动调用：\u003c/p\u003e\n\u003cdiv class=\"language-go highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003efunc\u003c/span\u003e \u003cspan class=\"n\"\u003einit\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"n\"\u003eruntime\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eLockOSThread\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003ch2 id=\"代码运行\"\u003e代码运行\u003c/h2\u003e\n\n\u003cp\u003e在运行插件以前，我们需要先把代码编译成可执行文件。为了成功编译，可以在项目所在目录下调用\u003ccode class=\"language-plaintext highlighter-rouge\"\u003ego get\u003c/code\u003e命令，把相关的依赖下载下来：\u003c/p\u003e\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003e$ \u003c/span\u003ego get \u003cspan class=\"nt\"\u003e-d\u003c/span\u003e \u003cspan class=\"nt\"\u003e-v\u003c/span\u003e ./...\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e然后执行\u003ccode class=\"language-plaintext highlighter-rouge\"\u003ego build\u003c/code\u003e把插件代码编译成二进制文件：\u003c/p\u003e\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003e$ \u003c/span\u003ego build simple-bridge.go\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e在当前目录下找到编译生成的可执行文件\u003ccode class=\"language-plaintext highlighter-rouge\"\u003esimple-bridge\u003c/code\u003e，然后把它拷贝到\u003ccode class=\"language-plaintext highlighter-rouge\"\u003e/etc/rkt/net.d\u003c/code\u003e目录下。再执行下面命令启动一个新的容器，并指定\u003ccode class=\"language-plaintext highlighter-rouge\"\u003e--net\u003c/code\u003e参数的值为\u003ccode class=\"language-plaintext highlighter-rouge\"\u003elab-cni-mybr-net\u003c/code\u003e：\u003c/p\u003e\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003e$ \u003c/span\u003erkt run \u003cspan class=\"nt\"\u003e--insecure-options\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003eimage \u003cspan class=\"nt\"\u003e--interactive\u003c/span\u003e \u003cspan class=\"nt\"\u003e--net\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003elab-cni-mybr-net docker://busybox\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e如果一切正常，我们会进入到busybox容器内部，执行\u003ccode class=\"language-plaintext highlighter-rouge\"\u003eip addr show\u003c/code\u003e命令：\u003c/p\u003e\n\u003cdiv class=\"language-plaintext highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e/ # ip addr show\n1: lo: \u0026lt;LOOPBACK,UP,LOWER_UP\u0026gt; mtu 65536 qdisc noqueue \n    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00\n    inet 127.0.0.1/8 scope host lo\n       valid_lft forever preferred_lft forever\n    inet6 ::1/128 scope host \n       valid_lft forever preferred_lft forever\n3: eth0: \u0026lt;BROADCAST,MULTICAST,UP,LOWER_UP\u0026gt; mtu 1500 qdisc noqueue \n    link/ether 86:c8:3c:a7:23:23 brd ff:ff:ff:ff:ff:ff\n    inet 10.15.30.100/24 brd 10.15.30.255 scope global eth0\n       valid_lft forever preferred_lft forever\n    inet6 fe80::84c8:3cff:fea7:2323/64 scope link \n       valid_lft forever preferred_lft forever\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e可以看到，作为veth pair在容器一端的网络接口\u003ccode class=\"language-plaintext highlighter-rouge\"\u003eeth0\u003c/code\u003e，它的IP地址已经被成功设置成我们指定的值了(\u003ccode class=\"language-plaintext highlighter-rouge\"\u003e10.15.30.100\u003c/code\u003e)。\u003c/p\u003e\n\n\u003cp\u003e输入\u003ccode class=\"language-plaintext highlighter-rouge\"\u003eCtrl + ]]]\u003c/code\u003e退回到宿主机后，再执行\u003ccode class=\"language-plaintext highlighter-rouge\"\u003eip addr show\u003c/code\u003e：\u003c/p\u003e\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003e$ \u003c/span\u003eip addr show\n... ...\n5: lab-cni-mybr: \u0026lt;BROADCAST,MULTICAST,UP,LOWER_UP\u0026gt; mtu 1500 qdisc noqueue state UP group default \n    \u003cspan class=\"nb\"\u003elink\u003c/span\u003e/ether 0a:67:c4:8f:93:12 brd ff:ff:ff:ff:ff:ff\n    inet6 fe80::6437:83ff:fe38:507b/64 scope \u003cspan class=\"nb\"\u003elink \n       \u003c/span\u003evalid_lft forever preferred_lft forever\n8: veth95dc17da: \u0026lt;BROADCAST,MULTICAST,UP,LOWER_UP\u0026gt; mtu 1500 qdisc noqueue master lab-cni-mybr state UP group default \n    \u003cspan class=\"nb\"\u003elink\u003c/span\u003e/ether 0a:67:c4:8f:93:12 brd ff:ff:ff:ff:ff:ff\n    inet6 fe80::867:c4ff:fe8f:9312/64 scope \u003cspan class=\"nb\"\u003elink \n       \u003c/span\u003evalid_lft forever preferred_lft forever\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e可以看到，宿主机上多了一个名为lab-cni-mybr的bridge，还有作为veth pair在宿主机一端的网络接口veth95dc17da。\u003c/p\u003e\n\n        \n      \u003c/section\u003e\n\n      \u003cfooter class=\"page__meta\"\u003e\n        \n        \n  \n\n\n  \n\n  \u003cp class=\"page__taxonomy\"\u003e\n    \u003cstrong\u003e\u003ci class=\"fas fa-fw fa-tags\" aria-hidden=\"true\"\u003e\u003c/i\u003e 标签: \u003c/strong\u003e\n    \u003cspan itemprop=\"keywords\"\u003e\n    \n      \u003ca href=\"/tags/#dummies\" class=\"page__taxonomy-item p-category\" rel=\"tag\"\u003edummies\u003c/a\u003e\u003cspan class=\"sep\"\u003e, \u003c/span\u003e\n    \n      \u003ca href=\"/tags/#dummies-kubernetes\" class=\"page__taxonomy-item p-category\" rel=\"tag\"\u003edummies_kubernetes\u003c/a\u003e\u003cspan class=\"sep\"\u003e, \u003c/span\u003e\n    \n      \u003ca href=\"/tags/#kubernetes\" class=\"page__taxonomy-item p-category\" rel=\"tag\"\u003ekubernetes\u003c/a\u003e\u003cspan class=\"sep\"\u003e, \u003c/span\u003e\n    \n      \u003ca href=\"/tags/#lab\" class=\"page__taxonomy-item p-category\" rel=\"tag\"\u003elab\u003c/a\u003e\n    \n    \u003c/span\u003e\n  \u003c/p\u003e\n\n\n\n\n  \n\n\n  \n\n  \u003cp class=\"page__taxonomy\"\u003e\n    \u003cstrong\u003e\u003ci class=\"fas fa-fw fa-folder-open\" aria-hidden=\"true\"\u003e\u003c/i\u003e 分类: \u003c/strong\u003e\n    \u003cspan itemprop=\"keywords\"\u003e\n    \n      \u003ca href=\"/categories/#tech\" class=\"page__taxonomy-item p-category\" rel=\"tag\"\u003etech\u003c/a\u003e\n    \n    \u003c/span\u003e\n  \u003c/p\u003e\n\n\n        \n\n  \u003cp class=\"page__date\"\u003e\u003cstrong\u003e\u003ci class=\"fas fa-fw fa-calendar-alt\" aria-hidden=\"true\"\u003e\u003c/i\u003e 更新时间:\u003c/strong\u003e \u003ctime class=\"dt-published\" datetime=\"2021-04-05T00:00:00+08:00\"\u003eApril 5, 2021\u003c/time\u003e\u003c/p\u003e\n\n      \u003c/footer\u003e\n\n      \u003csection class=\"page__share\"\u003e\n  \n    \u003ch4 class=\"page__share-title\"\u003e分享\u003c/h4\u003e\n  \n\n  \u003ca href=\"https://twitter.com/intent/tweet?text=Kubernetes%E7%BD%91%E7%BB%9C%E7%AF%87%E2%80%94%E2%80%94%E8%87%AA%E5%B7%B1%E5%8A%A8%E6%89%8B%E5%86%99CNI%E6%8F%92%E4%BB%B6%28%E4%B8%8B%29%20https%3A%2F%2Fmorningspace.github.io%2Ftech%2Fk8s-net-cni-coding-go%2F\" class=\"btn btn--twitter\" onclick=\"window.open(this.href, \u0026#39;window\u0026#39;, \u0026#39;left=20,top=20,width=500,height=500,toolbar=1,resizable=0\u0026#39;); return false;\" title=\"分享 Twitter\"\u003e\u003ci class=\"fab fa-fw fa-twitter\" aria-hidden=\"true\"\u003e\u003c/i\u003e\u003cspan\u003e Twitter\u003c/span\u003e\u003c/a\u003e\n\n  \u003ca href=\"https://www.facebook.com/sharer/sharer.php?u=https%3A%2F%2Fmorningspace.github.io%2Ftech%2Fk8s-net-cni-coding-go%2F\" class=\"btn btn--facebook\" onclick=\"window.open(this.href, \u0026#39;window\u0026#39;, \u0026#39;left=20,top=20,width=500,height=500,toolbar=1,resizable=0\u0026#39;); return false;\" title=\"分享 Facebook\"\u003e\u003ci class=\"fab fa-fw fa-facebook\" aria-hidden=\"true\"\u003e\u003c/i\u003e\u003cspan\u003e Facebook\u003c/span\u003e\u003c/a\u003e\n\n  \u003ca href=\"https://www.linkedin.com/shareArticle?mini=true\u0026amp;url=https%3A%2F%2Fmorningspace.github.io%2Ftech%2Fk8s-net-cni-coding-go%2F\" class=\"btn btn--linkedin\" onclick=\"window.open(this.href, \u0026#39;window\u0026#39;, \u0026#39;left=20,top=20,width=500,height=500,toolbar=1,resizable=0\u0026#39;); return false;\" title=\"分享 LinkedIn\"\u003e\u003ci class=\"fab fa-fw fa-linkedin\" aria-hidden=\"true\"\u003e\u003c/i\u003e\u003cspan\u003e LinkedIn\u003c/span\u003e\u003c/a\u003e\n\u003c/section\u003e\n\n\n      \n  \u003cnav class=\"pagination\"\u003e\n    \n      \u003ca href=\"/tech/k8s-net-cni-coding-shell/\" class=\"pagination--pager\" title=\"Kubernetes网络篇——自己动手写CNI插件(上)\n\"\u003e向前\u003c/a\u003e\n    \n    \n      \u003ca href=\"/tech/k8s-net-pod-1/\" class=\"pagination--pager\" title=\"Kubernetes网络篇——Pod网络(上)\n\"\u003e向后\u003c/a\u003e\n    \n  \u003c/nav\u003e\n\n    \u003c/div\u003e",
  "Date": "2021-04-05T00:00:00+08:00",
  "Author": "MornigSpace"
}