{
  "Source": "morningspace",
  "Title": "All-in-One K8S Playground中文使用指南",
  "Link": "https://morningspace.github.io/tech/all-in-one-k8s-playground/",
  "Content": "\u003cdiv class=\"page__inner-wrap\"\u003e\n      \n\n      \u003csection class=\"page__content e-content\" itemprop=\"text\"\u003e\n        \n          \u003caside class=\"sidebar__right sticky\"\u003e\n            \u003cnav class=\"toc\"\u003e\n              \u003cheader\u003e\u003ch4 class=\"nav__title\"\u003e\u003ci class=\"fas fa-file-alt\"\u003e\u003c/i\u003e 在本页上\u003c/h4\u003e\u003c/header\u003e\n              \u003cul class=\"toc__menu\"\u003e\u003cli\u003e\u003ca href=\"#我都等不及啦\"\u003e我都等不及啦！\u003c/a\u003e\u003cul\u003e\u003cli\u003e\u003ca href=\"#在vagrant-box里启动\"\u003e在Vagrant Box里启动\u003c/a\u003e\u003c/li\u003e\u003cli\u003e\u003ca href=\"#在宿主机上启动\"\u003e在宿主机上启动\u003c/a\u003e\u003c/li\u003e\u003cli\u003e\u003ca href=\"#vagrant-box还是宿主机\"\u003eVagrant Box还是宿主机？\u003c/a\u003e\u003c/li\u003e\u003cli\u003e\u003ca href=\"#我该选择哪种操作系统\"\u003e我该选择哪种操作系统？\u003c/a\u003e\u003c/li\u003e\u003c/ul\u003e\u003c/li\u003e\u003cli\u003e\u003ca href=\"#我该怎么访问呢\"\u003e我该怎么访问呢？\u003c/a\u003e\u003cul\u003e\u003cli\u003e\u003ca href=\"#动图演示\"\u003e动图演示\u003c/a\u003e\u003c/li\u003e\u003c/ul\u003e\u003c/li\u003e\u003cli\u003e\u003ca href=\"#我还想装点别的\"\u003e我还想装点别的……\u003c/a\u003e\u003cul\u003e\u003cli\u003e\u003ca href=\"#安装istio\"\u003e安装Istio\u003c/a\u003e\u003c/li\u003e\u003cli\u003e\u003ca href=\"#动图演示-1\"\u003e动图演示\u003c/a\u003e\u003c/li\u003e\u003cli\u003e\u003ca href=\"#利用快照恢复集群\"\u003e利用快照恢复集群\u003c/a\u003e\u003c/li\u003e\u003c/ul\u003e\u003c/li\u003e\u003cli\u003e\u003ca href=\"#容器的镜像有更新了怎么办\"\u003e容器的镜像有更新了怎么办？\u003c/a\u003e\u003c/li\u003e\u003cli\u003e\u003ca href=\"#我能和别人共享registry吗\"\u003e我能和别人共享Registry吗？\u003c/a\u003e\u003c/li\u003e\u003cli\u003e\u003ca href=\"#怎么在离线模式下使用虚机\"\u003e怎么在离线模式下使用虚机？\u003c/a\u003e\u003cul\u003e\u003cli\u003e\u003ca href=\"#动图演示-2\"\u003e动图演示\u003c/a\u003e\u003c/li\u003e\u003c/ul\u003e\u003c/li\u003e\u003cli\u003e\u003ca href=\"#还有哪些地方我可以定制的\"\u003e还有哪些地方我可以定制的？\u003c/a\u003e\u003cul\u003e\u003cli\u003e\u003ca href=\"#vagrantfile\"\u003eVagrantfile\u003c/a\u003e\u003c/li\u003e\u003cli\u003e\u003ca href=\"#针对中国用户的优化\"\u003e针对中国用户的优化\u003c/a\u003e\u003c/li\u003e\u003cli\u003e\u003ca href=\"#扩展launch-utility\"\u003e扩展Launch Utility\u003c/a\u003e\u003c/li\u003e\u003c/ul\u003e\u003c/li\u003e\u003cli\u003e\u003ca href=\"#还有哪些参考资料我能访问\"\u003e还有哪些参考资料我能访问？\u003c/a\u003e\u003c/li\u003e\u003c/ul\u003e\n\n            \u003c/nav\u003e\n          \u003c/aside\u003e\n        \n        \u003c!-- Place this tag in your head or just before your close body tag. --\u003e\n\u003cscript async=\"\" defer=\"\" src=\"https://buttons.github.io/buttons.js\"\u003e\u003c/script\u003e\n\n\u003cblockquote\u003e\n  \u003cp\u003e本文是开源项目\u003ca href=\"https://github.com/morningspace/lab-k8s-playground\"\u003elab-k8s-playground\u003c/a\u003e及其All-in-One Playground的中文使用指南！如果您喜欢这个项目，欢迎点击下面的按钮，关注，加星，以及贡献代码^_^\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003e\u003ca class=\"github-button\" href=\"https://github.com/morningspace/lab-k8s-playground/subscription\" data-icon=\"octicon-eye\" data-size=\"large\" aria-label=\"Watch morningspace/lab-k8s-playground on GitHub\"\u003eWatch\u003c/a\u003e \u003ca class=\"github-button\" href=\"https://github.com/morningspace/lab-k8s-playground\" data-icon=\"octicon-star\" data-size=\"large\" aria-label=\"Star morningspace/lab-k8s-playground on GitHub\"\u003eStar\u003c/a\u003e \u003ca class=\"github-button\" href=\"https://github.com/morningspace/lab-k8s-playground/fork\" data-icon=\"octicon-repo-forked\" data-size=\"large\" aria-label=\"Fork morningspace/lab-k8s-playground on GitHub\"\u003eFork\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003e在\u003ca href=\"https://morningspace.github.io/tech/k8s-run/\"\u003eLaunch multi-node Kubernetes cluster locally in one minute and more\u003c/a\u003e一文里，我们提到过开源项目\u003ca href=\"https://github.com/morningspace/lab-k8s-playground\"\u003elab-k8s-playground\u003c/a\u003e。它提供了一种用于在单机环境下部署多节点Kubernetes集群的方法，并在此基础上进行了多种优化，以加速集群的启动过程。有了这样一套环境，我们就可以高效地在本地进行各种和Kubernetes有关的学习，开发，部署，测试，以及演示了；或者，也可以把它放到CI/CD的Pipeline上，快速启动起一个用于测试的环境来。\u003c/p\u003e\n\n\u003cp\u003e现在，该项目又有了全新升级，那就是“All-in-One Playground”🎉🎉🎉利用它，我们可以一键搞定Kubernetes部署：通过把部署集群之前要做的很多复杂的准备工作固化在一套脚本里，我们就不用再关心集群部署的优化细节了。只要一行命令，就能完成集群部署。不仅如此，这个Playground环境里还预装了很多常用的Kubernetes命令行工具，并支持Istio等应用的追加部署。所有这些功能，都可以一键式搞定，并且可以反复卸载和安装！\u003c/p\u003e\n\n\u003cp\u003e是不是有点迫不及待地想体验一下这个Playground了呢？下面我们就一起来了解一下这个All-in-One Kubernetes Playground吧！\u003c/p\u003e\n\n\u003ch2 id=\"我都等不及啦\"\u003e我都等不及啦！\u003c/h2\u003e\n\n\u003cp\u003e首先，我们把lab-k8s-playground项目克隆到本地，并进入该项目的根目录：\u003c/p\u003e\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003e$ \u003c/span\u003egit https://github.com/morningspace/lab-k8s-playground.git\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003ch3 id=\"在vagrant-box里启动\"\u003e在Vagrant Box里启动\u003c/h3\u003e\n\n\u003cp\u003e启动Playground非常简单，如果你的机器安装了Vagrant Box，那么只要一条命令就行了：\u003c/p\u003e\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003e$ \u003c/span\u003evagrant up\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cblockquote\u003e\n  \u003cp\u003e整个启动过程大约需要一杯咖啡 ☕️ 的时间。具体取决于你的系统配置，以及分配给虚机的资源大小，还有网络环境等。以我的笔记本为例，8核CPU，16G内存，网络畅通的情况下，大概15分钟内完成。\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003e在这个过程中，脚本会为我们完成所有的脏活累活，包括：\u003c/p\u003e\n\u003cul\u003e\n  \u003cli\u003e自动安装docker，docker compose，kubectrl，helm，以及Kubernetes的一些日常使用的命令行工具；\u003c/li\u003e\n  \u003cli\u003e自动搭建Private Registry，用于保存集群部署用到的所有Docker镜像。利用Private Registry可以免去通过网络访问远程Public Registry的需要，从而极大地提高了部署的速度。并且，因为全部镜像都在本地，所以还可以实现离线安装，非常适合单机的demo环境。\u003c/li\u003e\n  \u003cli\u003e最后，它还会为我们部署好一个默认由三个节点构成的Kubernetes集群，即：一个master节点加两个worker节点。这个节点数目是可以定制的，不仅如此，就连Kubernetes所用的版本也是可以指定的。关于怎么定制Playground，后面还会讲解。\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch3 id=\"在宿主机上启动\"\u003e在宿主机上启动\u003c/h3\u003e\n\n\u003cp\u003e除了Vagrant Box，Playground也支持直接在宿主机上启动。只要在项目的根目录下执行如下命令，对环境进行初始化：\u003c/p\u003e\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003e$ \u003c/span\u003e./install/launch.sh init\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e因为这条命令会修改当前用户Home目录下的\u003ccode class=\"language-plaintext highlighter-rouge\"\u003e.bashrc\u003c/code\u003e，所以建议执行完毕后重新登录一次终端，以便在新的用户Session里重新加载\u003ccode class=\"language-plaintext highlighter-rouge\"\u003e.bashrc\u003c/code\u003e。或者，你也可以执行下面的命令，直接在当前Session里主动加载\u003ccode class=\"language-plaintext highlighter-rouge\"\u003e.bashrc\u003c/code\u003e：\u003c/p\u003e\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003e$ \u003c/span\u003e\u003cspan class=\"nb\"\u003e.\u003c/span\u003e ~/.bashrc\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e另外，\u003ccode class=\"language-plaintext highlighter-rouge\"\u003e.bashrc\u003c/code\u003e里还有一些和Playground相关的环境变量，你可以根据自己的实际需求对它们进行修改。如果不修改也没关系，脚本会为它们指定默认值：\u003c/p\u003e\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"c\"\u003e# The IP of your host, default is 127.0.0.1\u003c/span\u003e\n\u003cspan class=\"nb\"\u003eexport \u003c/span\u003e\u003cspan class=\"nv\"\u003eHOST_IP\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\n\u003cspan class=\"c\"\u003e# The Kubernetes version, default is v1.14\u003c/span\u003e\n\u003cspan class=\"nb\"\u003eexport \u003c/span\u003e\u003cspan class=\"nv\"\u003eK8S_VERSION\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\n\u003cspan class=\"c\"\u003e# The number of worker nodes, default is 2\u003c/span\u003e\n\u003cspan class=\"nb\"\u003eexport \u003c/span\u003e\u003cspan class=\"nv\"\u003eNUM_NODES\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e最后，我们执行下面的命令，把Kubernetes集群启动起来：\u003c/p\u003e\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003e$ \u003c/span\u003elaunch default\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cblockquote\u003e\n  \u003cp\u003e也许你已经注意到，这里我们用的是\u003ccode class=\"language-plaintext highlighter-rouge\"\u003elaunch\u003c/code\u003e，而不是带着一串路径的\u003ccode class=\"language-plaintext highlighter-rouge\"\u003elaunch.sh\u003c/code\u003e。当执行完\u003ccode class=\"language-plaintext highlighter-rouge\"\u003einit\u003c/code\u003e命令对Playground进行初始化，并确保\u003ccode class=\"language-plaintext highlighter-rouge\"\u003e.bashrc\u003c/code\u003e被重新加载以后，我们就可以直接使用\u003ccode class=\"language-plaintext highlighter-rouge\"\u003elaunch\u003c/code\u003e命令了。你可以在任意目录下执行\u003ccode class=\"language-plaintext highlighter-rouge\"\u003elaunch\u003c/code\u003e，而不必非得在项目的根目录下。\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003ch3 id=\"vagrant-box还是宿主机\"\u003eVagrant Box还是宿主机？\u003c/h3\u003e\n\n\u003cp\u003e如果是跑在笔记本或者本地机器上，并且你希望机器始终保持干净，那么使用Vagrant Box应该是一个不错的选择。否则地话，不妨直接在宿主机上安装，因为这样可以省去在box里安装操作系统的时间，所以启动速度会更快。\u003c/p\u003e\n\n\u003cp\u003e如果是跑在虚机里，那也可以不用Vagrant Box，因为没有必要让一个虚机（即box）跑在另一个虚机里。\u003c/p\u003e\n\n\u003ch3 id=\"我该选择哪种操作系统\"\u003e我该选择哪种操作系统？\u003c/h3\u003e\n\n\u003cp\u003ePlayground支持多种操作系统，包括：\u003c/p\u003e\n\u003cul\u003e\n  \u003cli\u003eUbuntu\u003c/li\u003e\n  \u003cli\u003eCentOS\u003c/li\u003e\n  \u003cli\u003eRHEL\u003c/li\u003e\n  \u003cli\u003eMacOS\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003e如果你选择Vagrant Box启动Playground，尽管Vagrantfile里用的是Ubuntu，但你也可以改成其他的操作系统。\u003c/p\u003e\n\n\u003ch2 id=\"我该怎么访问呢\"\u003e我该怎么访问呢？\u003c/h2\u003e\n\n\u003cp\u003e环境准备好了，该怎么访问呢？如果是在Vagrant Box里启动的集群，我们可以利用\u003ccode class=\"language-plaintext highlighter-rouge\"\u003evagrant ssh\u003c/code\u003e命令进入虚机环境。如果是在宿主机上启动的集群，那什么也不用做，就可以直接访问集群了。比如，用\u003ccode class=\"language-plaintext highlighter-rouge\"\u003ekubectl\u003c/code\u003e对集群进行管理，或者用一下预装的那些Kubernetes常用命令行工具。\u003c/p\u003e\n\n\u003cp\u003e不仅如此，Playground还提供了一个Web终端，可以在浏览器里模拟普通终端，执行命令行命令。只要在浏览器地址栏输入\u003ca href=\"https://192.168.56.100:4200\"\u003ehttps://192.168.56.100:4200\u003c/a\u003e就可以访问到Web终端。根据提示输入用户名和密码，如果你用的是Vagrant Box，那么用户名密码分别是\u003ccode class=\"language-plaintext highlighter-rouge\"\u003evagrant\u003c/code\u003e和\u003ccode class=\"language-plaintext highlighter-rouge\"\u003evagrant\u003c/code\u003e。这里的IP地址对应的就是运行Playground的那台机器的地址，如果你用的是Vagrant Box，则对应虚机的IP地址，默认值为\u003ccode class=\"language-plaintext highlighter-rouge\"\u003e192.168.56.100\u003c/code\u003e。当然，它也是可以定制的。\u003c/p\u003e\n\n\u003ch3 id=\"动图演示\"\u003e动图演示\u003c/h3\u003e\n\n\u003cp\u003e在下面这个GIF动图里，大家可以看到我是如何分别利用普通终端和Web终端展示各种Kubernetes命令行工具的使用的，是不是很酷啊😊（点击图片可放大观看哦）\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://github.com/morningspace/lab-k8s-playground/raw/master/docs/demo-tools.gif\"\u003e\u003cimg src=\"https://github.com/morningspace/lab-k8s-playground/raw/master/docs/demo-tools.gif\" alt=\"\"/\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003e另外，对于基于Vagrant Box建立起来的Playground环境，如果想暂停手头和Playground相关的工作，可以执行\u003ccode class=\"language-plaintext highlighter-rouge\"\u003evagrant suspend\u003c/code\u003e命令，把当前的虚机环境停掉。\u003c/p\u003e\n\n\u003cp\u003e要想再次恢复虚机环境，则执行\u003ccode class=\"language-plaintext highlighter-rouge\"\u003evagrant resume\u003c/code\u003e命令。和第一次启动虚机环境不同，再次启动会变得非常快。这是因为它只是简单地把虚机环境恢复，而不需要重新初始化和安装所需要的软件了。\u003c/p\u003e\n\n\u003cp\u003e最后，如果不想保留当前的虚机环境，比如想重新启动一个配置和原来不一样的新环境，可以执行\u003ccode class=\"language-plaintext highlighter-rouge\"\u003evagrant destroy\u003c/code\u003e命令，这会把当前的虚机彻底清除掉。\u003c/p\u003e\n\n\u003ch2 id=\"我还想装点别的\"\u003e我还想装点别的……\u003c/h2\u003e\n\n\u003cp\u003e默认启动起来的Playground，里面只包含了一个Kubernetes集群，和一系列命令行工具。如果我们想在这个基础上继续部署安装更多其他的应用该怎么办呢？这就需要用到\u003ccode class=\"language-plaintext highlighter-rouge\"\u003eLaunch Utility\u003c/code\u003e了。\u003c/p\u003e\n\n\u003cp\u003e\u003ccode class=\"language-plaintext highlighter-rouge\"\u003eLaunch Utility\u003c/code\u003e是\u003ca href=\"https://morningspace.github.io/lab/\"\u003e晴耕实验室\u003c/a\u003e专门为这个Playground开发的一套命令行工具。它的目的是为了简化基于Kubernetes的各种应用的部署安装。所有应用，都只需要清一色地执行一条\u003ccode class=\"language-plaintext highlighter-rouge\"\u003elaunch \u0026lt;target\u0026gt;\u003c/code\u003e命令，就可以自动完成部署安装。其中的\u003ccode class=\"language-plaintext highlighter-rouge\"\u003e\u0026lt;target\u0026gt;\u003c/code\u003e，是对所有部署或安装任务的一种抽象和封装。\u003c/p\u003e\n\n\u003cp\u003e实际上，我们在前面已经用到过\u003ccode class=\"language-plaintext highlighter-rouge\"\u003eLaunch Utility\u003c/code\u003e了，比如在对Playground环境进行初始化的时候。包括Vagrant Box在启动的过程中有很多环节，比如像：各种命令行工具的安装，Private Registry的搭建，Kubernetes集群的启动，背后都是通过执行\u003ccode class=\"language-plaintext highlighter-rouge\"\u003eLaunch Utility\u003c/code\u003e完成的，它们都有各自对应的\u003ccode class=\"language-plaintext highlighter-rouge\"\u003e\u0026lt;target\u0026gt;\u003c/code\u003e可以“launch”。\u003c/p\u003e\n\n\u003ch3 id=\"安装istio\"\u003e安装Istio\u003c/h3\u003e\n\n\u003cp\u003e下面，我们以安装\u003ca href=\"https://istio.io\"\u003eIstio\u003c/a\u003e，及Istio的演示程序\u003ca href=\"https://istio.io/docs/examples/bookinfo\"\u003eBookinfo\u003c/a\u003e为例，熟悉一下\u003ccode class=\"language-plaintext highlighter-rouge\"\u003eLaunch Utility\u003c/code\u003e的使用。\u003c/p\u003e\n\n\u003cp\u003e当Playground启动起来以后，我们通过普通终端或Web终端进入命令行。首先，确保几个Private Registry都已经启动起来了：\u003c/p\u003e\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003e$ \u003c/span\u003edocker ps\nCONTAINER ID  NAMES                 IMAGE       COMMAND                 CREATED       STATUS        PORTS\n6e48d7ef4eb5  quay.io               registry:2  \u003cspan class=\"s2\"\u003e\u0026#34;/entrypoint.sh /etc…\u0026#34;\u003c/span\u003e  4 minutes ago Up 4 minutes  5000/tcp\n58432b935674  gcr.io                registry:2  \u003cspan class=\"s2\"\u003e\u0026#34;/entrypoint.sh /etc…\u0026#34;\u003c/span\u003e  4 minutes ago Up 4 minutes  5000/tcp\n8e26e4f744e3  registry-1.docker.io  registry:2  \u003cspan class=\"s2\"\u003e\u0026#34;/entrypoint.sh /etc…\u0026#34;\u003c/span\u003e  4 minutes ago Up 4 minutes  5000/tcp\n8d3ede4e6c7b  k8s.gcr.io            registry:2  \u003cspan class=\"s2\"\u003e\u0026#34;/entrypoint.sh /etc…\u0026#34;\u003c/span\u003e  4 minutes ago Up 4 minutes  5000/tcp\n0ca0b10a2d87  mr.io                 registry:2  \u003cspan class=\"s2\"\u003e\u0026#34;/entrypoint.sh /etc…\u0026#34;\u003c/span\u003e  4 minutes ago Up 4 minutes  5000/tcp, 0.0.0.0:5000-\u0026gt;80/tcp\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e从输出结果里我们可以看到，前面几个代表的都是Public Registry，分别对应了\u003ccode class=\"language-plaintext highlighter-rouge\"\u003egcr.io\u003c/code\u003e，\u003ccode class=\"language-plaintext highlighter-rouge\"\u003ek8s.gcr.io\u003c/code\u003e，\u003ccode class=\"language-plaintext highlighter-rouge\"\u003eregistry-1.docker.io\u003c/code\u003e和\u003ccode class=\"language-plaintext highlighter-rouge\"\u003equay.io\u003c/code\u003e。最后的\u003ccode class=\"language-plaintext highlighter-rouge\"\u003emr.io\u003c/code\u003e不代表任何Public Registry，我们可以用它来存放一些私有的Docker镜像。如果Private Registry没有启动，我们可以利用\u003ccode class=\"language-plaintext highlighter-rouge\"\u003elaunch\u003c/code\u003e命令把它们启动起来：\u003c/p\u003e\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003e$ \u003c/span\u003elaunch registry\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e然后，确保Kubernetes集群是正常启动着的：\u003c/p\u003e\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003e$ \u003c/span\u003ekgno\nNAME          STATUS   ROLES    AGE     VERSION\nkube-master   Ready    master   2d19h   v1.14.4\nkube-node-1   Ready    \u0026lt;none\u0026gt;   2d19h   v1.14.4\nkube-node-2   Ready    \u0026lt;none\u0026gt;   2d19h   v1.14.4\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e如果集群没有启动，同样也可以利用\u003ccode class=\"language-plaintext highlighter-rouge\"\u003elaunch\u003c/code\u003e命令把它启动起来：\u003c/p\u003e\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003e$ \u003c/span\u003elaunch kubernetes\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e如果两者都没启动，还可以在\u003ccode class=\"language-plaintext highlighter-rouge\"\u003elaunch\u003c/code\u003e后面分别跟上\u003ccode class=\"language-plaintext highlighter-rouge\"\u003eregistry\u003c/code\u003e和\u003ccode class=\"language-plaintext highlighter-rouge\"\u003ekubernetes\u003c/code\u003e，在一条命令里分别把Private Registry和Kubernetes集群依次启动起来：\u003c/p\u003e\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003e$ \u003c/span\u003elaunch registry kubernetes\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e最后，Istio的安装，也同样用的\u003ccode class=\"language-plaintext highlighter-rouge\"\u003elaunch\u003c/code\u003e命令。我们只需要执行如下命令，就可以完成Istio的自动安装：\u003c/p\u003e\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003e$ \u003c/span\u003elaunch istio\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e\u003ccode class=\"language-plaintext highlighter-rouge\"\u003elaunch\u003c/code\u003e命令会在部署完Istio后，持续等待直到Istio的所有Pod都成功启动起来以后才结束。这个过程可能会持续大概一到几分钟的时间。\u003c/p\u003e\n\n\u003cp\u003e紧接着，我们再利用\u003ccode class=\"language-plaintext highlighter-rouge\"\u003elaunch\u003c/code\u003e命令把Bookinfo也部署到集群里：\u003c/p\u003e\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003e$ \u003c/span\u003elaunch istio-bookinfo\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e同样地，\u003ccode class=\"language-plaintext highlighter-rouge\"\u003elaunch\u003c/code\u003e命令会在部署完Bookinfo以后监控Bookinfo的Pod，直到所有Pod成功启动才退出。\u003c/p\u003e\n\n\u003cp\u003e等Istio和Bookinfo都启动起来以后，我们再利用\u003ccode class=\"language-plaintext highlighter-rouge\"\u003elaunch\u003c/code\u003e命令，通过端口转发的方式把它们各自的应用端口都暴露出来。这里，我们用的是\u003ccode class=\"language-plaintext highlighter-rouge\"\u003eistio\u003c/code\u003e和\u003ccode class=\"language-plaintext highlighter-rouge\"\u003eistio-bookinfo\u003c/code\u003e这两个target提供的\u003ccode class=\"language-plaintext highlighter-rouge\"\u003eportforward\u003c/code\u003e命令。调用target提供的命令，可以通过在指定\u003ccode class=\"language-plaintext highlighter-rouge\"\u003e\u0026lt;target名称\u0026gt;\u003c/code\u003e后面跟\u003ccode class=\"language-plaintext highlighter-rouge\"\u003e::\u0026lt;命令名称\u0026gt;\u003c/code\u003e的方式来实现。例如：\u003c/p\u003e\n\u003cul\u003e\n  \u003cli\u003e\u003ccode class=\"language-plaintext highlighter-rouge\"\u003eistio::portforwarding\u003c/code\u003e\u003c/li\u003e\n  \u003cli\u003e\u003ccode class=\"language-plaintext highlighter-rouge\"\u003eistio-bookinfo::portforwarding\u003c/code\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003e同样地，我们可以把这两个target的命令串接起来，在一个命令行里执行：\u003c/p\u003e\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003e$ \u003c/span\u003elaunch istio::portforward istio-bookinfo::portforward \nTargets to be launched: \u003cspan class=\"o\"\u003e[\u003c/span\u003eistio::portforward istio-bookinfo::portforward]\n\u003cspan class=\"c\"\u003e####################################\u003c/span\u003e\n\u003cspan class=\"c\"\u003e# Launch target istio...\u003c/span\u003e\n\u003cspan class=\"c\"\u003e####################################\u003c/span\u003e\n» Forwarding service/grafana 3000:3000...\nDone. Please check /home/vagrant/lab-k8s-playground/install/logs/pfwd-grafana.log\n» Forwarding service/kiali 20001:20001...\nDone. Please check /home/vagrant/lab-k8s-playground/install/logs/pfwd-kiali.log\n» Forwarding pod/jaeger 15032:16686...\nDone. Please check /home/vagrant/lab-k8s-playground/install/logs/pfwd-jaeger.log\n» Forwarding pod/prometheus 9090:9090...\nDone. Please check /home/vagrant/lab-k8s-playground/install/logs/pfwd-prometheus.log\n\u003cspan class=\"c\"\u003e####################################\u003c/span\u003e\n\u003cspan class=\"c\"\u003e# Launch target istio-bookinfo...\u003c/span\u003e\n\u003cspan class=\"c\"\u003e####################################\u003c/span\u003e\n» Forwarding service/istio-ingressgateway 31380:80...\nDone. Please check /home/vagrant/lab-k8s-playground/install/logs/pfwd-istio-ingressgateway.log\nTotal elapsed \u003cspan class=\"nb\"\u003etime\u003c/span\u003e: 2 seconds\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e这样，我们就能在本机浏览器里对它们进行访问了。利用\u003ccode class=\"language-plaintext highlighter-rouge\"\u003elaunch endpoints\u003c/code\u003e命令，我们可以看到当前集群里可供访问的所有endpoint：\u003c/p\u003e\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003e$ \u003c/span\u003elaunch endpoints\nTargets to be launched: \u003cspan class=\"o\"\u003e[\u003c/span\u003eendpoints]                                                                                                          \n\u003cspan class=\"c\"\u003e####################################                                                                                                         \u003c/span\u003e\n\u003cspan class=\"c\"\u003e# Launch target endpoints...                                                                                                                 \u003c/span\u003e\n\u003cspan class=\"c\"\u003e####################################                                                                                                         \u003c/span\u003e\n» common endpoints...\n✔ Web terminal: https://192.168.56.100:4200                                                                                                  \n✔    Dashboard: http://192.168.56.100:32768/api/v1/namespaces/kube-system/services/http:kubernetes-dashboard:/proxy                          \n» istio endpoints...\n✔        Grafana: http://192.168.56.100:3000                                                                                                 \n✔          Kiali: http://192.168.56.100:20001                                                                                                \n✔         Jaeger: http://192.168.56.100:15032                                                                                                \n✔     Prometheus: http://192.168.56.100:9090                                                                                                 \n✔ Istio Bookinfo: http://192.168.56.100:31380/productpage                                                                                    \nTotal elapsed \u003cspan class=\"nb\"\u003etime\u003c/span\u003e: 1 seconds                                                                                                                \n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e输出结果最左侧显示的，是每个endpoint当前的连通状态，\u003ccode class=\"language-plaintext highlighter-rouge\"\u003e✔\u003c/code\u003e表示当前可访问，\u003ccode class=\"language-plaintext highlighter-rouge\"\u003e✗\u003c/code\u003e则表示当前不可访问。如果是在Web终端里执行上述命令，你就可以直接点击每个endpoint后面跟着的URL链接，在新打开的浏览器窗口里访问各个应用，非常方便！\u003c/p\u003e\n\n\u003cp\u003e怎么样，\u003ccode class=\"language-plaintext highlighter-rouge\"\u003eLaunch Utility\u003c/code\u003e的使用是不是很简单啊😊 “简单易用，风格一致”，是开发\u003ccode class=\"language-plaintext highlighter-rouge\"\u003eLaunch Utility\u003c/code\u003e始终坚持的设计原则。后面，我们还将看到有关\u003ccode class=\"language-plaintext highlighter-rouge\"\u003eLaunch Utility\u003c/code\u003e的更多玩法！\u003c/p\u003e\n\n\u003cblockquote\u003e\n  \u003cp\u003eLaunch Utility支持Auto-Completion，如果你想知道当前都支持哪些target，只要在命令行输入\u003ccode class=\"language-plaintext highlighter-rouge\"\u003elaunch\u0026lt;空格\u0026gt;\u003c/code\u003e，然后按两次Tab，就可以列出全部target。如果想知道当前target都支持哪些命令，则在target名称后面输入\u003ccode class=\"language-plaintext highlighter-rouge\"\u003e::\u003c/code\u003e，然后按两次Tab，就可以列出target的全部命令。\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003ch3 id=\"动图演示-1\"\u003e动图演示\u003c/h3\u003e\n\n\u003cp\u003e在下面这个GIF动图里，大家可以看到在Istio和Bookinfo成功部署以后，我是如何在浏览器里访问各个不同应用的，包括：Grafana，Kiali，Jaeger，以及Kubernete Dashboard等（点击图片可放大观看哦）\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://github.com/morningspace/lab-k8s-playground/raw/master/docs/demo-apps.gif\"\u003e\u003cimg src=\"https://github.com/morningspace/lab-k8s-playground/raw/master/docs/demo-apps.gif\" alt=\"\"/\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003ch3 id=\"利用快照恢复集群\"\u003e利用快照恢复集群\u003c/h3\u003e\n\n\u003cp\u003e随着更多的应用被部署到当前的集群里，我们还可以通过下面的命令为当前集群建立一份快照：\u003c/p\u003e\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003e$ \u003c/span\u003elaunch kubernetes::snapshot\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e在这一过程中，脚本会搜集并保存当前集群的各种信息。这样一来，即使后面因为某些原因我们把集群“玩”坏了也没关系。只要“销毁”当前集群：\u003c/p\u003e\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003e$ \u003c/span\u003elaunch kubernetes::down\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e再根据先前保存的快照重启一个新的就可以了：\u003c/p\u003e\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003e$ \u003c/span\u003elaunch kubernetes::up\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e通过快照恢复得到的集群，会包含创建快照之前部署的所有应用。并且集群启动的速度会很快，因为它不需要再从无到有的部署先前那些应用了。\u003c/p\u003e\n\n\u003ch2 id=\"容器的镜像有更新了怎么办\"\u003e容器的镜像有更新了怎么办？\u003c/h2\u003e\n\n\u003cp\u003e前面我们已经看到了，利用Private Registry，我们可以把部署集群需要的所有Docker镜像都保存到Private Registry里。这样，就可以免去通过网络访问远程Public Registry的需要，从而极大地提高了部署的速度。\u003c/p\u003e\n\n\u003cp\u003e那么，假如有些保存在Private Registry里的Docker镜像有版本更新了，或者我们有新的Docker镜像需要放到Private Registry里，对于一个已经启动起来的Playground，我们该怎么对Private Registry进行更新，从而反映Docker镜像的这些变化呢？要完成这一工作，依然离不开\u003ccode class=\"language-plaintext highlighter-rouge\"\u003eLaunch Utility\u003c/code\u003e！用到的命令就是我们前面见到过的：\u003c/p\u003e\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003e$ \u003c/span\u003elaunch registry\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e每当Private Registry需要更新的时候，我们都可以通过执行这条命令来完成。即使虚机环境已经启动起来了，这条命令也是可以被反复执行的。我们只需要在执行命令之前，找到lab-k8s-playground项目的\u003ccode class=\"language-plaintext highlighter-rouge\"\u003einstall/targets/\u003c/code\u003e目录，并在该目录下找到\u003ccode class=\"language-plaintext highlighter-rouge\"\u003eimages.list\u003c/code\u003e文件进行编辑，修改里面Docker镜像的配置信息就可以了，比如修改已有镜像的版本，或添加新的镜像。\u003ccode class=\"language-plaintext highlighter-rouge\"\u003elaunch registry\u003c/code\u003e命令在执行时会读取这个文件，根据里面的信息对Private Registry进行更新。\u003c/p\u003e\n\n\u003ch2 id=\"我能和别人共享registry吗\"\u003e我能和别人共享Registry吗？\u003c/h2\u003e\n\n\u003cp\u003e在基于Vagrant Box的Playground环境里，Private Regsitry是安装在虚机环境里面的，所以当我们利用\u003ccode class=\"language-plaintext highlighter-rouge\"\u003evagrant destroy\u003c/code\u003e把虚机销毁以后，下次再启动新的虚机时，这个初始化过程又会重新执行一遍。在整个虚机环境的启动过程中，Private Registry的初始化是比较耗时的一个环节。如果我们不希望每次启动一个新的虚机环境都要初始化一遍Private Registry，我们也可以把这个环节“搬到”虚机外面来执行。\u003c/p\u003e\n\n\u003cp\u003e这种做法还有一个好处，就是能实现一套Private Registry在多个Playground之间共享。比如，在一个团队里面，我们可以搭建起一套团队共享的Private Registry，然后让每个开发人员的本机都指向这个Private Registry。\u003c/p\u003e\n\n\u003cp\u003e具体的做法还是执行\u003ccode class=\"language-plaintext highlighter-rouge\"\u003elaunch registry\u003c/code\u003e命令，只是这一次我们是在虚机外面执行这条命令。耐心等待一段时间之后，Private Registry就在本地启动起来了。这个时候再通过Web终端或普通终端进入虚机，执行如下命令，把当前正在虚机里运行的所有Private Registry都停掉：\u003c/p\u003e\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003e$ \u003c/span\u003elaunch registry::down\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e然后再利用如下命令，在虚机内部为每个Private Registry启动相应的代理：\u003c/p\u003e\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003e$ \u003c/span\u003elaunch registry-proxy\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e如果我们为Playground里的代理所提供的Private Registry不是跑在本地宿主机上，而是远程的某台服务器，那么在运行\u003ccode class=\"language-plaintext highlighter-rouge\"\u003eregistry-proxy\u003c/code\u003e命令之前，需要通过环境变量\u003ccode class=\"language-plaintext highlighter-rouge\"\u003eREGISTRY_REMOTE\u003c/code\u003e告诉脚本，远程服务器的IP地址：\u003c/p\u003e\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003e$ \u003c/span\u003e\u003cspan class=\"nb\"\u003eexport \u003c/span\u003e\u003cspan class=\"nv\"\u003eREGISTRY_REMOTE\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u0026lt;your_team_registry\u0026gt;\n\u003cspan class=\"nv\"\u003e$ \u003c/span\u003elaunch registry-proxy\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e最后，我们再次执行\u003ccode class=\"language-plaintext highlighter-rouge\"\u003elaunch\u003c/code\u003e命令，重新部署一次Kubernetes集群，看看集群是否能成功部署：\u003c/p\u003e\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003e$ \u003c/span\u003elaunch kubernetes\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003ch2 id=\"怎么在离线模式下使用虚机\"\u003e怎么在离线模式下使用虚机？\u003c/h2\u003e\n\n\u003cp\u003e前面我们提到过，Private Registry实际上是把部署集群所需的Docker镜像都保存到了本地，从而免去通过网络访问远程Public Registry抓取镜像的需要。这样做除了能够提高部署速度以外，还有另一个效果，那就是我们可以实现在没有网络连接的情况下运行Kubernetes集群，从而实现真正的“All-in-One”，非常适合demo环境的搭建。\u003c/p\u003e\n\n\u003cp\u003e要实现这一点，除了用到前面的\u003ccode class=\"language-plaintext highlighter-rouge\"\u003elaunch registry\u003c/code\u003e命令外，我们还可以通过下面这条命令，把前面提到的用于模拟Docker Hub的\u003ccode class=\"language-plaintext highlighter-rouge\"\u003eregistry-1.docker.io\u003c/code\u003e通过443端口暴露到集群外部：\u003c/p\u003e\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003e$ \u003c/span\u003elaunch registry::docker.io\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e完成这一步之后，我们就可以彻底把网络切断了！\u003c/p\u003e\n\n\u003ch3 id=\"动图演示-2\"\u003e动图演示\u003c/h3\u003e\n\n\u003cp\u003e在下面这个GIF动图里，大家可以看到我是如何在没有网络连接的状态下部署Kubernetes集群并安装Helm的！（点击图片可放大观看哦）\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://github.com/morningspace/lab-k8s-playground/raw/master/docs/demo-offline.gif\"\u003e\u003cimg src=\"https://github.com/morningspace/lab-k8s-playground/raw/master/docs/demo-offline.gif\" alt=\"\"/\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003ch2 id=\"还有哪些地方我可以定制的\"\u003e还有哪些地方我可以定制的？\u003c/h2\u003e\n\n\u003cp\u003e前面我们已经看到了，即使Playground环境已经启动了，我们依然可以利用强大而灵活的\u003ccode class=\"language-plaintext highlighter-rouge\"\u003eLaunch Utility\u003c/code\u003e根据需要对环境进行各种定制，比如：有选择性的部署安装某些应用，或者对Private Registry进行更新等等。\u003c/p\u003e\n\n\u003ch3 id=\"vagrantfile\"\u003eVagrantfile\u003c/h3\u003e\n\n\u003cp\u003e除此以外，针对基于Vagrant Box的Playground环境，我们还可以通过位于项目根目录下的\u003ccode class=\"language-plaintext highlighter-rouge\"\u003eVagrantfile\u003c/code\u003e文件对其进行定制：\u003c/p\u003e\n\u003cdiv class=\"language-ruby highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"c1\"\u003e# set number of vcpus\u003c/span\u003e\n\u003cspan class=\"n\"\u003ecpus\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s1\"\u003e\u0026#39;6\u0026#39;\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e# set amount of memory allocated by vm\u003c/span\u003e\n\u003cspan class=\"n\"\u003ememory\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s1\"\u003e\u0026#39;8192\u0026#39;\u003c/span\u003e\n\n\u003cspan class=\"c1\"\u003e# targets to be run, can be customized as your need\u003c/span\u003e\n\u003cspan class=\"n\"\u003etargets\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;init default helm tools\u0026#34;\u003c/span\u003e\n\n\u003cspan class=\"c1\"\u003e# set Kubernetes version, supported versions: v1.12, v1.13, v1.14, v1.15\u003c/span\u003e\n\u003cspan class=\"n\"\u003ek8s_version\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;v1.14\u0026#34;\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e# set number of worker nodes\u003c/span\u003e\n\u003cspan class=\"n\"\u003enum_nodes\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e2\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e# set host ip of the box\u003c/span\u003e\n\u003cspan class=\"n\"\u003ehost_ip\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s1\"\u003e\u0026#39;192.168.56.100\u0026#39;\u003c/span\u003e\n\n\u003cspan class=\"c1\"\u003e# special optimization for users in China, 1 or 0\u003c/span\u003e\n\u003cspan class=\"n\"\u003eis_in_china\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e# set https proxy\u003c/span\u003e\n\u003cspan class=\"n\"\u003ehttps_proxy\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;\u0026#34;\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e比如，我们可以调节分配给虚机环境的CPU和内存资源的大小，以及虚机的IP地址，还可以指定集群环境所使用的Kubernetes版本，节点的数目，以及所要安装和部署的target。\u003c/p\u003e\n\n\u003ch3 id=\"针对中国用户的优化\"\u003e针对中国用户的优化\u003c/h3\u003e\n\n\u003cp\u003e另外，对于中国地区的用户，lab-k8s-playground还专门设计了一个配置项，叫做\u003ccode class=\"language-plaintext highlighter-rouge\"\u003eis_in_china\u003c/code\u003e。其目的是为了解决Kubernetes集群部署过程中，由于区域网络限制而无法访问某些国外网站，如：Google的Container Registry，Helm的默认Repository等，而导致集群部署失败的问题。\u003c/p\u003e\n\n\u003cp\u003e注意，大部分配置项在虚机里面和外面都是有效和可用的。如果是在虚机外面使用，只要把配置项的名称转换成全大写形式，然后以环境变量的方式定义就可以了。比如：\u003c/p\u003e\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003e$ NUM_NODES\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e3 \u003cspan class=\"nv\"\u003eIS_IN_CHINA\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e1 launch registry kubernetes helm\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e这条命令告诉\u003ccode class=\"language-plaintext highlighter-rouge\"\u003elaunch.sh\u003c/code\u003e，启动的集群要包含3个工作节点，且针对中国地区的用户进行优化。\u003c/p\u003e\n\n\u003ch3 id=\"扩展launch-utility\"\u003e扩展Launch Utility\u003c/h3\u003e\n\n\u003cp\u003e最后，\u003ccode class=\"language-plaintext highlighter-rouge\"\u003eLaunch Utility\u003c/code\u003e本身也是支持扩展的。如果我们希望用\u003ccode class=\"language-plaintext highlighter-rouge\"\u003elaunch\u003c/code\u003e命令部署lab-k8s-playground项目目前还不支持的应用，包括我们自己的应用，那就定义一个你自己的target吧！自定义target非常简单，除了需要会一点Shell编程的技能以外，剩下的就是快速阅读一下“\u003ca href=\"https://morningspace.github.io/lab-k8s-playground/docs/Launch-Utility-Usage-Guide.html\"\u003eLaunch Utility Usage Guide\u003c/a\u003e”这篇文档，或者学习一下 \u003ca href=\"https://github.com/morningspace/lab-k8s-playground/blob/master/install/targets/sample.sh\"\u003einstall/targets/sample.sh\u003c/a\u003e 这个参考实现，然后你就可以动手改造\u003ccode class=\"language-plaintext highlighter-rouge\"\u003eLaunch Utility\u003c/code\u003e啦！\u003c/p\u003e\n\n\u003ch2 id=\"还有哪些参考资料我能访问\"\u003e还有哪些参考资料我能访问？\u003c/h2\u003e\n\n\u003cp\u003e读到这里，相信你对开源项目\u003ca href=\"https://github.com/morningspace/lab-k8s-playground\"\u003elab-k8s-playground\u003c/a\u003e及其All-in-One Playground的使用应该有了比较全面的了解了。那么，还有哪些参考资料你可以访问呢？那就请快速读一下下面这段Shell脚本编写的“代码”吧😊 相信一定难不倒你！\u003c/p\u003e\n\n\u003cp\u003e选择你感兴趣的分支，点击相应分支下列出的文档资源。最后，如果您喜欢这个项目，欢迎点击本文开头处（或下列代码注释里）的按钮，关注，加星，以及贡献代码^_^\u003c/p\u003e\n\n\u003cp style=\"background-color: #111; padding: 1em; text-align: left; font-size: 20px\"\u003e\n\u003ccode style=\"outline: none; box-sizing: border-box; font-family: Monaco, Consolas, \u0026#34;Lucida Console\u0026#34;, monospace; background-color: #111\"\u003e\n\u003cspan style=\"outline: none; box-sizing: border-box; transition: all 0.2s ease-in-out 0s; color: rgb(173, 0, 161);\"\u003efunction\u003cspan\u003e \u003c/span\u003e\u003c/span\u003ewhere_to_start\u003cspan\u003e \u003c/span\u003e\u003cspan style=\"outline: none; box-sizing: border-box; transition: all 0.2s ease-in-out 0s; color: rgb(31, 170, 170);\"\u003e{\u003c/span\u003e\u003cbr style=\"outline: none;\"/\u003e\n  \u003cspan style=\"outline: none; box-sizing: border-box; transition: all 0.2s ease-in-out 0s; color: rgb(173, 0, 161);\"\u003ecase\u003c/span\u003e \u003cspan style=\"outline: none; box-sizing: border-box; transition: all 0.2s ease-in-out 0s; color: rgb(255, 0, 134);\"\u003e$I_want\u003c/span\u003e \u003cspan style=\"outline: none; box-sizing: border-box; transition: all 0.2s ease-in-out 0s; color: rgb(173, 0, 161);\"\u003ein\u003c/span\u003e\u003cbr style=\"outline: none;\"/\u003e\n  \u003cspan style=\"outline: none; box-sizing: border-box; transition: all 0.2s ease-in-out 0s; color: rgb(0, 201, 24);\"\u003e\u0026#34;to learn what it provides in general\u0026#34;\u003c/span\u003e\u003cspan style=\"outline: none; box-sizing: border-box; transition: all 0.2s ease-in-out 0s;\"\u003e)\u003c/span\u003e\u003cbr style=\"outline: none;\"/\u003e\n    \u003cspan style=\"outline: none; box-sizing: border-box; transition: all 0.2s ease-in-out 0s;\"\u003ecat\u003c/span\u003e \u003cspan style=\"outline: none; box-sizing: border-box; transition: all 0.2s ease-in-out 0s; color: rgb(55, 119, 230);\"\u003e\u0026#34;\u003ca href=\"https://morningspace.github.io/lab-k8s-playground/docs/All-in-One-Playground-Overview.html\" rel=\"noopener\" target=\"_blank\"\u003eAll-in-One K8S Playground Overview\u003c/a\u003e\u0026#34;\u003c/span\u003e\u003cbr style=\"outline: none;\"/\u003e\n    \u003cspan style=\"outline: none; box-sizing: border-box; transition: all 0.2s ease-in-out 0s;\"\u003e;;\u003c/span\u003e\u003cbr style=\"outline: none;\"/\u003e\n  \u003cspan style=\"outline: none; box-sizing: border-box; transition: all 0.2s ease-in-out 0s; color: rgb(0, 201, 24);\"\u003e\u0026#34;to get started quickly\u0026#34;\u003c/span\u003e\u003cspan style=\"outline: none; box-sizing: border-box; transition: all 0.2s ease-in-out 0s;\"\u003e)\u003c/span\u003e\u003cbr style=\"outline: none;\"/\u003e\n    \u003cspan style=\"outline: none; box-sizing: border-box; transition: all 0.2s ease-in-out 0s;\"\u003ecat\u003c/span\u003e \u003cspan style=\"outline: none; box-sizing: border-box; transition: all 0.2s ease-in-out 0s; color: rgb(55, 119, 230);\"\u003e\u0026#34;\u003ca href=\"https://morningspace.github.io/lab-k8s-playground/docs/All-in-One-Playground-Usage-Guide.html\" rel=\"noopener\" target=\"_blank\"\u003eAll-in-One K8S Playground Usage Guide\u003c/a\u003e\u0026#34;\u003c/span\u003e\u003cbr style=\"outline: none;\"/\u003e\n    \u003cspan style=\"outline: none; box-sizing: border-box; transition: all 0.2s ease-in-out 0s;\"\u003ecat\u003c/span\u003e \u003cspan style=\"outline: none; box-sizing: border-box; transition: all 0.2s ease-in-out 0s; color: rgb(55, 119, 230);\"\u003e\u0026#34;\u003ca href=\"https://morningspace.github.io/tech/all-in-one-k8s-playground\" rel=\"noopener\" target=\"_blank\"\u003eAll-in-One K8S Playground 中文使用指南\u003c/a\u003e\u0026#34;\u003c/span\u003e\u003cbr style=\"outline: none;\"/\u003e\n    \u003cspan style=\"outline: none; box-sizing: border-box; transition: all 0.2s ease-in-out 0s;\"\u003e;;\u003c/span\u003e\u003cbr style=\"outline: none;\"/\u003e\n  \u003cspan style=\"outline: none; box-sizing: border-box; transition: all 0.2s ease-in-out 0s; color: rgb(0, 201, 24);\"\u003e\u0026#34;to understand what\u0026#39;s behind\u0026#34;\u003c/span\u003e\u003cspan style=\"outline: none; box-sizing: border-box; transition: all 0.2s ease-in-out 0s;\"\u003e)\u003c/span\u003e\u003cbr style=\"outline: none;\"/\u003e\n    \u003cspan style=\"outline: none; box-sizing: border-box; transition: all 0.2s ease-in-out 0s;\"\u003ecat\u003c/span\u003e \u003cspan style=\"outline: none; box-sizing: border-box; transition: all 0.2s ease-in-out 0s; color: rgb(55, 119, 230);\"\u003e\u0026#34;\u003ca href=\"https://morningspace.github.io/tech/k8s-run\" rel=\"noopener\" target=\"_blank\"\u003eLaunch multi-node k8s cluster locally in one min...\u003c/a\u003e\u0026#34;\u003c/span\u003e\u003cbr style=\"outline: none;\"/\u003e\n    \u003cspan style=\"outline: none; box-sizing: border-box; transition: all 0.2s ease-in-out 0s;\"\u003ecat\u003c/span\u003e \u003cspan style=\"outline: none; box-sizing: border-box; transition: all 0.2s ease-in-out 0s; color: rgb(55, 119, 230);\"\u003e\u0026#34;\u003ca href=\"https://v.youku.com/v_show/id_XNDI2Mzk1NDcyMA==.html?f=52221532\" rel=\"noopener\" target=\"_blank\"\u003eKubernetes实战视频: 如何1分钟内在本地启动一个多节点集群\u003c/a\u003e\u0026#34;\u003c/span\u003e\u003cbr style=\"outline: none;\"/\u003e\n    \u003cspan style=\"outline: none; box-sizing: border-box; transition: all 0.2s ease-in-out 0s;\"\u003ecat\u003c/span\u003e \u003cspan style=\"outline: none; box-sizing: border-box; transition: all 0.2s ease-in-out 0s; color: rgb(55, 119, 230);\"\u003e\u0026#34;\u003ca href=\"https://morningspace.github.io/tech/openshift-v3-trap-and-pitfalls\" rel=\"noopener\" target=\"_blank\"\u003eOpenShift v3的填坑之旅\u003c/a\u003e\u0026#34;\u003c/span\u003e\u003cbr style=\"outline: none;\"/\u003e\n    \u003cspan style=\"outline: none; box-sizing: border-box; transition: all 0.2s ease-in-out 0s;\"\u003ecat\u003c/span\u003e \u003cspan style=\"outline: none; box-sizing: border-box; transition: all 0.2s ease-in-out 0s; color: rgb(55, 119, 230);\"\u003e\u0026#34;\u003ca href=\"https://morningspace.github.io/tech/openshift-v4-trap-and-pitfalls\" rel=\"noopener\" target=\"_blank\"\u003eOpenShift v4的填坑之旅\u003c/a\u003e\u0026#34;\u003c/span\u003e\u003cbr style=\"outline: none;\"/\u003e\n    \u003cspan style=\"outline: none; box-sizing: border-box; transition: all 0.2s ease-in-out 0s;\"\u003e;;\u003c/span\u003e\u003cbr style=\"outline: none;\"/\u003e\n  \u003cspan style=\"outline: none; box-sizing: border-box; transition: all 0.2s ease-in-out 0s; color: rgb(0, 201, 24);\"\u003e\u0026#34;to extend it by myself\u0026#34;\u003c/span\u003e\u003cspan style=\"outline: none; box-sizing: border-box; transition: all 0.2s ease-in-out 0s;\"\u003e)\u003c/span\u003e\u003cbr style=\"outline: none;\"/\u003e\n    \u003cspan style=\"outline: none; box-sizing: border-box; transition: all 0.2s ease-in-out 0s;\"\u003ecat\u003c/span\u003e \u003cspan style=\"outline: none; box-sizing: border-box; transition: all 0.2s ease-in-out 0s; color: rgb(55, 119, 230);\"\u003e\u0026#34;\u003ca href=\"https://morningspace.github.io/lab-k8s-playground/docs/Launch-Utility-Usage-Guide.html\" rel=\"noopener\" target=\"_blank\"\u003eLaunch Utility Usage Guide\u003c/a\u003e\u0026#34;\u003c/span\u003e\u003cbr style=\"outline: none;\"/\u003e\n    \u003cspan style=\"outline: none; box-sizing: border-box; transition: all 0.2s ease-in-out 0s;\"\u003ecat\u003c/span\u003e \u003cspan style=\"outline: none; box-sizing: border-box; transition: all 0.2s ease-in-out 0s; color: rgb(55, 119, 230);\"\u003e\u0026#34;\u003ca href=\"https://github.com/morningspace/lab-k8s-playground/blob/master/install/targets/sample.sh\" rel=\"noopener\" target=\"_blank\"\u003eA Sample Target for Demo Purpose\u003c/a\u003e\u0026#34;\u003c/span\u003e\u003cbr style=\"outline: none;\"/\u003e\n    \u003cspan style=\"outline: none; box-sizing: border-box; transition: all 0.2s ease-in-out 0s;\"\u003e;;\u003c/span\u003e\u003cbr style=\"outline: none;\"/\u003e\n  \u003cspan style=\"outline: none; box-sizing: border-box; transition: all 0.2s ease-in-out 0s; color: rgb(0, 201, 24);\"\u003e\u0026#34;to learn more cool features\u0026#34;\u003c/span\u003e\u003cspan style=\"outline: none; box-sizing: border-box; transition: all 0.2s ease-in-out 0s;\"\u003e)\u003c/span\u003e\u003cbr style=\"outline: none;\"/\u003e\n    \u003cspan style=\"outline: none; box-sizing: border-box; transition: all 0.2s ease-in-out 0s;\"\u003ecat\u003c/span\u003e \u003cspan style=\"outline: none; box-sizing: border-box; transition: all 0.2s ease-in-out 0s; color: rgb(55, 119, 230);\"\u003e\u0026#34;\u003ca href=\"https://morningspace.github.io/lab-k8s-playground/docs/APIC-Quick-Guide.html\" rel=\"noopener\" target=\"_blank\"\u003eQuick Guide to Launch APIC Playground\u003c/a\u003e\u0026#34;\u003c/span\u003e\u003cbr style=\"outline: none;\"/\u003e\n    \u003cspan style=\"outline: none; box-sizing: border-box; transition: all 0.2s ease-in-out 0s;\"\u003ecat\u003c/span\u003e \u003cspan style=\"outline: none; box-sizing: border-box; transition: all 0.2s ease-in-out 0s; color: rgb(55, 119, 230);\"\u003e\u0026#34;\u003ca href=\"https://morningspace.github.io/tech/all-in-one-apic-playground\" rel=\"noopener\" target=\"_blank\"\u003e把API Connect关进All-in-One K8S Playground里\u003c/a\u003e\u0026#34;\u003c/span\u003e\u003cbr style=\"outline: none;\"/\u003e\n    \u003cspan style=\"outline: none; box-sizing: border-box; transition: all 0.2s ease-in-out 0s;\"\u003ecat\u003c/span\u003e \u003cspan style=\"outline: none; box-sizing: border-box; transition: all 0.2s ease-in-out 0s; color: rgb(55, 119, 230);\"\u003e\u0026#34;\u003ca href=\"https://morningspace.github.io/tech/all-in-one-openshift-playground/\" rel=\"noopener\" target=\"_blank\"\u003eAll-in-One K8S Playground新增OpenShift支持\u003c/a\u003e\u0026#34;\u003c/span\u003e\u003cbr style=\"outline: none;\"/\u003e\n    \u003cspan style=\"outline: none; box-sizing: border-box; transition: all 0.2s ease-in-out 0s;\"\u003ecat\u003c/span\u003e \u003cspan style=\"outline: none; box-sizing: border-box; transition: all 0.2s ease-in-out 0s; color: rgb(55, 119, 230);\"\u003e\u0026#34;\u003ca href=\"https://morningspace.github.io/tech/all-in-one-openshift-v4-playground/\" rel=\"noopener\" target=\"_blank\"\u003eAll-in-One K8S Playground支持OpenShift v4\u003c/a\u003e\u0026#34;\u003c/span\u003e\u003cbr style=\"outline: none;\"/\u003e\n    \u003cspan style=\"outline: none; box-sizing: border-box; transition: all 0.2s ease-in-out 0s;\"\u003e;;\u003c/span\u003e\u003cbr style=\"outline: none;\"/\u003e\n  \u003cspan style=\"outline: none; box-sizing: border-box; transition: all 0.2s ease-in-out 0s; color: rgb(0, 201, 24);\"\u003e\u0026#34;to contribute back\u0026#34;\u003c/span\u003e\u003cspan style=\"outline: none; box-sizing: border-box; transition: all 0.2s ease-in-out 0s;\"\u003e)\u003c/span\u003e\u003cbr style=\"outline: none;\"/\u003e\n    \u003cspan style=\"outline: none; box-sizing: border-box; transition: all 0.2s ease-in-out 0s; color: rgb(119, 119, 119);\"\u003e# Feel free to click these buttons: \u003ca class=\"github-button\" href=\"https://github.com/morningspace/lab-k8s-playground/subscription\" data-icon=\"octicon-eye\" aria-label=\"Watch morningspace/lab-k8s-playground on GitHub\"\u003eWatch\u003c/a\u003e \u003ca class=\"github-button\" href=\"https://github.com/morningspace/lab-k8s-playground\" data-icon=\"octicon-star\" aria-label=\"Star morningspace/lab-k8s-playground on GitHub\"\u003eStar\u003c/a\u003e \u003ca class=\"github-button\" href=\"https://github.com/morningspace/lab-k8s-playground/fork\" data-icon=\"octicon-repo-forked\" aria-label=\"Fork morningspace/lab-k8s-playground on GitHub\"\u003eFork\u003c/a\u003e\u003c/span\u003e\u003cbr style=\"outline: none;\"/\u003e\n    git clone\u003cspan\u003e \u003c/span\u003e\u003ca href=\"https://github.com/morningspace/lab-k8s-playground.git\" rel=\"noopener\" target=\"_blank\"\u003ehttps://github.com/morningspace/lab-k8s-playground.git\u003c/a\u003e\u003cbr style=\"outline: none;\"/\u003e\n    \u003cspan style=\"outline: none; box-sizing: border-box; transition: all 0.2s ease-in-out 0s;\"\u003e;;\u003c/span\u003e\u003cbr style=\"outline: none;\"/\u003e\n  \u003cspan style=\"outline: none; box-sizing: border-box; transition: all 0.2s ease-in-out 0s; color: rgb(173, 0, 161);\"\u003eesac\u003c/span\u003e\u003cbr style=\"outline: none;\"/\u003e\n\u003cspan style=\"outline: none; box-sizing: border-box; transition: all 0.2s ease-in-out 0s; color: rgb(31, 170, 170);\"\u003e}\u003c/span\u003e\u003c/code\u003e\n\u003c/p\u003e\n\n        \n      \u003c/section\u003e\n\n      \u003cfooter class=\"page__meta\"\u003e\n        \n        \n  \n\n\n  \n\n  \u003cp class=\"page__taxonomy\"\u003e\n    \u003cstrong\u003e\u003ci class=\"fas fa-fw fa-tags\" aria-hidden=\"true\"\u003e\u003c/i\u003e 标签: \u003c/strong\u003e\n    \u003cspan itemprop=\"keywords\"\u003e\n    \n      \u003ca href=\"/tags/#dummies\" class=\"page__taxonomy-item p-category\" rel=\"tag\"\u003edummies\u003c/a\u003e\u003cspan class=\"sep\"\u003e, \u003c/span\u003e\n    \n      \u003ca href=\"/tags/#dummies-kubernetes\" class=\"page__taxonomy-item p-category\" rel=\"tag\"\u003edummies_kubernetes\u003c/a\u003e\u003cspan class=\"sep\"\u003e, \u003c/span\u003e\n    \n      \u003ca href=\"/tags/#kubernetes\" class=\"page__taxonomy-item p-category\" rel=\"tag\"\u003ekubernetes\u003c/a\u003e\u003cspan class=\"sep\"\u003e, \u003c/span\u003e\n    \n      \u003ca href=\"/tags/#lab\" class=\"page__taxonomy-item p-category\" rel=\"tag\"\u003elab\u003c/a\u003e\n    \n    \u003c/span\u003e\n  \u003c/p\u003e\n\n\n\n\n  \n\n\n  \n\n  \u003cp class=\"page__taxonomy\"\u003e\n    \u003cstrong\u003e\u003ci class=\"fas fa-fw fa-folder-open\" aria-hidden=\"true\"\u003e\u003c/i\u003e 分类: \u003c/strong\u003e\n    \u003cspan itemprop=\"keywords\"\u003e\n    \n      \u003ca href=\"/categories/#tech\" class=\"page__taxonomy-item p-category\" rel=\"tag\"\u003etech\u003c/a\u003e\n    \n    \u003c/span\u003e\n  \u003c/p\u003e\n\n\n        \n\n  \u003cp class=\"page__date\"\u003e\u003cstrong\u003e\u003ci class=\"fas fa-fw fa-calendar-alt\" aria-hidden=\"true\"\u003e\u003c/i\u003e 更新时间:\u003c/strong\u003e \u003ctime class=\"dt-published\" datetime=\"2019-09-05T00:00:00+08:00\"\u003eSeptember 5, 2019\u003c/time\u003e\u003c/p\u003e\n\n      \u003c/footer\u003e\n\n      \u003csection class=\"page__share\"\u003e\n  \n    \u003ch4 class=\"page__share-title\"\u003e分享\u003c/h4\u003e\n  \n\n  \u003ca href=\"https://twitter.com/intent/tweet?text=All-in-One+K8S+Playground%E4%B8%AD%E6%96%87%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97%20https%3A%2F%2Fmorningspace.github.io%2Ftech%2Fall-in-one-k8s-playground%2F\" class=\"btn btn--twitter\" onclick=\"window.open(this.href, \u0026#39;window\u0026#39;, \u0026#39;left=20,top=20,width=500,height=500,toolbar=1,resizable=0\u0026#39;); return false;\" title=\"分享 Twitter\"\u003e\u003ci class=\"fab fa-fw fa-twitter\" aria-hidden=\"true\"\u003e\u003c/i\u003e\u003cspan\u003e Twitter\u003c/span\u003e\u003c/a\u003e\n\n  \u003ca href=\"https://www.facebook.com/sharer/sharer.php?u=https%3A%2F%2Fmorningspace.github.io%2Ftech%2Fall-in-one-k8s-playground%2F\" class=\"btn btn--facebook\" onclick=\"window.open(this.href, \u0026#39;window\u0026#39;, \u0026#39;left=20,top=20,width=500,height=500,toolbar=1,resizable=0\u0026#39;); return false;\" title=\"分享 Facebook\"\u003e\u003ci class=\"fab fa-fw fa-facebook\" aria-hidden=\"true\"\u003e\u003c/i\u003e\u003cspan\u003e Facebook\u003c/span\u003e\u003c/a\u003e\n\n  \u003ca href=\"https://www.linkedin.com/shareArticle?mini=true\u0026amp;url=https%3A%2F%2Fmorningspace.github.io%2Ftech%2Fall-in-one-k8s-playground%2F\" class=\"btn btn--linkedin\" onclick=\"window.open(this.href, \u0026#39;window\u0026#39;, \u0026#39;left=20,top=20,width=500,height=500,toolbar=1,resizable=0\u0026#39;); return false;\" title=\"分享 LinkedIn\"\u003e\u003ci class=\"fab fa-fw fa-linkedin\" aria-hidden=\"true\"\u003e\u003c/i\u003e\u003cspan\u003e LinkedIn\u003c/span\u003e\u003c/a\u003e\n\u003c/section\u003e\n\n\n      \n  \u003cnav class=\"pagination\"\u003e\n    \n      \u003ca href=\"/tech/git-merge-stories-3/\" class=\"pagination--pager\" title=\"Git合并那些事——Merge策略（下）\n\"\u003e向前\u003c/a\u003e\n    \n    \n      \u003ca href=\"/tech/git-merge-stories-4/\" class=\"pagination--pager\" title=\"Git合并那些事——当冲突发生的时候\n\"\u003e向后\u003c/a\u003e\n    \n  \u003c/nav\u003e\n\n    \u003c/div\u003e",
  "Date": "2019-09-05T00:00:00+08:00",
  "Author": "MornigSpace"
}