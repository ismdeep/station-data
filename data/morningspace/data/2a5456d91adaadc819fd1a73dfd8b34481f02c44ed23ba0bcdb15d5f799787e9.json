{
  "Source": "morningspace",
  "Title": "Git合并那些事——交互式Rebase",
  "Link": "https://morningspace.github.io/tech/git-merge-stories-7/",
  "Content": "\u003cdiv class=\"page__inner-wrap\"\u003e\n      \n\n      \u003csection class=\"page__content e-content\" itemprop=\"text\"\u003e\n        \n          \u003caside class=\"sidebar__right sticky\"\u003e\n            \u003cnav class=\"toc\"\u003e\n              \u003cheader\u003e\u003ch4 class=\"nav__title\"\u003e\u003ci class=\"fas fa-file-alt\"\u003e\u003c/i\u003e 在本页上\u003c/h4\u003e\u003c/header\u003e\n              \u003cul class=\"toc__menu\"\u003e\u003cli\u003e\u003ca href=\"#问题由来\"\u003e问题由来\u003c/a\u003e\u003c/li\u003e\u003cli\u003e\u003ca href=\"#交互式rebase\"\u003e交互式Rebase\u003c/a\u003e\u003c/li\u003e\u003cli\u003e\u003ca href=\"#一个例子\"\u003e一个例子\u003c/a\u003e\u003c/li\u003e\u003c/ul\u003e\n\n            \u003c/nav\u003e\n          \u003c/aside\u003e\n        \n        \u003cblockquote\u003e\n  \u003cp\u003e多人开发中的合并冲突是我们使用Git时常常会遇到的情况，小小合并门道大，讲述合并的那些事儿，晴耕 · 白话之“Git合并那些事”系列​持续连载中……\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003e注：\n本文采用\u003ca rel=\"license\" href=\"http://creativecommons.org/licenses/by-sa/4.0/\"\u003e知识共享署名-相同方式共享 4.0 国际许可协议\u003c/a\u003e进行许可。\u003ca rel=\"license\" href=\"http://creativecommons.org/licenses/by-sa/4.0/\"\u003e\u003cimg alt=\"知识共享许可协议\" style=\"border-width:0\" src=\"https://i.creativecommons.org/l/by-sa/4.0/80x15.png\"/\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"/assets/images/lab/git/rebase-2.png\" alt=\"\" class=\"align-center\"/\u003e\u003c/p\u003e\n\n\u003cp\u003e本文的主要目的是搜集和介绍更多有关Rebase的有趣用法。关于Rebase的基本使用，同学们可以在\u003ca href=\"/tech/git-merge-stories-6\"\u003e“Git合并那些事儿——神奇的Rebase”\u003c/a\u003e一文里找到。\u003c/p\u003e\n\n\u003ch2 id=\"问题由来\"\u003e问题由来\u003c/h2\u003e\n\n\u003cp\u003e前段时间在往某个开源项目提交代码时，遇到了一个问题。平时我在公网和公司内部分别用的是两个不同的Git账号，用户名和邮箱都不一样，它们分别对应于公网的GitHub和公司内部的GitHub Enterprise。但是，有一天因为一时疏忽，我在往公网GitHub上提交代码时误用了公司内部的账号。而且，提交记录已经被推送到了远程。\u003c/p\u003e\n\n\u003cp\u003e对于已经提交到本地Git库甚至被推送到远程的提交记录，如何修改它们的信息呢？网上搜了一下，发现还真有办法解决。方法就是利用\u003ccode class=\"language-plaintext highlighter-rouge\"\u003egit rebase -i\u003c/code\u003e，结合\u003ccode class=\"language-plaintext highlighter-rouge\"\u003egit commit --amend\u003c/code\u003e。\u003c/p\u003e\n\n\u003ch2 id=\"交互式rebase\"\u003e交互式Rebase\u003c/h2\u003e\n\n\u003cp\u003e通常我们执行\u003ccode class=\"language-plaintext highlighter-rouge\"\u003egit rebase\u003c/code\u003e命令时，整个Rebase的过程都是自动进行的。但是，当我们指定了\u003ccode class=\"language-plaintext highlighter-rouge\"\u003e-i\u003c/code\u003e参数以后，Rebase就进入了交互模式。于是，我们就可以“为所欲为”了;-)\u003c/p\u003e\n\n\u003cp\u003e在\u003ca href=\"/tech/git-merge-stories-6\"\u003e“Git合并那些事儿——神奇的Rebase”\u003c/a\u003e一文里，我们已经知道Rebase可以影响提交历史。实际上，我们在交互模式下可以做更多事情。纯手工，想怎么玩儿都行！比如：合并多个提交记录，丢弃某些提交记录，修改提交记录的信息等。\u003c/p\u003e\n\n\u003ch2 id=\"一个例子\"\u003e一个例子\u003c/h2\u003e\n\n\u003cp\u003e下面通过一个例子来演示这个过程，假设我们的提交历史是这样的：\u003c/p\u003e\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003e$ \u003c/span\u003egit log \u003cspan class=\"nt\"\u003e--format\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;%h %s %an %ae %d\u0026#39;\u003c/span\u003e\n2665bc4 c3 Nicole nicole@example.com  \u003cspan class=\"o\"\u003e(\u003c/span\u003eHEAD -\u0026gt; master\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n604a471 c2 Nicole nicole@example.com  \u003cspan class=\"o\"\u003e(\u003c/span\u003eorigin/master\u003cspan class=\"o\"\u003e)\u003c/span\u003e\nf0f4430 c1 Nicole nicole@example.com \nf14301e c0 William william@example.com \n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e如果我们希望修改从第一条提交记录c0开始的所有提交记录，可以在执行Rebase时指定\u003ccode class=\"language-plaintext highlighter-rouge\"\u003e--root\u003c/code\u003e参数：\u003c/p\u003e\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003e$ \u003c/span\u003egit rebase \u003cspan class=\"nt\"\u003e-i\u003c/span\u003e \u003cspan class=\"nt\"\u003e--root\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e如果希望修改从某条提交记录开始往后的剩余提交记录，那么就在执行Rebase时指定这条提交记录的SHA-1值。比如，假设我们想修改c2和c3的作者名称和邮箱地址，也就是从c1往后的剩余提交记录，那就指定c1的SHA-1值，即：f0f4430：\u003c/p\u003e\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003e$ \u003c/span\u003egit rebase \u003cspan class=\"nt\"\u003e-i\u003c/span\u003e f0f4430\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e这个时候，Git会自动打开默认的文本编辑器，比如在我本地使用的是\u003ccode class=\"language-plaintext highlighter-rouge\"\u003evim\u003c/code\u003e。在文本编辑器的开始几行会列出所有满足条件的提交记录，每个提交记录对应一行。除了提交记录的SHA-1值和备注信息外，还有一列代表要对这条提交记录实施的操作。\u003c/p\u003e\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003epick 604a471 c2\npick 2665bc4 c3\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e下面的表格列出了所有可供选择的操作：\u003c/p\u003e\n\n\u003ctable\u003e\n  \u003cthead\u003e\n    \u003ctr\u003e\n      \u003cth\u003e操作\u003c/th\u003e\n      \u003cth style=\"text-align: left\"\u003e说明\u003c/th\u003e\n    \u003c/tr\u003e\n  \u003c/thead\u003e\n  \u003ctbody\u003e\n    \u003ctr\u003e\n      \u003ctd\u003epick\u003c/td\u003e\n      \u003ctd style=\"text-align: left\"\u003e采用该提交（默认行为）\u003c/td\u003e\n    \u003c/tr\u003e\n    \u003ctr\u003e\n      \u003ctd\u003ereword\u003c/td\u003e\n      \u003ctd style=\"text-align: left\"\u003e采用该提交，但要求修改提交记录的备注\u003c/td\u003e\n    \u003c/tr\u003e\n    \u003ctr\u003e\n      \u003ctd\u003eedit\u003c/td\u003e\n      \u003ctd style=\"text-align: left\"\u003e采用该提交，但要求修改提交记录的信息，如：作者名称，邮箱地址等\u003c/td\u003e\n    \u003c/tr\u003e\n    \u003ctr\u003e\n      \u003ctd\u003esquash\u003c/td\u003e\n      \u003ctd style=\"text-align: left\"\u003e采用该提交，但它会被并入前一条提交\u003c/td\u003e\n    \u003c/tr\u003e\n    \u003ctr\u003e\n      \u003ctd\u003efixup\u003c/td\u003e\n      \u003ctd style=\"text-align: left\"\u003e类似“squash”，但是会丢弃这条提交记录的日志信息\u003c/td\u003e\n    \u003c/tr\u003e\n    \u003ctr\u003e\n      \u003ctd\u003eexec\u003c/td\u003e\n      \u003ctd style=\"text-align: left\"\u003e执行指定的shell脚本或命令\u003c/td\u003e\n    \u003c/tr\u003e\n    \u003ctr\u003e\n      \u003ctd\u003edrop\u003c/td\u003e\n      \u003ctd style=\"text-align: left\"\u003e丢弃该提交\u003c/td\u003e\n    \u003c/tr\u003e\n  \u003c/tbody\u003e\n\u003c/table\u003e\n\n\u003cp\u003e针对我们要解决的问题，edit是最合适的选择。所以，我们把pick改成edit，然后保存并退出：\u003c/p\u003e\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003eedit 604a471 c2\nedit 2665bc4 c3\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e于是，整个Rebase的过程就开始了。这个时候，Git会自动停在第一个满足条件的提交记录处：\u003c/p\u003e\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003eStopped at 604a471...  c2\nYou can amend the commit now, with\n\n  git commit \u003cspan class=\"nt\"\u003e--amend\u003c/span\u003e \n\nOnce you are satisfied with your changes, run\n\n  git rebase \u003cspan class=\"nt\"\u003e--continue\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e当Git提示要修改提交记录时，我们就执行下面的\u003ccode class=\"language-plaintext highlighter-rouge\"\u003egit commit --amend\u003c/code\u003e命令，对当前提交记录进行修改：\u003c/p\u003e\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003e$ \u003c/span\u003egit commit \u003cspan class=\"nt\"\u003e--amend\u003c/span\u003e \u003cspan class=\"nt\"\u003e--author\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;Murphy \u0026lt;murphy@example.com\u0026gt;\u0026#34;\u003c/span\u003e\n\u003cspan class=\"o\"\u003e[\u003c/span\u003edetached HEAD f10bd4b] c3\n Author: Murphy \u0026lt;murphy@example.com\u0026gt;\n Date: Thu May 16 00:45:41 2019 +0000\n 1 file changed, 0 insertions\u003cspan class=\"o\"\u003e(\u003c/span\u003e+\u003cspan class=\"o\"\u003e)\u003c/span\u003e, 0 deletions\u003cspan class=\"o\"\u003e(\u003c/span\u003e-\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n create mode 100644 VERSION\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e修改完成后执行\u003ccode class=\"language-plaintext highlighter-rouge\"\u003egit rebase --continue\u003c/code\u003e，告诉Git跳到下一个待处理的提交记录处：\u003c/p\u003e\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003e$ \u003c/span\u003egit rebase \u003cspan class=\"nt\"\u003e--continue\u003c/span\u003e\nStopped at 2665bc4...  c3\nYou can amend the commit now, with\n\n  git commit \u003cspan class=\"nt\"\u003e--amend\u003c/span\u003e \n\nOnce you are satisfied with your changes, run\n\n  git rebase \u003cspan class=\"nt\"\u003e--continue\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e反复执行上面的操作，直到所有提交记录都处理完了为止：\u003c/p\u003e\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003e$ \u003c/span\u003egit rebase \u003cspan class=\"nt\"\u003e--continue\u003c/span\u003e\nSuccessfully rebased and updated refs/heads/master.\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e这个时候，整个Rebase的过程就结束了。现在，我们再来看一下提交历史：\u003c/p\u003e\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003e$ \u003c/span\u003egit log \u003cspan class=\"nt\"\u003e--format\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;%h %s %an %ae %d\u0026#39;\u003c/span\u003e\n5498264 c3 Murphy murphy@example.com  \u003cspan class=\"o\"\u003e(\u003c/span\u003eHEAD -\u0026gt; master\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n551e6a4 c2 Murphy murphy@example.com \nf0f4430 c1 Nicole nicole@example.com \nf14301e c0 William william@example.com\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e就会发现，c2和c3对应的作者信息果然更新了。而且，仔细观察我们会发现，c2和c3的SHA-1值都和之前不一样了。这也是Rebase的特点，它实际上会把旧的提交记录删掉，重新建立新的提交记录。\u003c/p\u003e\n\n\u003cp\u003e对于提交记录还没有被推送到远程的本地库而言，到这里为止，问题就已经得到解决了。如果已经推送到了远程，那么我们还需要多执行一步\u003ccode class=\"language-plaintext highlighter-rouge\"\u003egit pull\u003c/code\u003e，加上\u003ccode class=\"language-plaintext highlighter-rouge\"\u003e--force\u003c/code\u003e参数，把本地修改强制推送到远程：\u003c/p\u003e\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003e$ \u003c/span\u003egit push \u003cspan class=\"nt\"\u003e-f\u003c/span\u003e origin master\nCounting objects: 5, \u003cspan class=\"k\"\u003edone\u003c/span\u003e\u003cspan class=\"nb\"\u003e.\u003c/span\u003e\nDelta compression using up to 4 threads.\nCompressing objects: 100% \u003cspan class=\"o\"\u003e(\u003c/span\u003e4/4\u003cspan class=\"o\"\u003e)\u003c/span\u003e, \u003cspan class=\"k\"\u003edone\u003c/span\u003e\u003cspan class=\"nb\"\u003e.\u003c/span\u003e\nWriting objects: 100% \u003cspan class=\"o\"\u003e(\u003c/span\u003e5/5\u003cspan class=\"o\"\u003e)\u003c/span\u003e, 582 bytes | 38.00 KiB/s, \u003cspan class=\"k\"\u003edone\u003c/span\u003e\u003cspan class=\"nb\"\u003e.\u003c/span\u003e\nTotal 5 \u003cspan class=\"o\"\u003e(\u003c/span\u003edelta 0\u003cspan class=\"o\"\u003e)\u003c/span\u003e, reused 0 \u003cspan class=\"o\"\u003e(\u003c/span\u003edelta 0\u003cspan class=\"o\"\u003e)\u003c/span\u003e\nTo my-git-remote:~/test-rebase.git\n + 604a471...5498264 master -\u0026gt; master \u003cspan class=\"o\"\u003e(\u003c/span\u003eforced update\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e最后，如果Rebase过程中发现做错了，想撤销或者终止Rebase，也很简单。任何时候，只要在执行\u003ccode class=\"language-plaintext highlighter-rouge\"\u003egit rebase\u003c/code\u003e命令时使用\u003ccode class=\"language-plaintext highlighter-rouge\"\u003e--abort\u003c/code\u003e参数就可以了：\u003c/p\u003e\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003e$ \u003c/span\u003egit rebase \u003cspan class=\"nt\"\u003e--abort\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n        \n      \u003c/section\u003e\n\n      \u003cfooter class=\"page__meta\"\u003e\n        \n        \n  \n\n\n  \n\n  \u003cp class=\"page__taxonomy\"\u003e\n    \u003cstrong\u003e\u003ci class=\"fas fa-fw fa-tags\" aria-hidden=\"true\"\u003e\u003c/i\u003e 标签: \u003c/strong\u003e\n    \u003cspan itemprop=\"keywords\"\u003e\n    \n      \u003ca href=\"/tags/#dummies\" class=\"page__taxonomy-item p-category\" rel=\"tag\"\u003edummies\u003c/a\u003e\u003cspan class=\"sep\"\u003e, \u003c/span\u003e\n    \n      \u003ca href=\"/tags/#dummies-git\" class=\"page__taxonomy-item p-category\" rel=\"tag\"\u003edummies_git\u003c/a\u003e\u003cspan class=\"sep\"\u003e, \u003c/span\u003e\n    \n      \u003ca href=\"/tags/#git\" class=\"page__taxonomy-item p-category\" rel=\"tag\"\u003egit\u003c/a\u003e\u003cspan class=\"sep\"\u003e, \u003c/span\u003e\n    \n      \u003ca href=\"/tags/#lab\" class=\"page__taxonomy-item p-category\" rel=\"tag\"\u003elab\u003c/a\u003e\n    \n    \u003c/span\u003e\n  \u003c/p\u003e\n\n\n\n\n  \n\n\n  \n\n  \u003cp class=\"page__taxonomy\"\u003e\n    \u003cstrong\u003e\u003ci class=\"fas fa-fw fa-folder-open\" aria-hidden=\"true\"\u003e\u003c/i\u003e 分类: \u003c/strong\u003e\n    \u003cspan itemprop=\"keywords\"\u003e\n    \n      \u003ca href=\"/categories/#tech\" class=\"page__taxonomy-item p-category\" rel=\"tag\"\u003etech\u003c/a\u003e\n    \n    \u003c/span\u003e\n  \u003c/p\u003e\n\n\n        \n\n  \u003cp class=\"page__date\"\u003e\u003cstrong\u003e\u003ci class=\"fas fa-fw fa-calendar-alt\" aria-hidden=\"true\"\u003e\u003c/i\u003e 更新时间:\u003c/strong\u003e \u003ctime class=\"dt-published\" datetime=\"2019-11-08T00:00:00+08:00\"\u003eNovember 8, 2019\u003c/time\u003e\u003c/p\u003e\n\n      \u003c/footer\u003e\n\n      \u003csection class=\"page__share\"\u003e\n  \n    \u003ch4 class=\"page__share-title\"\u003e分享\u003c/h4\u003e\n  \n\n  \u003ca href=\"https://twitter.com/intent/tweet?text=Git%E5%90%88%E5%B9%B6%E9%82%A3%E4%BA%9B%E4%BA%8B%E2%80%94%E2%80%94%E4%BA%A4%E4%BA%92%E5%BC%8FRebase%20https%3A%2F%2Fmorningspace.github.io%2Ftech%2Fgit-merge-stories-7%2F\" class=\"btn btn--twitter\" onclick=\"window.open(this.href, \u0026#39;window\u0026#39;, \u0026#39;left=20,top=20,width=500,height=500,toolbar=1,resizable=0\u0026#39;); return false;\" title=\"分享 Twitter\"\u003e\u003ci class=\"fab fa-fw fa-twitter\" aria-hidden=\"true\"\u003e\u003c/i\u003e\u003cspan\u003e Twitter\u003c/span\u003e\u003c/a\u003e\n\n  \u003ca href=\"https://www.facebook.com/sharer/sharer.php?u=https%3A%2F%2Fmorningspace.github.io%2Ftech%2Fgit-merge-stories-7%2F\" class=\"btn btn--facebook\" onclick=\"window.open(this.href, \u0026#39;window\u0026#39;, \u0026#39;left=20,top=20,width=500,height=500,toolbar=1,resizable=0\u0026#39;); return false;\" title=\"分享 Facebook\"\u003e\u003ci class=\"fab fa-fw fa-facebook\" aria-hidden=\"true\"\u003e\u003c/i\u003e\u003cspan\u003e Facebook\u003c/span\u003e\u003c/a\u003e\n\n  \u003ca href=\"https://www.linkedin.com/shareArticle?mini=true\u0026amp;url=https%3A%2F%2Fmorningspace.github.io%2Ftech%2Fgit-merge-stories-7%2F\" class=\"btn btn--linkedin\" onclick=\"window.open(this.href, \u0026#39;window\u0026#39;, \u0026#39;left=20,top=20,width=500,height=500,toolbar=1,resizable=0\u0026#39;); return false;\" title=\"分享 LinkedIn\"\u003e\u003ci class=\"fab fa-fw fa-linkedin\" aria-hidden=\"true\"\u003e\u003c/i\u003e\u003cspan\u003e LinkedIn\u003c/span\u003e\u003c/a\u003e\n\u003c/section\u003e\n\n\n      \n  \u003cnav class=\"pagination\"\u003e\n    \n      \u003ca href=\"/tech/git-merge-stories-6/\" class=\"pagination--pager\" title=\"Git合并那些事——神奇的Rebase\n\"\u003e向前\u003c/a\u003e\n    \n    \n      \u003ca href=\"/tech/git-merge-stories-8/\" class=\"pagination--pager\" title=\"Git合并那些事——Rebase的烦恼\n\"\u003e向后\u003c/a\u003e\n    \n  \u003c/nav\u003e\n\n    \u003c/div\u003e",
  "Date": "2019-11-08T00:00:00+08:00",
  "Author": "MornigSpace"
}