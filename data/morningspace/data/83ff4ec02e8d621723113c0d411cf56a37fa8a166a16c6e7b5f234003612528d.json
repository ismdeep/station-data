{
  "Source": "morningspace",
  "Title": "Git工作流面面观——Forking工作流",
  "Link": "https://morningspace.github.io/tech/git-workflow-5/",
  "Content": "\u003cdiv class=\"page__inner-wrap\"\u003e\n      \n\n      \u003csection class=\"page__content e-content\" itemprop=\"text\"\u003e\n        \n          \u003caside class=\"sidebar__right sticky\"\u003e\n            \u003cnav class=\"toc\"\u003e\n              \u003cheader\u003e\u003ch4 class=\"nav__title\"\u003e\u003ci class=\"fas fa-file-alt\"\u003e\u003c/i\u003e 在本页上\u003c/h4\u003e\u003c/header\u003e\n              \u003cul class=\"toc__menu\"\u003e\u003cli\u003e\u003ca href=\"#forking工作流\"\u003eForking工作流\u003c/a\u003e\u003cul\u003e\u003cli\u003e\u003ca href=\"#个人库-vs-官方库\"\u003e个人库 vs. 官方库\u003c/a\u003e\u003c/li\u003e\u003cli\u003e\u003ca href=\"#fork-vs-clone\"\u003eFork vs. Clone\u003c/a\u003e\u003c/li\u003e\u003cli\u003e\u003ca href=\"#参与者-vs-维护者\"\u003e参与者 vs. 维护者\u003c/a\u003e\u003c/li\u003e\u003cli\u003e\u003ca href=\"#直接推送-vs-间接推送\"\u003e直接推送 vs. 间接推送\u003c/a\u003e\u003c/li\u003e\u003cli\u003e\u003ca href=\"#灵活性\"\u003e灵活性\u003c/a\u003e\u003c/li\u003e\u003cli\u003e\u003ca href=\"#约束性\"\u003e约束性\u003c/a\u003e\u003c/li\u003e\u003c/ul\u003e\u003c/li\u003e\u003cli\u003e\u003ca href=\"#如何工作\"\u003e如何工作\u003c/a\u003e\u003c/li\u003e\u003c/ul\u003e\n\n            \u003c/nav\u003e\n          \u003c/aside\u003e\n        \n        \u003cp\u003e注：\n本文采用\u003ca rel=\"license\" href=\"http://creativecommons.org/licenses/by-sa/4.0/\"\u003e知识共享署名-相同方式共享 4.0 国际许可协议\u003c/a\u003e进行许可。\u003ca rel=\"license\" href=\"http://creativecommons.org/licenses/by-sa/4.0/\"\u003e\u003cimg alt=\"知识共享许可协议\" style=\"border-width:0\" src=\"https://i.creativecommons.org/l/by-sa/4.0/80x15.png\"/\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"/assets/images/lab/git/workflow.png\" alt=\"\"/\u003e\u003c/p\u003e\n\n\u003ch2 id=\"forking工作流\"\u003eForking工作流\u003c/h2\u003e\n\n\u003cp\u003eForking工作流(Forking Workflow)和其他工作流不同的地方在于，它是一种真正意义上的分布式工作流。\u003c/p\u003e\n\n\u003ch3 id=\"个人库-vs-官方库\"\u003e个人库 vs. 官方库\u003c/h3\u003e\n\n\u003cp\u003e这种工作流允许每个开发人员都拥有属于自己的远程Git库，而不是所有人集中共享一个远程库。每一个采用Forking工作流的项目都有一个唯一的官方远程库，其他人则从这个官方远程库fork出自己的个人远程库。\u003c/p\u003e\n\n\u003cp\u003e对于这两种远程库，我们在本地使用Git时，通常会为它们起相应的名字，比如：个人远程库习惯叫做\u003ccode class=\"language-plaintext highlighter-rouge\"\u003eorigin\u003c/code\u003e，官方远程库习惯叫做\u003ccode class=\"language-plaintext highlighter-rouge\"\u003eupstream\u003c/code\u003e。\u003c/p\u003e\n\n\u003ch3 id=\"fork-vs-clone\"\u003eFork vs. Clone\u003c/h3\u003e\n\n\u003cp\u003eGit里并没有提供专门的fork命令，fork作为一项功能，通常是由第三方的Git服务来提供的，比如像：Github，Bitbucket，Gitlab。实际上，fork就是标准的\u003ccode class=\"language-plaintext highlighter-rouge\"\u003egit clone\u003c/code\u003e，它把Git库保存的全部内容以及提交历史完整地复制了一遍。\u003c/p\u003e\n\n\u003cp\u003e和普通的clone有所不同的是，fork是发生在服务器上的Git库之间的复制。而普通的clone，则是把服务器上的Git库复制到本地。\u003c/p\u003e\n\n\u003ch3 id=\"参与者-vs-维护者\"\u003e参与者 vs. 维护者\u003c/h3\u003e\n\n\u003cp\u003e作为Forking工作流里出现的两类重要的角色，项目的参与者(Contributors)和维护者(Maintainers)，官方库面向所有的参与者开放只读权限，而只有维护者才对它具有写的权限。\u003c/p\u003e\n\n\u003cp\u003e这样做的好处在于，项目维护者不再需要单独为每一个想加入该项目的参与者手工进行授权了。因为大家都有只读权限，所以任何人只要把官方库fork成他自己的个人库，马上就可以开始工作。每个人对他自己的个人库是具有完全的读写权限的。\u003c/p\u003e\n\n\u003ch3 id=\"直接推送-vs-间接推送\"\u003e直接推送 vs. 间接推送\u003c/h3\u003e\n\n\u003cp\u003e项目参与者在自己的个人库里工作的时候，同样遵循Git的分支模型，也可以使用其他工作流，比如：特性分支工作流，Gitflow工作流等。但是和其他Git工作流不同的是，他们会把本地的提交先推送到自己的个人远程库，而不是直接推送到官方远程库。然后再通过发起Pull Request的方式，尝试把个人库里的内容合并到官方库。在这个过程中，可以和包括项目维护者在内的其他人针对要合并的内容进行审查和讨论。\u003c/p\u003e\n\n\u003ch3 id=\"灵活性\"\u003e灵活性\u003c/h3\u003e\n\n\u003cp\u003e这种方式，一方面赋予了项目参与者极大的自主权，他们不用等待项目维护者的代码评审结论，而是可以并行地在自己的个人库里继续他们的开发工作。如果fork出来的个人库不再需要了，甚至还可以直接把它删除掉。\u003c/p\u003e\n\n\u003cp\u003e另一方面，这也为项目维护者提供了充分的自由度，他们可以选择在任何时候决定是否接受来自其他参与者的提交，要不要推送到官方的远程库。\u003c/p\u003e\n\n\u003cp\u003e这样一来，包括参与者和维护者在内，所有人都可以在自己的独立空间里按照自己的节奏来工作。从而体现了极大的灵活性，非常适合大规模团队，或者是组织松散的异地团队进行协作开发，所以最常在开源项目里见到。\u003c/p\u003e\n\n\u003ch3 id=\"约束性\"\u003e约束性\u003c/h3\u003e\n\n\u003cp\u003e不仅如此，由于代码最终能够进入官方库的唯一渠道就是得到项目维护者的主动认可和推送，因为只有他们才具有对官方库的写权限。所以，尽管这种工作方式表面上看起来很松散，但实际上它依然具有很好的约束性，能够有效地保证项目的代码质量。\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"/assets/images/lab/git/git-workflow-7.png\" alt=\"\"/\u003e\u003c/p\u003e\n\n\u003ch2 id=\"如何工作\"\u003e如何工作\u003c/h2\u003e\n\n\u003cp\u003e相信大家在掌握了其他几种Git工作流以后，再来理解Forking工作流的工作方式，应该是非常容易的。下面列出大致的流程：\u003c/p\u003e\n\n\u003cul\u003e\n  \u003cli\u003e第一步，作为项目参与者的开发人员在开始工作之前，先从官方的远程库fork一份拷贝作为自己的私人远程库，然后再把私人远程库clone到本地，作为本地的私人开发环境；\u003c/li\u003e\n  \u003cli\u003e第二步，开发人员在本地可以继续使用其他Git工作流进行项目开发，比如：创建新的特性分支，并在分支上进行新特性的开发；\u003c/li\u003e\n  \u003cli\u003e第三步，开发人员把本地的提交推送到自己的个人远程库，作为工作备份，也作为和其他人协同工作的基础；\u003c/li\u003e\n  \u003cli\u003e第四步，如果已经准备好推送给官方的远程库，那就发起Pull Request，通知项目维护者进行代码复查；\u003c/li\u003e\n  \u003cli\u003e第五步，项目维护者把Pull Request涉及的变更抓取到本地，进行测试和验证。如果有问题，那就告之项目参与者继续修改。如果没有问题，也就是Pull Request审批通过了，那就合并到官方库的本地主分支，然后再推送到远程；\u003c/li\u003e\n  \u003cli\u003e第六步，所有人可以通过从官方远程库抓取变更的方式，把其他人刚刚合并的最新工作同步到本地；\u003c/li\u003e\n\u003c/ul\u003e\n\n        \n      \u003c/section\u003e\n\n      \u003cfooter class=\"page__meta\"\u003e\n        \n        \n  \n\n\n  \n\n  \u003cp class=\"page__taxonomy\"\u003e\n    \u003cstrong\u003e\u003ci class=\"fas fa-fw fa-tags\" aria-hidden=\"true\"\u003e\u003c/i\u003e 标签: \u003c/strong\u003e\n    \u003cspan itemprop=\"keywords\"\u003e\n    \n      \u003ca href=\"/tags/#dummies\" class=\"page__taxonomy-item p-category\" rel=\"tag\"\u003edummies\u003c/a\u003e\u003cspan class=\"sep\"\u003e, \u003c/span\u003e\n    \n      \u003ca href=\"/tags/#dummies-git\" class=\"page__taxonomy-item p-category\" rel=\"tag\"\u003edummies_git\u003c/a\u003e\u003cspan class=\"sep\"\u003e, \u003c/span\u003e\n    \n      \u003ca href=\"/tags/#git\" class=\"page__taxonomy-item p-category\" rel=\"tag\"\u003egit\u003c/a\u003e\u003cspan class=\"sep\"\u003e, \u003c/span\u003e\n    \n      \u003ca href=\"/tags/#lab\" class=\"page__taxonomy-item p-category\" rel=\"tag\"\u003elab\u003c/a\u003e\n    \n    \u003c/span\u003e\n  \u003c/p\u003e\n\n\n\n\n  \n\n\n  \n\n  \u003cp class=\"page__taxonomy\"\u003e\n    \u003cstrong\u003e\u003ci class=\"fas fa-fw fa-folder-open\" aria-hidden=\"true\"\u003e\u003c/i\u003e 分类: \u003c/strong\u003e\n    \u003cspan itemprop=\"keywords\"\u003e\n    \n      \u003ca href=\"/categories/#tech\" class=\"page__taxonomy-item p-category\" rel=\"tag\"\u003etech\u003c/a\u003e\n    \n    \u003c/span\u003e\n  \u003c/p\u003e\n\n\n        \n\n  \u003cp class=\"page__date\"\u003e\u003cstrong\u003e\u003ci class=\"fas fa-fw fa-calendar-alt\" aria-hidden=\"true\"\u003e\u003c/i\u003e 更新时间:\u003c/strong\u003e \u003ctime class=\"dt-published\" datetime=\"2021-02-20T00:00:00+08:00\"\u003eFebruary 20, 2021\u003c/time\u003e\u003c/p\u003e\n\n      \u003c/footer\u003e\n\n      \u003csection class=\"page__share\"\u003e\n  \n    \u003ch4 class=\"page__share-title\"\u003e分享\u003c/h4\u003e\n  \n\n  \u003ca href=\"https://twitter.com/intent/tweet?text=Git%E5%B7%A5%E4%BD%9C%E6%B5%81%E9%9D%A2%E9%9D%A2%E8%A7%82%E2%80%94%E2%80%94Forking%E5%B7%A5%E4%BD%9C%E6%B5%81%20https%3A%2F%2Fmorningspace.github.io%2Ftech%2Fgit-workflow-5%2F\" class=\"btn btn--twitter\" onclick=\"window.open(this.href, \u0026#39;window\u0026#39;, \u0026#39;left=20,top=20,width=500,height=500,toolbar=1,resizable=0\u0026#39;); return false;\" title=\"分享 Twitter\"\u003e\u003ci class=\"fab fa-fw fa-twitter\" aria-hidden=\"true\"\u003e\u003c/i\u003e\u003cspan\u003e Twitter\u003c/span\u003e\u003c/a\u003e\n\n  \u003ca href=\"https://www.facebook.com/sharer/sharer.php?u=https%3A%2F%2Fmorningspace.github.io%2Ftech%2Fgit-workflow-5%2F\" class=\"btn btn--facebook\" onclick=\"window.open(this.href, \u0026#39;window\u0026#39;, \u0026#39;left=20,top=20,width=500,height=500,toolbar=1,resizable=0\u0026#39;); return false;\" title=\"分享 Facebook\"\u003e\u003ci class=\"fab fa-fw fa-facebook\" aria-hidden=\"true\"\u003e\u003c/i\u003e\u003cspan\u003e Facebook\u003c/span\u003e\u003c/a\u003e\n\n  \u003ca href=\"https://www.linkedin.com/shareArticle?mini=true\u0026amp;url=https%3A%2F%2Fmorningspace.github.io%2Ftech%2Fgit-workflow-5%2F\" class=\"btn btn--linkedin\" onclick=\"window.open(this.href, \u0026#39;window\u0026#39;, \u0026#39;left=20,top=20,width=500,height=500,toolbar=1,resizable=0\u0026#39;); return false;\" title=\"分享 LinkedIn\"\u003e\u003ci class=\"fab fa-fw fa-linkedin\" aria-hidden=\"true\"\u003e\u003c/i\u003e\u003cspan\u003e LinkedIn\u003c/span\u003e\u003c/a\u003e\n\u003c/section\u003e\n\n\n      \n  \u003cnav class=\"pagination\"\u003e\n    \n      \u003ca href=\"/tech/git-workflow-4/\" class=\"pagination--pager\" title=\"Git工作流面面观——Gitflow工作流\n\"\u003e向前\u003c/a\u003e\n    \n    \n      \u003ca href=\"/tech/2021-relaunch/\" class=\"pagination--pager\" title=\"2021，重新出发\n\"\u003e向后\u003c/a\u003e\n    \n  \u003c/nav\u003e\n\n    \u003c/div\u003e",
  "Date": "2021-02-20T00:00:00+08:00",
  "Author": "MornigSpace"
}