{
  "Source": "morningspace",
  "Title": "Docker Registry CLI Tutorial - Basic Use",
  "Link": "https://morningspace.github.io/tech/reg-cli-tutorial-1/",
  "Content": "\u003cdiv class=\"page__inner-wrap\"\u003e\n      \n\n      \u003csection class=\"page__content e-content\" itemprop=\"text\"\u003e\n        \n          \u003caside class=\"sidebar__right sticky\"\u003e\n            \u003cnav class=\"toc\"\u003e\n              \u003cheader\u003e\u003ch4 class=\"nav__title\"\u003e\u003ci class=\"fas fa-file-alt\"\u003e\u003c/i\u003e 在本页上\u003c/h4\u003e\u003c/header\u003e\n              \u003cul class=\"toc__menu\"\u003e\u003cli\u003e\u003ca href=\"#what-is-it\"\u003eWhat is it?\u003c/a\u003e\u003c/li\u003e\u003cli\u003e\u003ca href=\"#why-different\"\u003eWhy different?\u003c/a\u003e\u003c/li\u003e\u003cli\u003e\u003ca href=\"#how-to-run\"\u003eHow to run?\u003c/a\u003e\u003c/li\u003e\u003cli\u003e\u003ca href=\"#copy-your-first-image\"\u003eCopy your first image\u003c/a\u003e\u003c/li\u003e\u003c/ul\u003e\n\n            \u003c/nav\u003e\n          \u003c/aside\u003e\n        \n        \u003cp\u003eThe open source project \u003ca href=\"https://github.com/morningspace/docker-registry-cli\"\u003eDocker Registry CLI\u003c/a\u003e is released by MorningSpace Studio! This post tells you the basic use.\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"/assets/images/studio/docker_registry.png\" alt=\"\"/\u003e\u003c/p\u003e\n\n\u003ch2 id=\"what-is-it\"\u003eWhat is it?\u003c/h2\u003e\n\n\u003cp\u003eIf you use Docker, you may know that \u003ca href=\"https://docs.docker.com/registry/\"\u003eDocker Registry\u003c/a\u003e is a service that is used to store Docker images. There are some popular public Docker registries, such as \u003ca href=\"https://hub.docker.com/\"\u003eDocker Hub\u003c/a\u003e, \u003ca href=\"https://quay.io/\"\u003eQuay\u003c/a\u003e, \u003ca href=\"https://cloud.google.com/container-registry/\"\u003eGoogle Container Registry\u003c/a\u003e，\u003ca href=\"https://aws.amazon.com/ecr/\"\u003eAWS Container Registry\u003c/a\u003e, etc. People can also build their own private Docker registry.\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://github.com/morningspace/docker-registry-cli\"\u003eDocker Registry CLI\u003c/a\u003e, is an open source command line utility written in Bash Shell to manage Docker registry.\u003c/p\u003e\n\n\u003ch2 id=\"why-different\"\u003eWhy different?\u003c/h2\u003e\n\n\u003cp\u003eThere are some \u003ca href=\"https://github.com/search?q=docker+registry+cli\u0026amp;type=Repositories\"\u003ealternatives\u003c/a\u003e that can be found on GitHub. Most of them are written in Go or Python. Here are some highlights to help you understand why Docker Registry CLI is different from others.\u003c/p\u003e\n\n\u003cul\u003e\n  \u003cli\u003e\u003cem\u003eCopy in batch\u003c/em\u003e: To copy images in batch is one interesting feature provided by the cli. It can be used to copy multiple images from different sources including both private and public registries to the target registry so that you can setup your own private registry easily.\u003c/li\u003e\n  \u003cli\u003e\u003cem\u003eBased on DIND\u003c/em\u003e: The cli provides a Docker image based on \u003ca href=\"https://github.com/jpetazzo/dind\"\u003eDIND(Docker-in-Docker)\u003c/a\u003e. By using DIND, not only the cli can be run inside container, it can even run docker commands in container without polluting the local registry cache on your host machine.\u003c/li\u003e\n  \u003cli\u003e\u003cem\u003eLess is more\u003c/em\u003e: With the combination of a very little set of commands and options, it provides quite a few features to manipulate the registry. See “\u003ca href=\"#how-to-use\"\u003eHow to Use\u003c/a\u003e” for details.\u003c/li\u003e\n  \u003cli\u003e\u003cem\u003eEasy to use\u003c/em\u003e: The design rationale behind the cli is to reference existing linux command syntax as much as possible. So, it’s fairly easy to learn and use if you are familiar with some ordinary linux commands such as \u003ccode class=\"language-plaintext highlighter-rouge\"\u003els\u003c/code\u003e, \u003ccode class=\"language-plaintext highlighter-rouge\"\u003erm\u003c/code\u003e, and \u003ccode class=\"language-plaintext highlighter-rouge\"\u003ecp\u003c/code\u003e.\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eNext, let’s start to look at how to use Docker Registry CLI to setup a private registry quickly. We will see how these highlights are reflected by going through the demo.\u003c/p\u003e\n\n\u003ch2 id=\"how-to-run\"\u003eHow to run?\u003c/h2\u003e\n\n\u003cp\u003eDocker Registry CLI can be run either inside or outside Docker container. It’s much easier to run inside container because it has all dependencies installed and a soft link created for the shell script so that you can run the cli from anywhere in container.\u003c/p\u003e\n\n\u003cp\u003eThe Docker Registry CLI image has been built and published to \u003ca href=\"https://cloud.docker.com/u/morningspace/repository/docker/morningspace/docker-registry-cli\"\u003eDocker Hub\u003c/a\u003e. So, you can pull it from there and use it.\u003c/p\u003e\n\n\u003cp\u003eAnother way to run the cli is to clone the \u003ca href=\"https://github.com/morningspace/docker-registry-cli\"\u003eGit repository\u003c/a\u003e directly to your local. Then use Docker Compose to run it. The \u003ccode class=\"language-plaintext highlighter-rouge\"\u003edocker-compose.yml\u003c/code\u003e file includes the cli with a Docker daemon wrapped as a container, and a simple private registry for testing purpose, where the hostname is \u003ccode class=\"language-plaintext highlighter-rouge\"\u003emr.io\u003c/code\u003e. In this post, we will use this approach to run the demo.\u003c/p\u003e\n\n\u003cp\u003eSo, let’s firstly start both the Docker daemon and the registry:\u003c/p\u003e\n\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003e$ \u003c/span\u003edocker-compose up \u003cspan class=\"nt\"\u003e-d\u003c/span\u003e\nCreating network \u003cspan class=\"s2\"\u003e\u0026#34;net-registry\u0026#34;\u003c/span\u003e with driver \u003cspan class=\"s2\"\u003e\u0026#34;bridge\u0026#34;\u003c/span\u003e\nCreating docker-registry-cli-v0_reg-cli_1_d4de93c59ec0 ... \u003cspan class=\"k\"\u003edone\n\u003c/span\u003eCreating mr.io                                         ... \u003cspan class=\"k\"\u003edone\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003eThen, launch another container to connect to the Docker daemon:\u003c/p\u003e\n\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003e$ \u003c/span\u003edocker-compose \u003cspan class=\"nb\"\u003eexec \u003c/span\u003ereg-cli bash\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003ch2 id=\"copy-your-first-image\"\u003eCopy your first image\u003c/h2\u003e\n\n\u003cp\u003eIn order to copy images to the registry, we need \u003ccode class=\"language-plaintext highlighter-rouge\"\u003ereg-cli cp\u003c/code\u003e. By running the command, it can copy images in batch from source registries including both public and private registries to the target registry.\u003c/p\u003e\n\n\u003cp\u003eLet’s copy the Docker Registry CLI image itself from Docker Hub to our \u003ccode class=\"language-plaintext highlighter-rouge\"\u003emr.io\u003c/code\u003e registry.\u003c/p\u003e\n\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003ebash-4.4# reg-cli \u003cspan class=\"nb\"\u003ecp \u003c/span\u003emorningspace/docker-registry-cli mr.io\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003eThen, let’s use \u003ccode class=\"language-plaintext highlighter-rouge\"\u003ereg-cli ls\u003c/code\u003e to list the catalog of \u003ccode class=\"language-plaintext highlighter-rouge\"\u003emr.io\u003c/code\u003e.\u003c/p\u003e\n\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003ebash-4.4# reg-cli \u003cspan class=\"nb\"\u003els \u003c/span\u003emr.io\nmr.io\n\u003cspan class=\"nt\"\u003e---------------------------------------\u003c/span\u003e\ndocker-registry-cli\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003eCongratulations! You’ve successfully copied your first image to \u003ccode class=\"language-plaintext highlighter-rouge\"\u003emr.io\u003c/code\u003e. Append the image name after \u003ccode class=\"language-plaintext highlighter-rouge\"\u003ereg-cli ls\u003c/code\u003e, we can list all tags of this image.\u003c/p\u003e\n\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003ebash-4.4# reg-cli \u003cspan class=\"nb\"\u003els \u003c/span\u003emr.io/docker-registry-cli\nmr.io/docker-registry-cli\n\u003cspan class=\"nt\"\u003e---------------------------------------\u003c/span\u003e\nlatest\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003eRight now, we only have the \u003ccode class=\"language-plaintext highlighter-rouge\"\u003elatest\u003c/code\u003e tag. We can also use \u003ccode class=\"language-plaintext highlighter-rouge\"\u003e-ld\u003c/code\u003e option to list digests for the image, and \u003ccode class=\"language-plaintext highlighter-rouge\"\u003e-lm\u003c/code\u003e option to list manifests for the image.\u003c/p\u003e\n\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003ebash-4.4# reg-cli \u003cspan class=\"nb\"\u003els \u003c/span\u003emr.io/docker-registry-cli \u003cspan class=\"nt\"\u003e-ld\u003c/span\u003e\nmr.io/docker-registry-cli\n\u003cspan class=\"nt\"\u003e---------------------------------------\u003c/span\u003e\nsha256:d1b110ad26922d45fce7baccd572ba35eef0412a0af8354177ae742d99718992 latest\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003ebash-4.4# reg-cli \u003cspan class=\"nb\"\u003els \u003c/span\u003emr.io/docker-registry-cli \u003cspan class=\"nt\"\u003e-lm\u003c/span\u003e\nmr.io/docker-registry-cli\n\u003cspan class=\"nt\"\u003e---------------------------------------\u003c/span\u003e\n\u003cspan class=\"o\"\u003e{\u003c/span\u003e\n   \u003cspan class=\"s2\"\u003e\u0026#34;schemaVersion\u0026#34;\u003c/span\u003e: 1,\n   \u003cspan class=\"s2\"\u003e\u0026#34;name\u0026#34;\u003c/span\u003e: \u003cspan class=\"s2\"\u003e\u0026#34;docker-registry-cli\u0026#34;\u003c/span\u003e,\n   \u003cspan class=\"s2\"\u003e\u0026#34;tag\u0026#34;\u003c/span\u003e: \u003cspan class=\"s2\"\u003e\u0026#34;latest\u0026#34;\u003c/span\u003e,\n   \u003cspan class=\"s2\"\u003e\u0026#34;architecture\u0026#34;\u003c/span\u003e: \u003cspan class=\"s2\"\u003e\u0026#34;amd64\u0026#34;\u003c/span\u003e,\n   \u003cspan class=\"s2\"\u003e\u0026#34;fsLayers\u0026#34;\u003c/span\u003e: \u003cspan class=\"o\"\u003e[\u003c/span\u003e\n     ...\n   \u003cspan class=\"o\"\u003e]\u003c/span\u003e,\n   \u003cspan class=\"s2\"\u003e\u0026#34;history\u0026#34;\u003c/span\u003e: \u003cspan class=\"o\"\u003e[\u003c/span\u003e\n     ...\n   \u003cspan class=\"o\"\u003e]\u003c/span\u003e,\n   \u003cspan class=\"s2\"\u003e\u0026#34;signatures\u0026#34;\u003c/span\u003e: \u003cspan class=\"o\"\u003e[\u003c/span\u003e\n     ...\n   \u003cspan class=\"o\"\u003e]\u003c/span\u003e\n\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003eAs we mentioned earlier, Docker Registry CLI image is based on \u003ca href=\"https://github.com/jpetazzo/dind\"\u003eDIND(Docker-in-Docker)\u003c/a\u003e, so we can run docker commands in the container. Actually, what \u003ccode class=\"language-plaintext highlighter-rouge\"\u003ereg-cli cp\u003c/code\u003e does is to run docker commands to finish the work. Let’s run \u003ccode class=\"language-plaintext highlighter-rouge\"\u003edocker images\u003c/code\u003e:\u003c/p\u003e\n\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003ebash-4.4# docker images\nREPOSITORY                         TAG                 IMAGE ID            CREATED             SIZE\nmorningspace/docker-registry-cli   latest              84f9cabf011f        10 hours ago        189MB\nmr.io/docker-registry-cli          latest              84f9cabf011f        10 hours ago        189MB\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003eAs you see, this is the image that we pulled from Docker Hub just now and the tagged one that’s going to be pushed to \u003ccode class=\"language-plaintext highlighter-rouge\"\u003emr.io\u003c/code\u003e. All these are invisible to the host machine. If you exist the container after get the work done, nothing will be left.\u003c/p\u003e\n\n\u003cp\u003e(To be continued)\u003c/p\u003e\n\n\u003chr/\u003e\n\u003cp\u003e\u003cem\u003eHave fun!\u003c/em\u003e\u003c/p\u003e\n\n\u003cp\u003e\u003cem\u003eMorningSpace Studio\u003c/em\u003e\u003c/p\u003e\n\n        \n      \u003c/section\u003e\n\n      \u003cfooter class=\"page__meta\"\u003e\n        \n        \n  \n\n\n  \n\n  \u003cp class=\"page__taxonomy\"\u003e\n    \u003cstrong\u003e\u003ci class=\"fas fa-fw fa-tags\" aria-hidden=\"true\"\u003e\u003c/i\u003e 标签: \u003c/strong\u003e\n    \u003cspan itemprop=\"keywords\"\u003e\n    \n      \u003ca href=\"/tags/#docker\" class=\"page__taxonomy-item p-category\" rel=\"tag\"\u003edocker\u003c/a\u003e\u003cspan class=\"sep\"\u003e, \u003c/span\u003e\n    \n      \u003ca href=\"/tags/#shell\" class=\"page__taxonomy-item p-category\" rel=\"tag\"\u003eshell\u003c/a\u003e\u003cspan class=\"sep\"\u003e, \u003c/span\u003e\n    \n      \u003ca href=\"/tags/#studio\" class=\"page__taxonomy-item p-category\" rel=\"tag\"\u003estudio\u003c/a\u003e\u003cspan class=\"sep\"\u003e, \u003c/span\u003e\n    \n      \u003ca href=\"/tags/#studio-reg-cli\" class=\"page__taxonomy-item p-category\" rel=\"tag\"\u003estudio-reg-cli\u003c/a\u003e\n    \n    \u003c/span\u003e\n  \u003c/p\u003e\n\n\n\n\n  \n\n\n  \n\n  \u003cp class=\"page__taxonomy\"\u003e\n    \u003cstrong\u003e\u003ci class=\"fas fa-fw fa-folder-open\" aria-hidden=\"true\"\u003e\u003c/i\u003e 分类: \u003c/strong\u003e\n    \u003cspan itemprop=\"keywords\"\u003e\n    \n      \u003ca href=\"/categories/#tech\" class=\"page__taxonomy-item p-category\" rel=\"tag\"\u003etech\u003c/a\u003e\n    \n    \u003c/span\u003e\n  \u003c/p\u003e\n\n\n        \n\n  \u003cp class=\"page__date\"\u003e\u003cstrong\u003e\u003ci class=\"fas fa-fw fa-calendar-alt\" aria-hidden=\"true\"\u003e\u003c/i\u003e 更新时间:\u003c/strong\u003e \u003ctime class=\"dt-published\" datetime=\"2019-06-01T00:00:00+08:00\"\u003eJune 1, 2019\u003c/time\u003e\u003c/p\u003e\n\n      \u003c/footer\u003e\n\n      \u003csection class=\"page__share\"\u003e\n  \n    \u003ch4 class=\"page__share-title\"\u003e分享\u003c/h4\u003e\n  \n\n  \u003ca href=\"https://twitter.com/intent/tweet?text=Docker+Registry+CLI+Tutorial+-+Basic+Use%20https%3A%2F%2Fmorningspace.github.io%2Ftech%2Freg-cli-tutorial-1%2F\" class=\"btn btn--twitter\" onclick=\"window.open(this.href, \u0026#39;window\u0026#39;, \u0026#39;left=20,top=20,width=500,height=500,toolbar=1,resizable=0\u0026#39;); return false;\" title=\"分享 Twitter\"\u003e\u003ci class=\"fab fa-fw fa-twitter\" aria-hidden=\"true\"\u003e\u003c/i\u003e\u003cspan\u003e Twitter\u003c/span\u003e\u003c/a\u003e\n\n  \u003ca href=\"https://www.facebook.com/sharer/sharer.php?u=https%3A%2F%2Fmorningspace.github.io%2Ftech%2Freg-cli-tutorial-1%2F\" class=\"btn btn--facebook\" onclick=\"window.open(this.href, \u0026#39;window\u0026#39;, \u0026#39;left=20,top=20,width=500,height=500,toolbar=1,resizable=0\u0026#39;); return false;\" title=\"分享 Facebook\"\u003e\u003ci class=\"fab fa-fw fa-facebook\" aria-hidden=\"true\"\u003e\u003c/i\u003e\u003cspan\u003e Facebook\u003c/span\u003e\u003c/a\u003e\n\n  \u003ca href=\"https://www.linkedin.com/shareArticle?mini=true\u0026amp;url=https%3A%2F%2Fmorningspace.github.io%2Ftech%2Freg-cli-tutorial-1%2F\" class=\"btn btn--linkedin\" onclick=\"window.open(this.href, \u0026#39;window\u0026#39;, \u0026#39;left=20,top=20,width=500,height=500,toolbar=1,resizable=0\u0026#39;); return false;\" title=\"分享 LinkedIn\"\u003e\u003ci class=\"fab fa-fw fa-linkedin\" aria-hidden=\"true\"\u003e\u003c/i\u003e\u003cspan\u003e LinkedIn\u003c/span\u003e\u003c/a\u003e\n\u003c/section\u003e\n\n\n      \n  \u003cnav class=\"pagination\"\u003e\n    \n      \u003ca href=\"/tech/use-docker-reg-cli-2/\" class=\"pagination--pager\" title=\"Docker Registry CLI轻松管理Docker注册表(下)\n\"\u003e向前\u003c/a\u003e\n    \n    \n      \u003ca href=\"/tech/reg-cli-tutorial-2/\" class=\"pagination--pager\" title=\"Docker Registry CLI Tutorial - More Use\n\"\u003e向后\u003c/a\u003e\n    \n  \u003c/nav\u003e\n\n    \u003c/div\u003e",
  "Date": "2019-06-01T00:00:00+08:00",
  "Author": "MornigSpace"
}