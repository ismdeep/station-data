{
  "Source": "morningspace",
  "Title": "Git合并那些事——Merge策略（上）",
  "Link": "https://morningspace.github.io/tech/git-merge-stories-2/",
  "Content": "\u003cdiv class=\"page__inner-wrap\"\u003e\n      \n\n      \u003csection class=\"page__content e-content\" itemprop=\"text\"\u003e\n        \n          \u003caside class=\"sidebar__right sticky\"\u003e\n            \u003cnav class=\"toc\"\u003e\n              \u003cheader\u003e\u003ch4 class=\"nav__title\"\u003e\u003ci class=\"fas fa-file-alt\"\u003e\u003c/i\u003e 在本页上\u003c/h4\u003e\u003c/header\u003e\n              \u003cul class=\"toc__menu\"\u003e\u003cli\u003e\u003ca href=\"#关于merge策略\"\u003e关于Merge策略\u003c/a\u003e\u003c/li\u003e\u003cli\u003e\u003ca href=\"#recursive策略\"\u003eRecursive策略\u003c/a\u003e\u003cul\u003e\u003cli\u003e\u003ca href=\"#criss-cross现象\"\u003eCriss-Cross现象\u003c/a\u003e\u003c/li\u003e\u003cli\u003e\u003ca href=\"#ours和theirs参数\"\u003eOurs和Theirs参数\u003c/a\u003e\u003c/li\u003e\u003c/ul\u003e\u003c/li\u003e\u003cli\u003e\u003ca href=\"#resolve策略\"\u003eResolve策略\u003c/a\u003e\u003c/li\u003e\u003cli\u003e\u003ca href=\"#ours策略\"\u003eOurs策略\u003c/a\u003e\u003c/li\u003e\u003c/ul\u003e\n\n            \u003c/nav\u003e\n          \u003c/aside\u003e\n        \n        \u003cblockquote\u003e\n  \u003cp\u003e多人开发中的合并冲突是我们使用Git时常常会遇到的情况，小小合并门道大，讲述合并的那些事儿，晴耕 · 白话之“Git合并那些事”系列​持续连载中……\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003e注：\n本文采用\u003ca rel=\"license\" href=\"http://creativecommons.org/licenses/by-sa/4.0/\"\u003e知识共享署名-相同方式共享 4.0 国际许可协议\u003c/a\u003e进行许可。\u003ca rel=\"license\" href=\"http://creativecommons.org/licenses/by-sa/4.0/\"\u003e\u003cimg alt=\"知识共享许可协议\" style=\"border-width:0\" src=\"https://i.creativecommons.org/l/by-sa/4.0/80x15.png\"/\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"/assets/images/lab/git/merge-strategies-1.png\" alt=\"\"/\u003e\u003c/p\u003e\n\n\u003ch2 id=\"关于merge策略\"\u003e关于Merge策略\u003c/h2\u003e\n\n\u003cp\u003e所谓Merge策略，是指Git在执行\u003ccode class=\"language-plaintext highlighter-rouge\"\u003egit merge\u003c/code\u003e命令时所能选择的合并策略。默认情况下，Git在合并分支时会自动选择最合适的Merge策略，我们也可以通过参数\u003ccode class=\"language-plaintext highlighter-rouge\"\u003e-s\u003c/code\u003e显式指定策略。不同的策略会对合并的方式与结果产生不同的影响，比如：对参与合并的分支，其“共同祖先（common ancestor）”的选择，以及在合并过程中发生冲突时的处理方式等。\u003c/p\u003e\n\n\u003cp\u003e对“共同祖先”这个概念还不了解的同学，不妨看一下\u003ca href=\"/tech/git-merge-stories-1\"\u003e《Git合并那些事儿——认识几种Merge方法》\u003c/a\u003e一文中有关Three-Way Merge的讨论。下面我们就来介绍一下常见的几种Merge策略。\u003c/p\u003e\n\n\u003ch2 id=\"recursive策略\"\u003eRecursive策略\u003c/h2\u003e\n\n\u003cp\u003eRecursive策略是Git在对两个分支进行合并时所采用的默认策略，它只适用于两个分支之间的合并。因此，对于超过两个分支的合并，需要反复地进行两两合并，才能最终完成所有分支的合并（这也是Recursive名字的由来）。本质上，Recursive就是一种Three-Way Merge。它的特点在于，如果Git在寻找共同祖先时，在参与合并的两个分支上找到了不只一个满足条件的共同祖先，它会先对共同祖先进行合并，建立临时快照。然后，把临时产生的“虚拟祖先”作为合并依据，再对分支进行合并。\u003c/p\u003e\n\n\u003cp\u003e如下图所示，在对两个分支上的提交A和B进行合并时，我们发现了它们有两个共同祖先，分别是：ancestor0和ancestor1。这个时候，Recursive策略会对ancestor0和ancestor1进行合并，临时创建一个虚拟祖先：ancestor2。用ancestor2与A，B一起进行Three-Way Merge。\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"/assets/images/lab/git/merge-stories-10.png\" alt=\"\"/\u003e\u003c/p\u003e\n\n\u003ch3 id=\"criss-cross现象\"\u003eCriss-Cross现象\u003c/h3\u003e\n\n\u003cp\u003e出现多个满足条件的共同祖先的现象被称为Criss-Cross现象。虽然它并不一定经常发生，但是对于那些存在时间很长，拓扑结构很复杂的分支，还是很有可能会出现的。下面我们就用一个例子来模拟一下Criss-Cross现象，并观察Recursive策略是怎么处理这种情况的。\u003c/p\u003e\n\n\u003cblockquote\u003e\n  \u003cp\u003e提示：接下来的过程可能会有点“烧脑”，所以建议最好照着下面的步骤实际操作一遍。不过如果你的脑子足够好使的话，也可以只在大脑里做做思维模拟:-)\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003e首先，我们新建一个本地Git库，叫做test-recursive-merge：\u003c/p\u003e\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003e$ \u003c/span\u003egit init test-recursive-merge\nInitialized empty Git repository \u003cspan class=\"k\"\u003ein\u003c/span\u003e /root/test-recursive-merge/.git/\n\u003cspan class=\"nv\"\u003e$ \u003c/span\u003e\u003cspan class=\"nb\"\u003ecd \u003c/span\u003etest-recursive-merge\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e在master分支上新建README文件：\u003c/p\u003e\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003e$ \u003c/span\u003evi README\n\u003cspan class=\"nv\"\u003e$ \u003c/span\u003e\u003cspan class=\"nb\"\u003ecat \u003c/span\u003eREADME\nMerge strategies include:\n\u003cspan class=\"k\"\u003e*\u003c/span\u003e Recursive\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e并建立提交记录c0：\u003c/p\u003e\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003e$ \u003c/span\u003egit add \u003cspan class=\"nb\"\u003e.\u003c/span\u003e\n\u003cspan class=\"nv\"\u003e$ \u003c/span\u003egit commit \u003cspan class=\"nt\"\u003e-m\u003c/span\u003e c0\n\u003cspan class=\"o\"\u003e[\u003c/span\u003emaster \u003cspan class=\"o\"\u003e(\u003c/span\u003eroot-commit\u003cspan class=\"o\"\u003e)\u003c/span\u003e 8937d6a] c0\n 1 file changed, 2 insertions\u003cspan class=\"o\"\u003e(\u003c/span\u003e+\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n create mode 100644 README\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e然后，我们切换到分支feature1开始特性开发：\u003c/p\u003e\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003e$ \u003c/span\u003egit checkout \u003cspan class=\"nt\"\u003e-b\u003c/span\u003e feature1\nSwitched to a new branch \u003cspan class=\"s1\"\u003e\u0026#39;feature1\u0026#39;\u003c/span\u003e\n\u003cspan class=\"nv\"\u003e$ \u003c/span\u003evi README\n\u003cspan class=\"nv\"\u003e$ \u003c/span\u003e\u003cspan class=\"nb\"\u003ecat \u003c/span\u003eREADME\nMerge strategies include:\n\u003cspan class=\"k\"\u003e*\u003c/span\u003e Recursive\n\u003cspan class=\"k\"\u003e*\u003c/span\u003e ...\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e并在上面建立提交记录c1：\u003c/p\u003e\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003e$ \u003c/span\u003egit commit \u003cspan class=\"nt\"\u003e-am\u003c/span\u003e c1\n\u003cspan class=\"o\"\u003e[\u003c/span\u003efeature1 39b06d9] c1\n 1 file changed, 1 insertion\u003cspan class=\"o\"\u003e(\u003c/span\u003e+\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e再回到master分支，继续在master分支上进行开发。这期间，假设我们引入了一个拼写错误，把include写成了includes：\u003c/p\u003e\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003e$ \u003c/span\u003egit checkout master\nSwitched to branch \u003cspan class=\"s1\"\u003e\u0026#39;master\u0026#39;\u003c/span\u003e\n\u003cspan class=\"nv\"\u003e$ \u003c/span\u003evi README\n\u003cspan class=\"nv\"\u003e$ \u003c/span\u003e\u003cspan class=\"nb\"\u003ecat \u003c/span\u003eREADME\nMerge strategies includes:\n\u003cspan class=\"k\"\u003e*\u003c/span\u003e Recursive\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e并建立了提交记录c2：\u003c/p\u003e\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003e$ \u003c/span\u003egit commit \u003cspan class=\"nt\"\u003e-am\u003c/span\u003e c2\n\u003cspan class=\"o\"\u003e[\u003c/span\u003emaster ff8acc9] c2\n 1 file changed, 1 insertion\u003cspan class=\"o\"\u003e(\u003c/span\u003e+\u003cspan class=\"o\"\u003e)\u003c/span\u003e, 1 deletion\u003cspan class=\"o\"\u003e(\u003c/span\u003e-\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e紧接着，我们又新开了一个分支feature2：\u003c/p\u003e\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003e$ \u003c/span\u003egit checkout \u003cspan class=\"nt\"\u003e-b\u003c/span\u003e feature2\nSwitched to a new branch \u003cspan class=\"s1\"\u003e\u0026#39;feature2\u0026#39;\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e在该分支上把feature1的修改合并了过来，并建立了提交记录c3：\u003c/p\u003e\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003e$ \u003c/span\u003egit merge \u003cspan class=\"nt\"\u003e-m\u003c/span\u003e c3 feature1\nAuto-merging README\nMerge made by the \u003cspan class=\"s1\"\u003e\u0026#39;recursive\u0026#39;\u003c/span\u003e strategy.\n README | 1 +\n 1 file changed, 1 insertion\u003cspan class=\"o\"\u003e(\u003c/span\u003e+\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n\u003cspan class=\"nv\"\u003e$ \u003c/span\u003e\u003cspan class=\"nb\"\u003ecat \u003c/span\u003eREADME\nMerge strategies includes:\n1\u003cspan class=\"o\"\u003e)\u003c/span\u003e Recursive\n2\u003cspan class=\"o\"\u003e)\u003c/span\u003e ...\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e这个时候，我们在feature2上的README既包含了在feature1上引入的正常修改，同时也包含了在master上引入的拼写错误。现在，假设我们发现了这个拼写错误。于是切换回master，改正了错误，并建立了提交记录c4：\u003c/p\u003e\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003e$ \u003c/span\u003egit checkout master\nSwitched to branch \u003cspan class=\"s1\"\u003e\u0026#39;master\u0026#39;\u003c/span\u003e\n\u003cspan class=\"nv\"\u003e$ \u003c/span\u003evi README\n\u003cspan class=\"nv\"\u003e$ \u003c/span\u003e\u003cspan class=\"nb\"\u003ecat \u003c/span\u003eREADME\nMerge strategies include:\n\u003cspan class=\"k\"\u003e*\u003c/span\u003e Recursive\n\u003cspan class=\"nv\"\u003e$ \u003c/span\u003egit commit \u003cspan class=\"nt\"\u003e-am\u003c/span\u003e c4\n\u003cspan class=\"o\"\u003e[\u003c/span\u003emaster c096f34] c4\n 1 file changed, 1 insertion\u003cspan class=\"o\"\u003e(\u003c/span\u003e+\u003cspan class=\"o\"\u003e)\u003c/span\u003e, 1 deletion\u003cspan class=\"o\"\u003e(\u003c/span\u003e-\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e如果我们此时把feature1上做的修改合并到master上：\u003c/p\u003e\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003e$ \u003c/span\u003egit merge \u003cspan class=\"nt\"\u003e-m\u003c/span\u003e c5 feature1\nMerge made by the \u003cspan class=\"s1\"\u003e\u0026#39;recursive\u0026#39;\u003c/span\u003e strategy.\n README | 1 +\n 1 file changed, 1 insertion\u003cspan class=\"o\"\u003e(\u003c/span\u003e+\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n\u003cspan class=\"nv\"\u003e$ \u003c/span\u003e\u003cspan class=\"nb\"\u003ecat \u003c/span\u003eREADME\nMerge strategies include:\n\u003cspan class=\"k\"\u003e*\u003c/span\u003e Recursive\n\u003cspan class=\"k\"\u003e*\u003c/span\u003e ...\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e然后用\u003ccode class=\"language-plaintext highlighter-rouge\"\u003egit log\u003c/code\u003e查看提交历史，就会发现，这个时候传说中的“Criss-Cross现象”出现了：\u003c/p\u003e\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003e$ \u003c/span\u003egit log \u003cspan class=\"nt\"\u003e--graph\u003c/span\u003e \u003cspan class=\"nt\"\u003e--oneline\u003c/span\u003e \u003cspan class=\"nt\"\u003e--all\u003c/span\u003e\n\u003cspan class=\"k\"\u003e*\u003c/span\u003e   1725ff2 \u003cspan class=\"o\"\u003e(\u003c/span\u003eHEAD -\u0026gt; master\u003cspan class=\"o\"\u003e)\u003c/span\u003e c5\n|\u003cspan class=\"se\"\u003e\\ \u003c/span\u003e \n\u003cspan class=\"k\"\u003e*\u003c/span\u003e | c096f34 c4\n| | \u003cspan class=\"k\"\u003e*\u003c/span\u003e   26dfc71 \u003cspan class=\"o\"\u003e(\u003c/span\u003efeature2\u003cspan class=\"o\"\u003e)\u003c/span\u003e c3\n| | |\u003cspan class=\"se\"\u003e\\ \u003c/span\u003e \n| |/ /  \n|/| /   \n| |/    \n| \u003cspan class=\"k\"\u003e*\u003c/span\u003e 39b06d9 \u003cspan class=\"o\"\u003e(\u003c/span\u003efeature1\u003cspan class=\"o\"\u003e)\u003c/span\u003e c1\n\u003cspan class=\"k\"\u003e*\u003c/span\u003e | ff8acc9 c2\n|/  \n\u003cspan class=\"k\"\u003e*\u003c/span\u003e 8937d6a c0\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e如图所示，c3和c5的共同祖先有两个，它们分别是c1和c2。\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"/assets/images/lab/git/merge-stories-11.png\" alt=\"\"/\u003e\u003c/p\u003e\n\n\u003cp\u003e这个时候，如果我们执行\u003ccode class=\"language-plaintext highlighter-rouge\"\u003egit merge-base\u003c/code\u003e命令，并传入master和feature2，即：寻找分支master和feature2的最佳共同祖先，则会得到两个结果，分别对应c1（39b06d9）和c2（ff8acc9）：\u003c/p\u003e\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003e$ \u003c/span\u003egit merge-base \u003cspan class=\"nt\"\u003e--all\u003c/span\u003e master feature2\n39b06d96f6d584d2a7d5b2caff21dc75d5d5075f\nff8acc923e2a4d7d09a8d42236a190d47ff38286\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e如果我们查看master和feature1，或者feature1和feature2的最佳共同祖先，则只会得到一个结果，对应c1（39b06d9）：\u003c/p\u003e\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003e$ \u003c/span\u003egit merge-base \u003cspan class=\"nt\"\u003e--all\u003c/span\u003e master feature1\n39b06d96f6d584d2a7d5b2caff21dc75d5d5075f\n\u003cspan class=\"nv\"\u003e$ \u003c/span\u003egit merge-base \u003cspan class=\"nt\"\u003e--all\u003c/span\u003e feature1 feature2\n39b06d96f6d584d2a7d5b2caff21dc75d5d5075f\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e当遇到这种情况时，如果我们想把feature2上的修改合并到master，Git会自动先合并c1和c2，为它们创建虚拟祖先，然后再对两个分支进行合并：\u003c/p\u003e\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003e$ \u003c/span\u003egit merge \u003cspan class=\"nt\"\u003e-m\u003c/span\u003e c6 feature2\nAlready up to \u003cspan class=\"nb\"\u003edate\u003c/span\u003e\u003cspan class=\"o\"\u003e!\u003c/span\u003e\nMerge made by the \u003cspan class=\"s1\"\u003e\u0026#39;recursive\u0026#39;\u003c/span\u003e strategy.\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e执行git log查看提交历史：\u003c/p\u003e\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003e$ \u003c/span\u003egit log \u003cspan class=\"nt\"\u003e--graph\u003c/span\u003e \u003cspan class=\"nt\"\u003e--oneline\u003c/span\u003e \u003cspan class=\"nt\"\u003e--all\u003c/span\u003e\n\u003cspan class=\"k\"\u003e*\u003c/span\u003e   0935c24 \u003cspan class=\"o\"\u003e(\u003c/span\u003eHEAD -\u0026gt; master\u003cspan class=\"o\"\u003e)\u003c/span\u003e c6\n|\u003cspan class=\"se\"\u003e\\ \u003c/span\u003e \n| \u003cspan class=\"k\"\u003e*\u003c/span\u003e   26dfc71 \u003cspan class=\"o\"\u003e(\u003c/span\u003efeature2\u003cspan class=\"o\"\u003e)\u003c/span\u003e c3\n| |\u003cspan class=\"se\"\u003e\\ \u003c/span\u003e \n\u003cspan class=\"k\"\u003e*\u003c/span\u003e | \u003cspan class=\"se\"\u003e\\ \u003c/span\u003e  1725ff2 c5\n|\u003cspan class=\"se\"\u003e\\ \\ \\ \u003c/span\u003e \n| | |/  \n| |/|   \n| \u003cspan class=\"k\"\u003e*\u003c/span\u003e | 39b06d9 \u003cspan class=\"o\"\u003e(\u003c/span\u003efeature1\u003cspan class=\"o\"\u003e)\u003c/span\u003e c1\n\u003cspan class=\"k\"\u003e*\u003c/span\u003e | | c096f34 c4\n| |/  \n|/|   \n\u003cspan class=\"k\"\u003e*\u003c/span\u003e | ff8acc9 c2\n|/  \n\u003cspan class=\"k\"\u003e*\u003c/span\u003e 8937d6a c0\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e如图所示，会看得更清楚些，c3和c5最终合并后生成了c6：\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"/assets/images/lab/git/merge-stories-12.png\" alt=\"\"/\u003e\u003c/p\u003e\n\n\u003ch3 id=\"ours和theirs参数\"\u003eOurs和Theirs参数\u003c/h3\u003e\n\n\u003cp\u003e在处理合并时，和其他某些Merge策略一样，Recursive策略通常会尽量自动完成合并。如果在合并过程中发现冲突，Git会在被合并的文件里插入冲突标记（merge conflict markers），并标记当前文件存在冲突，然后交由人工来处理。\u003c/p\u003e\n\n\u003cp\u003e不过，我们也可以通过指定参数告诉Git，当发生冲突时自动选择或丢弃其中一个分支上的修改。比如，假设我们要把分支B合并到分支A。如果指定参数\u003ccode class=\"language-plaintext highlighter-rouge\"\u003e-Xours\u003c/code\u003e，则表明丢弃分支B上的修改，保留当前分支A上的内容；指定参数\u003ccode class=\"language-plaintext highlighter-rouge\"\u003e-Xtheirs\u003c/code\u003e则刚好相反。\u003c/p\u003e\n\n\u003cp\u003e这里要注意的是，这两个参数只在发生冲突时起作用。而正常情况下，即没有发生冲突时，Git还是会帮我们自动完成合并的。关于这一点，在后面谈到Ours策略时可以做一个对比，两者在概念上比较容易混淆。\u003c/p\u003e\n\n\u003cp\u003e下面我们来做个实验加深理解。接着前面的例子，我们切换到feature1分支：\u003c/p\u003e\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003e$ \u003c/span\u003egit checkout feature1\nSwitched to branch \u003cspan class=\"s1\"\u003e\u0026#39;feature1\u0026#39;\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e对README文件做些修改：\u003c/p\u003e\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003e$ \u003c/span\u003evi README\n\u003cspan class=\"nv\"\u003e$ \u003c/span\u003egit diff README \ndiff \u003cspan class=\"nt\"\u003e--git\u003c/span\u003e a/README b/README\nindex f725440..1115275 100644\n\u003cspan class=\"nt\"\u003e---\u003c/span\u003e a/README\n+++ b/README\n@@ \u003cspan class=\"nt\"\u003e-1\u003c/span\u003e,3 +1,3 @@\n\u003cspan class=\"nt\"\u003e-Merge\u003c/span\u003e strategies include:\n+Git merge strategies include:\n \u003cspan class=\"k\"\u003e*\u003c/span\u003e Recursive\n-\u003cspan class=\"k\"\u003e*\u003c/span\u003e ...\n+\u003cspan class=\"k\"\u003e*\u003c/span\u003e and so on...\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e并建立提交记录c7：\u003c/p\u003e\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003e$ \u003c/span\u003egit commit \u003cspan class=\"nt\"\u003e-am\u003c/span\u003e c7\n\u003cspan class=\"o\"\u003e[\u003c/span\u003efeature1 9232cf1] c7\n 1 file changed, 2 insertions\u003cspan class=\"o\"\u003e(\u003c/span\u003e+\u003cspan class=\"o\"\u003e)\u003c/span\u003e, 2 deletions\u003cspan class=\"o\"\u003e(\u003c/span\u003e-\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e然后再切换回master分支：\u003c/p\u003e\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003e$ \u003c/span\u003egit checkout master\nSwitched to branch \u003cspan class=\"s1\"\u003e\u0026#39;master\u0026#39;\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e继续对README做修改：\u003c/p\u003e\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003e$ \u003c/span\u003evi README \n\u003cspan class=\"nv\"\u003e$ \u003c/span\u003egit diff README \ndiff \u003cspan class=\"nt\"\u003e--git\u003c/span\u003e a/README b/README\nindex f725440..9855509 100644\n\u003cspan class=\"nt\"\u003e---\u003c/span\u003e a/README\n+++ b/README\n@@ \u003cspan class=\"nt\"\u003e-1\u003c/span\u003e,3 +1,3 @@\n Merge strategies include:\n \u003cspan class=\"k\"\u003e*\u003c/span\u003e Recursive\n-\u003cspan class=\"k\"\u003e*\u003c/span\u003e ...\n+\u003cspan class=\"k\"\u003e*\u003c/span\u003e etc.\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e并建立提交记录c8：\u003c/p\u003e\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003e$ \u003c/span\u003egit commit \u003cspan class=\"nt\"\u003e-am\u003c/span\u003e c8\n\u003cspan class=\"o\"\u003e[\u003c/span\u003emaster 306f03a] c8\n 1 file changed, 1 insertion\u003cspan class=\"o\"\u003e(\u003c/span\u003e+\u003cspan class=\"o\"\u003e)\u003c/span\u003e, 1 deletion\u003cspan class=\"o\"\u003e(\u003c/span\u003e-\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e最后，我们把feature1上的修改合并到master：\u003c/p\u003e\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003e$ \u003c/span\u003egit merge feature1\nAuto-merging README\nCONFLICT \u003cspan class=\"o\"\u003e(\u003c/span\u003econtent\u003cspan class=\"o\"\u003e)\u003c/span\u003e: Merge conflict \u003cspan class=\"k\"\u003ein \u003c/span\u003eREADME\nAutomatic merge failed\u003cspan class=\"p\"\u003e;\u003c/span\u003e fix conflicts and \u003cspan class=\"k\"\u003ethen \u003c/span\u003ecommit the result.\n\u003cspan class=\"nv\"\u003e$ \u003c/span\u003e\u003cspan class=\"nb\"\u003ecat \u003c/span\u003eREADME \nGit merge strategies include:\n\u003cspan class=\"k\"\u003e*\u003c/span\u003e Recursive\n\u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u0026lt;\u0026lt;\u0026lt;\u0026lt;\u003c/span\u003e\u0026lt; HEAD\n\u003cspan class=\"k\"\u003e*\u003c/span\u003e etc.\n\u003cspan class=\"o\"\u003e=======\u003c/span\u003e\n\u003cspan class=\"k\"\u003e*\u003c/span\u003e and so on...\n\u003cspan class=\"o\"\u003e\u0026gt;\u0026gt;\u0026gt;\u0026gt;\u0026gt;\u0026gt;\u0026gt;\u003c/span\u003e feature1\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e可以看到，对于第一行，我们在feature1上的修改已经成功的被自动合并到master；而对于最后一行，由于我们在feature1和master上都做了修改。所以，Git无法进行自动合并，于是插入合并冲突标记，交由人工来处理。\u003c/p\u003e\n\n\u003cp\u003e我们可以看一下，假如指定\u003ccode class=\"language-plaintext highlighter-rouge\"\u003e-Xours\u003c/code\u003e参数会有什么效果。再次执行git merge之前，先使用\u003ccode class=\"language-plaintext highlighter-rouge\"\u003e--abort\u003c/code\u003e参数撤销当前合并：\u003c/p\u003e\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003e$ \u003c/span\u003egit merge \u003cspan class=\"nt\"\u003e--abort\u003c/span\u003e\n\u003cspan class=\"nv\"\u003e$ \u003c/span\u003e\u003cspan class=\"nb\"\u003ecat \u003c/span\u003eREADME \nMerge strategies include:\n\u003cspan class=\"k\"\u003e*\u003c/span\u003e Recursive\n\u003cspan class=\"k\"\u003e*\u003c/span\u003e etc.\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e然后执行\u003ccode class=\"language-plaintext highlighter-rouge\"\u003egit merge\u003c/code\u003e并指定\u003ccode class=\"language-plaintext highlighter-rouge\"\u003e-Xours\u003c/code\u003e参数：\u003c/p\u003e\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003e$ \u003c/span\u003egit merge \u003cspan class=\"nt\"\u003e-Xours\u003c/span\u003e \u003cspan class=\"nt\"\u003e-m\u003c/span\u003e c9 feature1\nAuto-merging README\nMerge made by the \u003cspan class=\"s1\"\u003e\u0026#39;recursive\u0026#39;\u003c/span\u003e strategy.\n README | 2 +-\n 1 file changed, 1 insertion\u003cspan class=\"o\"\u003e(\u003c/span\u003e+\u003cspan class=\"o\"\u003e)\u003c/span\u003e, 1 deletion\u003cspan class=\"o\"\u003e(\u003c/span\u003e-\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e利用git diff对比合并后的提交记录c9和之前的c8可以看到：对于第一行，因为不存在冲突，Git还是会帮我们自动完成合并；对于最后一行，由于存在合并冲突，而且我们选择的是保留当前分支（即：master）的版本，所以合并后的内容和上一个版本是一摸一样的：\u003c/p\u003e\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003e$ \u003c/span\u003egit diff HEAD^ HEAD\ndiff \u003cspan class=\"nt\"\u003e--git\u003c/span\u003e a/README b/README\nindex 9855509..c090928 100644\n\u003cspan class=\"nt\"\u003e---\u003c/span\u003e a/README\n+++ b/README\n@@ \u003cspan class=\"nt\"\u003e-1\u003c/span\u003e,3 +1,3 @@\n\u003cspan class=\"nt\"\u003e-Merge\u003c/span\u003e strategies include:\n+Git merge strategies include:\n \u003cspan class=\"k\"\u003e*\u003c/span\u003e Recursive\n \u003cspan class=\"k\"\u003e*\u003c/span\u003e etc.\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e假如指定\u003ccode class=\"language-plaintext highlighter-rouge\"\u003e-Xtheirs\u003c/code\u003e参数呢？让我们先回退到上次合并前的提交记录c8：\u003c/p\u003e\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003e$ \u003c/span\u003egit reset \u003cspan class=\"nt\"\u003e--hard\u003c/span\u003e HEAD^\nHEAD is now at 306f03a c8\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e然后再执行合并，并指定\u003ccode class=\"language-plaintext highlighter-rouge\"\u003e-Xtheirs\u003c/code\u003e参数：\u003c/p\u003e\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003e$ \u003c/span\u003egit merge \u003cspan class=\"nt\"\u003e-Xtheirs\u003c/span\u003e \u003cspan class=\"nt\"\u003e-m\u003c/span\u003e c9 feature1\nAuto-merging README\nMerge made by the \u003cspan class=\"s1\"\u003e\u0026#39;recursive\u0026#39;\u003c/span\u003e strategy.\n README | 4 ++--\n 1 file changed, 2 insertions\u003cspan class=\"o\"\u003e(\u003c/span\u003e+\u003cspan class=\"o\"\u003e)\u003c/span\u003e, 2 deletions\u003cspan class=\"o\"\u003e(\u003c/span\u003e-\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e这时的结果则刚好相反，合并产生冲突的部分保留了feature1分支的版本：\u003c/p\u003e\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003e$ \u003c/span\u003egit diff HEAD^ HEAD \ndiff \u003cspan class=\"nt\"\u003e--git\u003c/span\u003e a/README b/README\nindex 9855509..1115275 100644\n\u003cspan class=\"nt\"\u003e---\u003c/span\u003e a/README\n+++ b/README\n@@ \u003cspan class=\"nt\"\u003e-1\u003c/span\u003e,3 +1,3 @@\n\u003cspan class=\"nt\"\u003e-Merge\u003c/span\u003e strategies include:\n+Git merge strategies include:\n \u003cspan class=\"k\"\u003e*\u003c/span\u003e Recursive\n-\u003cspan class=\"k\"\u003e*\u003c/span\u003e etc.\n+\u003cspan class=\"k\"\u003e*\u003c/span\u003e and so on...\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003ch2 id=\"resolve策略\"\u003eResolve策略\u003c/h2\u003e\n\n\u003cp\u003e和Recursive策略类似，Resolve策略是另一种解决两个分支间合并问题的策略，同样也是采用的Three-Way Merge算法。关于它的介绍，网络上资料不多。只知道它是在Recursive策略出现之前，Git合并时所采用的默认策略。和Recursive策略不同的是，它在处理Criss-Cross情况时，会在多个满足条件的共同祖先里选取其中一个作为合并的基础（称为Merge Base）。在某些情况下，如果使用Recursive策略作为默认策略进行合并时遇到了问题，也可以尝试选择Resolve策略。\u003c/p\u003e\n\n\u003ch2 id=\"ours策略\"\u003eOurs策略\u003c/h2\u003e\n\n\u003cp\u003e前面提到了，如果在使用Recursive策略时指定\u003ccode class=\"language-plaintext highlighter-rouge\"\u003e-Xours\u003c/code\u003e参数，那么当发生冲突时，Git会选择丢弃来自被合并分支的修改，而保留被当前分支上的原有修改。这种情况只在有冲突时才会发生，如果没有冲突，Git还是会帮我们自动完成合并的。\u003c/p\u003e\n\n\u003cp\u003e与之不同的是，Ours策略无论有没有冲突发生，都会毫不犹豫的丢弃来自被合并分支的修改，完整保留当前分支上的修改。所以，对于Ours策略而言，实质上根本就没有做任何真正意义上的合并，或者说做的是假合并（fake merge）。不过，从提交历史上看，Git依然会创建一个新的合并提交（merge commit），并让它的parent分别指向参与合并的两个分支上的提交记录。\u003c/p\u003e\n\n\u003cp\u003e接着前面的例子，我们继续通过实验来加深理解。先回退到上次合并前的提交记录c8：\u003c/p\u003e\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003e$ \u003c/span\u003egit reset \u003cspan class=\"nt\"\u003e--hard\u003c/span\u003e HEAD^\nHEAD is now at 306f03a c8\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e在当前分支master上执行\u003ccode class=\"language-plaintext highlighter-rouge\"\u003egit merge\u003c/code\u003e，并指定Ours作为合并策略：\u003c/p\u003e\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003e$ \u003c/span\u003egit merge \u003cspan class=\"nt\"\u003e-s\u003c/span\u003e ours \u003cspan class=\"nt\"\u003e-m\u003c/span\u003e c9 feature1\nMerge made by the \u003cspan class=\"s1\"\u003e\u0026#39;ours\u0026#39;\u003c/span\u003e strategy.\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e查看提交历史会发现，master分支上多了一个提交记录c9：\u003c/p\u003e\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003e$ \u003c/span\u003egit log \u003cspan class=\"nt\"\u003e--oneline\u003c/span\u003e \u003cspan class=\"nt\"\u003e--graph\u003c/span\u003e \u003cspan class=\"nt\"\u003e--all\u003c/span\u003e\n\u003cspan class=\"k\"\u003e*\u003c/span\u003e   e9d35fd \u003cspan class=\"o\"\u003e(\u003c/span\u003eHEAD -\u0026gt; master\u003cspan class=\"o\"\u003e)\u003c/span\u003e c9\n|\u003cspan class=\"se\"\u003e\\ \u003c/span\u003e \n| \u003cspan class=\"k\"\u003e*\u003c/span\u003e 9232cf1 \u003cspan class=\"o\"\u003e(\u003c/span\u003efeature1\u003cspan class=\"o\"\u003e)\u003c/span\u003e c7\n\u003cspan class=\"k\"\u003e*\u003c/span\u003e | 306f03a c8\n\u003cspan class=\"k\"\u003e*\u003c/span\u003e |   0935c24 c6\n|\u003cspan class=\"se\"\u003e\\ \\ \u003c/span\u003e \n| |/  \n|/|   \n| \u003cspan class=\"k\"\u003e*\u003c/span\u003e   26dfc71 \u003cspan class=\"o\"\u003e(\u003c/span\u003efeature2\u003cspan class=\"o\"\u003e)\u003c/span\u003e c3\n| |\u003cspan class=\"se\"\u003e\\ \u003c/span\u003e \n\u003cspan class=\"k\"\u003e*\u003c/span\u003e | \u003cspan class=\"se\"\u003e\\ \u003c/span\u003e  1725ff2 c5\n|\u003cspan class=\"se\"\u003e\\ \\ \\ \u003c/span\u003e \n| | |/  \n| |/|   \n| \u003cspan class=\"k\"\u003e*\u003c/span\u003e | 39b06d9 c1\n\u003cspan class=\"k\"\u003e*\u003c/span\u003e | | c096f34 c4\n| |/  \n|/|   \n\u003cspan class=\"k\"\u003e*\u003c/span\u003e | ff8acc9 c2\n|/  \n\u003cspan class=\"k\"\u003e*\u003c/span\u003e 8937d6a c0\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e但对比合并前后的提交记录：c8和c9，却没有发现任何差异，两者内容是完全一样的：\u003c/p\u003e\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003e$ \u003c/span\u003egit diff HEAD^ HEAD\n\u003cspan class=\"err\"\u003e$\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003eOK，今天就到这里了。在接下来的一篇文章里，我们将继续学习Git的另外几种合并策略，比如Octopus策略，还有Subtree策略。我们下次再见！\u003c/p\u003e\n\n        \n      \u003c/section\u003e\n\n      \u003cfooter class=\"page__meta\"\u003e\n        \n        \n  \n\n\n  \n\n  \u003cp class=\"page__taxonomy\"\u003e\n    \u003cstrong\u003e\u003ci class=\"fas fa-fw fa-tags\" aria-hidden=\"true\"\u003e\u003c/i\u003e 标签: \u003c/strong\u003e\n    \u003cspan itemprop=\"keywords\"\u003e\n    \n      \u003ca href=\"/tags/#dummies\" class=\"page__taxonomy-item p-category\" rel=\"tag\"\u003edummies\u003c/a\u003e\u003cspan class=\"sep\"\u003e, \u003c/span\u003e\n    \n      \u003ca href=\"/tags/#dummies-git\" class=\"page__taxonomy-item p-category\" rel=\"tag\"\u003edummies_git\u003c/a\u003e\u003cspan class=\"sep\"\u003e, \u003c/span\u003e\n    \n      \u003ca href=\"/tags/#git\" class=\"page__taxonomy-item p-category\" rel=\"tag\"\u003egit\u003c/a\u003e\u003cspan class=\"sep\"\u003e, \u003c/span\u003e\n    \n      \u003ca href=\"/tags/#lab\" class=\"page__taxonomy-item p-category\" rel=\"tag\"\u003elab\u003c/a\u003e\n    \n    \u003c/span\u003e\n  \u003c/p\u003e\n\n\n\n\n  \n\n\n  \n\n  \u003cp class=\"page__taxonomy\"\u003e\n    \u003cstrong\u003e\u003ci class=\"fas fa-fw fa-folder-open\" aria-hidden=\"true\"\u003e\u003c/i\u003e 分类: \u003c/strong\u003e\n    \u003cspan itemprop=\"keywords\"\u003e\n    \n      \u003ca href=\"/categories/#tech\" class=\"page__taxonomy-item p-category\" rel=\"tag\"\u003etech\u003c/a\u003e\n    \n    \u003c/span\u003e\n  \u003c/p\u003e\n\n\n        \n\n  \u003cp class=\"page__date\"\u003e\u003cstrong\u003e\u003ci class=\"fas fa-fw fa-calendar-alt\" aria-hidden=\"true\"\u003e\u003c/i\u003e 更新时间:\u003c/strong\u003e \u003ctime class=\"dt-published\" datetime=\"2019-08-26T00:00:00+08:00\"\u003eAugust 26, 2019\u003c/time\u003e\u003c/p\u003e\n\n      \u003c/footer\u003e\n\n      \u003csection class=\"page__share\"\u003e\n  \n    \u003ch4 class=\"page__share-title\"\u003e分享\u003c/h4\u003e\n  \n\n  \u003ca href=\"https://twitter.com/intent/tweet?text=Git%E5%90%88%E5%B9%B6%E9%82%A3%E4%BA%9B%E4%BA%8B%E2%80%94%E2%80%94Merge%E7%AD%96%E7%95%A5%EF%BC%88%E4%B8%8A%EF%BC%89%20https%3A%2F%2Fmorningspace.github.io%2Ftech%2Fgit-merge-stories-2%2F\" class=\"btn btn--twitter\" onclick=\"window.open(this.href, \u0026#39;window\u0026#39;, \u0026#39;left=20,top=20,width=500,height=500,toolbar=1,resizable=0\u0026#39;); return false;\" title=\"分享 Twitter\"\u003e\u003ci class=\"fab fa-fw fa-twitter\" aria-hidden=\"true\"\u003e\u003c/i\u003e\u003cspan\u003e Twitter\u003c/span\u003e\u003c/a\u003e\n\n  \u003ca href=\"https://www.facebook.com/sharer/sharer.php?u=https%3A%2F%2Fmorningspace.github.io%2Ftech%2Fgit-merge-stories-2%2F\" class=\"btn btn--facebook\" onclick=\"window.open(this.href, \u0026#39;window\u0026#39;, \u0026#39;left=20,top=20,width=500,height=500,toolbar=1,resizable=0\u0026#39;); return false;\" title=\"分享 Facebook\"\u003e\u003ci class=\"fab fa-fw fa-facebook\" aria-hidden=\"true\"\u003e\u003c/i\u003e\u003cspan\u003e Facebook\u003c/span\u003e\u003c/a\u003e\n\n  \u003ca href=\"https://www.linkedin.com/shareArticle?mini=true\u0026amp;url=https%3A%2F%2Fmorningspace.github.io%2Ftech%2Fgit-merge-stories-2%2F\" class=\"btn btn--linkedin\" onclick=\"window.open(this.href, \u0026#39;window\u0026#39;, \u0026#39;left=20,top=20,width=500,height=500,toolbar=1,resizable=0\u0026#39;); return false;\" title=\"分享 LinkedIn\"\u003e\u003ci class=\"fab fa-fw fa-linkedin\" aria-hidden=\"true\"\u003e\u003c/i\u003e\u003cspan\u003e LinkedIn\u003c/span\u003e\u003c/a\u003e\n\u003c/section\u003e\n\n\n      \n  \u003cnav class=\"pagination\"\u003e\n    \n      \u003ca href=\"/tech/git-merge-stories-1/\" class=\"pagination--pager\" title=\"Git合并那些事——认识几种Merge方法\n\"\u003e向前\u003c/a\u003e\n    \n    \n      \u003ca href=\"/tech/git-merge-stories-3/\" class=\"pagination--pager\" title=\"Git合并那些事——Merge策略（下）\n\"\u003e向后\u003c/a\u003e\n    \n  \u003c/nav\u003e\n\n    \u003c/div\u003e",
  "Date": "2019-08-26T00:00:00+08:00",
  "Author": "MornigSpace"
}