{
  "Source": "morningspace",
  "Title": "高效使用KubeAssert",
  "Link": "https://morningspace.github.io/tech/kubeassert-2/",
  "Content": "\u003cdiv class=\"page__inner-wrap\"\u003e\n      \n\n      \u003csection class=\"page__content e-content\" itemprop=\"text\"\u003e\n        \n          \u003caside class=\"sidebar__right sticky\"\u003e\n            \u003cnav class=\"toc\"\u003e\n              \u003cheader\u003e\u003ch4 class=\"nav__title\"\u003e\u003ci class=\"fas fa-file-alt\"\u003e\u003c/i\u003e 在本页上\u003c/h4\u003e\u003c/header\u003e\n              \u003cul class=\"toc__menu\"\u003e\u003cli\u003e\u003ca href=\"#使用多个label及field-selector\"\u003e使用多个Label及Field Selector\u003c/a\u003e\u003c/li\u003e\u003cli\u003e\u003ca href=\"#使用增强的field-selector\"\u003e使用增强的Field Selector\u003c/a\u003e\u003c/li\u003e\u003cli\u003e\u003ca href=\"#验证pod的状态\"\u003e验证Pod的状态\u003c/a\u003e\u003c/li\u003e\u003cli\u003e\u003ca href=\"#检查处于terminating状态的对象\"\u003e检查处于Terminating状态的对象\u003c/a\u003e\u003c/li\u003e\u003cli\u003e\u003ca href=\"#小结\"\u003e小结\u003c/a\u003e\u003c/li\u003e\u003c/ul\u003e\n\n            \u003c/nav\u003e\n          \u003c/aside\u003e\n        \n        \u003cblockquote\u003e\n  \u003cp\u003eKubeAssert是一个kubectl插件，用于在命令行声明针对Kubernetes资源的断言（assertion）。KubeAssert是一个位于\u003ca href=\"https://github.com/morningspace/kubeassert\"\u003eGitHub\u003c/a\u003e上的开源项目。\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003e\u003cimg src=\"/assets/images/studio/kubeassert/kubeassert-2.png\" alt=\"\"/\u003e\u003c/p\u003e\n\n\u003cp\u003e作为KubeAssert系列文章的第二篇，本文将和大家分享一些有关KubeAssert使用的技巧。\u003c/p\u003e\n\n\u003ch2 id=\"使用多个label及field-selector\"\u003e使用多个Label及Field Selector\u003c/h2\u003e\n\n\u003cp\u003e当使用像\u003ccode class=\"language-plaintext highlighter-rouge\"\u003eexist\u003c/code\u003e或\u003ccode class=\"language-plaintext highlighter-rouge\"\u003enot-exist\u003c/code\u003e这样的断言，对Kubernetes资源进行验证时，我们可以利用label selector或field selector对返回的查询结果进行过滤。例如，为了验证foo namespace下存在标签\u003ccode class=\"language-plaintext highlighter-rouge\"\u003eapp\u003c/code\u003e值为\u003ccode class=\"language-plaintext highlighter-rouge\"\u003eecho\u003c/code\u003e的pod，且处于\u003ccode class=\"language-plaintext highlighter-rouge\"\u003eRunning\u003c/code\u003e状态，我们可以采用下面的断言，并同时指定label selector和field selector：\u003c/p\u003e\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003ekubectl assert exist pods \u003cspan class=\"se\"\u003e\\\u003c/span\u003e\n  \u003cspan class=\"nt\"\u003e-l\u003c/span\u003e \u003cspan class=\"nv\"\u003eapp\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"nb\"\u003eecho\u003c/span\u003e \u003cspan class=\"nt\"\u003e--field-selector\u003c/span\u003e status.phase\u003cspan class=\"o\"\u003e=\u003c/span\u003eRunning \u003cspan class=\"nt\"\u003e-n\u003c/span\u003e foo\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e我们还可以在同一个断言里根据需要同时指定多个label及field selector。例如，为了验证位于指定namespace下的处于\u003ccode class=\"language-plaintext highlighter-rouge\"\u003eRunning\u003c/code\u003e状态的pod同时满足多个标签及其取值，我们可以这样声明断言：\u003c/p\u003e\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003ekubectl assert exist pods \u003cspan class=\"nt\"\u003e-l\u003c/span\u003e \u003cspan class=\"nv\"\u003eapp\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"nb\"\u003eecho\u003c/span\u003e \u003cspan class=\"nt\"\u003e-l\u003c/span\u003e \u003cspan class=\"nv\"\u003ecomponent\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003eproxy \u003cspan class=\"se\"\u003e\\\u003c/span\u003e\n  \u003cspan class=\"nt\"\u003e--field-selector\u003c/span\u003e metadata.namespace\u003cspan class=\"o\"\u003e==\u003c/span\u003efoo \u003cspan class=\"se\"\u003e\\\u003c/span\u003e\n  \u003cspan class=\"nt\"\u003e--field-selector\u003c/span\u003e status.phase\u003cspan class=\"o\"\u003e=\u003c/span\u003eRunning \u003cspan class=\"se\"\u003e\\\u003c/span\u003e\n  \u003cspan class=\"nt\"\u003e--all-namespaces\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e或者，我们也可以用一个\u003ccode class=\"language-plaintext highlighter-rouge\"\u003e-l\u003c/code\u003e或\u003ccode class=\"language-plaintext highlighter-rouge\"\u003e--field-selector\u003c/code\u003e参数后跟一个逗号分隔的列表，达到同样的效果。例如，下面的断言和之前的断言效果一样，但看起来更加紧凑：\u003c/p\u003e\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003ekubectl assert exist pods \u003cspan class=\"nt\"\u003e-l\u003c/span\u003e \u003cspan class=\"nv\"\u003eapp\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"nb\"\u003eecho\u003c/span\u003e,component\u003cspan class=\"o\"\u003e=\u003c/span\u003eproxy \u003cspan class=\"se\"\u003e\\\u003c/span\u003e\n  \u003cspan class=\"nt\"\u003e--field-selector\u003c/span\u003e metadata.namespace\u003cspan class=\"o\"\u003e==\u003c/span\u003efoo,status.phase\u003cspan class=\"o\"\u003e=\u003c/span\u003eRunning \u003cspan class=\"se\"\u003e\\\u003c/span\u003e\n  \u003cspan class=\"nt\"\u003e--all-namespaces\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003ch2 id=\"使用增强的field-selector\"\u003e使用增强的Field Selector\u003c/h2\u003e\n\n\u003cp\u003e当使用\u003ccode class=\"language-plaintext highlighter-rouge\"\u003eexist\u003c/code\u003e或\u003ccode class=\"language-plaintext highlighter-rouge\"\u003enot-exist\u003c/code\u003e断言对Kubernetes资源进行验证时，尽管我们可以通过指定field selector对查询结果进行过滤，但是这种field selector的功能是非常受限的。这是因为\u003ccode class=\"language-plaintext highlighter-rouge\"\u003eexist\u003c/code\u003e和\u003ccode class=\"language-plaintext highlighter-rouge\"\u003enot-exist\u003c/code\u003e在底层都是利用\u003ccode class=\"language-plaintext highlighter-rouge\"\u003ekubectl get\u003c/code\u003e来实现针对资源的查询的，并且它们都是直接用的由kubectl提供的原生\u003ccode class=\"language-plaintext highlighter-rouge\"\u003e--field-selector\u003c/code\u003e参数。但是根据Kubernetes官方文档，这种通过字段进行过滤的操作是在服务器端完成的，而且Kubernetes在服务器端根据资源类型的不同，只支持非常有限的字段查询能力。举个例子，当对pod声明断言时，我们可以使用field selector针对\u003ccode class=\"language-plaintext highlighter-rouge\"\u003estatus\u003c/code\u003e下的某些字段进行过滤查询。但是同样的过滤条件对于deployment却不适用：\u003c/p\u003e\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003ekubectl assert exist deployments \u003cspan class=\"nt\"\u003e-l\u003c/span\u003e \u003cspan class=\"nv\"\u003eapp\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"nb\"\u003eecho\u003c/span\u003e \u003cspan class=\"nt\"\u003e--field-selector\u003c/span\u003e status.replicas\u003cspan class=\"o\"\u003e=\u003c/span\u003e1\nASSERT deployments matching label criteria \u003cspan class=\"s1\"\u003e\u0026#39;app=echo\u0026#39;\u003c/span\u003e and field criteria \u003cspan class=\"s1\"\u003e\u0026#39;status.replicas=1\u0026#39;\u003c/span\u003e should exist.\nError from server \u003cspan class=\"o\"\u003e(\u003c/span\u003eBadRequest\u003cspan class=\"o\"\u003e)\u003c/span\u003e: Unable to find \u003cspan class=\"s2\"\u003e\u0026#34;extensions/v1beta1, Resource=deployments\u0026#34;\u003c/span\u003e that match label selector \u003cspan class=\"s2\"\u003e\u0026#34;app=echo\u0026#34;\u003c/span\u003e, field selector \u003cspan class=\"s2\"\u003e\u0026#34;status.replicas=1\u0026#34;\u003c/span\u003e: \u003cspan class=\"s2\"\u003e\u0026#34;status.replicas\u0026#34;\u003c/span\u003e is not a known field selector: only \u003cspan class=\"s2\"\u003e\u0026#34;metadata.name\u0026#34;\u003c/span\u003e, \u003cspan class=\"s2\"\u003e\u0026#34;metadata.namespace\u0026#34;\u003c/span\u003e\nASSERT FAIL Error getting resource\u003cspan class=\"o\"\u003e(\u003c/span\u003es\u003cspan class=\"o\"\u003e)\u003c/span\u003e\u003cspan class=\"nb\"\u003e.\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e由于这个原因，KubeAssert提供了两个额外的断言，\u003ccode class=\"language-plaintext highlighter-rouge\"\u003eexist-enhanced\u003c/code\u003e和\u003ccode class=\"language-plaintext highlighter-rouge\"\u003enot-exist-enhanced\u003c/code\u003e，它们提供了和\u003ccode class=\"language-plaintext highlighter-rouge\"\u003eexist\u003c/code\u003e以及\u003ccode class=\"language-plaintext highlighter-rouge\"\u003enot-exist\u003c/code\u003e同样的功能，但是对field selector做了增强。因此，我们可以将上述针对deployment的断言改写如下：\u003c/p\u003e\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003ekubectl assert exist-enhanced deployments \u003cspan class=\"nt\"\u003e-l\u003c/span\u003e \u003cspan class=\"nv\"\u003eapp\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"nb\"\u003eecho\u003c/span\u003e \u003cspan class=\"nt\"\u003e--field-selector\u003c/span\u003e status.replicas\u003cspan class=\"o\"\u003e=\u003c/span\u003e1\nASSERT deployments matching label criteria \u003cspan class=\"s1\"\u003e\u0026#39;app=echo\u0026#39;\u003c/span\u003e and field criteria \u003cspan class=\"s1\"\u003e\u0026#39;status.replicas=1\u0026#39;\u003c/span\u003e should exist.\nINFO   Found 1 resource\u003cspan class=\"o\"\u003e(\u003c/span\u003es\u003cspan class=\"o\"\u003e)\u003c/span\u003e\u003cspan class=\"nb\"\u003e.\u003c/span\u003e\nNAME   NAMESPACE   COL0\n\u003cspan class=\"nb\"\u003eecho   \u003c/span\u003edefault     1\nASSERT PASS\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e原生的field selector支持\u003ccode class=\"language-plaintext highlighter-rouge\"\u003e=\u003c/code\u003e，\u003ccode class=\"language-plaintext highlighter-rouge\"\u003e==\u003c/code\u003e，以及\u003ccode class=\"language-plaintext highlighter-rouge\"\u003e!=\u003c/code\u003e操作符，其中\u003ccode class=\"language-plaintext highlighter-rouge\"\u003e=\u003c/code\u003e和\u003ccode class=\"language-plaintext highlighter-rouge\"\u003e==\u003c/code\u003e含义相同。而经过增强的field selector除了支持这些操作符以外，甚至还支持正则表达式匹配符\u003ccode class=\"language-plaintext highlighter-rouge\"\u003e=~\u003c/code\u003e。这使得我们在定义field selector时变得更加灵活和强大。下面是几个例子：\u003c/p\u003e\n\n\u003cp\u003e验证foo namespace下的service account是否包含指定的secret：\u003c/p\u003e\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003ekubectl assert exist-enhanced serviceaccounts \u003cspan class=\"nt\"\u003e--field-selector\u003c/span\u003e \u003cspan class=\"s1\"\u003e\u0026#39;secrets[*].name=~my-secret\u0026#39;\u003c/span\u003e \u003cspan class=\"nt\"\u003e-n\u003c/span\u003e foo\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e验证某个custom resource的status下面，至少有一个condition，其type的取值为\u003ccode class=\"language-plaintext highlighter-rouge\"\u003eDeployed\u003c/code\u003e：\u003c/p\u003e\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003ekubectl assert exist-enhanced MyResources \u003cspan class=\"nt\"\u003e--field-selector\u003c/span\u003e \u003cspan class=\"s1\"\u003e\u0026#39;status.conditions[*].type=~Deployed\u0026#39;\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e验证某个custom resource的所有实例名都是以\u003ccode class=\"language-plaintext highlighter-rouge\"\u003efoo\u003c/code\u003e，\u003ccode class=\"language-plaintext highlighter-rouge\"\u003ebar\u003c/code\u003e，或\u003ccode class=\"language-plaintext highlighter-rouge\"\u003ebaz\u003c/code\u003e打头的：\u003c/p\u003e\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003ekubectl assert exist-enhanced MyResource \u003cspan class=\"nt\"\u003e--field-selector\u003c/span\u003e metadata.name\u003cspan class=\"o\"\u003e=\u003c/span\u003e~\u003cspan class=\"s1\"\u003e\u0026#39;foo.*|bar.*|baz.*\u0026#39;\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003ch2 id=\"验证pod的状态\"\u003e验证Pod的状态\u003c/h2\u003e\n\n\u003cp\u003e尽管原则上我们可以利用\u003ccode class=\"language-plaintext highlighter-rouge\"\u003eexist\u003c/code\u003e，\u003ccode class=\"language-plaintext highlighter-rouge\"\u003enot-exist\u003c/code\u003e，\u003ccode class=\"language-plaintext highlighter-rouge\"\u003eexist-enhanced\u003c/code\u003e，以及\u003ccode class=\"language-plaintext highlighter-rouge\"\u003enot-exist-enhanced\u003c/code\u003e对pod的状态进行验证，但是要在一条命令里用这些断言完成针对pod的某些验证是非常复杂的。\u003c/p\u003e\n\n\u003cp\u003e为了方便起见，KubeAssert为我们提供了几个专门针对pod的断言，它们都是以\u003ccode class=\"language-plaintext highlighter-rouge\"\u003epod-\u003c/code\u003e打头的。用它们对pod的状态进行验证，可以变得更加高效：\u003c/p\u003e\n\u003cul\u003e\n  \u003cli\u003e\u003ccode class=\"language-plaintext highlighter-rouge\"\u003epod-ready\u003c/code\u003e用于验证pod的就绪状态；\u003c/li\u003e\n  \u003cli\u003e\u003ccode class=\"language-plaintext highlighter-rouge\"\u003epod-restarts\u003c/code\u003e用于验证pod的重启次数；\u003c/li\u003e\n  \u003cli\u003e\u003ccode class=\"language-plaintext highlighter-rouge\"\u003epod-not-terminating\u003c/code\u003e用于验证pod是否处于terminating状态；\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003e这里有几个例子。\u003c/p\u003e\n\n\u003cp\u003e验证某个namespace下或所有namespace下的所有pod都处于就绪状态：\u003c/p\u003e\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003ekubectl assert pod-ready pods \u003cspan class=\"nt\"\u003e-n\u003c/span\u003e foo\nkubectl assert pod-ready pods \u003cspan class=\"nt\"\u003e--all-namespaces\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e验证某个namespace下或所有namespace下都不存在任何处于terminating状态的pod：\u003c/p\u003e\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003ekubectl assert pod-not-terminating \u003cspan class=\"nt\"\u003e-n\u003c/span\u003e foo\nkubectl assert pod-not-terminating \u003cspan class=\"nt\"\u003e--all-namespaces\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e验证某个namespace下或所有namespace下的pod，其重启次数都小于指定数值：\u003c/p\u003e\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003ekubectl assert pod-restarts \u003cspan class=\"nt\"\u003e-lt\u003c/span\u003e 10 \u003cspan class=\"nt\"\u003e-n\u003c/span\u003e foo\nkubectl assert pod-restarts \u003cspan class=\"nt\"\u003e-lt\u003c/span\u003e 10 \u003cspan class=\"nt\"\u003e--all-namespaces\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003ch2 id=\"检查处于terminating状态的对象\"\u003e检查处于Terminating状态的对象\u003c/h2\u003e\n\n\u003cp\u003e虽然\u003ccode class=\"language-plaintext highlighter-rouge\"\u003epod-not-terminating\u003c/code\u003e可以被用来检查pod是否处于terminating状态，但并非只有pod才有可能遇到这种情况。如果想检查除pod以外的其他Kubernetes资源是否也存在这种情况，可以使用\u003ccode class=\"language-plaintext highlighter-rouge\"\u003eexist-enhanced\u003c/code\u003e，\u003ccode class=\"language-plaintext highlighter-rouge\"\u003enot-exist-enhanced\u003c/code\u003e，或者编写自己的断言。\u003c/p\u003e\n\n\u003cp\u003e例如，假如要判断某个custom resource在任何namespace下都不存在处于terminating状态的对象，我们可以检查它是否有元数据\u003ccode class=\"language-plaintext highlighter-rouge\"\u003edeletionTimestamp\u003c/code\u003e，且\u003ccode class=\"language-plaintext highlighter-rouge\"\u003estatus.phase\u003c/code\u003e字段为\u003ccode class=\"language-plaintext highlighter-rouge\"\u003eRunning\u003c/code\u003e。当一个资源被删除时，Kubernetes会自动为其加上\u003ccode class=\"language-plaintext highlighter-rouge\"\u003edeletionTimestamp\u003c/code\u003e元数据。如果一个资源被删除，但同时还保持运行状态，那它就很可能是一个陷入terminating状态的对象：\u003c/p\u003e\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003ekubectl assert not-exist-enhanced MyResources \u003cspan class=\"nt\"\u003e--field-selector\u003c/span\u003e metadata.deletionTimestamp!\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;\u0026lt;none\u0026gt;\u0026#39;\u003c/span\u003e,status.phase\u003cspan class=\"o\"\u003e==\u003c/span\u003eRunning \u003cspan class=\"nt\"\u003e--all-namespaces\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e再来看一个例子，为了判断集群里没有处于terminating状态的namespace，我们可以检查namespace是否同时具备\u003ccode class=\"language-plaintext highlighter-rouge\"\u003edeletionTimestamp\u003c/code\u003e元数据和finalizer。如果满足这一条件，就说明该namespace很有可能陷入了terminating状态，因为只要namespace有finalizer存在，Kubernetes就不会主动把它删除。\u003c/p\u003e\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003ekubectl assert not-exist-enhanced namespace \u003cspan class=\"nt\"\u003e--field-selector\u003c/span\u003e metadata.deletionTimestamp!\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;\u0026lt;none\u0026gt;\u0026#39;\u003c/span\u003e,spec.finalizers[\u003cspan class=\"k\"\u003e*\u003c/span\u003e\u003cspan class=\"o\"\u003e]!=\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;\u0026lt;none\u0026gt;\u0026#39;\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003ch2 id=\"小结\"\u003e小结\u003c/h2\u003e\n\n\u003cp\u003e如你所见，利用各种不同的断言以及相应的参数组合，我们可以非常灵活的对Kubernetes资源进行检验。在下一篇文章里，我将和大家分享，当现有断言无法满足需求的时候，如何通过编写自己的断言来扩展KubeAssert的能力。\u003c/p\u003e\n\n\u003cp\u003e如果你想了解更多有关KubeAssert的信息，请阅读它的\u003ca href=\"https://morningspace.github.io/kubeassert/docs/\"\u003e在线文档\u003c/a\u003e。如果你喜欢这个项目，欢迎给它\u003ca href=\"https://github.com/morningspace/kubeassert\"\u003e加星\u003c/a\u003e。同时，也非常欢迎针对该项目的任何形式的贡献，比如bug报告以及代码提交。\u003c/p\u003e\n\n        \n      \u003c/section\u003e\n\n      \u003cfooter class=\"page__meta\"\u003e\n        \n        \n  \n\n\n  \n\n  \u003cp class=\"page__taxonomy\"\u003e\n    \u003cstrong\u003e\u003ci class=\"fas fa-fw fa-tags\" aria-hidden=\"true\"\u003e\u003c/i\u003e 标签: \u003c/strong\u003e\n    \u003cspan itemprop=\"keywords\"\u003e\n    \n      \u003ca href=\"/tags/#kubernetes\" class=\"page__taxonomy-item p-category\" rel=\"tag\"\u003ekubernetes\u003c/a\u003e\n    \n    \u003c/span\u003e\n  \u003c/p\u003e\n\n\n\n\n  \n\n\n  \n\n  \u003cp class=\"page__taxonomy\"\u003e\n    \u003cstrong\u003e\u003ci class=\"fas fa-fw fa-folder-open\" aria-hidden=\"true\"\u003e\u003c/i\u003e 分类: \u003c/strong\u003e\n    \u003cspan itemprop=\"keywords\"\u003e\n    \n      \u003ca href=\"/categories/#tech\" class=\"page__taxonomy-item p-category\" rel=\"tag\"\u003etech\u003c/a\u003e\n    \n    \u003c/span\u003e\n  \u003c/p\u003e\n\n\n        \n\n  \u003cp class=\"page__date\"\u003e\u003cstrong\u003e\u003ci class=\"fas fa-fw fa-calendar-alt\" aria-hidden=\"true\"\u003e\u003c/i\u003e 更新时间:\u003c/strong\u003e \u003ctime class=\"dt-published\" datetime=\"2021-06-26T00:00:00+08:00\"\u003eJune 26, 2021\u003c/time\u003e\u003c/p\u003e\n\n      \u003c/footer\u003e\n\n      \u003csection class=\"page__share\"\u003e\n  \n    \u003ch4 class=\"page__share-title\"\u003e分享\u003c/h4\u003e\n  \n\n  \u003ca href=\"https://twitter.com/intent/tweet?text=%E9%AB%98%E6%95%88%E4%BD%BF%E7%94%A8KubeAssert%20https%3A%2F%2Fmorningspace.github.io%2Ftech%2Fkubeassert-2%2F\" class=\"btn btn--twitter\" onclick=\"window.open(this.href, \u0026#39;window\u0026#39;, \u0026#39;left=20,top=20,width=500,height=500,toolbar=1,resizable=0\u0026#39;); return false;\" title=\"分享 Twitter\"\u003e\u003ci class=\"fab fa-fw fa-twitter\" aria-hidden=\"true\"\u003e\u003c/i\u003e\u003cspan\u003e Twitter\u003c/span\u003e\u003c/a\u003e\n\n  \u003ca href=\"https://www.facebook.com/sharer/sharer.php?u=https%3A%2F%2Fmorningspace.github.io%2Ftech%2Fkubeassert-2%2F\" class=\"btn btn--facebook\" onclick=\"window.open(this.href, \u0026#39;window\u0026#39;, \u0026#39;left=20,top=20,width=500,height=500,toolbar=1,resizable=0\u0026#39;); return false;\" title=\"分享 Facebook\"\u003e\u003ci class=\"fab fa-fw fa-facebook\" aria-hidden=\"true\"\u003e\u003c/i\u003e\u003cspan\u003e Facebook\u003c/span\u003e\u003c/a\u003e\n\n  \u003ca href=\"https://www.linkedin.com/shareArticle?mini=true\u0026amp;url=https%3A%2F%2Fmorningspace.github.io%2Ftech%2Fkubeassert-2%2F\" class=\"btn btn--linkedin\" onclick=\"window.open(this.href, \u0026#39;window\u0026#39;, \u0026#39;left=20,top=20,width=500,height=500,toolbar=1,resizable=0\u0026#39;); return false;\" title=\"分享 LinkedIn\"\u003e\u003ci class=\"fab fa-fw fa-linkedin\" aria-hidden=\"true\"\u003e\u003c/i\u003e\u003cspan\u003e LinkedIn\u003c/span\u003e\u003c/a\u003e\n\u003c/section\u003e\n\n\n      \n  \u003cnav class=\"pagination\"\u003e\n    \n      \u003ca href=\"/tech/kubeassert-1/\" class=\"pagination--pager\" title=\"KubeAssert快速入门\n\"\u003e向前\u003c/a\u003e\n    \n    \n      \u003ca href=\"/tech/kubeassert-3/\" class=\"pagination--pager\" title=\"为KubeAssert定制断言\n\"\u003e向后\u003c/a\u003e\n    \n  \u003c/nav\u003e\n\n    \u003c/div\u003e",
  "Date": "2021-06-26T00:00:00+08:00",
  "Author": "MornigSpace"
}