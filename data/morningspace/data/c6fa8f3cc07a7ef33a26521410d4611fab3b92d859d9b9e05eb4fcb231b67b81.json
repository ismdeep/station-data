{
  "Source": "morningspace",
  "Title": "Elastic Shell 101 - Getting Started",
  "Link": "https://morningspace.github.io/tech/elash101-1/",
  "Content": "\u003cdiv class=\"page__inner-wrap\"\u003e\n      \n\n      \u003csection class=\"page__content e-content\" itemprop=\"text\"\u003e\n        \n          \u003caside class=\"sidebar__right sticky\"\u003e\n            \u003cnav class=\"toc\"\u003e\n              \u003cheader\u003e\u003ch4 class=\"nav__title\"\u003e\u003ci class=\"fas fa-file-alt\"\u003e\u003c/i\u003e 在本页上\u003c/h4\u003e\u003c/header\u003e\n              \u003cul class=\"toc__menu\"\u003e\u003cli\u003e\u003ca href=\"#what-is-it\"\u003eWhat is it\u003c/a\u003e\u003c/li\u003e\u003cli\u003e\u003ca href=\"#how-to-run\"\u003eHow to run\u003c/a\u003e\u003cul\u003e\u003cli\u003e\u003ca href=\"#outside-of-container\"\u003eOutside of container\u003c/a\u003e\u003c/li\u003e\u003c/ul\u003e\u003c/li\u003e\u003cli\u003e\u003ca href=\"#get-help\"\u003eGet help\u003c/a\u003e\u003c/li\u003e\u003cli\u003e\u003ca href=\"#run-cat\"\u003eRun cat\u003c/a\u003e\u003cul\u003e\u003cli\u003e\u003ca href=\"#the--argument\"\u003eThe … argument\u003c/a\u003e\u003c/li\u003e\u003c/ul\u003e\u003c/li\u003e\u003c/ul\u003e\n\n            \u003c/nav\u003e\n          \u003c/aside\u003e\n        \n        \u003cp\u003e\u003cimg src=\"/assets/images/studio/elash/101.jpg\" alt=\"\"/\u003e\u003c/p\u003e\n\n\u003ch2 id=\"what-is-it\"\u003eWhat is it\u003c/h2\u003e\n\n\u003cp\u003e\u003ca href=\"https://github.com/morningspace/elastic-shell\"\u003eElastic Shell\u003c/a\u003e is an open source project that includes a set of command line utilities and run as a client to help you manage \u003ca href=\"https://www.elastic.co/products/elasticsearch\"\u003eElasticsearch\u003c/a\u003e. It is entirely written in Bash Shell.\u003c/p\u003e\n\n\u003cp\u003e“Elastic Shell 101” is a series of posts that tells you how to use it.\u003c/p\u003e\n\n\u003cp\u003eIn this post, I will show you how to run Elastic Shell from the command line and use its \u003ccode class=\"language-plaintext highlighter-rouge\"\u003ecat\u003c/code\u003e command to call \u003ca href=\"https://www.elastic.co/guide/en/elasticsearch/reference/current/cat.html\"\u003eElasticsearch /_cat APIs\u003c/a\u003e.\u003c/p\u003e\n\n\u003ch2 id=\"how-to-run\"\u003eHow to run\u003c/h2\u003e\n\n\u003cp\u003eElastic Shell can be run both inside or outside of Docker container. Within Docker container, all dependencies have been installed and configured properly. So you don’t have to do anything else but just use it. Throughout the “Elastic Shell 101” series, I will use the prebuilt \u003ca href=\"https://cloud.docker.com/u/morningspace/repository/docker/morningspace/elastic-shell\"\u003eDocker image\u003c/a\u003e from Docker Hub to demonstrate all the work. So, now let’s pull the image from Docker Hub at first:\u003c/p\u003e\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003e$ \u003c/span\u003edocker pull morningspace/elastic-shell\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003eThen, start it:\u003c/p\u003e\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003e$ \u003c/span\u003edocker run \u003cspan class=\"nt\"\u003e-it\u003c/span\u003e morningspace/elastic-shell bash\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003eFor local test, you can launch another Docker container which includes an Elasticsearch cluster and add both containers to the same bridge network in order to have the Elasticsearch cluster be visible to the Elastic Shell container. Then, you may need \u003ccode class=\"language-plaintext highlighter-rouge\"\u003e--net\u003c/code\u003e option when launch the Docker container. For example:\u003c/p\u003e\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003e$ \u003c/span\u003edocker run \u003cspan class=\"nt\"\u003e-it\u003c/span\u003e \u003cspan class=\"nt\"\u003e--net\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003elab-elk-net morningspace/elastic-shell bash\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003eIn the Elastic Shell container, there’s a soft link that have been created for Elastic Shell, so you can run a command called \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eelash\u003c/code\u003e from anywhere to launch Elastic Shell. Here, \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eelash\u003c/code\u003e is the abbreviation of Elastic Shell, and the main entrance of all the commands that Elastic Shell provides.\u003c/p\u003e\n\n\u003ch3 id=\"outside-of-container\"\u003eOutside of container\u003c/h3\u003e\n\n\u003cp\u003eWhen run Elastic Shell outside of the container, find the \u003ccode class=\"language-plaintext highlighter-rouge\"\u003emain.sh\u003c/code\u003e under the home folder of Elastic Shell to run.\u003c/p\u003e\n\n\u003ch2 id=\"get-help\"\u003eGet help\u003c/h2\u003e\n\n\u003cp\u003eIf you do not specify any additional options, you will see the default help information with all the available commands. Choose one of the command, with option \u003ccode class=\"language-plaintext highlighter-rouge\"\u003e--help\u003c/code\u003e, it will take you to the detailed help information of that command, where you will see all the sub commands that are available to that command, some general options, as well as the usage examples of these sub commands.\u003c/p\u003e\n\n\u003cp\u003eIf you run \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eelash \u0026lt;command\u0026gt;\u003c/code\u003e without appending anything else, it will list all the sub commands or arguments that are available based on the current context. This is very helpful if you do not know what else information that you need to provide in order to run a particular command correctly. For example, here are all the sub-commands that you can run for \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eelash index\u003c/code\u003e command.\u003c/p\u003e\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003ebash-4.4# elash index\n\nCommands/Options:\n  \u003cspan class=\"nb\"\u003ecat\n  \u003c/span\u003ecreate\n  update\n  delete\n  doc\n  bulk\n  search\n  config\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003ch2 id=\"run-cat\"\u003eRun cat\u003c/h2\u003e\n\n\u003cp\u003eLet’s try \u003ccode class=\"language-plaintext highlighter-rouge\"\u003ecat\u003c/code\u003e command first. It maps to \u003ca href=\"https://www.elastic.co/guide/en/elasticsearch/reference/current/cat.html\"\u003eElasticsearch /_cat APIs\u003c/a\u003e. Append \u003ccode class=\"language-plaintext highlighter-rouge\"\u003ecat\u003c/code\u003e after \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eindex\u003c/code\u003e\u003c/p\u003e\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003ebash-4.4# elash index \u003cspan class=\"nb\"\u003ecat\n\n\u003c/span\u003eCommands/Options:\n  indices\n  shards\n  nodes\n  ...\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003eYou will see the available commands or arguments are changed. Choose one of them, for example \u003ccode class=\"language-plaintext highlighter-rouge\"\u003enodes\u003c/code\u003e, will show you topology of the Elasticsearch cluster.\u003c/p\u003e\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003ebash-4.4# elash index \u003cspan class=\"nb\"\u003ecat \u003c/span\u003enodes\n\n_cat/nodes?v\n\u003cspan class=\"nt\"\u003e------------------------------------------------------------------------------\u003c/span\u003e\nip          heap.percent  ram.percent cpu load_1m load_5m load_15m node.role master name\n172.18.0.11           34           96  16    1.37    1.04     1.05 mdi       \u003cspan class=\"k\"\u003e*\u003c/span\u003e      90d99514da15\n\nCommands/Options:\n  indices\n  shards\n  nodes\n  ...\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003eAgain, we see the available commands or arguments based on the context. And this is the same as what we see before. It means you can append more \u003ccode class=\"language-plaintext highlighter-rouge\"\u003ecat\u003c/code\u003e commands and chain them together. This is very cool. Let’s try it:\u003c/p\u003e\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003ebash-4.4# elash index \u003cspan class=\"nb\"\u003ecat \u003c/span\u003enodes indices shards\n\n_cat/nodes?v\n\u003cspan class=\"nt\"\u003e------------------------------------------------------------------------------\u003c/span\u003e\nip          heap.percent  ram.percent cpu load_1m load_5m load_15m node.role master name\n172.18.0.11           34           96  16    1.37    1.04     1.05 mdi       \u003cspan class=\"k\"\u003e*\u003c/span\u003e      90d99514da15\n\n_cat/indices?v\n\u003cspan class=\"nt\"\u003e------------------------------------------------------------------------------\u003c/span\u003e\nhealth status index uuid pri rep docs.count docs.deleted store.size pri.store.size\n\n_cat/shards?v\n\u003cspan class=\"nt\"\u003e------------------------------------------------------------------------------\u003c/span\u003e\nindex shard prirep state docs store ip node\n\nCommands/Options:\n  indices\n  shards\n  nodes\n  ...\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003eBecause our Elasticsearch cluster has no any index yet, we see the \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eindices\u003c/code\u003e and \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eshards\u003c/code\u003e commands returning empty. We will run \u003ccode class=\"language-plaintext highlighter-rouge\"\u003eindex\u003c/code\u003e command to create some indices later.\u003c/p\u003e\n\n\u003ch3 id=\"the--argument\"\u003eThe … argument\u003c/h3\u003e\n\n\u003cp\u003eThere’s one more special argument to explain: the \u003ccode class=\"language-plaintext highlighter-rouge\"\u003e...\u003c/code\u003e argument. It means all the other \u003ccode class=\"language-plaintext highlighter-rouge\"\u003ecat\u003c/code\u003e commands. If you want to run \u003ccode class=\"language-plaintext highlighter-rouge\"\u003ecat\u003c/code\u003e commands that are not listed above, just append that command after \u003ccode class=\"language-plaintext highlighter-rouge\"\u003e...\u003c/code\u003e. For example, this lists all plugins that are currently running.\u003c/p\u003e\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003ebash-4.4# elash index \u003cspan class=\"nb\"\u003ecat\u003c/span\u003e ... plugins\n\n_cat/plugins?v\n\u003cspan class=\"nt\"\u003e------------------------------------------------------\u003c/span\u003e\nname         component         version\n90d99514da15 ingest-geoip      6.3.2\n90d99514da15 ingest-user-agent 6.3.2\n\nCommands/Options:\n  indices\n  shards\n  nodes\n  ...\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003eIf you just append \u003ccode class=\"language-plaintext highlighter-rouge\"\u003e...\u003c/code\u003e after \u003ccode class=\"language-plaintext highlighter-rouge\"\u003ecat\u003c/code\u003e, it will list all the available \u003ccode class=\"language-plaintext highlighter-rouge\"\u003ecat\u003c/code\u003e commands that are supported by the Elasticsearch cluster.\u003c/p\u003e\n\n\u003cp\u003eFor more stories on Elastic Shell, stay tuned for next posts! Any question about this post or Elastic Shell, feel free to leave comments or drop email at morningspace@yahoo.com.\u003c/p\u003e\n\n        \n      \u003c/section\u003e\n\n      \u003cfooter class=\"page__meta\"\u003e\n        \n        \n  \n\n\n  \n\n  \u003cp class=\"page__taxonomy\"\u003e\n    \u003cstrong\u003e\u003ci class=\"fas fa-fw fa-tags\" aria-hidden=\"true\"\u003e\u003c/i\u003e 标签: \u003c/strong\u003e\n    \u003cspan itemprop=\"keywords\"\u003e\n    \n      \u003ca href=\"/tags/#elasticsearch\" class=\"page__taxonomy-item p-category\" rel=\"tag\"\u003eelasticsearch\u003c/a\u003e\u003cspan class=\"sep\"\u003e, \u003c/span\u003e\n    \n      \u003ca href=\"/tags/#shell\" class=\"page__taxonomy-item p-category\" rel=\"tag\"\u003eshell\u003c/a\u003e\u003cspan class=\"sep\"\u003e, \u003c/span\u003e\n    \n      \u003ca href=\"/tags/#studio\" class=\"page__taxonomy-item p-category\" rel=\"tag\"\u003estudio\u003c/a\u003e\u003cspan class=\"sep\"\u003e, \u003c/span\u003e\n    \n      \u003ca href=\"/tags/#studio-elash-101\" class=\"page__taxonomy-item p-category\" rel=\"tag\"\u003estudio-elash-101\u003c/a\u003e\n    \n    \u003c/span\u003e\n  \u003c/p\u003e\n\n\n\n\n  \n\n\n  \n\n  \u003cp class=\"page__taxonomy\"\u003e\n    \u003cstrong\u003e\u003ci class=\"fas fa-fw fa-folder-open\" aria-hidden=\"true\"\u003e\u003c/i\u003e 分类: \u003c/strong\u003e\n    \u003cspan itemprop=\"keywords\"\u003e\n    \n      \u003ca href=\"/categories/#tech\" class=\"page__taxonomy-item p-category\" rel=\"tag\"\u003etech\u003c/a\u003e\n    \n    \u003c/span\u003e\n  \u003c/p\u003e\n\n\n        \n\n  \u003cp class=\"page__date\"\u003e\u003cstrong\u003e\u003ci class=\"fas fa-fw fa-calendar-alt\" aria-hidden=\"true\"\u003e\u003c/i\u003e 更新时间:\u003c/strong\u003e \u003ctime class=\"dt-published\" datetime=\"2019-03-24T00:00:00+08:00\"\u003eMarch 24, 2019\u003c/time\u003e\u003c/p\u003e\n\n      \u003c/footer\u003e\n\n      \u003csection class=\"page__share\"\u003e\n  \n    \u003ch4 class=\"page__share-title\"\u003e分享\u003c/h4\u003e\n  \n\n  \u003ca href=\"https://twitter.com/intent/tweet?text=Elastic+Shell+101+-+Getting+Started%20https%3A%2F%2Fmorningspace.github.io%2Ftech%2Felash101-1%2F\" class=\"btn btn--twitter\" onclick=\"window.open(this.href, \u0026#39;window\u0026#39;, \u0026#39;left=20,top=20,width=500,height=500,toolbar=1,resizable=0\u0026#39;); return false;\" title=\"分享 Twitter\"\u003e\u003ci class=\"fab fa-fw fa-twitter\" aria-hidden=\"true\"\u003e\u003c/i\u003e\u003cspan\u003e Twitter\u003c/span\u003e\u003c/a\u003e\n\n  \u003ca href=\"https://www.facebook.com/sharer/sharer.php?u=https%3A%2F%2Fmorningspace.github.io%2Ftech%2Felash101-1%2F\" class=\"btn btn--facebook\" onclick=\"window.open(this.href, \u0026#39;window\u0026#39;, \u0026#39;left=20,top=20,width=500,height=500,toolbar=1,resizable=0\u0026#39;); return false;\" title=\"分享 Facebook\"\u003e\u003ci class=\"fab fa-fw fa-facebook\" aria-hidden=\"true\"\u003e\u003c/i\u003e\u003cspan\u003e Facebook\u003c/span\u003e\u003c/a\u003e\n\n  \u003ca href=\"https://www.linkedin.com/shareArticle?mini=true\u0026amp;url=https%3A%2F%2Fmorningspace.github.io%2Ftech%2Felash101-1%2F\" class=\"btn btn--linkedin\" onclick=\"window.open(this.href, \u0026#39;window\u0026#39;, \u0026#39;left=20,top=20,width=500,height=500,toolbar=1,resizable=0\u0026#39;); return false;\" title=\"分享 LinkedIn\"\u003e\u003ci class=\"fab fa-fw fa-linkedin\" aria-hidden=\"true\"\u003e\u003c/i\u003e\u003cspan\u003e LinkedIn\u003c/span\u003e\u003c/a\u003e\n\u003c/section\u003e\n\n\n      \n  \u003cnav class=\"pagination\"\u003e\n    \n      \u003ca href=\"/tech/elash-and-studio/\" class=\"pagination--pager\" title=\"开源项目Elastic Shell发布暨晴耕工坊栏目上线\n\"\u003e向前\u003c/a\u003e\n    \n    \n      \u003ca href=\"/tech/elash101-2/\" class=\"pagination--pager\" title=\"Elastic Shell 101 - Working with Index\n\"\u003e向后\u003c/a\u003e\n    \n  \u003c/nav\u003e\n\n    \u003c/div\u003e",
  "Date": "2019-03-24T00:00:00+08:00",
  "Author": "MornigSpace"
}