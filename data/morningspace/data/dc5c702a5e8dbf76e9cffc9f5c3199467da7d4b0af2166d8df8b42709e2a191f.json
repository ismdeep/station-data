{
  "Source": "morningspace",
  "Title": "Docker Registry CLI轻松管理Docker注册表(上)",
  "Link": "https://morningspace.github.io/tech/use-docker-reg-cli-1/",
  "Content": "\u003cdiv class=\"page__inner-wrap\"\u003e\n      \n\n      \u003csection class=\"page__content e-content\" itemprop=\"text\"\u003e\n        \n          \u003caside class=\"sidebar__right sticky\"\u003e\n            \u003cnav class=\"toc\"\u003e\n              \u003cheader\u003e\u003ch4 class=\"nav__title\"\u003e\u003ci class=\"fas fa-file-alt\"\u003e\u003c/i\u003e 在本页上\u003c/h4\u003e\u003c/header\u003e\n              \u003cul class=\"toc__menu\"\u003e\u003cli\u003e\u003ca href=\"#什么是docker-registry-cli\"\u003e什么是Docker Registry CLI\u003c/a\u003e\u003c/li\u003e\u003cli\u003e\u003ca href=\"#如何运行\"\u003e如何运行\u003c/a\u003e\u003cul\u003e\u003cli\u003e\u003ca href=\"#使用docker-compose\"\u003e使用Docker Compose\u003c/a\u003e\u003c/li\u003e\u003c/ul\u003e\u003c/li\u003e\u003cli\u003e\u003ca href=\"#复制第一个image\"\u003e复制第一个Image\u003c/a\u003e\u003cul\u003e\u003cli\u003e\u003ca href=\"#在容器里执行docker命令\"\u003e在容器里执行docker命令\u003c/a\u003e\u003c/li\u003e\u003c/ul\u003e\u003c/li\u003e\u003c/ul\u003e\n\n            \u003c/nav\u003e\n          \u003c/aside\u003e\n        \n        \u003cblockquote\u003e\n  \u003cp\u003e继开源项目\u003ca href=\"https://github.com/morningspace/elastic-shell\"\u003eElastic Shell\u003c/a\u003e\u003ca href=\"/tech/elash-and-studio\"\u003e发布\u003c/a\u003e以后，\u003ca href=\"/studio\"\u003e晴耕工坊\u003c/a\u003e近期又有新品发布啦！今天，我们就一起来了解一下\u003ca href=\"https://github.com/morningspace/docker-registry-cli\"\u003eDocker Registry CLI\u003c/a\u003e这款开源小工具。\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003e\u003cimg src=\"/assets/images/studio/docker_registry.png\" alt=\"\"/\u003e\u003c/p\u003e\n\n\u003ch2 id=\"什么是docker-registry-cli\"\u003e什么是Docker Registry CLI\u003c/h2\u003e\n\n\u003cp\u003e我们知道，\u003ca href=\"https://docs.docker.com/registry/\"\u003eDocker Registry（Docker注册表）\u003c/a\u003e是一项服务，用于存储Docker Image(镜像)。例如大家所熟知的\u003ca href=\"https://hub.docker.com/\"\u003eDocker Hub\u003c/a\u003e，\u003ca href=\"https://quay.io/\"\u003eQuay\u003c/a\u003e，\u003ca href=\"https://cloud.google.com/container-registry/\"\u003eGoogle Container Registry\u003c/a\u003e，\u003ca href=\"https://aws.amazon.com/ecr/\"\u003eAWS Container Registry\u003c/a\u003e等，就属于Public Docker Registry。此外，我们也可以搭建属于自己的Private Docker Registry。\u003c/p\u003e\n\n\u003cp\u003eDocker Registry CLI是一款用Bash Shell编写的命令行工具，可以方便而灵活的对支持\u003ca href=\"https://docs.docker.com/registry/spec/api/\"\u003eHTTP API V2\u003c/a\u003e版本的Docker Registry进行管理，同时支持公有和私有的Docker Registry。它具备了以下几个特色：\u003c/p\u003e\n\u003cul\u003e\n  \u003cli\u003e批量复制：作为该工具的一大特色，利用其\u003ccode class=\"language-plaintext highlighter-rouge\"\u003ecp\u003c/code\u003e命令，可以从多个公有及私有Registry批量复制Image，轻松搭建起属于自己的Docker Registry；\u003c/li\u003e\n  \u003cli\u003e基于DIND：提供基于\u003ca href=\"https://github.com/jpetazzo/dind\"\u003eDocker-in-Docker(DIND)\u003c/a\u003e的运行模式，支持容器内执行docker命令，所有操作对宿主机Registry缓存均不会造成任何影响；\u003c/li\u003e\n  \u003cli\u003e强大灵活：只通过少数几个命令及其参数的组合，就完成了针对Image，Tag，Digest，Manifest在内的各种查询，以及Image的复制删除操作；\u003c/li\u003e\n  \u003cli\u003e简单易学：由于在设计上极大程度的借鉴了Linux常用命令的语法，因而很容易上手。只要了解\u003ccode class=\"language-plaintext highlighter-rouge\"\u003ecp\u003c/code\u003e, \u003ccode class=\"language-plaintext highlighter-rouge\"\u003els\u003c/code\u003e, \u003ccode class=\"language-plaintext highlighter-rouge\"\u003erm\u003c/code\u003e等命令，就可以很快掌握使用方法；\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003e接下来我们就一起来看看，如何借助Docker Registry CLI快速搭建一个Private Docker Registry！我们将从中进一步体会到该工具的上述几个特点。\u003c/p\u003e\n\n\u003ch2 id=\"如何运行\"\u003e如何运行\u003c/h2\u003e\n\n\u003cp\u003eDocker Registry CLI提供了三种运行方式。\u003c/p\u003e\n\n\u003cul\u003e\n  \u003cli\u003e在Docker容器内运行：从Docker Hub上抓取\u003ca href=\"https://cloud.docker.com/u/morningspace/repository/docker/morningspace/docker-registry-cli\"\u003eImage\u003c/a\u003e到本地，就可以在容器内运行Docker Registry CLI了。这是最便捷的一种运行方式，因为容器内预装了所有该工具执行的先决依赖，包括：\u003cem\u003ebash\u003c/em\u003e，\u003cem\u003ecurl\u003c/em\u003e，\u003cem\u003ejq\u003c/em\u003e，\u003cem\u003edocker\u003c/em\u003e。\u003c/li\u003e\n  \u003cli\u003e在Docker容器外运行：当然，我们也可以选择从\u003ca href=\"https://github.com/morningspace/docker-registry-cli\"\u003eGitHub库\u003c/a\u003e下载源码，在本地的宿主机器上直接运行。只要在运行之前，确保本机已经安装了工具所需的所有先决依赖即可。\u003c/li\u003e\n  \u003cli\u003e利用\u003ca href=\"https://docs.docker.com/compose/\"\u003eDocker Compose\u003c/a\u003e：此外，我们还可以将\u003ca href=\"https://github.com/morningspace/docker-registry-cli\"\u003eGitHub库\u003c/a\u003e完整克隆到本地，并通过执行\u003ccode class=\"language-plaintext highlighter-rouge\"\u003edocker-compose\u003c/code\u003e命令来运行。本质上，这也属于容器内运行。只不过预先配置好的\u003ccode class=\"language-plaintext highlighter-rouge\"\u003edocker-compose.yml\u003c/code\u003e里，除了Docker Registry CLI本身外，还包含一个hostname为\u003ccode class=\"language-plaintext highlighter-rouge\"\u003emr.io\u003c/code\u003e的Private Docker Registry，可以用来做实验。本文后面的演示，都将采用这一运行方式。\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch3 id=\"使用docker-compose\"\u003e使用Docker Compose\u003c/h3\u003e\n\n\u003cp\u003e利用Docker Compose运行Docker Registry CLI非常简单。只需要两步即可：\u003c/p\u003e\n\n\u003cul\u003e\n  \u003cli\u003e第一步：将\u003ca href=\"https://github.com/morningspace/docker-registry-cli\"\u003eGitHub库\u003c/a\u003e克隆到本地后执行如下命令，以同时启动Docker Registry CLI的Daemon服务及\u003ccode class=\"language-plaintext highlighter-rouge\"\u003emr.io\u003c/code\u003e：\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003e$ \u003c/span\u003edocker-compose up \u003cspan class=\"nt\"\u003e-d\u003c/span\u003e\nCreating network \u003cspan class=\"s2\"\u003e\u0026#34;net-registry\u0026#34;\u003c/span\u003e with driver \u003cspan class=\"s2\"\u003e\u0026#34;bridge\u0026#34;\u003c/span\u003e\nCreating docker-registry-cli-v0_reg-cli_1_d4de93c59ec0 ... \u003cspan class=\"k\"\u003edone\n\u003c/span\u003eCreating mr.io                                         ... \u003cspan class=\"k\"\u003edone\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cul\u003e\n  \u003cli\u003e第二步：执行如下命令，通过另一个容器连接至Docker Registry CLI的Daemon服务：\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003e$ \u003c/span\u003edocker-compose \u003cspan class=\"nb\"\u003eexec \u003c/span\u003ereg-cli bash\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e进入容器后，我们就可以通过执行\u003ccode class=\"language-plaintext highlighter-rouge\"\u003ereg-cli\u003c/code\u003e命令运行Docker Registry CLI了！\u003c/p\u003e\n\n\u003cp\u003e首先，我们利用\u003ccode class=\"language-plaintext highlighter-rouge\"\u003ereg-cli ls\u003c/code\u003e命令查看一下\u003ccode class=\"language-plaintext highlighter-rouge\"\u003emr.io\u003c/code\u003e的Catalog：\u003c/p\u003e\n\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003ebash-4.4# reg-cli \u003cspan class=\"nb\"\u003els \u003c/span\u003emr.io\nmr.io\n\u003cspan class=\"nt\"\u003e---------------------------------------\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e返回结果显示，目前\u003ccode class=\"language-plaintext highlighter-rouge\"\u003emr.io\u003c/code\u003e上还没有任何Image。别急，接下来我们将通过Docker Registry CLI把来自其他Registry的Image复制到\u003ccode class=\"language-plaintext highlighter-rouge\"\u003emr.io\u003c/code\u003e上！当然，我们也可以利用\u003ccode class=\"language-plaintext highlighter-rouge\"\u003edocker push\u003c/code\u003e命令直接往\u003ccode class=\"language-plaintext highlighter-rouge\"\u003emr.io\u003c/code\u003e上推送Image。\u003c/p\u003e\n\n\u003ch2 id=\"复制第一个image\"\u003e复制第一个Image\u003c/h2\u003e\n\n\u003cp\u003e向Docker Registry复制Image，需要用到\u003ccode class=\"language-plaintext highlighter-rouge\"\u003ereg-cli cp\u003c/code\u003e命令。利用它，可以将存储于其他Registry（包括公有和私有）的Image批量复制到目标Registry。\u003c/p\u003e\n\n\u003cp\u003e我们先来试一下把Docker Registry CLI自身的Image从Docker Hub上抓取下来并推送到\u003ccode class=\"language-plaintext highlighter-rouge\"\u003emr.io\u003c/code\u003e。执行如下命令：\u003c/p\u003e\n\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003ebash-4.4# reg-cli \u003cspan class=\"nb\"\u003ecp \u003c/span\u003emorningspace/docker-registry-cli mr.io\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e等待命令执行完毕后，再利用\u003ccode class=\"language-plaintext highlighter-rouge\"\u003ereg-cli ls\u003c/code\u003e查看\u003ccode class=\"language-plaintext highlighter-rouge\"\u003emr.io\u003c/code\u003e的Catalog：\u003c/p\u003e\n\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003ebash-4.4# reg-cli \u003cspan class=\"nb\"\u003els \u003c/span\u003emr.io\nmr.io\n\u003cspan class=\"nt\"\u003e---------------------------------------\u003c/span\u003e\ndocker-registry-cli\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e恭喜你！我们的第一个Image已经成功复制到\u003ccode class=\"language-plaintext highlighter-rouge\"\u003emr.io\u003c/code\u003e了！在\u003ccode class=\"language-plaintext highlighter-rouge\"\u003ereg-cli ls\u003c/code\u003e后面加上Image的全名，可以列出该Image位于\u003ccode class=\"language-plaintext highlighter-rouge\"\u003emr.io\u003c/code\u003e上的所有Tag：\u003c/p\u003e\n\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003ebash-4.4# reg-cli \u003cspan class=\"nb\"\u003els \u003c/span\u003emr.io/docker-registry-cli\nmr.io/docker-registry-cli\n\u003cspan class=\"nt\"\u003e---------------------------------------\u003c/span\u003e\nlatest\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e目前为止，我们的\u003ccode class=\"language-plaintext highlighter-rouge\"\u003edocker-registry-cli\u003c/code\u003e只有一个\u003ccode class=\"language-plaintext highlighter-rouge\"\u003elatest\u003c/code\u003e的Tag。再用\u003ccode class=\"language-plaintext highlighter-rouge\"\u003e-ld\u003c/code\u003e和\u003ccode class=\"language-plaintext highlighter-rouge\"\u003e-lm\u003c/code\u003e选项分别查看一下\u003ccode class=\"language-plaintext highlighter-rouge\"\u003edocker-registry-cli\u003c/code\u003e的Digest和Manifest吧：\u003c/p\u003e\n\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003ebash-4.4# reg-cli \u003cspan class=\"nb\"\u003els \u003c/span\u003emr.io/docker-registry-cli \u003cspan class=\"nt\"\u003e-ld\u003c/span\u003e\nmr.io/docker-registry-cli\n\u003cspan class=\"nt\"\u003e---------------------------------------\u003c/span\u003e\nsha256:d1b110ad26922d45fce7baccd572ba35eef0412a0af8354177ae742d99718992 latest\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003ebash-4.4# reg-cli \u003cspan class=\"nb\"\u003els \u003c/span\u003emr.io/docker-registry-cli \u003cspan class=\"nt\"\u003e-lm\u003c/span\u003e\nmr.io/docker-registry-cli\n\u003cspan class=\"nt\"\u003e---------------------------------------\u003c/span\u003e\n\u003cspan class=\"o\"\u003e{\u003c/span\u003e\n   \u003cspan class=\"s2\"\u003e\u0026#34;schemaVersion\u0026#34;\u003c/span\u003e: 1,\n   \u003cspan class=\"s2\"\u003e\u0026#34;name\u0026#34;\u003c/span\u003e: \u003cspan class=\"s2\"\u003e\u0026#34;docker-registry-cli\u0026#34;\u003c/span\u003e,\n   \u003cspan class=\"s2\"\u003e\u0026#34;tag\u0026#34;\u003c/span\u003e: \u003cspan class=\"s2\"\u003e\u0026#34;latest\u0026#34;\u003c/span\u003e,\n   \u003cspan class=\"s2\"\u003e\u0026#34;architecture\u0026#34;\u003c/span\u003e: \u003cspan class=\"s2\"\u003e\u0026#34;amd64\u0026#34;\u003c/span\u003e,\n   \u003cspan class=\"s2\"\u003e\u0026#34;fsLayers\u0026#34;\u003c/span\u003e: \u003cspan class=\"o\"\u003e[\u003c/span\u003e\n     ...\n   \u003cspan class=\"o\"\u003e]\u003c/span\u003e,\n   \u003cspan class=\"s2\"\u003e\u0026#34;history\u0026#34;\u003c/span\u003e: \u003cspan class=\"o\"\u003e[\u003c/span\u003e\n     ...\n   \u003cspan class=\"o\"\u003e]\u003c/span\u003e,\n   \u003cspan class=\"s2\"\u003e\u0026#34;signatures\u0026#34;\u003c/span\u003e: \u003cspan class=\"o\"\u003e[\u003c/span\u003e\n     ...\n   \u003cspan class=\"o\"\u003e]\u003c/span\u003e\n\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003ch3 id=\"在容器里执行docker命令\"\u003e在容器里执行docker命令\u003c/h3\u003e\n\n\u003cp\u003e前面提到过，Docker Registry CLI的Image是基于\u003ca href=\"https://github.com/jpetazzo/dind\"\u003eDocker-in-Docker(DIND)\u003c/a\u003e制作的。因此，我们可以在Docker Registry CLI所在的容器内运行\u003ccode class=\"language-plaintext highlighter-rouge\"\u003edocker\u003c/code\u003e命令！实际上，\u003ccode class=\"language-plaintext highlighter-rouge\"\u003ereg-cli cp\u003c/code\u003e的功能就是通过组合多个\u003ccode class=\"language-plaintext highlighter-rouge\"\u003edocker\u003c/code\u003e命令的方式实现的。我们在容器里执行\u003ccode class=\"language-plaintext highlighter-rouge\"\u003edocker images\u003c/code\u003e命令看看：\u003c/p\u003e\n\n\u003cdiv class=\"language-shell highlighter-rouge\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight\"\u003e\u003ccode\u003ebash-4.4# docker images\nREPOSITORY                         TAG                 IMAGE ID            CREATED             SIZE\nmorningspace/docker-registry-cli   latest              84f9cabf011f        10 hours ago        189MB\nmr.io/docker-registry-cli          latest              84f9cabf011f        10 hours ago        189MB\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e上面列出的，就是我们刚才从Docker Hub上抓取到本地的Image，以及要推送到\u003ccode class=\"language-plaintext highlighter-rouge\"\u003emr.io\u003c/code\u003e的Image Tag。而这些Image或者Tag，在宿主机器上是看不到的！DIND技术的神奇之处就在于，所有在容器内进行的操作对宿主机的Registry缓存都不会产生任何影响。当我们完成工作从容器退出后，这些缓存在本地的Image和Tag都将不复存在，从而留给了宿主机一个非常干净的空间。\u003c/p\u003e\n\n\u003cp\u003e好了，有关Docker Registry CLI的使用就先介绍到这里了。在下一篇文章中，我们将进一步介绍如何从多个Registry批量复制Image到目标Registry，更加灵活丰富的查询功能，以及如何清理Registry上的Image。\u003c/p\u003e\n\n\u003cp\u003e关于Docker Registry CLI，如果你有任何疑问，或者希望通过贡献代码来增强这一工具，欢迎发送邮件至\u003ccode class=\"language-plaintext highlighter-rouge\"\u003emorningspace@yahoo.com\u003c/code\u003e。更多详情请访问\u003ca href=\"https://github.com/morningspace/docker-registry-cli\"\u003eGitHub库\u003c/a\u003e及\u003ca href=\"/studio\"\u003e晴耕工坊\u003c/a\u003e的主页。\u003c/p\u003e\n\n\u003chr/\u003e\n\u003cp\u003e\u003cem\u003eHave fun!\u003c/em\u003e\u003c/p\u003e\n\n\u003cp\u003e\u003cem\u003eMorningSpace Studio\u003c/em\u003e\u003c/p\u003e\n\n        \n      \u003c/section\u003e\n\n      \u003cfooter class=\"page__meta\"\u003e\n        \n        \n  \n\n\n  \n\n  \u003cp class=\"page__taxonomy\"\u003e\n    \u003cstrong\u003e\u003ci class=\"fas fa-fw fa-tags\" aria-hidden=\"true\"\u003e\u003c/i\u003e 标签: \u003c/strong\u003e\n    \u003cspan itemprop=\"keywords\"\u003e\n    \n      \u003ca href=\"/tags/#docker\" class=\"page__taxonomy-item p-category\" rel=\"tag\"\u003edocker\u003c/a\u003e\u003cspan class=\"sep\"\u003e, \u003c/span\u003e\n    \n      \u003ca href=\"/tags/#shell\" class=\"page__taxonomy-item p-category\" rel=\"tag\"\u003eshell\u003c/a\u003e\u003cspan class=\"sep\"\u003e, \u003c/span\u003e\n    \n      \u003ca href=\"/tags/#studio\" class=\"page__taxonomy-item p-category\" rel=\"tag\"\u003estudio\u003c/a\u003e\u003cspan class=\"sep\"\u003e, \u003c/span\u003e\n    \n      \u003ca href=\"/tags/#studio-reg-cli\" class=\"page__taxonomy-item p-category\" rel=\"tag\"\u003estudio-reg-cli\u003c/a\u003e\n    \n    \u003c/span\u003e\n  \u003c/p\u003e\n\n\n\n\n  \n\n\n  \n\n  \u003cp class=\"page__taxonomy\"\u003e\n    \u003cstrong\u003e\u003ci class=\"fas fa-fw fa-folder-open\" aria-hidden=\"true\"\u003e\u003c/i\u003e 分类: \u003c/strong\u003e\n    \u003cspan itemprop=\"keywords\"\u003e\n    \n      \u003ca href=\"/categories/#tech\" class=\"page__taxonomy-item p-category\" rel=\"tag\"\u003etech\u003c/a\u003e\n    \n    \u003c/span\u003e\n  \u003c/p\u003e\n\n\n        \n\n  \u003cp class=\"page__date\"\u003e\u003cstrong\u003e\u003ci class=\"fas fa-fw fa-calendar-alt\" aria-hidden=\"true\"\u003e\u003c/i\u003e 更新时间:\u003c/strong\u003e \u003ctime class=\"dt-published\" datetime=\"2019-05-12T00:00:00+08:00\"\u003eMay 12, 2019\u003c/time\u003e\u003c/p\u003e\n\n      \u003c/footer\u003e\n\n      \u003csection class=\"page__share\"\u003e\n  \n    \u003ch4 class=\"page__share-title\"\u003e分享\u003c/h4\u003e\n  \n\n  \u003ca href=\"https://twitter.com/intent/tweet?text=Docker+Registry+CLI%E8%BD%BB%E6%9D%BE%E7%AE%A1%E7%90%86Docker%E6%B3%A8%E5%86%8C%E8%A1%A8%28%E4%B8%8A%29%20https%3A%2F%2Fmorningspace.github.io%2Ftech%2Fuse-docker-reg-cli-1%2F\" class=\"btn btn--twitter\" onclick=\"window.open(this.href, \u0026#39;window\u0026#39;, \u0026#39;left=20,top=20,width=500,height=500,toolbar=1,resizable=0\u0026#39;); return false;\" title=\"分享 Twitter\"\u003e\u003ci class=\"fab fa-fw fa-twitter\" aria-hidden=\"true\"\u003e\u003c/i\u003e\u003cspan\u003e Twitter\u003c/span\u003e\u003c/a\u003e\n\n  \u003ca href=\"https://www.facebook.com/sharer/sharer.php?u=https%3A%2F%2Fmorningspace.github.io%2Ftech%2Fuse-docker-reg-cli-1%2F\" class=\"btn btn--facebook\" onclick=\"window.open(this.href, \u0026#39;window\u0026#39;, \u0026#39;left=20,top=20,width=500,height=500,toolbar=1,resizable=0\u0026#39;); return false;\" title=\"分享 Facebook\"\u003e\u003ci class=\"fab fa-fw fa-facebook\" aria-hidden=\"true\"\u003e\u003c/i\u003e\u003cspan\u003e Facebook\u003c/span\u003e\u003c/a\u003e\n\n  \u003ca href=\"https://www.linkedin.com/shareArticle?mini=true\u0026amp;url=https%3A%2F%2Fmorningspace.github.io%2Ftech%2Fuse-docker-reg-cli-1%2F\" class=\"btn btn--linkedin\" onclick=\"window.open(this.href, \u0026#39;window\u0026#39;, \u0026#39;left=20,top=20,width=500,height=500,toolbar=1,resizable=0\u0026#39;); return false;\" title=\"分享 LinkedIn\"\u003e\u003ci class=\"fab fa-fw fa-linkedin\" aria-hidden=\"true\"\u003e\u003c/i\u003e\u003cspan\u003e LinkedIn\u003c/span\u003e\u003c/a\u003e\n\u003c/section\u003e\n\n\n      \n  \u003cnav class=\"pagination\"\u003e\n    \n      \u003ca href=\"/tech/elash101-5/\" class=\"pagination--pager\" title=\"Elastic Shell 101 - Advanced Features\n\"\u003e向前\u003c/a\u003e\n    \n    \n      \u003ca href=\"/tech/use-docker-reg-cli-2/\" class=\"pagination--pager\" title=\"Docker Registry CLI轻松管理Docker注册表(下)\n\"\u003e向后\u003c/a\u003e\n    \n  \u003c/nav\u003e\n\n    \u003c/div\u003e",
  "Date": "2019-05-12T00:00:00+08:00",
  "Author": "MornigSpace"
}