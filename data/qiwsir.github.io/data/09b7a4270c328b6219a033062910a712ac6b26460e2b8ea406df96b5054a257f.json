{
  "Source": "qiwsir.github.io",
  "Title": "Python3.8新语法：海象运算符",
  "Link": "https://qiwsir.github.io/2020/03/03/python-walrus-operator/",
  "Content": "\u003carticle class=\"post-article\"\u003e\n    \u003ch2\u003ePython3.8新语法：海象运算符\u003c/h2\u003e\n    \u003cp class=\"post-date\"\u003e2020-03-03\u003c/p\u003e\n    \u003csection class=\"markdown-content\"\u003e\u003cp\u003e作者：Brett Slatkin\u003c/p\u003e\n\u003cp\u003e翻译：老齐\u003c/p\u003e\n\u003cp\u003e与本文内容有关的图书：《跟老齐学Python：轻松入门》、《Python大学实用教程》（以下图书，各大电商平台有售）\u003c/p\u003e\n\u003cimg src=\"https://public-tuchuang.oss-cn-hangzhou.aliyuncs.com/my_book4_20200116132005.png\" style=\"zoom:67%;\"/\u003e\n\n\u003cimg src=\"https://public-tuchuang.oss-cn-hangzhou.aliyuncs.com/%E8%BD%BB%E6%9D%BE%E5%85%A5%E9%97%A8_20200122130623.png\" style=\"zoom:67%;\"/\u003e\n\n\u003chr/\u003e\n\u003cp\u003ePython3.8引入了一种叫做海象运算符（walrus）的新语法（\u003cstrong\u003e译者注：\u003c/strong\u003e 对于walrus的翻译，目前尚未出现对于Python的专门术语翻译，所以，此处姑且用字面意思“海象”），它其实是一种赋值语句，用于解决Python语言中长期存在的、可能导致代码重复的问题。正常的赋值语句是\u003ccode\u003ea=b\u003c/code\u003e，读作“a等于b”，而海象赋值语句是\u003ccode\u003ea:=b\u003c/code\u003e，读作“a walrus /ˈwɔːlrəs/ b”（因为\u003ccode\u003e:=\u003c/code\u003e看起来像一对眼球和獠牙，类似于海象。注意：此语句还没有适合的中文读法，总不能读作“a海象b”吧）。\u003c/p\u003e\n\u003cp\u003e海象运算符的优势在于能在不允许赋值的地方（如if语句的条件表达式中）使用赋值变量。海象运算符左侧有个标识符，赋值表达式的值等于分配给这个标识符的值。\u003c/p\u003e\n\u003cp\u003e例如，假设我有一篮子新鲜水果，我正试图经营一家果汁店。在这里，我定义了篮子里的东西：\u003c/p\u003e\n\u003cfigure class=\"highlight plain\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003efresh_fruit = {\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u0026#39;apple\u0026#39;: 10,\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u0026#39;banana\u0026#39;: 8,\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u0026#39;lemon\u0026#39;: 5,\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e}\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e当顾客到柜台点柠檬水时，我需要确保篮子里至少有一个柠檬用来榨果汁。我的操作方法是检索柠檬的数量，然后使用if语句查询非零的值：\u003c/p\u003e\n\u003cfigure class=\"highlight plain\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e8\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e9\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e10\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e11\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003edef make_lemonade(count):\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    ...\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003edef out_of_stock():\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    ...\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003ecount = fresh_fruit.get(\u0026#39;lemon\u0026#39;, 0)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eif count:\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    make_lemonade(count)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eelse:\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    out_of_stock()\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e这个看似简单的代码问题吸引了过多的关注。\u003ccode\u003ecount\u003c/code\u003e变量仅在if语句的第一个代码块中使用，在if语句上方定义\u003ccode\u003ecount\u003c/code\u003e会使它看起来比实际情况更为重要，好像后面的所有代码（包括else块）都需要访问\u003ccode\u003ecount\u003c/code\u003e变量，然而事实并非如此。\u003c/p\u003e\n\u003cp\u003e我们获取一个值，检查它是否为非零，然后使用它。这种模式在Python中非常常见。许多程序员试图绕过多次出现\u003ccode\u003ecount\u003c/code\u003e的情况，甚至不惜使用各种损害可读性的招数。现在好了，在Python3.8中增加了海象运算符，可以简化上面的代码。\u003c/p\u003e\n\u003cfigure class=\"highlight plain\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003eif count := fresh_fruit.get(\u0026#39;lemon\u0026#39;, 0):\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    make_lemonade(count)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eelse:\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    out_of_stock()\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e虽然现在只是少了一行，但可读性提高很多。因为现在可以清楚地看到\u003ccode\u003ecount\u003c/code\u003e只与if语句的第一行相关。赋值表达式首先为\u003ccode\u003ecount\u003c/code\u003e变量赋值，然后在if语句的上下文中使用该值，以确定如何继续控制流程。这两步行为——分配和评估——是海象运算符的基本性质。\u003c/p\u003e\n\u003cp\u003e柠檬是非常有效的，所以我的柠檬水配方中只需要一个，这意味着非零检查就足够了。不过，如果顾客点了苹果酒，我需要确保至少有四个苹果。在这里，我从\u003ccode\u003efruit_basket\u003c/code\u003e字典中获取计数，然后在if语句中使用比较表达式：\u003c/p\u003e\n\u003cfigure class=\"highlight plain\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e8\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003edef make_cider(count):\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    ...\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003ecount = fresh_fruit.get(\u0026#39;apple\u0026#39;, 0)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eif count \u0026gt;= 4:\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    make_cider(count)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eelse:\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    out_of_stock()\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e这个问题和柠檬水的例子一样，\u003ccode\u003ecount\u003c/code\u003e的赋值会分散对这个变量的注意力。在这里，我还使用了海象运算符来提高代码的清晰度：\u003c/p\u003e\n\u003cfigure class=\"highlight plain\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003eif (count := fresh_fruit.get(\u0026#39;apple\u0026#39;, 0)) \u0026gt;= 4:\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    make_cider(count)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eelse:\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    out_of_stock()\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e这样做可以收到预期的效果，并使代码缩短了一行。需要注意的是，我需要用圆括号将赋值表达式括起来，以便与if语句中的4进行比较。在柠檬水的例子中不需要使用圆括号，因为赋值表达式本身就是一个非零检查；它不是一个较大表达式的子表达式。与其他表达式一样，应尽量避免使用圆括号把赋值表达式括起来。\u003c/p\u003e\n\u003cp\u003e有时候会出现一种类似的重复模式，那就是当我需要根据某些条件在封闭范围内分配一个变量，然后在函数中的稍后位置引用该变量。例如，假设客户订购了一些香蕉冰沙。为了制作它们，我需要至少两个香蕉的香蕉片，否则将引发\u003ccode\u003eOutOfBananas\u003c/code\u003e异常。在这里，我以一种典型的方式来实现这个逻辑：\u003c/p\u003e\n\u003cfigure class=\"highlight plain\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e8\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e9\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e10\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e11\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e12\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e13\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e14\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e15\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e16\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e17\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e18\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003edef slice_bananas(count):\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    ...\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eclass OutOfBananas(Exception):\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    pass\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003edef make_smoothies(count):\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    ...\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003epieces = 0\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003ecount = fresh_fruit.get(\u0026#39;banana\u0026#39;, 0)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eif count \u0026gt;= 2:\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    pieces = slice_bananas(count)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003etry:\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    smoothies = make_smoothies(pieces)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eexcept OutOfBananas:\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    out_of_stock()\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e另一种常见的方法是将\u003ccode\u003epieces=0\u003c/code\u003e赋值放入else块：\u003c/p\u003e\n\u003cfigure class=\"highlight plain\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e8\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e9\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e10\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003ecount = fresh_fruit.get(\u0026#39;banana\u0026#39;, 0)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eif count \u0026gt;= 2:\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    pieces = slice_bananas(count)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eelse:\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    pieces = 0\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003etry:\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    smoothies = make_smoothies(pieces)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eexcept OutOfBananas:\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    out_of_stock()\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e第二种方法可能会让人觉得奇怪，因为这意味着\u003ccode\u003epieces\u003c/code\u003e变量出现在了条件语句中两个不同的位置，可以在这两个位置进行初始定义。由于Python的作用域规则，这种分割定义在技术上是可行的，但它的可读性不好，也不优雅。这就是许多人喜欢上面那种结构的原因，在它里面的\u003ccode\u003epieces = 0\u003c/code\u003e的赋值在前面出现。\u003c/p\u003e\n\u003cp\u003e海象运算符也可以用一行代码来缩短这个例子。这个小变化消除了对\u003ccode\u003ecount\u003c/code\u003e变量的任何强调。现在，很明显，除了if语句之外，\u003ccode\u003epieces\u003c/code\u003e也很重要:\u003c/p\u003e\n\u003cfigure class=\"highlight plain\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e8\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003epieces = 0\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eif (count := fresh_fruit.get(\u0026#39;banana\u0026#39;, 0)) \u0026gt;= 2:\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    pieces = slice_bananas(count)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003etry:\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    smoothies = make_smoothies(pieces)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eexcept OutOfBananas:\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    out_of_stock()\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e使用海象运算符还可以提高在条件语句中分别在两个分支中的\u003ccode\u003epieces\u003c/code\u003e复制的可读性。当\u003ccode\u003ecount\u003c/code\u003e定义不再位于if语句之前时，跟踪\u003ccode\u003epieces\u003c/code\u003e变量变得更容易:\u003c/p\u003e\n\u003cfigure class=\"highlight plain\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e8\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e9\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003eif (count := fresh_fruit.get(\u0026#39;banana\u0026#39;, 0)) \u0026gt;= 2:\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    pieces = slice_bananas(count)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eelse:\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    pieces = 0\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003etry:\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    smoothies = make_smoothies(pieces)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eexcept OutOfBananas:\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    out_of_stock()\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e初学Python的程序员经常遇到的一个难题是缺少灵活的\u003ccode\u003eswitch/case\u003c/code\u003e语句，与此类功能近似的一般做法是使用多个if、elif和else语句的深度嵌套。\u003c/p\u003e\n\u003cp\u003e例如，假设我想实现一个优先级系统，这样每个客户都可以自动获得最好的果汁，而不必预定。在这里，我设置这样的流程，让它先供应香蕉冰沙，然后供应苹果酒，最后供应柠檬水：\u003c/p\u003e\n\u003cfigure class=\"highlight plain\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e8\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e9\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e10\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e11\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e12\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e13\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e14\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003ecount = fresh_fruit.get(\u0026#39;banana\u0026#39;, 0)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eif count \u0026gt;= 2:\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    pieces = slice_bananas(count)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    to_enjoy = make_smoothies(pieces)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eelse:\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    count = fresh_fruit.get(\u0026#39;apple\u0026#39;, 0)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    if count \u0026gt;= 4:\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        to_enjoy = make_cider(count)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    else:\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        count = fresh_fruit.get(\u0026#39;lemon\u0026#39;, 0)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        if count:\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e            to_enjoy = make_lemonade(count)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        else:\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e            to_enjoy = \u0026#39;Nothing\u0026#39;\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e像这样难看的结构在Python代码中司空见惯，幸运的是，海象运算符提供了一个优雅的解决方案，它几乎可以像switch/case语句的专用语法一样通用：\u003c/p\u003e\n\u003cfigure class=\"highlight plain\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e8\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e9\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003eif (count := fresh_fruit.get(\u0026#39;banana\u0026#39;, 0)) \u0026gt;= 2:\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    pieces = slice_bananas(count)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    to_enjoy = make_smoothies(pieces)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eelif (count := fresh_fruit.get(\u0026#39;apple\u0026#39;, 0)) \u0026gt;= 4:\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    to_enjoy = make_cider(count)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eelif count := fresh_fruit.get(\u0026#39;lemon\u0026#39;, 0):\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    to_enjoy = make_lemonade(count)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eelse:\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    to_enjoy = \u0026#39;Nothing\u0026#39;\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e使用海象运算符版本只比原来的版本短五行，但是由于嵌套和缩进的减少，可读性有了很大提高。如果在你的代码中看到像上面那样丑陋的代买，我建议你尽量使用海象运算符重写。\u003c/p\u003e\n\u003cp\u003e初学Python的程序员常常遇到的另一个挫折是缺少do/while循环构造。例如，假设我想在新水果到货时将果汁装入瓶中，直到没有剩余的水果为止。在这里，我用while循环实现这个逻辑：\u003c/p\u003e\n\u003cfigure class=\"highlight plain\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e8\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e9\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e10\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e11\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e12\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e13\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003edef pick_fruit():\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    ...\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003edef make_juice(fruit, count):\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    ...\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003ebottles = []\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003efresh_fruit = pick_fruit()\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003ewhile fresh_fruit:\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    for fruit, count in fresh_fruit.items():\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        batch = make_juice(fruit, count)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        bottles.extend(batch)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    fresh_fruit = pick_fruit()\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e这里存在重复，先后执行了两次\u003ccode\u003efresh_fruit = pick_fruit()\u003c/code\u003e，一个在循环前设置初始条件，另一个在循环结束时补充到货的水果列表。\u003c/p\u003e\n\u003cp\u003e在这种情况下，改进代码复用的策略是使用loop-and-a-half（如果出现这种情况，需要立即退出并跳过循环体中的任何剩余语句）。这消除了多余的行，但它也破坏了while循环，使其成为一个愚蠢的无限循环。现在，循环的所有流控制都依赖于break条件语句：\u003c/p\u003e\n\u003cfigure class=\"highlight plain\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e8\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003ebottles = []\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003ewhile True:                     # Loop\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    fresh_fruit = pick_fruit()\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    if not fresh_fruit:         # And a half\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        break\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    for fruit, count in fresh_fruit.items():\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        batch = make_juice(fruit, count)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        bottles.extend(batch)\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e海象运算符消除了对loop-and-a-half的需要。方法是：允许重新设置\u003ccode\u003efresh_fruit\u003c/code\u003e变量，然后每次都通过while循环有条件地求值。此解决方案简短易读，应该是代码中的首选方法：\u003c/p\u003e\n\u003cfigure class=\"highlight plain\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003ebottles = []\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003ewhile fresh_fruit := pick_fruit():\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    for fruit, count in fresh_fruit.items():\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        batch = make_juice(fruit, count)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        bottles.extend(batch)\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e在许多其他情况下，可以使用还有海象运算符的赋值表达式来消除冗余。通常，当你发现自己在许多行中多次重复同一个表达式或赋值时，应该考虑使用海象运算符来提高可读性。\u003c/p\u003e\n\u003ch2 id=\"牢记\"\u003e\u003ca href=\"#牢记\" class=\"headerlink\" title=\"牢记\"\u003e\u003c/a\u003e牢记\u003c/h2\u003e\u003cul\u003e\n\u003cli\u003e赋值表达式使用walrus运算符(:=)在单个表达式中同时对变量名进行赋值和计算，从而减少重复。\u003c/li\u003e\n\u003cli\u003e当赋值表达式是一个较大表达式的子表达式时，它必须用圆括号括起来。\u003c/li\u003e\n\u003cli\u003e尽管在Python中不能用switch/case语句和do/while循环，但是通过使用海象运算符的赋值表达式可以更清楚地模拟它们的功能。\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e原文链接：\u003ca href=\"https://effectivepython.com/2020/02/02/prevent-repetition-with-assignment-expressions\" target=\"_blank\" rel=\"noopener\"\u003ehttps://effectivepython.com/2020/02/02/prevent-repetition-with-assignment-expressions\u003c/a\u003e\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e关注微信公众号：老齐教室。读深度文章，得精湛技艺，享绚丽人生。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003c/section\u003e\n    \u003c!-- Tags START --\u003e\n    \n    \u003c!-- Tags END --\u003e\n    \u003c!-- NAV START --\u003e\n    \n  \u003cdiv class=\"nav-container\"\u003e\n    \u003c!-- reverse left and right to put prev and next in a more logic postition --\u003e\n    \n      \u003ca class=\"nav-left\" href=\"/2020/03/02/django-group-by/\"\u003e\n        \u003cspan class=\"nav-arrow\"\u003e← \u003c/span\u003e\n        \n          Django中用SQL实现分组查询\n        \n      \u003c/a\u003e\n    \n    \n      \u003ca class=\"nav-right\" href=\"/2020/03/05/question-and-answer/\"\u003e\n        \n          针对各种编程问题，提供最权威回答\n        \n        \u003cspan class=\"nav-arrow\"\u003e →\u003c/span\u003e\n      \u003c/a\u003e\n    \n  \u003c/div\u003e\n\n    \u003c!-- NAV END --\u003e\n    \u003c!-- 打赏 START --\u003e\n    \n      \u003cdiv class=\"money-like\"\u003e\n        \u003cdiv class=\"reward-btn\"\u003e\n          赏\n          \u003cspan class=\"money-code\"\u003e\n            \u003cspan class=\"alipay-code\"\u003e\n              \u003cdiv class=\"code-image\"\u003e\u003c/div\u003e\n              \u003cb\u003e使用支付宝打赏\u003c/b\u003e\n            \u003c/span\u003e\n            \u003cspan class=\"wechat-code\"\u003e\n              \u003cdiv class=\"code-image\"\u003e\u003c/div\u003e\n              \u003cb\u003e使用微信打赏\u003c/b\u003e\n            \u003c/span\u003e\n          \u003c/span\u003e\n        \u003c/div\u003e\n        \u003cp class=\"notice\"\u003e若你觉得我的文章对你有帮助，欢迎点击上方按钮对我打赏\u003c/p\u003e\n      \u003c/div\u003e\n    \n    \u003c!-- 打赏 END --\u003e\n    \u003c!-- 二维码 START --\u003e\n    \u003c!--% if (theme.qrcode) { %--\u003e\n      \u003cdiv class=\"qrcode\"\u003e\n        \u003c!--canvas id=\"share-qrcode\"\u003e\u003c/!--canvas--\u003e\n        \u003cimg src=\"https://public-tuchuang.oss-cn-hangzhou.aliyuncs.com/WechatIMG6_20200109154827.jpeg\" width=\"400\"/\u003e\n        \u003cp class=\"notice\"\u003e关注微信公众号，读文章、听课程，提升技能\u003c/p\u003e\n      \u003c/div\u003e\n    \u003c!--% } %--\u003e\n    \u003c!-- 二维码 END --\u003e\n    \n      \u003c!-- No Comment --\u003e\n    \n  \u003c/article\u003e",
  "Date": "2020-03-03T00:00:00Z",
  "Author": "老齐教室"
}