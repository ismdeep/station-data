{
  "Source": "qiwsir.github.io",
  "Title": "python绝技30例",
  "Link": "https://qiwsir.github.io/2020/01/24/python30%E4%BE%8B/",
  "Content": "\u003carticle class=\"post-article\"\u003e\n    \u003ch2\u003epython绝技30例\u003c/h2\u003e\n    \u003cp class=\"post-date\"\u003e2020-01-24\u003c/p\u003e\n    \u003csection class=\"markdown-content\"\u003e\u003ch1 id=\"Python绝技30例\"\u003e\u003ca href=\"#Python绝技30例\" class=\"headerlink\" title=\"Python绝技30例\"\u003e\u003c/a\u003ePython绝技30例\u003c/h1\u003e\u003cp\u003e作者：Erik-Jan van Baaren\u003c/p\u003e\n\u003cp\u003e翻译：老齐\u003c/p\u003e\n\u003chr/\u003e\n\u003cp\u003e如果你使用Python，下面要介绍的30个技巧，是能够让你提高编码效率的最佳方案，不得不看。\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eLife is short, You need Python.\u003c/strong\u003e\u003c/p\u003e\n\u003cimg src=\"https://public-tuchuang.oss-cn-hangzhou.aliyuncs.com/my_book4_20200116132005.png\" style=\"zoom:67%;\"/\u003e\n\n\u003ch2 id=\"1-使用Python3\"\u003e\u003ca href=\"#1-使用Python3\" class=\"headerlink\" title=\"1.使用Python3\"\u003e\u003c/a\u003e1.使用Python3\u003c/h2\u003e\u003cp\u003e从2020年1月1日起，Python2已经正式退役了。下面的所有说明，都仅适用于Python3。如果你还停留在Python2.7，现在就应该升级。MacOS系统中，使用Homebrew就能轻松升级Python。\u003c/p\u003e\n\u003ch2 id=\"2-检查程序所需的最低Python版本\"\u003e\u003ca href=\"#2-检查程序所需的最低Python版本\" class=\"headerlink\" title=\"2.检查程序所需的最低Python版本\"\u003e\u003c/a\u003e2.检查程序所需的最低Python版本\u003c/h2\u003e\u003cp\u003e你可以检查程序中的Python版本，以确保用户没有使用不兼容的版本运行。可以用下列代码进行简单检查：\u003c/p\u003e\n\u003cfigure class=\"highlight plain\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003eif not sys.version_info \u0026gt; (2, 7):\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    # berate your user for running a 10 year \u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    # python version\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eelif not sys.version_info \u0026gt;= (3, 5):\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    # Kindly tell your user (s)he needs to upgrade \u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    # because you\u0026#39;re using 3.5 features\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003ch2 id=\"3-使用IPython\"\u003e\u003ca href=\"#3-使用IPython\" class=\"headerlink\" title=\"3.使用IPython\"\u003e\u003c/a\u003e3.使用IPython\u003c/h2\u003e\u003cp\u003e\u003cimg src=\"https://public-tuchuang.oss-cn-hangzhou.aliyuncs.com/p1_20200120183458.png\" alt=\"\"/\u003e\u003c/p\u003e\n\u003cp\u003eIPython基本上是一个增强的shell，只看它的拼写自动填充功能，你就觉得用它是值得的。它的优点有很多，我很喜欢所有内置的魔法命令，在这里列举几个这样的命令：\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e%cd —— 更改当前工作目录\u003c/li\u003e\n\u003cli\u003e%edit —— 打开编辑器并在关闭编辑器后执行键入的代码\u003c/li\u003e\n\u003cli\u003e%env —— 显示当前环境变量\u003c/li\u003e\n\u003cli\u003e%pip install [pkgs] —— 在不离开交互式shell的情况下安装软件包\u003c/li\u003e\n\u003cli\u003e%time和%timeit —— 对Python代码的执行进行计时\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e另一个有用的特性是引用前面的输出，In和Out都是实际的对象，你可以借助Out[3]来使用第三个命令的输出。\u003c/p\u003e\n\u003cp\u003e安装IPython:\u003c/p\u003e\n\u003cfigure class=\"highlight plain\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003epip3 install ipython\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003ch2 id=\"4-列表解析\"\u003e\u003ca href=\"#4-列表解析\" class=\"headerlink\" title=\"4. 列表解析\"\u003e\u003c/a\u003e4. 列表解析\u003c/h2\u003e\u003cp\u003e列表解析可以替换丑陋的用于追加列表的for循环。列表解析的基本语法是:\u003c/p\u003e\n\u003cfigure class=\"highlight plain\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e[ expression for item in list if conditional ]\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e下面的示例演示了用数字填充列表的操作：\u003c/p\u003e\n\u003cfigure class=\"highlight plain\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003emylist = [i for i in range(10)] \u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eprint(mylist)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e# [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e可以使用一个表达式，也可以做一些数学运算：\u003c/p\u003e\n\u003cfigure class=\"highlight plain\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003esquares = [x**2 for x in range(10)]\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eprint(squares)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e# [0, 1, 4, 9, 16, 25, 36, 49, 64, 81]\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e甚至调用外部函数：\u003c/p\u003e\n\u003cfigure class=\"highlight plain\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003edef some_function(a):\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    return (a + 5) / 2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003emy_formula = [some_function(i) for i in range(10)]\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eprint(my_formula)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e# [2, 3, 3, 4, 4, 5, 5, 6, 6, 7]\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e还可以在列表中使用\u003ccode\u003eif\u003c/code\u003e实现筛选操作，例如找出偶数：\u003c/p\u003e\n\u003cfigure class=\"highlight plain\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003efiltered = [i for i in range(20) if i%2==0] \u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eprint(filtered)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e# [0, 2, 4, 6, 8, 10, 12, 14, 16, 18]\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003ch2 id=\"5-检查对象占用的内存\"\u003e\u003ca href=\"#5-检查对象占用的内存\" class=\"headerlink\" title=\"5.检查对象占用的内存\"\u003e\u003c/a\u003e5.检查对象占用的内存\u003c/h2\u003e\u003cp\u003e使用\u003ccode\u003esys.getsizeof()\u003c/code\u003e可以检查对象的内存使用情况：\u003c/p\u003e\n\u003cfigure class=\"highlight plain\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003eimport sys 2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003emylist = range(0, 10000)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eprint(sys.getsizeof(mylist))\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e#48\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e稍等，为什么这个大列表只有48字节？\u003c/p\u003e\n\u003cp\u003e这是因为range函数返回的类只表现为一个列表，range函数比使用实际的数字列表更节省内存。\u003c/p\u003e\n\u003cp\u003e你可以使用列表解析来创建一个包含相同范围数字的列表：\u003c/p\u003e\n\u003cfigure class=\"highlight plain\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003eimport sys 2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003emyreallist = [x for x in range(0, 10000)]\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eprint(sys.getsizeof(myreallist))\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e# 87632\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cimg src=\"https://public-tuchuang.oss-cn-hangzhou.aliyuncs.com/%E8%BD%BB%E6%9D%BE%E5%85%A5%E9%97%A8_20200122130623.png\" style=\"zoom:67%;\"/\u003e\n\n\u003ch2 id=\"6-返回多个值\"\u003e\u003ca href=\"#6-返回多个值\" class=\"headerlink\" title=\"6. 返回多个值\"\u003e\u003c/a\u003e6. 返回多个值\u003c/h2\u003e\u003cp\u003ePython中的函数可以返回多个值，不需要把它们组装成字典、列表或类，原理如下：\u003c/p\u003e\n\u003cfigure class=\"highlight plain\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003edef get_user(id):\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    # fetch user from database \u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    # ....\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    return name, birthdate\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003ename, birthdate = get_user(4)\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e对于有限数量的返回值，这是可以的。但任何超过3个值的都应该放入指定的数据对象中。\u003c/p\u003e\n\u003ch2 id=\"7-使用数据类\"\u003e\u003ca href=\"#7-使用数据类\" class=\"headerlink\" title=\"7.使用数据类\"\u003e\u003c/a\u003e7.使用数据类\u003c/h2\u003e\u003cp\u003e自3.7版以来，Python提供了数据类（data class）。比起普通的类或其他的，如返回多个值或字典，数据类有几个优点：\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e数据类需要的代码数量少\u003c/li\u003e\n\u003cli\u003e借助\u003ccode\u003e__eq__\u003c/code\u003e能够实现数据类对象的比较\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003e__repr__\u003c/code\u003e为调试时打印数据类提供了接口\u003c/li\u003e\n\u003cli\u003e数据类需要有类型提示，减少了出现bug的可能性\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e下面是数据类示例：\u003c/p\u003e\n\u003cfigure class=\"highlight plain\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e8\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e9\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e10\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e11\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e12\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e13\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e14\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e15\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e16\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e17\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003efrom dataclasses import dataclass 2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e@dataclass\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eclass Card:\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    rank: str\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    suit: str\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003ecard = Card(\u0026#34;Q\u0026#34;, \u0026#34;hearts\u0026#34;) 9\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eprint(card == card)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e# True\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eprint(card.rank)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e#\u0026#39;Q\u0026#39;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eprint(card)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eCard(rank=\u0026#39;Q\u0026#39;, suit=\u0026#39;hearts\u0026#39;)\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003ch2 id=\"8-变量就地交换\"\u003e\u003ca href=\"#8-变量就地交换\" class=\"headerlink\" title=\"8.变量就地交换\"\u003e\u003c/a\u003e8.变量就地交换\u003c/h2\u003e\u003cp\u003e一个可以节省几行代码的小技巧：\u003c/p\u003e\n\u003cfigure class=\"highlight plain\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e8\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e9\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003ea=1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eb=2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003ea, b = b, a\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eprint (a)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e#2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eprint (b) \u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e#1\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003ch2 id=\"9-合并字典（Python3-5-）\"\u003e\u003ca href=\"#9-合并字典（Python3-5-）\" class=\"headerlink\" title=\"9.合并字典（Python3.5+）\"\u003e\u003c/a\u003e9.合并字典（Python3.5+）\u003c/h2\u003e\u003cp\u003e自Python 3.5以来，合并字典变得更加容易：\u003c/p\u003e\n\u003cfigure class=\"highlight plain\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003edict1={\u0026#39;a\u0026#39;:1,\u0026#39;b\u0026#39;:2}\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003edict2={\u0026#39;b\u0026#39;:3,\u0026#39;c\u0026#39;:4}\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003emerged = { **dict1, **dict2 }\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eprint (merged)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e# {\u0026#39;a\u0026#39;: 1, \u0026#39;b\u0026#39;: 3, \u0026#39;c\u0026#39;: 4}\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e如果存在重复的键，第一个字典中的键值对将被覆盖。\u003c/p\u003e\n\u003cimg src=\"https://public-tuchuang.oss-cn-hangzhou.aliyuncs.com/Django2%E7%AB%8B%E4%BD%93%E5%9B%BE_20200117164816.png\" style=\"zoom:67%;\"/\u003e\n\n\u003ch2 id=\"10-标题首字母大写\"\u003e\u003ca href=\"#10-标题首字母大写\" class=\"headerlink\" title=\"10. 标题首字母大写\"\u003e\u003c/a\u003e10. 标题首字母大写\u003c/h2\u003e\u003cp\u003e这只是字符串方法中的一个惬意之处：\u003c/p\u003e\n\u003cfigure class=\"highlight plain\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003emystring = \u0026#34;10 awesome python tricks\u0026#34; \u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eprint(mystring.title())\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e# \u0026#39;10 Awesome Python Tricks\u0026#39;\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003ch2 id=\"11-将字符串拆分为列表\"\u003e\u003ca href=\"#11-将字符串拆分为列表\" class=\"headerlink\" title=\"11.将字符串拆分为列表\"\u003e\u003c/a\u003e11.将字符串拆分为列表\u003c/h2\u003e\u003cp\u003e可以将字符串拆分为列表。在本例中，以空格为分隔符：\u003c/p\u003e\n\u003cfigure class=\"highlight plain\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003emystring = \u0026#34;The quick brown fox\u0026#34;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003emylist = mystring.split(\u0026#39; \u0026#39;)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eprint(mylist)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e# [\u0026#39;The\u0026#39;, \u0026#39;quick\u0026#39;, \u0026#39;brown\u0026#39;, \u0026#39;fox\u0026#39;]\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003ch2 id=\"12-将列表组合成字符串\"\u003e\u003ca href=\"#12-将列表组合成字符串\" class=\"headerlink\" title=\"12. 将列表组合成字符串\"\u003e\u003c/a\u003e12. 将列表组合成字符串\u003c/h2\u003e\u003cp\u003e与前面的操作相反，将列表中的元素组合为字符串，并在每个元素之间以空格为分隔符：\u003c/p\u003e\n\u003cfigure class=\"highlight plain\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003emylist = [\u0026#39;The\u0026#39;, \u0026#39;quick\u0026#39;, \u0026#39;brown\u0026#39;, \u0026#39;fox\u0026#39;]\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2 mystring = \u0026#34; \u0026#34;.join(mylist)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3 print(mystring)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4 # \u0026#39;The quick brown fox\u0026#39;\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e如果你想问为什么不是\u003ccode\u003emylist.join(\u0026#34; \u0026#34;)\u003c/code\u003e——好问题！\u003c/p\u003e\n\u003cp\u003e归根结底，\u003ccode\u003eString.join()\u003c/code\u003e函数不仅可以连接列表，还可以连接任何可迭代对象。把它放在字符串中可以防止在多个地方实现相同的功能。\u003c/p\u003e\n\u003ch2 id=\"13-表情符号\"\u003e\u003ca href=\"#13-表情符号\" class=\"headerlink\" title=\"13. 表情符号\"\u003e\u003c/a\u003e13. 表情符号\u003c/h2\u003e\u003cp\u003e\u003cimg src=\"https://public-tuchuang.oss-cn-hangzhou.aliyuncs.com/p2_20200121135809.png\" alt=\"\"/\u003e\u003c/p\u003e\n\u003cp\u003e这些表情符号，要么给人留下深刻印象，要么让人反感，这取决于谁在看。更重要的是，在分析社交媒体数据时，它可以派上用场。\u003c/p\u003e\n\u003cp\u003e首先，安装EMOJI模块：\u003c/p\u003e\n\u003cfigure class=\"highlight plain\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003epip3 install emoji\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e安装完毕，你可以做以下事情：\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"https://public-tuchuang.oss-cn-hangzhou.aliyuncs.com/p3_20200121140838.png\" alt=\"\"/\u003e\u003c/p\u003e\n\u003cp\u003e访问emoji的官方网站，可以看到更多示例。\u003c/p\u003e\n\u003ch2 id=\"14-列表切片\"\u003e\u003ca href=\"#14-列表切片\" class=\"headerlink\" title=\"14. 列表切片\"\u003e\u003c/a\u003e14. 列表切片\u003c/h2\u003e\u003cp\u003e列表切片的基本语法是：\u003c/p\u003e\n\u003cfigure class=\"highlight plain\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003ea[start:stop:step]\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003eStart，表示开始的索引；stop，表示结束位置的索引；ste，表示步长。start的默认值是0，step的默认值是1.\u003c/p\u003e\n\u003cp\u003e下面是一些例子：\u003c/p\u003e\n\u003cfigure class=\"highlight plain\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e8\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e9\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e10\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e11\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e12\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e13\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e14\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e# 创建一个列表，获取其前两个元素。\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003efirst_two = [1, 2, 3, 4, 5][0:2]\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eprint(first_two)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e# [1, 2]\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e# 将步长设置为2，即隔一个取一个元素：\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003esteps = [1, 2, 3, 4, 5][0:5:2]\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eprint(steps)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e# [1, 3, 5]\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e# 字符串也可以做同样的切片。\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003emystring = \u0026#34;abcdefdn nimt\u0026#34;[::2]\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eprint(mystring)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e# \u0026#39;aced it\u0026#39;\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003ch2 id=\"15-反转字符串和列表\"\u003e\u003ca href=\"#15-反转字符串和列表\" class=\"headerlink\" title=\"15. 反转字符串和列表\"\u003e\u003c/a\u003e15. 反转字符串和列表\u003c/h2\u003e\u003cp\u003e你可以使用上面的切片来反转字符串或列表，将步长值设置为-1，可以反转元素：\u003c/p\u003e\n\u003cfigure class=\"highlight plain\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003erevstring = \u0026#34;abcdefg\u0026#34;[::-1]\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eprint(revstring)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e# \u0026#39;gfedcba\u0026#39;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003erevarray = [1, 2, 3, 4, 5][::-1]\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eprint(revarray)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e# [5, 4, 3, 2, 1]\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003ch2 id=\"16-读取图片\"\u003e\u003ca href=\"#16-读取图片\" class=\"headerlink\" title=\"16. 读取图片\"\u003e\u003c/a\u003e16. 读取图片\u003c/h2\u003e\u003cp\u003e用Python读取图片，首先，安装Pillow，这是Python中的一个图像库：\u003c/p\u003e\n\u003cfigure class=\"highlight plain\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003epip3 install Pillow\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e现在将这个图像下载到本地，命名为kittens.jpg：\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"https://public-tuchuang.oss-cn-hangzhou.aliyuncs.com/p4_20200121151547.png\" alt=\"\"/\u003e\u003c/p\u003e\n\u003cp\u003e用下面的Python代码读此图片文件：\u003c/p\u003e\n\u003cfigure class=\"highlight plain\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003efrom PIL import Image 2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eim = Image.open(\u0026#34;kittens.jpg\u0026#34;)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eim.show()\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eprint(im.format, im.size, im.mode)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6 # JPEG (1920, 1357) RGB\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003ePillow不仅仅可以显示图像，它可以对图像进行分析、调整大小、过滤、变形等。有关其所有功能，请参阅文档。\u003c/p\u003e\n\u003ch2 id=\"17-使用map\"\u003e\u003ca href=\"#17-使用map\" class=\"headerlink\" title=\"17.使用map()\"\u003e\u003c/a\u003e17.使用map()\u003c/h2\u003e\u003cp\u003emap()是Python的一个内置函数，它的语法是：\u003c/p\u003e\n\u003cfigure class=\"highlight plain\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003emap(function, something_iterable)\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e所以你给它一个要执行的函数和一些要执行的东西，可以是任何可迭代的东西。在下面的示例中，我将使用一个列表。\u003c/p\u003e\n\u003cfigure class=\"highlight plain\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e8\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e9\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e10\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e11\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e12\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003edef upper(s):\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    return s.upper()\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003emylist = list(map(upper, [\u0026#39;sentence\u0026#39;, \u0026#39;fragment\u0026#39;]))\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eprint(mylist)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e# [\u0026#39;SENTENCE\u0026#39;, \u0026#39;FRAGMENT\u0026#39;]\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e# Convert a string representation of\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e# a number into a list of ints.\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003elist_of_ints = list(map(int, \u0026#34;1234567\u0026#34;)))\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eprint(list_of_ints)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e# [1, 2, 3, 4, 5, 6, 7]\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e看看你自己的代码，是否可以使用\u003ccode\u003emap()\u003c/code\u003e而不是某个循环！\u003c/p\u003e\n\u003ch2 id=\"18-从列表或字符串中获取唯一元素\"\u003e\u003ca href=\"#18-从列表或字符串中获取唯一元素\" class=\"headerlink\" title=\"18.从列表或字符串中获取唯一元素\"\u003e\u003c/a\u003e18.从列表或字符串中获取唯一元素\u003c/h2\u003e\u003cp\u003e使用\u003ccode\u003eset()\u003c/code\u003e函数创建集合，你可以从列表或类似列表的对象中获取所有的唯一元素：\u003c/p\u003e\n\u003cfigure class=\"highlight plain\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e8\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e9\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003emylist=[1,1,2,3,4,5,5,5,6,6]\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eprint (set(mylist))\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e# {1, 2, 3, 4, 5, 6}\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e# And since a string can be treated like a\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e# list of letters, you can also get the\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e# unique letters from a string this way:\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eprint (set(\u0026#34;aaabbbcccdddeeefff\u0026#34;))\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e# {\u0026#39;a\u0026#39;, \u0026#39;b\u0026#39;, \u0026#39;c\u0026#39;, \u0026#39;d\u0026#39;, \u0026#39;e\u0026#39;, \u0026#39;f\u0026#39;}\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003ch2 id=\"19-找出高频值\"\u003e\u003ca href=\"#19-找出高频值\" class=\"headerlink\" title=\"19. 找出高频值\"\u003e\u003c/a\u003e19. 找出高频值\u003c/h2\u003e\u003cp\u003e要在列表或字符串中查找最常出现的值，请执行以下操作：\u003c/p\u003e\n\u003cfigure class=\"highlight plain\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003etest=[1,2,3,4,2,2,3,1,4,4,4] \u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eprint(max(set(test), key = test.count)) \u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e#4\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e你明白为什么这样能奏效吗？在阅读下文之前，试着自己弄清楚。\u003c/p\u003e\n\u003cp\u003e你没试过吧？不管怎样，我都会告诉你：\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003emax()\u003c/code\u003e将返回列表中的最大值。\u003ccode\u003ekey\u003c/code\u003e参数的值是一个函数，它定义了排序规则，在本例中为\u003ccode\u003etest.count\u003c/code\u003e，该函数应用于可迭代对象的每个项。\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003etest.count\u003c/code\u003e是列表的方法，它接受一个参数并计算该参数的出现次数。所以\u003ccode\u003etest.count(1)\u003c/code\u003e将返回2，\u003ccode\u003etest.count(4)\u003c/code\u003e返回4。\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eset(test)\u003c/code\u003e返回\u003ccode\u003etest\u003c/code\u003e中的所有唯一值，因此得到\u003ccode\u003e{1、2、3、4}\u003c/code\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e所以我们在这一行代码中要做的是获取\u003ccode\u003etest\u003c/code\u003e的所有唯一值，即\u003ccode\u003e{1，2，3，4}\u003c/code\u003e。接下来，\u003ccode\u003emax\u003c/code\u003e将把\u003ccode\u003elist.count\u003c/code\u003e函数应用于它们并返回最大值。\u003c/p\u003e\n\u003cp\u003e诚然，这行代码不是我发明的。\u003c/p\u003e\n\u003ch2 id=\"20-创建进度条\"\u003e\u003ca href=\"#20-创建进度条\" class=\"headerlink\" title=\"20.创建进度条\"\u003e\u003c/a\u003e20.创建进度条\u003c/h2\u003e\u003cp\u003e你可以创建自己的进度条，这很有趣。推荐使用下面的第三方包：\u003c/p\u003e\n\u003cfigure class=\"highlight plain\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003epip3 install progress\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e现在，你可以轻松创建进度条：\u003c/p\u003e\n\u003cfigure class=\"highlight plain\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003efrom progress.bar import Bar\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003ebar = Bar(\u0026#39;Processing\u0026#39;, max=20)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003efor i in range(20):\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    # Do some work\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    bar.next() \u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003ebar.finish()\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e在运行过程中，会有动画效果。\u003c/p\u003e\n\u003cimg src=\"https://public-tuchuang.oss-cn-hangzhou.aliyuncs.com/%E7%89%B9%E5%BE%81%E5%B7%A5%E7%A8%8B2_20200114135935.png\" style=\"zoom:67%;\"/\u003e\n\n\u003ch2 id=\"21-在IPython中使用下划线\"\u003e\u003ca href=\"#21-在IPython中使用下划线\" class=\"headerlink\" title=\"21. 在IPython中使用下划线\"\u003e\u003c/a\u003e21. 在IPython中使用下划线\u003c/h2\u003e\u003cp\u003e你可以使用下划线获得最后一个表达式的结果，在IPython，它看起来是这样的：\u003c/p\u003e\n\u003cfigure class=\"highlight plain\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003eIn [1]: 3 * 3 \u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eOut[1]: 9 \u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eIn [2]: _ + 3 \u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eOut[2]: 12\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e这也适用于Python shell。此外，IPython shell允许使用Out[n]来获取表达式In[n]的值。例如，在上面的例子中，Out[1]会输出数字9。\u003c/p\u003e\n\u003ch2 id=\"22-快速创建web服务器\"\u003e\u003ca href=\"#22-快速创建web服务器\" class=\"headerlink\" title=\"22.快速创建web服务器\"\u003e\u003c/a\u003e22.快速创建web服务器\u003c/h2\u003e\u003cp\u003e你可以快速启动web服务器，以便将当前目录的内容发出去：\u003c/p\u003e\n\u003cfigure class=\"highlight plain\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003epython3 -m http.server\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e如果你想和同事分享一些东西，或者想测试一个简单的HTML站点，这很有用。\u003c/p\u003e\n\u003ch2 id=\"23-多行字符串\"\u003e\u003ca href=\"#23-多行字符串\" class=\"headerlink\" title=\"23.多行字符串\"\u003e\u003c/a\u003e23.多行字符串\u003c/h2\u003e\u003cp\u003e尽管可以使用三重引号在代码中包含多行字符串，但这并不理想。在三个引号之间放置的所有内容都将成为字符串，包括格式，如下所示。\u003c/p\u003e\n\u003cp\u003e我更喜欢第二种方式，它将多行连接在一起，允许你把代码漂亮地格式化。唯一的缺点是需要显式地添加换行符。\u003c/p\u003e\n\u003cfigure class=\"highlight plain\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e8\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e9\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e10\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e11\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e12\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e13\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e14\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e15\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e16\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e17\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003es1 = \u0026#34;\u0026#34;\u0026#34;Multi line strings can be put\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        between triple quotes. It\u0026#39;s not ideal\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        when formatting your code though\u0026#34;\u0026#34;\u0026#34;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eprint(s1)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e# Multi line strings can be put\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e#        between triple quotes. It\u0026#39;s not ideal\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e#        when formatting your code though\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003es2 = (\u0026#34;You can also concatenate multiple\\n\u0026#34; +\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        \u0026#34;strings this way, but you\u0026#39;ll have to\\n\u0026#34;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        \u0026#34;explicitly put in the newlines\u0026#34;)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eprint(s2)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e# You can also concatenate multiple\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e# strings this way, but you\u0026#39;ll have to\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e# explicitly put in the newlines\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003ch2 id=\"24-条件语句的三元操作\"\u003e\u003ca href=\"#24-条件语句的三元操作\" class=\"headerlink\" title=\"24. 条件语句的三元操作\"\u003e\u003c/a\u003e24. 条件语句的三元操作\u003c/h2\u003e\u003cp\u003e这是另一种方法，它使你的代码更简洁，同时保持可读性:\u003c/p\u003e\n\u003cfigure class=\"highlight plain\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e[on_true] if [expression] else [on_false]\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e例如：\u003c/p\u003e\n\u003cfigure class=\"highlight plain\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003ex = \u0026#34;Success!\u0026#34; if (y == 2) else \u0026#34;Failed!\u0026#34;\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003ch2 id=\"25-计数\"\u003e\u003ca href=\"#25-计数\" class=\"headerlink\" title=\"25.计数\"\u003e\u003c/a\u003e25.计数\u003c/h2\u003e\u003cp\u003e您可以使用collections中的Counter对列表中的元素进行计数，得到的是类字典对象，其中记录了每个元素的数量：\u003c/p\u003e\n\u003cfigure class=\"highlight plain\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e8\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e9\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e10\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003efrom collections import Counter\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003emylist=[1,1,2,3,4,5,5,5,6,6]\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003ec = Counter(mylist)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eprint(c)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e# Counter({1: 2, 2: 1, 3: 1, 4: 1, 5: 3, 6: 2})\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e# And it works on strings too:\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eprint(Counter(\u0026#34;aaaaabbbbbccccc\u0026#34;))\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e# Counter({\u0026#39;a\u0026#39;: 5, \u0026#39;b\u0026#39;: 5, \u0026#39;c\u0026#39;: 5})\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003ch2 id=\"26-链式比较\"\u003e\u003ca href=\"#26-链式比较\" class=\"headerlink\" title=\"26. 链式比较\"\u003e\u003c/a\u003e26. 链式比较\u003c/h2\u003e\u003cp\u003e你可以在Python中链接比较运算符，从而创建更具可读性和更简洁的代码：\u003c/p\u003e\n\u003cfigure class=\"highlight plain\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e8\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e9\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e10\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e11\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003ex=10 \u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e# Instead of:\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eif x \u0026gt; 5 and x \u0026lt; 15:\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    print(\u0026#34;Yes\u0026#34;)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e#yes\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e# You can also write:\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eif 5 \u0026lt; x \u0026lt; 15: \u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    print(\u0026#34;Yes\u0026#34;)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e#Yes\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003ch2 id=\"27-着色\"\u003e\u003ca href=\"#27-着色\" class=\"headerlink\" title=\"27. 着色\"\u003e\u003c/a\u003e27. 着色\u003c/h2\u003e\u003cp\u003e使用Colorama，你可以让终端添加色彩绚丽。\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"https://public-tuchuang.oss-cn-hangzhou.aliyuncs.com/p5_20200121184308.png\" alt=\"\"/\u003e\u003c/p\u003e\n\u003cfigure class=\"highlight plain\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003efrom colorama import Fore, Back, Style 2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eprint(Fore.RED + \u0026#39;some red text\u0026#39;)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eprint(Back.GREEN + \u0026#39;and with a green background\u0026#39;)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eprint(Style.DIM + \u0026#39;and in dim text\u0026#39;)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eprint(Style.RESET_ALL)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eprint(\u0026#39;back to normal now\u0026#39;)\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003ch2 id=\"28-使用日期\"\u003e\u003ca href=\"#28-使用日期\" class=\"headerlink\" title=\"28.使用日期\"\u003e\u003c/a\u003e28.使用日期\u003c/h2\u003e\u003cp\u003epython-dateutil模块为标准datetime模块提供了强大的扩展。安装方式：\u003c/p\u003e\n\u003cfigure class=\"highlight plain\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003epip3 install python-dateutil\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e你可以用这个库做很多很酷的事情。我只举一个我觉得特别有用的例子：对日志文件中的日期进行模糊解析等等。\u003c/p\u003e\n\u003cfigure class=\"highlight plain\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003efrom dateutil.parser import parse\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003elogline = \u0026#39;INFO 2020-01-01T00:00:01 Happy new year, human.\u0026#39;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003etimestamp = parse(log_line, fuzzy=True)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eprint(timestamp)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e# 2020-01-01 00:00:01\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e只需记住：当常规Python中的datetime鞭长莫及时，就是python-dateutil大显身手的时候！\u003c/p\u003e\n\u003ch2 id=\"29-整数除法\"\u003e\u003ca href=\"#29-整数除法\" class=\"headerlink\" title=\"29.整数除法\"\u003e\u003c/a\u003e29.整数除法\u003c/h2\u003e\u003cp\u003e在Python 2中，除法运算符（/）默认为整数除法（即商是整数），除非其中一个操作数是浮点数。所以：\u003c/p\u003e\n\u003cfigure class=\"highlight plain\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e# Python 2 \u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5 / 2 = 2 \u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5 / 2.0 = 2.5\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e在Python 3中，除法运算符默认为浮点除法（即商是浮点数），\u003ccode\u003e//\u003c/code\u003e已成为整数除法运算符。所以：\u003c/p\u003e\n\u003cfigure class=\"highlight plain\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e#Python 3 \u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5 / 2 = 2.5 \u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5 // 2 = 2\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e要了解这一变化背后的全部动机，你应该阅读PEP-0238。\u003c/p\u003e\n\u003ch2 id=\"30-使用chardet检测字符集\"\u003e\u003ca href=\"#30-使用chardet检测字符集\" class=\"headerlink\" title=\"30.使用chardet检测字符集\"\u003e\u003c/a\u003e30.使用chardet检测字符集\u003c/h2\u003e\u003cp\u003e可以使用chardet模块检测文件的字符集，这在分析大量随机文本时非常有用。安装方式：\u003c/p\u003e\n\u003cfigure class=\"highlight plain\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003epip install chardet\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e现在，可以使用chardetect命令，使用方法如下：\u003c/p\u003e\n\u003cfigure class=\"highlight plain\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003echardetect somefile.txt \u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003esomefile.txt: ascii with confidence 1.0\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e你也可以通过编程的方式使用这个库，详情请查阅文档。\u003c/p\u003e\n\u003cp\u003e就是这样！新的一年开始的30种秘诀。我希望你和我一样喜欢这份清单，如果你有什么要补充的，请在微信公众号中回复留言！\u003c/p\u003e\n\u003cp\u003e原文链接：\u003ca href=\"https://towardsdatascience.com/30-python-best-practices-tips-and-tricks-caefb9f8c5f5\" target=\"_blank\" rel=\"noopener\"\u003ehttps://towardsdatascience.com/30-python-best-practices-tips-and-tricks-caefb9f8c5f5\u003c/a\u003e\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e关注微信公众号：老齐教室。读深度文章，得精湛技艺，享绚丽人生。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003c/section\u003e\n    \u003c!-- Tags START --\u003e\n    \n      \u003cdiv class=\"tags\"\u003e\n        \u003cspan\u003eTags:\u003c/span\u003e\n        \n  \u003ca href=\"/tags#python 技巧\"\u003e\n    \u003cspan class=\"tag-code\"\u003epython 技巧\u003c/span\u003e\n  \u003c/a\u003e\n\n      \u003c/div\u003e\n    \n    \u003c!-- Tags END --\u003e\n    \u003c!-- NAV START --\u003e\n    \n  \u003cdiv class=\"nav-container\"\u003e\n    \u003c!-- reverse left and right to put prev and next in a more logic postition --\u003e\n    \n      \u003ca class=\"nav-left\" href=\"/2020/01/22/%E8%AF%BB%E5%86%99%E5%9B%BE%E7%89%87/\"\u003e\n        \u003cspan class=\"nav-arrow\"\u003e← \u003c/span\u003e\n        \n          用Python读写海量图片的方法\n        \n      \u003c/a\u003e\n    \n    \n      \u003ca class=\"nav-right\" href=\"/2020/01/28/https/\"\u003e\n        \n          通俗易懂的HTTPS\n        \n        \u003cspan class=\"nav-arrow\"\u003e →\u003c/span\u003e\n      \u003c/a\u003e\n    \n  \u003c/div\u003e\n\n    \u003c!-- NAV END --\u003e\n    \u003c!-- 打赏 START --\u003e\n    \n      \u003cdiv class=\"money-like\"\u003e\n        \u003cdiv class=\"reward-btn\"\u003e\n          赏\n          \u003cspan class=\"money-code\"\u003e\n            \u003cspan class=\"alipay-code\"\u003e\n              \u003cdiv class=\"code-image\"\u003e\u003c/div\u003e\n              \u003cb\u003e使用支付宝打赏\u003c/b\u003e\n            \u003c/span\u003e\n            \u003cspan class=\"wechat-code\"\u003e\n              \u003cdiv class=\"code-image\"\u003e\u003c/div\u003e\n              \u003cb\u003e使用微信打赏\u003c/b\u003e\n            \u003c/span\u003e\n          \u003c/span\u003e\n        \u003c/div\u003e\n        \u003cp class=\"notice\"\u003e若你觉得我的文章对你有帮助，欢迎点击上方按钮对我打赏\u003c/p\u003e\n      \u003c/div\u003e\n    \n    \u003c!-- 打赏 END --\u003e\n    \u003c!-- 二维码 START --\u003e\n    \u003c!--% if (theme.qrcode) { %--\u003e\n      \u003cdiv class=\"qrcode\"\u003e\n        \u003c!--canvas id=\"share-qrcode\"\u003e\u003c/!--canvas--\u003e\n        \u003cimg src=\"https://public-tuchuang.oss-cn-hangzhou.aliyuncs.com/WechatIMG6_20200109154827.jpeg\" width=\"400\"/\u003e\n        \u003cp class=\"notice\"\u003e关注微信公众号，读文章、听课程，提升技能\u003c/p\u003e\n      \u003c/div\u003e\n    \u003c!--% } %--\u003e\n    \u003c!-- 二维码 END --\u003e\n    \n      \u003c!-- No Comment --\u003e\n    \n  \u003c/article\u003e",
  "Date": "2020-01-24T00:00:00Z",
  "Author": "老齐教室"
}