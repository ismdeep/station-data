{
  "Source": "qiwsir.github.io",
  "Title": "用 Python 编辑 PDF 文件",
  "Link": "https://qiwsir.github.io/2021/11/14/Manipulate-pdf/",
  "Content": "\u003carticle class=\"post-article\"\u003e\n    \u003ch2\u003e用 Python 编辑 PDF 文件\u003c/h2\u003e\n    \u003cp class=\"post-date\"\u003e2021-11-14\u003c/p\u003e\n    \u003csection class=\"markdown-content\"\u003e\u003cp\u003e本文将说明如何使用 PyPDF2 以及正则表达式操作 PDF 文件，并从中提取有关信息。\u003c/p\u003e\n\u003ch2 id=\"PyPDF2\"\u003e\u003ca href=\"#PyPDF2\" class=\"headerlink\" title=\"PyPDF2\"\u003e\u003c/a\u003ePyPDF2\u003c/h2\u003e\u003cp\u003e在 Python 中，用于处理 PDF 文件的库有很多，比如：\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://pypi.org/project/pdfrw/\" target=\"_blank\" rel=\"noopener\"\u003epdfrw\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://pypi.org/project/slate/\" target=\"_blank\" rel=\"noopener\"\u003eslate\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://pypi.org/project/pdfquery/\" target=\"_blank\" rel=\"noopener\"\u003ePDFQuery\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://pypi.org/project/pdfminer/\" target=\"_blank\" rel=\"noopener\"\u003epdfminer\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://pypi.org/project/pdfplumber/\" target=\"_blank\" rel=\"noopener\"\u003epdfplumber\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e以上列举的几个是比较典型的库，此外还有很多，不再一一列举。\u003c/p\u003e\n\u003cp\u003e本文介绍的库名为 PyPDF2 ，其安装方法（注意，区分大小写）\u003c/p\u003e\n\u003cfigure class=\"highlight python\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003epip install PyPDF2\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e每个用于读取 PDF 文件的库都有自己的特点，PyPDF2 亦非万能，如果 PDF 文件太模糊、有特殊编码、加密，或者创建的 PDF 文件的特定程序与PyPDF2不兼容，都将无法读取。所以，要多了解一些，艺不压身。\u003c/p\u003e\n\u003cp\u003e还有可能，这些库都不起作用，这是因为 PDF 有许多不同的参数，而且这些设置非常不标准，比如 PDF 中就是图片，而不是 utf-8 编码的文字。\u003c/p\u003e\n\u003cp\u003ePyPDF2 只能读取 PDF 文档中的文本，无法从 PDF 中获取图像或其他媒体文件。\u003c/p\u003e\n\u003ch2 id=\"读写-PDF-文件\"\u003e\u003ca href=\"#读写-PDF-文件\" class=\"headerlink\" title=\"读写 PDF 文件\"\u003e\u003c/a\u003e读写 PDF 文件\u003c/h2\u003e\u003cp\u003e首先，引入 \u003ccode\u003ePyPDF2\u003c/code\u003e ，如下所示：\u003c/p\u003e\n\u003cfigure class=\"highlight python\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"comment\"\u003e# 注意大小写\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"keyword\"\u003eimport\u003c/span\u003e PyPDF2\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003ch3 id=\"读文件\"\u003e\u003ca href=\"#读文件\" class=\"headerlink\" title=\"读文件\"\u003e\u003c/a\u003e读文件\u003c/h3\u003e\u003cp\u003e打开一个 PDF 文件。注意，函数 \u003ccode\u003eopen()\u003c/code\u003e 中的模式设置为读取二进制的 \u003ccode\u003e\u0026#39;rb\u0026#39;\u003c/code\u003e 模式，不能只是 \u003ccode\u003e\u0026#39;r\u0026#39;\u003c/code\u003e 。\u003c/p\u003e\n\u003cfigure class=\"highlight python\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"comment\"\u003e# Notice we read it as a binary with \u0026#39;rb\u0026#39;\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003ef = open(\u003cspan class=\"string\"\u003e\u0026#39;US_Declaration.pdf\u0026#39;\u003c/span\u003e,\u003cspan class=\"string\"\u003e\u0026#39;rb\u0026#39;\u003c/span\u003e)\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e这里打开的文件名为 \u003ccode\u003eUS_Declaration.pdf\u003c/code\u003e （《独立宣言》文稿），此文件下载地址：\u003ca href=\"https://drive.google.com/file/d/115DPlPclA69A2VvIAfrRPoSRWA26SDvd/view?usp=sharing\" target=\"_blank\" rel=\"noopener\"\u003ehttps://drive.google.com/file/d/115DPlPclA69A2VvIAfrRPoSRWA26SDvd/view?usp=sharing\u003c/a\u003e 。\u003c/p\u003e\n\u003cp\u003e然后读取此文件中的内容：\u003c/p\u003e\n\u003cfigure class=\"highlight python\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e8\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e9\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e10\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e11\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e12\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e13\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e14\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"comment\"\u003e# pdfFileReader() 从文件对象中读取 PDF 文本内容\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003epdf_reader = PyPDF2.PdfFileReader(f) \u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"comment\"\u003e# 返回 PDF 文件的页数\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003epdf_reader.numPages\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"comment\"\u003e# getPage() 读取指定页面的文本，下面是读取第一页\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003epage_one = pdf_reader.getPage(\u003cspan class=\"number\"\u003e0\u003c/span\u003e)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003epage_one_text = page_one.extractText()\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"comment\"\u003e# 最后的 extractText() 将第一页的内容解析为文本\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003ch3 id=\"写文件\"\u003e\u003ca href=\"#写文件\" class=\"headerlink\" title=\"写文件\"\u003e\u003c/a\u003e写文件\u003c/h3\u003e\u003cp\u003e不能使用 Python 编写 PDF 文件，因为 Python 的字符串与 PDF 文件中的各种字体、位置和其他参数之间存在差异。\u003c/p\u003e\n\u003cp\u003e对 PDF 文件，能称之为“写”的操作，只能是将某个指定的 PDF 页面追加到已有 PDF 文件中。如下操作所示：\u003c/p\u003e\n\u003cfigure class=\"highlight python\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e8\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e9\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e10\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e11\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e12\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e13\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e14\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e15\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e16\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003ef = open(\u003cspan class=\"string\"\u003e\u0026#39;US_Declaration.pdf\u0026#39;\u003c/span\u003e,\u003cspan class=\"string\"\u003e\u0026#39;rb\u0026#39;\u003c/span\u003e)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003epdf_reader = PyPDF2.PdfFileReader(f)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003efirst_page = pdf_reader.getPage(\u003cspan class=\"number\"\u003e0\u003c/span\u003e)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"comment\"\u003e# 用 pdfFileWriter() 创建一个页面\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003epdf_writer = PyPDF2.PdfFileWriter()\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"comment\"\u003e# 用 addPage() 将 first_page 的内容加入到刚刚创建的页面\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003epdf_writer.addPage(first_page)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"comment\"\u003e# 以 \u0026#39;wb\u0026#39; 模式在目录中创建名为 \u0026#34;Some_New_Doc.pdf\u0026#34; 的文件\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003epdf_output = open(\u003cspan class=\"string\"\u003e\u0026#34;Some_New_Doc.pdf\u0026#34;\u003c/span\u003e,\u003cspan class=\"string\"\u003e\u0026#34;wb\u0026#34;\u003c/span\u003e)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"comment\"\u003e# 最后利用 pdf_wirter 的 write() 方法，将刚刚含有 first_page 的文件保存到 \u0026#39;Some_New_Doc.pdf\u0026#39; 中\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003epdf_writer.write(pdf_output)\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e搞定！复制了一个页面，并将其添加到另一个新文档中！\u003c/p\u003e\n\u003ch3 id=\"读取所有文本\"\u003e\u003ca href=\"#读取所有文本\" class=\"headerlink\" title=\"读取所有文本\"\u003e\u003c/a\u003e读取所有文本\u003c/h3\u003e\u003cp\u003e前面使用 \u003ccode\u003ePyPDF2\u003c/code\u003e ，读取了特定页面的文本。是否可以一次性就获取 PDF 的所有文本呢？“这个应该有”。显然，一个简单方法就是循环。\u003c/p\u003e\n\u003cfigure class=\"highlight python\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e8\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e9\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e10\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003ef = open(\u003cspan class=\"string\"\u003e\u0026#39;US_Declaration.pdf\u0026#39;\u003c/span\u003e,\u003cspan class=\"string\"\u003e\u0026#39;rb\u0026#39;\u003c/span\u003e)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"comment\"\u003e# 列出每页的文本\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"comment\"\u003e# 索引对应页码.\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003epdf_text = [\u003cspan class=\"number\"\u003e0\u003c/span\u003e]  \u003cspan class=\"comment\"\u003e# 0 是占位符，能让索引 1 对应于第 1 页\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003epdf_reader = PyPDF2.PdfFileReader(f)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"keyword\"\u003efor\u003c/span\u003e p \u003cspan class=\"keyword\"\u003ein\u003c/span\u003e range(pdf_reader.numPages):\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    page = pdf_reader.getPage(p)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    pdf_text.append(page.extractText())\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e现在，可以通过 \u003ccode\u003epdf_text\u003c/code\u003e 的切片打印相应页面的内容，例如 \u003ccode\u003eprint(pdf_text[1])\u003c/code\u003e ，会将 PDF 文件的第 1 页打印出来。\u003c/p\u003e\n\u003cp\u003e注意，最后要执行 \u003ccode\u003ef.close()\u003c/code\u003e 关闭文件，这是一个好习惯。\u003c/p\u003e\n\u003cp\u003e在 aistudio.baidu.com 中有专门探讨从 word 文档、PDF 文档中读取文本的多种方法的项目，可以参考\u003c/p\u003e\n\u003ch2 id=\"参考资料\"\u003e\u003ca href=\"#参考资料\" class=\"headerlink\" title=\"参考资料\"\u003e\u003c/a\u003e参考资料\u003c/h2\u003e\u003col\u003e\n\u003cli\u003e齐伟. Python 大学实用教程. 电子工业出版社\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://towardsdatascience.com/manipulate-pdf-files-extract-information-with-pypdf2-and-regular-expression-39ff697db0ca\" target=\"_blank\" rel=\"noopener\"\u003ehttps://towardsdatascience.com/manipulate-pdf-files-extract-information-with-pypdf2-and-regular-expression-39ff697db0ca\u003c/a\u003e\u003c/li\u003e\n\u003c/ol\u003e\n\u003c/section\u003e\n    \u003c!-- Tags START --\u003e\n    \n    \u003c!-- Tags END --\u003e\n    \u003c!-- NAV START --\u003e\n    \n  \u003cdiv class=\"nav-container\"\u003e\n    \u003c!-- reverse left and right to put prev and next in a more logic postition --\u003e\n    \n      \u003ca class=\"nav-left\" href=\"/2021/11/03/python-builtins-seventh/\"\u003e\n        \u003cspan class=\"nav-arrow\"\u003e← \u003c/span\u003e\n        \n          通过内置对象理解 Python（七）\n        \n      \u003c/a\u003e\n    \n    \n      \u003ca class=\"nav-right\" href=\"/2021/12/03/regex-md/\"\u003e\n        \n          正则表达式\n        \n        \u003cspan class=\"nav-arrow\"\u003e →\u003c/span\u003e\n      \u003c/a\u003e\n    \n  \u003c/div\u003e\n\n    \u003c!-- NAV END --\u003e\n    \u003c!-- 打赏 START --\u003e\n    \n      \u003cdiv class=\"money-like\"\u003e\n        \u003cdiv class=\"reward-btn\"\u003e\n          赏\n          \u003cspan class=\"money-code\"\u003e\n            \u003cspan class=\"alipay-code\"\u003e\n              \u003cdiv class=\"code-image\"\u003e\u003c/div\u003e\n              \u003cb\u003e使用支付宝打赏\u003c/b\u003e\n            \u003c/span\u003e\n            \u003cspan class=\"wechat-code\"\u003e\n              \u003cdiv class=\"code-image\"\u003e\u003c/div\u003e\n              \u003cb\u003e使用微信打赏\u003c/b\u003e\n            \u003c/span\u003e\n          \u003c/span\u003e\n        \u003c/div\u003e\n        \u003cp class=\"notice\"\u003e若你觉得我的文章对你有帮助，欢迎点击上方按钮对我打赏\u003c/p\u003e\n      \u003c/div\u003e\n    \n    \u003c!-- 打赏 END --\u003e\n    \u003c!-- 二维码 START --\u003e\n    \u003c!--% if (theme.qrcode) { %--\u003e\n      \u003cdiv class=\"qrcode\"\u003e\n        \u003c!--canvas id=\"share-qrcode\"\u003e\u003c/!--canvas--\u003e\n        \u003cimg src=\"https://public-tuchuang.oss-cn-hangzhou.aliyuncs.com/WechatIMG6_20200109154827.jpeg\" width=\"400\"/\u003e\n        \u003cp class=\"notice\"\u003e关注微信公众号，读文章、听课程，提升技能\u003c/p\u003e\n      \u003c/div\u003e\n    \u003c!--% } %--\u003e\n    \u003c!-- 二维码 END --\u003e\n    \n      \u003c!-- No Comment --\u003e\n    \n  \u003c/article\u003e",
  "Date": "2021-11-14T00:00:00Z",
  "Author": "老齐教室"
}