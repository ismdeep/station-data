{
  "Source": "qiwsir.github.io",
  "Title": "深入理解for循环",
  "Link": "https://qiwsir.github.io/2021/02/09/deep-understand-for-loop/",
  "Content": "\u003carticle class=\"post-article\"\u003e\n    \u003ch2\u003e深入理解for循环\u003c/h2\u003e\n    \u003cp class=\"post-date\"\u003e2021-02-09\u003c/p\u003e\n    \u003csection class=\"markdown-content\"\u003e\u003cp\u003e在Python语言中，\u003ccode\u003efor\u003c/code\u003e循环非常强大，乃至于通常都不怎么提倡使用递归，所有遇到递归的时候，最好都改为\u003ccode\u003efor\u003c/code\u003e循环。对于初学者而言，\u003ccode\u003efor\u003c/code\u003e循环理解起来并不难，一般的入门读物中也都这么解释：\u003c/p\u003e\n\u003cfigure class=\"highlight python\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e8\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e\u0026gt;\u0026gt;\u0026gt; \u003c/span\u003elst = [\u003cspan class=\"number\"\u003e0\u003c/span\u003e,\u003cspan class=\"number\"\u003e1\u003c/span\u003e,\u003cspan class=\"number\"\u003e2\u003c/span\u003e,\u003cspan class=\"number\"\u003e3\u003c/span\u003e]\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e\u0026gt;\u0026gt;\u0026gt; \u003c/span\u003e\u003cspan class=\"keyword\"\u003efor\u003c/span\u003e i \u003cspan class=\"keyword\"\u003ein\u003c/span\u003e lst:\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e... \u003c/span\u003e    print(i)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e...\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"number\"\u003e0\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"number\"\u003e1\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"number\"\u003e2\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"number\"\u003e3\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e变量 \u003ccode\u003ei\u003c/code\u003e依次引用列表\u003ccode\u003elist\u003c/code\u003e中的每个元素。比如我在自己的两本书《Python大学实用教程》和《跟老齐学Python：轻松入门》中，都是用这种方法对\u003ccode\u003efor\u003c/code\u003e循环进行了说明。\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003e但是\u003c/strong\u003e——转折了，非常重要——\u003cstrong\u003e这种解释仅仅是就表象上向初学者做的解释，并没有揭示\u003ccode\u003efor\u003c/code\u003e循环的内在运行机制\u003c/strong\u003e。\u003c/p\u003e\n\u003cp\u003e我在《Python大学实用教程》一书中，曾以下面的方式对\u003ccode\u003efor\u003c/code\u003e循环做了深入阐述（参阅190页）：\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"https://gitee.com/qiwsir/images/raw/master/2021-2-9/1612839268110-WechatIMG1.jpeg\" alt=\"\"/\u003e\u003c/p\u003e\n\u003cp\u003e从这里我们知道，在进行 \u003ccode\u003efor\u003c/code\u003e循环的时候，其实是将被循环的对象转换为了可迭代对象——注意这个转换，非常重要。转换了之后，\u003ccode\u003efor\u003c/code\u003e循环是怎么运行的？在书中并没有深入讲解，下面我们就此给予介绍。\u003c/p\u003e\n\u003cp\u003e首先说明，本文内容的最主要参考或者说根据，就是Python语言的官方文档：\u003ca href=\"https://docs.python.org/3/reference/compound_stmts.html#for，在这里对`for`循环语句有非常详细的说明。\" target=\"_blank\" rel=\"noopener\"\u003ehttps://docs.python.org/3/reference/compound_stmts.html#for，在这里对`for`循环语句有非常详细的说明。\u003c/a\u003e\u003c/p\u003e\n\u003cfigure class=\"highlight plain\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003efor_stmt ::=  \u0026#34;for\u0026#34; target_list \u0026#34;in\u0026#34; expression_list \u0026#34;:\u0026#34; suite\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e              [\u0026#34;else\u0026#34; \u0026#34;:\u0026#34; suite]\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e按照上述文档中的说明，对于前面的示例，将列表\u003ccode\u003elst=[0,1,2,3]\u003c/code\u003e作为\u003ccode\u003efor\u003c/code\u003e循环语句中的\u003ccode\u003eexpression_list\u003c/code\u003e，即将其转化为可迭代对象，并且只转化一次，不妨用\u003ccode\u003eiter_lst\u003c/code\u003e表示这个可迭代对象。然后就依次将这个可迭代对象的元素读入内存，并按照顺序，依次赋值给\u003ccode\u003etarget_list\u003c/code\u003e。注意，不论\u003ccode\u003etarget_list\u003c/code\u003e是什么，都是将所读入的可迭代对象匀速依次赋值。\u003c/p\u003e\n\u003cp\u003e用上面循环语句示例理解这段话，其分解动作如下：\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003e将\u003ccode\u003elst=[0,1,2,3]\u003c/code\u003e转换为可迭代对象，暂记作\u003ccode\u003eiter_lst\u003c/code\u003e。\u003c/li\u003e\n\u003cli\u003e读入\u003ccode\u003eiter_lst\u003c/code\u003e的第一个元素\u003ccode\u003e0\u003c/code\u003e，并将它赋值给\u003ccode\u003ei\u003c/code\u003e（这里的\u003ccode\u003ei\u003c/code\u003e就对应着上面语法规则中的\u003ccode\u003etarget_list\u003c/code\u003e）\u003col\u003e\n\u003cli\u003e于是有：\u003ccode\u003ei=0\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003epirnt(i)\u003c/code\u003e，就打印出了\u003ccode\u003e0\u003c/code\u003e\u003c/li\u003e\n\u003c/ol\u003e\n\u003c/li\u003e\n\u003cli\u003e读入\u003ccode\u003eiter_lst\u003c/code\u003e的第二个元素\u003ccode\u003e1\u003c/code\u003e，并将它赋值给\u003ccode\u003ei\u003c/code\u003e\u003col\u003e\n\u003cli\u003e于是有：\u003ccode\u003ei=1\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eprint(i)\u003c/code\u003e，就打印出了\u003ccode\u003e1\u003c/code\u003e\u003c/li\u003e\n\u003c/ol\u003e\n\u003c/li\u003e\n\u003cli\u003e$$\\cdots$$ ，按照上面的过程不断重复，直到最后一个元素\u003ccode\u003e4\u003c/code\u003e为止——因为\u003ccode\u003efor\u003c/code\u003e循环语句能够自动捕获迭代到最后一个元素之后的异常，所以，\u003ccode\u003efor\u003c/code\u003e循环能够在到达最后一个元素之后，结束循环。\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003e如果用代码的方式表示上面的过程，可以这样：\u003c/p\u003e\n\u003cfigure class=\"highlight python\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e\u0026gt;\u0026gt;\u0026gt; \u003c/span\u003eiter_lst=iter(lst)\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e用内置函数\u003ccode\u003eiter()\u003c/code\u003e，依据列表\u003ccode\u003elst\u003c/code\u003e创建了一个可迭代对象\u003ccode\u003eiter_lst\u003c/code\u003e。\u003c/p\u003e\n\u003cfigure class=\"highlight python\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e\u0026gt;\u0026gt;\u0026gt; \u003c/span\u003eiter_lst=iter(lst)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e\u0026gt;\u0026gt;\u0026gt; \u003c/span\u003ei = next(iter_lst)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e\u0026gt;\u0026gt;\u0026gt; \u003c/span\u003eprint(i)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"number\"\u003e0\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e这就完成了第一个循环。然后依次方式，向下循环：\u003c/p\u003e\n\u003cfigure class=\"highlight python\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e8\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e9\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e10\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e11\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e12\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e13\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e14\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e15\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e16\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e17\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"comment\"\u003e# 第二个循环\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e\u0026gt;\u0026gt;\u0026gt; \u003c/span\u003ei = next(iter_lst)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e\u0026gt;\u0026gt;\u0026gt; \u003c/span\u003eprint(i)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"number\"\u003e1\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"comment\"\u003e# 第三个循环\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e\u0026gt;\u0026gt;\u0026gt; \u003c/span\u003ei = next(iter_lst)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e\u0026gt;\u0026gt;\u0026gt; \u003c/span\u003eprint(i)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"number\"\u003e2\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"comment\"\u003e# 第四个循环\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e\u0026gt;\u0026gt;\u0026gt; \u003c/span\u003ei = next(iter_lst)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e\u0026gt;\u0026gt;\u0026gt; \u003c/span\u003eprint(i)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"number\"\u003e3\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"comment\"\u003e# 到最后一个元素后面，抛出异常\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e\u0026gt;\u0026gt;\u0026gt; \u003c/span\u003ei = next(iter_lst)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eTraceback (most recent call last):\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  File \u003cspan class=\"string\"\u003e\u0026#34;\u0026lt;stdin\u0026gt;\u0026#34;\u003c/span\u003e, line \u003cspan class=\"number\"\u003e1\u003c/span\u003e, \u003cspan class=\"keyword\"\u003ein\u003c/span\u003e \u0026lt;module\u0026gt;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eStopIteration\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e上面的演示，如果连贯起来，就是\u003ccode\u003efor\u003c/code\u003e循环——貌似没有什么奇怪的。\u003c/p\u003e\n\u003cp\u003e下面就要见证奇迹了。\u003c/p\u003e\n\u003cp\u003e经过上述操作之后，列表\u003ccode\u003elst\u003c/code\u003e并没有发生变化——好像是废话。\u003c/p\u003e\n\u003cfigure class=\"highlight python\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e\u0026gt;\u0026gt;\u0026gt; \u003c/span\u003elst\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e[\u003cspan class=\"number\"\u003e0\u003c/span\u003e, \u003cspan class=\"number\"\u003e1\u003c/span\u003e, \u003cspan class=\"number\"\u003e2\u003c/span\u003e, \u003cspan class=\"number\"\u003e3\u003c/span\u003e]\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e勿要着急，伟大总是孕育在平凡之中。\u003c/p\u003e\n\u003cfigure class=\"highlight python\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e\u0026gt;\u0026gt;\u0026gt; \u003c/span\u003eiter_lst=iter(lst)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e\u0026gt;\u0026gt;\u0026gt; \u003c/span\u003ei = next(iter_lst)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e\u0026gt;\u0026gt;\u0026gt; \u003c/span\u003eprint(i)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"number\"\u003e0\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e\u0026gt;\u0026gt;\u0026gt; \u003c/span\u003elst\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e[\u003cspan class=\"number\"\u003e0\u003c/span\u003e, \u003cspan class=\"number\"\u003e1\u003c/span\u003e, \u003cspan class=\"number\"\u003e2\u003c/span\u003e, \u003cspan class=\"number\"\u003e3\u003c/span\u003e]\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e完成第一循环，跟前面一样，并且在此时，查看了一下列表\u003ccode\u003elst\u003c/code\u003e，没有变化。但是，我在这里做一个操作：\u003c/p\u003e\n\u003cfigure class=\"highlight python\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e\u0026gt;\u0026gt;\u0026gt; \u003c/span\u003elst[\u003cspan class=\"number\"\u003e1\u003c/span\u003e]=\u003cspan class=\"number\"\u003e111\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e\u0026gt;\u0026gt;\u0026gt; \u003c/span\u003elst\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e[\u003cspan class=\"number\"\u003e0\u003c/span\u003e, \u003cspan class=\"number\"\u003e111\u003c/span\u003e, \u003cspan class=\"number\"\u003e2\u003c/span\u003e, \u003cspan class=\"number\"\u003e3\u003c/span\u003e]\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e此时，将列表中序号为\u003ccode\u003e1\u003c/code\u003e的元素值修改为\u003ccode\u003e111\u003c/code\u003e，即\u003ccode\u003elst[1]=111\u003c/code\u003e。如果按照读取可迭代对象的顺序，按照原来的流程，是要读取第二个元素\u003ccode\u003e1\u003c/code\u003e了，但是，在读取之间，我将列表中的第二个元素修改为\u003ccode\u003e111\u003c/code\u003e，那么，如果再进行下面的操作：\u003c/p\u003e\n\u003cfigure class=\"highlight python\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e\u0026gt;\u0026gt;\u0026gt; \u003c/span\u003ei = next(iter_lst)\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e读取了可迭代对象的第二个元素，并把它赋值给变量\u003ccode\u003ei\u003c/code\u003e，此时，它是\u003ccode\u003e1\u003c/code\u003e还是\u003ccode\u003e111\u003c/code\u003e呢？\u003c/p\u003e\n\u003cp\u003e看结果：\u003c/p\u003e\n\u003cfigure class=\"highlight python\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e\u0026gt;\u0026gt;\u0026gt; \u003c/span\u003eprint(i)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"number\"\u003e111\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e不是\u003ccode\u003e1\u003c/code\u003e，而是\u003ccode\u003e111\u003c/code\u003e。再详细循环，就跟前述过程一样了。\u003c/p\u003e\n\u003cp\u003e这说明，如果将列表\u003ccode\u003elst\u003c/code\u003e转换为可迭代对象之后，这个可迭代对象中的元素是对\u003ccode\u003elst\u003c/code\u003e中元素的引用，并不是在可迭代对象中建立一套新的对象。\u003c/p\u003e\n\u003cp\u003e理解了上面的道理，看下面的操作，是不是能够解释？\u003c/p\u003e\n\u003cfigure class=\"highlight python\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e\u0026gt;\u0026gt;\u0026gt; \u003c/span\u003ea = [\u003cspan class=\"string\"\u003e\u0026#39;python\u0026#39;\u003c/span\u003e, \u003cspan class=\"string\"\u003e\u0026#39;java\u0026#39;\u003c/span\u003e, \u003cspan class=\"string\"\u003e\u0026#39;c\u0026#39;\u003c/span\u003e, \u003cspan class=\"string\"\u003e\u0026#39;rust\u0026#39;\u003c/span\u003e]\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e\u0026gt;\u0026gt;\u0026gt; \u003c/span\u003eiter_a = iter(a)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e\u0026gt;\u0026gt;\u0026gt; \u003c/span\u003ea[\u003cspan class=\"number\"\u003e1\u003c/span\u003e] = next(iter_a)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e\u0026gt;\u0026gt;\u0026gt; \u003c/span\u003ea\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e[\u003cspan class=\"string\"\u003e\u0026#39;python\u0026#39;\u003c/span\u003e, \u003cspan class=\"string\"\u003e\u0026#39;python\u0026#39;\u003c/span\u003e, \u003cspan class=\"string\"\u003e\u0026#39;c\u0026#39;\u003c/span\u003e, \u003cspan class=\"string\"\u003e\u0026#39;rust\u0026#39;\u003c/span\u003e]\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e关键的一句是\u003ccode\u003ea[1] = next(iter_a)\u003c/code\u003e。\u003ccode\u003enext(iter_a)\u003c/code\u003e得到了迭代器对象的第一个元素\u003ccode\u003e\u0026#39;python\u0026#39;\u003c/code\u003e，并且将它赋值给\u003ccode\u003ea[1]\u003c/code\u003e，这样，列表\u003ccode\u003ea\u003c/code\u003e中的索引是\u003ccode\u003e1\u003c/code\u003e的元素就变成了\u003ccode\u003e\u0026#39;python\u0026#39;\u003c/code\u003e，即原来的\u003ccode\u003e\u0026#39;java\u0026#39;\u003c/code\u003e被替换为\u003ccode\u003e\u0026#39;python\u0026#39;\u003c/code\u003e了。\u003c/p\u003e\n\u003cfigure class=\"highlight python\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e\u0026gt;\u0026gt;\u0026gt; \u003c/span\u003ea[\u003cspan class=\"number\"\u003e1\u003c/span\u003e] = next(iter_a)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e\u0026gt;\u0026gt;\u0026gt; \u003c/span\u003ea\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e[\u003cspan class=\"string\"\u003e\u0026#39;python\u0026#39;\u003c/span\u003e, \u003cspan class=\"string\"\u003e\u0026#39;python\u0026#39;\u003c/span\u003e, \u003cspan class=\"string\"\u003e\u0026#39;c\u0026#39;\u003c/span\u003e, \u003cspan class=\"string\"\u003e\u0026#39;rust\u0026#39;\u003c/span\u003e]\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e继续读取可迭代对象的第二个元素\u003ccode\u003e\u0026#39;python\u0026#39;\u003c/code\u003e。\u003c/p\u003e\n\u003cfigure class=\"highlight python\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e\u0026gt;\u0026gt;\u0026gt; \u003c/span\u003ea[\u003cspan class=\"number\"\u003e1\u003c/span\u003e] = next(iter_a)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e\u0026gt;\u0026gt;\u0026gt; \u003c/span\u003ea\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e[\u003cspan class=\"string\"\u003e\u0026#39;python\u0026#39;\u003c/span\u003e, \u003cspan class=\"string\"\u003e\u0026#39;c\u0026#39;\u003c/span\u003e, \u003cspan class=\"string\"\u003e\u0026#39;c\u0026#39;\u003c/span\u003e, \u003cspan class=\"string\"\u003e\u0026#39;rust\u0026#39;\u003c/span\u003e]\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e继续读取可迭代对象的第三个元素\u003ccode\u003e\u0026#39;c\u0026#39;\u003c/code\u003e，在赋值给\u003ccode\u003ea[1]\u003c/code\u003e，也就是列表\u003ccode\u003ea\u003c/code\u003e中的索引是\u003ccode\u003e1\u003c/code\u003e的元素变成了\u003ccode\u003e\u0026#39;c\u0026#39;\u003c/code\u003e。\u003c/p\u003e\n\u003cfigure class=\"highlight python\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e\u0026gt;\u0026gt;\u0026gt; \u003c/span\u003ea[\u003cspan class=\"number\"\u003e1\u003c/span\u003e] = next(iter_a)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e\u0026gt;\u0026gt;\u0026gt; \u003c/span\u003ea\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e[\u003cspan class=\"string\"\u003e\u0026#39;python\u0026#39;\u003c/span\u003e, \u003cspan class=\"string\"\u003e\u0026#39;rust\u0026#39;\u003c/span\u003e, \u003cspan class=\"string\"\u003e\u0026#39;c\u0026#39;\u003c/span\u003e, \u003cspan class=\"string\"\u003e\u0026#39;rust\u0026#39;\u003c/span\u003e]\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e这次\u003ccode\u003ea[1]=\u0026#39;rust\u0026#39;\u003c/code\u003e，根据前面的说明，应该容易理解了。\u003c/p\u003e\n\u003cfigure class=\"highlight python\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e\u0026gt;\u0026gt;\u0026gt; \u003c/span\u003ea[\u003cspan class=\"number\"\u003e1\u003c/span\u003e] = next(iter_a)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eTraceback (most recent call last):\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  File \u003cspan class=\"string\"\u003e\u0026#34;\u0026lt;stdin\u0026gt;\u0026#34;\u003c/span\u003e, line \u003cspan class=\"number\"\u003e1\u003c/span\u003e, \u003cspan class=\"keyword\"\u003ein\u003c/span\u003e \u0026lt;module\u0026gt;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eStopIteration\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e最后报异常了。如果将上述过程，写成\u003ccode\u003efor\u003c/code\u003e循环，是这样的：\u003c/p\u003e\n\u003cfigure class=\"highlight python\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e8\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e\u0026gt;\u0026gt;\u0026gt; \u003c/span\u003ea = [\u003cspan class=\"string\"\u003e\u0026#39;python\u0026#39;\u003c/span\u003e, \u003cspan class=\"string\"\u003e\u0026#39;java\u0026#39;\u003c/span\u003e, \u003cspan class=\"string\"\u003e\u0026#39;c\u0026#39;\u003c/span\u003e, \u003cspan class=\"string\"\u003e\u0026#39;rust\u0026#39;\u003c/span\u003e]\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e\u0026gt;\u0026gt;\u0026gt; \u003c/span\u003e\u003cspan class=\"keyword\"\u003efor\u003c/span\u003e a[\u003cspan class=\"number\"\u003e1\u003c/span\u003e] \u003cspan class=\"keyword\"\u003ein\u003c/span\u003e a:\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e... \u003c/span\u003e    print(a, a[\u003cspan class=\"number\"\u003e1\u003c/span\u003e])\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e...\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e([\u003cspan class=\"string\"\u003e\u0026#39;python\u0026#39;\u003c/span\u003e, \u003cspan class=\"string\"\u003e\u0026#39;python\u0026#39;\u003c/span\u003e, \u003cspan class=\"string\"\u003e\u0026#39;c\u0026#39;\u003c/span\u003e, \u003cspan class=\"string\"\u003e\u0026#39;rust\u0026#39;\u003c/span\u003e], \u003cspan class=\"string\"\u003e\u0026#39;python\u0026#39;\u003c/span\u003e)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e([\u003cspan class=\"string\"\u003e\u0026#39;python\u0026#39;\u003c/span\u003e, \u003cspan class=\"string\"\u003e\u0026#39;python\u0026#39;\u003c/span\u003e, \u003cspan class=\"string\"\u003e\u0026#39;c\u0026#39;\u003c/span\u003e, \u003cspan class=\"string\"\u003e\u0026#39;rust\u0026#39;\u003c/span\u003e], \u003cspan class=\"string\"\u003e\u0026#39;python\u0026#39;\u003c/span\u003e)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e([\u003cspan class=\"string\"\u003e\u0026#39;python\u0026#39;\u003c/span\u003e, \u003cspan class=\"string\"\u003e\u0026#39;c\u0026#39;\u003c/span\u003e, \u003cspan class=\"string\"\u003e\u0026#39;c\u0026#39;\u003c/span\u003e, \u003cspan class=\"string\"\u003e\u0026#39;rust\u0026#39;\u003c/span\u003e], \u003cspan class=\"string\"\u003e\u0026#39;c\u0026#39;\u003c/span\u003e)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e([\u003cspan class=\"string\"\u003e\u0026#39;python\u0026#39;\u003c/span\u003e, \u003cspan class=\"string\"\u003e\u0026#39;rust\u0026#39;\u003c/span\u003e, \u003cspan class=\"string\"\u003e\u0026#39;c\u0026#39;\u003c/span\u003e, \u003cspan class=\"string\"\u003e\u0026#39;rust\u0026#39;\u003c/span\u003e], \u003cspan class=\"string\"\u003e\u0026#39;rust\u0026#39;\u003c/span\u003e)\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e上面循环语句中的\u003ccode\u003ea[1]\u003c/code\u003e就如同前面演示的\u003ccode\u003ei\u003c/code\u003e那样，都是循环语法结构中的\u003ccode\u003etarget_list\u003c/code\u003e，只不过这里出了要完成赋值之外，还要同时实现对列表\u003ccode\u003ea\u003c/code\u003e中索引是\u003ccode\u003e1\u003c/code\u003e的元素修改，即实现上面分解动作中\u003ccode\u003ea[1] = next(iter_a)\u003c/code\u003e。\u003c/p\u003e\n\u003cp\u003e似乎这里使用\u003ccode\u003ea[1]\u003c/code\u003e有点怪异。的确，在通常操作中很少这么做的。不过，上面的做法，倒是能让我们对\u003ccode\u003efor\u003c/code\u003e循环有了深刻理解。\u003c/p\u003e\n\u003cp\u003e理解了本文所介绍的内容，就不难回答stackoverflow上的一个问题了（\u003ca href=\"https://stackoverflow.com/questions/55644201/why-can-i-use-a-list-index-as-an-indexing-variable-in-a-for-loop）：\" target=\"_blank\" rel=\"noopener\"\u003ehttps://stackoverflow.com/questions/55644201/why-can-i-use-a-list-index-as-an-indexing-variable-in-a-for-loop）：\u003c/a\u003e\u003c/p\u003e\n\u003cfigure class=\"highlight python\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e8\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e\u0026gt;\u0026gt;\u0026gt; \u003c/span\u003eb = [\u003cspan class=\"number\"\u003e0\u003c/span\u003e,\u003cspan class=\"number\"\u003e1\u003c/span\u003e,\u003cspan class=\"number\"\u003e2\u003c/span\u003e,\u003cspan class=\"number\"\u003e3\u003c/span\u003e]\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e\u0026gt;\u0026gt;\u0026gt; \u003c/span\u003e\u003cspan class=\"keyword\"\u003efor\u003c/span\u003e b[\u003cspan class=\"number\"\u003e-1\u003c/span\u003e] \u003cspan class=\"keyword\"\u003ein\u003c/span\u003e b:\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e... \u003c/span\u003e    print(b[\u003cspan class=\"number\"\u003e-1\u003c/span\u003e])\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e...\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"number\"\u003e0\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"number\"\u003e1\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"number\"\u003e2\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"number\"\u003e2\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e是否能自己解释这个结果？\u003c/p\u003e\n\u003c/section\u003e\n    \u003c!-- Tags START --\u003e\n    \n    \u003c!-- Tags END --\u003e\n    \u003c!-- NAV START --\u003e\n    \n  \u003cdiv class=\"nav-container\"\u003e\n    \u003c!-- reverse left and right to put prev and next in a more logic postition --\u003e\n    \n      \u003ca class=\"nav-left\" href=\"/2021/02/08/functiongraphs/\"\u003e\n        \u003cspan class=\"nav-arrow\"\u003e← \u003c/span\u003e\n        \n          函数及其图像\n        \n      \u003c/a\u003e\n    \n    \n      \u003ca class=\"nav-right\" href=\"/2021/02/10/function-graphs/\"\u003e\n        \n          复合函数及图像变换\n        \n        \u003cspan class=\"nav-arrow\"\u003e →\u003c/span\u003e\n      \u003c/a\u003e\n    \n  \u003c/div\u003e\n\n    \u003c!-- NAV END --\u003e\n    \u003c!-- 打赏 START --\u003e\n    \n      \u003cdiv class=\"money-like\"\u003e\n        \u003cdiv class=\"reward-btn\"\u003e\n          赏\n          \u003cspan class=\"money-code\"\u003e\n            \u003cspan class=\"alipay-code\"\u003e\n              \u003cdiv class=\"code-image\"\u003e\u003c/div\u003e\n              \u003cb\u003e使用支付宝打赏\u003c/b\u003e\n            \u003c/span\u003e\n            \u003cspan class=\"wechat-code\"\u003e\n              \u003cdiv class=\"code-image\"\u003e\u003c/div\u003e\n              \u003cb\u003e使用微信打赏\u003c/b\u003e\n            \u003c/span\u003e\n          \u003c/span\u003e\n        \u003c/div\u003e\n        \u003cp class=\"notice\"\u003e若你觉得我的文章对你有帮助，欢迎点击上方按钮对我打赏\u003c/p\u003e\n      \u003c/div\u003e\n    \n    \u003c!-- 打赏 END --\u003e\n    \u003c!-- 二维码 START --\u003e\n    \u003c!--% if (theme.qrcode) { %--\u003e\n      \u003cdiv class=\"qrcode\"\u003e\n        \u003c!--canvas id=\"share-qrcode\"\u003e\u003c/!--canvas--\u003e\n        \u003cimg src=\"https://public-tuchuang.oss-cn-hangzhou.aliyuncs.com/WechatIMG6_20200109154827.jpeg\" width=\"400\"/\u003e\n        \u003cp class=\"notice\"\u003e关注微信公众号，读文章、听课程，提升技能\u003c/p\u003e\n      \u003c/div\u003e\n    \u003c!--% } %--\u003e\n    \u003c!-- 二维码 END --\u003e\n    \n      \u003c!-- No Comment --\u003e\n    \n  \u003c/article\u003e",
  "Date": "2021-02-09T00:00:00Z",
  "Author": "老齐教室"
}