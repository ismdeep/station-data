{
  "Source": "qiwsir.github.io",
  "Title": "Python中的正则表达式（四）",
  "Link": "https://qiwsir.github.io/2020/05/14/regular-expression-forth/",
  "Content": "\u003carticle class=\"post-article\"\u003e\n    \u003ch2\u003ePython中的正则表达式（四）\u003c/h2\u003e\n    \u003cp class=\"post-date\"\u003e2020-05-14\u003c/p\u003e\n    \u003csection class=\"markdown-content\"\u003e\u003cp\u003e作者：老齐\u003c/p\u003e\n\u003cp\u003e与本文相关的图书推荐：《跟老齐学Python：轻松入门》\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"https://public-tuchuang.oss-cn-hangzhou.aliyuncs.com/%E8%BD%BB%E6%9D%BE%E5%85%A5%E9%97%A8_20200122130623.png\" alt=\"\"/\u003e\u003c/p\u003e\n\u003chr/\u003e\n\u003cp\u003e《Python正则表达式》这个系列，已经完成了三篇，本文是第四篇，请继续阅读。\u003c/p\u003e\n\u003cp\u003e如果错过了前两篇，请关注微信公众号：\u003cstrong\u003e老齐教室\u003c/strong\u003e。\u003c/p\u003e\n\u003cp\u003e前面已经对Python中正则表达的基本内容做了比较完整的讲述，从本文开始，将进入高级应用部分。\u003c/p\u003e\n\u003ch2 id=\"分组和捕获\"\u003e\u003ca href=\"#分组和捕获\" class=\"headerlink\" title=\"分组和捕获\"\u003e\u003c/a\u003e分组和捕获\u003c/h2\u003e\u003cp\u003e分组，就是将一个正则表达式分成若干个子表达式。分组包括两个操作：\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e分组：即利用前面已经介绍过的元字符，在圆括号中写出一个一个的正则表达式（子表达式）\u003c/li\u003e\n\u003cli\u003e捕获：有的分组，可以按照子表达式匹配字符串。\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"分组符号\"\u003e\u003ca href=\"#分组符号\" class=\"headerlink\" title=\"分组符号\"\u003e\u003c/a\u003e分组符号\u003c/h3\u003e\u003cp\u003e通常，用\u003ccode\u003e( )\u003c/code\u003e表示一个分组，在其中写子表达式。\u003c/p\u003e\n\u003cfigure class=\"highlight plain\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; re.search(\u0026#39;(bar)\u0026#39;, \u0026#39;foo bar baz\u0026#39;)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026lt;_sre.SRE_Match object; span=(4, 7), match=\u0026#39;bar\u0026#39;\u0026gt;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; re.search(\u0026#39;bar\u0026#39;, \u0026#39;foo bar baz\u0026#39;)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026lt;_sre.SRE_Match object; span=(4, 7), match=\u0026#39;bar\u0026#39;\u0026gt;\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e在这个示例中，\u003ccode\u003e(bar)\u003c/code\u003e是一个分组的正则表达式，即一个子表达式，但是，这里因为只有一组，所以与不分组的\u003ccode\u003ebar\u003c/code\u003e效果是一样。\u003c/p\u003e\n\u003ch3 id=\"一个分组作为一个单元\"\u003e\u003ca href=\"#一个分组作为一个单元\" class=\"headerlink\" title=\"一个分组作为一个单元\"\u003e\u003c/a\u003e一个分组作为一个单元\u003c/h3\u003e\u003cp\u003e如果在一个分组的子表达式后面跟一个量词，那么就是把这个分组作为一个单元。\u003c/p\u003e\n\u003cp\u003e例如，\u003ccode\u003e(bar)+\u003c/code\u003e，意味着将字符串\u003ccode\u003ebar\u003c/code\u003e看做一个单元，即要匹配至少1个\u003ccode\u003ebar\u003c/code\u003e。\u003c/p\u003e\n\u003cfigure class=\"highlight plain\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; re.search(\u0026#39;(bar)+\u0026#39;, \u0026#39;foo bar baz\u0026#39;)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026lt;_sre.SRE_Match object; span=(4, 7), match=\u0026#39;bar\u0026#39;\u0026gt;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; re.search(\u0026#39;(bar)+\u0026#39;, \u0026#39;foo barbar baz\u0026#39;)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026lt;_sre.SRE_Match object; span=(4, 10), match=\u0026#39;barbar\u0026#39;\u0026gt;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; re.search(\u0026#39;(bar)+\u0026#39;, \u0026#39;foo barbarbarbar baz\u0026#39;)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026lt;_sre.SRE_Match object; span=(4, 16), match=\u0026#39;barbarbarbar\u0026#39;\u0026gt;\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e下面用表格的方式，比较\u003ccode\u003ebar+\u003c/code\u003e和\u003ccode\u003e(bar)+\u003c/code\u003e的区别：\u003c/p\u003e\n\u003ctable\u003e\n\u003cthead\u003e\n\u003ctr\u003e\n\u003cth\u003e正则表达式\u003c/th\u003e\n\u003cth\u003e说明\u003c/th\u003e\n\u003cth\u003e举例\u003c/th\u003e\n\u003c/tr\u003e\n\u003c/thead\u003e\n\u003ctbody\u003e\u003ctr\u003e\n\u003ctd\u003e\u003ccode\u003ebar+\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003e\u003ccode\u003e+\u003c/code\u003e作用在字符\u003ccode\u003er\u003c/code\u003e，匹配的字符串要求在\u003ccode\u003eba\u003c/code\u003e的后面可以有1个或更多个\u003ccode\u003er\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003e\u003ccode\u003e\u0026#39;bar\u0026#39;\u003c/code\u003e, \u003ccode\u003e\u0026#39;barr\u0026#39;\u003c/code\u003e, \u003ccode\u003e\u0026#39;barrr\u0026#39;\u003c/code\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003ccode\u003e(bar)+\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003e\u003ccode\u003e+\u003c/code\u003e作用在\u003ccode\u003ebar\u003c/code\u003e，匹配的字符串中药出现\u003ccode\u003ebar\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003e\u003ccode\u003e\u0026#39;bar\u0026#39;\u003c/code\u003e, \u003ccode\u003e\u0026#39;barbar\u0026#39;\u003c/code\u003e, \u003ccode\u003e\u0026#39;barbarbar\u0026#39;\u003c/code\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003c/tbody\u003e\u003c/table\u003e\n\u003cp\u003e下面再看个复杂的示例。\u003c/p\u003e\n\u003cfigure class=\"highlight plain\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; re.search(\u0026#39;(ba[rz]){2,4}(qux)?\u0026#39;, \u0026#39;bazbarbazqux\u0026#39;)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026lt;_sre.SRE_Match object; span=(0, 12), match=\u0026#39;bazbarbazqux\u0026#39;\u0026gt;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; re.search(\u0026#39;(ba[rz]){2,4}(qux)?\u0026#39;, \u0026#39;barbar\u0026#39;)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026lt;_sre.SRE_Match object; span=(0, 6), match=\u0026#39;barbar\u0026#39;\u0026gt;\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e正则表达式\u003ccode\u003e(ba[rz]){2,4}(qux)?\u003c/code\u003e中，\u003ccode\u003e(ba[rz])\u003c/code\u003e是一个分组，表示要匹配\u003ccode\u003ebar\u003c/code\u003e或\u003ccode\u003ebaz\u003c/code\u003e。\u003ccode\u003e(ba[rz]){2,4}\u003c/code\u003e则表示匹配的数量范围（2到4个），后面的\u003ccode\u003e(qux)?\u003c/code\u003e又将\u003ccode\u003equx\u003c/code\u003e作为一个单元，匹配0个或1个。\u003c/p\u003e\n\u003cp\u003e在上述示例基础上，进一步理解：\u003c/p\u003e\n\u003cfigure class=\"highlight plain\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; re.search(\u0026#39;(foo(bar)?)+(\\d\\d\\d)?\u0026#39;, \u0026#39;foofoobar\u0026#39;)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026lt;_sre.SRE_Match object; span=(0, 9), match=\u0026#39;foofoobar\u0026#39;\u0026gt;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; re.search(\u0026#39;(foo(bar)?)+(\\d\\d\\d)?\u0026#39;, \u0026#39;foofoobar123\u0026#39;)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026lt;_sre.SRE_Match object; span=(0, 12), match=\u0026#39;foofoobar123\u0026#39;\u0026gt;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; re.search(\u0026#39;(foo(bar)?)+(\\d\\d\\d)?\u0026#39;, \u0026#39;foofoo123\u0026#39;)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026lt;_sre.SRE_Match object; span=(0, 9), match=\u0026#39;foofoo123\u0026#39;\u0026gt;\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e下面用表格的方式，将上面示例中的几个表达式进行说明。\u003c/p\u003e\n\u003ctable\u003e\n\u003cthead\u003e\n\u003ctr\u003e\n\u003cth\u003e正则表达式\u003c/th\u003e\n\u003cth\u003e说明\u003c/th\u003e\n\u003c/tr\u003e\n\u003c/thead\u003e\n\u003ctbody\u003e\u003ctr\u003e\n\u003ctd\u003e\u003ccode\u003efoo(bar)?\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003e匹配\u003ccode\u003efoo\u003c/code\u003e后面跟着0个或1个\u003ccode\u003ebar\u003c/code\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003ccode\u003e(foo(bar)?)+\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003e按照上面规则匹配的字符串出现1次或多次\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003ccode\u003e\\d\\d\\d\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003e匹配三个整数字符\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003ccode\u003e(\\d\\d\\d)?\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003e0个或1个符合上述规则的字符串\u003c/td\u003e\n\u003c/tr\u003e\n\u003c/tbody\u003e\u003c/table\u003e\n\u003cp\u003e将上表中的组合在一起，就是\u003ccode\u003e(foo(bar)?)+(\\d\\d\\d)?\u003c/code\u003e正则表达式。\u003c/p\u003e\n\u003ch3 id=\"捕获\"\u003e\u003ca href=\"#捕获\" class=\"headerlink\" title=\"捕获\"\u003e\u003c/a\u003e捕获\u003c/h3\u003e\u003cp\u003e分组的目的之一是搜索字符串，根据分组原则捕获相应部分。\u003c/p\u003e\n\u003cp\u003e在\u003ccode\u003ere\u003c/code\u003e模块中，有\u003ccode\u003ere.search()\u003c/code\u003e，可以返回搜索到的匹配对象，针对分组操作，此对象有\u003ccode\u003e.groups\u003c/code\u003e和\u003ccode\u003e.group\u003c/code\u003e两个方法。\u003c/p\u003e\n\u003ch4 id=\"m-groups\"\u003e\u003ca href=\"#m-groups\" class=\"headerlink\" title=\"m.groups()\"\u003e\u003c/a\u003e\u003ccode\u003em.groups()\u003c/code\u003e\u003c/h4\u003e\u003cp\u003e\u003ccode\u003em.groups()\u003c/code\u003e根据正则表达式，返回所有分组所捕获的字符串。\u003c/p\u003e\n\u003cfigure class=\"highlight plain\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; m = re.search(\u0026#39;(\\w+),(\\w+),(\\w+)\u0026#39;, \u0026#39;foo,quux,baz\u0026#39;)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; m\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026lt;_sre.SRE_Match object; span=(0, 12), match=\u0026#39;foo:quux:baz\u0026#39;\u0026gt;\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e在此示例中，正则表达式\u003ccode\u003e(\\w+),(\\w+),(\\w+)\u003c/code\u003e包含三个组，每组都是要匹配至少1个字母、数字，即要从\u003ccode\u003efoo,quux,baz\u003c/code\u003e中得到三个字符串\u003ccode\u003efoo\u003c/code\u003e、\u003ccode\u003equux\u003c/code\u003e、\u003ccode\u003ebaz\u003c/code\u003e，不包含原字符串中的\u003ccode\u003e,\u003c/code\u003e。\u003c/p\u003e\n\u003cfigure class=\"highlight plain\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; m.groups()\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e(\u0026#39;foo\u0026#39;, \u0026#39;quux\u0026#39;, \u0026#39;baz\u0026#39;)\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e执行\u003ccode\u003em.groups()\u003c/code\u003e，返回结果为一个元组，其中包括所捕获的三个字符串。\u003c/p\u003e\n\u003ch4 id=\"m-group-n\"\u003e\u003ca href=\"#m-group-n\" class=\"headerlink\" title=\"m.group(n)\"\u003e\u003c/a\u003e\u003ccode\u003em.group(n)\u003c/code\u003e\u003c/h4\u003e\u003cp\u003e\u003ccode\u003em.groups()\u003c/code\u003e返回的元组，包含了所有捕获的内容。但在操作中，可能需要返回某个分组，此时使用\u003ccode\u003em.group(n)\u003c/code\u003e方法实现。\u003c/p\u003e\n\u003cfigure class=\"highlight plain\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e8\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e9\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e10\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; m = re.search(\u0026#39;(\\w+),(\\w+),(\\w+)\u0026#39;, \u0026#39;foo,quux,baz\u0026#39;)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; m.groups()\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e(\u0026#39;foo\u0026#39;, \u0026#39;quux\u0026#39;, \u0026#39;baz\u0026#39;)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; m.group(1)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026#39;foo\u0026#39;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; m.group(2)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026#39;quux\u0026#39;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; m.group(3)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026#39;baz\u0026#39;\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e\u003ccode\u003em.group(1)\u003c/code\u003e中的参数是\u003ccode\u003e1\u003c/code\u003e，表示捕获第一个分组的结果——\u003cstrong\u003e注意，不是从0开始\u003c/strong\u003e。如果参数为\u003ccode\u003e0\u003c/code\u003e，会是下面的结果：\u003c/p\u003e\n\u003cfigure class=\"highlight plain\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; m.group(0)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026#39;foo,quux,baz\u0026#39;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; m.group()    # 不写参数，即默认参数是0\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026#39;foo,quux,baz\u0026#39;\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e\u003ccode\u003em.group()\u003c/code\u003e中的参数，还可以传入多个，如下所示：\u003c/p\u003e\n\u003cfigure class=\"highlight plain\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; m.groups()\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e(\u0026#39;foo\u0026#39;, \u0026#39;quux\u0026#39;, \u0026#39;baz\u0026#39;)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; m.group(2, 3)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e(\u0026#39;quux\u0026#39;, \u0026#39;baz\u0026#39;)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; m.group(3, 2, 1)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e(\u0026#39;baz\u0026#39;, \u0026#39;quux\u0026#39;, \u0026#39;foo\u0026#39;)\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e此时，能够按照参数的顺序和数值得到多个指定分组捕获，特别注意观察\u003ccode\u003em.group(3, 2, 1)\u003c/code\u003e的结果。\u003c/p\u003e\n\u003ch3 id=\"向后引用\"\u003e\u003ca href=\"#向后引用\" class=\"headerlink\" title=\"向后引用\"\u003e\u003c/a\u003e向后引用\u003c/h3\u003e\u003cp\u003e“向后引用”这个术语的英文是“backference”，很多中文资料翻译为“反向引用”，在本文中，我使用“向后引用”这个术语，原因在于这个翻译比较直白地反应了相关的效果。\u003c/p\u003e\n\u003cp\u003e所谓“向后引用”就是将前面的分组所捕获的结果向后再复制n个，比如：\u003ccode\u003e(\\w+), \\1\u003c/code\u003e，第一个分组\u003ccode\u003e(\\w+)\u003c/code\u003e，后面的\u003ccode\u003e\\1\u003c/code\u003e表示将前面的分组捕获的结果在后面再次依样捕获1个。\u003c/p\u003e\n\u003cfigure class=\"highlight plain\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; regex = r\u0026#39;(\\w+),\\1\u0026#39;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; m = re.search(regex, \u0026#39;foo,foo\u0026#39;)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; m\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026lt;_sre.SRE_Match object; span=(0, 7), match=\u0026#39;foo,foo\u0026#39;\u0026gt;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; m.group(1)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026#39;foo\u0026#39;\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e在这个示例中，分组\u003ccode\u003e(\\w+)\u003c/code\u003e已经捕获了字符串\u003ccode\u003efoo\u003c/code\u003e，在正则表达式中的\u003ccode\u003e\\1\u003c/code\u003e表示向后引用前面的捕获结果，即可以继续在字符串中搜索，能够要再捕获一个\u003ccode\u003efoo\u003c/code\u003e。再如：\u003c/p\u003e\n\u003cfigure class=\"highlight plain\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; m = re.search(regex, \u0026#39;qux,qux\u0026#39;)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; m\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026lt;_sre.SRE_Match object; span=(0, 7), match=\u0026#39;qux,qux\u0026#39;\u0026gt;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; m.group(1)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026#39;qux\u0026#39;\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e如果搜索的字符串是\u003ccode\u003efoo,qux\u003c/code\u003e，由于捕获第一个\u003ccode\u003efoo\u003c/code\u003e之后，继续在字符串中搜索，无法得到\u003ccode\u003efoo\u003c/code\u003e了，所以，会搜索失败。\u003c/p\u003e\n\u003cfigure class=\"highlight plain\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; m = re.search(regex, \u0026#39;foo,qux\u0026#39;)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; print(m)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eNone\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e（未完，待续）\u003c/p\u003e\n\u003cp\u003e参考资料：\u003ca href=\"https://realpython.com/regex-python/\" target=\"_blank\" rel=\"noopener\"\u003ehttps://realpython.com/regex-python/\u003c/a\u003e\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e搜索技术问答的公众号：老齐教室\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cblockquote\u003e\n\u003cp\u003e在公众号中回复：\u003cstrong\u003e老齐\u003c/strong\u003e，可查看所有文章、书籍、课程。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003c/section\u003e\n    \u003c!-- Tags START --\u003e\n    \n    \u003c!-- Tags END --\u003e\n    \u003c!-- NAV START --\u003e\n    \n  \u003cdiv class=\"nav-container\"\u003e\n    \u003c!-- reverse left and right to put prev and next in a more logic postition --\u003e\n    \n      \u003ca class=\"nav-left\" href=\"/2020/05/12/regular-expression-third/\"\u003e\n        \u003cspan class=\"nav-arrow\"\u003e← \u003c/span\u003e\n        \n          Python中的正则表达式（三）\n        \n      \u003c/a\u003e\n    \n    \n      \u003ca class=\"nav-right\" href=\"/2020/05/21/regular-expression-fifth/\"\u003e\n        \n          Python中的正则表达式（五）\n        \n        \u003cspan class=\"nav-arrow\"\u003e →\u003c/span\u003e\n      \u003c/a\u003e\n    \n  \u003c/div\u003e\n\n    \u003c!-- NAV END --\u003e\n    \u003c!-- 打赏 START --\u003e\n    \n      \u003cdiv class=\"money-like\"\u003e\n        \u003cdiv class=\"reward-btn\"\u003e\n          赏\n          \u003cspan class=\"money-code\"\u003e\n            \u003cspan class=\"alipay-code\"\u003e\n              \u003cdiv class=\"code-image\"\u003e\u003c/div\u003e\n              \u003cb\u003e使用支付宝打赏\u003c/b\u003e\n            \u003c/span\u003e\n            \u003cspan class=\"wechat-code\"\u003e\n              \u003cdiv class=\"code-image\"\u003e\u003c/div\u003e\n              \u003cb\u003e使用微信打赏\u003c/b\u003e\n            \u003c/span\u003e\n          \u003c/span\u003e\n        \u003c/div\u003e\n        \u003cp class=\"notice\"\u003e若你觉得我的文章对你有帮助，欢迎点击上方按钮对我打赏\u003c/p\u003e\n      \u003c/div\u003e\n    \n    \u003c!-- 打赏 END --\u003e\n    \u003c!-- 二维码 START --\u003e\n    \u003c!--% if (theme.qrcode) { %--\u003e\n      \u003cdiv class=\"qrcode\"\u003e\n        \u003c!--canvas id=\"share-qrcode\"\u003e\u003c/!--canvas--\u003e\n        \u003cimg src=\"https://public-tuchuang.oss-cn-hangzhou.aliyuncs.com/WechatIMG6_20200109154827.jpeg\" width=\"400\"/\u003e\n        \u003cp class=\"notice\"\u003e关注微信公众号，读文章、听课程，提升技能\u003c/p\u003e\n      \u003c/div\u003e\n    \u003c!--% } %--\u003e\n    \u003c!-- 二维码 END --\u003e\n    \n      \u003c!-- No Comment --\u003e\n    \n  \u003c/article\u003e",
  "Date": "2020-05-14T00:00:00Z",
  "Author": "老齐教室"
}