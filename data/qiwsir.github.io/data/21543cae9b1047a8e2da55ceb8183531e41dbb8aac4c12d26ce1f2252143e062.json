{
  "Source": "qiwsir.github.io",
  "Title": "Python初学者应该了解的星号（*）",
  "Link": "https://qiwsir.github.io/2020/03/23/python-asterisk/",
  "Content": "\u003carticle class=\"post-article\"\u003e\n    \u003ch2\u003ePython初学者应该了解的星号（*）\u003c/h2\u003e\n    \u003cp class=\"post-date\"\u003e2020-03-23\u003c/p\u003e\n    \u003csection class=\"markdown-content\"\u003e\u003cp\u003e作者：mingrammer\u003c/p\u003e\n\u003cp\u003e翻译：老齐\u003c/p\u003e\n\u003cp\u003e与本文相关的图书推荐：《Python大学实用教程》\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"https://public-tuchuang.oss-cn-hangzhou.aliyuncs.com/my_book4_20200116132005.png\" alt=\"本书各大电商平台有售\"/\u003e\u003c/p\u003e\n\u003chr/\u003e\n\u003cp\u003e与其他编程语言相比，Python语言的操作类型更多样化。\u003c/p\u003e\n\u003cp\u003e特别是星号（*），在Python中是一个用途广泛的操作符，而不仅仅用于两个数字相乘的运算之中。在本文中，我们将讨论星号的多种用途。\u003c/p\u003e\n\u003cp\u003e这里总结了4种星号的应用场景：\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e作为乘法和乘方的运算符\u003c/li\u003e\n\u003cli\u003e表示序列中元素的重复\u003c/li\u003e\n\u003cli\u003e用于收集参数（可以称之为“打包”）\u003c/li\u003e\n\u003cli\u003e用于容器类对象的解包\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e下面逐一进行说明。\u003c/p\u003e\n\u003ch2 id=\"乘法或乘方的运算符\"\u003e\u003ca href=\"#乘法或乘方的运算符\" class=\"headerlink\" title=\"乘法或乘方的运算符\"\u003e\u003c/a\u003e乘法或乘方的运算符\u003c/h2\u003e\u003cp\u003e对此你一定不陌生，像乘法一样，Python中也内置了乘方运算符。\u003c/p\u003e\n\u003cfigure class=\"highlight plain\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e8\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; 2 * 3 \u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6 \u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; 2 ** 3 \u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e8 \u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; 1.414 * 1.414 \u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e1.9993959999999997\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; 1.414 ** 1.414\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e1.6320575353248798\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003ch2 id=\"重复类列表的容器元素\"\u003e\u003ca href=\"#重复类列表的容器元素\" class=\"headerlink\" title=\"重复类列表的容器元素\"\u003e\u003c/a\u003e重复类列表的容器元素\u003c/h2\u003e\u003cp\u003ePython也支持类列表的容器类对象（即序列）与整数相乘，即为按照整数实现重复其中的元素数量。\u003c/p\u003e\n\u003cfigure class=\"highlight plain\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e8\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e9\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e10\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e11\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e12\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e13\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e# Initialize the zero-valued list with 100 length\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003ezeros_list = [0] * 100 \u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e# Declare the zero-valued tuple with 100 length\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003ezeros_tuple = (0,) * 100  \u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e# Extending the \u0026#34;vector_list\u0026#34; by 3 times\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003evector_list = [[1, 2, 3]] \u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003efor i, vector in enumerate(vector_list * 3):     \u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    print(\u0026#34;{0} scalar product of vector: {1}\u0026#34;.format((i + 1), [(i + 1) * e for e in vector]))\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e# 1 scalar product of vector: [1, 2, 3]\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e# 2 scalar product of vector: [2, 4, 6]\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e# 3 scalar product of vector: [3, 6, 9]\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003ch2 id=\"参数收集\"\u003e\u003ca href=\"#参数收集\" class=\"headerlink\" title=\"参数收集\"\u003e\u003c/a\u003e参数收集\u003c/h2\u003e\u003cp\u003e很多函数中，都会有不确定个数的参数。例如，如果我们不知道要提供多少个参数，或者因为什么原因必须传任意个参数等。\u003c/p\u003e\n\u003cp\u003e在Python中有两类参数，一类是位置参数，另外一类是关键词参数，前者根据位置确定相应值，后者则是依据参数名称确定。\u003c/p\u003e\n\u003cp\u003e在研究任意个位置/关键词参数之前，先讨论确定数量的位置参数和关键词参数。\u003c/p\u003e\n\u003cfigure class=\"highlight plain\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e8\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e9\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e10\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e11\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e12\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e13\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e14\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e# A function that shows the results of running competitions consisting of 2 to 4 runners.\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003edef save_ranking(first, second, third=None, fourth=None):\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    rank = {}\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    rank[1], rank[2] = first, second\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    rank[3] = third if third is not None else \u0026#39;Nobody\u0026#39;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    rank[4] = fourth if fourth is not None else \u0026#39;Nobody\u0026#39;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    print(rank)    \u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e# Pass the 2 positional arguments\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003esave_ranking(\u0026#39;ming\u0026#39;, \u0026#39;alice\u0026#39;)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e# Pass the 2 positional arguments and 1 keyword argument\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003esave_ranking(\u0026#39;alice\u0026#39;, \u0026#39;ming\u0026#39;, third=\u0026#39;mike\u0026#39;)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e# Pass the 2 positional arguments and 2 keyword arguments (But, one of them was passed as like positional argument)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003esave_ranking(\u0026#39;alice\u0026#39;, \u0026#39;ming\u0026#39;, \u0026#39;mike\u0026#39;, fourth=\u0026#39;jim\u0026#39;)\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e上述代码中的函数有2个位置参数：\u003ccode\u003efirst\u003c/code\u003e、\u003ccode\u003esecond\u003c/code\u003e，2个关键词参数：\u003ccode\u003ethird\u003c/code\u003e、\u003ccode\u003efourth\u003c/code\u003e。位置参数不能省略，必须给所有的位置参数按照其正确的位置传值。然而，对于关键词参数，在定义函数的时候你可以设置默认值，如果调用函数的时候省略了相应的实参，会以默认值作为实参，即关键词参数可以省略。\u003c/p\u003e\n\u003cp\u003e如你所见，关键词参数可以省略，所以，它们就不能在未知参数前面进行声明，如果按照下面的方式声明参数，就必然抛出异常。\u003c/p\u003e\n\u003cfigure class=\"highlight plain\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003edef save_ranking(first, second=None, third, fourth=None):\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    ...\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e但是，在\u003ccode\u003esave_ranking(\u0026#39;alice\u0026#39;, \u0026#39;ming\u0026#39;, \u0026#39;mike\u0026#39;, fourth=\u0026#39;jim\u0026#39;)\u003c/code\u003e调用中，提供了3个位置实参和一个关键词参数。是的，对于关键词参数，你也可以按照位置参数的方式传值，所对应的关键词能够接受依据位置所传的数据。按照此处的调用方法，\u003ccode\u003e\u0026#39;mike\u0026#39;\u003c/code\u003e就自动传给了\u003ccode\u003ethird\u003c/code\u003e。\u003c/p\u003e\n\u003cp\u003e以上我们已经讨论了参数的基本含义，从上述示例中，我们也能看出来，上面所定义的函数不能接收任意个数的参数，因为该函数的参数是固定数量的。因此，需要对该函数进行改造，让它能够接收任意个参数，不论是位置参数还是关键词参数。看下面的示例：\u003c/p\u003e\n\u003ch3 id=\"收集位置参数\"\u003e\u003ca href=\"#收集位置参数\" class=\"headerlink\" title=\"收集位置参数\"\u003e\u003c/a\u003e收集位置参数\u003c/h3\u003e\u003cfigure class=\"highlight plain\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003edef save_ranking(*args):\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    print(args) \u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003esave_ranking(\u0026#39;ming\u0026#39;, \u0026#39;alice\u0026#39;, \u0026#39;tom\u0026#39;, \u0026#39;wilson\u0026#39;, \u0026#39;roy\u0026#39;)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e# (\u0026#39;ming\u0026#39;, \u0026#39;alice\u0026#39;, \u0026#39;tom\u0026#39;, \u0026#39;wilson\u0026#39;, \u0026#39;roy\u0026#39;)\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003ch3 id=\"收集位置参数和关键词参数\"\u003e\u003ca href=\"#收集位置参数和关键词参数\" class=\"headerlink\" title=\"收集位置参数和关键词参数\"\u003e\u003c/a\u003e收集位置参数和关键词参数\u003c/h3\u003e\u003cfigure class=\"highlight plain\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003edef save_ranking(*args, **kwargs):\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    print(args)     \u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    print(kwargs)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003esave_ranking(\u0026#39;ming\u0026#39;, \u0026#39;alice\u0026#39;, \u0026#39;tom\u0026#39;, fourth=\u0026#39;wilson\u0026#39;, fifth=\u0026#39;roy\u0026#39;)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e# (\u0026#39;ming\u0026#39;, \u0026#39;alice\u0026#39;, \u0026#39;tom\u0026#39;)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e# {\u0026#39;fourth\u0026#39;: \u0026#39;wilson\u0026#39;, \u0026#39;fifth\u0026#39;: \u0026#39;roy\u0026#39;}\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e在上面的示例中，\u003ccode\u003e*args\u003c/code\u003e意味着收集任意个数的位置参数，\u003ccode\u003e**kwargs\u003c/code\u003e意味着收集任意个数的关键词参数。这里的\u003ccode\u003e*args\u003c/code\u003e和\u003ccode\u003e**kwargs\u003c/code\u003e可以称之为打包。\u003c/p\u003e\n\u003cp\u003e如你所见，在上面我们按照位置或关键词传了任意个数的参数。按照位置传的参数被收集到元组中，并用变量\u003ccode\u003eargs\u003c/code\u003e引用；以关键词传的参数则用变量\u003ccode\u003ekwargs\u003c/code\u003e引用为字典类型。\u003c/p\u003e\n\u003cp\u003e前面提到过，关键词参数不能写在位置参数前面，所以，下面的定义方式是错误的：\u003c/p\u003e\n\u003cfigure class=\"highlight plain\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003edef save_ranking(**kwargs, *args):\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    ...\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e任意个数的参数很有价值，在很多开源项目中都能够看到，一般都是用\u003ccode\u003e*args\u003c/code\u003e或者\u003ccode\u003e**kwargs\u003c/code\u003e作为收集任意参数的名称，当然，你可以用其他名称，比如\u003ccode\u003e*requeired\u003c/code\u003e或者\u003ccode\u003e**optional\u003c/code\u003e等，都可以。只是对于开源项目而言，我们习惯使用\u003ccode\u003e*args\u003c/code\u003e和\u003ccode\u003e**kwargs\u003c/code\u003e罢了。\u003c/p\u003e\n\u003ch2 id=\"解包\"\u003e\u003ca href=\"#解包\" class=\"headerlink\" title=\"解包\"\u003e\u003c/a\u003e解包\u003c/h2\u003e\u003cp\u003e星号还可以用于对容器的解包，这与前面的参数收集类似，比如，有一个包含数据的列表、元组或者字典，还有一个收集任意参数的函数：\u003c/p\u003e\n\u003cfigure class=\"highlight plain\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e8\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e9\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e10\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e11\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e12\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e13\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003efrom functools import reduce\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eprimes = [2, 3, 5, 7, 11, 13]\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003edef product(*numbers):\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    p = reduce(lambda x, y: x * y, numbers)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    return p \u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eproduct(*primes)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e# 30030\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eproduct(primes)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e# [2, 3, 5, 7, 11, 13]\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e因为\u003ccode\u003eproduct()\u003c/code\u003e能接收任意参数，我们本来需要将列表中的元素取出来，然后传给此函数。但在这里，如果以\u003ccode\u003e*primes\u003c/code\u003e的方式向函数提供\u003ccode\u003eprimes\u003c/code\u003e列表数据，则\u003ccode\u003eprimes\u003c/code\u003e所引用的列表会被解包，其中的每个素数都被传给函数，并被收集后用变量\u003ccode\u003enumbers\u003c/code\u003e引用。如果传该列表\u003ccode\u003eprimes\u003c/code\u003e给函数，就不能解包，\u003ccode\u003enumbers\u003c/code\u003e所引用的元组中只有一个\u003ccode\u003eprimes\u003c/code\u003e列表。\u003c/p\u003e\n\u003cp\u003e对于元组也如此，对于字典，需要用\u003ccode\u003e**\u003c/code\u003e代替\u003ccode\u003e*\u003c/code\u003e。\u003c/p\u003e\n\u003cfigure class=\"highlight plain\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e8\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e9\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e10\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e11\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e12\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e13\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e14\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e15\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e16\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e17\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e18\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e19\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e20\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003eheaders = {\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u0026#39;Accept\u0026#39;: \u0026#39;text/plain\u0026#39;,\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u0026#39;Content-Length\u0026#39;: 348, \u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u0026#39;Host\u0026#39;: \u0026#39;http://mingrammer.com\u0026#39; \u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e}  \u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003edef pre_process(**headers): \u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    content_length = headers[\u0026#39;Content-Length\u0026#39;] \u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    print(\u0026#39;content length: \u0026#39;, content_length) \u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    host = headers[\u0026#39;Host\u0026#39;]\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    if \u0026#39;https\u0026#39; not in host: \u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        raise ValueError(\u0026#39;You must use SSL for http communication\u0026#39;)  \u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        \u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003epre_process(**headers)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e# content length:  348\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e# Traceback (most recent call last):\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e#   File \u0026#34;\u0026lt;stdin\u0026gt;\u0026#34;, line 1, in \u0026lt;module\u0026gt;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e#   File \u0026#34;\u0026lt;stdin\u0026gt;\u0026#34;, line 7, in pre_process\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e# ValueError: You must use SSL for http communication\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e还有很多种解包的实现方式，甚至于不针对函数，只是从列表、元组中取出数据，并用动态变量引用。\u003c/p\u003e\n\u003cfigure class=\"highlight plain\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e8\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e9\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e10\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e11\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e12\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e13\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e14\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e15\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e16\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e17\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e18\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003enumbers = [1, 2, 3, 4, 5, 6]\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e# The left side of unpacking should be list or tuple.\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e*a, = numbers\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e# a = [1, 2, 3, 4, 5, 6]\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e*a, b = numbers\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e# a = [1, 2, 3, 4, 5]\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e# b = 6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003ea, *b, = numbers\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e# a = 1 \u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e# b = [2, 3, 4, 5, 6]\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003ea, *b, c = numbers\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e# a = 1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e# b = [2, 3, 4, 5]\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e# c = 6\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e上述操作中说明，可以分别从列表或元组中解包，得到相应值，然后用\u003ccode\u003e*a\u003c/code\u003e和\u003ccode\u003e*b\u003c/code\u003e引用解包所得数据，并将其打包为列表。这与前述任意个数的参数是同样的概念。\u003c/p\u003e\n\u003ch2 id=\"结论\"\u003e\u003ca href=\"#结论\" class=\"headerlink\" title=\"结论\"\u003e\u003c/a\u003e结论\u003c/h2\u003e\u003cp\u003e以上简要介绍了Python语言中的星号（*），作为一个操作符，它有很多用途，特别是在“收集参数”中，显得很重要。但是，初学者容易在此处迷惑，所以，如果你是初学者，上面的内容要认真看一看。\u003c/p\u003e\n\u003cp\u003e原文链接：\u003ca href=\"https://medium.com/understand-the-python/understanding-the-asterisk-of-python-8b9daaa4a558\" target=\"_blank\" rel=\"noopener\"\u003ehttps://medium.com/understand-the-python/understanding-the-asterisk-of-python-8b9daaa4a558\u003c/a\u003e\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e搜索技术问答的公众号：老齐教室\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cblockquote\u003e\n\u003cp\u003e在公众号中回复：\u003cstrong\u003e老齐\u003c/strong\u003e，可查看所有文章、书籍、课程。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003c/section\u003e\n    \u003c!-- Tags START --\u003e\n    \n      \u003cdiv class=\"tags\"\u003e\n        \u003cspan\u003eTags:\u003c/span\u003e\n        \n  \u003ca href=\"/tags#Python 星号\"\u003e\n    \u003cspan class=\"tag-code\"\u003ePython 星号\u003c/span\u003e\n  \u003c/a\u003e\n\n      \u003c/div\u003e\n    \n    \u003c!-- Tags END --\u003e\n    \u003c!-- NAV START --\u003e\n    \n  \u003cdiv class=\"nav-container\"\u003e\n    \u003c!-- reverse left and right to put prev and next in a more logic postition --\u003e\n    \n      \u003ca class=\"nav-left\" href=\"/2020/03/22/learn-opencv/\"\u003e\n        \u003cspan class=\"nav-arrow\"\u003e← \u003c/span\u003e\n        \n          手把手教你使用图像处理利器OpenCV\n        \n      \u003c/a\u003e\n    \n    \n      \u003ca class=\"nav-right\" href=\"/2020/03/25/python-underscore/\"\u003e\n        \n          初学Python语言者必须理解的下划线\n        \n        \u003cspan class=\"nav-arrow\"\u003e →\u003c/span\u003e\n      \u003c/a\u003e\n    \n  \u003c/div\u003e\n\n    \u003c!-- NAV END --\u003e\n    \u003c!-- 打赏 START --\u003e\n    \n      \u003cdiv class=\"money-like\"\u003e\n        \u003cdiv class=\"reward-btn\"\u003e\n          赏\n          \u003cspan class=\"money-code\"\u003e\n            \u003cspan class=\"alipay-code\"\u003e\n              \u003cdiv class=\"code-image\"\u003e\u003c/div\u003e\n              \u003cb\u003e使用支付宝打赏\u003c/b\u003e\n            \u003c/span\u003e\n            \u003cspan class=\"wechat-code\"\u003e\n              \u003cdiv class=\"code-image\"\u003e\u003c/div\u003e\n              \u003cb\u003e使用微信打赏\u003c/b\u003e\n            \u003c/span\u003e\n          \u003c/span\u003e\n        \u003c/div\u003e\n        \u003cp class=\"notice\"\u003e若你觉得我的文章对你有帮助，欢迎点击上方按钮对我打赏\u003c/p\u003e\n      \u003c/div\u003e\n    \n    \u003c!-- 打赏 END --\u003e\n    \u003c!-- 二维码 START --\u003e\n    \u003c!--% if (theme.qrcode) { %--\u003e\n      \u003cdiv class=\"qrcode\"\u003e\n        \u003c!--canvas id=\"share-qrcode\"\u003e\u003c/!--canvas--\u003e\n        \u003cimg src=\"https://public-tuchuang.oss-cn-hangzhou.aliyuncs.com/WechatIMG6_20200109154827.jpeg\" width=\"400\"/\u003e\n        \u003cp class=\"notice\"\u003e关注微信公众号，读文章、听课程，提升技能\u003c/p\u003e\n      \u003c/div\u003e\n    \u003c!--% } %--\u003e\n    \u003c!-- 二维码 END --\u003e\n    \n      \u003c!-- No Comment --\u003e\n    \n  \u003c/article\u003e",
  "Date": "2020-03-23T00:00:00Z",
  "Author": "老齐教室"
}