{
  "Source": "qiwsir.github.io",
  "Title": "正则表达式",
  "Link": "https://qiwsir.github.io/2021/12/03/regex-md/",
  "Content": "\u003carticle class=\"post-article\"\u003e\n    \u003ch2\u003e正则表达式\u003c/h2\u003e\n    \u003cp class=\"post-date\"\u003e2021-12-03\u003c/p\u003e\n    \u003csection class=\"markdown-content\"\u003e\u003ch2 id=\"正则表达式\"\u003e\u003ca href=\"#正则表达式\" class=\"headerlink\" title=\"正则表达式\"\u003e\u003c/a\u003e正则表达式\u003c/h2\u003e\u003cp\u003e正则表达式（简称为“regex”），允许用户使用他们能想到的、几乎任何类型的规则来搜索字符串 。例如，查找字符串中的所有大写字母，或查找文档中的电话号码。\u003c/p\u003e\n\u003cp\u003e正则表达式因其看似奇怪的语法而臭名昭著。这种奇怪的语法是其灵活性的副产品。正则表达式必须能够过滤掉可以想象的任何字符串模式，这就是为什么它们具有复杂的字符串模式的格式。\u003c/p\u003e\n\u003cp\u003e我们使用 Python 内置的 \u003ccode\u003ere\u003c/code\u003e 库来处理正则表达式。若要了解更多信息，请参见官方文档的有关内容。\u003c/p\u003e\n\u003ch3 id=\"搜索基本模式\"\u003e\u003ca href=\"#搜索基本模式\" class=\"headerlink\" title=\"搜索基本模式\"\u003e\u003c/a\u003e搜索基本模式\u003c/h3\u003e\u003cp\u003e假设有以下字符串：\u003c/p\u003e\n\u003cfigure class=\"highlight python\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003etext = \u003cspan class=\"string\"\u003e\u0026#34;The agent\u0026#39;s phone number is 408-555-1234. Call soon!\u0026#34;\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e如果搜索字符串 \u003ccode\u003e\u0026#39;phone\u0026#39;\u003c/code\u003e 是否在上述文本中，快速的方法是：\u003c/p\u003e\n\u003cfigure class=\"highlight python\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"string\"\u003e\u0026#39;phone\u0026#39;\u003c/span\u003e \u003cspan class=\"keyword\"\u003ein\u003c/span\u003e text\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e它将返回 \u003ccode\u003eTrue\u003c/code\u003e ，因为 \u003ccode\u003etext\u003c/code\u003e 中有这个字符串。\u003c/p\u003e\n\u003cp\u003e上面的操作，如果用正则表达式来实现，则为：\u003c/p\u003e\n\u003cfigure class=\"highlight python\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"keyword\"\u003eimport\u003c/span\u003e re\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003epattern = \u003cspan class=\"string\"\u003e\u0026#39;phone\u0026#39;\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003ere.search(pattern,text)\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e输出\u003c/p\u003e\n\u003cfigure class=\"highlight python\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u0026lt;_sre.SRE_Match object; span=(\u003cspan class=\"number\"\u003e12\u003c/span\u003e, \u003cspan class=\"number\"\u003e17\u003c/span\u003e), match=\u003cspan class=\"string\"\u003e\u0026#39;phone\u0026#39;\u003c/span\u003e\u0026gt;\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e这个结果表示 \u003ccode\u003e\u0026#39;phone\u0026#39;\u003c/code\u003e 与变量 \u003ccode\u003etext\u003c/code\u003e 的字符串匹配，并且与之对应的是该字符串的索引 \u003ccode\u003e12\u003c/code\u003e 到到 \u003ccode\u003e17\u003c/code\u003e 间的成员。\u003c/p\u003e\n\u003cp\u003e再比如：\u003c/p\u003e\n\u003cfigure class=\"highlight python\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003epattern = \u003cspan class=\"string\"\u003e\u0026#34;NOT IN TEXT\u0026#34;\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003ere.search(pattern,text)\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e不会返回任何内容，因为找不到匹配项。\u003c/p\u003e\n\u003cp\u003e由此可知，\u003ccode\u003ere.search()\u003c/code\u003e 的作用是扫描文本，然后返回匹配对象。如果没有找到该模式，则返回\u003ccode\u003eNone\u003c/code\u003e 。\u003c/p\u003e\n\u003cp\u003e对于返回的匹配对象（Match object），如果用变量 \u003ccode\u003ematch\u003c/code\u003e 引用，则 \u003ccode\u003ematch.span()\u003c/code\u003e 返回含有匹配对象的索引范围，\u003ccode\u003ematch.start()\u003c/code\u003e 返回开始索引，\u003ccode\u003ematch.end()\u003c/code\u003e 返回结束索引。\u003c/p\u003e\n\u003cfigure class=\"highlight python\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e8\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e9\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e\u0026gt;\u0026gt;\u0026gt; \u003c/span\u003ematch = re.search(pattern, text)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e\u0026gt;\u0026gt;\u0026gt; \u003c/span\u003ematch\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026lt;re.Match object; span=(\u003cspan class=\"number\"\u003e12\u003c/span\u003e, \u003cspan class=\"number\"\u003e17\u003c/span\u003e), match=\u003cspan class=\"string\"\u003e\u0026#39;phone\u0026#39;\u003c/span\u003e\u0026gt;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e\u0026gt;\u0026gt;\u0026gt; \u003c/span\u003ematch.span()\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e(\u003cspan class=\"number\"\u003e12\u003c/span\u003e, \u003cspan class=\"number\"\u003e17\u003c/span\u003e)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e\u0026gt;\u0026gt;\u0026gt; \u003c/span\u003ematch.start()\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"number\"\u003e12\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e\u0026gt;\u0026gt;\u0026gt; \u003c/span\u003ematch.end()\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"number\"\u003e17\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e如果在被搜索的文本中，有多个匹配对象，结果如何？\u003c/p\u003e\n\u003cfigure class=\"highlight python\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e\u0026gt;\u0026gt;\u0026gt; \u003c/span\u003etext = \u003cspan class=\"string\"\u003e\u0026#34;my phone is a new phone\u0026#34;\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e\u0026gt;\u0026gt;\u0026gt; \u003c/span\u003ematch = re.search(\u003cspan class=\"string\"\u003e\u0026#34;phone\u0026#34;\u003c/span\u003e,text)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e\u0026gt;\u0026gt;\u0026gt; \u003c/span\u003ematch\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026lt;re.Match object; span=(\u003cspan class=\"number\"\u003e3\u003c/span\u003e, \u003cspan class=\"number\"\u003e8\u003c/span\u003e), match=\u003cspan class=\"string\"\u003e\u0026#39;phone\u0026#39;\u003c/span\u003e\u0026gt;\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e这里只返回了第一个符合条件的匹配项。\u003c/p\u003e\n\u003cp\u003e为了将所有匹配项都得到，可以使用 \u003ccode\u003e.findall()\u003c/code\u003e 方法：\u003c/p\u003e\n\u003cfigure class=\"highlight python\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e\u0026gt;\u0026gt;\u0026gt; \u003c/span\u003ematches = re.findall(\u003cspan class=\"string\"\u003e\u0026#34;phone\u0026#34;\u003c/span\u003e,text)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e\u0026gt;\u0026gt;\u0026gt; \u003c/span\u003ematches\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e[\u003cspan class=\"string\"\u003e\u0026#39;phone\u0026#39;\u003c/span\u003e, \u003cspan class=\"string\"\u003e\u0026#39;phone\u0026#39;\u003c/span\u003e]\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e如果想要与之匹配的实际文本，可以使用 \u003ccode\u003e.group()\u003c/code\u003e 方法。  \u003c/p\u003e\n\u003cfigure class=\"highlight python\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e\u0026gt;\u0026gt;\u0026gt; \u003c/span\u003ematch.group()\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"string\"\u003e\u0026#39;phone\u0026#39;\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003ch3 id=\"复杂模式\"\u003e\u003ca href=\"#复杂模式\" class=\"headerlink\" title=\"复杂模式\"\u003e\u003c/a\u003e复杂模式\u003c/h3\u003e\u003cp\u003e前面用简单的正则表达式演示了 \u003ccode\u003ere\u003c/code\u003e 中有关函数的基本使用，下面研究如何编写复杂的正则表达式。\u003c/p\u003e\n\u003cp\u003e在正则表达式中，数字或单个字符串等可以用不同的编码来表示，用这些编码可以构建一个“模式字符串”（pattern string）。请注意，在模式字符串中会大量使用反斜杠 \u003ccode\u003e\\\u003c/code\u003e 。因此，在 Python 中，常常用原始字符串的形式定义模式字符串，样式为：\u003c/p\u003e\n\u003cfigure class=\"highlight python\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"string\"\u003er\u0026#39;mypattern\u0026#39;\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e在原始字符串中，模式字符串中的 \u003ccode\u003e\\\u003c/code\u003e 就不再具有转义符的含义了。\u003c/p\u003e\n\u003cp\u003e下面的表格中可以找到所有可能的标识符：\u003c/p\u003e\n\u003cp\u003e表1\u003c/p\u003e\n\u003ctable\u003e\n\u003cthead\u003e\n\u003ctr\u003e\n\u003cth align=\"left\"\u003e符号\u003c/th\u003e\n\u003cth align=\"left\"\u003e含义\u003c/th\u003e\n\u003cth align=\"left\"\u003e举例\u003c/th\u003e\n\u003cth align=\"left\"\u003e实例\u003c/th\u003e\n\u003c/tr\u003e\n\u003c/thead\u003e\n\u003ctbody\u003e\u003ctr\u003e\n\u003ctd align=\"left\"\u003e\\d\u003c/td\u003e\n\u003ctd align=\"left\"\u003e数字\u003c/td\u003e\n\u003ctd align=\"left\"\u003efile_\\d\\d\u003c/td\u003e\n\u003ctd align=\"left\"\u003efile_25\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd align=\"left\"\u003e\\w\u003c/td\u003e\n\u003ctd align=\"left\"\u003e字母数字\u003c/td\u003e\n\u003ctd align=\"left\"\u003e\\w-\\w\\w\\w\u003c/td\u003e\n\u003ctd align=\"left\"\u003eA-b_1\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd align=\"left\"\u003e\\s\u003c/td\u003e\n\u003ctd align=\"left\"\u003e空白\u003c/td\u003e\n\u003ctd align=\"left\"\u003ea\\sb\\sc\u003c/td\u003e\n\u003ctd align=\"left\"\u003ea b c\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd align=\"left\"\u003e\\D\u003c/td\u003e\n\u003ctd align=\"left\"\u003e一个非数字\u003c/td\u003e\n\u003ctd align=\"left\"\u003e\\D\\D\\D\u003c/td\u003e\n\u003ctd align=\"left\"\u003eABC\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd align=\"left\"\u003e\\W\u003c/td\u003e\n\u003ctd align=\"left\"\u003e非字母数字\u003c/td\u003e\n\u003ctd align=\"left\"\u003e\\W\\W\\W\\W\\W\u003c/td\u003e\n\u003ctd align=\"left\"\u003e*-+=)\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd align=\"left\"\u003e\\S\u003c/td\u003e\n\u003ctd align=\"left\"\u003e非空格\u003c/td\u003e\n\u003ctd align=\"left\"\u003e\\S\\S\\S\\S\u003c/td\u003e\n\u003ctd align=\"left\"\u003eYoyo\u003c/td\u003e\n\u003c/tr\u003e\n\u003c/tbody\u003e\u003c/table\u003e\n\u003cp\u003e不用特别记忆，用到时来查找即可。\u003c/p\u003e\n\u003cp\u003e请看下面的代码：\u003c/p\u003e\n\u003cfigure class=\"highlight python\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e\u0026gt;\u0026gt;\u0026gt; \u003c/span\u003etext = \u003cspan class=\"string\"\u003e\u0026#34;My telephone number is 408-555-1234\u0026#34;\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e\u0026gt;\u0026gt;\u0026gt; \u003c/span\u003ephone = re.search(\u003cspan class=\"string\"\u003er\u0026#39;\\d\\d\\d-\\d\\d\\d-\\d\\d\\d\\d\u0026#39;\u003c/span\u003e,text)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e\u0026gt;\u0026gt;\u0026gt; \u003c/span\u003ephone.group()\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"string\"\u003e\u0026#39;408-555-1234\u0026#39;\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e注意重复的 \u003ccode\u003e\\d\u003c/code\u003e 。这有点麻烦，特别是如果要寻找很长的数字串，就得使用量词。\u003c/p\u003e\n\u003cp\u003e表2\u003c/p\u003e\n\u003ctable\u003e\n\u003cthead\u003e\n\u003ctr\u003e\n\u003cth align=\"left\"\u003e字符\u003c/th\u003e\n\u003cth align=\"left\"\u003e描述\u003c/th\u003e\n\u003cth align=\"left\"\u003e示例模式代码\u003c/th\u003e\n\u003cth align=\"left\"\u003e示例匹配\u003c/th\u003e\n\u003c/tr\u003e\n\u003c/thead\u003e\n\u003ctbody\u003e\u003ctr\u003e\n\u003ctd align=\"left\"\u003e+\u003c/td\u003e\n\u003ctd align=\"left\"\u003e出现一次或一次以上\u003c/td\u003e\n\u003ctd align=\"left\"\u003eVersion \\w-\\w+\u003c/td\u003e\n\u003ctd align=\"left\"\u003eVersion A-b1_1\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd align=\"left\"\u003e{3}\u003c/td\u003e\n\u003ctd align=\"left\"\u003e正好出现3次\u003c/td\u003e\n\u003ctd align=\"left\"\u003e\\D{3}\u003c/td\u003e\n\u003ctd align=\"left\"\u003eabc\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd align=\"left\"\u003e{2,4}\u003c/td\u003e\n\u003ctd align=\"left\"\u003e出现2到4次\u003c/td\u003e\n\u003ctd align=\"left\"\u003e\\d{2,4}\u003c/td\u003e\n\u003ctd align=\"left\"\u003e123\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd align=\"left\"\u003e{3,}\u003c/td\u003e\n\u003ctd align=\"left\"\u003e出现3次或3次以上\u003c/td\u003e\n\u003ctd align=\"left\"\u003e\\w{3,}\u003c/td\u003e\n\u003ctd align=\"left\"\u003eanycharacters\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd align=\"left\"\u003e*\u003c/td\u003e\n\u003ctd align=\"left\"\u003e出现零次或多次\u003c/td\u003e\n\u003ctd align=\"left\"\u003eA*B*C*\u003c/td\u003e\n\u003ctd align=\"left\"\u003eAAACC\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd align=\"left\"\u003e?\u003c/td\u003e\n\u003ctd align=\"left\"\u003e一次或零次\u003c/td\u003e\n\u003ctd align=\"left\"\u003eplurals？\u003c/td\u003e\n\u003ctd align=\"left\"\u003eplurals\u003c/td\u003e\n\u003c/tr\u003e\n\u003c/tbody\u003e\u003c/table\u003e\n\u003cp\u003e用量词修改前面的正则表达式：\u003c/p\u003e\n\u003cfigure class=\"highlight python\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e\u0026gt;\u0026gt;\u0026gt; \u003c/span\u003ephone = re.search(\u003cspan class=\"string\"\u003er\u0026#39;\\d{3}-\\d{3}-\\d{4}\u0026#39;\u003c/span\u003e,text)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e\u0026gt;\u0026gt;\u0026gt; \u003c/span\u003ephone.group()\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"string\"\u003e\u0026#39;408-555-1234\u0026#39;\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e结果没变，但是它看起来很简单，可以很容易地用于复杂的和大型的图案。\u003c/p\u003e\n\u003ch4 id=\"分组\"\u003e\u003ca href=\"#分组\" class=\"headerlink\" title=\"分组\"\u003e\u003c/a\u003e分组\u003c/h4\u003e\u003cp\u003e继续以上面的电话号码为例，是由三个数字一组组成的，如果要每三个数字作为一个单位来搜索，则需要在正则表达式中分组，分组方法就是使用 \u003ccode\u003e()\u003c/code\u003e 实现，例如：\u003c/p\u003e\n\u003cfigure class=\"highlight python\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e\u0026gt;\u0026gt;\u0026gt; \u003c/span\u003ephone = re.search(\u003cspan class=\"string\"\u003er\u0026#39;(\\d{3})-(\\d{3})-(\\d{4})\u0026#39;\u003c/span\u003e,text)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e\u0026gt;\u0026gt;\u0026gt; \u003c/span\u003ephone.group()\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"string\"\u003e\u0026#39;408-555-1234\u0026#39;\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e注意上面正则表达式的写法，当执行 \u003ccode\u003ephone.group()\u003c/code\u003e ，返回的是所有匹配结果。\u003c/p\u003e\n\u003cfigure class=\"highlight python\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e\u0026gt;\u0026gt;\u0026gt; \u003c/span\u003ephone.group(\u003cspan class=\"number\"\u003e1\u003c/span\u003e)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"string\"\u003e\u0026#39;408\u0026#39;\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e\u0026gt;\u0026gt;\u0026gt; \u003c/span\u003ephone.group(\u003cspan class=\"number\"\u003e2\u003c/span\u003e)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"string\"\u003e\u0026#39;555\u0026#39;\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e\u0026gt;\u0026gt;\u0026gt; \u003c/span\u003ephone.group(\u003cspan class=\"number\"\u003e3\u003c/span\u003e)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"string\"\u003e\u0026#39;1234\u0026#39;\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e当其中的参数依次为 \u003ccode\u003e1\u003c/code\u003e 、\u003ccode\u003e2\u003c/code\u003e 、\u003ccode\u003e3\u003c/code\u003e 时，返回对应分组的匹配结果。但是，注意，如果参数是 \u003ccode\u003e0\u003c/code\u003e ，则返回全部。\u003c/p\u003e\n\u003cfigure class=\"highlight python\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e\u0026gt;\u0026gt;\u0026gt; \u003c/span\u003ephone.group(\u003cspan class=\"number\"\u003e0\u003c/span\u003e)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"string\"\u003e\u0026#39;408-555-1234\u0026#39;\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003ch4 id=\"或运算\"\u003e\u003ca href=\"#或运算\" class=\"headerlink\" title=\"或运算\"\u003e\u003c/a\u003e或运算\u003c/h4\u003e\u003cp\u003e正则表达式中使用使用管道操作符实现或运算，例如：\u003c/p\u003e\n\u003cfigure class=\"highlight python\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e\u0026gt;\u0026gt;\u0026gt; \u003c/span\u003ere.search(\u003cspan class=\"string\"\u003er\u0026#34;man|woman\u0026#34;\u003c/span\u003e,\u003cspan class=\"string\"\u003e\u0026#34;This man was here.\u0026#34;\u003c/span\u003e)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026lt;re.Match object; span=(\u003cspan class=\"number\"\u003e5\u003c/span\u003e, \u003cspan class=\"number\"\u003e8\u003c/span\u003e), match=\u003cspan class=\"string\"\u003e\u0026#39;man\u0026#39;\u003c/span\u003e\u0026gt;\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e对比：\u003c/p\u003e\n\u003cfigure class=\"highlight python\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e\u0026gt;\u0026gt;\u0026gt; \u003c/span\u003ere.search(\u003cspan class=\"string\"\u003er\u0026#34;man|woman\u0026#34;\u003c/span\u003e,\u003cspan class=\"string\"\u003e\u0026#34;This woman was here.\u0026#34;\u003c/span\u003e)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026lt;re.Match object; span=(\u003cspan class=\"number\"\u003e5\u003c/span\u003e, \u003cspan class=\"number\"\u003e10\u003c/span\u003e), match=\u003cspan class=\"string\"\u003e\u0026#39;woman\u0026#39;\u003c/span\u003e\u0026gt;\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003ch4 id=\"通配符\"\u003e\u003ca href=\"#通配符\" class=\"headerlink\" title=\"通配符\"\u003e\u003c/a\u003e通配符\u003c/h4\u003e\u003cp\u003e正在表达式中的通配符用“\u003ccode\u003e.\u003c/code\u003e”表示，如：\u003c/p\u003e\n\u003cfigure class=\"highlight python\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e\u0026gt;\u0026gt;\u0026gt; \u003c/span\u003ere.findall(\u003cspan class=\"string\"\u003er\u0026#34;.at\u0026#34;\u003c/span\u003e,\u003cspan class=\"string\"\u003e\u0026#34;The cat in the hat sat here.\u0026#34;\u003c/span\u003e)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e[\u003cspan class=\"string\"\u003e\u0026#39;cat\u0026#39;\u003c/span\u003e, \u003cspan class=\"string\"\u003e\u0026#39;hat\u0026#39;\u003c/span\u003e, \u003cspan class=\"string\"\u003e\u0026#39;sat\u0026#39;\u003c/span\u003e]\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e如果只需要匹配前三个字母，则：\u003c/p\u003e\n\u003cfigure class=\"highlight python\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e\u0026gt;\u0026gt;\u0026gt; \u003c/span\u003ere.findall(\u003cspan class=\"string\"\u003er\u0026#34;...at\u0026#34;\u003c/span\u003e,\u003cspan class=\"string\"\u003e\u0026#34;The bat went splat\u0026#34;\u003c/span\u003e)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e[\u003cspan class=\"string\"\u003e\u0026#39;e bat\u0026#39;\u003c/span\u003e, \u003cspan class=\"string\"\u003e\u0026#39;splat\u0026#39;\u003c/span\u003e]\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e注意观察上面的结果，因为空格也是字符，并且 \u003ccode\u003er\u0026#39;...at\u0026#39;\u003c/code\u003e 匹配的规则是在 \u003ccode\u003e\u0026#39;at\u0026#39;\u003c/code\u003e 前面有三个字符。\u003c/p\u003e\n\u003cp\u003e如果要匹配所有以 \u003ccode\u003e\u0026#39;at\u0026#39;\u003c/code\u003e 结尾的单词，怎么办？\u003c/p\u003e\n\u003cfigure class=\"highlight python\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"comment\"\u003e# 一个或多个非空格之后是 \u0026#39;at\u0026#39;\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e\u0026gt;\u0026gt;\u0026gt; \u003c/span\u003ere.findall(\u003cspan class=\"string\"\u003er\u0026#39;\\S+at\u0026#39;\u003c/span\u003e,\u003cspan class=\"string\"\u003e\u0026#34;The bat went splat\u0026#34;\u003c/span\u003e)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e[\u003cspan class=\"string\"\u003e\u0026#39;bat\u0026#39;\u003c/span\u003e, \u003cspan class=\"string\"\u003e\u0026#39;splat\u0026#39;\u003c/span\u003e]\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003ch4 id=\"起止符\"\u003e\u003ca href=\"#起止符\" class=\"headerlink\" title=\"起止符\"\u003e\u003c/a\u003e起止符\u003c/h4\u003e\u003cp\u003e在正则表达式中，使用 \u003ccode\u003e^\u003c/code\u003e 在字符串的开头查找某字符，使用 \u003ccode\u003e$\u003c/code\u003e 在字符串的尾部查找某字符，例如：\u003c/p\u003e\n\u003cfigure class=\"highlight python\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"comment\"\u003e# 查找尾部的整数字符\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e\u0026gt;\u0026gt;\u0026gt; \u003c/span\u003ere.findall(\u003cspan class=\"string\"\u003er\u0026#39;\\d$\u0026#39;\u003c/span\u003e,\u003cspan class=\"string\"\u003e\u0026#39;This ends with a number 2\u0026#39;\u003c/span\u003e)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e[\u003cspan class=\"string\"\u003e\u0026#39;2\u0026#39;\u003c/span\u003e]\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"comment\"\u003e# 查找开头的整数字符\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e\u0026gt;\u0026gt;\u0026gt; \u003c/span\u003ere.findall(\u003cspan class=\"string\"\u003er\u0026#39;^\\d\u0026#39;\u003c/span\u003e,\u003cspan class=\"string\"\u003e\u0026#39;1 is the loneliest number.\u0026#39;\u003c/span\u003e)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e[\u003cspan class=\"string\"\u003e\u0026#39;1\u0026#39;\u003c/span\u003e]\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e上面的代码将 \u003ccode\u003e[\u0026#39;2\u0026#39;]\u003c/code\u003e 、\u003ccode\u003e[\u0026#39;1\u0026#39;]\u003c/code\u003e 作为字符串的结束字符和开始字符返回。\u003c/p\u003e\n\u003cp\u003e请注意，这适用于整个字符串，而不是单个单词。\u003c/p\u003e\n\u003ch4 id=\"从字符串中删除指定字符\"\u003e\u003ca href=\"#从字符串中删除指定字符\" class=\"headerlink\" title=\"从字符串中删除指定字符\"\u003e\u003c/a\u003e从字符串中删除指定字符\u003c/h4\u003e\u003cp\u003e要从字符串中删除指定类型的字符，可以将 \u003ccode\u003e^\u003c/code\u003e 符号与一组括号 \u003ccode\u003e[]\u003c/code\u003e 结合使用。括号内的任何内容都被筛选去掉。例如：\u003c/p\u003e\n\u003cfigure class=\"highlight python\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e\u0026gt;\u0026gt;\u0026gt; \u003c/span\u003ephrase = \u003cspan class=\"string\"\u003e\u0026#34;there are 3 numbers 34 inside 5 this sentence.\u0026#34;\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e\u0026gt;\u0026gt;\u0026gt; \u003c/span\u003ere.findall(\u003cspan class=\"string\"\u003er\u0026#39;[^\\d]\u0026#39;\u003c/span\u003e,phrase)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e[\u003cspan class=\"string\"\u003e\u0026#39;t\u0026#39;\u003c/span\u003e, \u003cspan class=\"string\"\u003e\u0026#39;h\u0026#39;\u003c/span\u003e, \u003cspan class=\"string\"\u003e\u0026#39;e\u0026#39;\u003c/span\u003e, \u003cspan class=\"string\"\u003e\u0026#39;r\u0026#39;\u003c/span\u003e, \u003cspan class=\"string\"\u003e\u0026#39;e\u0026#39;\u003c/span\u003e, \u003cspan class=\"string\"\u003e\u0026#39; \u0026#39;\u003c/span\u003e, \u003cspan class=\"string\"\u003e\u0026#39;a\u0026#39;\u003c/span\u003e, \u003cspan class=\"string\"\u003e\u0026#39;r\u0026#39;\u003c/span\u003e, \u003cspan class=\"string\"\u003e\u0026#39;e\u0026#39;\u003c/span\u003e, \u003cspan class=\"string\"\u003e\u0026#39; \u0026#39;\u003c/span\u003e, \u003cspan class=\"string\"\u003e\u0026#39; \u0026#39;\u003c/span\u003e, \u003cspan class=\"string\"\u003e\u0026#39;n\u0026#39;\u003c/span\u003e, \u003cspan class=\"string\"\u003e\u0026#39;u\u0026#39;\u003c/span\u003e, \u003cspan class=\"string\"\u003e\u0026#39;m\u0026#39;\u003c/span\u003e, \u003cspan class=\"string\"\u003e\u0026#39;b\u0026#39;\u003c/span\u003e, \u003cspan class=\"string\"\u003e\u0026#39;e\u0026#39;\u003c/span\u003e, \u003cspan class=\"string\"\u003e\u0026#39;r\u0026#39;\u003c/span\u003e, \u003cspan class=\"string\"\u003e\u0026#39;s\u0026#39;\u003c/span\u003e, \u003cspan class=\"string\"\u003e\u0026#39; \u0026#39;\u003c/span\u003e, \u003cspan class=\"string\"\u003e\u0026#39; \u0026#39;\u003c/span\u003e, \u003cspan class=\"string\"\u003e\u0026#39;i\u0026#39;\u003c/span\u003e, \u003cspan class=\"string\"\u003e\u0026#39;n\u0026#39;\u003c/span\u003e, \u003cspan class=\"string\"\u003e\u0026#39;s\u0026#39;\u003c/span\u003e, \u003cspan class=\"string\"\u003e\u0026#39;i\u0026#39;\u003c/span\u003e, \u003cspan class=\"string\"\u003e\u0026#39;d\u0026#39;\u003c/span\u003e, \u003cspan class=\"string\"\u003e\u0026#39;e\u0026#39;\u003c/span\u003e, \u003cspan class=\"string\"\u003e\u0026#39; \u0026#39;\u003c/span\u003e, \u003cspan class=\"string\"\u003e\u0026#39; \u0026#39;\u003c/span\u003e, \u003cspan class=\"string\"\u003e\u0026#39;t\u0026#39;\u003c/span\u003e, \u003cspan class=\"string\"\u003e\u0026#39;h\u0026#39;\u003c/span\u003e, \u003cspan class=\"string\"\u003e\u0026#39;i\u0026#39;\u003c/span\u003e, \u003cspan class=\"string\"\u003e\u0026#39;s\u0026#39;\u003c/span\u003e, \u003cspan class=\"string\"\u003e\u0026#39; \u0026#39;\u003c/span\u003e, \u003cspan class=\"string\"\u003e\u0026#39;s\u0026#39;\u003c/span\u003e, \u003cspan class=\"string\"\u003e\u0026#39;e\u0026#39;\u003c/span\u003e, \u003cspan class=\"string\"\u003e\u0026#39;n\u0026#39;\u003c/span\u003e, \u003cspan class=\"string\"\u003e\u0026#39;t\u0026#39;\u003c/span\u003e, \u003cspan class=\"string\"\u003e\u0026#39;e\u0026#39;\u003c/span\u003e, \u003cspan class=\"string\"\u003e\u0026#39;n\u0026#39;\u003c/span\u003e, \u003cspan class=\"string\"\u003e\u0026#39;c\u0026#39;\u003c/span\u003e, \u003cspan class=\"string\"\u003e\u0026#39;e\u0026#39;\u003c/span\u003e, \u003cspan class=\"string\"\u003e\u0026#39;.\u0026#39;\u003c/span\u003e]\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003ch4 id=\"删除标点符号\"\u003e\u003ca href=\"#删除标点符号\" class=\"headerlink\" title=\"删除标点符号\"\u003e\u003c/a\u003e删除标点符号\u003c/h4\u003e\u003cp\u003e使用与上面类似的方法，可以删除字符串中的标点符号\u003c/p\u003e\n\u003cfigure class=\"highlight plain\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; test_phrase = \u0026#39;This is a string! But it has punctuation. How can we remove it?\u0026#39;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; re.findall(\u0026#39;[^!.? ]+\u0026#39;,test_phrase)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e[\u0026#39;This\u0026#39;, \u0026#39;is\u0026#39;, \u0026#39;a\u0026#39;, \u0026#39;string\u0026#39;, \u0026#39;But\u0026#39;, \u0026#39;it\u0026#39;, \u0026#39;has\u0026#39;, \u0026#39;punctuation\u0026#39;, \u0026#39;How\u0026#39;, \u0026#39;can\u0026#39;, \u0026#39;we\u0026#39;, \u0026#39;remove\u0026#39;, \u0026#39;it\u0026#39;]\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003ch4 id=\"分组的括号\"\u003e\u003ca href=\"#分组的括号\" class=\"headerlink\" title=\"分组的括号\"\u003e\u003c/a\u003e分组的括号\u003c/h4\u003e\u003cp\u003e使用 \u003ccode\u003e[ ]\u003c/code\u003e 也能够实现分组选择，比如下面的字符串中，找出含有连字符的单词。\u003c/p\u003e\n\u003cfigure class=\"highlight python\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e\u0026gt;\u0026gt;\u0026gt; \u003c/span\u003etext = \u003cspan class=\"string\"\u003e\u0026#39;Only find the hypen-words in this sentence. But you do not know how long-ish they are\u0026#39;\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e\u0026gt;\u0026gt;\u0026gt; \u003c/span\u003ere.findall(\u003cspan class=\"string\"\u003er\u0026#39;[\\w]+-[\\w]+\u0026#39;\u003c/span\u003e,text)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e[\u003cspan class=\"string\"\u003e\u0026#39;hypen-words\u0026#39;\u003c/span\u003e, \u003cspan class=\"string\"\u003e\u0026#39;long-ish\u0026#39;\u003c/span\u003e]\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003ch4 id=\"用于多个选项的括号\"\u003e\u003ca href=\"#用于多个选项的括号\" class=\"headerlink\" title=\"用于多个选项的括号\"\u003e\u003c/a\u003e用于多个选项的括号\u003c/h4\u003e\u003cp\u003e如果有多个匹配选项，可以使用括号列出这些选项。例如，从下面的字符串中宣传以 \u003ccode\u003ecat\u003c/code\u003e 开头，并且以 \u003ccode\u003efish\u003c/code\u003e 或 \u003ccode\u003enap\u003c/code\u003e 或 \u003ccode\u003eclaw\u003c/code\u003e 结尾的单词。\u003c/p\u003e\n\u003cfigure class=\"highlight python\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e\u0026gt;\u0026gt;\u0026gt; \u003c/span\u003etext = \u003cspan class=\"string\"\u003e\u0026#39;Hello, would you like some catfish?\u0026#39;\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e\u0026gt;\u0026gt;\u0026gt; \u003c/span\u003ere.search(\u003cspan class=\"string\"\u003er\u0026#39;cat(fish|nap|claw)\u0026#39;\u003c/span\u003e,text)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026lt;re.Match object; span=(\u003cspan class=\"number\"\u003e27\u003c/span\u003e, \u003cspan class=\"number\"\u003e34\u003c/span\u003e), match=\u003cspan class=\"string\"\u003e\u0026#39;catfish\u0026#39;\u003c/span\u003e\u0026gt;\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003ch2 id=\"结论\"\u003e\u003ca href=\"#结论\" class=\"headerlink\" title=\"结论\"\u003e\u003c/a\u003e结论\u003c/h2\u003e\u003cp\u003e正则表达式不论的软件开发、WEB编程、还是机器学习的数据清洗中，都有很多用途。不过它的内容庞杂，需要耐心地、认真地研究细节。\u003c/p\u003e\n\u003ch2 id=\"参考资料\"\u003e\u003ca href=\"#参考资料\" class=\"headerlink\" title=\"参考资料\"\u003e\u003c/a\u003e参考资料\u003c/h2\u003e\u003col\u003e\n\u003cli\u003e齐伟. Python 大学实用教程. 电子工业出版社\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://towardsdatascience.com/manipulate-pdf-files-extract-information-with-pypdf2-and-regular-expression-39ff697db0ca\" target=\"_blank\" rel=\"noopener\"\u003ehttps://towardsdatascience.com/manipulate-pdf-files-extract-information-with-pypdf2-and-regular-expression-39ff697db0ca\u003c/a\u003e\u003c/li\u003e\n\u003c/ol\u003e\n\u003c/section\u003e\n    \u003c!-- Tags START --\u003e\n    \n    \u003c!-- Tags END --\u003e\n    \u003c!-- NAV START --\u003e\n    \n  \u003cdiv class=\"nav-container\"\u003e\n    \u003c!-- reverse left and right to put prev and next in a more logic postition --\u003e\n    \n      \u003ca class=\"nav-left\" href=\"/2021/11/14/Manipulate-pdf/\"\u003e\n        \u003cspan class=\"nav-arrow\"\u003e← \u003c/span\u003e\n        \n          用 Python 编辑 PDF 文件\n        \n      \u003c/a\u003e\n    \n    \n      \u003ca class=\"nav-right\" href=\"/2021/12/08/lane-detection/\"\u003e\n        \n          自动驾驶中的车道识别\n        \n        \u003cspan class=\"nav-arrow\"\u003e →\u003c/span\u003e\n      \u003c/a\u003e\n    \n  \u003c/div\u003e\n\n    \u003c!-- NAV END --\u003e\n    \u003c!-- 打赏 START --\u003e\n    \n      \u003cdiv class=\"money-like\"\u003e\n        \u003cdiv class=\"reward-btn\"\u003e\n          赏\n          \u003cspan class=\"money-code\"\u003e\n            \u003cspan class=\"alipay-code\"\u003e\n              \u003cdiv class=\"code-image\"\u003e\u003c/div\u003e\n              \u003cb\u003e使用支付宝打赏\u003c/b\u003e\n            \u003c/span\u003e\n            \u003cspan class=\"wechat-code\"\u003e\n              \u003cdiv class=\"code-image\"\u003e\u003c/div\u003e\n              \u003cb\u003e使用微信打赏\u003c/b\u003e\n            \u003c/span\u003e\n          \u003c/span\u003e\n        \u003c/div\u003e\n        \u003cp class=\"notice\"\u003e若你觉得我的文章对你有帮助，欢迎点击上方按钮对我打赏\u003c/p\u003e\n      \u003c/div\u003e\n    \n    \u003c!-- 打赏 END --\u003e\n    \u003c!-- 二维码 START --\u003e\n    \u003c!--% if (theme.qrcode) { %--\u003e\n      \u003cdiv class=\"qrcode\"\u003e\n        \u003c!--canvas id=\"share-qrcode\"\u003e\u003c/!--canvas--\u003e\n        \u003cimg src=\"https://public-tuchuang.oss-cn-hangzhou.aliyuncs.com/WechatIMG6_20200109154827.jpeg\" width=\"400\"/\u003e\n        \u003cp class=\"notice\"\u003e关注微信公众号，读文章、听课程，提升技能\u003c/p\u003e\n      \u003c/div\u003e\n    \u003c!--% } %--\u003e\n    \u003c!-- 二维码 END --\u003e\n    \n      \u003c!-- No Comment --\u003e\n    \n  \u003c/article\u003e",
  "Date": "2021-12-03T00:00:00Z",
  "Author": "老齐教室"
}