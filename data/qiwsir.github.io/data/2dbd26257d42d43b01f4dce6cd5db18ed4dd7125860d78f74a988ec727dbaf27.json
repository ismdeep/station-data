{
  "Source": "qiwsir.github.io",
  "Title": "用Python抓取在Github上的组织名称",
  "Link": "https://qiwsir.github.io/2020/04/24/scrape-github-org/",
  "Content": "\u003carticle class=\"post-article\"\u003e\n    \u003ch2\u003e用Python抓取在Github上的组织名称\u003c/h2\u003e\n    \u003cp class=\"post-date\"\u003e2020-04-24\u003c/p\u003e\n    \u003csection class=\"markdown-content\"\u003e\u003cp\u003e作者：Florian Dahlitz\u003c/p\u003e\n\u003cp\u003e翻译：老齐\u003c/p\u003e\n\u003cp\u003e与本文相关书籍推荐：《跟老齐学Python：Django实战》\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"https://public-tuchuang.oss-cn-hangzhou.aliyuncs.com/Django2%E7%AB%8B%E4%BD%93%E5%9B%BE_20200117164816.png\" alt=\"\"/\u003e\u003c/p\u003e\n\u003chr/\u003e\n\u003cp\u003e我想在我的个人网站上展现我在Github上提交代码的组织名称，并且不用我手动更新提交记录的变化。Github提供了读取数据的API，但是，不能体现出我想一些开发组织提交的代码。这就是我之所以要爬取那些信息的原因。本文的代码仓库：\u003ca href=\"https://github.com/DahlitzFlorian\" target=\"_blank\" rel=\"noopener\"\u003ehttps://github.com/DahlitzFlorian\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003e本文中，我将向你展示一下开发过程。\u003c/p\u003e\n\u003ch2 id=\"准备\"\u003e\u003ca href=\"#准备\" class=\"headerlink\" title=\"准备\"\u003e\u003c/a\u003e准备\u003c/h2\u003e\u003cp\u003e为了能顺利完成本文项目，请安装如下依赖。在当前目录中创建一个名为\u003ccode\u003erequirements.txt\u003c/code\u003e的文件，打开文本编辑器，把下面的内容复制到该文件中。\u003c/p\u003e\n\u003cfigure class=\"highlight plain\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003ebeautifulsoup4==4.9.0\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003elxml==4.5.0\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003erequests==2.23.0\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e我们使用\u003ccode\u003erequests\u003c/code\u003e获取网页内容，\u003ccode\u003elxml\u003c/code\u003e和\u003ccode\u003ebeautifulsoup4\u003c/code\u003e是另外提取信息的工具。\u003c/p\u003e\n\u003cp\u003e如果你不想把你本地的Python环境搞得太复杂，可以创建虚拟环境：\u003c/p\u003e\n\u003cfigure class=\"highlight plain\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e$ python -m venv .venv\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e$ source .venv/bin/activate\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e然后，用\u003ccode\u003epip\u003c/code\u003e安装\u003ccode\u003erequirements.txt\u003c/code\u003e里列出的各项依赖。\u003c/p\u003e\n\u003cfigure class=\"highlight plain\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e$ python -m pip install -r requirements.txt\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003ch2 id=\"从HTML中找到相应的标签\"\u003e\u003ca href=\"#从HTML中找到相应的标签\" class=\"headerlink\" title=\"从HTML中找到相应的标签\"\u003e\u003c/a\u003e从HTML中找到相应的标签\u003c/h2\u003e\u003cp\u003e首先，你要知道从哪里找到需要的信息。在本例中，我打算获取用户向Github某个特定组织的提交记录，打开用户自己Github页面，滚动如下图所示的地方。\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"https://public-tuchuang.oss-cn-hangzhou.aliyuncs.com/contributions-without-more_20200423103219.png\" alt=\"\"/\u003e\u003c/p\u003e\n\u003cp\u003e在你的浏览器上用开发和工具，打开HTML源码，并且找到对应的元素。点击某个组织，对应着看到相应源码，在\u003ccode\u003e\u0026lt;a\u0026gt;\u003c/code\u003e标签内的\u003ccode\u003e\u0026lt;nav\u0026gt;\u003c/code\u003e元素中的就是组织名称。\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"https://public-tuchuang.oss-cn-hangzhou.aliyuncs.com/devtools-nav_20200423103249.png\" alt=\"\"/\u003e\u003c/p\u003e\n\u003cp\u003e我们感兴趣的就在\u003ccode\u003e\u0026lt;nav\u0026gt;\u003c/code\u003e元素里面，所以，要把这个元素的class记录下来，以备后用。\u003c/p\u003e\n\u003cfigure class=\"highlight plain\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003eorgs_nav_classes = \u0026#34;subnav mb-2 d-flex flex-wrap\u0026#34;\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e你可能注意到，我忽略了其他的组织名称，后面会演示，那些组织都包含在了我们提取的信息中了。另外，我们使用这个页面上抓取数据，因为HTML代码更可靠，所有的\u003ccode\u003eorgs_nav_classes\u003c/code\u003e值都一样。\u003c/p\u003e\n\u003cp\u003e在工作目录中，创建\u003ccode\u003escrape_github_orgs.py\u003c/code\u003e文件，其代码如下：\u003c/p\u003e\n\u003cfigure class=\"highlight plain\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e8\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e9\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e10\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e11\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e12\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e13\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e14\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e15\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e16\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e17\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e18\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e19\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e20\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e# scrape_github_orgs.py\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eimport requests\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003efrom bs4 import BeautifulSoup\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003efrom bs4.element import ResultSet\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eorgs_nav_classes = \u0026#34;subnav mb-2 d-flex flex-wrap\u0026#34;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003edef get_user_org_hyperlinks(username: str) -\u0026gt; ResultSet:\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    url = f\u0026#34;https://github.com/users/{username}/contributions\u0026#34;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    page = requests.get(url)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    soup = BeautifulSoup(page.content, \u0026#34;html.parser\u0026#34;)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    nav = soup.find(\u0026#34;nav\u0026#34;, class_=orgs_nav_classes)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    tmp_orgs = nav.find_all(\u0026#34;a\u0026#34;)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    return tmp_orgs\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eprint(get_user_org_hyperlinks(\u0026#34;DahlitzFlorian\u0026#34;))\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e首先，引入需要的\u003ccode\u003erequests\u003c/code\u003e库，还有\u003ccode\u003ebs4\u003c/code\u003e中的\u003ccode\u003eBeautifulSoup\u003c/code\u003e。然后，定义函数\u003ccode\u003eget_user_org_hyperlinks()\u003c/code\u003e，它的参数是\u003ccode\u003eusername\u003c/code\u003e，返回元素\u003ccode\u003e\u0026lt;nav\u0026gt;\u003c/code\u003e的值是 \u003ccode\u003eorgs_nav_classes\u003c/code\u003e的所有内容。最后一行，调用\u003ccode\u003eget_user_org_hyperlinks()\u003c/code\u003e函数，并且把结果打印出来。\u003c/p\u003e\n\u003cp\u003e执行脚本，得到如下信息：\u003c/p\u003e\n\u003cfigure class=\"highlight plain\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e8\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e9\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e10\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e11\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e12\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e13\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e14\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e$ python scrape-github-orgs.py\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e[\u0026lt;a class=\u0026#34;js-org-filter-link f6 py-1 pr-2 pl-1 rounded-1 mr-2 mb-2 subnav-item css-truncate css-truncate-target\u0026#34; data-hovercard-type=\u0026#34;organization\u0026#34; data-hovercard-url=\u0026#34;/orgs/python/hovercard\u0026#34; data-hydro-click=\u0026#39;{\u0026#34;event_type\u0026#34;:\u0026#34;user_profile.highlights_click\u0026#34;,\u0026#34;payload\u0026#34;:{\u0026#34;scoped_org_id\u0026#34;:null,\u0026#34;target_type\u0026#34;:\u0026#34;ORGANIZATION\u0026#34;,\u0026#34;target_url\u0026#34;:\u0026#34;/DahlitzFlorian?tab=overview\u0026amp;org=python\u0026#34;,\u0026#34;originating_url\u0026#34;:\u0026#34;https://github.com/users/DahlitzFlorian/contributions\u0026#34;,\u0026#34;user_id\u0026#34;:null}}\u0026#39; data-hydro-click-hmac=\u0026#34;3663f0f1c5ecdf3ad7c4ccbf2ecaea5470a15408175ebcb137f286fd900fc30b\u0026#34; href=\u0026#34;/DahlitzFlorian?tab=overview\u0026amp;org=python\u0026#34; style=\u0026#34;max-width: 181px;\u0026#34;\u0026gt;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026lt;img alt=\u0026#34;\u0026#34; class=\u0026#34;avatar mr-1\u0026#34; height=\u0026#34;20\u0026#34; src=\u0026#34;https://avatars1.githubusercontent.com/u/1525981?s=60\u0026amp;v=4\u0026#34; width=\u0026#34;20\u0026#34;/\u0026gt;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e          @python\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026lt;/a\u0026gt;, \u0026lt;a class=\u0026#34;js-org-filter-link f6 py-1 pr-2 pl-1 rounded-1 mr-2 mb-2 subnav-item css-truncate css-truncate-target\u0026#34; data-hovercard-type=\u0026#34;organization\u0026#34; data-hovercard-url=\u0026#34;/orgs/deadsnakes/hovercard\u0026#34; data-hydro-click=\u0026#39;{\u0026#34;event_type\u0026#34;:\u0026#34;user_profile.highlights_click\u0026#34;,\u0026#34;payload\u0026#34;:{\u0026#34;scoped_org_id\u0026#34;:null,\u0026#34;target_type\u0026#34;:\u0026#34;ORGANIZATION\u0026#34;,\u0026#34;target_url\u0026#34;:\u0026#34;/DahlitzFlorian?tab=overview\u0026amp;org=deadsnakes\u0026#34;,\u0026#34;originating_url\u0026#34;:\u0026#34;https://github.com/users/DahlitzFlorian/contributions\u0026#34;,\u0026#34;user_id\u0026#34;:null}}\u0026#39; data-hydro-click-hmac=\u0026#34;2e0501a07d2125d7a4baad8faa6ad0c122f0f666c517db46acaed474cc87689b\u0026#34; href=\u0026#34;/DahlitzFlorian?tab=overview\u0026amp;org=deadsnakes\u0026#34; style=\u0026#34;max-width: 181px;\u0026#34;\u0026gt;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026lt;img alt=\u0026#34;\u0026#34; class=\u0026#34;avatar mr-1\u0026#34; height=\u0026#34;20\u0026#34; src=\u0026#34;https://avatars3.githubusercontent.com/u/31392125?s=60\u0026amp;v=4\u0026#34; width=\u0026#34;20\u0026#34;/\u0026gt;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e          @deadsnakes\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026lt;/a\u0026gt;, \u0026lt;a class=\u0026#34;js-org-filter-link f6 py-1 pr-2 pl-1 rounded-1 mr-2 mb-2 subnav-item css-truncate css-truncate-target\u0026#34; data-hovercard-type=\u0026#34;organization\u0026#34; data-hovercard-url=\u0026#34;/orgs/realpython/hovercard\u0026#34; data-hydro-click=\u0026#39;{\u0026#34;event_type\u0026#34;:\u0026#34;user_profile.highlights_click\u0026#34;,\u0026#34;payload\u0026#34;:{\u0026#34;scoped_org_id\u0026#34;:null,\u0026#34;target_type\u0026#34;:\u0026#34;ORGANIZATION\u0026#34;,\u0026#34;target_url\u0026#34;:\u0026#34;/DahlitzFlorian?tab=overview\u0026amp;org=realpython\u0026#34;,\u0026#34;originating_url\u0026#34;:\u0026#34;https://github.com/users/DahlitzFlorian/contributions\u0026#34;,\u0026#34;user_id\u0026#34;:null}}\u0026#39; data-hydro-click-hmac=\u0026#34;7d9cf37efc7d25bf36c85a17b01f15138f6261575347d3f139283056adce6043\u0026#34; href=\u0026#34;/DahlitzFlorian?tab=overview\u0026amp;org=realpython\u0026#34; style=\u0026#34;max-width: 181px;\u0026#34;\u0026gt;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026lt;img alt=\u0026#34;\u0026#34; class=\u0026#34;avatar mr-1\u0026#34; height=\u0026#34;20\u0026#34; src=\u0026#34;https://avatars1.githubusercontent.com/u/5448020?s=60\u0026amp;v=4\u0026#34; width=\u0026#34;20\u0026#34;/\u0026gt;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e          @realpython\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026lt;/a\u0026gt;, \u0026lt;a class=\u0026#34;d-block select-menu-item wb-break-all js-org-filter-link\u0026#34; data-hydro-click=\u0026#39;{\u0026#34;event_type\u0026#34;:\u0026#34;user_profile.highlights_click\u0026#34;,\u0026#34;payload\u0026#34;:{\u0026#34;scoped_org_id\u0026#34;:null,\u0026#34;target_type\u0026#34;:\u0026#34;ORGANIZATION\u0026#34;,\u0026#34;target_url\u0026#34;:\u0026#34;/DahlitzFlorian?tab=overview\u0026amp;org=PyCQA\u0026#34;,\u0026#34;originating_url\u0026#34;:\u0026#34;https://github.com/users/DahlitzFlorian/contributions\u0026#34;,\u0026#34;user_id\u0026#34;:null}}\u0026#39; data-hydro-click-hmac=\u0026#34;2080f6ec3d42f9ac04eabafad7c72805d26acb10c822037397fd5bd1dafd5da0\u0026#34; href=\u0026#34;/DahlitzFlorian?tab=overview\u0026amp;org=PyCQA\u0026#34; role=\u0026#34;menuitem\u0026#34; style=\u0026#34;padding: 8px 8px 8px 30px;\u0026#34;\u0026gt;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026lt;img alt=\u0026#34;\u0026#34; class=\u0026#34;select-menu-item-icon mr-2\u0026#34; height=\u0026#34;20\u0026#34; src=\u0026#34;https://avatars1.githubusercontent.com/u/8749848?s=60\u0026amp;v=4\u0026#34; width=\u0026#34;20\u0026#34;/\u0026gt;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026lt;div class=\u0026#34;select-menu-item-text css-truncate css-truncate-target\u0026#34; style=\u0026#34;max-width: 95%;\u0026#34;\u0026gt;@PyCQA\u0026lt;/div\u0026gt;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026lt;/a\u0026gt;]\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e下面进入信息提取阶段。\u003c/p\u003e\n\u003ch2 id=\"提取必要的信息\"\u003e\u003ca href=\"#提取必要的信息\" class=\"headerlink\" title=\"提取必要的信息\"\u003e\u003c/a\u003e提取必要的信息\u003c/h2\u003e\u003cp\u003e记住，我们想获得某个用户提交代码的Github上的组织名称，已经得到了包含组织名称的超链接，然而，其中有很多我们不需要的样式类和属性，接下来就要清除它们，利用\u003ccode\u003elxm\u003c/code\u003e包（\u003ccode\u003elxml.html.clean.Cleaner\u003c/code\u003e）中的\u003ccode\u003eCleaner()\u003c/code\u003e实现这个操作。首先，移除比必要的属性，为此创建一个\u003ccode\u003eCleaner\u003c/code\u003e的实例，然后设置实例属性\u003ccode\u003esafe_attrs_only=True\u003c/code\u003e的值为\u003ccode\u003eTrue\u003c/code\u003e，与其关联的属性\u003ccode\u003esafe_attrs\u003c/code\u003e，利用\u003ccode\u003efrozenset\u003c/code\u003e创建一个不可变对象，并作为此属性的值。\u003c/p\u003e\n\u003cfigure class=\"highlight plain\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003efrom lxml.html import clean\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003ecleaner = clean.Cleaner()\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003ecleaner.safe_attrs_only = True\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003ecleaner.safe_attrs = frozenset([\u0026#34;class\u0026#34;, \u0026#34;src\u0026#34;, \u0026#34;href\u0026#34;, \u0026#34;target\u0026#34;])\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e上面的三行代码定义了\u003ccode\u003ecleaner\u003c/code\u003e对象，但是还没有对HTML采取行动，这要留作后用。接下来，我们要编写一个匹配所有HTML标签的正则表达式，因此要使用Python的\u003ccode\u003ere\u003c/code\u003e模块。\u003c/p\u003e\n\u003cfigure class=\"highlight plain\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003eimport re\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003ehtml_tags = re.compile(\u0026#34;\u0026lt;.*?\u0026gt;\u0026#34;)\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e最后，开始按照我们的需要实施清除操作。\u003c/p\u003e\n\u003cfigure class=\"highlight plain\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e8\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e9\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003eorgs = []\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003efor org in tmp_orgs:\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    tmp_org = str(org)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    org_name = re.sub(\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        html_tags,\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        \u0026#34;\u0026#34;,\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        re.search(r\u0026#34;\u0026lt;a(.*)@(.*)\u0026lt;/a\u0026gt;\u0026#34;, tmp_org, flags=re.DOTALL).group(2).strip(),\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    )\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e\u003ccode\u003eorgs\u003c/code\u003e是一个列表，把我们打算在网站上呈现的Github组织的超链接放到它里面，每次循环到我们抓取到的超链接，就会将其增加到列表中，上面的代码片段，就是把每个组织的超链接追加到列表中。我们需要的是字符串，不是\u003ccode\u003ebs4\u003c/code\u003e原酸，要将每个超链接转化为字符串，并且用变量\u003ccode\u003etemp_org\u003c/code\u003e引用。然后，用\u003ccode\u003ere\u003c/code\u003e的\u003ccode\u003esub()\u003c/code\u003e函数从超链接中提取组织的名称。\u003c/p\u003e\n\u003cp\u003e现在，得到了所有组织的名称。太棒了！让我们再按照我们的网站能用的格式获得超链接，利用\u003ccode\u003elxml.html.fromstring()\u003c/code\u003e函数，将\u003ccode\u003etemp_org\u003c/code\u003e的超链接转化为\u003ccode\u003elxml\u003c/code\u003e中的树。\u003c/p\u003e\n\u003cfigure class=\"highlight plain\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e8\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e9\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e10\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e11\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003eimport lxml\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003efrom lxml import etree\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003etree = lxml.html.fromstring(tmp_org)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003etree.attrib[\u0026#34;href\u0026#34;] = f\u0026#34;https://github.com/{org_name}\u0026#34;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003etree.attrib[\u0026#34;class\u0026#34;] = \u0026#34;org\u0026#34;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003etree.set(\u0026#34;target\u0026#34;, \u0026#34;_blank\u0026#34;)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eetree.strip_tags(tree, \u0026#34;div\u0026#34;)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003ecleaned = cleaner.clean_html(tree)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eorgs.append(lxml.html.tostring(cleaned).decode(\u0026#34;utf-8\u0026#34;))\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e每个组织的地址都符合\u003ccode\u003ehttps://github.com/org_name\u003c/code\u003e格式，\u003ccode\u003eorg_name\u003c/code\u003e就是组织名称，用\u003ccode\u003eattrib\u003c/code\u003e属性，把这个链接地址作为树状结构的元素。为了便于后续页面风格的设计，我们增加了一个\u003ccode\u003eCSS\u003c/code\u003e，相应名称为\u003ccode\u003eorg\u003c/code\u003e。当点击超链接的时候，我想在浏览器中打开一个新的tab，于是设置了\u003ccode\u003etarget=\u0026#39;blank\u0026#39;\u003c/code\u003e。\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003eetree.strip_tags(tree, \u0026#34;div\u0026#34;)\u003c/code\u003e能够从树状结构中删除\u003ccode\u003e\u0026lt;div\u0026gt;\u003c/code\u003e元素，这是很有必要的，因为组织名称常常在\u003ccode\u003e\u0026lt;div\u0026gt;\u003c/code\u003e标签包括的超链接中，不需要这些标签，所以要删除。还要做下面两步：第一，利用\u003ccode\u003ecleaner\u003c/code\u003e删除所有不必要的\u003ccode\u003e\u0026lt;a\u0026gt;\u003c/code\u003e标签元素；第二，利用\u003ccode\u003elxml.html.tostring()\u003c/code\u003e把树状结构的元素转化为字符串，然后追加到\u003ccode\u003eorgs\u003c/code\u003e列表中（我们使用的是UTF-8编码）。\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"https://public-tuchuang.oss-cn-hangzhou.aliyuncs.com/my_book4_20200116132005.png\" alt=\"\"/\u003e\u003c/p\u003e\n\u003cp\u003e把上面的过程写成函数：\u003c/p\u003e\n\u003cfigure class=\"highlight plain\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e8\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e9\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e10\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e11\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e12\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e13\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e14\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e15\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e16\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e17\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e18\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e19\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e20\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e21\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e22\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e23\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e24\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e25\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e26\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e27\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e28\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e29\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e30\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e31\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e32\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e33\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e34\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e35\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003eimport re\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003efrom typing import List\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eimport lxml\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003efrom bs4.element import ResultSet\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003efrom lxml import etree\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003efrom lxml.html import clean\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003edef extract_orgs(tmp_orgs: ResultSet) -\u0026gt; List[str]:\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    cleaner = clean.Cleaner()\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    cleaner.safe_attrs_only = True\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    cleaner.safe_attrs = frozenset([\u0026#34;class\u0026#34;, \u0026#34;src\u0026#34;, \u0026#34;href\u0026#34;, \u0026#34;target\u0026#34;])\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    html_tags = re.compile(\u0026#34;\u0026lt;.*?\u0026gt;\u0026#34;)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    orgs = []\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    for org in tmp_orgs:\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        tmp_org = str(org)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        org_name = re.sub(\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e            html_tags,\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e            \u0026#34;\u0026#34;,\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e            re.search(r\u0026#34;\u0026lt;a(.*)@(.*)\u0026lt;/a\u0026gt;\u0026#34;, tmp_org, flags=re.DOTALL).group(2).strip(),\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        )\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        tree = lxml.html.fromstring(tmp_org)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        tree.attrib[\u0026#34;href\u0026#34;] = f\u0026#34;https://github.com/{org_name}\u0026#34;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        tree.attrib[\u0026#34;class\u0026#34;] = \u0026#34;org\u0026#34;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        tree.set(\u0026#34;target\u0026#34;, \u0026#34;_blank\u0026#34;)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        etree.strip_tags(tree, \u0026#34;div\u0026#34;)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        cleaned = cleaner.clean_html(tree)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        orgs.append(lxml.html.tostring(cleaned).decode(\u0026#34;utf-8\u0026#34;))\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    return orgs\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e然后，将抓取和提取两个阶段写成一个函数：\u003c/p\u003e\n\u003cfigure class=\"highlight plain\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003edef get_user_orgs(username: str) -\u0026gt; List[str]:\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    tmp_orgs = get_user_org_hyperlinks(username)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    return extract_orgs(tmp_orgs)\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e最后看看我们辛苦工作的结果，在脚本的末尾把最终结果打印出来。下面是最终的代码：\u003c/p\u003e\n\u003cfigure class=\"highlight plain\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e8\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e9\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e10\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e11\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e12\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e13\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e14\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e15\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e16\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e17\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e18\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e19\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e20\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e21\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e22\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e23\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e24\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e25\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e26\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e27\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e28\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e29\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e30\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e31\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e32\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e33\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e34\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e35\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e36\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e37\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e38\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e39\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e40\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e41\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e42\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e43\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e44\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e45\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e46\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e47\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e48\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e49\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e50\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e51\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e52\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e53\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e54\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e55\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e56\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e57\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e# scrape_github_orgs.py\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eimport re\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003efrom typing import List\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eimport lxml\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eimport requests\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003efrom bs4 import BeautifulSoup\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003efrom bs4.element import ResultSet\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003efrom lxml import etree\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003efrom lxml.html import clean\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eorgs_nav_classes = \u0026#34;subnav mb-2 d-flex flex-wrap\u0026#34;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003edef get_user_org_hyperlinks(username: str) -\u0026gt; ResultSet:\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    url = f\u0026#34;https://github.com/users/{username}/contributions\u0026#34;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    page = requests.get(url)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    soup = BeautifulSoup(page.content, \u0026#34;html.parser\u0026#34;)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    nav = soup.find(\u0026#34;nav\u0026#34;, class_=orgs_nav_classes)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    tmp_orgs = nav.find_all(\u0026#34;a\u0026#34;)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    return tmp_orgs\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003edef extract_orgs(tmp_orgs: ResultSet) -\u0026gt; List[str]:\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    cleaner = clean.Cleaner()\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    cleaner.safe_attrs_only = True\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    cleaner.safe_attrs = frozenset([\u0026#34;class\u0026#34;, \u0026#34;src\u0026#34;, \u0026#34;href\u0026#34;, \u0026#34;target\u0026#34;])\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    html_tags = re.compile(\u0026#34;\u0026lt;.*?\u0026gt;\u0026#34;)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    orgs = []\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    for org in tmp_orgs:\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        tmp_org = str(org)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        org_name = re.sub(\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e            html_tags,\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e            \u0026#34;\u0026#34;,\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e            re.search(r\u0026#34;\u0026lt;a(.*)@(.*)\u0026lt;/a\u0026gt;\u0026#34;, tmp_org, flags=re.DOTALL).group(2).strip(),\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        )\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        tree = lxml.html.fromstring(tmp_org)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        tree.attrib[\u0026#34;href\u0026#34;] = f\u0026#34;https://github.com/{org_name}\u0026#34;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        tree.attrib[\u0026#34;class\u0026#34;] = \u0026#34;org\u0026#34;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        tree.set(\u0026#34;target\u0026#34;, \u0026#34;_blank\u0026#34;)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        etree.strip_tags(tree, \u0026#34;div\u0026#34;)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        cleaned = cleaner.clean_html(tree)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        orgs.append(lxml.html.tostring(cleaned).decode(\u0026#34;utf-8\u0026#34;))\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    return orgs\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003edef get_user_orgs(username: str) -\u0026gt; List[str]:\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    tmp_orgs = get_user_org_hyperlinks(username)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    return extract_orgs(tmp_orgs)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eprint(get_user_orgs(\u0026#34;DahlitzFlorian\u0026#34;))\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e执行脚本之后的输出：\u003c/p\u003e\n\u003cfigure class=\"highlight plain\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e$ python scrape_github_orgs.py\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e[\u0026#39;\u0026lt;a class=\u0026#34;org\u0026#34; href=\u0026#34;https://github.com/python\u0026#34; target=\u0026#34;_blank\u0026#34;\u0026gt;\\n\u0026lt;img class=\u0026#34;avatar mr-1\u0026#34; src=\u0026#34;https://avatars1.githubusercontent.com/u/1525981?s=60\u0026amp;v=4\u0026#34;\u0026gt;\\n          @python\\n\u0026lt;/a\u0026gt;\u0026#39;, \u0026#39;\u0026lt;a class=\u0026#34;org\u0026#34; href=\u0026#34;https://github.com/deadsnakes\u0026#34; target=\u0026#34;_blank\u0026#34;\u0026gt;\\n\u0026lt;img class=\u0026#34;avatar mr-1\u0026#34; src=\u0026#34;https://avatars3.githubusercontent.com/u/31392125?s=60\u0026amp;v=4\u0026#34;\u0026gt;\\n          @deadsnakes\\n\u0026lt;/a\u0026gt;\u0026#39;, \u0026#39;\u0026lt;a class=\u0026#34;org\u0026#34; href=\u0026#34;https://github.com/realpython\u0026#34; target=\u0026#34;_blank\u0026#34;\u0026gt;\\n\u0026lt;img class=\u0026#34;avatar mr-1\u0026#34; src=\u0026#34;https://avatars1.githubusercontent.com/u/5448020?s=60\u0026amp;v=4\u0026#34;\u0026gt;\\n          @realpython\\n\u0026lt;/a\u0026gt;\u0026#39;, \u0026#39;\u0026lt;a class=\u0026#34;org\u0026#34; href=\u0026#34;https://github.com/PyCQA\u0026#34; target=\u0026#34;_blank\u0026#34;\u0026gt;\\n\u0026lt;img class=\u0026#34;select-menu-item-icon mr-2\u0026#34; src=\u0026#34;https://avatars1.githubusercontent.com/u/8749848?s=60\u0026amp;v=4\u0026#34;\u0026gt;\\n@PyCQA\\n\u0026lt;/a\u0026gt;\u0026#39;]\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e相当满意！抓取到了你贡献代码的Github上的组织，并且提取了所需要的信息，然后把这些内容发布到你的网站上。让我们来看一下，在网站上的显示样式，跟Github上的差不多。\u003c/p\u003e\n\u003ch2 id=\"网站上的显示方式\"\u003e\u003ca href=\"#网站上的显示方式\" class=\"headerlink\" title=\"网站上的显示方式\"\u003e\u003c/a\u003e网站上的显示方式\u003c/h2\u003e\u003cp\u003e这里我们使用Jinjia2渲染前端，用\u003ccode\u003efor\u003c/code\u003e玄幻将\u003ccode\u003eorgs\u003c/code\u003e中的每个元素循环出来。\u003c/p\u003e\n\u003cfigure class=\"highlight plain\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e8\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e9\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e10\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e11\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e12\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e13\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e14\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e15\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u0026lt;!DOCTYPE html\u0026gt;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026lt;head\u0026gt;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u0026lt;title\u0026gt;GitHub Organizations\u0026lt;/title\u0026gt;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u0026lt;link rel=\u0026#34;stylesheet\u0026#34; type=\u0026#34;text/css\u0026#34; href=\u0026#34;/static/css/main.css\u0026#34;\u0026gt;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026lt;/head\u0026gt;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026lt;body\u0026gt;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u0026lt;div class=\u0026#34;orgs\u0026#34;\u0026gt;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        {% for org in orgs %}\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        {{ org | safe }}\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        {% endfor %}\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u0026lt;/div\u0026gt;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026lt;/body\u0026gt;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026lt;/html\u0026gt;\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e我用Flask作为网站框架（\u003ccode\u003epython -m pip install flask==1.1.2\u003c/code\u003e)，可以参考本文在Github上的代码仓库。下面是为网站增加样式表：\u003c/p\u003e\n\u003cfigure class=\"highlight plain\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e8\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e9\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e10\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e11\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e12\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e13\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e14\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e15\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e16\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e17\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e18\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e19\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e20\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e21\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e22\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e23\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e24\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e25\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e26\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e27\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e28\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e29\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003ediv.orgs {\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    display: flex;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    flex-direction: row;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    flex-wrap: wrap;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    align-items: center;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    justify-content: center;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    margin-top: 15px;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e}\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003ea.org {\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    background-color: #fff;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    border: 1px solid #e1e4e8;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    border-radius: 3px;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    padding: 7px;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    margin: 10px;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    color: #586069;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    text-decoration: none;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    display: flex;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    align-items: center;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e}\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003ea.org:hover {\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    background-color: #f6f8fa;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e}\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003ea.org \u0026gt; img {\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    margin-right: 5px;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    max-height: 25px;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e}\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e把网站跑起来之后，就呈现下面的效果：\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"https://public-tuchuang.oss-cn-hangzhou.aliyuncs.com/result_20200423103410.png\" alt=\"\"/\u003e\u003c/p\u003e\n\u003ch2 id=\"总结\"\u003e\u003ca href=\"#总结\" class=\"headerlink\" title=\"总结\"\u003e\u003c/a\u003e总结\u003c/h2\u003e\u003cp\u003e在本文中，我们学习了从网站上抓取内容的方法，并且从中提取你需要的信息，然后将这些内容根据要求显示在网页上。这是一个爬虫示例，并且用Jinja2模板展示结果。\u003c/p\u003e\n\u003cp\u003e希望能对你有用。在本公众号还有很多爬虫公开课，在公众号中回复：\u003cstrong\u003e老齐\u003c/strong\u003e，可以找到公开课列表。\u003c/p\u003e\n\u003cp\u003e原文链接：\u003ca href=\"https://florian-dahlitz.de/blog/scrape-github-orgs-using-python\" target=\"_blank\" rel=\"noopener\"\u003ehttps://florian-dahlitz.de/blog/scrape-github-orgs-using-python\u003c/a\u003e\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e搜索技术问答的公众号：老齐教室\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cblockquote\u003e\n\u003cp\u003e在公众号中回复：\u003cstrong\u003e老齐\u003c/strong\u003e，可查看所有文章、书籍、课程。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp style=\"text-align:right\"\u003e\u003cstrong style=\"max-width: 100%;color: rgb(255, 255, 255);background-color: rgb(234, 6, 13);box-sizing: border-box !important;overflow-wrap: break-word !important;\"\u003e觉得好看，就点这里👇👇👇\u003c/strong\u003e\u003c/p\u003e\u003c/section\u003e\n    \u003c!-- Tags START --\u003e\n    \n    \u003c!-- Tags END --\u003e\n    \u003c!-- NAV START --\u003e\n    \n  \u003cdiv class=\"nav-container\"\u003e\n    \u003c!-- reverse left and right to put prev and next in a more logic postition --\u003e\n    \n      \u003ca class=\"nav-left\" href=\"/2020/04/22/web-stack-first/\"\u003e\n        \u003cspan class=\"nav-arrow\"\u003e← \u003c/span\u003e\n        \n          剖析Web技术栈（一）\n        \n      \u003c/a\u003e\n    \n    \n      \u003ca class=\"nav-right\" href=\"/2020/04/25/about-official-account/\"\u003e\n        \n          关于【老齐教室】\n        \n        \u003cspan class=\"nav-arrow\"\u003e →\u003c/span\u003e\n      \u003c/a\u003e\n    \n  \u003c/div\u003e\n\n    \u003c!-- NAV END --\u003e\n    \u003c!-- 打赏 START --\u003e\n    \n      \u003cdiv class=\"money-like\"\u003e\n        \u003cdiv class=\"reward-btn\"\u003e\n          赏\n          \u003cspan class=\"money-code\"\u003e\n            \u003cspan class=\"alipay-code\"\u003e\n              \u003cdiv class=\"code-image\"\u003e\u003c/div\u003e\n              \u003cb\u003e使用支付宝打赏\u003c/b\u003e\n            \u003c/span\u003e\n            \u003cspan class=\"wechat-code\"\u003e\n              \u003cdiv class=\"code-image\"\u003e\u003c/div\u003e\n              \u003cb\u003e使用微信打赏\u003c/b\u003e\n            \u003c/span\u003e\n          \u003c/span\u003e\n        \u003c/div\u003e\n        \u003cp class=\"notice\"\u003e若你觉得我的文章对你有帮助，欢迎点击上方按钮对我打赏\u003c/p\u003e\n      \u003c/div\u003e\n    \n    \u003c!-- 打赏 END --\u003e\n    \u003c!-- 二维码 START --\u003e\n    \u003c!--% if (theme.qrcode) { %--\u003e\n      \u003cdiv class=\"qrcode\"\u003e\n        \u003c!--canvas id=\"share-qrcode\"\u003e\u003c/!--canvas--\u003e\n        \u003cimg src=\"https://public-tuchuang.oss-cn-hangzhou.aliyuncs.com/WechatIMG6_20200109154827.jpeg\" width=\"400\"/\u003e\n        \u003cp class=\"notice\"\u003e关注微信公众号，读文章、听课程，提升技能\u003c/p\u003e\n      \u003c/div\u003e\n    \u003c!--% } %--\u003e\n    \u003c!-- 二维码 END --\u003e\n    \n      \u003c!-- No Comment --\u003e\n    \n  \u003c/article\u003e",
  "Date": "2020-04-24T00:00:00Z",
  "Author": "老齐教室"
}