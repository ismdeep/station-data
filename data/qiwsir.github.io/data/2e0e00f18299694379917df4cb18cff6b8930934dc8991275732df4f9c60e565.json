{
  "Source": "qiwsir.github.io",
  "Title": "Python中的4个Lambda函数示例",
  "Link": "https://qiwsir.github.io/2020/06/01/lambda-in-python/",
  "Content": "\u003carticle class=\"post-article\"\u003e\n    \u003ch2\u003ePython中的4个Lambda函数示例\u003c/h2\u003e\n    \u003cp class=\"post-date\"\u003e2020-06-01\u003c/p\u003e\n    \u003csection class=\"markdown-content\"\u003e\u003cp\u003e作者：Yong Cui, Ph.D.\u003c/p\u003e\n\u003cp\u003e翻译：老齐\u003c/p\u003e\n\u003cp\u003e与本文相关的图书推荐：\u003cstrong\u003e《跟老齐学Python：轻松入门》\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"https://public-tuchuang.oss-cn-hangzhou.aliyuncs.com/%E8%BD%BB%E6%9D%BE%E5%85%A5%E9%97%A8_20200122130623.png\" alt=\"\"/\u003e\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003e说明：\u003c/strong\u003e 本书是针对零基础学习者的入门读物，书中以深入浅出的方式介绍了Python语言的相关知识。书中代码使用Python3，并且在本公众号有相关的资源推荐和勘误修订，详情请关注本公众号（【老齐教室】）之后，在菜单中查看。\u003c/p\u003e\n\u003chr/\u003e\n\u003cp\u003e不是所有Python开发者都喜欢Lambda函数，我也对它有着比较复杂的感觉，特别是对初学者而言，它不像我们使用的普通函数那么直观，然而对于一些有丰富开发经验的程序员，他们喜欢在必要时使用它。暂且把这些分歧搁置，然我们来了解一下Lambda函数到底是什么。\u003c/p\u003e\n\u003cp\u003eLambda函数式Python里的匿名函数，有时候提到匿名函数，就是指Lambda函数，其基本语法是：\u003ccode\u003elambda parameters: expression\u003c/code\u003e。这里用\u003ccode\u003elambda\u003c/code\u003e关键词标记我们要定义一个Lambda函数，然后是参数列表，参数的个数可以是0个，或者多个。后面是冒号（英文状态下），然后就是Lambda函数中的表达式。\u003c/p\u003e\n\u003cfigure class=\"highlight python\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e8\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e9\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e10\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e\u0026gt;\u0026gt;\u0026gt; \u003c/span\u003e\u003cspan class=\"comment\"\u003e# 创建Lambda函数 \u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e\u0026gt;\u0026gt;\u0026gt; \u003c/span\u003etriple = \u003cspan class=\"keyword\"\u003elambda\u003c/span\u003e x: x*\u003cspan class=\"number\"\u003e3\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e\u0026gt;\u0026gt;\u0026gt; \u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e\u0026gt;\u0026gt;\u0026gt; \u003c/span\u003e\u003cspan class=\"comment\"\u003e# 查看类型\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e\u0026gt;\u0026gt;\u0026gt; \u003c/span\u003etype(triple)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026lt;\u003cspan class=\"class\"\u003e\u003cspan class=\"keyword\"\u003eclass\u003c/span\u003e \u0026#39;\u003cspan class=\"title\"\u003efunction\u003c/span\u003e\u0026#39;\u0026gt;\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"class\"\u003e\u0026gt;\u0026gt;\u0026gt; \u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"class\"\u003e\u0026gt;\u0026gt;\u0026gt; # 调用函数\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"class\"\u003e\u0026gt;\u0026gt;\u0026gt; \u003cspan class=\"title\"\u003etriple\u003c/span\u003e\u003cspan class=\"params\"\u003e(\u003cspan class=\"number\"\u003e5\u003c/span\u003e)\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"class\"\u003e15\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e在上面的代码中，我们创建了一个Lambada函数，并且用变量\u003ccode\u003etriple\u003c/code\u003e引用，而检查它的类型，我们发现Lambda函数本质也是一种函数。若要使用这个函数，跟我们使用其他函数一样来调用它，调用的时候也是要在括号中根据参数列表的参数提供相应的值。\u003c/p\u003e\n\u003cp\u003e需要注意的是，在编程实践中，一般不会将Lambda函数赋给一个变量，在很多程序员眼里，将Lambda函数用在赋值语句中是一种滥用Lambda函数的行为，这点请特别注意。下面的代码中会给大家演示如何正确地使用Lambda函数。\u003c/p\u003e\n\u003ch2 id=\"No-1-对序列排序\"\u003e\u003ca href=\"#No-1-对序列排序\" class=\"headerlink\" title=\"No 1. 对序列排序\"\u003e\u003c/a\u003eNo 1. 对序列排序\u003c/h2\u003e\u003cp\u003eLambda函数的第一应用场景就是用于内置函数\u003ccode\u003esorted()\u003c/code\u003e中，用于对序列类型的数据进行排序。如果你熟悉了列表对象的方法，你应该知道它有一个类似的方法\u003ccode\u003esort()\u003c/code\u003e，通过它能够实现对列表对象的原地排序。在本微信公众号【老齐教室】中已经发布的文章\u003ca href=\"https://itdiffer.com/2020/05/26/built-in-funtions-for-loop/\" target=\"_blank\" rel=\"noopener\"\u003e《用4个简单的函数提升for循环》\u003c/a\u003e中对此有详细说明，在文中也说明了\u003ccode\u003esorted()\u003c/code\u003e函数的使用方法和场景。\u003c/p\u003e\n\u003cfigure class=\"highlight python\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e8\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e9\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e10\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e11\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e12\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e\u0026gt;\u0026gt;\u0026gt; \u003c/span\u003e\u003cspan class=\"comment\"\u003e# 创建序列\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e\u0026gt;\u0026gt;\u0026gt; \u003c/span\u003egrades = [{\u003cspan class=\"string\"\u003e\u0026#39;name\u0026#39;\u003c/span\u003e: \u003cspan class=\"string\"\u003e\u0026#39;Jennifer\u0026#39;\u003c/span\u003e, \u003cspan class=\"string\"\u003e\u0026#39;final\u0026#39;\u003c/span\u003e: \u003cspan class=\"number\"\u003e95\u003c/span\u003e},\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e... \u003c/span\u003e    {\u003cspan class=\"string\"\u003e\u0026#39;name\u0026#39;\u003c/span\u003e: \u003cspan class=\"string\"\u003e\u0026#39;David\u0026#39;\u003c/span\u003e, \u003cspan class=\"string\"\u003e\u0026#39;final\u0026#39;\u003c/span\u003e: \u003cspan class=\"number\"\u003e92\u003c/span\u003e},\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e... \u003c/span\u003e    {\u003cspan class=\"string\"\u003e\u0026#39;name\u0026#39;\u003c/span\u003e: \u003cspan class=\"string\"\u003e\u0026#39;Aaron\u0026#39;\u003c/span\u003e, \u003cspan class=\"string\"\u003e\u0026#39;final\u0026#39;\u003c/span\u003e: \u003cspan class=\"number\"\u003e98\u003c/span\u003e}]\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e\u0026gt;\u0026gt;\u0026gt; \u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e\u0026gt;\u0026gt;\u0026gt; \u003c/span\u003e\u003cspan class=\"comment\"\u003e# 根据 name 排序\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e\u0026gt;\u0026gt;\u0026gt; \u003c/span\u003esorted(grades, key=\u003cspan class=\"keyword\"\u003elambda\u003c/span\u003e x: x[\u003cspan class=\"string\"\u003e\u0026#39;name\u0026#39;\u003c/span\u003e])\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e[{\u003cspan class=\"string\"\u003e\u0026#39;name\u0026#39;\u003c/span\u003e: \u003cspan class=\"string\"\u003e\u0026#39;Aaron\u0026#39;\u003c/span\u003e, \u003cspan class=\"string\"\u003e\u0026#39;final\u0026#39;\u003c/span\u003e: \u003cspan class=\"number\"\u003e98\u003c/span\u003e}, {\u003cspan class=\"string\"\u003e\u0026#39;name\u0026#39;\u003c/span\u003e: \u003cspan class=\"string\"\u003e\u0026#39;David\u0026#39;\u003c/span\u003e, \u003cspan class=\"string\"\u003e\u0026#39;final\u0026#39;\u003c/span\u003e: \u003cspan class=\"number\"\u003e92\u003c/span\u003e}, {\u003cspan class=\"string\"\u003e\u0026#39;name\u0026#39;\u003c/span\u003e: \u003cspan class=\"string\"\u003e\u0026#39;Jennifer\u0026#39;\u003c/span\u003e, \u003cspan class=\"string\"\u003e\u0026#39;final\u0026#39;\u003c/span\u003e: \u003cspan class=\"number\"\u003e95\u003c/span\u003e}]\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e\u0026gt;\u0026gt;\u0026gt; \u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e\u0026gt;\u0026gt;\u0026gt; \u003c/span\u003e\u003cspan class=\"comment\"\u003e# 根据 final 的值降序排序\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e\u0026gt;\u0026gt;\u0026gt; \u003c/span\u003esorted(grades, key=\u003cspan class=\"keyword\"\u003elambda\u003c/span\u003e x: x[\u003cspan class=\"string\"\u003e\u0026#39;final\u0026#39;\u003c/span\u003e], reverse=\u003cspan class=\"literal\"\u003eTrue\u003c/span\u003e)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e[{\u003cspan class=\"string\"\u003e\u0026#39;name\u0026#39;\u003c/span\u003e: \u003cspan class=\"string\"\u003e\u0026#39;Aaron\u0026#39;\u003c/span\u003e, \u003cspan class=\"string\"\u003e\u0026#39;final\u0026#39;\u003c/span\u003e: \u003cspan class=\"number\"\u003e98\u003c/span\u003e}, {\u003cspan class=\"string\"\u003e\u0026#39;name\u0026#39;\u003c/span\u003e: \u003cspan class=\"string\"\u003e\u0026#39;Jennifer\u0026#39;\u003c/span\u003e, \u003cspan class=\"string\"\u003e\u0026#39;final\u0026#39;\u003c/span\u003e: \u003cspan class=\"number\"\u003e95\u003c/span\u003e}, {\u003cspan class=\"string\"\u003e\u0026#39;name\u0026#39;\u003c/span\u003e: \u003cspan class=\"string\"\u003e\u0026#39;David\u0026#39;\u003c/span\u003e, \u003cspan class=\"string\"\u003e\u0026#39;final\u0026#39;\u003c/span\u003e: \u003cspan class=\"number\"\u003e92\u003c/span\u003e}]\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e在上面的代码中，有两处\u003ccode\u003esorted()\u003c/code\u003e函数中的参数\u003ccode\u003ekey\u003c/code\u003e为Lambda函数，都是用于指定列表对象的排序方式。示例中，列表内的元素是字典，如果我们想根据字典的键\u003ccode\u003ename\u003c/code\u003e的值排序，就要在变量的后面的方括号中写明，以它作为\u003ccode\u003ekey\u003c/code\u003e的值。如你所见，在执行了\u003ccode\u003esorted()\u003c/code\u003e函数之后，列表就按照指定的方式排序了。\u003c/p\u003e\n\u003ch2 id=\"No-2-找到最值\"\u003e\u003ca href=\"#No-2-找到最值\" class=\"headerlink\" title=\"No 2. 找到最值\"\u003e\u003c/a\u003eNo 2. 找到最值\u003c/h2\u003e\u003cp\u003e有两个内置函数能够帮助我们找到集合中的最值，\u003ccode\u003emin()\u003c/code\u003e和\u003ccode\u003emax()\u003c/code\u003e，这两个方法的用法一样。但是，很多时候我们操作的对象是可迭代对象，并且需要指定\u003ccode\u003ekey\u003c/code\u003e参数，从而得到相应的最值，这就跟\u003ccode\u003esorted()\u003c/code\u003e类似了。\u003c/p\u003e\n\u003cfigure class=\"highlight python\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e8\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e9\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e10\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e11\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e\u0026gt;\u0026gt;\u0026gt; \u003c/span\u003egrades = [{\u003cspan class=\"string\"\u003e\u0026#39;name\u0026#39;\u003c/span\u003e: \u003cspan class=\"string\"\u003e\u0026#39;Jennifer\u0026#39;\u003c/span\u003e, \u003cspan class=\"string\"\u003e\u0026#39;final\u0026#39;\u003c/span\u003e: \u003cspan class=\"number\"\u003e95\u003c/span\u003e},\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e... \u003c/span\u003e    {\u003cspan class=\"string\"\u003e\u0026#39;name\u0026#39;\u003c/span\u003e: \u003cspan class=\"string\"\u003e\u0026#39;David\u0026#39;\u003c/span\u003e, \u003cspan class=\"string\"\u003e\u0026#39;final\u0026#39;\u003c/span\u003e: \u003cspan class=\"number\"\u003e92\u003c/span\u003e},\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e... \u003c/span\u003e    {\u003cspan class=\"string\"\u003e\u0026#39;name\u0026#39;\u003c/span\u003e: \u003cspan class=\"string\"\u003e\u0026#39;Aaron\u0026#39;\u003c/span\u003e, \u003cspan class=\"string\"\u003e\u0026#39;final\u0026#39;\u003c/span\u003e: \u003cspan class=\"number\"\u003e98\u003c/span\u003e}]\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e\u0026gt;\u0026gt;\u0026gt; \u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e\u0026gt;\u0026gt;\u0026gt; \u003c/span\u003e\u003cspan class=\"comment\"\u003e# final的最大值\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e\u0026gt;\u0026gt;\u0026gt; \u003c/span\u003emax(grades, key=\u003cspan class=\"keyword\"\u003elambda\u003c/span\u003e x: x[\u003cspan class=\"string\"\u003e\u0026#39;final\u0026#39;\u003c/span\u003e])\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e{\u003cspan class=\"string\"\u003e\u0026#39;name\u0026#39;\u003c/span\u003e: \u003cspan class=\"string\"\u003e\u0026#39;Aaron\u0026#39;\u003c/span\u003e, \u003cspan class=\"string\"\u003e\u0026#39;final\u0026#39;\u003c/span\u003e: \u003cspan class=\"number\"\u003e98\u003c/span\u003e}\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e\u0026gt;\u0026gt;\u0026gt; \u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e\u0026gt;\u0026gt;\u0026gt; \u003c/span\u003e\u003cspan class=\"comment\"\u003e# final的最小值\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e\u0026gt;\u0026gt;\u0026gt; \u003c/span\u003emin(grades, key=\u003cspan class=\"keyword\"\u003elambda\u003c/span\u003e x: x[\u003cspan class=\"string\"\u003e\u0026#39;final\u0026#39;\u003c/span\u003e])\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e{\u003cspan class=\"string\"\u003e\u0026#39;name\u0026#39;\u003c/span\u003e: \u003cspan class=\"string\"\u003e\u0026#39;David\u0026#39;\u003c/span\u003e, \u003cspan class=\"string\"\u003e\u0026#39;final\u0026#39;\u003c/span\u003e: \u003cspan class=\"number\"\u003e92\u003c/span\u003e}\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e上面的示例中，\u003ccode\u003emax()\u003c/code\u003e函数中的参数\u003ccode\u003ekey\u003c/code\u003e的值用\u003ccode\u003elambda x: x[\u0026#39;final\u0026#39;]\u003c/code\u003e获得，从而找到了数据中\u003ccode\u003efinal\u003c/code\u003e最高分数的学生。类似地，\u003ccode\u003emin()\u003c/code\u003e函数的用法同上。\u003c/p\u003e\n\u003ch2 id=\"No-3-作为工厂函数\"\u003e\u003ca href=\"#No-3-作为工厂函数\" class=\"headerlink\" title=\"No 3. 作为工厂函数\"\u003e\u003c/a\u003eNo 3. 作为工厂函数\u003c/h2\u003e\u003cp\u003e很多人都知道Python中内置的字典类型\u003ccode\u003edict\u003c/code\u003e，此外，还有另外一个叫做\u003ccode\u003edefaultdict\u003c/code\u003e的字典类型，它是\u003ccode\u003edict\u003c/code\u003e的子类，在\u003ccode\u003ecollections\u003c/code\u003e模块中。\u003ccode\u003edefaultdict\u003c/code\u003e的完整形式是\u003ccode\u003edefaultdict([*default_factory*[,*...*]])\u003c/code\u003e，如果指定的键不再字典中，可以用\u003ccode\u003edefault_factory\u003c/code\u003e生成该值。\u003c/p\u003e\n\u003cfigure class=\"highlight python\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e8\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e9\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e10\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e11\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e12\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e13\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e\u0026gt;\u0026gt;\u0026gt; \u003c/span\u003e\u003cspan class=\"keyword\"\u003efrom\u003c/span\u003e collections \u003cspan class=\"keyword\"\u003eimport\u003c/span\u003e defaultdict\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e\u0026gt;\u0026gt;\u0026gt; \u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e\u0026gt;\u0026gt;\u0026gt; \u003c/span\u003e\u003cspan class=\"comment\"\u003e# 创建一个 defaultdict\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e\u0026gt;\u0026gt;\u0026gt; \u003c/span\u003eknown_points = {\u003cspan class=\"string\"\u003e\u0026#39;first\u0026#39;\u003c/span\u003e: (\u003cspan class=\"number\"\u003e2\u003c/span\u003e, \u003cspan class=\"number\"\u003e3\u003c/span\u003e), \u003cspan class=\"string\"\u003e\u0026#39;second\u0026#39;\u003c/span\u003e: (\u003cspan class=\"number\"\u003e4\u003c/span\u003e, \u003cspan class=\"number\"\u003e2\u003c/span\u003e)}\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e\u0026gt;\u0026gt;\u0026gt; \u003c/span\u003epoints = defaultdict(\u003cspan class=\"keyword\"\u003elambda\u003c/span\u003e: (\u003cspan class=\"number\"\u003e0\u003c/span\u003e, \u003cspan class=\"number\"\u003e0\u003c/span\u003e), known_points)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e\u0026gt;\u0026gt;\u0026gt; \u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e\u0026gt;\u0026gt;\u0026gt; \u003c/span\u003e\u003cspan class=\"comment\"\u003e# 读取点\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e\u0026gt;\u0026gt;\u0026gt; \u003c/span\u003epoints[\u003cspan class=\"string\"\u003e\u0026#39;first\u0026#39;\u003c/span\u003e]\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e(\u003cspan class=\"number\"\u003e2\u003c/span\u003e, \u003cspan class=\"number\"\u003e3\u003c/span\u003e)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e\u0026gt;\u0026gt;\u0026gt; \u003c/span\u003epoints[\u003cspan class=\"string\"\u003e\u0026#39;second\u0026#39;\u003c/span\u003e]\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e(\u003cspan class=\"number\"\u003e4\u003c/span\u003e, \u003cspan class=\"number\"\u003e2\u003c/span\u003e)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e\u0026gt;\u0026gt;\u0026gt; \u003c/span\u003epoints[\u003cspan class=\"string\"\u003e\u0026#39;three\u0026#39;\u003c/span\u003e]\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e(\u003cspan class=\"number\"\u003e0\u003c/span\u003e, \u003cspan class=\"number\"\u003e0\u003c/span\u003e)\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e在上面的示例中，我们首先创建了一个\u003ccode\u003edefaultdict\u003c/code\u003e对象，它包括一些已知的点，特别要注意，我们用Lambda函数\u003ccode\u003elambda: (0, 0)\u003c/code\u003e作为参数\u003ccode\u003edefault_factory\u003c/code\u003e的参数。这样，如果\u003ccode\u003edefaultdict\u003c/code\u003e中没有指定的键是，就会调用这个Lambda函数，并且返回\u003ccode\u003e(0, 0)\u003c/code\u003e值。这个示例还显示了Lambda函数的参数为0个的情况。\u003c/p\u003e\n\u003ch2 id=\"No-4-与高级函数配合使用\"\u003e\u003ca href=\"#No-4-与高级函数配合使用\" class=\"headerlink\" title=\"No 4. 与高级函数配合使用\"\u003e\u003c/a\u003eNo 4. 与高级函数配合使用\u003c/h2\u003e\u003cp\u003e这里所谓的高级函数，指定是\u003ccode\u003emap()\u003c/code\u003e和\u003ccode\u003efilter()\u003c/code\u003e这样的函数。一定要理解一个重要的观点：\u003cstrong\u003ePython中万物皆对象\u003c/strong\u003e。在本微信公众号中，你可以找到很多阐述这一观点的文章。也正是因为这个原因，函数才可以作为另外一个函数的参数，例如：\u003c/p\u003e\n\u003cfigure class=\"highlight python\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e8\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e9\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e10\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e\u0026gt;\u0026gt;\u0026gt; \u003c/span\u003e\u003cspan class=\"comment\"\u003e# 创建一个列表\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e\u0026gt;\u0026gt;\u0026gt; \u003c/span\u003enumbers = [\u003cspan class=\"number\"\u003e1\u003c/span\u003e, \u003cspan class=\"number\"\u003e2\u003c/span\u003e, \u003cspan class=\"number\"\u003e3\u003c/span\u003e, \u003cspan class=\"number\"\u003e4\u003c/span\u003e, \u003cspan class=\"number\"\u003e5\u003c/span\u003e]\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e\u0026gt;\u0026gt;\u0026gt; \u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e\u0026gt;\u0026gt;\u0026gt; \u003c/span\u003e\u003cspan class=\"comment\"\u003e# 列表中的每个元素乘以3\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e\u0026gt;\u0026gt;\u0026gt; \u003c/span\u003elist(map(\u003cspan class=\"keyword\"\u003elambda\u003c/span\u003e x: x * \u003cspan class=\"number\"\u003e3\u003c/span\u003e, numbers))\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e[\u003cspan class=\"number\"\u003e3\u003c/span\u003e, \u003cspan class=\"number\"\u003e6\u003c/span\u003e, \u003cspan class=\"number\"\u003e9\u003c/span\u003e, \u003cspan class=\"number\"\u003e12\u003c/span\u003e, \u003cspan class=\"number\"\u003e15\u003c/span\u003e]\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e\u0026gt;\u0026gt;\u0026gt; \u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e\u0026gt;\u0026gt;\u0026gt; \u003c/span\u003e\u003cspan class=\"comment\"\u003e# 筛选列表中的偶数\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e\u0026gt;\u0026gt;\u0026gt; \u003c/span\u003elist(filter(\u003cspan class=\"keyword\"\u003elambda\u003c/span\u003e x: x%\u003cspan class=\"number\"\u003e2\u003c/span\u003e == \u003cspan class=\"number\"\u003e0\u003c/span\u003e, numbers))\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e[\u003cspan class=\"number\"\u003e2\u003c/span\u003e, \u003cspan class=\"number\"\u003e4\u003c/span\u003e]\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e上面的代码中，我们使用了\u003ccode\u003emap()\u003c/code\u003e和\u003ccode\u003efilter()\u003c/code\u003e函数，同它们对已有的列表进行操作，并且将返回对象转化为列表。因为\u003ccode\u003emap()\u003c/code\u003e和\u003ccode\u003efilter()\u003c/code\u003e函数的返回值不是列表，所以，要用\u003ccode\u003elist()\u003c/code\u003e进行转化。\u003c/p\u003e\n\u003cp\u003e我其实不太提倡你用上面的方式，因为很多时候，我们可以使用列表解析解决问题。比如：\u003c/p\u003e\n\u003cfigure class=\"highlight python\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e\u0026gt;\u0026gt;\u0026gt; \u003c/span\u003enumbers = [\u003cspan class=\"number\"\u003e1\u003c/span\u003e, \u003cspan class=\"number\"\u003e2\u003c/span\u003e, \u003cspan class=\"number\"\u003e3\u003c/span\u003e, \u003cspan class=\"number\"\u003e4\u003c/span\u003e, \u003cspan class=\"number\"\u003e5\u003c/span\u003e]\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e\u0026gt;\u0026gt;\u0026gt; \u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e\u0026gt;\u0026gt;\u0026gt; \u003c/span\u003e[x * \u003cspan class=\"number\"\u003e3\u003c/span\u003e \u003cspan class=\"keyword\"\u003efor\u003c/span\u003e x \u003cspan class=\"keyword\"\u003ein\u003c/span\u003e numbers]\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e[\u003cspan class=\"number\"\u003e3\u003c/span\u003e, \u003cspan class=\"number\"\u003e6\u003c/span\u003e, \u003cspan class=\"number\"\u003e9\u003c/span\u003e, \u003cspan class=\"number\"\u003e12\u003c/span\u003e, \u003cspan class=\"number\"\u003e15\u003c/span\u003e]\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e\u0026gt;\u0026gt;\u0026gt; \u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e\u0026gt;\u0026gt;\u0026gt; \u003c/span\u003e[x \u003cspan class=\"keyword\"\u003efor\u003c/span\u003e x \u003cspan class=\"keyword\"\u003ein\u003c/span\u003e numbers \u003cspan class=\"keyword\"\u003eif\u003c/span\u003e x%\u003cspan class=\"number\"\u003e2\u003c/span\u003e == \u003cspan class=\"number\"\u003e0\u003c/span\u003e]\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e[\u003cspan class=\"number\"\u003e2\u003c/span\u003e, \u003cspan class=\"number\"\u003e4\u003c/span\u003e]\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e结果与前面一样。\u003c/p\u003e\n\u003cp\u003e到底是使用高级函数还是列表解析，你可以根据个人情况进行选择。对我而言，列表解析可读性更强，然而，有的人喜欢\u003ccode\u003emap()\u003c/code\u003e和\u003ccode\u003efilter()\u003c/code\u003e，因为它们有函数编程的范儿。\u003c/p\u003e\n\u003ch2 id=\"结束语\"\u003e\u003ca href=\"#结束语\" class=\"headerlink\" title=\"结束语\"\u003e\u003c/a\u003e结束语\u003c/h2\u003e\u003cp\u003e本文中，我们通过示例说明了Lambda函数如何使用。我希望你能够真正理解这个函数。当然，有的程序员不喜欢它。但是，毕竟它允许我们用一行代码搞定一些东西。更详细内容，请参阅《跟老齐学Python：轻松入门》。\u003c/p\u003e\n\u003cp\u003e原文链接：\u003ca href=\"https://medium.com/swlh/lambdas-in-python-4-practical-examples-25afe0e44f88\" target=\"_blank\" rel=\"noopener\"\u003ehttps://medium.com/swlh/lambdas-in-python-4-practical-examples-25afe0e44f88\u003c/a\u003e\u003c/p\u003e\n\u003cp style=\"text-align:center\"\u003e专注于\u003cstrong\u003e软件和AI\u003c/strong\u003e的公众号\u003c/p\u003e\n\u003cp style=\"text-align:center\"\u003e\u003cstrong\u003e老齐教室\u003c/strong\u003e\u003c/p\u003e\u003c/section\u003e\n    \u003c!-- Tags START --\u003e\n    \n    \u003c!-- Tags END --\u003e\n    \u003c!-- NAV START --\u003e\n    \n  \u003cdiv class=\"nav-container\"\u003e\n    \u003c!-- reverse left and right to put prev and next in a more logic postition --\u003e\n    \n      \u003ca class=\"nav-left\" href=\"/2020/05/30/child-python-three/\"\u003e\n        \u003cspan class=\"nav-arrow\"\u003e← \u003c/span\u003e\n        \n          青少年编程：用Python探究数学（3）\n        \n      \u003c/a\u003e\n    \n    \n      \u003ca class=\"nav-right\" href=\"/2020/06/03/dictionary-comprehension/\"\u003e\n        \n          如何使用Python中的字典解析\n        \n        \u003cspan class=\"nav-arrow\"\u003e →\u003c/span\u003e\n      \u003c/a\u003e\n    \n  \u003c/div\u003e\n\n    \u003c!-- NAV END --\u003e\n    \u003c!-- 打赏 START --\u003e\n    \n      \u003cdiv class=\"money-like\"\u003e\n        \u003cdiv class=\"reward-btn\"\u003e\n          赏\n          \u003cspan class=\"money-code\"\u003e\n            \u003cspan class=\"alipay-code\"\u003e\n              \u003cdiv class=\"code-image\"\u003e\u003c/div\u003e\n              \u003cb\u003e使用支付宝打赏\u003c/b\u003e\n            \u003c/span\u003e\n            \u003cspan class=\"wechat-code\"\u003e\n              \u003cdiv class=\"code-image\"\u003e\u003c/div\u003e\n              \u003cb\u003e使用微信打赏\u003c/b\u003e\n            \u003c/span\u003e\n          \u003c/span\u003e\n        \u003c/div\u003e\n        \u003cp class=\"notice\"\u003e若你觉得我的文章对你有帮助，欢迎点击上方按钮对我打赏\u003c/p\u003e\n      \u003c/div\u003e\n    \n    \u003c!-- 打赏 END --\u003e\n    \u003c!-- 二维码 START --\u003e\n    \u003c!--% if (theme.qrcode) { %--\u003e\n      \u003cdiv class=\"qrcode\"\u003e\n        \u003c!--canvas id=\"share-qrcode\"\u003e\u003c/!--canvas--\u003e\n        \u003cimg src=\"https://public-tuchuang.oss-cn-hangzhou.aliyuncs.com/WechatIMG6_20200109154827.jpeg\" width=\"400\"/\u003e\n        \u003cp class=\"notice\"\u003e关注微信公众号，读文章、听课程，提升技能\u003c/p\u003e\n      \u003c/div\u003e\n    \u003c!--% } %--\u003e\n    \u003c!-- 二维码 END --\u003e\n    \n      \u003c!-- No Comment --\u003e\n    \n  \u003c/article\u003e",
  "Date": "2020-06-01T00:00:00Z",
  "Author": "老齐教室"
}