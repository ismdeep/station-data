{
  "Source": "qiwsir.github.io",
  "Title": "通过内置对象理解 Python（四）",
  "Link": "https://qiwsir.github.io/2021/11/03/python-builtins-forth/",
  "Content": "\u003carticle class=\"post-article\"\u003e\n    \u003ch2\u003e通过内置对象理解 Python（四）\u003c/h2\u003e\n    \u003cp class=\"post-date\"\u003e2021-11-03\u003c/p\u003e\n    \u003csection class=\"markdown-content\"\u003e\u003ch3 id=\"str-bytes-int-bool-float-and-complex：五个基本类型\"\u003e\u003ca href=\"#str-bytes-int-bool-float-and-complex：五个基本类型\" class=\"headerlink\" title=\"str, bytes, int, bool, float and complex：五个基本类型\"\u003e\u003c/a\u003e\u003ccode\u003estr\u003c/code\u003e, \u003ccode\u003ebytes\u003c/code\u003e, \u003ccode\u003eint\u003c/code\u003e, \u003ccode\u003ebool\u003c/code\u003e, \u003ccode\u003efloat\u003c/code\u003e and \u003ccode\u003ecomplex\u003c/code\u003e：五个基本类型\u003c/h3\u003e\u003cp\u003ePython有6个基本的数据类型（分明是5个，随后会解释）。 其中4个是数字，另外2个基于文本。\u003c/p\u003e\n\u003cp\u003e先看基于文本的数据类型，因为简单。  \u003c/p\u003e\n\u003cp\u003e\u003ccode\u003estr\u003c/code\u003e 是 Python 中最常见的数据类型之一，使用 \u003ccode\u003einput\u003c/code\u003e 函数接受用户输入会得到字符串，Python 中的其他所有数据类型都可以转换成字符串。 这是必要的，因为所有计算机输入/输出都是文本形式的，无论是用户 I/O 还是文件 I/O ，这可能是字符串无处不在的原因。  \u003c/p\u003e\n\u003cp\u003e\u003ccode\u003ebytes\u003c/code\u003e 字节类型实际上是计算中所有 I/O 的基础。 如果你了解计算机，可能会知道所有的数据都是以位和字节的形式存储和处理的——这也是终端真正的工作方式。  \u003c/p\u003e\n\u003cp\u003e 如果想看一下位于 \u003ccode\u003einput\u003c/code\u003e 和 \u003ccode\u003eprint\u003c/code\u003e 之下的字节，需要查看 \u003ccode\u003esys\u003c/code\u003e 模块中的 I/O 缓存： \u003ccode\u003esys.stdout.buffer\u003c/code\u003e 和 \u003ccode\u003esys.stdin.buffer\u003c/code\u003e ：\u003c/p\u003e\n\u003cfigure class=\"highlight python\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e8\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e9\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e\u0026gt;\u0026gt;\u0026gt; \u003c/span\u003e\u003cspan class=\"keyword\"\u003eimport\u003c/span\u003e sys\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e\u0026gt;\u0026gt;\u0026gt; \u003c/span\u003eprint(\u003cspan class=\"string\"\u003e\u0026#39;Hello!\u0026#39;\u003c/span\u003e)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eHello!\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e\u0026gt;\u0026gt;\u0026gt; \u003c/span\u003e\u003cspan class=\"string\"\u003e\u0026#39;Hello!\\n\u0026#39;\u003c/span\u003e.encode()  \u003cspan class=\"comment\"\u003e# Produces bytes\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"string\"\u003eb\u0026#39;Hello!\\n\u0026#39;\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e\u0026gt;\u0026gt;\u0026gt; \u003c/span\u003echar_count = sys.stdout.buffer.write(\u003cspan class=\"string\"\u003e\u0026#39;Hello!\\n\u0026#39;\u003c/span\u003e.encode())\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eHello!\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e\u0026gt;\u0026gt;\u0026gt; \u003c/span\u003echar_count  \u003cspan class=\"comment\"\u003e# write() returns the number of bytes written to console\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"number\"\u003e7\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003ebuffer 对象接收字节，把它们直接写入输出缓存，并返回字节数。  \u003c/p\u003e\n\u003cp\u003e为了证明下面的一切都是字节，让我们看看另一个使用字节打印表情的例子:  \u003c/p\u003e\n\u003cfigure class=\"highlight python\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e\u0026gt;\u0026gt;\u0026gt; \u003c/span\u003e\u003cspan class=\"keyword\"\u003eimport\u003c/span\u003e sys\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e\u0026gt;\u0026gt;\u0026gt; \u003c/span\u003e\u003cspan class=\"string\"\u003e\u0026#39;🐍\u0026#39;\u003c/span\u003e.encode()\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"string\"\u003eb\u0026#39;\\xf0\\x9f\\x90\\x8d\u0026#39;\u003c/span\u003e   \u003cspan class=\"comment\"\u003e# utf-8 encoded string of the snake emoji\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e\u0026gt;\u0026gt;\u0026gt; \u003c/span\u003e_ = sys.stdout.buffer.write(\u003cspan class=\"string\"\u003eb\u0026#39;\\xf0\\x9f\\x90\\x8d\u0026#39;\u003c/span\u003e)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e🐍\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e\u003ccode\u003eint\u003c/code\u003e 是另一种广泛使用的基本数据类型。 它也是另外两种数据类型 \u003ccode\u003efloat\u003c/code\u003e 和 \u003ccode\u003ecomplex\u003c/code\u003e 的最小单元， \u003ccode\u003ecomplex\u003c/code\u003e 是 \u003ccode\u003efloat\u003c/code\u003e 的超类，而 \u003ccode\u003efloat\u003c/code\u003e 又是 \u003ccode\u003eint\u003c/code\u003e 的超类。  \u003c/p\u003e\n\u003cp\u003e这意味着所有的 \u003ccode\u003eint\u003c/code\u003e 也可以视作 \u003ccode\u003efloat\u003c/code\u003e 或 \u003ccode\u003ecomplex\u003c/code\u003e ，但反过来说就不成立了。 类似地，所有的 \u003ccode\u003efloat\u003c/code\u003e 可以作为 \u003ccode\u003ecomplex\u003c/code\u003e 。例如：\u003c/p\u003e\n\u003cfigure class=\"highlight python\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e8\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e9\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e10\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e11\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e12\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e13\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e14\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e15\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e\u0026gt;\u0026gt;\u0026gt; \u003c/span\u003ex = \u003cspan class=\"number\"\u003e5\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e\u0026gt;\u0026gt;\u0026gt; \u003c/span\u003ey = \u003cspan class=\"number\"\u003e5.0\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e\u0026gt;\u0026gt;\u0026gt; \u003c/span\u003ez = \u003cspan class=\"number\"\u003e5.0\u003c/span\u003e+\u003cspan class=\"number\"\u003e0.0j\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e\u0026gt;\u0026gt;\u0026gt; \u003c/span\u003etype(x), type(y), type(z)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e(\u0026lt;class \u0026#39;int\u0026#39;\u0026gt;, \u0026lt;class \u0026#39;float\u0026#39;\u0026gt;, \u0026lt;class \u0026#39;complex\u0026#39;\u0026gt;)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e\u0026gt;\u0026gt;\u0026gt; \u003c/span\u003ex == y == z  \u003cspan class=\"comment\"\u003e# All the same value\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"literal\"\u003eTrue\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e\u0026gt;\u0026gt;\u0026gt; \u003c/span\u003ey\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"number\"\u003e5.0\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e\u0026gt;\u0026gt;\u0026gt; \u003c/span\u003efloat(x)    \u003cspan class=\"comment\"\u003e# float(x) produces the same result as y\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"number\"\u003e5.0\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e\u0026gt;\u0026gt;\u0026gt; \u003c/span\u003ez\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e(\u003cspan class=\"number\"\u003e5\u003c/span\u003e+\u003cspan class=\"number\"\u003e0j\u003c/span\u003e)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e\u0026gt;\u0026gt;\u0026gt; \u003c/span\u003ecomplex(x)  \u003cspan class=\"comment\"\u003e# complex(x) produces the same result as z\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e(\u003cspan class=\"number\"\u003e5\u003c/span\u003e+\u003cspan class=\"number\"\u003e0j\u003c/span\u003e)\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e刚才提到 Python 中实际上只有5个基本数据类型，而不是6个。 这是因为，\u003ccode\u003ebool\u003c/code\u003e 实际上不是一个基本数据类型——它实际上是 \u003ccode\u003eint\u003c/code\u003e 的子类!  \u003c/p\u003e\n\u003cp\u003e你可以通过查看这些类的 \u003ccode\u003emro\u003c/code\u003e 属性来查验上述说法。  \u003c/p\u003e\n\u003cp\u003e\u003ccode\u003emro\u003c/code\u003e 意思是“方法解析顺序”，它定义了在类中所有方法的搜索顺序。 调用某个方法，首先在类本身中查找，如果找不到，则会在父类中搜索，然后是再上一级的父类，一直到顶端的 \u003ccode\u003eobject\u003c/code\u003e 类。 Python中的一切都继承自 \u003ccode\u003eobject\u003c/code\u003e 。 是的，Python中几乎所有东西都是对象。 \u003c/p\u003e\n\u003cp\u003e看一看下面的代码:  \u003c/p\u003e\n\u003cfigure class=\"highlight\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e8\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e9\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e10\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e\u0026gt;\u0026gt;\u0026gt; \u003c/span\u003eint.mro()\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e[\u0026lt;class \u0026#39;int\u0026#39;\u0026gt;, \u0026lt;class \u0026#39;object\u0026#39;\u0026gt;]\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e\u0026gt;\u0026gt;\u0026gt; \u003c/span\u003efloat.mro()\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e[\u0026lt;class \u0026#39;float\u0026#39;\u0026gt;, \u0026lt;class \u0026#39;object\u0026#39;\u0026gt;]\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e\u0026gt;\u0026gt;\u0026gt; \u003c/span\u003ecomplex.mro()\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e[\u0026lt;class \u0026#39;complex\u0026#39;\u0026gt;, \u0026lt;class \u0026#39;object\u0026#39;\u0026gt;]\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e\u0026gt;\u0026gt;\u0026gt; \u003c/span\u003estr.mro()\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e[\u0026lt;class \u0026#39;str\u0026#39;\u0026gt;, \u0026lt;class \u0026#39;object\u0026#39;\u0026gt;]\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e\u0026gt;\u0026gt;\u0026gt; \u003c/span\u003ebool.mro()\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e[\u0026lt;class \u0026#39;bool\u0026#39;\u0026gt;, \u0026lt;class \u0026#39;int\u0026#39;\u0026gt;, \u0026lt;class \u0026#39;object\u0026#39;\u0026gt;]  # Look!\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e所有类都有共同的“祖先” \u003ccode\u003eobject\u003c/code\u003e 。 \u003ccode\u003ebool\u003c/code\u003e是居然继承了 \u003ccode\u003eint\u003c/code\u003e 类。 \u003c/p\u003e\n\u003cp\u003e或许对 \u003ccode\u003ebool\u003c/code\u003e 是 \u003ccode\u003eint\u003c/code\u003e 的子类感觉奇怪。这主要是历史原因造成的。在历史上，曾经用 \u003ccode\u003e0\u003c/code\u003e 和 \u003ccode\u003e1\u003c/code\u003e 分别表示逻辑假和真，后来，在 Python 2.2 才引入了 \u003ccode\u003eTrue\u003c/code\u003e 和 \u003ccode\u003eFalse\u003c/code\u003e 这两个 \u003ccode\u003ebool\u003c/code\u003e 类型的值，为了能兼容，把它们设计成整数的包装器。于是这个事实就被延续至今。\u003c/p\u003e\n\u003cp\u003e基于这个事实，就能在本需要整数地方，用 \u003ccode\u003ebool\u003c/code\u003e 类型替代了。\u003c/p\u003e\n\u003cfigure class=\"highlight python\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e8\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e9\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e10\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e11\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e12\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e13\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e14\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e15\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e16\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e17\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e18\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e\u0026gt;\u0026gt;\u0026gt; \u003c/span\u003e\u003cspan class=\"keyword\"\u003eimport\u003c/span\u003e json\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e\u0026gt;\u0026gt;\u0026gt; \u003c/span\u003edata = {\u003cspan class=\"string\"\u003e\u0026#39;a\u0026#39;\u003c/span\u003e: \u003cspan class=\"number\"\u003e1\u003c/span\u003e, \u003cspan class=\"string\"\u003e\u0026#39;b\u0026#39;\u003c/span\u003e: {\u003cspan class=\"string\"\u003e\u0026#39;c\u0026#39;\u003c/span\u003e: \u003cspan class=\"number\"\u003e2\u003c/span\u003e}}\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e\u0026gt;\u0026gt;\u0026gt; \u003c/span\u003eprint(json.dumps(data))\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e{\u003cspan class=\"string\"\u003e\u0026#34;a\u0026#34;\u003c/span\u003e: \u003cspan class=\"number\"\u003e1\u003c/span\u003e, \u003cspan class=\"string\"\u003e\u0026#34;b\u0026#34;\u003c/span\u003e: {\u003cspan class=\"string\"\u003e\u0026#34;c\u0026#34;\u003c/span\u003e: \u003cspan class=\"number\"\u003e2\u003c/span\u003e}}\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e\u0026gt;\u0026gt;\u0026gt; \u003c/span\u003eprint(json.dumps(data, indent=\u003cspan class=\"number\"\u003e4\u003c/span\u003e))\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e{\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"string\"\u003e\u0026#34;a\u0026#34;\u003c/span\u003e: \u003cspan class=\"number\"\u003e1\u003c/span\u003e,\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"string\"\u003e\u0026#34;b\u0026#34;\u003c/span\u003e: {\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        \u003cspan class=\"string\"\u003e\u0026#34;c\u0026#34;\u003c/span\u003e: \u003cspan class=\"number\"\u003e2\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    }\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e}\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e\u0026gt;\u0026gt;\u0026gt; \u003c/span\u003eprint(json.dumps(data, indent=\u003cspan class=\"literal\"\u003eTrue\u003c/span\u003e))\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e{\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e \u003cspan class=\"string\"\u003e\u0026#34;a\u0026#34;\u003c/span\u003e: \u003cspan class=\"number\"\u003e1\u003c/span\u003e,\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e \u003cspan class=\"string\"\u003e\u0026#34;b\u0026#34;\u003c/span\u003e: {\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  \u003cspan class=\"string\"\u003e\u0026#34;c\u0026#34;\u003c/span\u003e: \u003cspan class=\"number\"\u003e2\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e }\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e}\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e这里的 \u003ccode\u003eindent=True\u003c/code\u003e 被视为 \u003ccode\u003eindent=1\u003c/code\u003e ，所以它是有效的，但我确信没有人会想要缩进1个空格。  \u003c/p\u003e\n\u003ch3 id=\"object-：基类\"\u003e\u003ca href=\"#object-：基类\" class=\"headerlink\" title=\"object ：基类\"\u003e\u003c/a\u003e\u003ccode\u003eobject\u003c/code\u003e ：基类\u003c/h3\u003e\u003cp\u003e\u003ccode\u003eobject\u003c/code\u003e 是整个类层次结构的基类，每个类都继承了 \u003ccode\u003eobject\u003c/code\u003e 。 \u003c/p\u003e\n\u003cp\u003e\u003ccode\u003eobject\u003c/code\u003e 类中通过特殊方法，定义了 Python 中的一些最基本的函数，比如，通过 \u003ccode\u003e__hash__()\u003c/code\u003e 可以定义函数 \u003ccode\u003ehash()\u003c/code\u003e ，等等。\u003c/p\u003e\n\u003cfigure class=\"highlight python\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e\u0026gt;\u0026gt;\u0026gt; \u003c/span\u003edir(object)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e[\u003cspan class=\"string\"\u003e\u0026#39;__class__\u0026#39;\u003c/span\u003e, \u003cspan class=\"string\"\u003e\u0026#39;__delattr__\u0026#39;\u003c/span\u003e, \u003cspan class=\"string\"\u003e\u0026#39;__dir__\u0026#39;\u003c/span\u003e, \u003cspan class=\"string\"\u003e\u0026#39;__doc__\u0026#39;\u003c/span\u003e, \u003cspan class=\"string\"\u003e\u0026#39;__eq__\u0026#39;\u003c/span\u003e, \u003cspan class=\"string\"\u003e\u0026#39;__format__\u0026#39;\u003c/span\u003e, \u003cspan class=\"string\"\u003e\u0026#39;__ge__\u0026#39;\u003c/span\u003e,\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"string\"\u003e\u0026#39;__getattribute__\u0026#39;\u003c/span\u003e, \u003cspan class=\"string\"\u003e\u0026#39;__gt__\u0026#39;\u003c/span\u003e, \u003cspan class=\"string\"\u003e\u0026#39;__hash__\u0026#39;\u003c/span\u003e, \u003cspan class=\"string\"\u003e\u0026#39;__init__\u0026#39;\u003c/span\u003e, \u003cspan class=\"string\"\u003e\u0026#39;__init_subclass__\u0026#39;\u003c/span\u003e, \u003cspan class=\"string\"\u003e\u0026#39;__le__\u0026#39;\u003c/span\u003e,\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"string\"\u003e\u0026#39;__lt__\u0026#39;\u003c/span\u003e, \u003cspan class=\"string\"\u003e\u0026#39;__ne__\u0026#39;\u003c/span\u003e, \u003cspan class=\"string\"\u003e\u0026#39;__new__\u0026#39;\u003c/span\u003e, \u003cspan class=\"string\"\u003e\u0026#39;__reduce__\u0026#39;\u003c/span\u003e, \u003cspan class=\"string\"\u003e\u0026#39;__reduce_ex__\u0026#39;\u003c/span\u003e, \u003cspan class=\"string\"\u003e\u0026#39;__repr__\u0026#39;\u003c/span\u003e,\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"string\"\u003e\u0026#39;__setattr__\u0026#39;\u003c/span\u003e, \u003cspan class=\"string\"\u003e\u0026#39;__sizeof__\u0026#39;\u003c/span\u003e, \u003cspan class=\"string\"\u003e\u0026#39;__str__\u0026#39;\u003c/span\u003e, \u003cspan class=\"string\"\u003e\u0026#39;__subclasshook__\u0026#39;\u003c/span\u003e]\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e使用 \u003ccode\u003eobj.x\u003c/code\u003e 形式访问属性会调用 \u003ccode\u003e__getattr__()\u003c/code\u003e 方法。 类似地，设置新属性和删除属性分别调用 \u003ccode\u003e__setattr__()\u003c/code\u003e 和 \u003ccode\u003e__delattr__()\u003c/code\u003e 。 对象的哈希值由 \u003ccode\u003e__hash__()\u003c/code\u003e 方法生成，对象的字符串表示形式来自 \u003ccode\u003e__repr__()\u003c/code\u003e。  \u003c/p\u003e\n\u003cfigure class=\"highlight python\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e8\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e9\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e10\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e11\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e12\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e13\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e\u0026gt;\u0026gt;\u0026gt; \u003c/span\u003eobject()  \u003cspan class=\"comment\"\u003e# This creates an object with no properties\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026lt;object object at \u003cspan class=\"number\"\u003e0x7f47aecaf210\u003c/span\u003e\u0026gt;  \u003cspan class=\"comment\"\u003e# defined in __repr__()\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e\u0026gt;\u0026gt;\u0026gt; \u003c/span\u003e\u003cspan class=\"class\"\u003e\u003cspan class=\"keyword\"\u003eclass\u003c/span\u003e \u003cspan class=\"title\"\u003edummy\u003c/span\u003e\u003cspan class=\"params\"\u003e(object)\u003c/span\u003e:\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e... \u003c/span\u003e    \u003cspan class=\"keyword\"\u003epass\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e\u0026gt;\u0026gt;\u0026gt; \u003c/span\u003ex = dummy()\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e\u0026gt;\u0026gt;\u0026gt; \u003c/span\u003ex\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026lt;__main__.dummy object at \u003cspan class=\"number\"\u003e0x7f47aec510a0\u003c/span\u003e\u0026gt;  \u003cspan class=\"comment\"\u003e# functionality inherited from object\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e\u0026gt;\u0026gt;\u0026gt; \u003c/span\u003ehash(object())\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"number\"\u003e8746615746334\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e\u0026gt;\u0026gt;\u0026gt; \u003c/span\u003ehash(x)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"number\"\u003e8746615722250\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e\u0026gt;\u0026gt;\u0026gt; \u003c/span\u003ex.__hash__()  \u003cspan class=\"comment\"\u003e# is the same as hash(x)\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"number\"\u003e8746615722250\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003e实际上，关于 Python 的特殊方法还有很多内容，推荐参考《Python大学实用教程》或《Python 完全自学教程》，参阅：\u003ca href=\"http://www.itdifferc.om\" target=\"_blank\" rel=\"noopener\"\u003ewww.itdifferc.om\u003c/a\u003e 的说明。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003ch3 id=\"type-：类工厂\"\u003e\u003ca href=\"#type-：类工厂\" class=\"headerlink\" title=\"type ：类工厂\"\u003e\u003c/a\u003e\u003ccode\u003etype\u003c/code\u003e ：类工厂\u003c/h3\u003e\u003cp\u003e如果 \u003ccode\u003eobject\u003c/code\u003e 是所有对象之父，那么 \u003ccode\u003etype\u003c/code\u003e 就是所有“类”之父。即所有的对象继承 \u003ccode\u003eobject\u003c/code\u003e ，所有的类来自于 \u003ccode\u003etype\u003c/code\u003e 。  \u003c/p\u003e\n\u003cp\u003e\u003ccode\u003etype\u003c/code\u003e 可以用来动态地创建新类，它有两种用途:  \u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003cp\u003e如果给定一个参数，它返回该参数的“类型”，即：用于创建该对象的类:  \u003c/p\u003e\n\u003cfigure class=\"highlight python\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e\u0026gt;\u0026gt;\u0026gt; \u003c/span\u003ex = \u003cspan class=\"number\"\u003e5\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e\u0026gt;\u0026gt;\u0026gt; \u003c/span\u003etype(x)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026lt;\u003cspan class=\"class\"\u003e\u003cspan class=\"keyword\"\u003eclass\u003c/span\u003e \u0026#39;\u003cspan class=\"title\"\u003eint\u003c/span\u003e\u0026#39;\u0026gt;\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"class\"\u003e\u0026gt;\u0026gt;\u0026gt; \u003cspan class=\"title\"\u003etype\u003c/span\u003e\u003cspan class=\"params\"\u003e(x)\u003c/span\u003e \u003cspan class=\"title\"\u003eis\u003c/span\u003e \u003cspan class=\"title\"\u003eint\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"class\"\u003e\u003cspan class=\"title\"\u003eTrue\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"class\"\u003e\u0026gt;\u0026gt;\u0026gt; \u003cspan class=\"title\"\u003etype\u003c/span\u003e\u003cspan class=\"params\"\u003e(x)\u003c/span\u003e\u003cspan class=\"params\"\u003e(\u003cspan class=\"number\"\u003e42.0\u003c/span\u003e)\u003c/span\u003e  # \u003cspan class=\"title\"\u003eSame\u003c/span\u003e \u003cspan class=\"title\"\u003eas\u003c/span\u003e \u003cspan class=\"title\"\u003eint\u003c/span\u003e\u003cspan class=\"params\"\u003e(\u003cspan class=\"number\"\u003e42.0\u003c/span\u003e)\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"class\"\u003e42\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e用三个参数，可以创建一个新类，这三个参数是 \u003ccode\u003ename\u003c/code\u003e 、\u003ccode\u003ebases\u003c/code\u003e 和 \u003ccode\u003edict\u003c/code\u003e 。\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003cp\u003e\u003ccode\u003ename\u003c/code\u003e 定义类的名称  \u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e\u003ccode\u003ebases\u003c/code\u003e 定义所继承的类  \u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e\u003ccode\u003edict\u003c/code\u003e 定义了所有的类属性和方法。  \u003c/p\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e如果要定义这样的类：\u003c/p\u003e\n\u003cfigure class=\"highlight python\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"class\"\u003e\u003cspan class=\"keyword\"\u003eclass\u003c/span\u003e \u003cspan class=\"title\"\u003eMyClass\u003c/span\u003e\u003cspan class=\"params\"\u003e(MySuperClass)\u003c/span\u003e:\u003c/span\u003e   \u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"function\"\u003e\u003cspan class=\"keyword\"\u003edef\u003c/span\u003e \u003cspan class=\"title\"\u003ex\u003c/span\u003e\u003cspan class=\"params\"\u003e(self)\u003c/span\u003e:\u003c/span\u003e       \u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        print(\u003cspan class=\"string\"\u003e\u0026#39;x\u0026#39;\u003c/span\u003e)\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e用 \u003ccode\u003etype\u003c/code\u003e 可以定义同样的类：\u003c/p\u003e\n\u003cfigure class=\"highlight python\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"function\"\u003e\u003cspan class=\"keyword\"\u003edef\u003c/span\u003e \u003cspan class=\"title\"\u003ex_function\u003c/span\u003e\u003cspan class=\"params\"\u003e(self)\u003c/span\u003e:\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    print(\u003cspan class=\"string\"\u003e\u0026#39;x\u0026#39;\u003c/span\u003e)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eMyClass = type(\u003cspan class=\"string\"\u003e\u0026#39;MyClass\u0026#39;\u003c/span\u003e, (MySuperClass), {\u003cspan class=\"string\"\u003e\u0026#39;x\u0026#39;\u003c/span\u003e: x_function})\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e这也是实现 \u003ccode\u003ecollections.namedtuple\u003c/code\u003e 类的一种方法，例如，它以类的名字和元组作为参数。\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"hash-and-id-：判断相等的基础\"\u003e\u003ca href=\"#hash-and-id-：判断相等的基础\" class=\"headerlink\" title=\"hash and id ：判断相等的基础\"\u003e\u003c/a\u003e\u003ccode\u003ehash\u003c/code\u003e and \u003ccode\u003eid\u003c/code\u003e ：判断相等的基础\u003c/h3\u003e\u003cp\u003ePython的内置函数 \u003ccode\u003ehash\u003c/code\u003e 和 \u003ccode\u003eid\u003c/code\u003e 是用于判断对象相等的依据。  \u003c/p\u003e\n\u003cp\u003e Python 对象默认情况下是不具有可比性的，除非它们是完全相同的。 如果你尝试创建两个 \u003ccode\u003eobject()\u003c/code\u003e 对象并检查它们是否相等…  \u003c/p\u003e\n\u003cfigure class=\"highlight python\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e\u0026gt;\u0026gt;\u0026gt; \u003c/span\u003ex = object()\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e\u0026gt;\u0026gt;\u0026gt; \u003c/span\u003ey = object()\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e\u0026gt;\u0026gt;\u0026gt; \u003c/span\u003ex == x\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"literal\"\u003eTrue\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e\u0026gt;\u0026gt;\u0026gt; \u003c/span\u003ey == y\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"literal\"\u003eTrue\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e\u0026gt;\u0026gt;\u0026gt; \u003c/span\u003ex == y  \u003cspan class=\"comment\"\u003e# Comparing two objectsFalse\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e结果总是 \u003ccode\u003eFalse\u003c/code\u003e 。 这是因为：事实上，\u003ccode\u003eobject\u003c/code\u003e 以同一性来比较自己，即它们只是与自己相等，而不是与别的对象相等。  \u003c/p\u003e\n\u003chr/\u003e\n\u003cp\u003e\u003cstrong\u003e补充知识：\u003c/strong\u003e哨兵\u003c/p\u003e\n\u003cp\u003e通常很少用类 \u003ccode\u003eobject\u003c/code\u003e 直接创建实例，在编程中，有一种情景可以使用 \u003ccode\u003eobject\u003c/code\u003e实例，并且称此实例为“哨兵”，这是什么意思呢？\u003c/p\u003e\n\u003cp\u003e看下面的例子。假设有一个函数 \u003ccode\u003ewhat_was_passed\u003c/code\u003e ，用它能够实现下面所演示的功能：\u003c/p\u003e\n\u003cfigure class=\"highlight python\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e\u0026gt;\u0026gt;\u0026gt; \u003c/span\u003ewhat_was_passed(\u003cspan class=\"number\"\u003e42\u003c/span\u003e)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eYou passed a \u003cspan class=\"number\"\u003e42.\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e\u0026gt;\u0026gt;\u0026gt; \u003c/span\u003ewhat_was_passed(\u003cspan class=\"string\"\u003e\u0026#39;abc\u0026#39;\u003c/span\u003e)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eYou passed a \u003cspan class=\"string\"\u003e\u0026#39;abc\u0026#39;\u003c/span\u003e.\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e\u0026gt;\u0026gt;\u0026gt; \u003c/span\u003ewhat_was_passed()\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eNothing was passed.\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e也就是，只要输入一个非空的值，就能对应相应的输出；如果输入的是空值，则提示 \u003ccode\u003eNothing was passed\u003c/code\u003e 。或许觉得这个函数的代码很容易编写，比如：\u003c/p\u003e\n\u003cfigure class=\"highlight python\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"function\"\u003e\u003cspan class=\"keyword\"\u003edef\u003c/span\u003e \u003cspan class=\"title\"\u003ewhat_was_passed\u003c/span\u003e\u003cspan class=\"params\"\u003e(value=None)\u003c/span\u003e:\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"keyword\"\u003eif\u003c/span\u003e value \u003cspan class=\"keyword\"\u003eis\u003c/span\u003e \u003cspan class=\"literal\"\u003eNone\u003c/span\u003e:\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        print(\u003cspan class=\"string\"\u003e\u0026#39;Nothing was passed.\u0026#39;\u003c/span\u003e)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"keyword\"\u003eelse\u003c/span\u003e:\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        print(\u003cspan class=\"string\"\u003ef\u0026#39;You passed a \u003cspan class=\"subst\"\u003e{value!r}\u003c/span\u003e.\u0026#39;\u003c/span\u003e)\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e但是，如果提供的参数就是 \u003ccode\u003eNone\u003c/code\u003e ——注意，\u003ccode\u003eNone\u003c/code\u003e 在有的情况下，并不表示“什么也没有”，也可能具有某种意义。\u003c/p\u003e\n\u003cfigure class=\"highlight python\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e\u0026gt;\u0026gt;\u0026gt; \u003c/span\u003ewhat_was_passed(\u003cspan class=\"literal\"\u003eNone\u003c/span\u003e)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eNothing was passed.\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e显然这样做，并不总能实现期望。或者以省略号 \u003ccode\u003e...\u003c/code\u003e 为参数（详见\u003ca href=\"https://mp.weixin.qq.com/s/tdXq4f5RBT8GNn7RF4gBmg\" target=\"_blank\" rel=\"noopener\"\u003e《Python 中的省略号》\u003c/a\u003e），也不能通过测试。\u003c/p\u003e\n\u003cp\u003e这时就需要一个“哨兵”了：  \u003c/p\u003e\n\u003cfigure class=\"highlight python\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e__my_sentinel = object()\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"function\"\u003e\u003cspan class=\"keyword\"\u003edef\u003c/span\u003e \u003cspan class=\"title\"\u003ewhat_was_passed\u003c/span\u003e\u003cspan class=\"params\"\u003e(value=__my_sentinel)\u003c/span\u003e:\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"keyword\"\u003eif\u003c/span\u003e value \u003cspan class=\"keyword\"\u003eis\u003c/span\u003e __my_sentinel:\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        print(\u003cspan class=\"string\"\u003e\u0026#39;Nothing was passed.\u0026#39;\u003c/span\u003e)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"keyword\"\u003eelse\u003c/span\u003e:\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        print(\u003cspan class=\"string\"\u003ef\u0026#39;You passed a \u003cspan class=\"subst\"\u003e{value!r}\u003c/span\u003e.\u0026#39;\u003c/span\u003e)\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e现在，不论给函数提供任何职，都能看做对象，只有在不提供值时才为空。\u003c/p\u003e\n\u003cfigure class=\"highlight python\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e8\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e9\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e10\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e\u0026gt;\u0026gt;\u0026gt; \u003c/span\u003ewhat_was_passed(\u003cspan class=\"number\"\u003e42\u003c/span\u003e)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eYou passed a \u003cspan class=\"number\"\u003e42.\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e\u0026gt;\u0026gt;\u0026gt; \u003c/span\u003ewhat_was_passed(\u003cspan class=\"string\"\u003e\u0026#39;abc\u0026#39;\u003c/span\u003e)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eYou passed a \u003cspan class=\"string\"\u003e\u0026#39;abc\u0026#39;\u003c/span\u003e.\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e\u0026gt;\u0026gt;\u0026gt; \u003c/span\u003ewhat_was_passed(\u003cspan class=\"literal\"\u003eNone\u003c/span\u003e)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eYou passed a \u003cspan class=\"literal\"\u003eNone\u003c/span\u003e.\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e\u0026gt;\u0026gt;\u0026gt; \u003c/span\u003ewhat_was_passed(object())\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eYou passed a \u0026lt;object object at \u003cspan class=\"number\"\u003e0x7fdf02f3f220\u003c/span\u003e\u0026gt;.\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e\u0026gt;\u0026gt;\u0026gt; \u003c/span\u003ewhat_was_passed()\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eNothing was passed.\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e（补充知识完毕）\u003c/p\u003e\n\u003chr/\u003e\n\u003cp\u003e要理解为什么对象只与自己比较，我们必须理解关键词 \u003ccode\u003eis\u003c/code\u003e 。  \u003c/p\u003e\n\u003cp\u003ePython 的 \u003ccode\u003eis\u003c/code\u003e 用于检查两个名称是否在内存中引用了完全相同的对象。 我们可以把 Python 对象想象成在空间中漂浮的盒子，把变量、数组索引等想象成指向这些对象的箭头。  \u003c/p\u003e\n\u003cp\u003e举个简单的例子:  \u003c/p\u003e\n\u003cfigure class=\"highlight python\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e\u0026gt;\u0026gt;\u0026gt; \u003c/span\u003ex = object()\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e\u0026gt;\u0026gt;\u0026gt; \u003c/span\u003ey = object()\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e\u0026gt;\u0026gt;\u0026gt; \u003c/span\u003ez = y\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e\u0026gt;\u0026gt;\u0026gt; \u003c/span\u003ex \u003cspan class=\"keyword\"\u003eis\u003c/span\u003e y\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"literal\"\u003eFalse\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e\u0026gt;\u0026gt;\u0026gt; \u003c/span\u003ey \u003cspan class=\"keyword\"\u003eis\u003c/span\u003e z\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"literal\"\u003eTrue\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e在上面的代码中，有两个独立的对象，三个标签 \u003ccode\u003ex\u003c/code\u003e ，\u003ccode\u003ey\u003c/code\u003e 和 \u003ccode\u003ez\u003c/code\u003e 指向这两个对象：\u003ccode\u003ex\u003c/code\u003e 指向第一个对象，\u003ccode\u003ey\u003c/code\u003e 和 \u003ccode\u003ez\u003c/code\u003e 都指向另一个对象。  \u003c/p\u003e\n\u003cfigure class=\"highlight python\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e\u0026gt;\u0026gt;\u0026gt; \u003c/span\u003e\u003cspan class=\"keyword\"\u003edel\u003c/span\u003e x\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e这个操作将删除箭头 \u003ccode\u003ex\u003c/code\u003e 。 对象本身不受赋值或删除的影响，只有箭头受影响。 但现在没有指向第一个对象的箭头，这个对象的存在也就没有意义了。 所以 Python 的“垃圾回收器”将其清除。 现在我们只剩下一个 \u003ccode\u003eobject\u003c/code\u003e 了。\u003c/p\u003e\n\u003cfigure class=\"highlight python\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e\u0026gt;\u0026gt;\u0026gt; \u003c/span\u003ey = \u003cspan class=\"number\"\u003e5\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e现在 \u003ccode\u003ey\u003c/code\u003e 箭头被改为指向一个整数对象 \u003ccode\u003e5\u003c/code\u003e 。 \u003ccode\u003ez\u003c/code\u003e 仍然指向第二个 \u003ccode\u003eobject\u003c/code\u003e ，所以该对象仍然存在。  \u003c/p\u003e\n\u003cfigure class=\"highlight python\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e\u0026gt;\u0026gt;\u0026gt; \u003c/span\u003ez = y * \u003cspan class=\"number\"\u003e2\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e现在 \u003ccode\u003ez\u003c/code\u003e 指向另一个新对象 \u003ccode\u003e10\u003c/code\u003e ，这个新对象存储在内存中的某个地方。 现在也没有箭头指向第二个\u003ccode\u003eobject\u003c/code\u003e了，因此该对象随后被作为垃圾收走。 \u003c/p\u003e\n\u003cp\u003e为了能够验证所有上述说法，我们可以使用 \u003ccode\u003eid\u003c/code\u003e 内置函数。 \u003ccode\u003eid\u003c/code\u003e 表示对象在内存中的确切位置，用数字表示。 \u003c/p\u003e\n\u003cfigure class=\"highlight python\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e8\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e9\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e10\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e11\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e12\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e13\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e14\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e15\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e16\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e17\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e\u0026gt;\u0026gt;\u0026gt; \u003c/span\u003ex = object()\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e\u0026gt;\u0026gt;\u0026gt; \u003c/span\u003ey = object()\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e\u0026gt;\u0026gt;\u0026gt; \u003c/span\u003ez = y\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e\u0026gt;\u0026gt;\u0026gt; \u003c/span\u003eid(x)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"number\"\u003e139737240793600\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e\u0026gt;\u0026gt;\u0026gt; \u003c/span\u003eid(y)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"number\"\u003e139737240793616\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e\u0026gt;\u0026gt;\u0026gt; \u003c/span\u003eid(z)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"number\"\u003e139737240793616\u003c/span\u003e  \u003cspan class=\"comment\"\u003e# Notice the numbers!\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e\u0026gt;\u0026gt;\u0026gt; \u003c/span\u003ex \u003cspan class=\"keyword\"\u003eis\u003c/span\u003e y\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"literal\"\u003eFalse\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e\u0026gt;\u0026gt;\u0026gt; \u003c/span\u003eid(x) == id(y)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"literal\"\u003eFalse\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e\u0026gt;\u0026gt;\u0026gt; \u003c/span\u003ey \u003cspan class=\"keyword\"\u003eis\u003c/span\u003e z\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"literal\"\u003eTrue\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e\u0026gt;\u0026gt;\u0026gt; \u003c/span\u003eid(y) == id(z)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"literal\"\u003eTrue\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e相同的对象，相同的 \u003ccode\u003eid()\u003c/code\u003e 返回值，否则不同。\u003c/p\u003e\n\u003cp\u003eWith \u003ccode\u003eobject\u003c/code\u003es, \u003ccode\u003e==\u003c/code\u003e and \u003ccode\u003eis\u003c/code\u003e behaves the same way:\u003c/p\u003e\n\u003cp\u003e对于 \u003ccode\u003eobject\u003c/code\u003e 类的示例对象，\u003ccode\u003e==\u003c/code\u003e 和 \u003ccode\u003eis\u003c/code\u003e 具有相同的效果：\u003c/p\u003e\n\u003cfigure class=\"highlight python\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e8\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e9\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e10\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e11\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e\u0026gt;\u0026gt;\u0026gt; \u003c/span\u003ex = object()\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e\u0026gt;\u0026gt;\u0026gt; \u003c/span\u003ey = object()\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e\u0026gt;\u0026gt;\u0026gt; \u003c/span\u003ez = y\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e\u0026gt;\u0026gt;\u0026gt; \u003c/span\u003ex \u003cspan class=\"keyword\"\u003eis\u003c/span\u003e y\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"literal\"\u003eFalse\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e\u0026gt;\u0026gt;\u0026gt; \u003c/span\u003ex == y\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"literal\"\u003eFalse\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e\u0026gt;\u0026gt;\u0026gt; \u003c/span\u003ey \u003cspan class=\"keyword\"\u003eis\u003c/span\u003e z\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"literal\"\u003eTrue\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e\u0026gt;\u0026gt;\u0026gt; \u003c/span\u003ey == z\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"literal\"\u003eTrue\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e这是因为，在 \u003ccode\u003eobject\u003c/code\u003e 类中，专门定义了针对 \u003ccode\u003e==\u003c/code\u003e 的方法 \u003ccode\u003e__eq__\u003c/code\u003e ，像下面这样:  \u003c/p\u003e\n\u003cfigure class=\"highlight python\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"class\"\u003e\u003cspan class=\"keyword\"\u003eclass\u003c/span\u003e \u003cspan class=\"title\"\u003eobject\u003c/span\u003e:\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"function\"\u003e\u003cspan class=\"keyword\"\u003edef\u003c/span\u003e \u003cspan class=\"title\"\u003e__eq__\u003c/span\u003e\u003cspan class=\"params\"\u003e(self, other)\u003c/span\u003e:\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        \u003cspan class=\"keyword\"\u003ereturn\u003c/span\u003e self \u003cspan class=\"keyword\"\u003eis\u003c/span\u003e other\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e当然，实际上 \u003ccode\u003eobject\u003c/code\u003e 的实现是用 C 语言编写的。\u003c/p\u003e\n\u003cp\u003e另一方面，如果容器类型可以相互替换，则它们是相等的。典型例子是具有相同索引的相同项的列表，或者包含完全相同值的集合。  \u003c/p\u003e\n\u003cfigure class=\"highlight python\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e\u0026gt;\u0026gt;\u0026gt; \u003c/span\u003ex = [\u003cspan class=\"number\"\u003e1\u003c/span\u003e, \u003cspan class=\"number\"\u003e2\u003c/span\u003e, \u003cspan class=\"number\"\u003e3\u003c/span\u003e]\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e\u0026gt;\u0026gt;\u0026gt; \u003c/span\u003ey = [\u003cspan class=\"number\"\u003e1\u003c/span\u003e, \u003cspan class=\"number\"\u003e2\u003c/span\u003e, \u003cspan class=\"number\"\u003e3\u003c/span\u003e]\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e\u0026gt;\u0026gt;\u0026gt; \u003c/span\u003ex \u003cspan class=\"keyword\"\u003eis\u003c/span\u003e y\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"literal\"\u003eFalse\u003c/span\u003e       \u003cspan class=\"comment\"\u003e# Different objects,\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e\u0026gt;\u0026gt;\u0026gt; \u003c/span\u003ex == y\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"literal\"\u003eTrue\u003c/span\u003e        \u003cspan class=\"comment\"\u003e# Yet, equal.\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e这些可以这样定义:\u003c/p\u003e\n\u003cfigure class=\"highlight python\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e8\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e9\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"class\"\u003e\u003cspan class=\"keyword\"\u003eclass\u003c/span\u003e \u003cspan class=\"title\"\u003elist\u003c/span\u003e:\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"function\"\u003e\u003cspan class=\"keyword\"\u003edef\u003c/span\u003e \u003cspan class=\"title\"\u003e__eq__\u003c/span\u003e\u003cspan class=\"params\"\u003e(self, other)\u003c/span\u003e:\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        \u003cspan class=\"keyword\"\u003eif\u003c/span\u003e len(self) != len(other):\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e            \u003cspan class=\"keyword\"\u003ereturn\u003c/span\u003e \u003cspan class=\"literal\"\u003eFalse\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        \u003cspan class=\"keyword\"\u003ereturn\u003c/span\u003e all(x == y \u003cspan class=\"keyword\"\u003efor\u003c/span\u003e x, y \u003cspan class=\"keyword\"\u003ein\u003c/span\u003e zip(self, other))\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        \u003cspan class=\"comment\"\u003e# Can also be written as:\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        \u003cspan class=\"keyword\"\u003ereturn\u003c/span\u003e all(self[i] == other[i] \u003cspan class=\"keyword\"\u003efor\u003c/span\u003e i \u003cspan class=\"keyword\"\u003ein\u003c/span\u003e range(len(self)))\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e类似地，集合是无序的，所以成员的位置无关紧要，重要的是它们的“存在”:  \u003c/p\u003e\n\u003cfigure class=\"highlight python\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"class\"\u003e\u003cspan class=\"keyword\"\u003eclass\u003c/span\u003e \u003cspan class=\"title\"\u003elist\u003c/span\u003e:\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"function\"\u003e\u003cspan class=\"keyword\"\u003edef\u003c/span\u003e \u003cspan class=\"title\"\u003e__eq__\u003c/span\u003e\u003cspan class=\"params\"\u003e(self, other)\u003c/span\u003e:\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        \u003cspan class=\"keyword\"\u003eif\u003c/span\u003e len(self) != len(other):\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e            \u003cspan class=\"keyword\"\u003ereturn\u003c/span\u003e \u003cspan class=\"literal\"\u003eFalse\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        \u003cspan class=\"keyword\"\u003ereturn\u003c/span\u003e all(item \u003cspan class=\"keyword\"\u003ein\u003c/span\u003e other \u003cspan class=\"keyword\"\u003efor\u003c/span\u003e item \u003cspan class=\"keyword\"\u003ein\u003c/span\u003e self)\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e现在，开始讨论“等价”的概念。Python 有\u003cstrong\u003e哈希\u003c/strong\u003e（或：散列）的概念。 任何数据块的“散列”指的都是一个看起来非常随机的预计算值，但它在某种程度上可以用于标识该数据块。  \u003c/p\u003e\n\u003cp\u003e哈希有两个特定的属性:  \u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003cp\u003e相同的数据块总是有相同的哈希值。  \u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e即使只是稍微改变数据，也会返回一个完全不同的哈希值。  \u003c/p\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e这意味着，如果两个数据块具有相同的哈希值，那么它们也很可能具有相同的值。\u003c/p\u003e\n\u003cp\u003e比较哈希值是检查“是否存在”的一种非常快速的方法。 这就是字典和集合用来快速查找内部的值的方法：\u003c/p\u003e\n\u003cfigure class=\"highlight python\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e\u0026gt;\u0026gt;\u0026gt; \u003c/span\u003e\u003cspan class=\"keyword\"\u003eimport\u003c/span\u003e timeit\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e\u0026gt;\u0026gt;\u0026gt; \u003c/span\u003etimeit.timeit(\u003cspan class=\"string\"\u003e\u0026#39;999 in l\u0026#39;\u003c/span\u003e, setup=\u003cspan class=\"string\"\u003e\u0026#39;l = list(range(1000))\u0026#39;\u003c/span\u003e)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"number\"\u003e12.224023487000522\u003c/span\u003e   \u003cspan class=\"comment\"\u003e# 12 seconds to run a million times\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e\u0026gt;\u0026gt;\u0026gt; \u003c/span\u003etimeit.timeit(\u003cspan class=\"string\"\u003e\u0026#39;999 in s\u0026#39;\u003c/span\u003e, setup=\u003cspan class=\"string\"\u003e\u0026#39;s = set(range(1000))\u0026#39;\u003c/span\u003e)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"number\"\u003e0.06099735599855194\u003c/span\u003e  \u003cspan class=\"comment\"\u003e# 0.06 seconds for the same thing\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e注意：集合解决方案的运行速度比列表解决方案快数百倍!！这是因为它们使用哈希值作为“索引”的替代，如果相同哈希\u003cem\u003e的值\u003c/em\u003e已经存储在集合或字典中，Python 可以快速检查它是否是同一项。 这个过程可以非常即时地检查哈希值是否存在。\u003c/p\u003e\n\u003chr/\u003e\n\u003cp\u003e\u003cstrong\u003e补充知识：\u003c/strong\u003e关于哈希\u003c/p\u003e\n\u003cp\u003e在 Python中，所有相等的数值都具有相同的哈希值，这一点往往鲜为人知。\u003c/p\u003e\n\u003cfigure class=\"highlight python\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e\u0026gt;\u0026gt;\u0026gt; \u003c/span\u003ehash(\u003cspan class=\"number\"\u003e42\u003c/span\u003e) == hash(\u003cspan class=\"number\"\u003e42.0\u003c/span\u003e) == hash(\u003cspan class=\"number\"\u003e42\u003c/span\u003e+\u003cspan class=\"number\"\u003e0j\u003c/span\u003e)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"literal\"\u003eTrue\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e另一个事实是不可变对象，如字符串、元组和不可变集合，通过组合各项的哈希来生成它们自己的哈希。 这使得你只需通过编写 \u003ccode\u003ehash\u003c/code\u003e 函数就可以为类创建自定义哈希函数：\u003c/p\u003e\n\u003cfigure class=\"highlight python\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"class\"\u003e\u003cspan class=\"keyword\"\u003eclass\u003c/span\u003e \u003cspan class=\"title\"\u003eCar\u003c/span\u003e:\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"function\"\u003e\u003cspan class=\"keyword\"\u003edef\u003c/span\u003e \u003cspan class=\"title\"\u003e__init__\u003c/span\u003e\u003cspan class=\"params\"\u003e(self, color, wheels=\u003cspan class=\"number\"\u003e4\u003c/span\u003e)\u003c/span\u003e:\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        self.color = color\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        self.wheels = wheels\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"function\"\u003e\u003cspan class=\"keyword\"\u003edef\u003c/span\u003e \u003cspan class=\"title\"\u003e__hash__\u003c/span\u003e\u003cspan class=\"params\"\u003e(self)\u003c/span\u003e:\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        \u003cspan class=\"keyword\"\u003ereturn\u003c/span\u003e hash((self.color, self.wheels))\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e（补充知识结束）\u003c/p\u003e\n\u003chr/\u003e\n\u003c/section\u003e\n    \u003c!-- Tags START --\u003e\n    \n    \u003c!-- Tags END --\u003e\n    \u003c!-- NAV START --\u003e\n    \n  \u003cdiv class=\"nav-container\"\u003e\n    \u003c!-- reverse left and right to put prev and next in a more logic postition --\u003e\n    \n      \u003ca class=\"nav-left\" href=\"/2021/11/03/python-builtins-third/\"\u003e\n        \u003cspan class=\"nav-arrow\"\u003e← \u003c/span\u003e\n        \n          通过内置对象理解 Python（三）\n        \n      \u003c/a\u003e\n    \n    \n      \u003ca class=\"nav-right\" href=\"/2021/11/03/python-builtins-fifth/\"\u003e\n        \n          通过内置对象理解 Python（五）\n        \n        \u003cspan class=\"nav-arrow\"\u003e →\u003c/span\u003e\n      \u003c/a\u003e\n    \n  \u003c/div\u003e\n\n    \u003c!-- NAV END --\u003e\n    \u003c!-- 打赏 START --\u003e\n    \n      \u003cdiv class=\"money-like\"\u003e\n        \u003cdiv class=\"reward-btn\"\u003e\n          赏\n          \u003cspan class=\"money-code\"\u003e\n            \u003cspan class=\"alipay-code\"\u003e\n              \u003cdiv class=\"code-image\"\u003e\u003c/div\u003e\n              \u003cb\u003e使用支付宝打赏\u003c/b\u003e\n            \u003c/span\u003e\n            \u003cspan class=\"wechat-code\"\u003e\n              \u003cdiv class=\"code-image\"\u003e\u003c/div\u003e\n              \u003cb\u003e使用微信打赏\u003c/b\u003e\n            \u003c/span\u003e\n          \u003c/span\u003e\n        \u003c/div\u003e\n        \u003cp class=\"notice\"\u003e若你觉得我的文章对你有帮助，欢迎点击上方按钮对我打赏\u003c/p\u003e\n      \u003c/div\u003e\n    \n    \u003c!-- 打赏 END --\u003e\n    \u003c!-- 二维码 START --\u003e\n    \u003c!--% if (theme.qrcode) { %--\u003e\n      \u003cdiv class=\"qrcode\"\u003e\n        \u003c!--canvas id=\"share-qrcode\"\u003e\u003c/!--canvas--\u003e\n        \u003cimg src=\"https://public-tuchuang.oss-cn-hangzhou.aliyuncs.com/WechatIMG6_20200109154827.jpeg\" width=\"400\"/\u003e\n        \u003cp class=\"notice\"\u003e关注微信公众号，读文章、听课程，提升技能\u003c/p\u003e\n      \u003c/div\u003e\n    \u003c!--% } %--\u003e\n    \u003c!-- 二维码 END --\u003e\n    \n      \u003c!-- No Comment --\u003e\n    \n  \u003c/article\u003e",
  "Date": "2021-11-03T00:00:00Z",
  "Author": "老齐教室"
}