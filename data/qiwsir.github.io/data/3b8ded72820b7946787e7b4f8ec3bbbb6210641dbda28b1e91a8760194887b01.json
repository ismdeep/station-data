{
  "Source": "qiwsir.github.io",
  "Title": "用Python实现各类数学符号运算",
  "Link": "https://qiwsir.github.io/2020/03/28/python-math-symbole/",
  "Content": "\u003carticle class=\"post-article\"\u003e\n    \u003ch2\u003e用Python实现各类数学符号运算\u003c/h2\u003e\n    \u003cp class=\"post-date\"\u003e2020-03-28\u003c/p\u003e\n    \u003csection class=\"markdown-content\"\u003e\u003cp\u003e翻译：老齐\u003c/p\u003e\n\u003cp\u003e与本文相关图书推荐：《跟老齐学Python：数据分析》\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"https://public-tuchuang.oss-cn-hangzhou.aliyuncs.com/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90_20200327143255.png\" alt=\"\"/\u003e\u003c/p\u003e\n\u003chr/\u003e\n\u003cp\u003e在机器学习项目中，你肯定要在代码中实现各种运算，其中必然要用到各种数学符号，因此，必须了解并熟知如何实现。\u003c/p\u003e\n\u003cp\u003e本文列出常用的数学符号及其Python实现方法，一旦用到，就可以直接拷贝。\u003c/p\u003e\n\u003cp\u003e$$\\frac{1}{N}\\sum_{i=1}^N(y_i-\\hat{y_i})^2$$\u003c/p\u003e\n\u003ch3 id=\"索引\"\u003e\u003ca href=\"#索引\" class=\"headerlink\" title=\"索引\"\u003e\u003c/a\u003e索引\u003c/h3\u003e\u003cp\u003e$$x_i$$\u003c/p\u003e\n\u003cp\u003e这个符号用于表示向量中第几个值。\u003c/p\u003e\n\u003cfigure class=\"highlight plain\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003ex = [10, 20, 30]\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003ei = 0\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eprint(x[i]) # 10\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e还可以拓展到2维向量，乃至更多维度。\u003c/p\u003e\n\u003cp\u003e$$X_{ij}$$\u003c/p\u003e\n\u003cfigure class=\"highlight plain\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003ex = [ [10, 20, 30], [40, 50, 60] ]\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003ei = 0\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003ej = 1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eprint(x[i][j]) # 20\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003ch3 id=\"求和\"\u003e\u003ca href=\"#求和\" class=\"headerlink\" title=\"求和\"\u003e\u003c/a\u003e求和\u003c/h3\u003e\u003cp\u003e$$\\sum_{i=1}^Nx_i$$\u003c/p\u003e\n\u003cp\u003e这个符号的意思是对某一范围内的向量中的元素求和，上下标为范围。它等同于Python中对向量的索引从0到N-1进行循环，注意，如何用前面的$x_i$符号得到每个值得索引。\u003c/p\u003e\n\u003cfigure class=\"highlight plain\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003ex = [1, 2, 3, 4, 5]\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eresult = 0\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eN = len(x)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003efor i in range(N):\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    result = result + x[i]\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eprint(result)\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e上面的代码可以用内置函数简化：\u003c/p\u003e\n\u003cfigure class=\"highlight plain\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003ex = [1, 2, 3, 4, 5]\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eresult = sum(x)\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003ch3 id=\"PI\"\u003e\u003ca href=\"#PI\" class=\"headerlink\" title=\"PI\"\u003e\u003c/a\u003ePI\u003c/h3\u003e\u003cp\u003e$$\\prod_{i=1}^Nx_i$$\u003c/p\u003e\n\u003cp\u003e这个符号的意思是将向量中指定范围的元素求乘积（读作：pi，即字母π的大写形式），Python中的实现方法就是循环得到元素，然后计算乘积。\u003c/p\u003e\n\u003cfigure class=\"highlight plain\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003ex = [1, 2, 3, 4, 5]\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eresult = 1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eN = len(x)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003efor i in range(N):\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    result = result * x[i]\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eprint(result)\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003ch3 id=\"管道符\"\u003e\u003ca href=\"#管道符\" class=\"headerlink\" title=\"管道符\"\u003e\u003c/a\u003e管道符\u003c/h3\u003e\u003cp\u003e管道符（键盘上的竖线）有多种不同的含义，要具体看它的应用方式。\u003c/p\u003e\n\u003ch4 id=\"绝对值\"\u003e\u003ca href=\"#绝对值\" class=\"headerlink\" title=\"绝对值\"\u003e\u003c/a\u003e绝对值\u003c/h4\u003e\u003cp\u003e$$|X|$$\u003c/p\u003e\n\u003cp\u003e作为绝对值符号，返回该数值的绝对值。\u003c/p\u003e\n\u003cfigure class=\"highlight plain\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003ex = 10\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003ey = -20\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eabs(x) # 10\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eabs(y) # 20\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003ch4 id=\"范数\"\u003e\u003ca href=\"#范数\" class=\"headerlink\" title=\"范数\"\u003e\u003c/a\u003e范数\u003c/h4\u003e\u003cp\u003e$$||X||$$\u003c/p\u003e\n\u003cp\u003e范数，也称为向量的模（长），即向量的大小。Python中通过计算数组中每个值的平方和再开方得到。\u003c/p\u003e\n\u003cfigure class=\"highlight plain\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003ex = [1, 2, 3]\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003emath.sqrt(x[0]**2 + x[1]**2 + x[2]**2)\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003ch3 id=\"Epsilon\"\u003e\u003ca href=\"#Epsilon\" class=\"headerlink\" title=\"Epsilon\"\u003e\u003c/a\u003eEpsilon\u003c/h3\u003e\u003cp\u003e$$3\\in X$$\u003c/p\u003e\n\u003cp\u003e这是一个希腊字母（读如：\u003ccode\u003e[ˈepsɪlɑːn]\u003c/code\u003e），它用于检验某个元素是不是集合的一员，在Python中，用下面的方式实现：\u003c/p\u003e\n\u003cfigure class=\"highlight plain\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003eX = {1, 2, 3}\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3 in X\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003ch3 id=\"函数\"\u003e\u003ca href=\"#函数\" class=\"headerlink\" title=\"函数\"\u003e\u003c/a\u003e函数\u003c/h3\u003e\u003cp\u003e$$f:X \\to Y$$\u003c/p\u003e\n\u003cp\u003e这个符号表示函数中的X与Y的对应关系，Python中就是编写一个函数，X为参数，输出Y。\u003c/p\u003e\n\u003cfigure class=\"highlight plain\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003edef f(X):\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    Y = ...\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    return Y\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e有时候你也会遇到下面的表述方式，用R替代X、Y：\u003c/p\u003e\n\u003cp\u003e$$f:R \\to R$$\u003c/p\u003e\n\u003cp\u003eR意味着输入输出都是实数，比如整数、浮点数、无理数、有理数等。Python中当然可以表示：\u003c/p\u003e\n\u003cfigure class=\"highlight plain\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003ex = 1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003ey = 2.5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003ez = math.pi\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e还有可能遇到下面的形式：\u003c/p\u003e\n\u003cp\u003e$$f:R^d \\to R$$\u003c/p\u003e\n\u003cp\u003e$R^d$意味着实数组成的d维度向量（\u003cstrong\u003e译者注\u003c/strong\u003e：实数域的d维子空间）。\u003c/p\u003e\n\u003cp\u003e假设d=2，Python中可以用Numpy提供的函数，例如下面代码中的求和函数，返回的是一个数值，它实现了$R^d$ 到 $R$的映射\u003c/p\u003e\n\u003cfigure class=\"highlight plain\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003eX = [1, 2]\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003ef = np.sum\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eY = f(X)\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e\u003cstrong\u003e译者注：\u003c/strong\u003e 严格来讲，本文上面的示例不很准确。\u003ccode\u003e[[1], [2]]\u003c/code\u003e，这样的才是严格的2维。\u003c/p\u003e\n\u003ch3 id=\"张量\"\u003e\u003ca href=\"#张量\" class=\"headerlink\" title=\"张量\"\u003e\u003c/a\u003e张量\u003c/h3\u003e\u003ch4 id=\"转置\"\u003e\u003ca href=\"#转置\" class=\"headerlink\" title=\"转置\"\u003e\u003c/a\u003e转置\u003c/h4\u003e\u003cp\u003e$$X^T$$\u003c/p\u003e\n\u003cp\u003e这个符号表示的是行列转换，Python中用下面方法实现：\u003c/p\u003e\n\u003cfigure class=\"highlight plain\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003eX = [[1, 2, 3], \u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    [4, 5, 6]]\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003enp.transpose(X)\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e输出结果显示行列交换了位置。\u003c/p\u003e\n\u003cfigure class=\"highlight plain\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e[[1, 4], \u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e [2, 5],\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e [3, 6]]\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003ch4 id=\"乘法\"\u003e\u003ca href=\"#乘法\" class=\"headerlink\" title=\"乘法\"\u003e\u003c/a\u003e乘法\u003c/h4\u003e\u003cp\u003e$$X \\bullet Y$$\u003c/p\u003e\n\u003cp\u003e张量间的乘法，在Python中用\u003ccode\u003enp.multiply\u003c/code\u003e实现：\u003c/p\u003e\n\u003cfigure class=\"highlight plain\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003ex = [[1, 2], \u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    [3, 4]]\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003ey = [[2, 2], \u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    [2, 2]]\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003ez = np.multiply(x, y)\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e输出是：\u003c/p\u003e\n\u003cfigure class=\"highlight plain\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e[[2, 4]],\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e[[6, 8]]\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003ch4 id=\"点积\"\u003e\u003ca href=\"#点积\" class=\"headerlink\" title=\"点积\"\u003e\u003c/a\u003e点积\u003c/h4\u003e\u003cp\u003e$$XY$$\u003cbr/\u003e$$X.Y$$\u003c/p\u003e\n\u003cp\u003e点积的结果是每个序列中对应数字积的和。\u003c/p\u003e\n\u003cfigure class=\"highlight plain\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003eX = [1, 2, 3]\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eY = [4, 5, 6]\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003edot = sum([i*j for i, j in zip(X, Y)])\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e# 1*4 + 2*5 + 3*6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e# 32\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003ch4 id=\"有帽子的符号\"\u003e\u003ca href=\"#有帽子的符号\" class=\"headerlink\" title=\"有帽子的符号\"\u003e\u003c/a\u003e有帽子的符号\u003c/h4\u003e\u003cp\u003e$$\\hat{x}$$\u003c/p\u003e\n\u003cp\u003e向量上有一个小帽子的符号，表示的是向量中的每个分量除以向量的长度。\u003c/p\u003e\n\u003cfigure class=\"highlight plain\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003ex = [1, 2, 3]\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003elength = math.sqrt(sum([e**2 for e in x]))\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003ex_hat = [e/length for e in x]\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e如此所得向量的大小就是1，并且方向不变。\u003c/p\u003e\n\u003cfigure class=\"highlight plain\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003emath.sqrt(sum([e**2 for e in x_hat]))\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e# 1.0\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003ch3 id=\"感叹号\"\u003e\u003ca href=\"#感叹号\" class=\"headerlink\" title=\"感叹号\"\u003e\u003c/a\u003e感叹号\u003c/h3\u003e\u003cp\u003e$$x!$$\u003c/p\u003e\n\u003cp\u003e用感叹号表示阶乘，即从1开始，一直到该数字的所有整数的乘积，在Python中，这样计算：\u003c/p\u003e\n\u003cfigure class=\"highlight plain\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003ex = 5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003efact = 1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003efor i in range(x, 0, -1):\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    fact = fact * i\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eprint(fact)\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e也可以用内置模块中的函数实现：\u003c/p\u003e\n\u003cfigure class=\"highlight plain\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003eimport math\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003emath.factorial(x)\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e输出是：\u003c/p\u003e\n\u003cfigure class=\"highlight plain\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e# 5*4*3*2*1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e120\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e原文链接：\u003ca href=\"https://amitness.com/2019/08/math-for-programmers/\" target=\"_blank\" rel=\"noopener\"\u003ehttps://amitness.com/2019/08/math-for-programmers/\u003c/a\u003e\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e搜索技术问答的公众号：老齐教室\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cblockquote\u003e\n\u003cp\u003e在公众号中回复：\u003cstrong\u003e老齐\u003c/strong\u003e，可查看所有文章、书籍、课程。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003c/section\u003e\n    \u003c!-- Tags START --\u003e\n    \n      \u003cdiv class=\"tags\"\u003e\n        \u003cspan\u003eTags:\u003c/span\u003e\n        \n  \u003ca href=\"/tags#Python 数学计算\"\u003e\n    \u003cspan class=\"tag-code\"\u003ePython 数学计算\u003c/span\u003e\n  \u003c/a\u003e\n\n      \u003c/div\u003e\n    \n    \u003c!-- Tags END --\u003e\n    \u003c!-- NAV START --\u003e\n    \n  \u003cdiv class=\"nav-container\"\u003e\n    \u003c!-- reverse left and right to put prev and next in a more logic postition --\u003e\n    \n      \u003ca class=\"nav-left\" href=\"/2020/03/25/python-underscore/\"\u003e\n        \u003cspan class=\"nav-arrow\"\u003e← \u003c/span\u003e\n        \n          初学Python语言者必须理解的下划线\n        \n      \u003c/a\u003e\n    \n    \n      \u003ca class=\"nav-right\" href=\"/2020/03/30/ml-knn/\"\u003e\n        \n          写给小白：K近邻算法入门\n        \n        \u003cspan class=\"nav-arrow\"\u003e →\u003c/span\u003e\n      \u003c/a\u003e\n    \n  \u003c/div\u003e\n\n    \u003c!-- NAV END --\u003e\n    \u003c!-- 打赏 START --\u003e\n    \n      \u003cdiv class=\"money-like\"\u003e\n        \u003cdiv class=\"reward-btn\"\u003e\n          赏\n          \u003cspan class=\"money-code\"\u003e\n            \u003cspan class=\"alipay-code\"\u003e\n              \u003cdiv class=\"code-image\"\u003e\u003c/div\u003e\n              \u003cb\u003e使用支付宝打赏\u003c/b\u003e\n            \u003c/span\u003e\n            \u003cspan class=\"wechat-code\"\u003e\n              \u003cdiv class=\"code-image\"\u003e\u003c/div\u003e\n              \u003cb\u003e使用微信打赏\u003c/b\u003e\n            \u003c/span\u003e\n          \u003c/span\u003e\n        \u003c/div\u003e\n        \u003cp class=\"notice\"\u003e若你觉得我的文章对你有帮助，欢迎点击上方按钮对我打赏\u003c/p\u003e\n      \u003c/div\u003e\n    \n    \u003c!-- 打赏 END --\u003e\n    \u003c!-- 二维码 START --\u003e\n    \u003c!--% if (theme.qrcode) { %--\u003e\n      \u003cdiv class=\"qrcode\"\u003e\n        \u003c!--canvas id=\"share-qrcode\"\u003e\u003c/!--canvas--\u003e\n        \u003cimg src=\"https://public-tuchuang.oss-cn-hangzhou.aliyuncs.com/WechatIMG6_20200109154827.jpeg\" width=\"400\"/\u003e\n        \u003cp class=\"notice\"\u003e关注微信公众号，读文章、听课程，提升技能\u003c/p\u003e\n      \u003c/div\u003e\n    \u003c!--% } %--\u003e\n    \u003c!-- 二维码 END --\u003e\n    \n      \u003c!-- No Comment --\u003e\n    \n  \u003c/article\u003e",
  "Date": "2020-03-28T00:00:00Z",
  "Author": "老齐教室"
}