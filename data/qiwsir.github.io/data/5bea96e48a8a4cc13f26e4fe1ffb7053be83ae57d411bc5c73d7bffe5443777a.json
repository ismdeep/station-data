{
  "Source": "qiwsir.github.io",
  "Title": "青少年编程：用Python探究数学（3）",
  "Link": "https://qiwsir.github.io/2020/05/30/child-python-three/",
  "Content": "\u003carticle class=\"post-article\"\u003e\n    \u003ch2\u003e青少年编程：用Python探究数学（3）\u003c/h2\u003e\n    \u003cp class=\"post-date\"\u003e2020-05-30\u003c/p\u003e\n    \u003csection class=\"markdown-content\"\u003e\u003cp\u003e在上一篇中，使用for循环绘制了正多边形。本篇要在此基础上，进一步优化上一篇的程序。\u003c/p\u003e\n\u003cp\u003e从数学的角度来讲，正多边形（或者说正 $n$ 边形，$n \\ge 3$）的外角和是 $360°$，那么每个外角的度数就是 $\\frac{360°}{n}$，其中 $n$ 为多边形的边。根据上一篇所获得的经验，这个外角的度数，正好是小海龟在任何一点向右转的度数。\u003c/p\u003e\n\u003cp\u003e有了以上的数学认识，我们就可以轻松绘制任意正多边形了。\u003c/p\u003e\n\u003cp\u003e为了能让我们的程序更“智能”一些，先了解一个Python的内置函数：\u003ccode\u003einput()\u003c/code\u003e，这个函数式用来获得用户通过键盘输入的字符。打开IDLE，会首先看到下面图所示状态：\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"https://public-tuchuang.oss-cn-hangzhou.aliyuncs.com/WX20200530-093353_20200530093424.png\" alt=\"\"/\u003e\u003c/p\u003e\n\u003cp\u003e这种状态，我们称之为\u003cstrong\u003e交互模式\u003c/strong\u003e，也就是允许我们在提示符后面输入一行代码，然后敲回车，计算机（其实是Python解析器）就会执行这行代码。例如：\u003c/p\u003e\n\u003cfigure class=\"highlight python\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e\u0026gt;\u0026gt;\u0026gt; \u003c/span\u003e\u003cspan class=\"number\"\u003e3\u003c/span\u003e + \u003cspan class=\"number\"\u003e4\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"number\"\u003e7\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e在交互模式中，输入 \u003ccode\u003e3+4\u003c/code\u003e 之后，敲回车，就返回了这条语句的计算结果。类似地，如果执行 \u003ccode\u003einput()\u003c/code\u003e函数，会是这样：\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"https://public-tuchuang.oss-cn-hangzhou.aliyuncs.com/WX20200530-094305_20200530094350.png\" alt=\"\"/\u003e\u003c/p\u003e\n\u003cp\u003e在\u003ccode\u003einput()\u003c/code\u003e函数里面的文字，是提示语（绿色文字），也可以不写。注意，提示语的外围，是用英文状态下的引号包裹，必须是英文状态下的引号——英文的引号，可以是单引号，也可以是双引号，在引号包括下的东西称为\u003cstrong\u003e字符串\u003c/strong\u003e。\u003c/p\u003e\n\u003cp\u003e执行了上面的函数之后，就出现了下面一行的提示语（蓝色文字），然后就是光标，等待用户通过键盘输入内容。例如按下键盘上的数字7，然后敲回车键，得到下图显示的效果：\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"https://public-tuchuang.oss-cn-hangzhou.aliyuncs.com/WX20200530-094322_20200530094350.png\" alt=\"\"/\u003e\u003c/p\u003e\n\u003cp\u003e这说明\u003ccode\u003einput()\u003c/code\u003e函数已经捕获了我们通过键盘输入的数字，并且返回了\u003ccode\u003e\u0026#39;7\u0026#39;\u003c/code\u003e，这是一个\u003cstrong\u003e字符串\u003c/strong\u003e——符合前面提到的字符串的特点，用引号包裹。\u003c/p\u003e\n\u003cp\u003e为了进一步理解\u003ccode\u003einput()\u003c/code\u003e的作用，再执行下面的代码：\u003c/p\u003e\n\u003cfigure class=\"highlight python\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e8\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e9\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e\u0026gt;\u0026gt;\u0026gt; \u003c/span\u003ea = input(\u003cspan class=\"string\"\u003e\u0026#39;please input a number:\u0026#39;\u003c/span\u003e)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eplease input a number:\u003cspan class=\"number\"\u003e4\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e\u0026gt;\u0026gt;\u0026gt; \u003c/span\u003ea\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"string\"\u003e\u0026#39;4\u0026#39;\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e\u0026gt;\u0026gt;\u0026gt; \u003c/span\u003ea + \u003cspan class=\"number\"\u003e3\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eTraceback (most recent call last):\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  File \u003cspan class=\"string\"\u003e\u0026#34;\u0026lt;pyshell#4\u0026gt;\u0026#34;\u003c/span\u003e, line \u003cspan class=\"number\"\u003e1\u003c/span\u003e, \u003cspan class=\"keyword\"\u003ein\u003c/span\u003e \u0026lt;module\u0026gt;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    a + \u003cspan class=\"number\"\u003e3\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eTypeError: can only concatenate str (\u003cspan class=\"keyword\"\u003enot\u003c/span\u003e \u003cspan class=\"string\"\u003e\u0026#34;int\u0026#34;\u003c/span\u003e) to str\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e第1行中，\u003ccode\u003ea = input(\u0026#39;please input a number:\u0026#39;)\u003c/code\u003e的含义是，将捕获的键盘输入字符，用变量\u003ccode\u003ea\u003c/code\u003e引用，在第3行，就显示了\u003ccode\u003ea\u003c/code\u003e这边变量引用的内容，是通过键盘输入的数字\u003ccode\u003e4\u003c/code\u003e，但是，注意，它是一个字符串。\u003c/p\u003e\n\u003cp\u003e执行第5行，报错了。注意阅读报错信息——一定要有耐心阅读报错信息，\u003ccode\u003ecan only concatenate str (not \u0026#34;int\u0026#34;) to str\u003c/code\u003e的意思是不能将字符串和整数连接起来。在\u003ccode\u003ea + 3\u003c/code\u003e中，变量\u003ccode\u003ea\u003c/code\u003e引用的对象是字符串，而\u003ccode\u003e3\u003c/code\u003e是一个整数，这两个是不能相加的。在Python中，必须是同种类型的才能相加——不仅仅是相加，其他运算也是如此。怎么办？可以进行类型转化。下面演示的就是把字符串转化为整数的方法。\u003c/p\u003e\n\u003cfigure class=\"highlight python\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e\u0026gt;\u0026gt;\u0026gt; \u003c/span\u003eint(a) + \u003cspan class=\"number\"\u003e3\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"number\"\u003e7\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e\u003ccode\u003eint(a)\u003c/code\u003e就是把字符串转变为了整数，然后就能跟整数3相加了。\u003c/p\u003e\n\u003cp\u003e打开前面使用过的文件\u003ccode\u003emyturtle.py\u003c/code\u003e，对其中代码做如下修改：\u003c/p\u003e\n\u003cfigure class=\"highlight python\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e8\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e9\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"keyword\"\u003efrom\u003c/span\u003e turtle \u003cspan class=\"keyword\"\u003eimport\u003c/span\u003e *\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eshape(\u003cspan class=\"string\"\u003e\u0026#34;turtle\u0026#34;\u003c/span\u003e)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003en = input(\u003cspan class=\"string\"\u003e\u0026#34;请输入多边形的边数：\u0026#34;\u003c/span\u003e)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003en = int(n)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003ealpha = \u003cspan class=\"number\"\u003e360\u003c/span\u003e / n\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"keyword\"\u003efor\u003c/span\u003e i \u003cspan class=\"keyword\"\u003ein\u003c/span\u003e range(n):\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    forward(\u003cspan class=\"number\"\u003e100\u003c/span\u003e)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    right(alpha)\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e这段代码中，第4行使用了刚刚学习的\u003ccode\u003einput()\u003c/code\u003e函数，目的就是用户可以通过键盘，输入想要绘制的多边形的边数。注意第5行，根据前面讲过的，要将在第4行获得的键盘输入的数字转化为整数，然后第6行才能做除法，这样就得到了该正n边形的外角的度数，将它用于第9行，作为\u003ccode\u003eright()\u003c/code\u003e的参数。\u003c/p\u003e\n\u003cp\u003e另外，第7行，\u003ccode\u003erange()\u003c/code\u003e内的参数，也要修改，n边形，就要循环n次。\u003c/p\u003e\n\u003cp\u003e保存文件，执行。注意观察显示的界面，那只小海龟趴着不动，为什么？再观察交互模式，其实是等着用户输入边数呢。\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"https://public-tuchuang.oss-cn-hangzhou.aliyuncs.com/t1_20200530102547.png\" alt=\"\"/\u003e\u003c/p\u003e\n\u003cp\u003e比如输入：10，然后回车。就会看到小海龟按照程序中指定的方式画图了，一个正10边形跃然“屏”上。\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"https://public-tuchuang.oss-cn-hangzhou.aliyuncs.com/t2_20200530103302.png\" alt=\"\"/\u003e\u003c/p\u003e\n\u003cp\u003e在上面的程序中，我们实现了正多边形边数的键盘输入，那么，正多边形的边长能不能通过键盘输入呢？读者可以思考一下，然后尝试。下面的代码供参考。\u003c/p\u003e\n\u003cfigure class=\"highlight python\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e8\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e9\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e10\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e11\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"keyword\"\u003efrom\u003c/span\u003e turtle \u003cspan class=\"keyword\"\u003eimport\u003c/span\u003e *\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eshape(\u003cspan class=\"string\"\u003e\u0026#34;turtle\u0026#34;\u003c/span\u003e)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003en = input(\u003cspan class=\"string\"\u003e\u0026#34;请输入多边形的边数：\u0026#34;\u003c/span\u003e)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003elength = input(\u003cspan class=\"string\"\u003e\u0026#34;请输入多边形的边长：\u0026#34;\u003c/span\u003e)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003en = int(n)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003elength = int(length)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003ealpha = \u003cspan class=\"number\"\u003e360\u003c/span\u003e / n\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"keyword\"\u003efor\u003c/span\u003e i \u003cspan class=\"keyword\"\u003ein\u003c/span\u003e range(n):\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    forward(length)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    right(alpha)\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e我执行这个程序，分别输入了下图所示的两个值：\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"https://public-tuchuang.oss-cn-hangzhou.aliyuncs.com/t3_20200530104113.png\" alt=\"\"/\u003e\u003c/p\u003e\n\u003cp\u003e我让小海龟画一个正100边的图形，结果什么样？\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"https://public-tuchuang.oss-cn-hangzhou.aliyuncs.com/t4_20200530104228.png\" alt=\"\"/\u003e\u003c/p\u003e\n\u003cp\u003e怎么看起来像圆？不过仔细观察，会发现，没有圆那么圆滑，不是圆，是多边形。\u003c/p\u003e\n\u003cp\u003e“看起来像圆”，这说明当多边形的边数很多的时候，这个多边形就接近圆了。在数学上，人们很早就研究了正多边形和它的外接圆的关系，也发现了这样的规律，当多边形的边数阅读，该多边形与外接圆越接近——这是一种近似地计算圆的周长的方法。中国古代，把这称之为“割圆术”，魏晋时期数学家刘徽于公元263年撰写的《九章算术注》有详细的记载。对此有兴趣深入了解的同学，可以查阅有关资料。\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"https://public-tuchuang.oss-cn-hangzhou.aliyuncs.com/01300000171148121695984945066_20200530105003.jpg\" alt=\"\"/\u003e\u003c/p\u003e\n\u003cp\u003e在本篇中，主要学习使用\u003ccode\u003einput()\u003c/code\u003e函数，实现了通过键盘输入数字，绘制任意边长和边数的多边形，并在最后实现了“割圆术”。读者不妨发挥自己的想象力，修改程序，看看还有什么新发现？\u003c/p\u003e\n\u003chr/\u003e\n\u003cp style=\"text-align:center\"\u003e专注于\u003cstrong\u003e软件和AI\u003c/strong\u003e的公众号\u003c/p\u003e\n\u003cp style=\"text-align:center\"\u003e\u003cstrong\u003e老齐教室\u003c/strong\u003e\u003c/p\u003e\n\n\n\n\u003c/section\u003e\n    \u003c!-- Tags START --\u003e\n    \n    \u003c!-- Tags END --\u003e\n    \u003c!-- NAV START --\u003e\n    \n  \u003cdiv class=\"nav-container\"\u003e\n    \u003c!-- reverse left and right to put prev and next in a more logic postition --\u003e\n    \n      \u003ca class=\"nav-left\" href=\"/2020/05/27/child-python-two/\"\u003e\n        \u003cspan class=\"nav-arrow\"\u003e← \u003c/span\u003e\n        \n          青少年编程：用Python探究数学（2）\n        \n      \u003c/a\u003e\n    \n    \n      \u003ca class=\"nav-right\" href=\"/2020/06/01/lambda-in-python/\"\u003e\n        \n          Python中的4个Lambda函数示例\n        \n        \u003cspan class=\"nav-arrow\"\u003e →\u003c/span\u003e\n      \u003c/a\u003e\n    \n  \u003c/div\u003e\n\n    \u003c!-- NAV END --\u003e\n    \u003c!-- 打赏 START --\u003e\n    \n      \u003cdiv class=\"money-like\"\u003e\n        \u003cdiv class=\"reward-btn\"\u003e\n          赏\n          \u003cspan class=\"money-code\"\u003e\n            \u003cspan class=\"alipay-code\"\u003e\n              \u003cdiv class=\"code-image\"\u003e\u003c/div\u003e\n              \u003cb\u003e使用支付宝打赏\u003c/b\u003e\n            \u003c/span\u003e\n            \u003cspan class=\"wechat-code\"\u003e\n              \u003cdiv class=\"code-image\"\u003e\u003c/div\u003e\n              \u003cb\u003e使用微信打赏\u003c/b\u003e\n            \u003c/span\u003e\n          \u003c/span\u003e\n        \u003c/div\u003e\n        \u003cp class=\"notice\"\u003e若你觉得我的文章对你有帮助，欢迎点击上方按钮对我打赏\u003c/p\u003e\n      \u003c/div\u003e\n    \n    \u003c!-- 打赏 END --\u003e\n    \u003c!-- 二维码 START --\u003e\n    \u003c!--% if (theme.qrcode) { %--\u003e\n      \u003cdiv class=\"qrcode\"\u003e\n        \u003c!--canvas id=\"share-qrcode\"\u003e\u003c/!--canvas--\u003e\n        \u003cimg src=\"https://public-tuchuang.oss-cn-hangzhou.aliyuncs.com/WechatIMG6_20200109154827.jpeg\" width=\"400\"/\u003e\n        \u003cp class=\"notice\"\u003e关注微信公众号，读文章、听课程，提升技能\u003c/p\u003e\n      \u003c/div\u003e\n    \u003c!--% } %--\u003e\n    \u003c!-- 二维码 END --\u003e\n    \n      \u003c!-- No Comment --\u003e\n    \n  \u003c/article\u003e",
  "Date": "2020-05-30T00:00:00Z",
  "Author": "老齐教室"
}