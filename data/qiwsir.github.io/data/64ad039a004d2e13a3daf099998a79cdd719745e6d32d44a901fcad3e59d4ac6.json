{
  "Source": "qiwsir.github.io",
  "Title": "Python中的 `!=`与`is not`不同",
  "Link": "https://qiwsir.github.io/2020/02/09/python-is-or-not/",
  "Content": "\u003carticle class=\"post-article\"\u003e\n    \u003ch2\u003ePython中的 `!=`与`is not`不同\u003c/h2\u003e\n    \u003cp class=\"post-date\"\u003e2020-02-09\u003c/p\u003e\n    \u003csection class=\"markdown-content\"\u003e\u003cp\u003e翻译：老齐\u003c/p\u003e\n\u003cp\u003e与本文内容配套的图书：《跟老齐学Python：轻松入门》《Python大学实用教程》，各大电商平台有售。\u003c/p\u003e\n\u003cimg src=\"https://public-tuchuang.oss-cn-hangzhou.aliyuncs.com/%E8%BD%BB%E6%9D%BE%E5%85%A5%E9%97%A8_20200122130623.png\" style=\"zoom:50%;\"/\u003e\n\n\u003cimg src=\"https://public-tuchuang.oss-cn-hangzhou.aliyuncs.com/my_book4_20200116132005.png\" style=\"zoom: 50%;\"/\u003e\n\n\u003chr/\u003e\n\u003cp\u003ePython中的\u003ccode\u003eis\u003c/code\u003e和\u003ccode\u003e==\u003c/code\u003e是不一样的。使用\u003ccode\u003eis\u003c/code\u003e可以比较数字，代码也正常运行。也有人说\u003ccode\u003eis\u003c/code\u003e比\u003ccode\u003e==\u003c/code\u003e要更快，或者你可能觉得它看起来更像Python。然而，重要的是要记住这些运算符的行为并不完全相同。\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003e==\u003c/code\u003e用于比较两个对象的值是否相等，而\u003ccode\u003eis\u003c/code\u003e检查两个变量是否指向内存中的同一个对象。在大多数情况下，这意味着你应该使用\u003ccode\u003e==\u003c/code\u003e和\u003ccode\u003e！=\u003c/code\u003e，除非与\u003ccode\u003eNone\u003c/code\u003e进行比较。\u003c/p\u003e\n\u003cp\u003e在本文中，你将学习：\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e对象相等和同一性的区别是什么\u003c/li\u003e\n\u003cli\u003e何时使用\u003ccode\u003e==\u003c/code\u003e和\u003ccode\u003eis\u003c/code\u003e比较对象\u003c/li\u003e\n\u003cli\u003e这些Python运算符的原理是什么\u003c/li\u003e\n\u003cli\u003e为什么使用\u003ccode\u003eis\u003c/code\u003e和\u003ccode\u003eis not\u003c/code\u003e比较值会导致意外\u003c/li\u003e\n\u003cli\u003e如何编写自定义的\u003ccode\u003e__eq__()\u003c/code\u003e类方法来定义相等运算符行为\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"介绍is-和is-not的应用\"\u003e\u003ca href=\"#介绍is-和is-not的应用\" class=\"headerlink\" title=\"介绍is 和is not的应用\"\u003e\u003c/a\u003e介绍\u003ccode\u003eis\u003c/code\u003e 和\u003ccode\u003eis not\u003c/code\u003e的应用\u003c/h2\u003e\u003cp\u003e\u003ccode\u003eis\u003c/code\u003e 和\u003ccode\u003eis not\u003c/code\u003e用来比较两个对象。在CPython中，比较的是对象的内存地址。Python中的一切都是对象，每个对象都存储在特定的内存位置， \u003ccode\u003eis\u003c/code\u003e和\u003ccode\u003eis not\u003c/code\u003e‘检查两个变量是否引用内存中的同一个对象。\u003c/p\u003e\n\u003cp\u003e注意: 记住，具有相同值的对象可能存储在不同的内存地址中。\u003c/p\u003e\n\u003cp\u003e你可以使用\u003ccode\u003eid()\u003c/code\u003e 来检查一个对象的内存地址:\u003c/p\u003e\n\u003cfigure class=\"highlight plain\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e8\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e9\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e10\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e11\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; help(id)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eHelp on built-in function id in module builtins:\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eid(obj, /)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    Return the identity of an object.\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    This is guaranteed to be unique among simultaneously existing objects.\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    (CPython uses the object\u0026#39;s memory address.)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; id(id)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2570892442576\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e最后一行显示存储内置函数\u003ccode\u003eid\u003c/code\u003e本身的内存地址。\u003c/p\u003e\n\u003cp\u003e通常，具有相同值的对象在默认情况下具有相同的id。例如，数字-5到256在CPython中被保存，每个数字都存储在内存中单一且固定的位置，这为常用整数节省了内存。\u003c/p\u003e\n\u003cp\u003e你可以使用\u003ccode\u003esys.intern()\u003c/code\u003e来保存字符串以提高性能，此函数允许你比较它们的内存地址，而不是对字符串里的字符进行逐个比较：\u003c/p\u003e\n\u003cfigure class=\"highlight plain\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e8\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e9\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e10\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e11\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e12\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e13\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e14\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e15\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e16\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e17\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e18\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; from sys import intern\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; a = \u0026#39;hello world\u0026#39;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; b = \u0026#39;hello world\u0026#39;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; a is b\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eFalse\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; id(a)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e1603648396784\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; id(b)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e1603648426160\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; a = intern(a)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; b = intern(b)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; a is b\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eTrue\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; id(a)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e1603648396784\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; id(b)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e1603648396784\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e变量\u003ccode\u003ea\u003c/code\u003e和\u003ccode\u003eb\u003c/code\u003e最初指向内存中的两个不同对象，如它们的不同id所示。使用\u003ccode\u003eintern\u003c/code\u003e后，\u003ccode\u003ea\u003c/code\u003e和\u003ccode\u003eb\u003c/code\u003e则指向内存中的同一对象。在原来的操作中，两个\u003ccode\u003e\u0026#39;hello world\u0026#39;\u003c/code\u003e分别在新的内存位置创建对象，但是，对同样的字符串执行\u003ccode\u003eintern\u003c/code\u003e后，后面所创建的字符串所指向的内存地址与第一个\u003ccode\u003e\u0026#39;hello world\u0026#39;\u003c/code\u003e的内存地址相同。\u003c/p\u003e\n\u003cp\u003e注意：即使对象的内存地址在任何给定的时间都是唯一的，但这个内存地址在同一代码的不同运行过程中是不同的，并且取决于CPython的版本和运行代码的计算机。\u003c/p\u003e\n\u003cp\u003e默认情况下，具有\u003ccode\u003eintern\u003c/code\u003e效果的对象是\u003ccode\u003eNone\u003c/code\u003e、\u003ccode\u003eTrue\u003c/code\u003e、\u003ccode\u003eFalse\u003c/code\u003e和简单字符串。请记住，大多数情况下，具有相同值的不同对象将存储在不同的内存地址中，这意味着你不应该使用\u003ccode\u003eis\u003c/code\u003e来比较值。\u003c/p\u003e\n\u003ch3 id=\"存储整数\"\u003e\u003ca href=\"#存储整数\" class=\"headerlink\" title=\"存储整数\"\u003e\u003c/a\u003e存储整数\u003c/h3\u003e\u003cp\u003ePython将常用的值（例如，整数-5到256）默认保存在内存中，从而节省内存开支。下面的代码向你展示了为什么只有一些整数具有固定的内存地址：\u003c/p\u003e\n\u003cfigure class=\"highlight plain\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e8\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e9\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e10\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e11\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e12\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e13\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e14\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e15\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e16\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e17\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e18\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; a = 256\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; b = 256\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; a is b\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eTrue\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; id(a)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e1638894624\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; id(b)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e1638894624\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; a = 257\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; b = 257\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; a is b\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eFalse\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; id(a)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2570926051952\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; id(b)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2570926051984\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e最初，\u003ccode\u003ea\u003c/code\u003e和\u003ccode\u003eb\u003c/code\u003e引用内存中的同一个存储对象，但当它们的值超出常用整数的范围（从-5到256）时，它们就存储在不同的内存地址中。\u003c/p\u003e\n\u003ch3 id=\"当多个变量引用同一对象时\"\u003e\u003ca href=\"#当多个变量引用同一对象时\" class=\"headerlink\" title=\"当多个变量引用同一对象时\"\u003e\u003c/a\u003e当多个变量引用同一对象时\u003c/h3\u003e\u003cp\u003e用赋值运算符（\u003ccode\u003e=\u003c/code\u003e）使一个变量等于另一个变量时，可以使这些变量指向内存中的同一对象。这可能会导致可变对象出现意外行为：\u003c/p\u003e\n\u003cfigure class=\"highlight plain\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e8\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e9\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e10\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e11\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e12\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e13\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e14\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e15\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e16\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e17\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; a = [1, 2, 3]\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; b = a\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; a\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e[1, 2, 3]\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; b\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e[1, 2, 3]\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; a.append(4)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; a\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e[1, 2, 3, 4]\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; b\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e[1, 2, 3, 4]\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; id(a)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2570926056520\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; id(b)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2570926056520\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e刚才发生了什么? 你向\u003ccode\u003ea\u003c/code\u003e 添加了一个新元素，但是现在\u003ccode\u003eb\u003c/code\u003e也包含了这个元素! 在\u003ccode\u003eb = a\u003c/code\u003e这一行，设置b指向与a相同的内存地址，这样两个变量就都引用相同的对象。\u003c/p\u003e\n\u003cp\u003e如果你独立地定义这些列表，那么它们就被存储在不同的内存地址中，并独立地运行:\u003c/p\u003e\n\u003cfigure class=\"highlight plain\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e8\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; a = [1, 2, 3]\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; b = [1, 2, 3]\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; a is b\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eFalse\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; id(a)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2356388925576\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; id(b)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2356388952648\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e因为\u003ccode\u003ea\u003c/code\u003e和\u003ccode\u003eb\u003c/code\u003e现在引用内存中的不同对象，所以更改一个对象不会影响另一个对象。\u003c/p\u003e\n\u003ch2 id=\"用-和-比较对象\"\u003e\u003ca href=\"#用-和-比较对象\" class=\"headerlink\" title=\"用==和!=比较对象\"\u003e\u003c/a\u003e用\u003ccode\u003e==\u003c/code\u003e和\u003ccode\u003e!=\u003c/code\u003e比较对象\u003c/h2\u003e\u003cp\u003e回想一下，具有相同值的对象通常存储在不同的内存地址中。如果要检查两个对象是否具有相同的值，而不管它们存储在内存中的位置，使用运算符\u003ccode\u003e=\u003c/code\u003e和\u003ccode\u003e！=\u003c/code\u003e。在绝大多数情况下，这就是你想做的。\u003c/p\u003e\n\u003ch3 id=\"当对象副本相等但不相同时\"\u003e\u003ca href=\"#当对象副本相等但不相同时\" class=\"headerlink\" title=\"当对象副本相等但不相同时\"\u003e\u003c/a\u003e当对象副本相等但不相同时\u003c/h3\u003e\u003cp\u003e在下面的示例中，\u003ccode\u003eb\u003c/code\u003e是\u003ccode\u003ea\u003c/code\u003e的副本（\u003ccode\u003ea\u003c/code\u003e是可变对象，如列表或字典）。两个变量都有相同的值，但它们将各自存储在不同的内存地址：\u003c/p\u003e\n\u003cfigure class=\"highlight plain\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e8\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e9\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e10\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e11\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e12\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e13\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e14\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e15\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e16\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; a = [1, 2, 3]\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; b = a.copy()\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; a\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e[1, 2, 3]\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; b\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e[1, 2, 3]\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; a == b\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eTrue\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; a is b\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eFalse\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; id(a)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2570926058312\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; id(b)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2570926057736\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e\u003ccode\u003ea\u003c/code\u003e 和 \u003ccode\u003eb\u003c/code\u003e 现在存储在不同的内存地址，因此\u003ccode\u003ea is b\u003c/code\u003e不再返回True。但是，\u003ccode\u003ea==b\u003c/code\u003e返回True，因为两个对象具有相同的值。\u003c/p\u003e\n\u003ch3 id=\"相等比较如何起作用\"\u003e\u003ca href=\"#相等比较如何起作用\" class=\"headerlink\" title=\"相等比较如何起作用\"\u003e\u003c/a\u003e相等比较如何起作用\u003c/h3\u003e\u003cp\u003e\u003ccode\u003e==\u003c/code\u003e的魔力体现在该符号左边对象所具有的\u003ccode\u003e__eq__()\u003c/code\u003e方法中。\u003c/p\u003e\n\u003cp\u003e这是一个神奇的类方法，每当这个类的一个实例与另一个对象进行比较时都会调用它。如果未实现此方法，则默认情况下\u003ccode\u003e==\u003c/code\u003e比较两个对象的内存地址。\u003c/p\u003e\n\u003cp\u003e作为练习，创建一个继承\u003ccode\u003estr\u003c/code\u003e的\u003ccode\u003eSillyString\u003c/code\u003e类并实现\u003ccode\u003e__eq__()\u003c/code\u003e ，以比较此字符串的长度是否与另一个对象的长度相同：\u003c/p\u003e\n\u003cfigure class=\"highlight plain\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003eclass SillyString(str):\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    # This method gets called when using == on the object\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    def __eq__(self, other):\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        print(f\u0026#39;comparing {self} to {other}\u0026#39;)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        # Return True if self and other have the same length\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        return len(self) == len(other)\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e现在，用\u003ccode\u003e\u0026#39;hello world\u0026#39;\u003c/code\u003e创建的SillyString实例应该等于用\u003ccode\u003e\u0026#39;world hello\u0026#39;\u003c/code\u003e创建的实例，甚至等于长度相同的任何其他对象：\u003c/p\u003e\n\u003cfigure class=\"highlight plain\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e8\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e9\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e10\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e11\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e12\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e13\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; # Compare two strings\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; \u0026#39;hello world\u0026#39; == \u0026#39;world hello\u0026#39;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eFalse\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; # Compare a string with a SillyString\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; \u0026#39;hello world\u0026#39; == SillyString(\u0026#39;world hello\u0026#39;)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003ecomparing world hello to hello world\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eTrue\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; # Compare a SillyString with a list\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; SillyString(\u0026#39;hello world\u0026#39;) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003ecomparing hello world to [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eTrue\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e当然，对于一个字符串形式的对象来说，这是愚蠢的行为，但它确实说明了当你使用\u003ccode\u003e==\u003c/code\u003e比较两个对象时会发生什么。对于\u003ccode\u003e!=\u003c/code\u003e，则是通过实现特定的\u003ccode\u003e__ne__()\u003c/code\u003e方法，给出逆响应。\u003c/p\u003e\n\u003cp\u003e上面的示例还清楚地向你展示了为什么更好的做法是用 \u003ccode\u003eis\u003c/code\u003e来比较\u003ccode\u003eNone\u003c/code\u003e，而不是使用\u003ccode\u003e==\u003c/code\u003e运算符。\u003ccode\u003eis\u003c/code\u003e比较的是内存地址，所以它不仅更快，而且更安全，因为它不依赖于任何\u003ccode\u003e__eq__()\u003c/code\u003e方法的逻辑。\u003c/p\u003e\n\u003ch2 id=\"比较的比较\"\u003e\u003ca href=\"#比较的比较\" class=\"headerlink\" title=\"比较的比较\"\u003e\u003c/a\u003e比较的比较\u003c/h2\u003e\u003cp\u003e根据经验，你应该常用\u003ccode\u003e==\u003c/code\u003e 和\u003ccode\u003e！=\u003c/code\u003e，除非与\u003ccode\u003eNone\u003c/code\u003e进行比较：\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e使用\u003ccode\u003e==\u003c/code\u003e和\u003ccode\u003e！=\u003c/code\u003e比较对象的相等性。这里，你通常比较两个对象的值。如果要比较两个对象是否具有相同的内容，而不关心它们存储在内存中的位置，则需要下面的做法。\u003c/li\u003e\n\u003cli\u003e如果要比较对象的唯一标识，请使用\u003ccode\u003eis\u003c/code\u003e和\u003ccode\u003eis not\u003c/code\u003e。这里，你要比较两个变量是否指向内存中的同一个对象。这些运算符的主要用例是与None进行比较。与使用类方法相比，按内存地址与None进行比较更快、更安全。\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e具有相同值的变量通常存储在不同的内存地址中，这意味着你应该使用\u003ccode\u003e==\u003c/code\u003e 和\u003ccode\u003e！=\u003c/code\u003e来比较他们的值。只有当你想检查两个变量是否指向同一个内存地址时，才使用\u003ccode\u003eis\u003c/code\u003e和\u003ccode\u003eis not\u003c/code\u003e。\u003c/p\u003e\n\u003ch2 id=\"结论\"\u003e\u003ca href=\"#结论\" class=\"headerlink\" title=\"结论\"\u003e\u003c/a\u003e结论\u003c/h2\u003e\u003cp\u003e在本文中，你了解了\u003ccode\u003e==\u003c/code\u003e 和\u003ccode\u003e！=\u003c/code\u003e比较两个对象的值，而\u003ccode\u003eis\u003c/code\u003e和\u003ccode\u003eis not\u003c/code\u003e比较两个变量是否引用内存中的同一个对象。如果你牢记这一区别，那么应该能够防止代码中出现意外行为。\u003c/p\u003e\n\u003cp\u003e你还可以看看如何使用\u003ccode\u003esys.intern()\u003c/code\u003e来优化字符串的内存使用和比较，尽管Python可能已经在幕后自动为你处理了这一问题。\u003c/p\u003e\n\u003cp\u003e现在你已经了解了两种比较的幕后操作，可以尝试编写自己的\u003ccode\u003e__eq__()\u003c/code\u003e方法，这些方法定义了在使用\u003ccode\u003e==\u003c/code\u003e运算符时如何比较该类的实例。去应用关于Python比较运算符的这些新知识吧！\u003c/p\u003e\n\u003cp\u003e原文链接：\u003ca href=\"https://realpython.com/python-is-identity-vs-equality/\" target=\"_blank\" rel=\"noopener\"\u003ehttps://realpython.com/python-is-identity-vs-equality/\u003c/a\u003e\u003c/p\u003e\n\u003c/section\u003e\n    \u003c!-- Tags START --\u003e\n    \n    \u003c!-- Tags END --\u003e\n    \u003c!-- NAV START --\u003e\n    \n  \u003cdiv class=\"nav-container\"\u003e\n    \u003c!-- reverse left and right to put prev and next in a more logic postition --\u003e\n    \n      \u003ca class=\"nav-left\" href=\"/2020/02/08/%E7%90%86%E8%A7%A3%E5%BE%AE%E7%A7%AF%E5%88%86/\"\u003e\n        \u003cspan class=\"nav-arrow\"\u003e← \u003c/span\u003e\n        \n          理解微积分概念，必不可少\n        \n      \u003c/a\u003e\n    \n    \n      \u003ca class=\"nav-right\" href=\"/2020/02/10/offer-for-datascience/\"\u003e\n        \n          四种原因，让你没有得到数据科学职位的offer\n        \n        \u003cspan class=\"nav-arrow\"\u003e →\u003c/span\u003e\n      \u003c/a\u003e\n    \n  \u003c/div\u003e\n\n    \u003c!-- NAV END --\u003e\n    \u003c!-- 打赏 START --\u003e\n    \n      \u003cdiv class=\"money-like\"\u003e\n        \u003cdiv class=\"reward-btn\"\u003e\n          赏\n          \u003cspan class=\"money-code\"\u003e\n            \u003cspan class=\"alipay-code\"\u003e\n              \u003cdiv class=\"code-image\"\u003e\u003c/div\u003e\n              \u003cb\u003e使用支付宝打赏\u003c/b\u003e\n            \u003c/span\u003e\n            \u003cspan class=\"wechat-code\"\u003e\n              \u003cdiv class=\"code-image\"\u003e\u003c/div\u003e\n              \u003cb\u003e使用微信打赏\u003c/b\u003e\n            \u003c/span\u003e\n          \u003c/span\u003e\n        \u003c/div\u003e\n        \u003cp class=\"notice\"\u003e若你觉得我的文章对你有帮助，欢迎点击上方按钮对我打赏\u003c/p\u003e\n      \u003c/div\u003e\n    \n    \u003c!-- 打赏 END --\u003e\n    \u003c!-- 二维码 START --\u003e\n    \u003c!--% if (theme.qrcode) { %--\u003e\n      \u003cdiv class=\"qrcode\"\u003e\n        \u003c!--canvas id=\"share-qrcode\"\u003e\u003c/!--canvas--\u003e\n        \u003cimg src=\"https://public-tuchuang.oss-cn-hangzhou.aliyuncs.com/WechatIMG6_20200109154827.jpeg\" width=\"400\"/\u003e\n        \u003cp class=\"notice\"\u003e关注微信公众号，读文章、听课程，提升技能\u003c/p\u003e\n      \u003c/div\u003e\n    \u003c!--% } %--\u003e\n    \u003c!-- 二维码 END --\u003e\n    \n      \u003c!-- No Comment --\u003e\n    \n  \u003c/article\u003e",
  "Date": "2020-02-09T00:00:00Z",
  "Author": "老齐教室"
}