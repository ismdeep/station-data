{
  "Source": "qiwsir.github.io",
  "Title": "Python中的正则表达式（五）",
  "Link": "https://qiwsir.github.io/2020/05/21/regular-expression-fifth/",
  "Content": "\u003carticle class=\"post-article\"\u003e\n    \u003ch2\u003ePython中的正则表达式（五）\u003c/h2\u003e\n    \u003cp class=\"post-date\"\u003e2020-05-21\u003c/p\u003e\n    \u003csection class=\"markdown-content\"\u003e\u003ch1 id=\"Python中的正则表达式（五）\"\u003e\u003ca href=\"#Python中的正则表达式（五）\" class=\"headerlink\" title=\"Python中的正则表达式（五）\"\u003e\u003c/a\u003ePython中的正则表达式（五）\u003c/h1\u003e\u003cp\u003e作者：老齐\u003c/p\u003e\n\u003cp\u003e与本文相关的图书推荐：《跟老齐学Python：轻松入门》\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"https://public-tuchuang.oss-cn-hangzhou.aliyuncs.com/%E8%BD%BB%E6%9D%BE%E5%85%A5%E9%97%A8_20200122130623.png\" alt=\"\"/\u003e\u003c/p\u003e\n\u003chr/\u003e\n\u003cp\u003e《Python正则表达式》这个系列，已经完成了四篇，本文是第五篇，请继续阅读。\u003c/p\u003e\n\u003cp\u003e如果错过了前几篇，请关注微信公众号：\u003cstrong\u003e老齐教室\u003c/strong\u003e。\u003c/p\u003e\n\u003ch2 id=\"其他分组\"\u003e\u003ca href=\"#其他分组\" class=\"headerlink\" title=\"其他分组\"\u003e\u003c/a\u003e其他分组\u003c/h2\u003e\u003cp\u003e分组的形式多种多样，以上简要介绍了几种最基本的，在上述内容基础上，可以进一步探讨其他分组形式。\u003c/p\u003e\n\u003ch3 id=\"P-lt-name-gt-lt-regex-gt\"\u003e\u003ca href=\"#P-lt-name-gt-lt-regex-gt\" class=\"headerlink\" title=\"(?P\u0026lt;name\u0026gt;\u0026lt;regex\u0026gt;)\"\u003e\u003c/a\u003e\u003ccode\u003e(?P\u0026lt;name\u0026gt;\u0026lt;regex\u0026gt;)\u003c/code\u003e\u003c/h3\u003e\u003cp\u003e在前面的操作中，如果有多个正则表达式分组，可以用从1开始（注意不是从0开始）的需要，获得相应分组捕获的对象。例如：\u003c/p\u003e\n\u003cfigure class=\"highlight plain\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; m = re.search(\u0026#39;(\\w+),(\\w+),(\\w+)\u0026#39;, \u0026#39;foo,quux,baz\u0026#39;)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; m.groups()\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e(\u0026#39;foo\u0026#39;, \u0026#39;quux\u0026#39;, \u0026#39;baz\u0026#39;)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; m.group(1, 2, 3)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e(\u0026#39;foo\u0026#39;, \u0026#39;quux\u0026#39;, \u0026#39;baz\u0026#39;)\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e此外，为了意义更明确，我们也可以用\u003ccode\u003e(?P\u0026lt;name\u0026gt;\u0026lt;regex\u0026gt;)\u003c/code\u003e方式，给每个分组命名，之后通过命名得到每组捕获的对象。\u003c/p\u003e\n\u003cfigure class=\"highlight plain\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; m = re.search(\u0026#39;(?P\u0026lt;w1\u0026gt;\\w+),(?P\u0026lt;w2\u0026gt;\\w+),(?P\u0026lt;w3\u0026gt;\\w+)\u0026#39;, \u0026#39;foo,quux,baz\u0026#39;)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; m.groups()\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e(\u0026#39;foo\u0026#39;, \u0026#39;quux\u0026#39;, \u0026#39;baz\u0026#39;)\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e以上为每个分组分别命名为\u003ccode\u003ew1\u003c/code\u003e、\u003ccode\u003ew2\u003c/code\u003e、\u003ccode\u003ew3\u003c/code\u003e，\u003ccode\u003em.groups()\u003c/code\u003e的执行结果没有变化。重点看下面操作：\u003c/p\u003e\n\u003cfigure class=\"highlight plain\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; m.group(\u0026#39;w1\u0026#39;)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026#39;foo\u0026#39;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; m.group(\u0026#39;w3\u0026#39;)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026#39;baz\u0026#39;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; m.group(\u0026#39;w1\u0026#39;, \u0026#39;w2\u0026#39;, \u0026#39;w3\u0026#39;)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e(\u0026#39;foo\u0026#39;, \u0026#39;quux\u0026#39;, \u0026#39;baz\u0026#39;)\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e这样，通过分组的名称，得到了相应分组捕获的对象。\u003c/p\u003e\n\u003cp\u003e有了分组名称的命名之后，原有序号依然有效，你可以混合使用。\u003c/p\u003e\n\u003cfigure class=\"highlight plain\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e8\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e9\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e10\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e11\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; m = re.search(\u0026#39;(?P\u0026lt;w1\u0026gt;\\w+),(?P\u0026lt;w2\u0026gt;\\w+),(?P\u0026lt;w3\u0026gt;\\w+)\u0026#39;, \u0026#39;foo,quux,baz\u0026#39;)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; m.group(\u0026#39;w1\u0026#39;)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026#39;foo\u0026#39;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; m.group(1)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026#39;foo\u0026#39;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; m.group(\u0026#39;w1\u0026#39;, \u0026#39;w2\u0026#39;, \u0026#39;w3\u0026#39;)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e(\u0026#39;foo\u0026#39;, \u0026#39;quux\u0026#39;, \u0026#39;baz\u0026#39;)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; m.group(1, 2, 3)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e(\u0026#39;foo\u0026#39;, \u0026#39;quux\u0026#39;, \u0026#39;baz\u0026#39;)\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003ch3 id=\"P-lt-name-gt\"\u003e\u003ca href=\"#P-lt-name-gt\" class=\"headerlink\" title=\"(?P=\u0026lt;name\u0026gt;)\"\u003e\u003c/a\u003e\u003ccode\u003e(?P=\u0026lt;name\u0026gt;)\u003c/code\u003e\u003c/h3\u003e\u003cp\u003e\u003ccode\u003e(?P=\u0026lt;name\u0026gt;)\u003c/code\u003e匹配向后引用的字符串，类似\u003ccode\u003e\\\u0026lt;n\u0026gt;\u003c/code\u003e，但是这里给出了名称。例如：\u003c/p\u003e\n\u003cfigure class=\"highlight plain\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; m = re.search(r\u0026#39;(\\w+),\\1\u0026#39;, \u0026#39;foo,foo\u0026#39;)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; m\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026lt;_sre.SRE_Match object; span=(0, 7), match=\u0026#39;foo,foo\u0026#39;\u0026gt;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; m.group(1)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026#39;foo\u0026#39;\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e这是前面已经熟悉的\u003ccode\u003e\\\u0026lt;n\u0026gt;\u003c/code\u003e模式，如果按照序号，可以捕获向后引用所对应的字符。\u003c/p\u003e\n\u003cp\u003e同样的操作，下面对分组命名，然后用\u003ccode\u003e(?P=\u0026lt;name\u0026gt;)\u003c/code\u003e模式向后引用。\u003c/p\u003e\n\u003cfigure class=\"highlight plain\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; m = re.search(r\u0026#39;(?P\u0026lt;word\u0026gt;\\w+),(?P=word)\u0026#39;, \u0026#39;foo,foo\u0026#39;)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; m\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026lt;_sre.SRE_Match object; span=(0, 7), match=\u0026#39;foo,foo\u0026#39;\u0026gt;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; m.group(\u0026#39;word\u0026#39;)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026#39;foo\u0026#39;\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e\u003ccode\u003e(?P=\u0026lt;word\u0026gt;\\w+)\u003c/code\u003e匹配字符串\u003ccode\u003e\u0026#39;foo\u0026#39;\u003c/code\u003e，并将它保存为\u003ccode\u003eword\u003c/code\u003e这个命名的捕获，然后，逗号后面表示的向后引用\u003ccode\u003e(?P=word)\u003c/code\u003e，再次匹配和捕获一个字符串\u003ccode\u003e\u0026#39;foo\u0026#39;\u003c/code\u003e。\u003c/p\u003e\n\u003cp\u003e注意在向后引用的那部分分组命名的写法，不要在名称外面用尖括号包裹。\u003c/p\u003e\n\u003cfigure class=\"highlight plain\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; m = re.match(r\u0026#39;(?P\u0026lt;num\u0026gt;\\d+)\\.(?P=num)\u0026#39;, \u0026#39;135.135\u0026#39;)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; m\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026lt;_sre.SRE_Match object; span=(0, 7), match=\u0026#39;135.135\u0026#39;\u0026gt;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; m.group(\u0026#39;num\u0026#39;)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026#39;135\u0026#39;\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003ch3 id=\"lt-regex-gt\"\u003e\u003ca href=\"#lt-regex-gt\" class=\"headerlink\" title=\"(?:\u0026lt;regex\u0026gt;)\"\u003e\u003c/a\u003e\u003ccode\u003e(?:\u0026lt;regex\u0026gt;)\u003c/code\u003e\u003c/h3\u003e\u003cp\u003e\u003ccode\u003e(?:\u0026lt;regex\u0026gt;)\u003c/code\u003e与\u003ccode\u003e(\u0026lt;regex\u0026gt;)\u003c/code\u003e类似，都是在\u003ccode\u003e\u0026lt;regex\u0026gt;\u003c/code\u003e中指定匹配的正则表达式，但是\u003ccode\u003e(?:\u0026lt;regex\u0026gt;)\u003c/code\u003e不会捕获所匹配的字符，以后也无法检索到。\u003c/p\u003e\n\u003cfigure class=\"highlight plain\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e8\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; m = re.search(\u0026#39;(\\w+),(?:\\w+),(\\w+)\u0026#39;, \u0026#39;foo,quux,baz\u0026#39;)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; m.groups()\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e(\u0026#39;foo\u0026#39;, \u0026#39;baz\u0026#39;)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; m.group(1)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026#39;foo\u0026#39;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; m.group(2)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026#39;baz\u0026#39;\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e在上面的示例中，中间的字符串\u003ccode\u003equux\u003c/code\u003e就没有被捕获，与它对应的就会前面正表达式中的\u003ccode\u003e(?:\\w+)\u003c/code\u003e。\u003c/p\u003e\n\u003ch3 id=\"根据条件匹配\"\u003e\u003ca href=\"#根据条件匹配\" class=\"headerlink\" title=\"根据条件匹配\"\u003e\u003c/a\u003e根据条件匹配\u003c/h3\u003e\u003cp\u003e根据条件匹配的方式有两种：\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003e(?(\u0026lt;n\u0026gt;)\u0026lt;yes-regex\u0026gt;|\u0026lt;no-regex\u0026gt;)\u003c/code\u003e：如果存在\u003ccode\u003e\u0026lt;n\u0026gt;\u003c/code\u003e，则匹配\u003ccode\u003e\u0026lt;yes-regex\u0026gt;\u003c/code\u003e，否则，它将匹配\u003ccode\u003e\u0026lt;no-regex\u0026gt;\u003c/code\u003e。\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003e(?(\u0026lt;name\u0026gt;)\u0026lt;yes-regex\u0026gt;|\u0026lt;no-regex\u0026gt;)\u003c/code\u003e：如果存在\u003ccode\u003e\u0026lt;name\u0026gt;\u003c/code\u003e，则匹配\u003ccode\u003e\u0026lt;yes-regex\u0026gt;\u003c/code\u003e，否则，它将匹配\u003ccode\u003e\u0026lt;no-regex\u0026gt;\u003c/code\u003e。\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e例如：\u003c/p\u003e\n\u003cfigure class=\"highlight plain\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003eregex = r\u0026#39;^(###)?foo(?(1)bar|baz)\u0026#39;\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e这个正则表达式示例，含义为：\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003e^(###)?\u003c/code\u003e表示要匹配以\u003ccode\u003e###\u003c/code\u003e开头的字符串，如果找到，就根据\u003ccode\u003e###\u003c/code\u003e的分组括号创建编号为1的组。否则，不存在改组。\u003c/li\u003e\n\u003cli\u003e后面的\u003ccode\u003efoo\u003c/code\u003e，表示匹配字符串中的\u003ccode\u003efoo\u003c/code\u003e。\u003c/li\u003e\n\u003cli\u003e最后，\u003ccode\u003e(?(1)bar|baz)\u003c/code\u003e，如果组1存在，就匹配\u003ccode\u003ebar\u003c/code\u003e，否则\u003ccode\u003ebaz\u003c/code\u003e。\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e将上面的正则表达式用在下面的示例中。\u003c/p\u003e\n\u003cfigure class=\"highlight plain\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; re.search(regex, \u0026#39;###foobar\u0026#39;)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026lt;_sre.SRE_Match object; span=(0, 9), match=\u0026#39;###foobar\u0026#39;\u0026gt;\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e\u003ccode\u003e###foobar\u003c/code\u003e是以\u003ccode\u003e###\u003c/code\u003e开头，因此创建组1，然后匹配\u003ccode\u003ebar\u003c/code\u003e，字符串中也有此匹配对象，最后返回匹配结果。\u003c/p\u003e\n\u003cfigure class=\"highlight plain\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; print(re.search(regex, \u0026#39;###foobaz\u0026#39;))\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eNone\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e\u003ccode\u003e###foobar\u003c/code\u003e是以\u003ccode\u003e###\u003c/code\u003e开头，因此创建组1，然后匹配\u003ccode\u003ebar\u003c/code\u003e，但是，字符串中后面是\u003ccode\u003ebaz\u003c/code\u003e，没有匹配成功，最后返回\u003ccode\u003eNone\u003c/code\u003e。\u003c/p\u003e\n\u003cfigure class=\"highlight plain\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; print(re.search(regex, \u0026#39;foobar\u0026#39;))\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eNone\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e\u003ccode\u003efoobar\u003c/code\u003e不是\u003ccode\u003e###\u003c/code\u003e开头，没有创建组1，根据条件，就要匹配\u003ccode\u003ebaz\u003c/code\u003e，但字符串中是\u003ccode\u003ebar\u003c/code\u003e，所以返回\u003ccode\u003eNone\u003c/code\u003e。\u003c/p\u003e\n\u003cfigure class=\"highlight plain\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; re.search(regex, \u0026#39;foobaz\u0026#39;)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026lt;_sre.SRE_Match object; span=(0, 6), match=\u0026#39;foobaz\u0026#39;\u0026gt;\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e\u003ccode\u003efoobar\u003c/code\u003e不是\u003ccode\u003e###\u003c/code\u003e开头，没有创建组1，根据条件，就要匹配\u003ccode\u003ebaz\u003c/code\u003e，字符串中后面恰好是\u003ccode\u003ebar\u003c/code\u003e。\u003c/p\u003e\n\u003cp\u003e下面的正则表达式，与上面不同之处在于，对所创建的组进行了命名。\u003c/p\u003e\n\u003cfigure class=\"highlight plain\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; regex = r\u0026#39;^(?P\u0026lt;ch\u0026gt;\\W)?foo(?(ch)(?P=ch)|)$\u0026#39;\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e将这个正则表达式分解，并说明其含义：\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003e^\u003c/code\u003e：字符串的开始\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003e(?P\u0026lt;ch\u0026gt;\\W)\u003c/code\u003e：匹配一个非字母字符，并将改组捕获对象命名为\u003ccode\u003ech\u003c/code\u003e。\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003e(?P\u0026lt;ch\u0026gt;\\W)?\u003c/code\u003e：以上情况，匹配0个或1个。\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003efoo\u003c/code\u003e：匹配字符串\u003ccode\u003efoo\u003c/code\u003e。\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003e(?(ch)(?P=ch)|)\u003c/code\u003e：如果\u003ccode\u003ech\u003c/code\u003e的组存在，匹配的内容和\u003ccode\u003ech\u003c/code\u003e组一样，否则为空。\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003e$\u003c/code\u003e：字符串的结尾\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e如果非字母字符位于\u003ccode\u003efoo\u003c/code\u003e之前，则解析器创建一个名为\u003ccode\u003ech\u003c/code\u003e的组，其中包含该字符。然后，条件匹配匹配\u003ccode\u003e\u0026lt;yes-regex\u0026gt;\u003c/code\u003e，它是\u003ccode\u003e(?P=ch)\u003c/code\u003e，还是同样的字符。这意味着相同的字符也必须跟在\u003ccode\u003efoo\u003c/code\u003e后面，这样整个匹配才会成功。\u003c/p\u003e\n\u003cp\u003e如果\u003ccode\u003efoo\u003c/code\u003e前面没有非字母字符，那么解析器就不会创建\u003ccode\u003ech\u003c/code\u003e组，\u003ccode\u003e\u0026lt;no-regex\u0026gt;\u003c/code\u003e是空字符串，这意味着在\u003ccode\u003efoo\u003c/code\u003e后面必须没有任何内容，整个匹配才会成功。因为\u003ccode\u003e^\u003c/code\u003e和\u003ccode\u003e$\u003c/code\u003e锚定整个正则表达式，所以字符串必须恰好等于\u003ccode\u003efoo\u003c/code\u003e。\u003c/p\u003e\n\u003cp\u003e通过下面示例，进一步演示上述正则表达式的应用：\u003c/p\u003e\n\u003cfigure class=\"highlight plain\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e8\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e9\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e10\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e11\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e12\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e13\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e14\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e15\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e16\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e17\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e18\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e19\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e20\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; re.search(regex, \u0026#39;foo\u0026#39;)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026lt;_sre.SRE_Match object; span=(0, 3), match=\u0026#39;foo\u0026#39;\u0026gt;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; re.search(regex, \u0026#39;#foo#\u0026#39;)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026lt;_sre.SRE_Match object; span=(0, 5), match=\u0026#39;#foo#\u0026#39;\u0026gt;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; re.search(regex, \u0026#39;@foo@\u0026#39;)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026lt;_sre.SRE_Match object; span=(0, 5), match=\u0026#39;@foo@\u0026#39;\u0026gt;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; print(re.search(regex, \u0026#39;#foo\u0026#39;))\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eNone\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; print(re.search(regex, \u0026#39;foo@\u0026#39;))\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eNone\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; print(re.search(regex, \u0026#39;#foo@\u0026#39;))\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eNone\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; print(re.search(regex, \u0026#39;@foo#\u0026#39;))\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eNone\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e比照前面的解释，理解上述操作结果。\u003c/p\u003e\n\u003cp\u003ePython中条件正则表达式有点深奥和具有挑战性的，替代它的一个方法，就是使用多个单独的\u003ccode\u003ere.search()\u003c/code\u003e调用来实现相同的目标，这样代码就不会那么复杂了。\u003c/p\u003e\n\u003cp\u003e（未完，待续）\u003c/p\u003e\n\u003cp\u003e参考资料：\u003ca href=\"https://realpython.com/regex-python/\" target=\"_blank\" rel=\"noopener\"\u003ehttps://realpython.com/regex-python/\u003c/a\u003e\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e搜索技术问答的公众号：老齐教室\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cblockquote\u003e\n\u003cp\u003e在公众号中回复：\u003cstrong\u003e老齐\u003c/strong\u003e，可查看所有文章、书籍、课程。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003c/section\u003e\n    \u003c!-- Tags START --\u003e\n    \n    \u003c!-- Tags END --\u003e\n    \u003c!-- NAV START --\u003e\n    \n  \u003cdiv class=\"nav-container\"\u003e\n    \u003c!-- reverse left and right to put prev and next in a more logic postition --\u003e\n    \n      \u003ca class=\"nav-left\" href=\"/2020/05/14/regular-expression-forth/\"\u003e\n        \u003cspan class=\"nav-arrow\"\u003e← \u003c/span\u003e\n        \n          Python中的正则表达式（四）\n        \n      \u003c/a\u003e\n    \n    \n      \u003ca class=\"nav-right\" href=\"/2020/05/22/Variables-and-Assignment/\"\u003e\n        \n          初学者专题：变量和赋值\n        \n        \u003cspan class=\"nav-arrow\"\u003e →\u003c/span\u003e\n      \u003c/a\u003e\n    \n  \u003c/div\u003e\n\n    \u003c!-- NAV END --\u003e\n    \u003c!-- 打赏 START --\u003e\n    \n      \u003cdiv class=\"money-like\"\u003e\n        \u003cdiv class=\"reward-btn\"\u003e\n          赏\n          \u003cspan class=\"money-code\"\u003e\n            \u003cspan class=\"alipay-code\"\u003e\n              \u003cdiv class=\"code-image\"\u003e\u003c/div\u003e\n              \u003cb\u003e使用支付宝打赏\u003c/b\u003e\n            \u003c/span\u003e\n            \u003cspan class=\"wechat-code\"\u003e\n              \u003cdiv class=\"code-image\"\u003e\u003c/div\u003e\n              \u003cb\u003e使用微信打赏\u003c/b\u003e\n            \u003c/span\u003e\n          \u003c/span\u003e\n        \u003c/div\u003e\n        \u003cp class=\"notice\"\u003e若你觉得我的文章对你有帮助，欢迎点击上方按钮对我打赏\u003c/p\u003e\n      \u003c/div\u003e\n    \n    \u003c!-- 打赏 END --\u003e\n    \u003c!-- 二维码 START --\u003e\n    \u003c!--% if (theme.qrcode) { %--\u003e\n      \u003cdiv class=\"qrcode\"\u003e\n        \u003c!--canvas id=\"share-qrcode\"\u003e\u003c/!--canvas--\u003e\n        \u003cimg src=\"https://public-tuchuang.oss-cn-hangzhou.aliyuncs.com/WechatIMG6_20200109154827.jpeg\" width=\"400\"/\u003e\n        \u003cp class=\"notice\"\u003e关注微信公众号，读文章、听课程，提升技能\u003c/p\u003e\n      \u003c/div\u003e\n    \u003c!--% } %--\u003e\n    \u003c!-- 二维码 END --\u003e\n    \n      \u003c!-- No Comment --\u003e\n    \n  \u003c/article\u003e",
  "Date": "2020-05-21T00:00:00Z",
  "Author": "老齐教室"
}