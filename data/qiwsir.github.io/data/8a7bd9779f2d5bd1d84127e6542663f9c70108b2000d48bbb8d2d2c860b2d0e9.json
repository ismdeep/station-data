{
  "Source": "qiwsir.github.io",
  "Title": "Python中的正则表达式（一）",
  "Link": "https://qiwsir.github.io/2020/05/08/regular-expression-first/",
  "Content": "\u003carticle class=\"post-article\"\u003e\n    \u003ch2\u003ePython中的正则表达式（一）\u003c/h2\u003e\n    \u003cp class=\"post-date\"\u003e2020-05-08\u003c/p\u003e\n    \u003csection class=\"markdown-content\"\u003e\u003cp\u003e作者：老齐\u003c/p\u003e\n\u003cp\u003e与本文相关的图书推荐：《跟老齐学Python：轻松入门》\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"https://public-tuchuang.oss-cn-hangzhou.aliyuncs.com/%E8%BD%BB%E6%9D%BE%E5%85%A5%E9%97%A8_20200122130623.png\" alt=\"\"/\u003e\u003c/p\u003e\n\u003chr/\u003e\n\u003cp\u003e正则表达式（regular expression）在编程中占有重要地位，它能够按照指定的方式匹配具有某种结构的字符串。本文将对此技术给予详述。\u003c/p\u003e\n\u003ch2 id=\"Python中的正则表达式\"\u003e\u003ca href=\"#Python中的正则表达式\" class=\"headerlink\" title=\"Python中的正则表达式\"\u003e\u003c/a\u003ePython中的正则表达式\u003c/h2\u003e\u003cp\u003e假设有一个字符串\u003ccode\u003es\u003c/code\u003e，在程序中，需要检查\u003ccode\u003e\u0026#39;123\u0026#39;\u003c/code\u003e是否为这个字符串的一部分，这种需求可以用下面的代码实现。\u003c/p\u003e\n\u003cfigure class=\"highlight plain\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; s = \u0026#39;foo123bar\u0026#39;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; \u0026#39;123\u0026#39; in s\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eTrue\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e如果你不仅想知道\u003ccode\u003e\u0026#39;123\u0026#39;\u003c/code\u003e是否在字符串\u003ccode\u003es\u003c/code\u003e中，还想知道它在字符串的什么位置，可以使用字符串的\u003ccode\u003e.find()\u003c/code\u003e或者\u003ccode\u003e.index()\u003c/code\u003e方法，返回\u003ccode\u003e\u0026#39;123\u0026#39;\u003c/code\u003e在\u003ccode\u003es\u003c/code\u003e中的索引。\u003c/p\u003e\n\u003cfigure class=\"highlight plain\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; s = \u0026#39;foo123bar\u0026#39;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; s.find(\u0026#39;123\u0026#39;)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; s.index(\u0026#39;123\u0026#39;)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e在上面的例子中，是按照字符一一对应的方式匹配的，这种方式会适用于很多地方，但是，有时候也会有更复杂的问题。比如，判断字符串中是否有像\u003ccode\u003e\u0026#39;123\u0026#39;\u003c/code\u003e这样有数字组成的字符串，例如\u003ccode\u003e\u0026#39;foo123bar\u0026#39;\u003c/code\u003e、’foo456bar’\u003ccode\u003e、\u003c/code\u003e‘234baz’\u003ccode\u003e、和\u003c/code\u003e‘qux678’`，再用上面的方法，就会太麻烦了，这就要正则表达式出场了。\u003c/p\u003e\n\u003ch3 id=\"正则表达式极简史\"\u003e\u003ca href=\"#正则表达式极简史\" class=\"headerlink\" title=\"正则表达式极简史\"\u003e\u003c/a\u003e正则表达式极简史\u003c/h3\u003e\u003cp\u003e1951年，数学家斯Stephen Cole Kleene提出了正则表达式，20世纪60年代中期，计算机科学先驱Ken Thompson——Unix的原始设计师之一，他使用Kleene创造的符号在QED文本编辑器中实现了模式匹配。\u003c/p\u003e\n\u003cp\u003e自那时以来，正则表达式就出现在了许多编程语言、编辑器和其他工具中，作为确定字符串是否与指定模式匹配的方法，Python、Java 和 Perl等 都支持正则表达式，大多数Unix工具和许多文本编辑器都支持正则表达式。\u003c/p\u003e\n\u003ch3 id=\"re模块\"\u003e\u003ca href=\"#re模块\" class=\"headerlink\" title=\"re模块\"\u003e\u003c/a\u003e\u003ccode\u003ere\u003c/code\u003e模块\u003c/h3\u003e\u003cp\u003ePython中的正则表达式用\u003ccode\u003ere\u003c/code\u003e模块实现，它包括很多实用的方法，接下来，会介绍其中的大部分。\u003c/p\u003e\n\u003cp\u003e现在，先来研究\u003ccode\u003ere.search()\u003c/code\u003e。\u003c/p\u003e\n\u003cfigure class=\"highlight plain\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003ere.search(\u0026lt;regex\u0026gt;, \u0026lt;string\u0026gt;)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    Scans a string for a regex match.\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e\u003ccode\u003ere.search(\u0026lt;regex\u0026gt;, \u0026lt;string\u0026gt;)\u003c/code\u003e按照\u003ccode\u003e\u0026lt;regex\u0026gt;\u003c/code\u003e参数所设置的正则表达式，扫描\u003ccode\u003e\u0026lt;string\u0026gt;\u003c/code\u003e参数的字符串，这个过程可以称为“匹配”，如果有符合正则表达式结构的子字符串，即匹配存在，就会返回第一个所匹配的对象，否则返回\u003ccode\u003eNone\u003c/code\u003e。\u003c/p\u003e\n\u003cp\u003e后面还会介绍，\u003ccode\u003ere.search()\u003c/code\u003e中的第三个参数\u003ccode\u003e\u0026lt;flags\u0026gt;\u003c/code\u003e。\u003c/p\u003e\n\u003ch3 id=\"怎么使用re-search\"\u003e\u003ca href=\"#怎么使用re-search\" class=\"headerlink\" title=\"怎么使用re.search()\"\u003e\u003c/a\u003e怎么使用\u003ccode\u003ere.search()\u003c/code\u003e\u003c/h3\u003e\u003cp\u003e基本使用方法如下：\u003c/p\u003e\n\u003cfigure class=\"highlight plain\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003eimport re\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003ere.search(...)\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e熟悉模块使用方法的，可能会知道，还能这样做：\u003c/p\u003e\n\u003cfigure class=\"highlight plain\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003efrom re import search\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003esearch(...)\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003ch3 id=\"示例\"\u003e\u003ca href=\"#示例\" class=\"headerlink\" title=\"示例\"\u003e\u003c/a\u003e示例\u003c/h3\u003e\u003cp\u003e下面的示例，演示\u003ccode\u003ere.search()\u003c/code\u003e的基本应用：\u003c/p\u003e\n\u003cfigure class=\"highlight plain\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; s = \u0026#39;foo123bar\u0026#39;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; import re\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; re.search(\u0026#39;123\u0026#39;, s)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026lt;_sre.SRE_Match object; span=(3, 6), match=\u0026#39;123\u0026#39;\u0026gt;\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e在上面示例中，\u003ccode\u003e\u0026lt;regex\u0026gt;\u003c/code\u003e就是\u003ccode\u003e123\u003c/code\u003e，\u003ccode\u003e\u0026lt;string\u0026gt;\u003c/code\u003e是字符串\u003ccode\u003es\u003c/code\u003e，最后返回了匹配结果，有此结果，我们至少知道字符串\u003ccode\u003es\u003c/code\u003e中含有\u003ccode\u003e\u0026#39;123\u0026#39;\u003c/code\u003e。\u003c/p\u003e\n\u003cp\u003e如果写一个比较完整的程序，可以用条件语句判断一下：\u003c/p\u003e\n\u003cfigure class=\"highlight plain\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; if re.search(\u0026#39;123\u0026#39;, s):\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e...     print(\u0026#39;Found a match.\u0026#39;)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e... else:\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e...     print(\u0026#39;No match.\u0026#39;)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e...\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eFound a match.\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e前面代码中返回结果\u003ccode\u003e\u0026lt;_sre.SRE_Match object; span=(3, 6), match=\u0026#39;123\u0026#39;\u0026gt;\u003c/code\u003e，其中的\u003ccode\u003espan(3, 6)\u003c/code\u003e意思是字符串中匹配\u003ccode\u003e\u0026lt;regex\u0026gt;\u003c/code\u003e出现的位置，与切片的含义一样。\u003c/p\u003e\n\u003cfigure class=\"highlight plain\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; s[3:6]\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026#39;123\u0026#39;\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e不过，上面的例子显然没有体现正则表达式的优势，只说明了它的基本操作流程。\u003c/p\u003e\n\u003ch3 id=\"正则表达式中的元字符\"\u003e\u003ca href=\"#正则表达式中的元字符\" class=\"headerlink\" title=\"正则表达式中的元字符\"\u003e\u003c/a\u003e正则表达式中的元字符\u003c/h3\u003e\u003cp\u003e在正则表达式中，有一些特定字符，它们被称为\u003cstrong\u003e元字符\u003c/strong\u003e，每个元字符，代表了正则表达式中的某个特殊含义，能够满足正则匹配搜索引擎的查询之需。\u003c/p\u003e\n\u003cp\u003e例如，一组方括号（\u003ccode\u003e[ ]\u003c/code\u003e）表示了一个元字符类，即匹配字符类中的任何一个字符：\u003c/p\u003e\n\u003cfigure class=\"highlight plain\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; s = \u0026#39;foo123bar\u0026#39;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; re.search(\u0026#39;[0-9][0-9][0-9]\u0026#39;, s)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026lt;_sre.SRE_Match object; span=(3, 6), match=\u0026#39;123\u0026#39;\u0026gt;\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e\u003ccode\u003e[0-9]\u003c/code\u003e表示要匹配\u003ccode\u003e0\u003c/code\u003e到\u003ccode\u003e9\u003c/code\u003e的任何一个数字字符，\u003ccode\u003e[0-9][0-9][0-9]\u003c/code\u003e则表示匹配连续三个\u003ccode\u003e0\u003c/code\u003e到\u003ccode\u003e9\u003c/code\u003e之间的任何数字字符，在字符串\u003ccode\u003es\u003c/code\u003e中，符合要求的就是\u003ccode\u003e123\u003c/code\u003e。\u003c/p\u003e\n\u003cfigure class=\"highlight plain\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e8\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; re.search(\u0026#39;[0-9][0-9][0-9]\u0026#39;, \u0026#39;foo456bar\u0026#39;)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026lt;_sre.SRE_Match object; span=(3, 6), match=\u0026#39;456\u0026#39;\u0026gt;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; re.search(\u0026#39;[0-9][0-9][0-9]\u0026#39;, \u0026#39;234baz\u0026#39;)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026lt;_sre.SRE_Match object; span=(0, 3), match=\u0026#39;234\u0026#39;\u0026gt;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; re.search(\u0026#39;[0-9][0-9][0-9]\u0026#39;, \u0026#39;qux678\u0026#39;)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026lt;_sre.SRE_Match object; span=(3, 6), match=\u0026#39;678\u0026#39;\u0026gt;\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e如果没有连续的三个数字字符，就不会匹配。\u003c/p\u003e\n\u003cfigure class=\"highlight plain\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; print(re.search(\u0026#39;[0-9][0-9][0-9]\u0026#39;, \u0026#39;12foo34\u0026#39;))\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eNone\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e另外一个元字符的例子是“句点”（\u003ccode\u003e.\u003c/code\u003e），它表示任何一种类型的字符（除了换行符）：\u003c/p\u003e\n\u003cfigure class=\"highlight plain\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; s = \u0026#39;foo123bar\u0026#39;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; re.search(\u0026#39;1.3\u0026#39;, s)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026lt;_sre.SRE_Match object; span=(3, 6), match=\u0026#39;123\u0026#39;\u0026gt;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; s = \u0026#39;foo13bar\u0026#39;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; print(re.search(\u0026#39;1.3\u0026#39;, s))\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eNone\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e在第一个例子中，\u003ccode\u003e1\u003c/code\u003e和\u003ccode\u003e3\u003c/code\u003e是明显有匹配的，\u003ccode\u003e.\u003c/code\u003e匹配了\u003ccode\u003e2\u003c/code\u003e。但是，第二个示例则没有匹配。\u003c/p\u003e\n\u003ch2 id=\"re模块的元字符\"\u003e\u003ca href=\"#re模块的元字符\" class=\"headerlink\" title=\"re模块的元字符\"\u003e\u003c/a\u003e\u003ccode\u003ere\u003c/code\u003e模块的元字符\u003c/h2\u003e\u003cp\u003e下表中列出的，是\u003ccode\u003ere\u003c/code\u003e模块支持的元字符。\u003c/p\u003e\n\u003ctable\u003e\n\u003cthead\u003e\n\u003ctr\u003e\n\u003cth\u003e字符\u003c/th\u003e\n\u003cth\u003e说明\u003c/th\u003e\n\u003c/tr\u003e\n\u003c/thead\u003e\n\u003ctbody\u003e\u003ctr\u003e\n\u003ctd\u003e.\u003c/td\u003e\n\u003ctd\u003e除了换行符之外，匹配任何单个的字符\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e^\u003c/td\u003e\n\u003ctd\u003e（1）在字符串开头锚定匹配（2）补充字符类\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e$\u003c/td\u003e\n\u003ctd\u003e在字符串末尾锚定匹配\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e*\u003c/td\u003e\n\u003ctd\u003e匹配0个或更多\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e+\u003c/td\u003e\n\u003ctd\u003e匹配1个或更多\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e?\u003c/td\u003e\n\u003ctd\u003e当该字符紧跟在任何一个其他限制符 (*, +, ?, {n}, {n,}, {n,m}) 后面时，匹配模式是非贪婪的。非贪婪模式尽可能少的匹配所搜索的字符串，而默认的贪婪模式则尽可能多的匹配所搜索的字符串。例如，对于字符串 “oooo”，’o+?’ 将匹配单个 “o”，而 ‘o+’ 将匹配所有 ‘o’。\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e{n}\u003c/td\u003e\n\u003ctd\u003en 是一个非负整数。匹配确定的 n 次。例如，’o{2}’ 不能匹配 “Bob” 中的 ‘o’，但是能匹配 “food” 中的两个 o。\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e\\\u003c/td\u003e\n\u003ctd\u003e将下一个字符标记为一个特殊字符、或一个原义字符、或一个 向后引用、或一个八进制转义符。例如，’n’ 匹配字符 “n”。’\\n’ 匹配一个换行符。序列 ‘\\‘ 匹配 “\u0026#34; 而 “(“ 则匹配 “(“。\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e[]\u003c/td\u003e\n\u003ctd\u003e特定字符集\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003c/td\u003e\n\u003ctd\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e()\u003c/td\u003e\n\u003ctd\u003e创建组\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e: #  = !\u003c/td\u003e\n\u003ctd\u003e特定组\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u0026lt;\u0026gt;\u003c/td\u003e\n\u003ctd\u003e有名称的组\u003c/td\u003e\n\u003c/tr\u003e\n\u003c/tbody\u003e\u003c/table\u003e\n\u003cp\u003e下面以示例说明部分元字符的应用。\u003c/p\u003e\n\u003ch3 id=\"字符类符号：\"\u003e\u003ca href=\"#字符类符号：\" class=\"headerlink\" title=\"字符类符号：[ ]\"\u003e\u003c/a\u003e字符类符号：[ ]\u003c/h3\u003e\u003cp\u003e\u003ccode\u003e[ ]\u003c/code\u003e里面表示的字符类，即要匹配的一个字符集合。\u003c/p\u003e\n\u003cfigure class=\"highlight plain\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; re.search(\u0026#39;ba[artz]\u0026#39;, \u0026#39;foobarqux\u0026#39;)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026lt;_sre.SRE_Match object; span=(3, 6), match=\u0026#39;bar\u0026#39;\u0026gt;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; re.search(\u0026#39;ba[artz]\u0026#39;, \u0026#39;foobazqux\u0026#39;)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026lt;_sre.SRE_Match object; span=(3, 6), match=\u0026#39;baz\u0026#39;\u0026gt;\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e\u003ccode\u003e[artz]\u003c/code\u003e表示4个独立的字符，在上面的示例中，正则表达式\u003ccode\u003eba[artz]\u003c/code\u003e匹配了字符串中的\u003ccode\u003ebar\u003c/code\u003e和\u003ccode\u003ebaz\u003c/code\u003e，当然，如果有可能，还可以匹配\u003ccode\u003ebaa\u003c/code\u003e、\u003ccode\u003ebat\u003c/code\u003e。\u003c/p\u003e\n\u003cp\u003e字符集中，可以用\u003ccode\u003e-\u003c/code\u003e表示字符序列的范围，例如\u003ccode\u003e[a-z]\u003c/code\u003e表示匹配英文小写字母\u003ccode\u003ea\u003c/code\u003e到\u003ccode\u003ez\u003c/code\u003e中的任何一个字母。\u003c/p\u003e\n\u003cfigure class=\"highlight plain\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; re.search(\u0026#39;[a-z]\u0026#39;, \u0026#39;FOObar\u0026#39;)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026lt;_sre.SRE_Match object; span=(3, 4), match=\u0026#39;b\u0026#39;\u0026gt;\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\n\u003cp\u003e\u003ccode\u003e[0-9]\u003c/code\u003e表示任何一个数字字符：\u003c/p\u003e\n\u003cfigure class=\"highlight plain\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; re.search(\u0026#39;[0-9][0-9]\u0026#39;, \u0026#39;foo123bar\u0026#39;)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026lt;_sre.SRE_Match object; span=(3, 5), match=\u0026#39;12\u0026#39;\u0026gt;\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e在这个示例中，\u003ccode\u003e[0-9][0-9]\u003c/code\u003e表示匹配两个数字组成的字符串，对于字符串\u003ccode\u003efoo123bar\u003c/code\u003e，匹配了第一次出现的符合正则表达式的部分。\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003e[0-9a-fA-F]\u003c/code\u003e表示16进制的任何一个字符。\u003c/p\u003e\n\u003cfigure class=\"highlight plain\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; re.search(\u0026#39;[0-9a-fA-f]\u0026#39;, \u0026#39;--- a0 ---\u0026#39;)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026lt;_sre.SRE_Match object; span=(4, 5), match=\u0026#39;a\u0026#39;\u0026gt;\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e这里匹配了第一个出现的16进制的字符\u003ccode\u003ea\u003c/code\u003e。\u003c/p\u003e\n\u003cp\u003e也可以在字符类中以\u003ccode\u003e^\u003c/code\u003e作为第一个字符，则表示要匹配该字符类的补集，即所有不是字符集中的字符。如下所示，\u003ccode\u003e[^0-9]\u003c/code\u003e表示非数字字符。\u003c/p\u003e\n\u003cfigure class=\"highlight plain\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; re.search(\u0026#39;[^0-9]\u0026#39;, \u0026#39;12345foo\u0026#39;)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026lt;_sre.SRE_Match object; span=(5, 6), match=\u0026#39;f\u0026#39;\u0026gt;\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e这里匹配的结果是第一个非数字的字母字符\u003ccode\u003ef\u003c/code\u003e。如果\u003ccode\u003e^\u003c/code\u003e不在首位，就没有了上面那种特殊含义了，仅仅是一个普通的\u003ccode\u003e^\u003c/code\u003e符号。\u003c/p\u003e\n\u003cfigure class=\"highlight plain\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; re.search(\u0026#39;[#:^]\u0026#39;, \u0026#39;foo^bar:baz#qux\u0026#39;)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026lt;_sre.SRE_Match object; span=(3, 4), match=\u0026#39;^\u0026#39;\u0026gt;\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e前面已经说过，\u003ccode\u003e-\u003c/code\u003e表示了字符范围，但是，如果希望在正则表达式中匹配一个连字符\u003ccode\u003e-\u003c/code\u003e，怎么办？如果\u003ccode\u003e-\u003c/code\u003e在首位或者末尾，就表示连字符本身，如果在中间，可以只用转义符\u003ccode\u003e\\\u003c/code\u003e。\u003c/p\u003e\n\u003cfigure class=\"highlight plain\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; re.search(\u0026#39;[-abc]\u0026#39;, \u0026#39;123-456\u0026#39;)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026lt;_sre.SRE_Match object; span=(3, 4), match=\u0026#39;-\u0026#39;\u0026gt;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; re.search(\u0026#39;[abc-]\u0026#39;, \u0026#39;123-456\u0026#39;)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026lt;_sre.SRE_Match object; span=(3, 4), match=\u0026#39;-\u0026#39;\u0026gt;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; re.search(\u0026#39;[ab\\-c]\u0026#39;, \u0026#39;123-456\u0026#39;)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026lt;_sre.SRE_Match object; span=(3, 4), match=\u0026#39;-\u0026#39;\u0026gt;\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e同样，对于\u003ccode\u003e]\u003c/code\u003e符号，也可以用类似方法处理。\u003c/p\u003e\n\u003cfigure class=\"highlight plain\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; re.search(\u0026#39;[]]\u0026#39;, \u0026#39;foo[1]\u0026#39;)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026lt;_sre.SRE_Match object; span=(5, 6), match=\u0026#39;]\u0026#39;\u0026gt;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; re.search(\u0026#39;[ab\\]cd]\u0026#39;, \u0026#39;foo[1]\u0026#39;)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026lt;_sre.SRE_Match object; span=(5, 6), match=\u0026#39;]\u0026#39;\u0026gt;\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e在\u003ccode\u003e[ ]\u003c/code\u003e所设定的字符集中，其他各种元字符都失掉了作为元字符的含义。\u003c/p\u003e\n\u003cfigure class=\"highlight plain\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; re.search(\u0026#39;[)*+|]\u0026#39;, \u0026#39;123*456\u0026#39;)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026lt;_sre.SRE_Match object; span=(3, 4), match=\u0026#39;*\u0026#39;\u0026gt;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; re.search(\u0026#39;[)*+|]\u0026#39;, \u0026#39;123+456\u0026#39;)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026lt;_sre.SRE_Match object; span=(3, 4), match=\u0026#39;+\u0026#39;\u0026gt;\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e这些元字符都编程了普通的字符。\u003c/p\u003e\n\u003cp\u003e（未完，待续）\u003c/p\u003e\n\u003cp\u003e参考资料：\u003ca href=\"https://realpython.com/regex-python/\" target=\"_blank\" rel=\"noopener\"\u003ehttps://realpython.com/regex-python/\u003c/a\u003e\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e搜索技术问答的公众号：老齐教室\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cblockquote\u003e\n\u003cp\u003e在公众号中回复：\u003cstrong\u003e老齐\u003c/strong\u003e，可查看所有文章、书籍、课程。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003c/section\u003e\n    \u003c!-- Tags START --\u003e\n    \n    \u003c!-- Tags END --\u003e\n    \u003c!-- NAV START --\u003e\n    \n  \u003cdiv class=\"nav-container\"\u003e\n    \u003c!-- reverse left and right to put prev and next in a more logic postition --\u003e\n    \n      \u003ca class=\"nav-left\" href=\"/2020/05/04/sql-library-mysql/\"\u003e\n        \u003cspan class=\"nav-arrow\"\u003e← \u003c/span\u003e\n        \n          Python中的SQL库：MySQL\n        \n      \u003c/a\u003e\n    \n    \n      \u003ca class=\"nav-right\" href=\"/2020/05/09/regular-expression-second/\"\u003e\n        \n          Python中的正则表达式（二）\n        \n        \u003cspan class=\"nav-arrow\"\u003e →\u003c/span\u003e\n      \u003c/a\u003e\n    \n  \u003c/div\u003e\n\n    \u003c!-- NAV END --\u003e\n    \u003c!-- 打赏 START --\u003e\n    \n      \u003cdiv class=\"money-like\"\u003e\n        \u003cdiv class=\"reward-btn\"\u003e\n          赏\n          \u003cspan class=\"money-code\"\u003e\n            \u003cspan class=\"alipay-code\"\u003e\n              \u003cdiv class=\"code-image\"\u003e\u003c/div\u003e\n              \u003cb\u003e使用支付宝打赏\u003c/b\u003e\n            \u003c/span\u003e\n            \u003cspan class=\"wechat-code\"\u003e\n              \u003cdiv class=\"code-image\"\u003e\u003c/div\u003e\n              \u003cb\u003e使用微信打赏\u003c/b\u003e\n            \u003c/span\u003e\n          \u003c/span\u003e\n        \u003c/div\u003e\n        \u003cp class=\"notice\"\u003e若你觉得我的文章对你有帮助，欢迎点击上方按钮对我打赏\u003c/p\u003e\n      \u003c/div\u003e\n    \n    \u003c!-- 打赏 END --\u003e\n    \u003c!-- 二维码 START --\u003e\n    \u003c!--% if (theme.qrcode) { %--\u003e\n      \u003cdiv class=\"qrcode\"\u003e\n        \u003c!--canvas id=\"share-qrcode\"\u003e\u003c/!--canvas--\u003e\n        \u003cimg src=\"https://public-tuchuang.oss-cn-hangzhou.aliyuncs.com/WechatIMG6_20200109154827.jpeg\" width=\"400\"/\u003e\n        \u003cp class=\"notice\"\u003e关注微信公众号，读文章、听课程，提升技能\u003c/p\u003e\n      \u003c/div\u003e\n    \u003c!--% } %--\u003e\n    \u003c!-- 二维码 END --\u003e\n    \n      \u003c!-- No Comment --\u003e\n    \n  \u003c/article\u003e",
  "Date": "2020-05-08T00:00:00Z",
  "Author": "老齐教室"
}