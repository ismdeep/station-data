{
  "Source": "qiwsir.github.io",
  "Title": "合并Pandas的DataFrame方法汇总",
  "Link": "https://qiwsir.github.io/2021/03/02/merge-dataframes/",
  "Content": "\u003carticle class=\"post-article\"\u003e\n    \u003ch2\u003e合并Pandas的DataFrame方法汇总\u003c/h2\u003e\n    \u003cp class=\"post-date\"\u003e2021-03-02\u003c/p\u003e\n    \u003csection class=\"markdown-content\"\u003e\u003cp\u003ePandas是数据分析、机器学习等常用的工具，其中的DataFrame又是最常用的数据类型，对它的操作，不得不数量。在《跟老齐学Python：数据分析》一书中，对DataFrame对象的各种常用操作都有详细介绍。本文根据书中介绍的内容，并参考其他文献，专门汇总了合并操作的各种方法。\u003c/p\u003e\n\u003cp\u003ePandas提供好几种方法和函数来实现合并DataFrame的操作，一般的操作结果是创建一个新的DataFrame，而对原始数据没有任何影响。\u003c/p\u003e\n\u003ch2 id=\"方法1：merge\"\u003e\u003ca href=\"#方法1：merge\" class=\"headerlink\" title=\"方法1：merge()\"\u003e\u003c/a\u003e方法1：merge()\u003c/h2\u003e\u003cp\u003e先创建一个DataFrame对象，后面也会用到它。如下所示，\u003ccode\u003edf1\u003c/code\u003e包括姓名、电子邮件和用户id。\u003c/p\u003e\n\u003cfigure class=\"highlight python\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e8\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"keyword\"\u003eimport\u003c/span\u003e pandas \u003cspan class=\"keyword\"\u003eas\u003c/span\u003e pd\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003edf1 = pd.DataFrame({\u003cspan class=\"string\"\u003e\u0026#39;user_id\u0026#39;\u003c/span\u003e: [\u003cspan class=\"string\"\u003e\u0026#39;id001\u0026#39;\u003c/span\u003e, \u003cspan class=\"string\"\u003e\u0026#39;id002\u0026#39;\u003c/span\u003e, \u003cspan class=\"string\"\u003e\u0026#39;id003\u0026#39;\u003c/span\u003e, \u003cspan class=\"string\"\u003e\u0026#39;id004\u0026#39;\u003c/span\u003e, \u003cspan class=\"string\"\u003e\u0026#39;id005\u0026#39;\u003c/span\u003e, \u003cspan class=\"string\"\u003e\u0026#39;id006\u0026#39;\u003c/span\u003e, \u003cspan class=\"string\"\u003e\u0026#39;id007\u0026#39;\u003c/span\u003e],\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e                    \u003cspan class=\"string\"\u003e\u0026#39;first_name\u0026#39;\u003c/span\u003e: [\u003cspan class=\"string\"\u003e\u0026#39;Rivi\u0026#39;\u003c/span\u003e, \u003cspan class=\"string\"\u003e\u0026#39;Wynnie\u0026#39;\u003c/span\u003e, \u003cspan class=\"string\"\u003e\u0026#39;Kristos\u0026#39;\u003c/span\u003e, \u003cspan class=\"string\"\u003e\u0026#39;Madalyn\u0026#39;\u003c/span\u003e, \u003cspan class=\"string\"\u003e\u0026#39;Tobe\u0026#39;\u003c/span\u003e, \u003cspan class=\"string\"\u003e\u0026#39;Regan\u0026#39;\u003c/span\u003e, \u003cspan class=\"string\"\u003e\u0026#39;Kristin\u0026#39;\u003c/span\u003e],\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e                    \u003cspan class=\"string\"\u003e\u0026#39;last_name\u0026#39;\u003c/span\u003e: [\u003cspan class=\"string\"\u003e\u0026#39;Valti\u0026#39;\u003c/span\u003e, \u003cspan class=\"string\"\u003e\u0026#39;McMurty\u0026#39;\u003c/span\u003e, \u003cspan class=\"string\"\u003e\u0026#39;Ivanets\u0026#39;\u003c/span\u003e, \u003cspan class=\"string\"\u003e\u0026#39;Max\u0026#39;\u003c/span\u003e, \u003cspan class=\"string\"\u003e\u0026#39;Riddich\u0026#39;\u003c/span\u003e, \u003cspan class=\"string\"\u003e\u0026#39;Huyghe\u0026#39;\u003c/span\u003e, \u003cspan class=\"string\"\u003e\u0026#39;Illis\u0026#39;\u003c/span\u003e],\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e                    \u003cspan class=\"string\"\u003e\u0026#39;email\u0026#39;\u003c/span\u003e: [\u003cspan class=\"string\"\u003e\u0026#39;rvalti0@example.com\u0026#39;\u003c/span\u003e, \u003cspan class=\"string\"\u003e\u0026#39;wmcmurty1@example.com\u0026#39;\u003c/span\u003e, \u003cspan class=\"string\"\u003e\u0026#39;kivanets2@example.com\u0026#39;\u003c/span\u003e,\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e                              \u003cspan class=\"string\"\u003e\u0026#39;mmax3@example.com\u0026#39;\u003c/span\u003e, \u003cspan class=\"string\"\u003e\u0026#39;triddich4@example.com\u0026#39;\u003c/span\u003e, \u003cspan class=\"string\"\u003e\u0026#39;rhuyghe@example.com\u0026#39;\u003c/span\u003e, \u003cspan class=\"string\"\u003e\u0026#39;killis4@example.com\u0026#39;\u003c/span\u003e]\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e                    })\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e为了能够进行合并的操作，还需要再创建一个\u003ccode\u003edf2\u003c/code\u003e，如下所示。\u003c/p\u003e\n\u003cfigure class=\"highlight python\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003edf2 = pd.DataFrame({\u003cspan class=\"string\"\u003e\u0026#39;user_id\u0026#39;\u003c/span\u003e: [\u003cspan class=\"string\"\u003e\u0026#39;id001\u0026#39;\u003c/span\u003e, \u003cspan class=\"string\"\u003e\u0026#39;id002\u0026#39;\u003c/span\u003e, \u003cspan class=\"string\"\u003e\u0026#39;id003\u0026#39;\u003c/span\u003e, \u003cspan class=\"string\"\u003e\u0026#39;id004\u0026#39;\u003c/span\u003e, \u003cspan class=\"string\"\u003e\u0026#39;id005\u0026#39;\u003c/span\u003e],\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e                    \u003cspan class=\"string\"\u003e\u0026#39;image_url\u0026#39;\u003c/span\u003e: [\u003cspan class=\"string\"\u003e\u0026#39;http://example.com/img/id001.png\u0026#39;\u003c/span\u003e, \u003cspan class=\"string\"\u003e\u0026#39;http://example.com/img/id002.jpg\u0026#39;\u003c/span\u003e,\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e                                  \u003cspan class=\"string\"\u003e\u0026#39;http://example.com/img/id003.bmp\u0026#39;\u003c/span\u003e, \u003cspan class=\"string\"\u003e\u0026#39;http://example.com/img/id004.jpg\u0026#39;\u003c/span\u003e,\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e                                  \u003cspan class=\"string\"\u003e\u0026#39;http://example.com/img/id005.png\u0026#39;\u003c/span\u003e]\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e                    })\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e所创建的两个DataFrame数据如下：\u003c/p\u003e\n\u003cfigure class=\"highlight python\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e8\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e9\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e10\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e11\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e12\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e13\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e14\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e15\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e16\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e17\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"comment\"\u003e# df1\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  user_id first_name last_name                  email\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"number\"\u003e0\u003c/span\u003e   id001       Rivi     Valti    rvalti0@example.com\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"number\"\u003e1\u003c/span\u003e   id002     Wynnie   McMurty  wmcmurty1@example.com\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"number\"\u003e2\u003c/span\u003e   id003    Kristos   Ivanets  kivanets2@example.com\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"number\"\u003e3\u003c/span\u003e   id004    Madalyn       Max      mmax3@example.com\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"number\"\u003e4\u003c/span\u003e   id005       Tobe   Riddich  triddich4@example.com\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"number\"\u003e5\u003c/span\u003e   id006      Regan    Huyghe    rhuyghe@example.com\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"number\"\u003e6\u003c/span\u003e   id007    Kristin     Illis    killis4@example.com\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"comment\"\u003e#df2\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  user_id                         image_url\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"number\"\u003e0\u003c/span\u003e   id001  http://example.com/img/id001.png\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"number\"\u003e1\u003c/span\u003e   id002  http://example.com/img/id002.jpg\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"number\"\u003e2\u003c/span\u003e   id003  http://example.com/img/id003.bmp\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"number\"\u003e3\u003c/span\u003e   id004  http://example.com/img/id004.jpg\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"number\"\u003e4\u003c/span\u003e   id005  http://example.com/img/id005.png\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e用\u003ccode\u003emerge()\u003c/code\u003e函数将\u003ccode\u003edf1\u003c/code\u003e和\u003ccode\u003edf2\u003c/code\u003e合并。首先，看一下这个函数可以接受的参数：\u003c/p\u003e\n\u003cfigure class=\"highlight python\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003epd.merge(left, right, how=\u003cspan class=\"string\"\u003e\u0026#39;inner\u0026#39;\u003c/span\u003e, on=\u003cspan class=\"literal\"\u003eNone\u003c/span\u003e, left_on=\u003cspan class=\"literal\"\u003eNone\u003c/span\u003e, right_on=\u003cspan class=\"literal\"\u003eNone\u003c/span\u003e,\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e         left_index=\u003cspan class=\"literal\"\u003eFalse\u003c/span\u003e, right_index=\u003cspan class=\"literal\"\u003eFalse\u003c/span\u003e, sort=\u003cspan class=\"literal\"\u003eTrue\u003c/span\u003e,\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e         suffixes=(\u003cspan class=\"string\"\u003e\u0026#39;_x\u0026#39;\u003c/span\u003e, \u003cspan class=\"string\"\u003e\u0026#39;_y\u0026#39;\u003c/span\u003e), copy=\u003cspan class=\"literal\"\u003eTrue\u003c/span\u003e, indicator=\u003cspan class=\"literal\"\u003eFalse\u003c/span\u003e,\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e         validate=\u003cspan class=\"literal\"\u003eNone\u003c/span\u003e)\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e除 \u003ccode\u003eleft\u003c/code\u003e和 \u003ccode\u003eright\u003c/code\u003e外，大多数参数都有默认值，这两个参数是我们要合并的DataFrames的名称。函数本身将返回一个新的DataFrame，用变量\u003ccode\u003edf3_merged\u003c/code\u003e引用。\u003c/p\u003e\n\u003cfigure class=\"highlight python\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003edf3_merged = pd.merge(df1, df2)\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e两个DataFrames都有一个同名的列\u003ccode\u003euser_id\u003c/code\u003e，所以 \u003ccode\u003emerge()\u003c/code\u003e函数会自动根据此列合并两个对象——此种情景可以称为在键\u003ccode\u003euser_id\u003c/code\u003e上合并。\u003c/p\u003e\n\u003cp\u003e如果有两个DataFrame没有相同名称的列，可以使用\u003ccode\u003eleft_on=\u0026#39;left_column_name\u0026#39;\u003c/code\u003e和\u003ccode\u003eright_on=\u0026#39;right_column_name\u0026#39;\u003c/code\u003e显式地指定两个DataFrames上的键。\u003c/p\u003e\n\u003cp\u003e打印\u003ccode\u003edf3_merged\u003c/code\u003e ，看看它的内容：\u003c/p\u003e\n\u003cfigure class=\"highlight plaintext\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e  user_id first_name last_name                  email                         image_url\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e0   id001       Rivi     Valti    rvalti0@example.com  http://example.com/img/id001.png\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e1   id002     Wynnie   McMurty  wmcmurty1@example.com  http://example.com/img/id002.jpg\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2   id003    Kristos   Ivanets  kivanets2@example.com  http://example.com/img/id003.bmp\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3   id004    Madalyn       Max      mmax3@example.com  http://example.com/img/id004.jpg\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4   id005       Tobe   Riddich  triddich4@example.com  http://example.com/img/id005.png\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e你会注意到， \u003ccode\u003edf3_merged\u003c/code\u003e只有5行，而原来的\u003ccode\u003edf1\u003c/code\u003e有7行。为什么会这样？\u003c/p\u003e\n\u003cp\u003e当\u003ccode\u003ehow\u003c/code\u003e参数的默认值设置为\u003ccode\u003einner\u003c/code\u003e时，将从左DataFrame和右DataFrame的\u003cem\u003e交集\u003c/em\u003e生成一个新的DataFrame。因此，如果其中一个表中缺少\u003ccode\u003euser_id\u003c/code\u003e ，它就不会在合并的DataFrame中。\u003c/p\u003e\n\u003cp\u003e即使交换了左右行的位置，结果仍然如此。\u003c/p\u003e\n\u003cp\u003e解决方法，就是在使用\u003ccode\u003emerge()\u003c/code\u003e时，将参数 \u003ccode\u003ehow\u003c/code\u003e的值设置为\u003ccode\u003eleft\u003c/code\u003e：\u003c/p\u003e\n\u003cfigure class=\"highlight python\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003edf_left_merge = pd.merge(df1, df2, how=\u003cspan class=\"string\"\u003e\u0026#39;left\u0026#39;\u003c/span\u003e)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eprint(df_left_merge)\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e这就是所谓的“左联接”，这样得到了包含左DataFrame  (\u003ccode\u003edf1\u003c/code\u003e) 和右DataFrame (\u003ccode\u003edf2\u003c/code\u003e)的所有元素的DataFrame。运行上述代码显示以下内容：\u003c/p\u003e\n\u003cfigure class=\"highlight python\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e8\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e  user_id first_name last_name                  email                         image_url\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"number\"\u003e0\u003c/span\u003e   id001       Rivi     Valti    rvalti0@example.com  http://example.com/img/id001.png\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"number\"\u003e1\u003c/span\u003e   id002     Wynnie   McMurty  wmcmurty1@example.com  http://example.com/img/id002.jpg\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"number\"\u003e2\u003c/span\u003e   id003    Kristos   Ivanets  kivanets2@example.com  http://example.com/img/id003.bmp\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"number\"\u003e3\u003c/span\u003e   id004    Madalyn       Max      mmax3@example.com  http://example.com/img/id004.jpg\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"number\"\u003e4\u003c/span\u003e   id005       Tobe   Riddich  triddich4@example.com  http://example.com/img/id005.png\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"number\"\u003e5\u003c/span\u003e   id006      Regan    Huyghe    rhuyghe@example.com                               NaN\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"number\"\u003e6\u003c/span\u003e   id007    Kristin     Illis    killis4@example.com                               NaN\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e与左DataFrame没有任何匹配值的单元被填充为\u003ccode\u003eNaN\u003c/code\u003e。\u003c/p\u003e\n\u003cp\u003e再试试“右联接”，创建以下的合并DataFrame：\u003c/p\u003e\n\u003cfigure class=\"highlight python\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003edf_right_merge = pd.merge(df1, df2, how=\u003cspan class=\"string\"\u003e\u0026#39;right\u0026#39;\u003c/span\u003e)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eprint(df_right_merge)\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e如你所料，“右联接”将返回左DataFrame中与右DataFrame匹配的所有值:\u003c/p\u003e\n\u003cfigure class=\"highlight plaintext\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e  user_id first_name last_name                  email                         image_url\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e0   id001       Rivi     Valti    rvalti0@example.com  http://example.com/img/id001.png\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e1   id002     Wynnie   McMurty  wmcmurty1@example.com  http://example.com/img/id002.jpg\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2   id003    Kristos   Ivanets  kivanets2@example.com  http://example.com/img/id003.bmp\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3   id004    Madalyn       Max      mmax3@example.com  http://example.com/img/id004.jpg\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4   id005       Tobe   Riddich  triddich4@example.com  http://example.com/img/id005.png\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e由于\u003ccode\u003edf2\u003c/code\u003e 中的每一行在\u003ccode\u003edf1\u003c/code\u003e中都有一个值，所以在本例中，\u003ccode\u003eright\u003c/code\u003e联接类似于\u003ccode\u003einner\u003c/code\u003e联接。\u003c/p\u003e\n\u003cp\u003e让我们看一下 \u003ccode\u003eouter\u003c/code\u003e 联接。为了更好地说明它们是如何工作的，需要交换DataFrames的位置，并为“左联接”和“外联接”创建两个新变量：\u003c/p\u003e\n\u003cfigure class=\"highlight python\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003edf_left = pd.merge(df2, df1, how=\u003cspan class=\"string\"\u003e\u0026#39;left\u0026#39;\u003c/span\u003e, indicator=\u003cspan class=\"literal\"\u003eTrue\u003c/span\u003e)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003edf_outer = pd.merge(df2, df1, how=\u003cspan class=\"string\"\u003e\u0026#39;outer\u0026#39;\u003c/span\u003e, indicator=\u003cspan class=\"literal\"\u003eTrue\u003c/span\u003e)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eprint(df_left)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eprint(df_outer)\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e请记住，左边的DataFrame是\u003ccode\u003edf2\u003c/code\u003e，右边的DataFrame是\u003ccode\u003edf1\u003c/code\u003e。使用\u003ccode\u003ehow=\u0026#39;outer\u0026#39;\u003c/code\u003e 合并在键\u003cem\u003e上匹配的DataFrames，但也\u003c/em\u003e包括丢失或不匹配的值。\u003c/p\u003e\n\u003cp\u003e在上面的示例中，还设置了参数 \u003ccode\u003eindicator\u003c/code\u003e为\u003ccode\u003eTrue\u003c/code\u003e，以便Pandas在DataFrame的末尾添加一个额外的\u003ccode\u003e_merge\u003c/code\u003e 列。此列告诉我们是否在左、右DataFrame或两个DataFrames中都找到相应的那一行。\u003c/p\u003e\n\u003cp\u003e \u003ccode\u003edf_left\u003c/code\u003e 如下所示：\u003c/p\u003e\n\u003cfigure class=\"highlight python\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e  user_id                         image_url first_name last_name                  email _merge\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"number\"\u003e0\u003c/span\u003e   id001  http://example.com/img/id001.png       Rivi     Valti    rvalti0@example.com   both\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"number\"\u003e1\u003c/span\u003e   id002  http://example.com/img/id002.jpg     Wynnie   McMurty  wmcmurty1@example.com   both\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"number\"\u003e2\u003c/span\u003e   id003  http://example.com/img/id003.bmp    Kristos   Ivanets  kivanets2@example.com   both\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"number\"\u003e3\u003c/span\u003e   id004  http://example.com/img/id004.jpg    Madalyn       Max      mmax3@example.com   both\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"number\"\u003e4\u003c/span\u003e   id005  http://example.com/img/id005.png       Tobe   Riddich  triddich4@example.com   both\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e然而， \u003ccode\u003edf_outer\u003c/code\u003e 有这些数据：\u003c/p\u003e\n\u003cfigure class=\"highlight python\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e8\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e  user_id                         image_url first_name last_name                  email      _merge\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"number\"\u003e0\u003c/span\u003e   id001  http://example.com/img/id001.png       Rivi     Valti    rvalti0@example.com        both\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"number\"\u003e1\u003c/span\u003e   id002  http://example.com/img/id002.jpg     Wynnie   McMurty  wmcmurty1@example.com        both\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"number\"\u003e2\u003c/span\u003e   id003  http://example.com/img/id003.bmp    Kristos   Ivanets  kivanets2@example.com        both\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"number\"\u003e3\u003c/span\u003e   id004  http://example.com/img/id004.jpg    Madalyn       Max      mmax3@example.com        both\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"number\"\u003e4\u003c/span\u003e   id005  http://example.com/img/id005.png       Tobe   Riddich  triddich4@example.com        both\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"number\"\u003e5\u003c/span\u003e   id006                               NaN      Regan    Huyghe    rhuyghe@example.com  right_only\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"number\"\u003e6\u003c/span\u003e   id007                               NaN    Kristin     Illis    killis4@example.com  right_only\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e请注意，在 \u003ccode\u003edf_outer\u003c/code\u003e中，“id006”和“id007”只存在于右DataFrame中（在本例中是\u003ccode\u003edf1\u003c/code\u003e）。如果在不交换位置的情况下比较左联接和外联接，最终会得到两个相同的结果。\u003c/p\u003e\n\u003ch2 id=\"方法2：join\"\u003e\u003ca href=\"#方法2：join\" class=\"headerlink\" title=\"方法2：join()\"\u003e\u003c/a\u003e方法2：join()\u003c/h2\u003e\u003cp\u003e与Pandas函数\u003ccode\u003emerge()\u003c/code\u003e 不同，\u003ccode\u003ejoin()\u003c/code\u003e是DataFrame本身的方法，即：\u003ccode\u003eDataFrame.join(other, on=None, how=\u0026#39;left\u0026#39;, lsuffix=\u0026#39;\u0026#39;, rsuffix=\u0026#39;\u0026#39;, sort=False)\u003c/code\u003e。\u003c/p\u003e\n\u003cp\u003e用来调用\u003ccode\u003ejoin()\u003c/code\u003e 方法的DataFrame是左DataFrame。\u003ccode\u003eother\u003c/code\u003e参数中的DataFrame是右DataFrame。\u003c/p\u003e\n\u003cp\u003e参数 \u003ccode\u003eon\u003c/code\u003e 参数的值可以用 \u003ccode\u003e[\u0026#39;key1\u0026#39;, \u0026#39;key2\u0026#39; ...]\u003c/code\u003e 来定义匹配的键；\u003ccode\u003ehow\u003c/code\u003e 参数的值是 \u003ccode\u003eleft\u003c/code\u003e，\u003ccode\u003eright\u003c/code\u003e，\u003ccode\u003eouter\u003c/code\u003e，\u003ccode\u003einner\u003c/code\u003e 等，默认为 \u003ccode\u003eleft\u003c/code\u003e 。\u003c/p\u003e\n\u003cp\u003e下面将 \u003ccode\u003edf2\u003c/code\u003e 并入  \u003ccode\u003edf1\u003c/code\u003e：\u003c/p\u003e\n\u003cfigure class=\"highlight python\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003edf_join = df1.join(df2, rsuffix=\u003cspan class=\"string\"\u003e\u0026#39;_right\u0026#39;\u003c/span\u003e)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eprint(df_join)\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e像 \u003ccode\u003emerge()\u003c/code\u003e函数一样，\u003ccode\u003ejoin()\u003c/code\u003e 方法自动尝试匹配具有相同名称的键(列)。在上述示例中，它是\u003ccode\u003euser_id\u003c/code\u003e键。\u003c/p\u003e\n\u003cp\u003e上面的代码执行结果是：\u003c/p\u003e\n\u003cfigure class=\"highlight python\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e8\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e  user_id first_name last_name                  email user_id_right                         image_url\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"number\"\u003e0\u003c/span\u003e   id001       Rivi     Valti    rvalti0@example.com         id001  http://example.com/img/id001.png\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"number\"\u003e1\u003c/span\u003e   id002     Wynnie   McMurty  wmcmurty1@example.com         id002  http://example.com/img/id002.jpg\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"number\"\u003e2\u003c/span\u003e   id003    Kristos   Ivanets  kivanets2@example.com         id003  http://example.com/img/id003.bmp\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"number\"\u003e3\u003c/span\u003e   id004    Madalyn       Max      mmax3@example.com         id004  http://example.com/img/id004.jpg\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"number\"\u003e4\u003c/span\u003e   id005       Tobe   Riddich  triddich4@example.com         id005  http://example.com/img/id005.png\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"number\"\u003e5\u003c/span\u003e   id006      Regan    Huyghe    rhuyghe@example.com           NaN                               NaN\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"number\"\u003e6\u003c/span\u003e   id007    Kristin     Illis    killis4@example.com           NaN                               NaN\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e你可能注意到一个名为\u003ccode\u003euser_id_right\u003c/code\u003e的“复制列”。如果不想显示该列，可以将\u003ccode\u003euser_id\u003c/code\u003e 列设置为两列上的索引，以便在联接时不带后缀：\u003c/p\u003e\n\u003cfigure class=\"highlight python\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003edf_join_no_duplicates = df1.set_index(\u003cspan class=\"string\"\u003e\u0026#39;user_id\u0026#39;\u003c/span\u003e).join(df2.set_index(\u003cspan class=\"string\"\u003e\u0026#39;user_id\u0026#39;\u003c/span\u003e))\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eprint(df_join_no_duplicates)\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e这样做可以让我们摆脱\u003ccode\u003euser_id\u003c/code\u003e列，并将其设置为索引列，从而产生了一个更清晰的DataFrame:\u003c/p\u003e\n\u003cfigure class=\"highlight plaintext\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e8\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e9\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e        first_name last_name                  email                         image_url\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003euser_id                                                                              \u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eid001         Rivi     Valti    rvalti0@example.com  http://example.com/img/id001.png\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eid002       Wynnie   McMurty  wmcmurty1@example.com  http://example.com/img/id002.jpg\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eid003      Kristos   Ivanets  kivanets2@example.com  http://example.com/img/id003.bmp\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eid004      Madalyn       Max      mmax3@example.com  http://example.com/img/id004.jpg\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eid005         Tobe   Riddich  triddich4@example.com  http://example.com/img/id005.png\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eid006        Regan    Huyghe    rhuyghe@example.com                               NaN\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eid007      Kristin     Illis    killis4@example.com                               NaN\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003ch2 id=\"方法3：append\"\u003e\u003ca href=\"#方法3：append\" class=\"headerlink\" title=\"方法3：append()\"\u003e\u003c/a\u003e方法3：append()\u003c/h2\u003e\u003cp\u003e正如Pandas官方文档所指出的，由于\u003ccode\u003econcat()\u003c/code\u003e和\u003ccode\u003eappend()\u003c/code\u003e 方法返回DataFrames的新副本，过度使用它可能会影响程序的性能。\u003c/p\u003e\n\u003cp\u003e这种追加的操作，比较适合于将一个DataFrame的每行合并到另外一个DataFrame的尾部，即得到一个新的DataFrame，它包含2个DataFrames的所有的行，而不是在它们的列上匹配数据。\u003c/p\u003e\n\u003cp\u003e将\u003ccode\u003edf2\u003c/code\u003e 追加到 \u003ccode\u003edf1\u003c/code\u003e 并打印结果：\u003c/p\u003e\n\u003cfigure class=\"highlight python\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003edf_append = df1.append(df2, ignore_index=\u003cspan class=\"literal\"\u003eTrue\u003c/span\u003e)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eprint(df_append)\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e使用\u003ccode\u003eappend()\u003c/code\u003e将不匹配任何键上的DataFrames ，它只将另一个DataFrame添加到第一个DataFrame并返回它的副本。如果这两个DataFrames 的形状不匹配，Pandas将用NaN替换任何不匹配的单元格。\u003c/p\u003e\n\u003cfigure class=\"highlight python\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e8\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e9\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e10\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e11\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e12\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e13\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e   user_id first_name last_name                  email                         image_url\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"number\"\u003e0\u003c/span\u003e    id001       Rivi     Valti    rvalti0@example.com                               NaN\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"number\"\u003e1\u003c/span\u003e    id002     Wynnie   McMurty  wmcmurty1@example.com                               NaN\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"number\"\u003e2\u003c/span\u003e    id003    Kristos   Ivanets  kivanets2@example.com                               NaN\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"number\"\u003e3\u003c/span\u003e    id004    Madalyn       Max      mmax3@example.com                               NaN\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"number\"\u003e4\u003c/span\u003e    id005       Tobe   Riddich  triddich4@example.com                               NaN\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"number\"\u003e5\u003c/span\u003e    id006      Regan    Huyghe    rhuyghe@example.com                               NaN\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"number\"\u003e6\u003c/span\u003e    id007    Kristin     Illis    killis4@example.com                               NaN\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"number\"\u003e7\u003c/span\u003e    id001        NaN       NaN                    NaN  http://example.com/img/id001.png\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"number\"\u003e8\u003c/span\u003e    id002        NaN       NaN                    NaN  http://example.com/img/id002.jpg\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"number\"\u003e9\u003c/span\u003e    id003        NaN       NaN                    NaN  http://example.com/img/id003.bmp\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"number\"\u003e10\u003c/span\u003e   id004        NaN       NaN                    NaN  http://example.com/img/id004.jpg\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"number\"\u003e11\u003c/span\u003e   id005        NaN       NaN                    NaN  http://example.com/img/id005.png\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003ch2 id=\"方法4：concat\"\u003e\u003ca href=\"#方法4：concat\" class=\"headerlink\" title=\"方法4：concat()\"\u003e\u003c/a\u003e方法4：concat()\u003c/h2\u003e\u003cp\u003e\u003ccode\u003econcat()\u003c/code\u003e 与 \u003ccode\u003emerge()\u003c/code\u003e 和\u003ccode\u003ejoin()\u003c/code\u003e相比，更灵活，因为它允许按行或按列组合DataFrames 。\u003c/p\u003e\n\u003cp\u003e以下是带参数的完整函数：\u003c/p\u003e\n\u003cfigure class=\"highlight python\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003epandas.concat(objs, axis=\u003cspan class=\"number\"\u003e0\u003c/span\u003e, join=\u003cspan class=\"string\"\u003e\u0026#39;outer\u0026#39;\u003c/span\u003e, ignore_index=\u003cspan class=\"literal\"\u003eFalse\u003c/span\u003e, keys=\u003cspan class=\"literal\"\u003eNone\u003c/span\u003e,\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e              levels=\u003cspan class=\"literal\"\u003eNone\u003c/span\u003e, names=\u003cspan class=\"literal\"\u003eNone\u003c/span\u003e, verify_integrity=\u003cspan class=\"literal\"\u003eFalse\u003c/span\u003e, sort=\u003cspan class=\"literal\"\u003eFalse\u003c/span\u003e, copy=\u003cspan class=\"literal\"\u003eTrue\u003c/span\u003e)\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e下面是 \u003ccode\u003econcat()\u003c/code\u003e函数最常用的参数：\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003cp\u003e\u003ccode\u003eobjs\u003c/code\u003e：将要连接的DataFrame 对象（\u003ccode\u003e[df1，df2，…]\u003c/code\u003e）的列表\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e\u003ccode\u003eaxis\u003c/code\u003e： 定义连接的方向，\u003ccode\u003e0\u003c/code\u003e 表示0轴方向，即以行为单位链接；\u003ccode\u003e1\u003c/code\u003e 1轴方向，即以列为单位连接\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e\u003ccode\u003ejoin\u003c/code\u003e 的值可以是 \u003ccode\u003einner\u003c/code\u003e （交集）或 \u003ccode\u003eouter\u003c/code\u003e（并集）\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e\u003ccode\u003eignore_index\u003c/code\u003e： 默认设置为 \u003ccode\u003eFalse\u003c/code\u003e ，即索引值为原有DataFrames中的状态，这可能会导致索引值重复。如果设置为 \u003ccode\u003eTrue\u003c/code\u003e ，它将忽略原始值并按顺序重新创建索引值\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e\u003ccode\u003ekeys\u003c/code\u003e：用于设置多级索引，可以将它看作附加在DataFrame左外侧的索引的另一个层级的索引，它可以帮助我们在值不唯一时区分索引\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e用与 \u003ccode\u003edf2\u003c/code\u003e 相同的列类型创建一个新的DataFrame，但这个DataFrame包含\u003ccode\u003eid006\u003c/code\u003e和\u003ccode\u003eid007\u003c/code\u003e的\u003ccode\u003eimage_url\u003c/code\u003e：\u003c/p\u003e\n\u003cfigure class=\"highlight python\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003edf2_addition = pd.DataFrame({\u003cspan class=\"string\"\u003e\u0026#39;user_id\u0026#39;\u003c/span\u003e: [\u003cspan class=\"string\"\u003e\u0026#39;id006\u0026#39;\u003c/span\u003e, \u003cspan class=\"string\"\u003e\u0026#39;id007\u0026#39;\u003c/span\u003e],\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e                             \u003cspan class=\"string\"\u003e\u0026#39;image_url\u0026#39;\u003c/span\u003e: [\u003cspan class=\"string\"\u003e\u0026#39;http://example.com/img/id006.png\u0026#39;\u003c/span\u003e,\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e                                           \u003cspan class=\"string\"\u003e\u0026#39;http://example.com/img/id007.jpg\u0026#39;\u003c/span\u003e]\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e                             })\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e为了按行联接\u003ccode\u003edf2\u003c/code\u003e和\u003ccode\u003edf2_addition\u003c/code\u003e，可以将它们作为\u003ccode\u003eobjs\u003c/code\u003e参数传递到一个列表中，并将结果DataFrame赋给一个新变量：\u003c/p\u003e\n\u003cfigure class=\"highlight python\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003edf_row_concat = pd.concat([df2, df2_addition])\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eprint(df_row_concat)\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e成功地填充了缺少的值：\u003c/p\u003e\n\u003cfigure class=\"highlight plaintext\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e8\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e  user_id                         image_url\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e0   id001  http://example.com/img/id001.png\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e1   id002  http://example.com/img/id002.jpg\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2   id003  http://example.com/img/id003.bmp\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3   id004  http://example.com/img/id004.jpg\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4   id005  http://example.com/img/id005.png\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e0   id006  http://example.com/img/id006.png\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e1   id007  http://example.com/img/id007.jpg\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e不过，请看最左边一栏中的索引，存在索引“0”和“1”的重复。为了获得全新的唯一索引值，将\u003ccode\u003eTrue\u003c/code\u003e传给\u003ccode\u003eignore_index\u003c/code\u003e参数：\u003c/p\u003e\n\u003cfigure class=\"highlight python\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003edf_row_concat = pd.concat([df2, df2_addition], ignore_index=\u003cspan class=\"literal\"\u003eTrue\u003c/span\u003e)\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e现在，\u003ccode\u003edf_row_concat\u003c/code\u003e具有唯一的索引值：\u003c/p\u003e\n\u003cfigure class=\"highlight plaintext\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e8\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e  user_id                         image_url\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e0   id001  http://example.com/img/id001.png\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e1   id002  http://example.com/img/id002.jpg\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2   id003  http://example.com/img/id003.bmp\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3   id004  http://example.com/img/id004.jpg\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4   id005  http://example.com/img/id005.png\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5   id006  http://example.com/img/id006.png\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6   id007  http://example.com/img/id007.jpg\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e正如前面提到的，\u003ccode\u003econcat()\u003c/code\u003e可以在水平和竖直（0轴和1轴）方向上合并，要按列（即在1轴方向上合并）将两个DataFrames连接在一起，要将\u003ccode\u003eaxis\u003c/code\u003e值从默认值\u003ccode\u003e0\u003c/code\u003e更改为\u003ccode\u003e1\u003c/code\u003e：\u003c/p\u003e\n\u003cfigure class=\"highlight python\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003edf_column_concat = pd.concat([df1, df_row_concat], axis=\u003cspan class=\"number\"\u003e1\u003c/span\u003e)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eprint(df_column_concat)\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e你会注意到，它的工作方式与merge不同，在一个键上匹配两个表：\u003c/p\u003e\n\u003cfigure class=\"highlight plaintext\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e8\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e  user_id first_name last_name                  email user_id                         image_url\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e0   id001       Rivi     Valti    rvalti0@example.com   id001  http://example.com/img/id001.png\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e1   id002     Wynnie   McMurty  wmcmurty1@example.com   id002  http://example.com/img/id002.jpg\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2   id003    Kristos   Ivanets  kivanets2@example.com   id003  http://example.com/img/id003.bmp\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3   id004    Madalyn       Max      mmax3@example.com   id004  http://example.com/img/id004.jpg\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4   id005       Tobe   Riddich  triddich4@example.com   id005  http://example.com/img/id005.png\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5   id006      Regan    Huyghe    rhuyghe@example.com   id006  http://example.com/img/id006.png\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6   id007    Kristin     Illis    killis4@example.com   id007  http://example.com/img/id007.jpg\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e甚至于右边的DataFrame可以没有\u003ccode\u003euser_id\u003c/code\u003e列，也会得到类似上面的相同结果。函数\u003ccode\u003econcat()\u003c/code\u003e将两个DataFrames粘在一起，同时考虑DataFrames索引值和表格形状。它不会像\u003ccode\u003emerge()\u003c/code\u003e 或\u003ccode\u003ejoin()\u003c/code\u003e那样按键匹配。有兴趣的话，可以通过更改\u003ccode\u003ejoin\u003c/code\u003e参数的值尝试不同形式的组合，从而了解其差异！\u003c/p\u003e\n\u003ch2 id=\"方法5：combine-first-和update\"\u003e\u003ca href=\"#方法5：combine-first-和update\" class=\"headerlink\" title=\"方法5：combine_first()和update()\"\u003e\u003c/a\u003e方法5：combine_first()和update()\u003c/h2\u003e\u003cp\u003e假设有一个DataFrame，但是它存在缺失数据，希望能够从另一个DataFrame中讲丢失的数据填充进来。这样，就要保留第一个DataFrame中的所有非缺失值，同时用第二个DataFrame可用的非缺失值（如果有这样的非缺失值）替换第一个DataFrame中的所有\u003ccode\u003eNaN\u003c/code\u003e。\u003c/p\u003e\n\u003cfigure class=\"highlight python\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e8\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e9\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e10\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e11\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e12\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e13\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"keyword\"\u003eimport\u003c/span\u003e numpy \u003cspan class=\"keyword\"\u003eas\u003c/span\u003e np\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003edf_first = pd.DataFrame({\u003cspan class=\"string\"\u003e\u0026#39;COL 1\u0026#39;\u003c/span\u003e: [\u003cspan class=\"string\"\u003e\u0026#39;X\u0026#39;\u003c/span\u003e, \u003cspan class=\"string\"\u003e\u0026#39;X\u0026#39;\u003c/span\u003e, np.nan],\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e                         \u003cspan class=\"string\"\u003e\u0026#39;COL 2\u0026#39;\u003c/span\u003e: [\u003cspan class=\"string\"\u003e\u0026#39;X\u0026#39;\u003c/span\u003e, np.nan, \u003cspan class=\"string\"\u003e\u0026#39;X\u0026#39;\u003c/span\u003e],\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e                         \u003cspan class=\"string\"\u003e\u0026#39;COL 3\u0026#39;\u003c/span\u003e: [np.nan, \u003cspan class=\"string\"\u003e\u0026#39;X\u0026#39;\u003c/span\u003e, \u003cspan class=\"string\"\u003e\u0026#39;X\u0026#39;\u003c/span\u003e]},\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e                        index=range(\u003cspan class=\"number\"\u003e0\u003c/span\u003e, \u003cspan class=\"number\"\u003e3\u003c/span\u003e))\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003edf_second = pd.DataFrame({\u003cspan class=\"string\"\u003e\u0026#39;COL 1\u0026#39;\u003c/span\u003e: [np.nan, \u003cspan class=\"string\"\u003e\u0026#39;O\u0026#39;\u003c/span\u003e, \u003cspan class=\"string\"\u003e\u0026#39;O\u0026#39;\u003c/span\u003e],\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e                          \u003cspan class=\"string\"\u003e\u0026#39;COL 2\u0026#39;\u003c/span\u003e: [\u003cspan class=\"string\"\u003e\u0026#39;O\u0026#39;\u003c/span\u003e, \u003cspan class=\"string\"\u003e\u0026#39;O\u0026#39;\u003c/span\u003e, \u003cspan class=\"string\"\u003e\u0026#39;O\u0026#39;\u003c/span\u003e]},\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e                         index=range(\u003cspan class=\"number\"\u003e0\u003c/span\u003e, \u003cspan class=\"number\"\u003e3\u003c/span\u003e))\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eprint(df_first)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eprint(df_second)\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e\u003ccode\u003edf_first\u003c/code\u003e 有3列，每列中有1个缺失值：\u003c/p\u003e\n\u003cfigure class=\"highlight plaintext\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e  COL 1 COL 2 COL 3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e0     X     X   NaN\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e1     X   NaN     X\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2   NaN     X     X\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e\u003ccode\u003edf_second\u003c/code\u003e只有2列，第一列中缺少一个值：\u003c/p\u003e\n\u003cfigure class=\"highlight plaintext\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e  COL 1 COL 2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e0   NaN     O\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e1     O     O\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2     O     O\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e下面用\u003ccode\u003edf_second\u003c/code\u003e中所有对应的值来填充df_first` 中缺失值：\u003c/p\u003e\n\u003cfigure class=\"highlight python\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003edf_tictactoe = df_first.combine_first(df_second)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eprint(df_tictactoe)\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e\u003ccode\u003ecombine_first()\u003c/code\u003e 方法只会按索引顺序替换\u003ccode\u003eNaN\u003c/code\u003e值，并且会保留第一个DataFrame中所有非缺失的值：\u003c/p\u003e\n\u003cfigure class=\"highlight plaintext\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e  COL 1 COL 2 COL 3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e0     X     X   NaN\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e1     X     O     X\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2     O     X     X\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e另一方面，如果想用 \u003ccode\u003edf_second\u003c/code\u003e中相应的值（不管它们是否为NaN）覆盖\u003ccode\u003edf_first\u003c/code\u003e中的值，可以使用 \u003ccode\u003eupdate()\u003c/code\u003e方法。\u003c/p\u003e\n\u003cp\u003e再创建另一个DataFrame：\u003c/p\u003e\n\u003cfigure class=\"highlight python\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003edf_third = pd.DataFrame({\u003cspan class=\"string\"\u003e\u0026#39;COL 1\u0026#39;\u003c/span\u003e: [\u003cspan class=\"string\"\u003e\u0026#39;O\u0026#39;\u003c/span\u003e], \u003cspan class=\"string\"\u003e\u0026#39;COL 2\u0026#39;\u003c/span\u003e: [\u003cspan class=\"string\"\u003e\u0026#39;O\u0026#39;\u003c/span\u003e], \u003cspan class=\"string\"\u003e\u0026#39;COL 3\u0026#39;\u003c/span\u003e: [\u003cspan class=\"string\"\u003e\u0026#39;O\u0026#39;\u003c/span\u003e]})\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eprint(df_third)\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e输出：\u003c/p\u003e\n\u003cfigure class=\"highlight plaintext\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e  COL 1 COL 2 COL 3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e0     O     O     O\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e现在用\u003ccode\u003edf_third\u003c/code\u003e中的值更新\u003ccode\u003edf_first\u003c/code\u003e：\u003c/p\u003e\n\u003cfigure class=\"highlight python\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003edf_first.update(df_third)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eprint(df_first)\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e请记住，与\u003ccode\u003ecombine_first()\u003c/code\u003e不同，\u003ccode\u003eupdate()\u003c/code\u003e不会返回新的DataFrame，它原地修改\u003ccode\u003edf_first\u003c/code\u003e，更改相应的值：\u003c/p\u003e\n\u003cfigure class=\"highlight plaintext\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e  COL 1 COL 2 COL 3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e0     O     O     O\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e1     X   NaN     X\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2   NaN     X     X\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e \u003ccode\u003eupdate()\u003c/code\u003e 函数的 \u003ccode\u003eoverwrite\u003c/code\u003e参数默认设置为\u003ccode\u003eTrue\u003c/code\u003e，这就是为什么它会更改所有相应的值，而不是只更改\u003ccode\u003eNaN\u003c/code\u003e值。如果将其更改为\u003ccode\u003eFalse\u003c/code\u003e，就仅替换\u003ccode\u003eNaN\u003c/code\u003e：\u003c/p\u003e\n\u003cfigure class=\"highlight python\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003edf_tictactoe.update(df_first, overwrite=\u003cspan class=\"literal\"\u003eFalse\u003c/span\u003e)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eprint(df_tictactoe)\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e以下是\u003ccode\u003edf_tictactoe\u003c/code\u003eDataFrame的最终状态：\u003c/p\u003e\n\u003cfigure class=\"highlight plaintext\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e  COL 1 COL 2 COL 3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e0     X     X     O\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e1     X     O     X\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2     O     X     X\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003ch2 id=\"结论\"\u003e\u003ca href=\"#结论\" class=\"headerlink\" title=\"结论\"\u003e\u003c/a\u003e结论\u003c/h2\u003e\u003cp\u003ePandas为合并DataFrames提供了强大的工具，但很难确定死板的条条框框，来决定什么时候用什么函数。虽然大多数情况下，\u003ccode\u003emerge()\u003c/code\u003e 已经足够了，但在某些情况下，可能需要使用\u003ccode\u003econcat()\u003c/code\u003e来按行合并，或者使用\u003ccode\u003ejoin()\u003c/code\u003e，或者使用\u003ccode\u003ecombine_first()\u003c/code\u003e 和 \u003ccode\u003eupdate()\u003c/code\u003e来填充缺失值。甚至可以使用\u003ccode\u003eappend()\u003c/code\u003e添加数据行。\u003c/p\u003e\n\u003cp\u003e总之，具体问题具体分析。\u003c/p\u003e\n\u003ch2 id=\"参考文献\"\u003e\u003ca href=\"#参考文献\" class=\"headerlink\" title=\"参考文献\"\u003e\u003c/a\u003e参考文献\u003c/h2\u003e\u003cp\u003e[1]. \u003ca href=\"https://stackabuse.com/how-to-merge-dataframes-in-pandas/\" target=\"_blank\" rel=\"noopener\"\u003ehttps://stackabuse.com/how-to-merge-dataframes-in-pandas/\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003e[2]. 跟老齐学Python：数据分析. 齐伟. 北京：电子工业出版社\u003c/p\u003e\n\u003c/section\u003e\n    \u003c!-- Tags START --\u003e\n    \n    \u003c!-- Tags END --\u003e\n    \u003c!-- NAV START --\u003e\n    \n  \u003cdiv class=\"nav-container\"\u003e\n    \u003c!-- reverse left and right to put prev and next in a more logic postition --\u003e\n    \n      \u003ca class=\"nav-left\" href=\"/2021/02/27/upgrade-pip/\"\u003e\n        \u003cspan class=\"nav-arrow\"\u003e← \u003c/span\u003e\n        \n          必须升级pip，为什么？！\n        \n      \u003c/a\u003e\n    \n    \n      \u003ca class=\"nav-right\" href=\"/2021/03/03/python-strings-word/\"\u003e\n        \n          Python字符串的前世今生\n        \n        \u003cspan class=\"nav-arrow\"\u003e →\u003c/span\u003e\n      \u003c/a\u003e\n    \n  \u003c/div\u003e\n\n    \u003c!-- NAV END --\u003e\n    \u003c!-- 打赏 START --\u003e\n    \n      \u003cdiv class=\"money-like\"\u003e\n        \u003cdiv class=\"reward-btn\"\u003e\n          赏\n          \u003cspan class=\"money-code\"\u003e\n            \u003cspan class=\"alipay-code\"\u003e\n              \u003cdiv class=\"code-image\"\u003e\u003c/div\u003e\n              \u003cb\u003e使用支付宝打赏\u003c/b\u003e\n            \u003c/span\u003e\n            \u003cspan class=\"wechat-code\"\u003e\n              \u003cdiv class=\"code-image\"\u003e\u003c/div\u003e\n              \u003cb\u003e使用微信打赏\u003c/b\u003e\n            \u003c/span\u003e\n          \u003c/span\u003e\n        \u003c/div\u003e\n        \u003cp class=\"notice\"\u003e若你觉得我的文章对你有帮助，欢迎点击上方按钮对我打赏\u003c/p\u003e\n      \u003c/div\u003e\n    \n    \u003c!-- 打赏 END --\u003e\n    \u003c!-- 二维码 START --\u003e\n    \u003c!--% if (theme.qrcode) { %--\u003e\n      \u003cdiv class=\"qrcode\"\u003e\n        \u003c!--canvas id=\"share-qrcode\"\u003e\u003c/!--canvas--\u003e\n        \u003cimg src=\"https://public-tuchuang.oss-cn-hangzhou.aliyuncs.com/WechatIMG6_20200109154827.jpeg\" width=\"400\"/\u003e\n        \u003cp class=\"notice\"\u003e关注微信公众号，读文章、听课程，提升技能\u003c/p\u003e\n      \u003c/div\u003e\n    \u003c!--% } %--\u003e\n    \u003c!-- 二维码 END --\u003e\n    \n      \u003c!-- No Comment --\u003e\n    \n  \u003c/article\u003e",
  "Date": "2021-03-02T00:00:00Z",
  "Author": "老齐教室"
}