{
  "Source": "qiwsir.github.io",
  "Title": "用Python读取Excel文件指南",
  "Link": "https://qiwsir.github.io/2020/06/11/reading-excel-files/",
  "Content": "\u003carticle class=\"post-article\"\u003e\n    \u003ch2\u003e用Python读取Excel文件指南\u003c/h2\u003e\n    \u003cp class=\"post-date\"\u003e2020-06-11\u003c/p\u003e\n    \u003csection class=\"markdown-content\"\u003e\u003cp\u003e原作者：Erik Marsja\u003c/p\u003e\n\u003cp\u003e编译者：老齐\u003c/p\u003e\n\u003cp\u003e与本文相关的图书推荐：\u003cstrong\u003e《数据准备和特征工程》\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"https://public-tuchuang.oss-cn-hangzhou.aliyuncs.com/%E7%89%B9%E5%BE%81%E5%B7%A5%E7%A8%8B2_20200114135935.png\" alt=\"\"/\u003e\u003c/p\u003e\n\u003cp\u003e本书适合于数据科学、机器学习、深度学习等方向的学习者阅读。书中通过案例的形式，系统阐述了数据获取、数据整理、特征工程、特征选择等方法。\u003c/p\u003e\n\u003chr/\u003e\n\u003cp\u003e本文，将重点阐述用Python如何读取Excel文件（xlsx），重点是演示使用openpyxl模块读取xlsx类型的文件。首先，我们要看一些简单的示例；然后，我们将学习读取多个Excel文件。\u003c/p\u003e\n\u003cp\u003e如果你阅读过《数据准备和特征工程》（电子工业出版社出版）这本书，就肯定知道，在书中，作者介绍了如何使用Pandas读取Excel文件。在阐述本文的同时，你所看到的书中的方法，依然有效且常用。本文的目的主要是要介绍另外一种方法，并且这种方法也有它的特点。\u003c/p\u003e\n\u003ch2 id=\"Openpyxl简介\"\u003e\u003ca href=\"#Openpyxl简介\" class=\"headerlink\" title=\"Openpyxl简介\"\u003e\u003c/a\u003eOpenpyxl简介\u003c/h2\u003e\u003cp\u003eopenpyxl模块的官方网站是：\u003ca href=\"https://openpyxl.readthedocs.io/en/stable/。这里，先演示一个简单的示例，看看在Python语言中如何用openpyxl模块读取一个xlsx文件。\" target=\"_blank\" rel=\"noopener\"\u003ehttps://openpyxl.readthedocs.io/en/stable/。这里，先演示一个简单的示例，看看在Python语言中如何用openpyxl模块读取一个xlsx文件。\u003c/a\u003e\u003c/p\u003e\n\u003cfigure class=\"highlight python\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e8\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"keyword\"\u003eimport\u003c/span\u003e openpyxl\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"keyword\"\u003efrom\u003c/span\u003e pathlib \u003cspan class=\"keyword\"\u003eimport\u003c/span\u003e Path\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003exlsx_file = Path(\u003cspan class=\"string\"\u003e\u0026#39;SimData\u0026#39;\u003c/span\u003e, \u003cspan class=\"string\"\u003e\u0026#39;play_data.xlsx\u0026#39;\u003c/span\u003e)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003ewb_obj = openpyxl.load_workbook(xlsx_file) \u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"comment\"\u003e# 得到当前工作表:\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003esheet = wb_obj.active\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e当然，在理解上面代码之前，你应该已经知道如何读写文件了，如果这方面尚有不足，请阅读《跟老齐学Python：轻松入门》中的有关章节。\u003c/p\u003e\n\u003cp\u003e为了能够使用openpyxl模块，请先确认，在本地已经安装了Python3和这个模块。模块的安装方法非常简单，即：\u003ccode\u003epip install openpyxl\u003c/code\u003e，如果你使用的是conda，还可以：\u003ccode\u003econda install openpyxl\u003c/code\u003e。注意，使用pip安装的时候，如果提示你不是最新版本，应该尽快升级，用最新版本的pip来安装。\u003c/p\u003e\n\u003ch2 id=\"读取单个文件\"\u003e\u003ca href=\"#读取单个文件\" class=\"headerlink\" title=\"读取单个文件\"\u003e\u003c/a\u003e读取单个文件\u003c/h2\u003e\u003cp\u003e前面的代码中，已经读取了单个文件，下面我们更详细地对代码进行解读。\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003e引入模块\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003e读取xlsx文件的第一步，就是要引入必要的模块，这里我们引入了Path和openpyxl两个模块。\u003c/p\u003e\n\u003cfigure class=\"highlight python\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"keyword\"\u003eimport\u003c/span\u003e openpyxl\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"keyword\"\u003efrom\u003c/span\u003e pathlib \u003cspan class=\"keyword\"\u003eimport\u003c/span\u003e Path\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\n\n\u003cp\u003e\u003cimg src=\"https://public-tuchuang.oss-cn-hangzhou.aliyuncs.com/step1-to-read-xlsx-files-import-the-modules_20200611093212.jpg\" alt=\"\"/\u003e\u003c/p\u003e\n\u003col start=\"2\"\u003e\n\u003cli\u003e设置Excel文件路径\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003e在这一步，我们用Path创建了一个实例，并且用变量\u003ccode\u003exlsx_file\u003c/code\u003e引用，它包含了文件的路径和文件名称。\u003c/p\u003e\n\u003cfigure class=\"highlight python\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"comment\"\u003e# Setting the path to the xlsx file:\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003exlsx_file = Path(\u003cspan class=\"string\"\u003e\u0026#39;SimData\u0026#39;\u003c/span\u003e, \u003cspan class=\"string\"\u003e\u0026#39;play_data.xlsx\u0026#39;\u003c/span\u003e)\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e\u003cimg src=\"https://public-tuchuang.oss-cn-hangzhou.aliyuncs.com/step2_20200611093336.jpg\" alt=\"\"/\u003e\u003c/p\u003e\n\u003cp\u003e注意，代码中的\u003ccode\u003eSimData\u003c/code\u003e是当前工作目录的子目录，本例中的Excel文件保存在该目录中，如果保存在了其他目录中，需要设置完整的文件路径，例如：\u003ccode\u003exlsx_file = Path(Path.home(), \u0026#39;Documents\u0026#39;, \u0026#39;SimData\u0026#39;, \u0026#39;play_data.xlsx\u0026#39;)\u003c/code\u003e，这是将Excel文件保存到了\u003ccode\u003eDocuments\u003c/code\u003e目录里面的\u003ccode\u003eSimData\u003c/code\u003e子目录中了。\u003c/p\u003e\n\u003col start=\"3\"\u003e\n\u003cli\u003e读入Excel文件（工作簿）\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003e第三步，利用\u003ccode\u003eload_workbook()\u003c/code\u003e方法读取文件：\u003c/p\u003e\n\u003cfigure class=\"highlight python\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003ewb_obj = openpyxl.load_workbook(xlsx_file)\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e\u003cimg src=\"https://public-tuchuang.oss-cn-hangzhou.aliyuncs.com/step3-to-reading-a-excel-file-in-pytho3-using-openpyxl_20200611094138.jpg\" alt=\"\"/\u003e\u003c/p\u003e\n\u003cp\u003e打印输出结果说明，当前得到的是工作簿对象。\u003c/p\u003e\n\u003col start=\"4\"\u003e\n\u003cli\u003e从Excel文件中读入当前工作表\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003e一个工作簿，有多个工作表。我们能够使用的是当前的工作表，可以用下面的方式获得：\u003c/p\u003e\n\u003cfigure class=\"highlight python\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003ewsheet = wb_obj.active\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e\u003cimg src=\"https://public-tuchuang.oss-cn-hangzhou.aliyuncs.com/setp4-to-reading-a-excel-file-in-Python-read-the-sheet_20200611094434.jpg\" alt=\"\"/\u003e\u003c/p\u003e\n\u003cp\u003e如果知道了工作表名称，可以用这种方式得到指定工作表\u003ccode\u003eplay_data = wb_obj[\u0026#39;play_data\u0026#39;]\u003c/code\u003e。这样就能够实现工作表的切换。\u003c/p\u003e\n\u003col start=\"5\"\u003e\n\u003cli\u003e操作工作表\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003e现在可以编辑工作表了，例如，用下面的方式获得指定单元格的值。\u003c/p\u003e\n\u003cfigure class=\"highlight python\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003eprint(sheet[\u003cspan class=\"string\"\u003e\u0026#34;C2\u0026#34;\u003c/span\u003e].value)\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e再如，对于已经读取到的工作表，我们能够用循环语句获得指定行，并且把各个单元格中的值打印出来。\u003c/p\u003e\n\u003cfigure class=\"highlight python\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"keyword\"\u003efor\u003c/span\u003e row \u003cspan class=\"keyword\"\u003ein\u003c/span\u003e sheet.iter_rows(max_row=\u003cspan class=\"number\"\u003e6\u003c/span\u003e):\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"keyword\"\u003efor\u003c/span\u003e cell \u003cspan class=\"keyword\"\u003ein\u003c/span\u003e row:\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        print(cell.value, end=\u003cspan class=\"string\"\u003e\u0026#34; \u0026#34;\u003c/span\u003e)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    print()\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e注意，上面代码中的参数\u003ccode\u003emax_row\u003c/code\u003e，其值为\u003ccode\u003e6\u003c/code\u003e，意味着读取这个工作表的前6行。\u003c/p\u003e\n\u003col start=\"6\"\u003e\n\u003cli\u003e补充：输出行和列的数量\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003e再补充一个常用操作，就是确定Excel文件的行和列的数量。\u003c/p\u003e\n\u003cfigure class=\"highlight python\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003eprint(sheet.max_row, sheet.max_column)\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e\u003cimg src=\"https://public-tuchuang.oss-cn-hangzhou.aliyuncs.com/step6-reading-xlsx-files-in-python-get-number-of-rows-and-cols_20200611100158.jpg\" alt=\"\"/\u003e\u003c/p\u003e\n\u003ch2 id=\"将读入的Excel文件保存为Python字典\"\u003e\u003ca href=\"#将读入的Excel文件保存为Python字典\" class=\"headerlink\" title=\"将读入的Excel文件保存为Python字典\"\u003e\u003c/a\u003e将读入的Excel文件保存为Python字典\u003c/h2\u003e\u003cp\u003e把Excel文件的内容读入之后，怎么将它保存为字典对象？\u003c/p\u003e\n\u003cp\u003e有时候，你可能需要得到列的名称，下面代码就演示了如何实现这种需求。\u003c/p\u003e\n\u003cfigure class=\"highlight python\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e8\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e9\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e10\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e11\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e12\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"keyword\"\u003eimport\u003c/span\u003e openpyxl\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"keyword\"\u003efrom\u003c/span\u003e pathlib \u003cspan class=\"keyword\"\u003eimport\u003c/span\u003e Path\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003exlsx_file = Path(\u003cspan class=\"string\"\u003e\u0026#39;SimData\u0026#39;\u003c/span\u003e, \u003cspan class=\"string\"\u003e\u0026#39;play_data.xlsx\u0026#39;\u003c/span\u003e)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003ewb_obj = openpyxl.load_workbook(xlsx_file)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003esheet = wb_obj.active\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003ecol_names = []\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"keyword\"\u003efor\u003c/span\u003e column \u003cspan class=\"keyword\"\u003ein\u003c/span\u003e sheet.iter_cols(\u003cspan class=\"number\"\u003e1\u003c/span\u003e, sheet.max_column):\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    col_names.append(column[\u003cspan class=\"number\"\u003e0\u003c/span\u003e].value)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e   \u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eprint(col_names)\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e为了将Excel内容保存为字典对象，当然要创建一个字典，然后就是通过循环的方式，向字典中增加相应内容。\u003c/p\u003e\n\u003cfigure class=\"highlight python\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e8\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e9\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e10\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e11\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e12\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e13\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e14\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e15\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e16\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e17\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e18\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003edata = {}\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"keyword\"\u003efor\u003c/span\u003e i, row \u003cspan class=\"keyword\"\u003ein\u003c/span\u003e enumerate(sheet.iter_rows(values_only=\u003cspan class=\"literal\"\u003eTrue\u003c/span\u003e)):\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"keyword\"\u003eif\u003c/span\u003e i == \u003cspan class=\"number\"\u003e0\u003c/span\u003e:\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        data[row[\u003cspan class=\"number\"\u003e1\u003c/span\u003e]] = []\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        data[row[\u003cspan class=\"number\"\u003e2\u003c/span\u003e]] = []\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        data[row[\u003cspan class=\"number\"\u003e3\u003c/span\u003e]] = []\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        data[row[\u003cspan class=\"number\"\u003e4\u003c/span\u003e]] = []\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        data[row[\u003cspan class=\"number\"\u003e5\u003c/span\u003e]] = []\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        data[row[\u003cspan class=\"number\"\u003e6\u003c/span\u003e]] = []\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"keyword\"\u003eelse\u003c/span\u003e:\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        data[\u003cspan class=\"string\"\u003e\u0026#39;Subject ID\u0026#39;\u003c/span\u003e].append(row[\u003cspan class=\"number\"\u003e1\u003c/span\u003e])\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        data[\u003cspan class=\"string\"\u003e\u0026#39;First Name\u0026#39;\u003c/span\u003e].append(row[\u003cspan class=\"number\"\u003e2\u003c/span\u003e])\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        data[\u003cspan class=\"string\"\u003e\u0026#39;Day\u0026#39;\u003c/span\u003e].append(row[\u003cspan class=\"number\"\u003e3\u003c/span\u003e])\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        data[\u003cspan class=\"string\"\u003e\u0026#39;Age\u0026#39;\u003c/span\u003e].append(row[\u003cspan class=\"number\"\u003e4\u003c/span\u003e])\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        data[\u003cspan class=\"string\"\u003e\u0026#39;RT\u0026#39;\u003c/span\u003e].append(row[\u003cspan class=\"number\"\u003e5\u003c/span\u003e])\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        data[\u003cspan class=\"string\"\u003e\u0026#39;Gender\u0026#39;\u003c/span\u003e].append(row[\u003cspan class=\"number\"\u003e6\u003c/span\u003e])\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e在上面的代码中，创建了一个字典\u003ccode\u003edata\u003c/code\u003e，然后玄幻每一行（\u003ccode\u003eiter_rows\u003c/code\u003e），并且仅仅获取该行的值。接下来使用条件语句，判断一下，如果是第一行，就增加字典的键，这其实是以键为列的名称。否则，将根据键（加Excel中的每一列）向字典中增加值。\u003c/p\u003e\n\u003ch2 id=\"读取多个Excel文件\"\u003e\u003ca href=\"#读取多个Excel文件\" class=\"headerlink\" title=\"读取多个Excel文件\"\u003e\u003c/a\u003e读取多个Excel文件\u003c/h2\u003e\u003cp\u003e下面，我们要用openpyxl模块读取多个xlsx文件。\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003e导入模块\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003e除了前面使用过的恋歌模块之外，增加了一个\u003ccode\u003eglob\u003c/code\u003e。\u003c/p\u003e\n\u003cfigure class=\"highlight python\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"keyword\"\u003eimport\u003c/span\u003e glob\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"keyword\"\u003eimport\u003c/span\u003e openpyxl\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"keyword\"\u003efrom\u003c/span\u003e pathlib \u003cspan class=\"keyword\"\u003eimport\u003c/span\u003e Path\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003col start=\"2\"\u003e\n\u003cli\u003e读取目录中的所有xlsx文件\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003e假设在子目录中有多个xlsx文件，现在我们使用\u003ccode\u003eglob\u003c/code\u003e模块，将它们都读入：\u003c/p\u003e\n\u003cfigure class=\"highlight python\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003exlsx_files = [path \u003cspan class=\"keyword\"\u003efor\u003c/span\u003e path \u003cspan class=\"keyword\"\u003ein\u003c/span\u003e Path(\u003cspan class=\"string\"\u003e\u0026#39;XLSX_FILES\u0026#39;\u003c/span\u003e).rglob(\u003cspan class=\"string\"\u003e\u0026#39;*.xlsx\u0026#39;\u003c/span\u003e)]\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003col start=\"3\"\u003e\n\u003cli\u003e创建工作簿对象\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003e现在已经读入了所有xlsx文件，接下来还是使用\u003ccode\u003eload_workbook\u003c/code\u003e方法创建工作簿对象，不过，这次要使用列表解析的方式循环了。\u003c/p\u003e\n\u003cfigure class=\"highlight python\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003ewbs = [openpyxl.load_workbook(wb) \u003cspan class=\"keyword\"\u003efor\u003c/span\u003e wb \u003cspan class=\"keyword\"\u003ein\u003c/span\u003e xlsx_files]\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e这个列表中包含了所有xlsx文件的工作簿对象。\u003c/p\u003e\n\u003col start=\"4\"\u003e\n\u003cli\u003e操纵每个文件\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003e所有的工作簿对象都保存到了\u003ccode\u003ewbs\u003c/code\u003e引用的列表中，比如乣得到第一个工作簿，可以用\u003ccode\u003ewbs[0]\u003c/code\u003e，它的默认工作表名称，可以用\u003ccode\u003ewbs[0].sheetnames\u003c/code\u003e得到。其他操作跟前面就没有什么差别了。这样我们就能读入多个Excel文件了。\u003c/p\u003e\n\u003cp\u003e参考链接：\u003ca href=\"https://www.marsja.se/your-guide-to-reading-excel-xlsx-files-in-python/\" target=\"_blank\" rel=\"noopener\"\u003ehttps://www.marsja.se/your-guide-to-reading-excel-xlsx-files-in-python/\u003c/a\u003e\u003c/p\u003e\n\u003c/section\u003e\n    \u003c!-- Tags START --\u003e\n    \n    \u003c!-- Tags END --\u003e\n    \u003c!-- NAV START --\u003e\n    \n  \u003cdiv class=\"nav-container\"\u003e\n    \u003c!-- reverse left and right to put prev and next in a more logic postition --\u003e\n    \n      \u003ca class=\"nav-left\" href=\"/2020/06/08/child-python-four/\"\u003e\n        \u003cspan class=\"nav-arrow\"\u003e← \u003c/span\u003e\n        \n          青少年编程：用Python探究数学（4）\n        \n      \u003c/a\u003e\n    \n    \n      \u003ca class=\"nav-right\" href=\"/2020/06/15/child-python-five/\"\u003e\n        \n          青少年编程：用Python探究数学（5）\n        \n        \u003cspan class=\"nav-arrow\"\u003e →\u003c/span\u003e\n      \u003c/a\u003e\n    \n  \u003c/div\u003e\n\n    \u003c!-- NAV END --\u003e\n    \u003c!-- 打赏 START --\u003e\n    \n      \u003cdiv class=\"money-like\"\u003e\n        \u003cdiv class=\"reward-btn\"\u003e\n          赏\n          \u003cspan class=\"money-code\"\u003e\n            \u003cspan class=\"alipay-code\"\u003e\n              \u003cdiv class=\"code-image\"\u003e\u003c/div\u003e\n              \u003cb\u003e使用支付宝打赏\u003c/b\u003e\n            \u003c/span\u003e\n            \u003cspan class=\"wechat-code\"\u003e\n              \u003cdiv class=\"code-image\"\u003e\u003c/div\u003e\n              \u003cb\u003e使用微信打赏\u003c/b\u003e\n            \u003c/span\u003e\n          \u003c/span\u003e\n        \u003c/div\u003e\n        \u003cp class=\"notice\"\u003e若你觉得我的文章对你有帮助，欢迎点击上方按钮对我打赏\u003c/p\u003e\n      \u003c/div\u003e\n    \n    \u003c!-- 打赏 END --\u003e\n    \u003c!-- 二维码 START --\u003e\n    \u003c!--% if (theme.qrcode) { %--\u003e\n      \u003cdiv class=\"qrcode\"\u003e\n        \u003c!--canvas id=\"share-qrcode\"\u003e\u003c/!--canvas--\u003e\n        \u003cimg src=\"https://public-tuchuang.oss-cn-hangzhou.aliyuncs.com/WechatIMG6_20200109154827.jpeg\" width=\"400\"/\u003e\n        \u003cp class=\"notice\"\u003e关注微信公众号，读文章、听课程，提升技能\u003c/p\u003e\n      \u003c/div\u003e\n    \u003c!--% } %--\u003e\n    \u003c!-- 二维码 END --\u003e\n    \n      \u003c!-- No Comment --\u003e\n    \n  \u003c/article\u003e",
  "Date": "2020-06-11T00:00:00Z",
  "Author": "老齐教室"
}