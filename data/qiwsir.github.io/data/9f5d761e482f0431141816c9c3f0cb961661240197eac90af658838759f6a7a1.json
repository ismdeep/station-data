{
  "Source": "qiwsir.github.io",
  "Title": "初学者须知：Python里的数",
  "Link": "https://qiwsir.github.io/2020/04/30/number-in-python/",
  "Content": "\u003carticle class=\"post-article\"\u003e\n    \u003ch2\u003e初学者须知：Python里的数\u003c/h2\u003e\n    \u003cp class=\"post-date\"\u003e2020-04-30\u003c/p\u003e\n    \u003csection class=\"markdown-content\"\u003e\u003cp\u003e作者：Moshe Zadka\u003c/p\u003e\n\u003cp\u003e翻译：老齐\u003c/p\u003e\n\u003cp\u003e与本文相关的图书推荐：《跟老齐学Python：轻松入门》\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"https://public-tuchuang.oss-cn-hangzhou.aliyuncs.com/%E8%BD%BB%E6%9D%BE%E5%85%A5%E9%97%A8_20200122130623.png\" alt=\"\"/\u003e\u003c/p\u003e\n\u003chr/\u003e\n\u003cp\u003ePython中，数，用各种形式表示，不同形式的数有各自的用途。\u003c/p\u003e\n\u003ch2 id=\"整数\"\u003e\u003ca href=\"#整数\" class=\"headerlink\" title=\"整数\"\u003e\u003c/a\u003e整数\u003c/h2\u003e\u003cp\u003e整数，令人惊叹于它的简单。两个整数相除，例如\u003ccode\u003e4/3\u003c/code\u003e，得到一个浮点数，并且\u003ccode\u003e(4/3)*3\u003c/code\u003e的结果也是浮点数\u003ccode\u003e4.0\u003c/code\u003e。即便你没有定义浮点数，在进行除法运算的时候，它会自动出现。\u003c/p\u003e\n\u003ch2 id=\"浮点数\"\u003e\u003ca href=\"#浮点数\" class=\"headerlink\" title=\"浮点数\"\u003e\u003c/a\u003e浮点数\u003c/h2\u003e\u003cp\u003e浮点数不是一般意义的数。按照数学上的规定，数应该遵循如下原则：减法是加法的逆运算，加法结合律，等等。\u003c/p\u003e\n\u003cp\u003e例如：\u003c/p\u003e\n\u003cfigure class=\"highlight plain\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; 1 + 2 - 2 - 1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e0\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; 0.1 + 0.2 - 0.2 - 0.1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2.7755575615628914e-17\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e两个数相加，再分别减去它们，上述居然出现了不同的结果。\u003c/p\u003e\n\u003cp\u003e它们也不会遵循结合律：\u003ccode\u003ea + (b + c) = (a + b) + c\u003c/code\u003e\u003c/p\u003e\n\u003cfigure class=\"highlight plain\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; a = 2**-53\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; (a + a) + 1 == a + (a + 1)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eFalse\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e以上仅仅是浮点数运算中存在的两个“小问题”，还不令你惊讶吗？此处不便将浮点数各种出乎意料的运算一一展现。\u003c/p\u003e\n\u003ch2 id=\"分数\"\u003e\u003ca href=\"#分数\" class=\"headerlink\" title=\"分数\"\u003e\u003c/a\u003e分数\u003c/h2\u003e\u003cp\u003e很多看似简单的程序，遇到分数，就会出问题，比如运算时间暴增，算法的复杂度加倍。遇到分数的时候，算法时间不是跟输入成正比，而是指数增长。\u003c/p\u003e\n\u003cp\u003e如果时间足够长，内存爆掉也是常见的。\u003c/p\u003e\n\u003cp\u003e加法就是其中一个典型例子\u003c/p\u003e\n\u003cfigure class=\"highlight plain\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e8\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e9\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e10\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e11\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e12\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; print(set(type(p) for p in primes))\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; one = fractions.Fraction(1)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; before = datetime.now()\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; res = sum(one/p for p in primes[:10000])\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; after = datetime.now()\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; print(\u0026#34;It took\u0026#34;, after-before)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; print(\u0026#34;Size of output\u0026#34;, len(str(res)))\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; print(\u0026#34;Approximate value\u0026#34;, float(res))\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e{\u0026lt;class \u0026#39;int\u0026#39;\u0026gt;}\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eIt took 0:01:16.033260\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eSize of output 90676\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eApproximate value 2.7092582487972945\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e这段程序，计算了一些素数的倒数的和。在笔记本电脑上，10000个这样的数相加，要1分钟，最终输出结果的大小超过了90K。\u003c/p\u003e\n\u003cp\u003e对比着，执行浮点数运算，性能更好。\u003c/p\u003e\n\u003cfigure class=\"highlight plain\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e8\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e9\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e10\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e11\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; print(set(type(p) for p in primes))\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; before = datetime.now()\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; res = sum(1/p for p in primes[:10000])\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; after = datetime.now()\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; print(\u0026#34;It took\u0026#34;, after-before)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; print(\u0026#34;Size of output\u0026#34;, len(str(res)))\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; print(\u0026#34;Approximate value\u0026#34;, float(res))\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e{\u0026lt;class \u0026#39;int\u0026#39;\u0026gt;}\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eIt took 0:00:00.000480\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eSize of output 17\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eApproximate value 2.709258248797317\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e这次运行时间小于1毫秒，并且，者还可能是因为用\u003ccode\u003edatetime\u003c/code\u003e测量产生的误差，快了10000倍。而且输出结果的大小仅有17比特，下降了1000多倍。然而，计算结果有误差。\u003c/p\u003e\n\u003cfigure class=\"highlight plain\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003eApproximate value 2.7092582487972945\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eApproximate value 2.709258248797317\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e                    1234567891234\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e误差低于 10的-14次方，这就如同将火箭发射月球上偏差了1毫米，用浮点数计算得到的结果足够精确，并且效率更高。\u003c/p\u003e\n\u003cp\u003e对此，一般的观点是：Python进行分数运算很慢。对此，Python可以承担10倍的责任，但不是10000倍。有一个第三方模块，quicktions，用Cython执行分数的运算。\u003c/p\u003e\n\u003cp\u003e用quicktions，真的“很快”。在我的笔记本电脑上，上面那个程序的时间，从1分16秒，缩短到1分15秒。\u003c/p\u003e\n\u003cp\u003e问题在于程序本身，在程序中，我精心选择了一种输入方案，以素数作为分母进行分数相加，这本来就是一种很坏的情况。\u003c/p\u003e\n\u003ch2 id=\"小数\"\u003e\u003ca href=\"#小数\" class=\"headerlink\" title=\"小数\"\u003e\u003c/a\u003e小数\u003c/h2\u003e\u003cp\u003e小数在财务中用途最广，最无聊的是居然以法律的方式规定了小数的形式。然而，Python中所有的小数点运算，都有上下文精确度问题，对此，可以用专门的模块解决。\u003c/p\u003e\n\u003cfigure class=\"highlight plain\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; getcontext().prec = 6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; Decimal(1) / Decimal(7)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eDecimal(\u0026#39;0.142857\u0026#39;)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; getcontext().prec = 28\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; Decimal(1) / Decimal(7)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eDecimal(\u0026#39;0.1428571428571428571428571429\u0026#39;)\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e在实际项目中，代码中设置精度的位置和进行计算的位置可能间隔几百行，计算可以在一个函数中，也可以在另外一个文件。\u003c/p\u003e\n\u003cp\u003e最安全的方法是使用\u003ccode\u003elocalcontext\u003c/code\u003e：\u003c/p\u003e\n\u003cfigure class=\"highlight plain\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; getcontext().prec = 6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; # 6853 lines elided\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e... with localcontext() as ctx:\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e...     ctx.prec = 10\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e...     Decimal(1) / Decimal(7)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e...\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eDecimal(\u0026#39;0.1428571429\u0026#39;)\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e只要你认真地用\u003ccode\u003elocalcontext\u003c/code\u003e，小数运算不会出问题。\u003c/p\u003e\n\u003ch2 id=\"总结\"\u003e\u003ca href=\"#总结\" class=\"headerlink\" title=\"总结\"\u003e\u003c/a\u003e总结\u003c/h2\u003e\u003cp\u003e你在程序中用到数字的时候，是否想过：应该用什么类型？会发生什么？误差重要吗？\u003c/p\u003e\n\u003cp\u003e什么也不想，会意味着暗藏bug。\u003c/p\u003e\n\u003cp\u003e原文链接：\u003ca href=\"https://orbifold.xyz/numbers.html\" target=\"_blank\" rel=\"noopener\"\u003ehttps://orbifold.xyz/numbers.html\u003c/a\u003e\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e搜索技术问答的公众号：老齐教室\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cblockquote\u003e\n\u003cp\u003e在公众号中回复：\u003cstrong\u003e老齐\u003c/strong\u003e，可查看所有文章、书籍、课程。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp style=\"text-align:right\"\u003e\u003cstrong style=\"max-width: 100%;color: rgb(255, 255, 255);background-color: rgb(234, 6, 13);box-sizing: border-box !important;overflow-wrap: break-word !important;\"\u003e觉得好看，就点这里👇👇👇\u003c/strong\u003e\u003c/p\u003e\u003c/section\u003e\n    \u003c!-- Tags START --\u003e\n    \n    \u003c!-- Tags END --\u003e\n    \u003c!-- NAV START --\u003e\n    \n  \u003cdiv class=\"nav-container\"\u003e\n    \u003c!-- reverse left and right to put prev and next in a more logic postition --\u003e\n    \n      \u003ca class=\"nav-left\" href=\"/2020/04/29/web-stack-third/\"\u003e\n        \u003cspan class=\"nav-arrow\"\u003e← \u003c/span\u003e\n        \n          剖析Web技术栈（三）\n        \n      \u003c/a\u003e\n    \n    \n      \u003ca class=\"nav-right\" href=\"/2020/04/30/learn-python-with-laoqi/\"\u003e\n        \n          《跟老齐学Python：轻松入门》勘误和修订\n        \n        \u003cspan class=\"nav-arrow\"\u003e →\u003c/span\u003e\n      \u003c/a\u003e\n    \n  \u003c/div\u003e\n\n    \u003c!-- NAV END --\u003e\n    \u003c!-- 打赏 START --\u003e\n    \n      \u003cdiv class=\"money-like\"\u003e\n        \u003cdiv class=\"reward-btn\"\u003e\n          赏\n          \u003cspan class=\"money-code\"\u003e\n            \u003cspan class=\"alipay-code\"\u003e\n              \u003cdiv class=\"code-image\"\u003e\u003c/div\u003e\n              \u003cb\u003e使用支付宝打赏\u003c/b\u003e\n            \u003c/span\u003e\n            \u003cspan class=\"wechat-code\"\u003e\n              \u003cdiv class=\"code-image\"\u003e\u003c/div\u003e\n              \u003cb\u003e使用微信打赏\u003c/b\u003e\n            \u003c/span\u003e\n          \u003c/span\u003e\n        \u003c/div\u003e\n        \u003cp class=\"notice\"\u003e若你觉得我的文章对你有帮助，欢迎点击上方按钮对我打赏\u003c/p\u003e\n      \u003c/div\u003e\n    \n    \u003c!-- 打赏 END --\u003e\n    \u003c!-- 二维码 START --\u003e\n    \u003c!--% if (theme.qrcode) { %--\u003e\n      \u003cdiv class=\"qrcode\"\u003e\n        \u003c!--canvas id=\"share-qrcode\"\u003e\u003c/!--canvas--\u003e\n        \u003cimg src=\"https://public-tuchuang.oss-cn-hangzhou.aliyuncs.com/WechatIMG6_20200109154827.jpeg\" width=\"400\"/\u003e\n        \u003cp class=\"notice\"\u003e关注微信公众号，读文章、听课程，提升技能\u003c/p\u003e\n      \u003c/div\u003e\n    \u003c!--% } %--\u003e\n    \u003c!-- 二维码 END --\u003e\n    \n      \u003c!-- No Comment --\u003e\n    \n  \u003c/article\u003e",
  "Date": "2020-04-30T00:00:00Z",
  "Author": "老齐教室"
}