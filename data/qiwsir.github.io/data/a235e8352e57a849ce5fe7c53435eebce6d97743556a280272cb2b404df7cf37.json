{
  "Source": "qiwsir.github.io",
  "Title": "特征为什么那么重要",
  "Link": "https://qiwsir.github.io/2020/01/30/%E7%89%B9%E5%BE%81%E4%B8%BA%E4%BB%80%E4%B9%88%E9%87%8D%E8%A6%81/",
  "Content": "\u003carticle class=\"post-article\"\u003e\n    \u003ch2\u003e特征为什么那么重要\u003c/h2\u003e\n    \u003cp class=\"post-date\"\u003e2020-01-30\u003c/p\u003e\n    \u003csection class=\"markdown-content\"\u003e\u003cp\u003e作者： Vinko Kodžoman \u003c/p\u003e\n\u003cp\u003e翻译：老齐\u003c/p\u003e\n\u003cp\u003e一个月以来，我一直在Kaggle研究Quora问答的机器学习竞赛，我注意到大家反复讨论的一个话题，现在想谈谈它，机器学习模型似乎有一个无法逾越的界限，虽然有的方法通常能够得到很好的结果，但是因为受限于数据的特征，导致它的上限无法突破。所以，我要强调，特征是非常重要的。\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e说明：2020年3月，电子工业出版社出版《数据准备和特征工程》，书中有专门章节讲解如何进行特征选择，也包括本文所介绍的依据特征重要度进行选择的方法。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cimg src=\"https://public-tuchuang.oss-cn-hangzhou.aliyuncs.com/%E7%89%B9%E5%BE%81%E5%B7%A5%E7%A8%8B2_20200114135935.png\" style=\"zoom:67%;\"/\u003e\n\n\u003ch2 id=\"数据探索\"\u003e\u003ca href=\"#数据探索\" class=\"headerlink\" title=\"数据探索\"\u003e\u003c/a\u003e数据探索\u003c/h2\u003e\u003cp\u003e下面，我将使用Quora问答的数据集，此数据集中共有404290个问答，其中37%的问题在语义上相同的（“重复”），我们的目标是把它们找出来。\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e注：在《机器学习案例》中收录了本文项目，以及另外一个相关项目：识别重复问题，也是利用Quora问答数据完成。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003e开始，应该加载数据集，并对它进行探索：\u003c/p\u003e\n\u003cfigure class=\"highlight plain\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e# Load the dataset\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003etrain = pd.read_csv(\u0026#39;train.csv\u0026#39;, dtype={\u0026#39;question1\u0026#39;: str, \u0026#39;question2\u0026#39;: str})\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eprint(\u0026#39;Training dataset row number:\u0026#39;, len(train))  # 404290\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eprint(\u0026#39;Duplicate question pairs ratio: %.2f\u0026#39; % train.is_duplicate.mean())  # 0.37\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e重复和非重复问题对的示例如下所示。\u003c/p\u003e\n\u003ctable\u003e\n\u003cthead\u003e\n\u003ctr\u003e\n\u003cth\u003e问题1\u003c/th\u003e\n\u003cth\u003e问题2\u003c/th\u003e\n\u003cth\u003e是否重复\u003c/th\u003e\n\u003c/tr\u003e\n\u003c/thead\u003e\n\u003ctbody\u003e\u003ctr\u003e\n\u003ctd\u003eWhat is the step by step guide to invest in share market in india?\u003c/td\u003e\n\u003ctd\u003eWhat is the step by step guide to invest in share market?\u003c/td\u003e\n\u003ctd\u003e0\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003eHow can I be a good geologist?\u003c/td\u003e\n\u003ctd\u003eWhat should I do to be a great geologist?\u003c/td\u003e\n\u003ctd\u003e1\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003eHow can I increase the speed of my internet connection while using a VPN?\u003c/td\u003e\n\u003ctd\u003eHow can Internet speed be increased by hacking through DNS?\u003c/td\u003e\n\u003ctd\u003e0\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003eHow do I read and find my YouTube comments?\u003c/td\u003e\n\u003ctd\u003eHow do I read and find my YouTube comments?\u003c/td\u003e\n\u003ctd\u003e1\u003c/td\u003e\n\u003c/tr\u003e\n\u003c/tbody\u003e\u003c/table\u003e\n\u003cp\u003e用词云来表示数据探索的结果，显示哪些词出现频率最高。词云是基于问答中的单词来创建的，如你所见，流行的词汇是正如你所预料，（如“best way”、“lose weight”、“difference”、“make money”等）。\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"https://public-tuchuang.oss-cn-hangzhou.aliyuncs.com/word_cloud_20200129152919.jpg\" alt=\"\"/\u003e\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e此词云结果，参见《机器学习案例》中的项目“识别重复问题”。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003e现在我们对数据集的样子有了一些概念。\u003c/p\u003e\n\u003ch2 id=\"特征工程\"\u003e\u003ca href=\"#特征工程\" class=\"headerlink\" title=\"特征工程\"\u003e\u003c/a\u003e特征工程\u003c/h2\u003e\u003cp\u003e我创建了24个特征，其中一些特征如下所示。所有代码都是借助机器学习库（pandas、sklearn、numpy）用Python编写的。\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e本文的代码已经收录到在线公开课程《机器学习案例》之中，关注本文的公众号，并回复：姓名+手机号+‘案例’，即可申请加入此课程。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003e\u003cimg src=\"https://public-tuchuang.oss-cn-hangzhou.aliyuncs.com/anli_20200129153321.png\" alt=\"\"/\u003e\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eq1_word_num：问题1中的单词数\u003c/li\u003e\n\u003cli\u003eq2_length：问题2中的字符数\u003c/li\u003e\n\u003cli\u003eword_share：问题之间共享单词的比率\u003c/li\u003e\n\u003cli\u003esame_first_word：如果两个问题的第一个单词相同，则为1，否则为0\u003c/li\u003e\n\u003c/ul\u003e\n\u003cfigure class=\"highlight plain\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e8\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e9\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e10\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e11\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e12\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e13\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e14\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e15\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e16\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e17\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e18\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e19\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e20\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e21\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e22\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e23\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e24\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e25\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003edef word_share(row):\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    q1_words = set(word_tokenize(row[\u0026#39;question1\u0026#39;]))\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    q2_words = set(word_tokenize(row[\u0026#39;question2\u0026#39;]))\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e           \u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    return len(q1_words.intersection(q2_words)) / (len(q1_words.union(q2_words)))\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003edef same_first_word(row):\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    q1_words = word_tokenize(row[\u0026#39;question1\u0026#39;])\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    q2_words = word_tokenize(row[\u0026#39;question2\u0026#39;])\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        \u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    return float(q1_words[0].lower() == q2_words[0].lower())\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e# A sample of the features\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003etrain[\u0026#39;word_share\u0026#39;] = train.apply(word_share, axis=1)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003etrain[\u0026#39;q1_word_num\u0026#39;] = train.question1.apply(lambda x: len(word_tokenize(x)))\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003etrain[\u0026#39;q2_word_num\u0026#39;] = train.question2.apply(lambda x: len(word_tokenize(x)))\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003etrain[\u0026#39;word_num_difference\u0026#39;] = abs(train.q1_word_num - train.q2_word_num)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003etrain[\u0026#39;q1_length\u0026#39;] = train.question1.apply(lambda x: len(x))\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003etrain[\u0026#39;q2_length\u0026#39;] = train.question2.apply(lambda x: len(x))\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003etrain[\u0026#39;length_difference\u0026#39;] = abs(train.q1_length - train.q2_length)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003etrain[\u0026#39;q1_has_fullstop\u0026#39;] = train.question1.apply(lambda x: int(\u0026#39;.\u0026#39; in x))\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003etrain[\u0026#39;q2_has_fullstop\u0026#39;] = train.question2.apply(lambda x: int(\u0026#39;.\u0026#39; in x))\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003etrain[\u0026#39;q1_has_math_expression\u0026#39;] = train.question1.apply(lambda x: int(\u0026#39;[math]\u0026#39; in x))\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003etrain[\u0026#39;q2_has_math_expression\u0026#39;] = train.question2.apply(lambda x: int(\u0026#39;[math]\u0026#39; in x)) \u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003etrain[\u0026#39;same_first_word\u0026#39;] = train.apply(same_first_word, axis=1)\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003ch2 id=\"模型性能\"\u003e\u003ca href=\"#模型性能\" class=\"headerlink\" title=\"模型性能\"\u003e\u003c/a\u003e模型性能\u003c/h2\u003e\u003cp\u003e为了评估模型性能，我们首先将数据集划分为训练集和测试集，测试集含有总数据量的20%样本。\u003c/p\u003e\n\u003cfigure class=\"highlight plain\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003eX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2)\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e利用logloss函数对模型进行了评估，这是Kaggle中使用的同一度量标准。\u003c/p\u003e\n\u003cp\u003e$$logloss = \\frac{1}{N} \\displaystyle\\sum_{i=1}^{N} \\displaystyle\\sum_{j=1}^{M} y_{i,j} * log(p_{i,j})$$\u003c/p\u003e\n\u003cp\u003e为了测试模型的所有特征，我们使用随机森林分类模型，它是一个强大的“开箱即用”集成分类器。不用进行超参数优化——它们可以保持不变，因为我们正在针对不同的特征集合测试模型的性能。一个简单的模型给出的logloss得分为0.62923，在我写这篇文章时，这个分数在总共1692个团队中排名第1371位。现在我们来看看做特征选择是否能帮助我们降低logloss。\u003c/p\u003e\n\u003cfigure class=\"highlight plain\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e8\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e9\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e10\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e11\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e12\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e13\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003emodel = RandomForestClassifier(50, n_jobs=8)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003emodel.fit(X_train, y_train)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003epredictions_proba = model.predict_proba(X_test)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003epredictions = model.predict(X_test)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003elog_loss_score = log_loss(y_test, predictions_proba)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eacc = accuracy_score(y_test, predictions)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003ef1 = f1_score(y_test, predictions)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eprint(\u0026#39;Log loss: %.5f\u0026#39; % log_loss_score)  # 0.62923\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eprint(\u0026#39;Acc: %.5f\u0026#39; % acc)  # 0.70952\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eprint(\u0026#39;F1: %.5f\u0026#39; % f1)  # 0.59173\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cimg src=\"https://public-tuchuang.oss-cn-hangzhou.aliyuncs.com/my_book4_20200116132005.png\" style=\"zoom:67%;\"/\u003e\n\n\u003ch2 id=\"特征的重要性\"\u003e\u003ca href=\"#特征的重要性\" class=\"headerlink\" title=\"特征的重要性\"\u003e\u003c/a\u003e特征的重要性\u003c/h2\u003e\u003cp\u003e为了获取特征的重要度，我们将使用一个默认进行特征选择的算法——XGBoost，它是Kaggle竞赛之王。如果你不使用神经网络，XGBoost可能是你的必须选择。XGBoost使用梯度上升来优化集成决策树算法，每棵树都包含若干节点，每个节点就是一个独立的特征。XGBoost决策树节点中的特征数与其对模型整体性能的影响成正比。\u003c/p\u003e\n\u003cfigure class=\"highlight plain\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e8\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e9\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e10\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e11\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e12\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e13\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e14\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003emodel = XGBClassifier(n_estimators=500)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003emodel.fit(X, y)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003efeature_importance = model.feature_importances_\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eplt.figure(figsize=(16, 6))\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eplt.yscale(\u0026#39;log\u0026#39;, nonposy=\u0026#39;clip\u0026#39;)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eplt.bar(range(len(feature_importance)), feature_importance, align=\u0026#39;center\u0026#39;)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eplt.xticks(range(len(feature_importance)), features, rotation=\u0026#39;vertical\u0026#39;)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eplt.title(\u0026#39;Feature importance\u0026#39;)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eplt.ylabel(\u0026#39;Importance\u0026#39;)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eplt.xlabel(\u0026#39;Features\u0026#39;)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eplt.show()\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e如下图，我们看到一些特征根本没有用，而一些特性（如“word_share”）对性能影响很大。我们可以通过根据特征重要度生成特征子集，从而实现降维。\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"https://public-tuchuang.oss-cn-hangzhou.aliyuncs.com/feature_importance-2_20200129153439.jpg\" alt=\"\"/\u003e\u003c/p\u003e\n\u003cp\u003e利用特征重要度实现降维，新修剪的特征包含所有重要度大于某个数字的特征。在我们的例子中，降维后的特征集合中，最小的重要度分数是0.05。\u003c/p\u003e\n\u003cfigure class=\"highlight plain\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e8\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e9\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e10\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e11\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e12\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e13\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e14\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003edef extract_pruned_features(feature_importances, min_score=0.05):\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    column_slice = feature_importances[feature_importances[\u0026#39;weights\u0026#39;] \u0026gt; min_score]\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    return column_slice.index.values\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003epruned_featurse = extract_pruned_features(feature_importances, min_score=0.01)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eX_train_reduced = X_train[pruned_featurse]\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eX_test_reduced = X_test[pruned_featurse]\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003edef fit_and_print_metrics(X_train, y_train, X_test, y_test, model):\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    model.fit(X_train, y_train)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    predictions_proba = model.predict_proba(X_test)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    log_loss_score = log_loss(y_test, predictions_proba)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    print(\u0026#39;Log loss: %.5f\u0026#39; % log_loss_score)\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003ch2 id=\"基于特征重要度分析的模型性能\"\u003e\u003ca href=\"#基于特征重要度分析的模型性能\" class=\"headerlink\" title=\"基于特征重要度分析的模型性能\"\u003e\u003c/a\u003e基于特征重要度分析的模型性能\u003c/h2\u003e\u003cp\u003e由于使用了修剪过的特征，随机森林模型的评估得分变得更高了，该算法不费吹灰之力将损失减小，而且由于特征集减少，训练速度更快，占用内存更少。\u003c/p\u003e\n\u003cfigure class=\"highlight plain\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003emodel = RandomForestClassifier(50, n_jobs=8)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e# LogLoss 0.59251\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003efit_and_print_metrics(X_train_reduced, y_train, X_test_reduced, y_test, model) \u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e# LogLoss 0.63376\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003efit_and_print_metrics(X_train, y_train, X_test, y_test, model)\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e深入考虑一下特征重要度评分（为修剪过的特征的某一子集绘制分类器的logloss），我们可以更大程度地降低损失。在这种特殊的情况下，随机森林实际上只使用一个特征就可以达到最佳效果！仅使用特征“\u003ccode\u003eword_share\u003c/code\u003e”就可以在logloss评估中获得0.5544的分数。\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e在《机器学习案例集》的代码中，你可以详细了解这个步骤是如何实现的。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003ch2 id=\"结论\"\u003e\u003ca href=\"#结论\" class=\"headerlink\" title=\"结论\"\u003e\u003c/a\u003e结论\u003c/h2\u003e\u003cp\u003e正如我所展示的，对特征重要度进行分析，能够提高模型的性能。虽然像XGBoost这样的一些模型为我们选择了特征，但是了解某个特征对模型性能的影响仍然很重要，因为它使我们能够更好地控制要完成的任务。“没有免费的午餐”定理(没有适合所有问题的最佳方案)告诉我们，尽管XGBoost通常比其他模型表现更好，但我们仍需要判断它是否真的是最佳解决方案。使用XGBoost获得重要特征的子集，允许我们在不选择特征的情况下，通过将该特征子集提供给模型来提高模型的性能。使用基于特征重要度的特征选择可以大大提高模型的性能。\u003c/p\u003e\n\u003cp\u003e原文链接：\u003ca href=\"https://datawhatnow.com/feature-importance/\" target=\"_blank\" rel=\"noopener\"\u003ehttps://datawhatnow.com/feature-importance/\u003c/a\u003e\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e关注微信公众号：老齐教室。读深度文章，得精湛技艺，享绚丽人生。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003c/section\u003e\n    \u003c!-- Tags START --\u003e\n    \n      \u003cdiv class=\"tags\"\u003e\n        \u003cspan\u003eTags:\u003c/span\u003e\n        \n  \u003ca href=\"/tags#特征 重要度 梯度上升\"\u003e\n    \u003cspan class=\"tag-code\"\u003e特征 重要度 梯度上升\u003c/span\u003e\n  \u003c/a\u003e\n\n      \u003c/div\u003e\n    \n    \u003c!-- Tags END --\u003e\n    \u003c!-- NAV START --\u003e\n    \n  \u003cdiv class=\"nav-container\"\u003e\n    \u003c!-- reverse left and right to put prev and next in a more logic postition --\u003e\n    \n      \u003ca class=\"nav-left\" href=\"/2020/01/28/https/\"\u003e\n        \u003cspan class=\"nav-arrow\"\u003e← \u003c/span\u003e\n        \n          通俗易懂的HTTPS\n        \n      \u003c/a\u003e\n    \n    \n      \u003ca class=\"nav-right\" href=\"/2020/02/01/%E5%B0%8F%E8%8D%B7%E6%89%8D%E9%9C%B2%E5%B0%96%E5%B0%96%E8%A7%92/\"\u003e\n        \n          小荷才露尖尖角\n        \n        \u003cspan class=\"nav-arrow\"\u003e →\u003c/span\u003e\n      \u003c/a\u003e\n    \n  \u003c/div\u003e\n\n    \u003c!-- NAV END --\u003e\n    \u003c!-- 打赏 START --\u003e\n    \n      \u003cdiv class=\"money-like\"\u003e\n        \u003cdiv class=\"reward-btn\"\u003e\n          赏\n          \u003cspan class=\"money-code\"\u003e\n            \u003cspan class=\"alipay-code\"\u003e\n              \u003cdiv class=\"code-image\"\u003e\u003c/div\u003e\n              \u003cb\u003e使用支付宝打赏\u003c/b\u003e\n            \u003c/span\u003e\n            \u003cspan class=\"wechat-code\"\u003e\n              \u003cdiv class=\"code-image\"\u003e\u003c/div\u003e\n              \u003cb\u003e使用微信打赏\u003c/b\u003e\n            \u003c/span\u003e\n          \u003c/span\u003e\n        \u003c/div\u003e\n        \u003cp class=\"notice\"\u003e若你觉得我的文章对你有帮助，欢迎点击上方按钮对我打赏\u003c/p\u003e\n      \u003c/div\u003e\n    \n    \u003c!-- 打赏 END --\u003e\n    \u003c!-- 二维码 START --\u003e\n    \u003c!--% if (theme.qrcode) { %--\u003e\n      \u003cdiv class=\"qrcode\"\u003e\n        \u003c!--canvas id=\"share-qrcode\"\u003e\u003c/!--canvas--\u003e\n        \u003cimg src=\"https://public-tuchuang.oss-cn-hangzhou.aliyuncs.com/WechatIMG6_20200109154827.jpeg\" width=\"400\"/\u003e\n        \u003cp class=\"notice\"\u003e关注微信公众号，读文章、听课程，提升技能\u003c/p\u003e\n      \u003c/div\u003e\n    \u003c!--% } %--\u003e\n    \u003c!-- 二维码 END --\u003e\n    \n      \u003c!-- No Comment --\u003e\n    \n  \u003c/article\u003e",
  "Date": "2020-01-30T00:00:00Z",
  "Author": "老齐教室"
}