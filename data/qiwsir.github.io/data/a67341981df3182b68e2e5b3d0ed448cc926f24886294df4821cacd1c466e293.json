{
  "Source": "qiwsir.github.io",
  "Title": "根据条件增加DataFrame的列",
  "Link": "https://qiwsir.github.io/2020/08/14/add-column-pandas/",
  "Content": "\u003carticle class=\"post-article\"\u003e\n    \u003ch2\u003e根据条件增加DataFrame的列\u003c/h2\u003e\n    \u003cp class=\"post-date\"\u003e2020-08-14\u003c/p\u003e\n    \u003csection class=\"markdown-content\"\u003e\u003cp\u003e编译：老齐\u003c/p\u003e\n\u003cp\u003e与本文有关的图书推荐：《跟老齐学Python：数据分析》\u003c/p\u003e\n\u003chr/\u003e\n\u003cp\u003e当我们使用Python进行数据分析时，有时可能需要向DataFrame添加列，所添加的列要基于DataFrame的其他列的值。\u003c/p\u003e\n\u003cp\u003e虽然这听起来很简单，但是，不少初学想到的是用\u003ccode\u003eif-else\u003c/code\u003e条件语句来实现，这就把问题搞复杂了。有一个简单又有效的方法，下面就来看看这种方法如何使用。\u003c/p\u003e\n\u003cp\u003e加载一个数据集。\u003c/p\u003e\n\u003cfigure class=\"highlight plain\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003eimport pandas as pd\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eimport numpy as np\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003edf = pd.read_csv(\u0026#39;dataquest_tweets_csv.csv\u0026#39;)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003edf.head()\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e\u003cimg src=\"https://www.dataquest.io/wp-content/uploads/2020/06/add-column-to-pandas-dataframe-768x201.png\" alt=\"\"/\u003e\u003c/p\u003e\n\u003cp\u003e数据集的各个特征含义是：\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003edate：推文的发布日期\u003c/li\u003e\n\u003cli\u003etime：推文发布的时间\u003c/li\u003e\n\u003cli\u003etweet：推文的文本内容\u003c/li\u003e\n\u003cli\u003ementions：推文中提到的其他推特用户\u003c/li\u003e\n\u003cli\u003ephotos：推文中所有图像的网址\u003c/li\u003e\n\u003cli\u003ereplies_count：推文的回复数\u003c/li\u003e\n\u003cli\u003eretweets_count：推文的转发次数\u003c/li\u003e\n\u003cli\u003elikes_count：推文的点赞数\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e注意，\u003ccode\u003ephotos\u003c/code\u003e特征的数据格式有点怪。\u003c/p\u003e\n\u003ch2 id=\"添加一列\"\u003e\u003ca href=\"#添加一列\" class=\"headerlink\" title=\"添加一列\"\u003e\u003c/a\u003e添加一列\u003c/h2\u003e\u003cp\u003e在接下来的数据分析中，我们要看看带有图像的推文是否更吸引人，因此，实际上不需要图像文件的地址，只需要有一个特征，用以标明该样本是否含有图像即可。于是，创建一个名为\u003ccode\u003ehasimage\u003c/code\u003e的列，其中的值为：\u003ccode\u003eTrue\u003c/code\u003e——包含图像，\u003ccode\u003eFalse\u003c/code\u003e——不包含图像。\u003c/p\u003e\n\u003cp\u003e为此，使用Numpy的内置\u003ccode\u003ewhere()\u003c/code\u003e函数。这个函数依次接受三个参数：条件；如果条件为真，分配给新列的值；如果条件为假，分配给新列的值。\u003c/p\u003e\n\u003cfigure class=\"highlight plain\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003enp.where(condition, value if condition is true, value if condition is false)\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e在数据集中，没有图像的推文在\u003ccode\u003ephotos\u003c/code\u003e列中的值总是\u003ccode\u003e[]\u003c/code\u003e。\u003c/p\u003e\n\u003cfigure class=\"highlight plain\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003edf[\u0026#39;hasimage\u0026#39;] = np.where(df[\u0026#39;photos\u0026#39;]!= \u0026#39;[]\u0026#39;, True, False)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003edf.head()\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e\u003cimg src=\"https://www.dataquest.io/wp-content/uploads/2020/06/column-added-to-pandas-dataframe-1-768x201.png\" alt=\"\"/\u003e\u003c/p\u003e\n\u003cp\u003e如此，在数据集中新增加了一列，并且它正确地将包含图像的推文标记为\u003ccode\u003eTrue\u003c/code\u003e，其他的标记为\u003ccode\u003eFalse\u003c/code\u003e。\u003c/p\u003e\n\u003cp\u003e现在已经有了\u003ccode\u003ehasimage\u003c/code\u003e列。再将有图文和无图文的两种类型的样本分别筛选出来：\u003c/p\u003e\n\u003cfigure class=\"highlight plain\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003eimage_tweets = df[df[\u0026#39;hasimage\u0026#39;] == True]\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eno_image_tweets = df[df[\u0026#39;hasimage\u0026#39;] == False]\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e然后比较两类推文平均点赞数。\u003c/p\u003e\n\u003cfigure class=\"highlight plain\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e8\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e9\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e10\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e11\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e12\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e13\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e14\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e15\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e16\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e17\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e18\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e19\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e## LIKES\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eprint(\u0026#39;Average likes, all tweets: \u0026#39; + str(df[\u0026#39;likes_count\u0026#39;].mean()))\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eprint(\u0026#39;Average likes, image tweets: \u0026#39; + str(image_tweets[\u0026#39;likes_count\u0026#39;].mean()))\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eprint(\u0026#39;Average likes, no image tweets: \u0026#39; + str(no_image_tweets[\u0026#39;likes_count\u0026#39;].mean()))\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eprint(\u0026#39;\\n\u0026#39;)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e## RETWEETS\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eprint(\u0026#39;Average RTs, all tweets: \u0026#39; + str(df[\u0026#39;retweets_count\u0026#39;].mean()))\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eprint(\u0026#39;Average RTs, image tweets: \u0026#39; + str(image_tweets[\u0026#39;retweets_count\u0026#39;].mean()))\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eprint(\u0026#39;Average RTs, no image tweets: \u0026#39; + str(no_image_tweets[\u0026#39;retweets_count\u0026#39;].mean()))\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eAverage likes, all tweets: 6.209759328770148\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eAverage likes, image tweets: 14.21042471042471\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eAverage likes, no image tweets: 5.176514584891549\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eAverage RTs, all tweets: 1.5553102230072864\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eAverage RTs, image tweets: 3.5386100386100385\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eAverage RTs, no image tweets: 1.2991772625280478\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e看来，有图像似乎可以让更多人来点赞。\u003c/p\u003e\n\u003ch2 id=\"再复杂一些\"\u003e\u003ca href=\"#再复杂一些\" class=\"headerlink\" title=\"再复杂一些\"\u003e\u003c/a\u003e再复杂一些\u003c/h2\u003e\u003cp\u003e如果我们根据点赞的数量，将样本划分出不同等级，如：\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003etier_4 —  2个或更少的赞数\u003c/li\u003e\n\u003cli\u003etier_3 — 3-9个赞数\u003c/li\u003e\n\u003cli\u003etier_2 —  10-15个赞数\u003c/li\u003e\n\u003cli\u003etier_1 — 16个以上的赞数\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e为此，使用一个名为\u003ccode\u003enp.select()\u003c/code\u003e的函数，给它提供两个参数：一个条件，另一个对应的等级列表。在\u003ccode\u003econditions\u003c/code\u003e列表中的第一个条件得到满足，\u003ccode\u003evalues\u003c/code\u003e列表中的第一个值将作为新特征中该样本的值，以此类推。具体代码如下：\u003c/p\u003e\n\u003cfigure class=\"highlight plain\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e8\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e9\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e10\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e11\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e12\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e13\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e14\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e15\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e16\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e# create a list of our conditions\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003econditions = [\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    (df[\u0026#39;likes_count\u0026#39;] \u0026lt;= 2),\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    (df[\u0026#39;likes_count\u0026#39;] \u0026gt; 2) \u0026amp; (df[\u0026#39;likes_count\u0026#39;] \u0026lt;= 9),\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    (df[\u0026#39;likes_count\u0026#39;] \u0026gt; 9) \u0026amp; (df[\u0026#39;likes_count\u0026#39;] \u0026lt;= 15),\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    (df[\u0026#39;likes_count\u0026#39;] \u0026gt; 15)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    ]\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e# create a list of the values we want to assign for each condition\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003evalues = [\u0026#39;tier_4\u0026#39;, \u0026#39;tier_3\u0026#39;, \u0026#39;tier_2\u0026#39;, \u0026#39;tier_1\u0026#39;]\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e# create a new column and use np.select to assign values to it using our lists as arguments\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003edf[\u0026#39;tier\u0026#39;] = np.select(conditions, values)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e# display updated DataFrame\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003edf.head()\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e\u003cimg src=\"https://www.dataquest.io/wp-content/uploads/2020/06/add-column-complex-conditional-pandas-dataframe-768x213.png\" alt=\"\"/\u003e\u003c/p\u003e\n\u003cp\u003e这样，特征\u003ccode\u003etier\u003c/code\u003e就标记了样本的等级，也可以理解为将样本离散化。于是，可以用它来回答与数据集有关的更多问题。例如：第1级和第4级有百分之多少的推文带有图像?\u003c/p\u003e\n\u003cfigure class=\"highlight plain\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e#tier 4 tweets\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003edf[(df[\u0026#39;tier\u0026#39;] == \u0026#39;tier_4\u0026#39;)][\u0026#39;hasimage\u0026#39;].value_counts(normalize=True)\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\u003cfigure class=\"highlight plain\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003eFalse    0.948784\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eTrue     0.051216\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eName: hasimage, dtype: float64\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\u003cfigure class=\"highlight plain\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e#tier 1 tweets\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003edf[(df[\u0026#39;tier\u0026#39;] == \u0026#39;tier_1\u0026#39;)][\u0026#39;hasimage\u0026#39;].value_counts(normalize=True)\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\u003cfigure class=\"highlight plain\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003eFalse    0.836842\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eTrue     0.163158\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eName: hasimage, dtype: float64\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e在这里，我们可以看到，虽然图像似乎有助于吸引关注，但它们似乎不是成功的必要条件。超过83%的“一级”推文——有16个以上点赞的推文——没有附带图片。\u003c/p\u003e\n\u003cp\u003e虽然这是一个非常肤浅的分析，但我们已经实现了真正的目标：根据已知数据的条件向DataFrame添加列。\u003c/p\u003e\n\u003cp\u003e当然，这是一项可以通过多种方式来完成的任务。\u003ccode\u003enp.where()\u003c/code\u003e和\u003ccode\u003enp.select()\u003c/code\u003e只是其中的两种。这方面更多的内容，可以参考《跟老齐学Python：数据分析》一书。\u003c/p\u003e\n\u003cp\u003e参考链接：\u003ca href=\"https://www.dataquest.io/blog/tutorial-add-column-pandas-dataframe-based-on-if-else-condition/\" target=\"_blank\" rel=\"noopener\"\u003ehttps://www.dataquest.io/blog/tutorial-add-column-pandas-dataframe-based-on-if-else-condition/\u003c/a\u003e\u003c/p\u003e\n\u003c/section\u003e\n    \u003c!-- Tags START --\u003e\n    \n    \u003c!-- Tags END --\u003e\n    \u003c!-- NAV START --\u003e\n    \n  \u003cdiv class=\"nav-container\"\u003e\n    \u003c!-- reverse left and right to put prev and next in a more logic postition --\u003e\n    \n      \u003ca class=\"nav-left\" href=\"/2020/08/12/python-namespace/\"\u003e\n        \u003cspan class=\"nav-arrow\"\u003e← \u003c/span\u003e\n        \n          Python中的命名空间和作用域\n        \n      \u003c/a\u003e\n    \n    \n      \u003ca class=\"nav-right\" href=\"/2020/08/17/convert-dictionary-to-dataframe/\"\u003e\n        \n          将Python中的字典数据转化为DataFrame的方法\n        \n        \u003cspan class=\"nav-arrow\"\u003e →\u003c/span\u003e\n      \u003c/a\u003e\n    \n  \u003c/div\u003e\n\n    \u003c!-- NAV END --\u003e\n    \u003c!-- 打赏 START --\u003e\n    \n      \u003cdiv class=\"money-like\"\u003e\n        \u003cdiv class=\"reward-btn\"\u003e\n          赏\n          \u003cspan class=\"money-code\"\u003e\n            \u003cspan class=\"alipay-code\"\u003e\n              \u003cdiv class=\"code-image\"\u003e\u003c/div\u003e\n              \u003cb\u003e使用支付宝打赏\u003c/b\u003e\n            \u003c/span\u003e\n            \u003cspan class=\"wechat-code\"\u003e\n              \u003cdiv class=\"code-image\"\u003e\u003c/div\u003e\n              \u003cb\u003e使用微信打赏\u003c/b\u003e\n            \u003c/span\u003e\n          \u003c/span\u003e\n        \u003c/div\u003e\n        \u003cp class=\"notice\"\u003e若你觉得我的文章对你有帮助，欢迎点击上方按钮对我打赏\u003c/p\u003e\n      \u003c/div\u003e\n    \n    \u003c!-- 打赏 END --\u003e\n    \u003c!-- 二维码 START --\u003e\n    \u003c!--% if (theme.qrcode) { %--\u003e\n      \u003cdiv class=\"qrcode\"\u003e\n        \u003c!--canvas id=\"share-qrcode\"\u003e\u003c/!--canvas--\u003e\n        \u003cimg src=\"https://public-tuchuang.oss-cn-hangzhou.aliyuncs.com/WechatIMG6_20200109154827.jpeg\" width=\"400\"/\u003e\n        \u003cp class=\"notice\"\u003e关注微信公众号，读文章、听课程，提升技能\u003c/p\u003e\n      \u003c/div\u003e\n    \u003c!--% } %--\u003e\n    \u003c!-- 二维码 END --\u003e\n    \n      \u003c!-- No Comment --\u003e\n    \n  \u003c/article\u003e",
  "Date": "2020-08-14T00:00:00Z",
  "Author": "老齐教室"
}