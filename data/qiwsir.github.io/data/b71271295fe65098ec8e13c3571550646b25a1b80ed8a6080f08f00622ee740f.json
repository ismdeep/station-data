{
  "Source": "qiwsir.github.io",
  "Title": "Python中的正则表达式（三）",
  "Link": "https://qiwsir.github.io/2020/05/12/regular-expression-third/",
  "Content": "\u003carticle class=\"post-article\"\u003e\n    \u003ch2\u003ePython中的正则表达式（三）\u003c/h2\u003e\n    \u003cp class=\"post-date\"\u003e2020-05-12\u003c/p\u003e\n    \u003csection class=\"markdown-content\"\u003e\u003cp\u003e作者：老齐\u003c/p\u003e\n\u003cp\u003e与本文相关的图书推荐：《跟老齐学Python：轻松入门》\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"https://public-tuchuang.oss-cn-hangzhou.aliyuncs.com/%E8%BD%BB%E6%9D%BE%E5%85%A5%E9%97%A8_20200122130623.png\" alt=\"\"/\u003e\u003c/p\u003e\n\u003chr/\u003e\n\u003cp\u003e《Python正则表达式》这个系列，已经完成了两篇，本文是第三篇，请继续阅读。\u003c/p\u003e\n\u003cp\u003e如果错过了前两篇，请关注微信公众号：\u003cstrong\u003e老齐教室\u003c/strong\u003e。\u003c/p\u003e\n\u003ch2 id=\"量词元字符\"\u003e\u003ca href=\"#量词元字符\" class=\"headerlink\" title=\"量词元字符\"\u003e\u003c/a\u003e量词元字符\u003c/h2\u003e\u003cp\u003e量词元字符，在正则表达式中表示匹配若干个字符，可能是0个、1个或者多个。\u003c/p\u003e\n\u003ch3 id=\"\"\u003e\u003ca href=\"#\" class=\"headerlink\" title=\"*\"\u003e\u003c/a\u003e\u003ccode\u003e*\u003c/code\u003e\u003c/h3\u003e\u003cp\u003e\u003ccode\u003e*\u003c/code\u003e 在正则表达式中表示匹配\u003cstrong\u003e0个或者多个\u003c/strong\u003e字符，例如\u003ccode\u003ea*\u003c/code\u003e，就表示匹配0个或者更多个字符\u003ccode\u003ea\u003c/code\u003e，例如可以匹配空字符串、\u003ccode\u003ea\u003c/code\u003e、\u003ccode\u003eaaa\u003c/code\u003e等等。\u003c/p\u003e\n\u003cfigure class=\"highlight plain\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e8\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; re.search(\u0026#39;foo-*bar\u0026#39;, \u0026#39;foobar\u0026#39;)                     # 匹配0个横线\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026lt;_sre.SRE_Match object; span=(0, 6), match=\u0026#39;foobar\u0026#39;\u0026gt;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; re.search(\u0026#39;foo-*bar\u0026#39;, \u0026#39;foo-bar\u0026#39;)                    # 匹配1个\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026lt;_sre.SRE_Match object; span=(0, 7), match=\u0026#39;foo-bar\u0026#39;\u0026gt;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; re.search(\u0026#39;foo-*bar\u0026#39;, \u0026#39;foo--bar\u0026#39;)                   # 匹配2个\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026lt;_sre.SRE_Match object; span=(0, 8), match=\u0026#39;foo--bar\u0026#39;\u0026gt;\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e上面示例中的正则表达式\u003ccode\u003efoo-*bar\u003c/code\u003e，意思是在\u003ccode\u003efoo\u003c/code\u003e三个字符之后，匹配0个或者更多个\u003ccode\u003e-\u003c/code\u003e，然后是三个字符\u003ccode\u003ebar\u003c/code\u003e。\u003ccode\u003efoobar\u003c/code\u003e中\u003ccode\u003efoo\u003c/code\u003e之后没有\u003ccode\u003e-\u003c/code\u003e，即0个，并且最后三个字符是\u003ccode\u003ebar\u003c/code\u003e，符合正则表达式的规则；\u003ccode\u003efoo--bar\u003c/code\u003e则是匹配了两个\u003ccode\u003e-\u003c/code\u003e字符。\u003c/p\u003e\n\u003cp\u003e前面已经介绍过\u003ccode\u003e.\u003c/code\u003e，表示任何字符（除了换行符），如果和\u003ccode\u003e*\u003c/code\u003e组合，即\u003ccode\u003e.*\u003c/code\u003e表示0个或者任意多个任何字符（除了换行符），换句话说，匹配字符串中任何字符，直到改行结束（遇到换行符）。\u003c/p\u003e\n\u003cfigure class=\"highlight plain\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; re.search(\u0026#39;foo.*bar\u0026#39;, \u0026#39;# foo $qux@grault % bar #\u0026#39;)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026lt;_sre.SRE_Match object; span=(2, 23), match=\u0026#39;foo $qux@grault % bar\u0026#39;\u0026gt;\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e对于字符串\u003ccode\u003e\u0026#39;# foo $qux@grault % bar #\u0026#39;\u003c/code\u003e，按照正则表达式\u003ccode\u003efoo.*bar\u003c/code\u003e进行匹配，从第索引为2的字符开始，符合正则表达式的规则，直到索引为23的字符为止，即匹配了\u003ccode\u003ef\u003c/code\u003e（含）和\u003ccode\u003er\u003c/code\u003e（含）之间的所有字符。特别注意观察返回结果中\u003ccode\u003espan\u003c/code\u003e和\u003ccode\u003ematch\u003c/code\u003e的值。\u003c/p\u003e\n\u003ch3 id=\"-1\"\u003e\u003ca href=\"#-1\" class=\"headerlink\" title=\"+\"\u003e\u003c/a\u003e\u003ccode\u003e+\u003c/code\u003e\u003c/h3\u003e\u003cp\u003e\u003ccode\u003e+\u003c/code\u003e 与上面的\u003ccode\u003e*\u003c/code\u003e类似，但是，它匹配的是\u003cstrong\u003e1个或多个\u003c/strong\u003e字符，即至少要有一个。\u003c/p\u003e\n\u003cfigure class=\"highlight plain\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e8\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; print(re.search(\u0026#39;foo-+bar\u0026#39;, \u0026#39;foobar\u0026#39;))              # 0个横线，不匹配\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eNone\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; re.search(\u0026#39;foo-+bar\u0026#39;, \u0026#39;foo-bar\u0026#39;)                    # 1个，匹配\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026lt;_sre.SRE_Match object; span=(0, 7), match=\u0026#39;foo-bar\u0026#39;\u0026gt;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; re.search(\u0026#39;foo-+bar\u0026#39;, \u0026#39;foo--bar\u0026#39;)                   # 2个，匹配\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026lt;_sre.SRE_Match object; span=(0, 8), match=\u0026#39;foo--bar\u0026#39;\u0026gt;\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e通过上面演示的示例，比较\u003ccode\u003e*\u003c/code\u003e和\u003ccode\u003e+\u003c/code\u003e的差异。\u003c/p\u003e\n\u003ch3 id=\"-2\"\u003e\u003ca href=\"#-2\" class=\"headerlink\" title=\"?\"\u003e\u003c/a\u003e\u003ccode\u003e?\u003c/code\u003e\u003c/h3\u003e\u003cp\u003e前面已经有匹配“0个或多个”和“1个或多个”的元字符了，现在应该有匹配\u003cstrong\u003e0个或1个\u003c/strong\u003e的了，那就是\u003ccode\u003e?\u003c/code\u003e。\u003c/p\u003e\n\u003cfigure class=\"highlight plain\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e8\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; re.search(\u0026#39;foo-?bar\u0026#39;, \u0026#39;foobar\u0026#39;)                     # 0个，匹配\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026lt;_sre.SRE_Match object; span=(0, 6), match=\u0026#39;foobar\u0026#39;\u0026gt;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; re.search(\u0026#39;foo-?bar\u0026#39;, \u0026#39;foo-bar\u0026#39;)                    # 1个，匹配\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026lt;_sre.SRE_Match object; span=(0, 7), match=\u0026#39;foo-bar\u0026#39;\u0026gt;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; print(re.search(\u0026#39;foo-?bar\u0026#39;, \u0026#39;foo--bar\u0026#39;))            # 2个，不匹配\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eNone\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e下面的示例，将前面三个云字符进行比较，进一步理解它们的含义。\u003c/p\u003e\n\u003cfigure class=\"highlight plain\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e8\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e9\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e10\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e11\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e12\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e13\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e14\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; re.match(\u0026#39;foo[1-9]*bar\u0026#39;, \u0026#39;foobar\u0026#39;)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026lt;_sre.SRE_Match object; span=(0, 6), match=\u0026#39;foobar\u0026#39;\u0026gt;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; re.match(\u0026#39;foo[1-9]*bar\u0026#39;, \u0026#39;foo42bar\u0026#39;)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026lt;_sre.SRE_Match object; span=(0, 8), match=\u0026#39;foo42bar\u0026#39;\u0026gt;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; print(re.match(\u0026#39;foo[1-9]+bar\u0026#39;, \u0026#39;foobar\u0026#39;))\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eNone\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; re.match(\u0026#39;foo[1-9]+bar\u0026#39;, \u0026#39;foo42bar\u0026#39;)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026lt;_sre.SRE_Match object; span=(0, 8), match=\u0026#39;foo42bar\u0026#39;\u0026gt;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; re.match(\u0026#39;foo[1-9]?bar\u0026#39;, \u0026#39;foobar\u0026#39;)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026lt;_sre.SRE_Match object; span=(0, 6), match=\u0026#39;foobar\u0026#39;\u0026gt;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; print(re.match(\u0026#39;foo[1-9]?bar\u0026#39;, \u0026#39;foo42bar\u0026#39;))\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eNone\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003efoo[1-9]*bar\u003c/code\u003e，匹配\u003ccode\u003efoo\u003c/code\u003e和\u003ccode\u003ebar\u003c/code\u003e之间有1~9的数字0个或多个。\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003efoo[1-9]+bar\u003c/code\u003e，匹配\u003ccode\u003efoo\u003c/code\u003e和\u003ccode\u003ebar\u003c/code\u003e之间有1~9的数字1个或多个。\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003efoo[1-9]?bar\u003c/code\u003e，匹配\u003ccode\u003efoo\u003c/code\u003e和\u003ccode\u003ebar\u003c/code\u003e之间有1~9的数字0个或1个。\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e以上三种量词元字符，还经常组合使用，例如：\u003ccode\u003e*?\u003c/code\u003e、\u003ccode\u003e+?\u003c/code\u003e、\u003ccode\u003e??\u003c/code\u003e等。\u003c/p\u003e\n\u003cfigure class=\"highlight plain\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; re.search(\u0026#39;\u0026lt;.*\u0026gt;\u0026#39;, \u0026#39;%\u0026lt;foo\u0026gt; \u0026lt;bar\u0026gt; \u0026lt;baz\u0026gt;%\u0026#39;)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026lt;_sre.SRE_Match object; span=(1, 18), match=\u0026#39;\u0026lt;foo\u0026gt; \u0026lt;bar\u0026gt; \u0026lt;baz\u0026gt;\u0026#39;\u0026gt;\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e上面示例中的\u003ccode\u003e\u0026lt;.*\u0026gt;\u003c/code\u003e表示要匹配\u003ccode\u003e\u0026lt;\u003c/code\u003e字符之后的任何字符（除了换行字符），然后是\u003ccode\u003e\u0026gt;\u003c/code\u003e。按照这个规则，匹配了\u003ccode\u003e\u0026#39;%\u0026lt;foo\u0026gt; \u0026lt;bar\u0026gt; \u0026lt;baz\u0026gt;%\u0026#39;\u003c/code\u003e中的\u003ccode\u003e\u0026lt;foo\u0026gt; \u0026lt;bar\u0026gt; \u0026lt;baz\u0026gt;\u003c/code\u003e，但是，如果只想匹配\u003ccode\u003e\u0026lt;foo\u0026gt;\u003c/code\u003e怎么办？\u003c/p\u003e\n\u003cfigure class=\"highlight plain\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; re.search(\u0026#39;\u0026lt;.*?\u0026gt;\u0026#39;, \u0026#39;%\u0026lt;foo\u0026gt; \u0026lt;bar\u0026gt; \u0026lt;baz\u0026gt;%\u0026#39;)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026lt;_sre.SRE_Match object; span=(1, 6), match=\u0026#39;\u0026lt;foo\u0026gt;\u0026#39;\u0026gt;\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e上面使用了\u003ccode\u003e*?\u003c/code\u003e，这种表示可以称为惰性匹配，也将此组合称为惰性量词，对应着，前面提到的\u003ccode\u003e*\u003c/code\u003e等则称为贪婪量词，对应的匹配是贪婪匹配。下面以表格形式列出它们之间的比较（顺便也增加了另外一种“支配量词”，一并列出进行比较）。\u003c/p\u003e\n\u003ctable\u003e\n\u003cthead\u003e\n\u003ctr\u003e\n\u003cth\u003e贪婪量词\u003c/th\u003e\n\u003cth\u003e惰性量词\u003c/th\u003e\n\u003cth\u003e支配量词\u003c/th\u003e\n\u003cth\u003e描述\u003c/th\u003e\n\u003c/tr\u003e\n\u003c/thead\u003e\n\u003ctbody\u003e\u003ctr\u003e\n\u003ctd\u003e*\u003c/td\u003e\n\u003ctd\u003e*?\u003c/td\u003e\n\u003ctd\u003e*+\u003c/td\u003e\n\u003ctd\u003e可以不出现,也可以出现任意次\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e?\u003c/td\u003e\n\u003ctd\u003e??\u003c/td\u003e\n\u003ctd\u003e?+\u003c/td\u003e\n\u003ctd\u003e可以出现0次或1次\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e+\u003c/td\u003e\n\u003ctd\u003e+?\u003c/td\u003e\n\u003ctd\u003e++\u003c/td\u003e\n\u003ctd\u003e至少出现1次或以上\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e{n}\u003c/td\u003e\n\u003ctd\u003e{n}?\u003c/td\u003e\n\u003ctd\u003e{n}+\u003c/td\u003e\n\u003ctd\u003e有且只能出现n次\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e{n,m}\u003c/td\u003e\n\u003ctd\u003e{n,m}?\u003c/td\u003e\n\u003ctd\u003e{n,m}+\u003c/td\u003e\n\u003ctd\u003e至少出现n次,至多出现m次\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e{n,}\u003c/td\u003e\n\u003ctd\u003e{n,}?\u003c/td\u003e\n\u003ctd\u003e{n,}+\u003c/td\u003e\n\u003ctd\u003e至少出现n次或以上\u003c/td\u003e\n\u003c/tr\u003e\n\u003c/tbody\u003e\u003c/table\u003e\n\u003cul\u003e\n\u003cli\u003e贪婪匹配：如果符合要求就一直往后匹配，一直到无法匹配为止。\u003c/li\u003e\n\u003cli\u003e惰性匹配：一旦匹配到合适的就结束，不在继续匹配下去了。\u003c/li\u003e\n\u003cli\u003e支配匹配：只尝试匹配整个字符串。如果整个字符串不匹配，则不做进一步。\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e结合线面示例，理解上述匹配模式。\u003c/p\u003e\n\u003cfigure class=\"highlight plain\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e8\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e9\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e10\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; re.search(\u0026#39;\u0026lt;.+\u0026gt;\u0026#39;, \u0026#39;%\u0026lt;foo\u0026gt; \u0026lt;bar\u0026gt; \u0026lt;baz\u0026gt;%\u0026#39;)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026lt;_sre.SRE_Match object; span=(1, 18), match=\u0026#39;\u0026lt;foo\u0026gt; \u0026lt;bar\u0026gt; \u0026lt;baz\u0026gt;\u0026#39;\u0026gt;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; re.search(\u0026#39;\u0026lt;.+?\u0026gt;\u0026#39;, \u0026#39;%\u0026lt;foo\u0026gt; \u0026lt;bar\u0026gt; \u0026lt;baz\u0026gt;%\u0026#39;)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026lt;_sre.SRE_Match object; span=(1, 6), match=\u0026#39;\u0026lt;foo\u0026gt;\u0026#39;\u0026gt;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; re.search(\u0026#39;ba?\u0026#39;, \u0026#39;baaaa\u0026#39;)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026lt;_sre.SRE_Match object; span=(0, 2), match=\u0026#39;ba\u0026#39;\u0026gt;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; re.search(\u0026#39;ba??\u0026#39;, \u0026#39;baaaa\u0026#39;)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026lt;_sre.SRE_Match object; span=(0, 1), match=\u0026#39;b\u0026#39;\u0026gt;\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003ch3 id=\"m\"\u003e\u003ca href=\"#m\" class=\"headerlink\" title=\"{m}\"\u003e\u003c/a\u003e\u003ccode\u003e{m}\u003c/code\u003e\u003c/h3\u003e\u003cp\u003e\u003ccode\u003e{m}\u003c/code\u003e表示匹配\u003ccode\u003em\u003c/code\u003e个字符。\u003c/p\u003e\n\u003cfigure class=\"highlight plain\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e8\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; print(re.search(\u0026#39;x-{3}x\u0026#39;, \u0026#39;x--x\u0026#39;))                # 2个横线，不匹配\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eNone\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; re.search(\u0026#39;x-{3}x\u0026#39;, \u0026#39;x---x\u0026#39;)                      # 3个横线，匹配\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026lt;_sre.SRE_Match object; span=(0, 5), match=\u0026#39;x---x\u0026#39;\u0026gt;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; print(re.search(\u0026#39;x-{3}x\u0026#39;, \u0026#39;x----x\u0026#39;))              # 4个横线，不匹配\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eNone\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e\u003ccode\u003ex-{3}x\u003c/code\u003e表示要匹配\u003ccode\u003ex\u003c/code\u003e字符后面有3个\u003ccode\u003e-\u003c/code\u003e，再接\u003ccode\u003ex\u003c/code\u003e的字符串。\u003c/p\u003e\n\u003ch3 id=\"m-n\"\u003e\u003ca href=\"#m-n\" class=\"headerlink\" title=\"{m,n}\"\u003e\u003c/a\u003e\u003ccode\u003e{m,n}\u003c/code\u003e\u003c/h3\u003e\u003cp\u003e\u003ccode\u003e{m,n}\u003c/code\u003e表示匹配大于等于m，小于等于n个字符，例如\u003ccode\u003e-{2,4}\u003c/code\u003e可以匹配2个、3个、4个\u003ccode\u003e-\u003c/code\u003e。\u003c/p\u003e\n\u003cfigure class=\"highlight plain\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e8\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e9\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; for i in range(1, 6):\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e...     s = f\u0026#34;x{\u0026#39;-\u0026#39; * i}x\u0026#34;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e...     print(f\u0026#39;{i}  {s:10}\u0026#39;, re.search(\u0026#39;x-{2,4}x\u0026#39;, s))\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e...\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e1  x-x        None\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2  x--x       \u0026lt;_sre.SRE_Match object; span=(0, 4), match=\u0026#39;x--x\u0026#39;\u0026gt;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3  x---x      \u0026lt;_sre.SRE_Match object; span=(0, 5), match=\u0026#39;x---x\u0026#39;\u0026gt;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4  x----x     \u0026lt;_sre.SRE_Match object; span=(0, 6), match=\u0026#39;x----x\u0026#39;\u0026gt;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5  x-----x    None\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e有时候会省略m或者n，其含义分别为：\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003e{, n}\u003c/code\u003e，等效于\u003ccode\u003e{0, n}\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003e{m, }\u003c/code\u003e，匹配大于等于m个字符\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003e{, }\u003c/code\u003e，等效\u003ccode\u003e{0, }\u003c/code\u003e或者\u003ccode\u003e*\u003c/code\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e注意，如果只是\u003ccode\u003e{}\u003c/code\u003e，则表示花括号那个字符了。\u003c/p\u003e\n\u003cfigure class=\"highlight plain\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; re.search(\u0026#39;x{}y\u0026#39;, \u0026#39;x{}y\u0026#39;)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026lt;_sre.SRE_Match object; span=(0, 4), match=\u0026#39;x{}y\u0026#39;\u0026gt;\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003ch3 id=\"m-n-1\"\u003e\u003ca href=\"#m-n-1\" class=\"headerlink\" title=\"{m,n}?\"\u003e\u003c/a\u003e\u003ccode\u003e{m,n}?\u003c/code\u003e\u003c/h3\u003e\u003cp\u003e如前面表格所示，这是一种惰性量词，它表示匹配m到n个字符，只要匹配到了，就结束。例如：\u003c/p\u003e\n\u003cfigure class=\"highlight plain\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; re.search(\u0026#39;a{3,5}\u0026#39;, \u0026#39;aaaaaaaa\u0026#39;)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026lt;_sre.SRE_Match object; span=(0, 5), match=\u0026#39;aaaaa\u0026#39;\u0026gt;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; re.search(\u0026#39;a{3,5}?\u0026#39;, \u0026#39;aaaaaaaa\u0026#39;)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026lt;_sre.SRE_Match object; span=(0, 3), match=\u0026#39;aaa\u0026#39;\u0026gt;\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e\u003ccode\u003ea{3,5}\u003c/code\u003e是贪婪匹配，要匹配到最大长度，即5个字符a；而\u003ccode\u003ea{3,5}?\u003c/code\u003e是惰性匹配，只匹配3个字符a即可。\u003c/p\u003e\n\u003cp\u003e（未完，待续）\u003c/p\u003e\n\u003cp\u003e参考资料：\u003ca href=\"https://realpython.com/regex-python/\" target=\"_blank\" rel=\"noopener\"\u003ehttps://realpython.com/regex-python/\u003c/a\u003e\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e搜索技术问答的公众号：老齐教室\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cblockquote\u003e\n\u003cp\u003e在公众号中回复：\u003cstrong\u003e老齐\u003c/strong\u003e，可查看所有文章、书籍、课程。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003c/section\u003e\n    \u003c!-- Tags START --\u003e\n    \n    \u003c!-- Tags END --\u003e\n    \u003c!-- NAV START --\u003e\n    \n  \u003cdiv class=\"nav-container\"\u003e\n    \u003c!-- reverse left and right to put prev and next in a more logic postition --\u003e\n    \n      \u003ca class=\"nav-left\" href=\"/2020/05/09/regular-expression-second/\"\u003e\n        \u003cspan class=\"nav-arrow\"\u003e← \u003c/span\u003e\n        \n          Python中的正则表达式（二）\n        \n      \u003c/a\u003e\n    \n    \n      \u003ca class=\"nav-right\" href=\"/2020/05/14/regular-expression-forth/\"\u003e\n        \n          Python中的正则表达式（四）\n        \n        \u003cspan class=\"nav-arrow\"\u003e →\u003c/span\u003e\n      \u003c/a\u003e\n    \n  \u003c/div\u003e\n\n    \u003c!-- NAV END --\u003e\n    \u003c!-- 打赏 START --\u003e\n    \n      \u003cdiv class=\"money-like\"\u003e\n        \u003cdiv class=\"reward-btn\"\u003e\n          赏\n          \u003cspan class=\"money-code\"\u003e\n            \u003cspan class=\"alipay-code\"\u003e\n              \u003cdiv class=\"code-image\"\u003e\u003c/div\u003e\n              \u003cb\u003e使用支付宝打赏\u003c/b\u003e\n            \u003c/span\u003e\n            \u003cspan class=\"wechat-code\"\u003e\n              \u003cdiv class=\"code-image\"\u003e\u003c/div\u003e\n              \u003cb\u003e使用微信打赏\u003c/b\u003e\n            \u003c/span\u003e\n          \u003c/span\u003e\n        \u003c/div\u003e\n        \u003cp class=\"notice\"\u003e若你觉得我的文章对你有帮助，欢迎点击上方按钮对我打赏\u003c/p\u003e\n      \u003c/div\u003e\n    \n    \u003c!-- 打赏 END --\u003e\n    \u003c!-- 二维码 START --\u003e\n    \u003c!--% if (theme.qrcode) { %--\u003e\n      \u003cdiv class=\"qrcode\"\u003e\n        \u003c!--canvas id=\"share-qrcode\"\u003e\u003c/!--canvas--\u003e\n        \u003cimg src=\"https://public-tuchuang.oss-cn-hangzhou.aliyuncs.com/WechatIMG6_20200109154827.jpeg\" width=\"400\"/\u003e\n        \u003cp class=\"notice\"\u003e关注微信公众号，读文章、听课程，提升技能\u003c/p\u003e\n      \u003c/div\u003e\n    \u003c!--% } %--\u003e\n    \u003c!-- 二维码 END --\u003e\n    \n      \u003c!-- No Comment --\u003e\n    \n  \u003c/article\u003e",
  "Date": "2020-05-12T00:00:00Z",
  "Author": "老齐教室"
}