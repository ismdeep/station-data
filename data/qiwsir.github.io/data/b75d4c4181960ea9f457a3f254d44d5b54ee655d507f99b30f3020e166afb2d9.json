{
  "Source": "qiwsir.github.io",
  "Title": "Django中用SQL实现分组查询",
  "Link": "https://qiwsir.github.io/2020/03/02/django-group-by/",
  "Content": "\u003carticle class=\"post-article\"\u003e\n    \u003ch2\u003eDjango中用SQL实现分组查询\u003c/h2\u003e\n    \u003cp class=\"post-date\"\u003e2020-03-02\u003c/p\u003e\n    \u003csection class=\"markdown-content\"\u003e\u003cp\u003e作者：Haki Benita\u003c/p\u003e\n\u003cp\u003e翻译：老齐\u003c/p\u003e\n\u003cp\u003e与本文有关图书：《跟老齐学Python：Django实战（第二版）》\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"https://public-tuchuang.oss-cn-hangzhou.aliyuncs.com/Django2%E7%AB%8B%E4%BD%93%E5%9B%BE_20200117164816.png\" alt=\"\"/\u003e\u003c/p\u003e\n\u003chr/\u003e\n\u003cp\u003e聚合在任何类型的ORM中都会引起一些乱七八糟的事情，Django也不例外。虽然在官方文档中已经对ORM中的分组和聚合做了说明，但我还是要从另一个角度来说明如何解决这个问题。\u003c/p\u003e\n\u003cp\u003e在本文中，我将QuerySets和SQL放在一起。如果SQL令你最舒服，那么这就是适合你的Django分组资料。\u003c/p\u003e\n\u003ch2 id=\"准备\"\u003e\u003ca href=\"#准备\" class=\"headerlink\" title=\"准备\"\u003e\u003c/a\u003e准备\u003c/h2\u003e\u003cp\u003e为了演示不同的GROUP BY，我将使用Django内置的django.contrib.auth中的模型。\u003c/p\u003e\n\u003cfigure class=\"highlight plain\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; from django.contrib.auth.models import User\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003eDjango ORM生成的SQL语句具有很长的别名。为了简洁起见，我将演示一种简化但等效的执行过程。\u003c/p\u003e\n\u003ch2 id=\"统计行数\"\u003e\u003ca href=\"#统计行数\" class=\"headerlink\" title=\"统计行数\"\u003e\u003c/a\u003e统计行数\u003c/h2\u003e\u003cp\u003e让我们统计一下我们有多少用户：\u003c/p\u003e\n\u003cfigure class=\"highlight plain\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003eSELECT\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    COUNT(*)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eFROM\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    auth_user;\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cfigure class=\"highlight plain\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003eUser.objects.count()\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e行的统计查询是如此常见，以至于Django的QuerySet包含了一个函数，与我们接下来将看到的其他QuerySets不同，\u003ccode\u003ecount\u003c/code\u003e返回一个数字。\u003c/p\u003e\n\u003ch2 id=\"如何使用aggregate函数\"\u003e\u003ca href=\"#如何使用aggregate函数\" class=\"headerlink\" title=\"如何使用aggregate函数\"\u003e\u003c/a\u003e如何使用\u003ccode\u003eaggregate\u003c/code\u003e函数\u003c/h2\u003e\u003cp\u003eDjango还提供了另外两种统计查询方法，首先来看看\u003ccode\u003eaggregate\u003c/code\u003e：\u003c/p\u003e\n\u003cfigure class=\"highlight plain\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003eSELECT\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    COUNT(id) AS id__count\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eFROM\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    auth_user;\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\u003cfigure class=\"highlight plain\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003efrom django.db.models import Count\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eUser.objects.aggregate(Count(\u0026#39;id\u0026#39;))\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e为了使用\u003ccode\u003eaggregate\u003c/code\u003e，我们导入了\u003ccode\u003eCount\u003c/code\u003e函数，\u003ccode\u003eaggregate\u003c/code\u003e以另外一个实现统计查询的表达式为参数，在本例中，我们使用主键\u003ccode\u003eid\u003c/code\u003e来查询数据库表中的行的数量。\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003eaggregate\u003c/code\u003e的结果是一个字典对象：\u003c/p\u003e\n\u003cfigure class=\"highlight plain\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; from django.db.models import Count\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; User.objects.aggregate(Count(\u0026#39;id\u0026#39;))\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e{\u0026#34;id__count\u0026#34;: 891}\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e键的名称是从字段的名称和查询函数的名称派生的，在本例中，键名是\u003ccode\u003eid__count\u003c/code\u003e。我们最好不要使用这样的命名方式，而是要自己设定名称：\u003c/p\u003e\n\u003cfigure class=\"highlight plain\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003eSELECT\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    COUNT(id) as total\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eFROM\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    auth_user;\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cfigure class=\"highlight plain\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; from django.db.models import Count\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; User.objects.aggregate(total=Count(\u0026#39;id\u0026#39;))\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e{\u0026#34;total\u0026#34;: 891}\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e\u003ccode\u003eaggregate\u003c/code\u003e参数的名称，就是返回值字典的键。\u003c/p\u003e\n\u003ch2 id=\"如何实现Group-By\"\u003e\u003ca href=\"#如何实现Group-By\" class=\"headerlink\" title=\"如何实现Group By\"\u003e\u003c/a\u003e如何实现Group By\u003c/h2\u003e\u003cp\u003e使用\u003ccode\u003eaggregate\u003c/code\u003e，我们得到数据表进行聚合查询结果，这很有用，但我们还希望对指定的行应用此操作。\u003c/p\u003e\n\u003cp\u003e让我们根据用户的活动状态来统计用户数：\u003c/p\u003e\n\u003cfigure class=\"highlight plain\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003eSELECT\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    is_active,\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    COUNT(id) AS total\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eFROM\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    auth_user\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eGROUP BY\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    is_active\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\u003cfigure class=\"highlight plain\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e(User.objects\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e.values(\u0026#39;is_active\u0026#39;)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e.annotate(total=Count(\u0026#39;id\u0026#39;)))\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e这次使用了\u003ccode\u003eannotate\u003c/code\u003e函数。我们使用\u003ccode\u003evalues\u003c/code\u003e和\u003ccode\u003eannotate\u003c/code\u003e的组合来完成分组查询：\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003evalues(\u0026#39;is_active\u0026#39;)\u003c/code\u003e：分组依据\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eannotate(total=Count(\u0026#39;id\u0026#39;))\u003c/code\u003e：要查询的内容\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e顺序很重要：如果在\u003ccode\u003eannotate\u003c/code\u003e之前调用\u003ccode\u003evalues\u003c/code\u003e失败，不会产生查询结果。\u003c/p\u003e\n\u003cp\u003e与\u003ccode\u003eaggregate\u003c/code\u003e一样，\u003ccode\u003eannotate\u003c/code\u003e的参数名称是QuerySet返回值的键，示例中就是\u003ccode\u003etotal\u003c/code\u003e。\u003c/p\u003e\n\u003ch2 id=\"分组筛选\"\u003e\u003ca href=\"#分组筛选\" class=\"headerlink\" title=\"分组筛选\"\u003e\u003c/a\u003e分组筛选\u003c/h2\u003e\u003cp\u003e若要对筛选查询应用聚合功能，可以在查询的任何位置使用\u003ccode\u003efilter\u003c/code\u003e，例如，仅按员工用户的活动状态对其进行统计：\u003c/p\u003e\n\u003cfigure class=\"highlight plain\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e8\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e9\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003eELECT\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    is_active,\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    COUNT(id) AS total\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eFROM\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    auth_user\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eWHERE\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    is_staff = True\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eGROUP BY\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    is_active\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\u003cfigure class=\"highlight plain\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e(User.objects\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e.values(\u0026#39;is_active\u0026#39;)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e.filter(is_staff=True)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e.annotate(total=Count(\u0026#39;id\u0026#39;)))\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003ch2 id=\"如何进行分组排序\"\u003e\u003ca href=\"#如何进行分组排序\" class=\"headerlink\" title=\"如何进行分组排序\"\u003e\u003c/a\u003e如何进行分组排序\u003c/h2\u003e\u003cp\u003e与\u003ccode\u003efilter\u003c/code\u003e类似，要对分组结果排序，可以在查询中使用\u003ccode\u003eorder_by\u003c/code\u003e：\u003c/p\u003e\n\u003cfigure class=\"highlight plain\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e8\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e9\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e10\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003eSELECT\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    is_active,\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    COUNT(id) AS total\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eFROM\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    auth_user\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eGROUP BY\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    is_active\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eORDER BY\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    is_active,\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    total\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\u003cfigure class=\"highlight plain\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e(User.objects\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e.values(\u0026#39;is_active\u0026#39;)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e.annotate(total=Count(\u0026#39;id\u0026#39;))\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e.order_by(\u0026#39;is_staff\u0026#39;, \u0026#39;total\u0026#39;))\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e请注意：你可以按分组的关键词\u003ccode\u003eis_active\u003c/code\u003e和聚合的关键词\u003ccode\u003etotal\u003c/code\u003e进行排序。\u003c/p\u003e\n\u003ch2 id=\"如何联合聚合查询\"\u003e\u003ca href=\"#如何联合聚合查询\" class=\"headerlink\" title=\"如何联合聚合查询\"\u003e\u003c/a\u003e如何联合聚合查询\u003c/h2\u003e\u003cp\u003e要生成同分组的多个聚合查询，请添加多个annotation：\u003c/p\u003e\n\u003cfigure class=\"highlight plain\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e8\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003eSELECT\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    is_active,\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    COUNT(id) AS total,\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    MAX(date_joined) AS last_joined\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eFROM\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    auth_user\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eGROUP BY\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    is_active\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\u003cfigure class=\"highlight plain\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e8\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003efrom django.db.models import Max\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e(User.objects\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e.values(\u0026#39;is_active\u0026#39;)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e.annotate(\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    total=Count(\u0026#39;id\u0026#39;),\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    last_joined=Max(\u0026#39;date_joined\u0026#39;),\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e))\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e该查询将得到活动用户和非活动用户的数量，以及用户加入每个组的最后日期。\u003c/p\u003e\n\u003ch2 id=\"根据多个字段进行分组\"\u003e\u003ca href=\"#根据多个字段进行分组\" class=\"headerlink\" title=\"根据多个字段进行分组\"\u003e\u003c/a\u003e根据多个字段进行分组\u003c/h2\u003e\u003cp\u003e就像执行多个聚合一样，我们可能也希望根据多个字段进行分组。例如，按活动状态和人员状态分组:\u003c/p\u003e\n\u003cfigure class=\"highlight plain\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e8\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e9\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003eSELECT\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    is_active,\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    is_staff,\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    COUNT(id) AS total\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eFROM\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    auth_user\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eGROUP BY\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    is_active,\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    is_staff\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\u003cfigure class=\"highlight plain\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e(User.objects\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e.values(\u0026#39;is_active\u0026#39;, \u0026#39;is_staff\u0026#39;)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e.annotate(total=Count(\u0026#39;id\u0026#39;)))\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e此查询的结果包括\u003ccode\u003eis_active\u003c/code\u003e、\u003ccode\u003eis_staff\u003c/code\u003e和每个组中的用户数。\u003c/p\u003e\n\u003ch2 id=\"根据表达式分组\"\u003e\u003ca href=\"#根据表达式分组\" class=\"headerlink\" title=\"根据表达式分组\"\u003e\u003c/a\u003e根据表达式分组\u003c/h2\u003e\u003cp\u003e分组的另一个常见用例是按表达式分组。例如，统计每年加入的用户数：\u003c/p\u003e\n\u003cfigure class=\"highlight plain\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003eSELECT\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    EXTRACT(\u0026#39;year\u0026#39; FROM date_joined),\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    COUNT(id) AS total\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eFROM\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    auth_user\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eGROUP BY\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    EXTRACT(\u0026#39;year\u0026#39; FROM date_joined)\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\u003cfigure class=\"highlight plain\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e(User.objects\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e.values(\u0026#39;date_joined__year\u0026#39;)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e.annotate(total=Count(\u0026#39;id\u0026#39;)))\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e注意，为了从日期开始获取年份，我们在第一次调用\u003ccode\u003evalues()\u003c/code\u003e时使用了特殊表达式\u003ccode\u003e\u0026lt;field\u0026gt;__year\u003c/code\u003e。查询的结果是一个dict，键的名称将是\u003ccode\u003edate_joined__year\u003c/code\u003e。\u003c/p\u003e\n\u003cp\u003e有时，内置表达式不够，需要在更复杂的表达式上进行聚合。例如，按注册后登录的用户分组：\u003c/p\u003e\n\u003cfigure class=\"highlight plain\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003eSELECT\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  last_login \u0026gt; date_joined AS logged_since_joined,\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  COUNT(id) AS total\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eFROM\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  auth_user\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eGROUP BY\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  last_login \u0026gt; date_joined\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\u003cfigure class=\"highlight plain\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e8\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e9\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e10\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e11\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e12\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e13\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e14\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e15\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003efrom django.db.models import (\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    ExpressionWrapper,\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    Q, F, BooleanField,\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e(User.objects\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e.annotate(\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    logged_since_joined=ExpressionWrapper(\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        Q(last_login__gt=F(\u0026#39;date_joined\u0026#39;)),\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        output_field=BooleanField(),\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    )\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e.values(\u0026#39;logged_since_joined\u0026#39;)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e.annotate(total=Count(\u0026#39;id\u0026#39;))\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e.values(\u0026#39;logged_since_joined\u0026#39;, \u0026#39;total\u0026#39;)\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\n\u003cp\u003e这里的表达式相当复杂。我们首先使用\u003ccode\u003eannotate\u003c/code\u003e构建表达式，然后在下面对\u003ccode\u003evalues()\u003c/code\u003e的调用中通过引用表达式将其标记为按该关键词分组。后面的代码就跟前述一样了。\u003c/p\u003e\n\u003ch2 id=\"根据条件聚合\"\u003e\u003ca href=\"#根据条件聚合\" class=\"headerlink\" title=\"根据条件聚合\"\u003e\u003c/a\u003e根据条件聚合\u003c/h2\u003e\u003cp\u003e根据条件，只能对组的一部分进行聚合。当有多个聚合时，条件就很有用了。例如，按注册年份统计员工用户和非员工用户的数量：\u003c/p\u003e\n\u003cfigure class=\"highlight plain\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e8\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e9\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e10\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e11\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e12\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e13\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e14\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e15\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003eSELECT\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    EXTRACT(\u0026#39;year\u0026#39; FROM date_joined),\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    COUNT(id) FILTER (\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        WHERE is_staff = True\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    ) AS staff_users,\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    COUNT(id) FILTER (\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        WHERE is_staff = False\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    ) AS non_staff_users\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eFROM\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    auth_user\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eGROUP BY\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    EXTRACT(\u0026#39;year\u0026#39; FROM date_joined)\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\u003cfigure class=\"highlight plain\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e8\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e9\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e10\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e11\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e12\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003efrom django.db.models import F, Q\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e(User.objects\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e.values(\u0026#39;date_joined__year\u0026#39;)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e.annotate(\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    staff_users=(\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        Count(\u0026#39;id\u0026#39;, filter=Q(is_staff=True))\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    ),\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    non_staff_users=(\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        Count(\u0026#39;id\u0026#39;, filter=Q(is_staff=False))\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    ),\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e))\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e上面的SQL来自PostgreSQL，它和SQLite是目前唯一支持\u003ccode\u003eFILTER\u003c/code\u003e语法快捷方式（正式名称为“选择性聚合”）的数据库。对于其他数据库，ORM将使用\u003ccode\u003eCASE ... WHEN\u003c/code\u003e来代替。\u003c/p\u003e\n\u003ch2 id=\"如何使用Having\"\u003e\u003ca href=\"#如何使用Having\" class=\"headerlink\" title=\"如何使用Having\"\u003e\u003c/a\u003e如何使用Having\u003c/h2\u003e\u003cp\u003eHAVING子句用于筛选聚合函数的结果。例如，查找超过100多个用户加入的年份：\u003c/p\u003e\n\u003cfigure class=\"highlight plain\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e8\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e9\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003eSELECT\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    is_active,\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    COUNT(id) AS total\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eFROM\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    auth_user\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eGROUP BY\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    is_active\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eHAVING\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    COUNT(id) \u0026gt; 100\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\u003cfigure class=\"highlight plain\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e(User.objects\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e.annotate(year_joined=F(\u0026#39;date_joined__year\u0026#39;))\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e.values(\u0026#39;is_active\u0026#39;)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e.annotate(total=Count(\u0026#39;id\u0026#39;))\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e.filter(total__gt=100))\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e对\u003ccode\u003eannotate\u003c/code\u003e中的\u003ccode\u003etotal\u003c/code\u003e查询结果进行过滤，即后面的\u003ccode\u003efilter\u003c/code\u003e，它与SQL中的HAVING子句等效。\u003c/p\u003e\n\u003ch2 id=\"根据Distinct分组\"\u003e\u003ca href=\"#根据Distinct分组\" class=\"headerlink\" title=\"根据Distinct分组\"\u003e\u003c/a\u003e根据Distinct分组\u003c/h2\u003e\u003cp\u003e对于某些聚合函数（如“COUNT”），有时只需要计算不同的出现次数。例如，每一种活动状态中的用户有多少不同的姓氏：\u003c/p\u003e\n\u003cfigure class=\"highlight plain\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e8\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003eSELECT\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    is_active,\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    COUNT(id) AS total,\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    COUNT(DISTINCT last_name) AS unique_names\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eFROM\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    auth_user\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eGROUP BY\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    is_active\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\u003cfigure class=\"highlight plain\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e(User.objects\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e.values(\u0026#39;is_active\u0026#39;)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e.annotate(\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    total=Count(\u0026#39;id\u0026#39;),\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    unique_names=Count(\u0026#39;last_name\u0026#39;, distinct=True),\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e))\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e注意在\u003ccode\u003eCount\u003c/code\u003e的参数中使用了\u003ccode\u003edistinct=True\u003c/code\u003e。\u003c/p\u003e\n\u003ch2 id=\"使用聚合字段创建表达式\"\u003e\u003ca href=\"#使用聚合字段创建表达式\" class=\"headerlink\" title=\"使用聚合字段创建表达式\"\u003e\u003c/a\u003e使用聚合字段创建表达式\u003c/h2\u003e\u003cp\u003e聚合字段通常只是解决较大问题的第一步。例如，按用户活动状态列出的唯一姓氏的百分比是多少：\u003c/p\u003e\n\u003cfigure class=\"highlight plain\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e8\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e9\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e10\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003eSELECT\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    is_active,\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    COUNT(id) AS total,\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    COUNT(DISTINCT last_name) AS unique_names,\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    (COUNT(DISTINCT last_name)::float\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        / COUNT(id)::float) AS pct_unique_names\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eFROM\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    auth_user\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eGROUP BY\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    is_active\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\u003cfigure class=\"highlight plain\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e8\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e9\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e10\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e11\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e12\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e13\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003efrom django.db.models import FloatField\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003efrom django.db.models.functions import Cast\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e(User.objects\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e.values(\u0026#39;is_active\u0026#39;)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e.annotate(\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    total=Count(\u0026#39;id\u0026#39;),\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    unique_names=Count(\u0026#39;last_name\u0026#39;, distinct=True),\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e.annotate(pct_unique_names=(\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    Cast(\u0026#39;unique_names\u0026#39;, FloatField())\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    / Cast(\u0026#39;total\u0026#39;, FloatField())\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e))\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e第一个\u003ccode\u003eannotate()\u003c/code\u003e定义聚合字段。第二个\u003ccode\u003eannotate()\u003c/code\u003e使用聚合函数构造表达式。\u003c/p\u003e\n\u003ch2 id=\"跨表分组\"\u003e\u003ca href=\"#跨表分组\" class=\"headerlink\" title=\"跨表分组\"\u003e\u003c/a\u003e跨表分组\u003c/h2\u003e\u003cp\u003e到目前为止，我们只是在一个模型中进行各种数据查询操作，但聚合也能在不同模型（即不同数据库表）之间实现，比较简单的情况是一对一或外键关系。例如，假设我们有一个与用户一一对应的\u003ccode\u003eUser profile\u003c/code\u003e模型，并且我们希望按配置文件的类型统计用户：\u003c/p\u003e\n\u003cfigure class=\"highlight plain\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e8\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003eSELECT\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    p.type,\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    COUNT(u.id) AS total\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eFROM\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    auth_user u\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    JOIN user_profile p ON u.id = p.user_id\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eGROUP BY\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    p.type\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\u003cfigure class=\"highlight plain\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e(User.objects\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e.values(\u0026#39;user_profile__type\u0026#39;)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e.annotate(total=Count(\u0026#39;id\u0026#39;)))\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\n\u003cp\u003e就像分组表达式一样，在\u003ccode\u003evalues\u003c/code\u003e中使用关联表，并按该该字段分组。请注意：表示关联数据库包的名称将是\u003ccode\u003euser_profile__type\u003c/code\u003e。\u003c/p\u003e\n\u003ch2 id=\"根据多对多关系分组\"\u003e\u003ca href=\"#根据多对多关系分组\" class=\"headerlink\" title=\"根据多对多关系分组\"\u003e\u003c/a\u003e根据多对多关系分组\u003c/h2\u003e\u003cp\u003e更复杂的还是多对多的关系。例如，计算每个用户参与了多少个小组：\u003c/p\u003e\n\u003cfigure class=\"highlight plain\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e8\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e9\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e10\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003eSELECT\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    u.id,\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    COUNT(ug.group_id) AS memberships\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eFROM\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    auth_user\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    LEFT OUTER JOIN auth_user_groups ug ON (\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        u.id = ug.user_id\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    )\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eGROUP BY\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    u.id\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\u003cfigure class=\"highlight plain\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e(User.objects\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e.annotate(memberships=Count(\u0026#39;groups\u0026#39;))\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e.values(\u0026#39;id\u0026#39;, \u0026#39;memberships\u0026#39;))\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e用户可以是多个组的成员，要统计用户所属的组数，我们在\u003ccode\u003eUser\u003c/code\u003e模型中使用了相关名称\u003ccode\u003egroups\u003c/code\u003e。如果未显式设置相关名称（且未显式禁用），Django将自动生成格式为\u003ccode\u003e{related model model}_set\u003c/code\u003e的名称。例如\u003ccode\u003egroup_set\u003c/code\u003e。\u003c/p\u003e\n\u003cp\u003e原文链接：\u003ca href=\"https://hakibenita.com/django-group-by-sql\" target=\"_blank\" rel=\"noopener\"\u003ehttps://hakibenita.com/django-group-by-sql\u003c/a\u003e\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e关注微信公众号：老齐教室。读深度文章，得精湛技艺，享绚丽人生。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003c/section\u003e\n    \u003c!-- Tags START --\u003e\n    \n    \u003c!-- Tags END --\u003e\n    \u003c!-- NAV START --\u003e\n    \n  \u003cdiv class=\"nav-container\"\u003e\n    \u003c!-- reverse left and right to put prev and next in a more logic postition --\u003e\n    \n      \u003ca class=\"nav-left\" href=\"/2020/02/26/python-overload-function/\"\u003e\n        \u003cspan class=\"nav-arrow\"\u003e← \u003c/span\u003e\n        \n          Python如何实现重载函数\n        \n      \u003c/a\u003e\n    \n    \n      \u003ca class=\"nav-right\" href=\"/2020/03/03/python-walrus-operator/\"\u003e\n        \n          Python3.8新语法：海象运算符\n        \n        \u003cspan class=\"nav-arrow\"\u003e →\u003c/span\u003e\n      \u003c/a\u003e\n    \n  \u003c/div\u003e\n\n    \u003c!-- NAV END --\u003e\n    \u003c!-- 打赏 START --\u003e\n    \n      \u003cdiv class=\"money-like\"\u003e\n        \u003cdiv class=\"reward-btn\"\u003e\n          赏\n          \u003cspan class=\"money-code\"\u003e\n            \u003cspan class=\"alipay-code\"\u003e\n              \u003cdiv class=\"code-image\"\u003e\u003c/div\u003e\n              \u003cb\u003e使用支付宝打赏\u003c/b\u003e\n            \u003c/span\u003e\n            \u003cspan class=\"wechat-code\"\u003e\n              \u003cdiv class=\"code-image\"\u003e\u003c/div\u003e\n              \u003cb\u003e使用微信打赏\u003c/b\u003e\n            \u003c/span\u003e\n          \u003c/span\u003e\n        \u003c/div\u003e\n        \u003cp class=\"notice\"\u003e若你觉得我的文章对你有帮助，欢迎点击上方按钮对我打赏\u003c/p\u003e\n      \u003c/div\u003e\n    \n    \u003c!-- 打赏 END --\u003e\n    \u003c!-- 二维码 START --\u003e\n    \u003c!--% if (theme.qrcode) { %--\u003e\n      \u003cdiv class=\"qrcode\"\u003e\n        \u003c!--canvas id=\"share-qrcode\"\u003e\u003c/!--canvas--\u003e\n        \u003cimg src=\"https://public-tuchuang.oss-cn-hangzhou.aliyuncs.com/WechatIMG6_20200109154827.jpeg\" width=\"400\"/\u003e\n        \u003cp class=\"notice\"\u003e关注微信公众号，读文章、听课程，提升技能\u003c/p\u003e\n      \u003c/div\u003e\n    \u003c!--% } %--\u003e\n    \u003c!-- 二维码 END --\u003e\n    \n      \u003c!-- No Comment --\u003e\n    \n  \u003c/article\u003e",
  "Date": "2020-03-02T00:00:00Z",
  "Author": "老齐教室"
}