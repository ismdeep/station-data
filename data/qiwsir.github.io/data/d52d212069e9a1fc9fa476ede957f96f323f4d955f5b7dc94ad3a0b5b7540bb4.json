{
  "Source": "qiwsir.github.io",
  "Title": "用Pandas从HTML网页中读取数据",
  "Link": "https://qiwsir.github.io/2020/04/01/ml-pandas-read-html/",
  "Content": "\u003carticle class=\"post-article\"\u003e\n    \u003ch2\u003e用Pandas从HTML网页中读取数据\u003c/h2\u003e\n    \u003cp class=\"post-date\"\u003e2020-04-01\u003c/p\u003e\n    \u003csection class=\"markdown-content\"\u003e\u003cp\u003e作者： Erik Marsja\u003c/p\u003e\n\u003cp\u003e翻译：老齐\u003c/p\u003e\n\u003cp\u003e与本文相关的图书推荐：《数据准备和特征工程》\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"https://public-tuchuang.oss-cn-hangzhou.aliyuncs.com/%E7%89%B9%E5%BE%81%E5%B7%A5%E7%A8%8B2_20200114135935.png\" alt=\"电子工业出版社天猫旗舰店有售\"/\u003e\u003c/p\u003e\n\u003cp\u003e本书已经在【\u003ca href=\"https://detail.tmall.com/item.htm?spm=a220m.1000862.1000725.1.3ce65a2ef29zoQ\u0026amp;id=612118606197\u0026amp;areaId=320500\u0026amp;is_b=1\u0026amp;cat_id=2\u0026amp;q=%25CA%25FD%25BE%25DD%25D7%25BC%25B1%25B8\u0026amp;rn=8a5993aa9aad6542637ced399701e7a4\" target=\"_blank\" rel=\"noopener\"\u003e电子工业出版社天猫旗舰店\u003c/a\u003e】发售\u003c/p\u003e\n\u003chr/\u003e\n\u003cp\u003e本文，我们将通过几步演示如何用Pandas的\u003ccode\u003eread_html\u003c/code\u003e函数从HTML页面中抓取数据。首先，一个简单的示例，我们将用Pandas从字符串中读入HTML；然后，我们将用一些示例，说明如何从Wikipedia的页面中读取数据。\u003c/p\u003e\n\u003ch2 id=\"用Python载入数据\"\u003e\u003ca href=\"#用Python载入数据\" class=\"headerlink\" title=\"用Python载入数据\"\u003e\u003c/a\u003e用Python载入数据\u003c/h2\u003e\u003cp\u003e对于数据分析和可视化而言，我们通常都要载入数据，一般是从已有的文件中导入，比如常见的CSV文件或者Excel文件。从CSV文件中读入数据，可以使用Pandas的\u003ccode\u003eread_csv\u003c/code\u003e方法。例如：\u003c/p\u003e\n\u003cfigure class=\"highlight plain\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003eimport pandas as pd\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003edf = pd.read_csv(\u0026#39;CSVFILE.csv\u0026#39;)\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e上面的方法通常用于导入结构化的数据，比如CSV或者JSON等。\u003c/p\u003e\n\u003cp\u003e我们平时更多使用维基百科的信息，它们通常是以HTML的表格形式存在。\u003c/p\u003e\n\u003cp\u003e为了获得这些表格中的数据，我们可以将它们复制粘贴到电子表格中，然后用Pandas的\u003ccode\u003eread_excel\u003c/code\u003e读取。这样当然可以，然而现在，我们要用网络爬虫的技术自动完成数据读取。\u003c/p\u003e\n\u003ch2 id=\"预备知识\"\u003e\u003ca href=\"#预备知识\" class=\"headerlink\" title=\"预备知识\"\u003e\u003c/a\u003e预备知识\u003c/h2\u003e\u003cp\u003e用Pandas读取HTML表格数据，当然要先安装Pandas了。此处使用pip来安装（也可以使用其它方式，比如Anaconda, ActivePython等），安装方法\u003ccode\u003epip install pandas\u003c/code\u003e。\u003c/p\u003e\n\u003cp\u003e注意，如果执行此命令后会自动检查pip是否需要升级，如果有必要请升级。此外，我们也会使用lxml或者BeautifulSoup4这些包，安装方法还是用pip：\u003ccode\u003epip install lxml\u003c/code\u003e。\u003c/p\u003e\n\u003ch2 id=\"read-html函数\"\u003e\u003ca href=\"#read-html函数\" class=\"headerlink\" title=\"read_html函数\"\u003e\u003c/a\u003e\u003ccode\u003eread_html\u003c/code\u003e函数\u003c/h2\u003e\u003cp\u003e使用Pandas的\u003ccode\u003eread_html\u003c/code\u003e从HTML的表格中读取数据，其语法很简单：\u003c/p\u003e\n\u003cfigure class=\"highlight plain\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003epd.read_html(\u0026#39;URL_ADDRESS_or_HTML_FILE\u0026#39;)\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e\u003cimg src=\"https://public-tuchuang.oss-cn-hangzhou.aliyuncs.com/web_20200331125201.jpg\" alt=\"\"/\u003e\u003c/p\u003e\n\u003cp\u003e以上就是\u003ccode\u003eread_html\u003c/code\u003e函数的完整使用方法，下面演示示例：\u003c/p\u003e\n\u003ch3 id=\"示例1\"\u003e\u003ca href=\"#示例1\" class=\"headerlink\" title=\"示例1\"\u003e\u003c/a\u003e示例1\u003c/h3\u003e\u003cp\u003e第一个示例，演示如何使用Pandas的\u003ccode\u003eread_html\u003c/code\u003e函数，我们要从一个字符串中的HTML表格读取数据。\u003c/p\u003e\n\u003cfigure class=\"highlight plain\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e8\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e9\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e10\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e11\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e12\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e13\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e14\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e15\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e16\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e17\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e18\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e19\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e20\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e21\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e22\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e23\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e24\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e25\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003eimport pandas as pd\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003ehtml = \u0026#39;\u0026#39;\u0026#39;\u0026lt;table\u0026gt;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  \u0026lt;tr\u0026gt;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u0026lt;th\u0026gt;a\u0026lt;/th\u0026gt;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u0026lt;th\u0026gt;b\u0026lt;/th\u0026gt;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u0026lt;th\u0026gt;c\u0026lt;/th\u0026gt;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u0026lt;th\u0026gt;d\u0026lt;/th\u0026gt;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  \u0026lt;/tr\u0026gt;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  \u0026lt;tr\u0026gt;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u0026lt;td\u0026gt;1\u0026lt;/td\u0026gt;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u0026lt;td\u0026gt;2\u0026lt;/td\u0026gt;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u0026lt;td\u0026gt;3\u0026lt;/td\u0026gt;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u0026lt;td\u0026gt;4\u0026lt;/td\u0026gt;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  \u0026lt;/tr\u0026gt;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  \u0026lt;tr\u0026gt;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u0026lt;td\u0026gt;5\u0026lt;/td\u0026gt;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u0026lt;td\u0026gt;6\u0026lt;/td\u0026gt;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u0026lt;td\u0026gt;7\u0026lt;/td\u0026gt;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u0026lt;td\u0026gt;8\u0026lt;/td\u0026gt;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  \u0026lt;/tr\u0026gt;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026lt;/table\u0026gt;\u0026#39;\u0026#39;\u0026#39;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003edf = pd.read_html(html)\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e现在，我们所得到的结果不是Pandas的DataFrame对象，而是一个Python列表对象，可以使用\u003ccode\u003etupe()\u003c/code\u003e函数检验一下：\u003c/p\u003e\n\u003cfigure class=\"highlight plain\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003etype(df)\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e\u003cimg src=\"https://public-tuchuang.oss-cn-hangzhou.aliyuncs.com/pandas_read_html_examples_20200331125243.jpg\" alt=\"\"/\u003e\u003c/p\u003e\n\u003ch3 id=\"示例2\"\u003e\u003ca href=\"#示例2\" class=\"headerlink\" title=\"示例2\"\u003e\u003c/a\u003e示例2\u003c/h3\u003e\u003cp\u003e在第二个示例中，我们要从维基百科中抓取数据。我们要抓取的是关于蟒科的表格数据。\u003c/p\u003e\n\u003cfigure class=\"highlight plain\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003eimport pandas as pd\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003edfs = pd.read_html(\u0026#39;https://en.wikipedia.org/wiki/Pythonidae\u0026#39;)\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e现在，我们得到了一个包含7个表格的列表（\u003ccode\u003elen(df)\u003c/code\u003e），如果打开维基百科的那个网页，我们能够看到第一个表格是页面右边的，在本例中，我们更关心的是第二个表格：\u003c/p\u003e\n\u003cfigure class=\"highlight plain\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003edfs[1]\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\u003cp\u003e\u003cimg src=\"https://public-tuchuang.oss-cn-hangzhou.aliyuncs.com/wikipedia_tables_20200331125333.jpg\" alt=\"\"/\u003e\u003c/p\u003e\n\u003ch3 id=\"示例3\"\u003e\u003ca href=\"#示例3\" class=\"headerlink\" title=\"示例3\"\u003e\u003c/a\u003e示例3\u003c/h3\u003e\u003cp\u003e在第三个示例中，我们要读取瑞典的新冠病毒（covid-19）数据。此处，需要在\u003ccode\u003eread_html\u003c/code\u003e方法中增加一个参数，然后实施数据清洗，最后要对这些数据进行可视化。\u003c/p\u003e\n\u003ch4 id=\"抓取数据\"\u003e\u003ca href=\"#抓取数据\" class=\"headerlink\" title=\"抓取数据\"\u003e\u003c/a\u003e抓取数据\u003c/h4\u003e\u003cp\u003e打开网页，会看到页面中的表格上写着“New COVID-19 cases in Sweden by county”，现在，我们就使用match参数和这个字符串：\u003c/p\u003e\n\u003cfigure class=\"highlight plain\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003edfs = pd.read_html(\u0026#39;https://en.wikipedia.org/wiki/2020_coronavirus_pandemic_in_Sweden\u0026#39;,\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e                  match=\u0026#39;New COVID-19 cases in Sweden by county\u0026#39;)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003edfs[0].tail()\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\u003cp\u003e\u003cimg src=\"https://public-tuchuang.oss-cn-hangzhou.aliyuncs.com/wikipedia_20200331125411.jpg\" alt=\"\"/\u003e\u003c/p\u003e\n\u003cp\u003e用这个方法，我们仅得到了网页上的表格，但是，如图中所示，倒数三行是没用的，需要删除它们。\u003c/p\u003e\n\u003ch4 id=\"用Pandas的iloc删除最后几行\"\u003e\u003ca href=\"#用Pandas的iloc删除最后几行\" class=\"headerlink\" title=\"用Pandas的iloc删除最后几行\"\u003e\u003c/a\u003e用Pandas的\u003ccode\u003eiloc\u003c/code\u003e删除最后几行\u003c/h4\u003e\u003cp\u003e下面，使用Pandas的iloc删除最后三行。注意，我们使用-3作为第二个参数（如果对此不理解，请参考Pandas有关教程，比如《跟老齐学Python：数据分析》），最后再复制一份数据。\u003c/p\u003e\n\u003cfigure class=\"highlight plain\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003edf = dfs[0].iloc[:-3, :].copy()\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e接下来，要学习如何将多级列索引改为一级索引。\u003c/p\u003e\n\u003ch4 id=\"修改多级索引为一级，并删除不必要的字符\"\u003e\u003ca href=\"#修改多级索引为一级，并删除不必要的字符\" class=\"headerlink\" title=\"修改多级索引为一级，并删除不必要的字符\"\u003e\u003c/a\u003e修改多级索引为一级，并删除不必要的字符\u003c/h4\u003e\u003cp\u003e现在，我们要处理多级列索引问题了，准备使用\u003ccode\u003eDataFrame.columns\u003c/code\u003e和\u003ccode\u003eDataFrame.columns,get_level_values()\u003c/code\u003e:\u003c/p\u003e\n\u003cfigure class=\"highlight plain\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003edf.columns = df.columns.get_level_values(1)\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\u003cp\u003e\u003cimg src=\"https://public-tuchuang.oss-cn-hangzhou.aliyuncs.com/scrape_tables_20200331125459.jpg\" alt=\"\"/\u003e\u003c/p\u003e\n\u003cp\u003e最后，如你所见，在“Date”那一列，我们用\u003ccode\u003eread_html\u003c/code\u003e从维基百科网页的表格中获得数据之后，还有一些说明，接下来使用\u003ccode\u003estr.replace\u003c/code\u003e函数和正则表达式对其进行修订：\u003c/p\u003e\n\u003cfigure class=\"highlight plain\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003edf[\u0026#39;Date\u0026#39;] = df[\u0026#39;Date\u0026#39;].str.replace(r\u0026#34;\\[.*?\\]\u0026#34;,\u0026#34;\u0026#34;)\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003ch4 id=\"用set-index更改索引\"\u003e\u003ca href=\"#用set-index更改索引\" class=\"headerlink\" title=\"用set_index更改索引\"\u003e\u003c/a\u003e用\u003ccode\u003eset_index\u003c/code\u003e更改索引\u003c/h4\u003e\u003cp\u003e我们继续使用Pandas的\u003ccode\u003eset_index\u003c/code\u003e方法将日期列设置为索引，这样做能够为后面的作图提供一个时间类型的Series对象。\u003c/p\u003e\n\u003cfigure class=\"highlight plain\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003edf[\u0026#39;Date\u0026#39;] = pd.to_datetime(df[\u0026#39;Date\u0026#39;])\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003edf.set_index(\u0026#39;Date\u0026#39;, inplace=True)\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e为了后续的作图需要，我们需要用0填充缺失值，然后将相应列的数据类型改为数字类型。为此，使用\u003ccode\u003eapply\u003c/code\u003e方法。最后，使用\u003ccode\u003ecumsum()\u003c/code\u003e方法得到每一列的逐项求和的值。\u003c/p\u003e\n\u003cfigure class=\"highlight plain\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003edf.fillna(0, inplace=True)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003edf = df.iloc[:,0:21].apply(pd.to_numeric)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003edf = df.cumsum()\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003ch4 id=\"用时间Series作图\"\u003e\u003ca href=\"#用时间Series作图\" class=\"headerlink\" title=\"用时间Series作图\"\u003e\u003c/a\u003e用时间Series作图\u003c/h4\u003e\u003cp\u003e最后一部分，使用\u003ccode\u003eread_html\u003c/code\u003e所得到的数据，创建一个时间序列的图像。首先，要导入matplotlib，可以用legend函数定义图例的位置。\u003c/p\u003e\n\u003cfigure class=\"highlight plain\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e8\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e%matplotlib inline\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eimport matplotlib.pyplot as plt\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003ef = plt.figure()\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eplt.title(\u0026#39;Covid cases Sweden\u0026#39;, color=\u0026#39;black\u0026#39;)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003edf.iloc[:,0:21].plot(ax=f.gca())\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eplt.legend(loc=\u0026#39;center left\u0026#39;, bbox_to_anchor=(1.0, 0.5)))\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\u003cp\u003e\u003cimg src=\"https://public-tuchuang.oss-cn-hangzhou.aliyuncs.com/series_plot_20200331125545.png\" alt=\"\"/\u003e\u003c/p\u003e\n\u003ch2 id=\"结论：如何从HTML中读取数据并转化为DataFrame类型\"\u003e\u003ca href=\"#结论：如何从HTML中读取数据并转化为DataFrame类型\" class=\"headerlink\" title=\"结论：如何从HTML中读取数据并转化为DataFrame类型\"\u003e\u003c/a\u003e结论：如何从HTML中读取数据并转化为DataFrame类型\u003c/h2\u003e\u003cp\u003e本文中，学习了用Pandas的\u003ccode\u003eread_html\u003c/code\u003e函数从HTML中读取数据的方法，并且，我们利用维基百科中的数据创建了一个含有时间序列的图像。不仅如此，最后还将“Date”列设置为DataFrame的索引。\u003c/p\u003e\n\u003cp\u003e原文链接:\u003ca href=\"https://www.marsja.se/how-to-use-pandas-read_html-to-scrape-data-from-html-tables/\" target=\"_blank\" rel=\"noopener\"\u003ehttps://www.marsja.se/how-to-use-pandas-read_html-to-scrape-data-from-html-tables/\u003c/a\u003e\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e搜索技术问答的公众号：老齐教室\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cblockquote\u003e\n\u003cp\u003e在公众号中回复：\u003cstrong\u003e老齐\u003c/strong\u003e，可查看所有文章、书籍、课程。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp style=\"text-align:right\"\u003e\u003cstrong style=\"max-width: 100%;color: rgb(255, 255, 255);background-color: rgb(234, 6, 13);box-sizing: border-box !important;overflow-wrap: break-word !important;\"\u003e觉得好看，就点赞和转发\u003c/strong\u003e\u003c/p\u003e\u003c/section\u003e\n    \u003c!-- Tags START --\u003e\n    \n      \u003cdiv class=\"tags\"\u003e\n        \u003cspan\u003eTags:\u003c/span\u003e\n        \n  \u003ca href=\"/tags#Pandas read_html\"\u003e\n    \u003cspan class=\"tag-code\"\u003ePandas read_html\u003c/span\u003e\n  \u003c/a\u003e\n\n      \u003c/div\u003e\n    \n    \u003c!-- Tags END --\u003e\n    \u003c!-- NAV START --\u003e\n    \n  \u003cdiv class=\"nav-container\"\u003e\n    \u003c!-- reverse left and right to put prev and next in a more logic postition --\u003e\n    \n      \u003ca class=\"nav-left\" href=\"/2020/03/31/pandas-huge-data/\"\u003e\n        \u003cspan class=\"nav-arrow\"\u003e← \u003c/span\u003e\n        \n          利用Pandas和SQLite提升超大数据的读取速度\n        \n      \u003c/a\u003e\n    \n    \n      \u003ca class=\"nav-right\" href=\"/2020/04/03/ml-information-theory/\"\u003e\n        \n          必须懂：深度学习中的信息论概念\n        \n        \u003cspan class=\"nav-arrow\"\u003e →\u003c/span\u003e\n      \u003c/a\u003e\n    \n  \u003c/div\u003e\n\n    \u003c!-- NAV END --\u003e\n    \u003c!-- 打赏 START --\u003e\n    \n      \u003cdiv class=\"money-like\"\u003e\n        \u003cdiv class=\"reward-btn\"\u003e\n          赏\n          \u003cspan class=\"money-code\"\u003e\n            \u003cspan class=\"alipay-code\"\u003e\n              \u003cdiv class=\"code-image\"\u003e\u003c/div\u003e\n              \u003cb\u003e使用支付宝打赏\u003c/b\u003e\n            \u003c/span\u003e\n            \u003cspan class=\"wechat-code\"\u003e\n              \u003cdiv class=\"code-image\"\u003e\u003c/div\u003e\n              \u003cb\u003e使用微信打赏\u003c/b\u003e\n            \u003c/span\u003e\n          \u003c/span\u003e\n        \u003c/div\u003e\n        \u003cp class=\"notice\"\u003e若你觉得我的文章对你有帮助，欢迎点击上方按钮对我打赏\u003c/p\u003e\n      \u003c/div\u003e\n    \n    \u003c!-- 打赏 END --\u003e\n    \u003c!-- 二维码 START --\u003e\n    \u003c!--% if (theme.qrcode) { %--\u003e\n      \u003cdiv class=\"qrcode\"\u003e\n        \u003c!--canvas id=\"share-qrcode\"\u003e\u003c/!--canvas--\u003e\n        \u003cimg src=\"https://public-tuchuang.oss-cn-hangzhou.aliyuncs.com/WechatIMG6_20200109154827.jpeg\" width=\"400\"/\u003e\n        \u003cp class=\"notice\"\u003e关注微信公众号，读文章、听课程，提升技能\u003c/p\u003e\n      \u003c/div\u003e\n    \u003c!--% } %--\u003e\n    \u003c!-- 二维码 END --\u003e\n    \n      \u003c!-- No Comment --\u003e\n    \n  \u003c/article\u003e",
  "Date": "2020-04-01T00:00:00Z",
  "Author": "老齐教室"
}