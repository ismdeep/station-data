{
  "Source": "qiwsir.github.io",
  "Title": "用信息论剖析深度学习",
  "Link": "https://qiwsir.github.io/2020/04/10/dl-information-theroy/",
  "Content": "\u003carticle class=\"post-article\"\u003e\n    \u003ch2\u003e用信息论剖析深度学习\u003c/h2\u003e\n    \u003cp class=\"post-date\"\u003e2020-04-10\u003c/p\u003e\n    \u003csection class=\"markdown-content\"\u003e\u003cp\u003e作者：Lilian Weng\u003c/p\u003e\n\u003cp\u003e翻译：老齐\u003c/p\u003e\n\u003cp\u003e与本文相关书籍推荐：《数据准备和特征工程》\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"https://public-tuchuang.oss-cn-hangzhou.aliyuncs.com/%E7%89%B9%E5%BE%81%E5%B7%A5%E7%A8%8B2_20200114135935.png\" alt=\"\"/\u003e\u003c/p\u003e\n\u003chr/\u003e\n\u003cp\u003e最近，我聆听了Naftali Tishby教授的演讲“深度学习中的信息论”，感觉很有意思。他在演讲中说明了如何将信息论用于研究深度神经网络的增长和转换，他利用IB（Information Bottleneck）方法，为深度神经网络（DNN）开创了一个新的领域，由于参数的数量成指数增长，导致传统的学习理论在该领域均行不通。另外的一种敏锐观察显示，在DNN训练中包含了两个迥异的阶段：首先，训练网络充分表示输入数据，最小化泛化误差；然后，通过压缩输入的表示形式，它学会了忘记不相关的细节。\u003c/p\u003e\n\u003ch2 id=\"基本概念\"\u003e\u003ca href=\"#基本概念\" class=\"headerlink\" title=\"基本概念\"\u003e\u003c/a\u003e基本概念\u003c/h2\u003e\u003ch3 id=\"马尔科夫链\"\u003e\u003ca href=\"#马尔科夫链\" class=\"headerlink\" title=\"马尔科夫链\"\u003e\u003c/a\u003e马尔科夫链\u003c/h3\u003e\u003cp\u003e马尔科夫过程是一个“无记忆”（也称为“马尔科夫性质”）的随机过程，马尔科夫链是一类包含多个离散状态的马尔科夫过程，也就是说，过程的未来状态的条件概率仅由当前状态决定，而不取决于过去状态。\u003c/p\u003e\n\u003ch3 id=\"KL散度\"\u003e\u003ca href=\"#KL散度\" class=\"headerlink\" title=\"KL散度\"\u003e\u003c/a\u003eKL散度\u003c/h3\u003e\u003cp\u003eKL散度用于度量一个概率分布\u003ccode\u003ep\u003c/code\u003e偏离另一个期望的概率分布\u003ccode\u003eq\u003c/code\u003e的程度，它是不对称的。\u003c/p\u003e\n\u003cp\u003e$$\\begin{aligned}D_{KL}(p | q) \u0026amp;= \\sum_x p(x) \\log \\frac{p(x)}{q(x)} dx \\\u003cbr/\u003e \u0026amp;= - \\sum_x p(x)\\log q(x) + \\sum_x p(x)\\log p(x) \\\u003cbr/\u003e \u0026amp;= H(P, Q) - H(P)\\end{aligned} $$\u003c/p\u003e\n\u003cp\u003e当$p(x)$ == $q(x)$时，$D_{KL}$达到最小值零。\u003c/p\u003e\n\u003ch3 id=\"互信息\"\u003e\u003ca href=\"#互信息\" class=\"headerlink\" title=\"互信息\"\u003e\u003c/a\u003e互信息\u003c/h3\u003e\u003cp\u003e互信息度量两个变量之间的相互依赖程度，它把一个随机变量通过另一个随机变量所获得的“信息量”进行量化，互信息是对称的。\u003c/p\u003e\n\u003cp\u003e$$\u003cbr/\u003e\\begin{aligned}\u003cbr/\u003eI(X;Y) \u0026amp;= D_{KL}[p(x,y) | p(x)p(y)] \\\u003cbr/\u003e \u0026amp;= \\sum_{x \\in X, y \\in Y} p(x, y) \\log(\\frac{p(x, y)}{p(x)p(y)}) \\\u003cbr/\u003e \u0026amp;= \\sum_{x \\in X, y \\in Y} p(x, y) \\log(\\frac{p(x|y)}{p(x)}) \\\u003cbr/\u003e \u0026amp;= H(X) - H(X|Y) \\\u003cbr/\u003e\\end{aligned}$$\u003c/p\u003e\n\u003ch3 id=\"数据处理不等式-DPI\"\u003e\u003ca href=\"#数据处理不等式-DPI\" class=\"headerlink\" title=\"数据处理不等式(DPI)\"\u003e\u003c/a\u003e数据处理不等式(DPI)\u003c/h3\u003e\u003cp\u003e对于任意的马尔科夫链: $X \\to Y \\to Z$，我们有$I(X; Y) \\geq I(X; Z)$。\u003c/p\u003e\n\u003cp\u003e深度神经网络可以看作是一个马尔科夫链，因此当我们沿着DNN层向下移动时，层与输入之间的互信息只会减少。\u003c/p\u003e\n\u003ch3 id=\"再参数化不变性\"\u003e\u003ca href=\"#再参数化不变性\" class=\"headerlink\" title=\"再参数化不变性\"\u003e\u003c/a\u003e再参数化不变性\u003c/h3\u003e\u003cp\u003e对于两个可逆函数$\\phi$，$\\psi$，互信息仍然是：$I(X; Y) = I(\\phi(X); \\psi(Y))$。\u003c/p\u003e\n\u003cp\u003e例如，如果我们在DNN的一个层中调整权重，它不会影响这个层和另一个层之间的互信息。\u003c/p\u003e\n\u003ch2 id=\"马尔科夫链的深度神经网络\"\u003e\u003ca href=\"#马尔科夫链的深度神经网络\" class=\"headerlink\" title=\"马尔科夫链的深度神经网络\"\u003e\u003c/a\u003e马尔科夫链的深度神经网络\u003c/h2\u003e\u003cp\u003e训练数据来自$X$和$Y$联合分布的抽样观测，输入变量$X$和隐藏层的权重都是高维随机变量。真实值$Y$和预测值$\\hat{Y}$是分类设置中较小维度的随机变量。\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"https://public-tuchuang.oss-cn-hangzhou.aliyuncs.com/ib-dnn-structure_20200409110120.png\" alt=\"\"/\u003e\u003c/p\u003e\n\u003cp\u003e图1：一个深度神经网络的结构，它包含标签$Y$、输入层$X$、隐藏层$h_1、…、h_m$和预测值$\\hat{Y}$。\u003c/p\u003e\n\u003cp\u003e如果我们将DNN的隐藏层标记为$h_1,h_2，…，h_m$，如图1所示，我们可以将每一层看作是一个马尔科夫链的状态:$h_i \\to h_{i+1}$。根据DPI，我们有:\u003c/p\u003e\n\u003cp\u003e$$H(X) \\geq I(X; h_1) \\geq I(X; h_2) \\geq \\dots \\geq I(X; h_m) \\geq I(X; \\hat{Y}) \\\u003cbr/\u003eI(X; Y) \\geq I(h_1; Y) \\geq I(h_2; Y) \\geq \\dots \\geq I(h_m; Y) \\geq I(\\hat{Y}; Y)$$\u003c/p\u003e\n\u003cp\u003eDNN的设计目的是学习如何描述$X$，以便预测$Y$；最终，将$X$压缩成只包含与$Y$相关的信息。Tishby将这一过程描述为“相关信息的逐次细化”。\u003c/p\u003e\n\u003ch3 id=\"信息平面定理\"\u003e\u003ca href=\"#信息平面定理\" class=\"headerlink\" title=\"信息平面定理\"\u003e\u003c/a\u003e信息平面定理\u003c/h3\u003e\u003cp\u003eDNN依次实现了$X$的内部表示，一组隐藏层${T_i}$。根据信息平面定理，通过它的编码器和解码器信息来描述每一层，编码器即对输入数据$X$编码，而解码器则将当前层中的信息转换为目标输出$Y$。\u003c/p\u003e\n\u003cp\u003e准确地说，在一个信息平面图中:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eX轴：样本$T_i$复杂度由编码器互信息$I(X;T_i)$决定，样本复杂度是指你需要多少个样本来达到一定的准确性和泛化。\u003c/li\u003e\n\u003cli\u003eY轴：精度(泛化误差)，由解码器互信息$I(T_i;Y)$决定。\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e\u003cimg src=\"https://public-tuchuang.oss-cn-hangzhou.aliyuncs.com/ib-information-plane_20200409110204.png\" alt=\"\"/\u003e\u003c/p\u003e\n\u003cp\u003e图2：50个DNN隐藏层的编码器和解码器的交互信息。不同层有不同色彩的编码器，绿色是紧挨着输入的一层，橙色是离输入最远的一层。有三个快照，分别是初始阶段、400个阶段和9000个阶段。\u003c/p\u003e\n\u003cp\u003e图2中的每个点表示一个隐含层的编码器或解码器的互信息(不采用正则化;没有权重衰减，没有丢失，等等)。它们按照预期的那样向上移动，因为关于真实标签的知识在增加(准确性在提高)。在早期阶段，隐藏层了解了很多关于输入$X$的信息，但是之后它们开始压缩以忘记输入的一些信息。Tishby认为，“学习的最重要的部分实际上是遗忘”。\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"https://public-tuchuang.oss-cn-hangzhou.aliyuncs.com/ib-information-plane-merged_20200409110242.png\" alt=\"\"/\u003e\u003c/p\u003e\n\u003cp\u003e图3：这是图2的汇总视图。在泛化误差变得非常小之后进行了压缩。\u003c/p\u003e\n\u003ch3 id=\"两个优化阶段\"\u003e\u003ca href=\"#两个优化阶段\" class=\"headerlink\" title=\"两个优化阶段\"\u003e\u003c/a\u003e两个优化阶段\u003c/h3\u003e\u003cp\u003e对各层权重的均值和标准差的及时跟踪还显示了训练过程的两个优化阶段。\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"https://public-tuchuang.oss-cn-hangzhou.aliyuncs.com/ib-mean-variation_20200409110316.png\" alt=\"\"/\u003e\u003c/p\u003e\n\u003cp\u003e图4：各层权重梯度的均值和标准差的范数作为训练函数。不同的层用不同的颜色。\u003c/p\u003e\n\u003cp\u003e在早期阶段中，平均值比标准差大三个量级。 经过足够的时间段后，误差趋于饱和，随后标准差变得更大。离输出越远的层，噪声就越大，这是因为噪声可以通过反向传播过程放大和累积（而不是由于层的宽度）。\u003c/p\u003e\n\u003ch2 id=\"学习理论\"\u003e\u003ca href=\"#学习理论\" class=\"headerlink\" title=\"学习理论\"\u003e\u003c/a\u003e学习理论\u003c/h2\u003e\u003ch3 id=\"“旧的”泛化\"\u003e\u003ca href=\"#“旧的”泛化\" class=\"headerlink\" title=\"“旧的”泛化\"\u003e\u003c/a\u003e“旧的”泛化\u003c/h3\u003e\u003cp\u003e经典学习理论定义的泛化范围为:\u003c/p\u003e\n\u003cp\u003e$$\\epsilon^2 \u0026lt; \\frac{\\log|H_\\epsilon| + \\log{1/\\delta}}{2m}$$\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e$\\epsilon$：训练误差与泛化误差的差值。泛化误差衡量的是一个算法对前所未见的数据的预测有多准确。\u003c/li\u003e\n\u003cli\u003e$H_\\epsilon$: 假设，通常我们假设大小为$\\vert H_\\epsilon \\vert \\sim (1/\\epsilon)^d$.\u003c/li\u003e\n\u003cli\u003e$\\delta$: 信度。\u003c/li\u003e\n\u003cli\u003e$m$: 训练样本的数目。\u003c/li\u003e\n\u003cli\u003e$d$：假设的VC维度。\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e该定义指出，训练误差和泛化误差之间的差异受假设空间大小和数据集大小的限制。假设空间越大，泛化误差就越大。\u003c/p\u003e\n\u003cp\u003e但是，它不适用于深度学习。网络越大，需要学习的参数越多。有了这种泛化界限，较大的网络（较大的$d$）会有更糟的界限。我们直觉上会认为更大的网络能够实现更好的性能和更高的表达能力。这里却是和直觉相反。\u003c/p\u003e\n\u003ch3 id=\"“新的”输入压缩\"\u003e\u003ca href=\"#“新的”输入压缩\" class=\"headerlink\" title=\"“新的”输入压缩\"\u003e\u003c/a\u003e“新的”输入压缩\u003c/h3\u003e\u003cp\u003e为了应对这种违反直觉的观察数据，Tishby等人提出了DNN的新输入压缩范围。\u003c/p\u003e\n\u003cp\u003e首先让我们将$T_\\epsilon$作为输入变量$X$的$\\epsilon$分区。此分区将有关标签同质性的输入压缩为小单元格，所有单元格可以覆盖整个输入空间。如果预测输出二进制值，则可以用$2^{\\vert T_\\epsilon \\vert}$代替假设的基数$\\vert H_\\epsilon \\vert$。\u003c/p\u003e\n\u003cp\u003e$$|H_\\epsilon| \\sim 2^{|X|} \\to 2^{|T_\\epsilon|}$$\u003c/p\u003e\n\u003cp\u003e当$X$比较大时，$X$的大小大约是$2^{H(X)}$。ϵ所在的每个单元格的大小是$2^{H(X \\vert T_\\epsilon)}$。因此，我们有$\\vert T_\\epsilon \\vert \\sim \\frac{2^{H(X)}}{2^{H(X \\vert T_\\epsilon)}} = 2^{I(T_\\epsilon; X)}$。那么，输入压缩范围就成了:\u003c/p\u003e\n\u003cp\u003e$$\\epsilon^2 \u0026lt; \\frac{2^{I(T_\\epsilon; X)} + \\log{1/\\delta}}{2m}$$\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"https://public-tuchuang.oss-cn-hangzhou.aliyuncs.com/ib-bound_20200409110352.png\" alt=\"\"/\u003e\u003c/p\u003e\n\u003cp\u003e图5：黑线是可实现的最佳IB极限。在一个有限的样本集上训练时，红线对应样本外IB失真的上限。ΔC是复杂性的差距和ΔG是泛化的差距。\u003c/p\u003e\n\u003ch2 id=\"网络和训练数据的大小\"\u003e\u003ca href=\"#网络和训练数据的大小\" class=\"headerlink\" title=\"网络和训练数据的大小\"\u003e\u003c/a\u003e网络和训练数据的大小\u003c/h2\u003e\u003ch3 id=\"更多隐藏层的好处\"\u003e\u003ca href=\"#更多隐藏层的好处\" class=\"headerlink\" title=\"更多隐藏层的好处\"\u003e\u003c/a\u003e更多隐藏层的好处\u003c/h3\u003e\u003cp\u003e拥有更多的层会给我们带来计算上的好处，并加快训练过程，以获得更好的泛化效果。\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"https://public-tuchuang.oss-cn-hangzhou.aliyuncs.com/ib-layers_20200409110426.png\" alt=\"\"/\u003e\u003c/p\u003e\n\u003cp\u003e图6：有更多的隐藏层，优化时间更短(阶段更少)。\u003c/p\u003e\n\u003cp\u003e通过随机松弛算法进行压缩:根据扩散方程，k层的松弛时间与该层压缩量$\\Delta S_k$: $\\Delta t_k \\sim \\exp(\\Delta S_k)$的指数成正比。我们可以按照$\\Delta S_k = I(X; T_k) - I(X; T_{k-1})$计算层压缩。因为$\\exp(\\sum_k \\Delta S_k) \\geq \\sum_k \\exp(\\Delta S_k)$，所以我们期望使用更多的隐藏层(更大的$k$)来使训练周期呈指数式减少。\u003c/p\u003e\n\u003ch3 id=\"更多训练样本的好处\"\u003e\u003ca href=\"#更多训练样本的好处\" class=\"headerlink\" title=\"更多训练样本的好处\"\u003e\u003c/a\u003e更多训练样本的好处\u003c/h3\u003e\u003cp\u003e拟合更多的训练数据需要通过隐藏层捕获更多的信息，随着训练数据量的增加，解码器互信息$I(T;Y)$ (还记得吗，这与泛化误差直接相关)被推高，更接近理论IB的边界。Tishby强调，与标准理论不同，决定泛化的是互信息，而不是层的大小或VC维度\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"https://public-tuchuang.oss-cn-hangzhou.aliyuncs.com/ib-training-size_20200409110502.png\" alt=\"\"/\u003e\u003c/p\u003e\n\u003cp\u003e图7：不同大小的训练数据用不同颜色编码。这里绘制了多个聚合网络的信息平面。训练数据越多，泛化效果越好。\u003c/p\u003e\n\u003cp\u003e原文链接：\u003ca href=\"https://lilianweng.github.io/lil-log/2017/09/28/anatomize-deep-learning-with-information-theory.html\" target=\"_blank\" rel=\"noopener\"\u003ehttps://lilianweng.github.io/lil-log/2017/09/28/anatomize-deep-learning-with-information-theory.html\u003c/a\u003e\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e搜索技术问答的公众号：老齐教室\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cblockquote\u003e\n\u003cp\u003e在公众号中回复：\u003cstrong\u003e老齐\u003c/strong\u003e，可查看所有文章、书籍、课程。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp style=\"text-align:right\"\u003e\u003cstrong style=\"max-width: 100%;color: rgb(255, 255, 255);background-color: rgb(234, 6, 13);box-sizing: border-box !important;overflow-wrap: break-word !important;\"\u003e觉得好看，就点赞转发\u003c/strong\u003e\u003c/p\u003e\u003c/section\u003e\n    \u003c!-- Tags START --\u003e\n    \n    \u003c!-- Tags END --\u003e\n    \u003c!-- NAV START --\u003e\n    \n  \u003cdiv class=\"nav-container\"\u003e\n    \u003c!-- reverse left and right to put prev and next in a more logic postition --\u003e\n    \n      \u003ca class=\"nav-left\" href=\"/2020/04/07/ml-feature-enginning/\"\u003e\n        \u003cspan class=\"nav-arrow\"\u003e← \u003c/span\u003e\n        \n          《数据准备和特征工程》勘误与修订\n        \n      \u003c/a\u003e\n    \n    \n      \u003ca class=\"nav-right\" href=\"/2020/04/10/reader-hongxianbin/\"\u003e\n        \n          《数据准备和特征工程》读后感\n        \n        \u003cspan class=\"nav-arrow\"\u003e →\u003c/span\u003e\n      \u003c/a\u003e\n    \n  \u003c/div\u003e\n\n    \u003c!-- NAV END --\u003e\n    \u003c!-- 打赏 START --\u003e\n    \n      \u003cdiv class=\"money-like\"\u003e\n        \u003cdiv class=\"reward-btn\"\u003e\n          赏\n          \u003cspan class=\"money-code\"\u003e\n            \u003cspan class=\"alipay-code\"\u003e\n              \u003cdiv class=\"code-image\"\u003e\u003c/div\u003e\n              \u003cb\u003e使用支付宝打赏\u003c/b\u003e\n            \u003c/span\u003e\n            \u003cspan class=\"wechat-code\"\u003e\n              \u003cdiv class=\"code-image\"\u003e\u003c/div\u003e\n              \u003cb\u003e使用微信打赏\u003c/b\u003e\n            \u003c/span\u003e\n          \u003c/span\u003e\n        \u003c/div\u003e\n        \u003cp class=\"notice\"\u003e若你觉得我的文章对你有帮助，欢迎点击上方按钮对我打赏\u003c/p\u003e\n      \u003c/div\u003e\n    \n    \u003c!-- 打赏 END --\u003e\n    \u003c!-- 二维码 START --\u003e\n    \u003c!--% if (theme.qrcode) { %--\u003e\n      \u003cdiv class=\"qrcode\"\u003e\n        \u003c!--canvas id=\"share-qrcode\"\u003e\u003c/!--canvas--\u003e\n        \u003cimg src=\"https://public-tuchuang.oss-cn-hangzhou.aliyuncs.com/WechatIMG6_20200109154827.jpeg\" width=\"400\"/\u003e\n        \u003cp class=\"notice\"\u003e关注微信公众号，读文章、听课程，提升技能\u003c/p\u003e\n      \u003c/div\u003e\n    \u003c!--% } %--\u003e\n    \u003c!-- 二维码 END --\u003e\n    \n      \u003c!-- No Comment --\u003e\n    \n  \u003c/article\u003e",
  "Date": "2020-04-10T00:00:00Z",
  "Author": "老齐教室"
}