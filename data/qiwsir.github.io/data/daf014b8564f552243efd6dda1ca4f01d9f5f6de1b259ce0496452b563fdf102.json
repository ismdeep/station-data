{
  "Source": "qiwsir.github.io",
  "Title": "利用Pandas和SQLite提升超大数据的读取速度",
  "Link": "https://qiwsir.github.io/2020/03/31/pandas-huge-data/",
  "Content": "\u003carticle class=\"post-article\"\u003e\n    \u003ch2\u003e利用Pandas和SQLite提升超大数据的读取速度\u003c/h2\u003e\n    \u003cp class=\"post-date\"\u003e2020-03-31\u003c/p\u003e\n    \u003csection class=\"markdown-content\"\u003e\u003cp\u003e作者：Itamar Turner-Trauring\u003c/p\u003e\n\u003cp\u003e翻译：老齐\u003c/p\u003e\n\u003cp\u003e与本文相关的图书推荐：《跟老齐学Python：数据分析》\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"https://public-tuchuang.oss-cn-hangzhou.aliyuncs.com/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90_20200209114241.png\" alt=\"\"/\u003e\u003c/p\u003e\n\u003chr/\u003e\n\u003cp\u003e让我们想象，你有一个非常大的数据集，以至于读入内存之后会导致溢出，但是你想将它的一部分用Pandas进行处理，如果你在某个时间点只是想加载这个数据集的一部分，可以使用分块方法。\u003c/p\u003e\n\u003cp\u003e如果把数据集分为若干部分之后，分别加载进来，最终还是会很慢。\u003c/p\u003e\n\u003cp\u003e此时的解决方法，就是创建一个可供搜索的索引，使用SQLite就能轻松解决。\u003c/p\u003e\n\u003ch2 id=\"第一个方法：分块\"\u003e\u003ca href=\"#第一个方法：分块\" class=\"headerlink\" title=\"第一个方法：分块\"\u003e\u003c/a\u003e第一个方法：分块\u003c/h2\u003e\u003cp\u003e来设想一个具体的示例：你要参加某个竞选，为此，你找到了一个CSV文件，里面包含你所在城市每个选民的信息。于是乎你派人去挨门挨户地拜访，邀请特定街道的所有登记选民参与投票。\u003c/p\u003e\n\u003cp\u003e现在，Pandas的DataFrame对象中有索引，但是必须要将数据读入内存，然而CSV文件太大了，内存无法容纳，于是，你想到，可以只载入你关注的记录。\u003c/p\u003e\n\u003cp\u003e这就是第一个方法，进行分块。\u003c/p\u003e\n\u003cfigure class=\"highlight plain\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003eimport pandas as pd\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003edef get_voters_on_street(name): \u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    return pd.concat( \u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e       df[df[\u0026#34;street\u0026#34;] == name] for df in \u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e       pd.read_csv(\u0026#34;voters.csv\u0026#34;, chunksize=1000) \u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    )\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e以分块的方式加载CSV文件，并且按照街道名称进行筛选，然后将得到记录并为一体。\u003c/p\u003e\n\u003cp\u003e虽然逐行加载，但是关注的是比较小的子集，所以需要一些开销。比如，对于只有70k的数据集，在我的计算机上执行上面的函数，需要574ms。2018年纽约市有460万登记选民，挨个街道查找，需要30s。\u003c/p\u003e\n\u003cp\u003e如果我们只做一次，没关系，如果需要反复做，这种方法并不是最佳。\u003c/p\u003e\n\u003ch2 id=\"创建索引对象\"\u003e\u003ca href=\"#创建索引对象\" class=\"headerlink\" title=\"创建索引对象\"\u003e\u003c/a\u003e创建索引对象\u003c/h2\u003e\u003cp\u003e索引就是摘要，有这样一种说法：如果你关心它，就能在这里找到大量数据。在我们的示例中，我们想根据街道名称创建索引，于是就可以快速加载投票者所在的街道了。\u003c/p\u003e\n\u003cp\u003e如果你担心索引数据也会超出内存，那么数据库则能作为保存它们的容器，例如PostgreSQL、MySQL等数据库都能实现。哦，你不喜欢安装和维护那些讨厌的服务，好吧，SQLite应运而生了。\u003c/p\u003e\n\u003cp\u003eSQLite是一个功能齐全的关系型数据库，它能够像其它数据库一样运行，但是不需要服务器。Pyhton默认就支持这种数据库。SQLite将数据保存在独立的文件中，你必须管理一个SQLite数据文件，而不是CSV文件了。\u003c/p\u003e\n\u003ch2 id=\"用SQLite存储数据\"\u003e\u003ca href=\"#用SQLite存储数据\" class=\"headerlink\" title=\"用SQLite存储数据\"\u003e\u003c/a\u003e用SQLite存储数据\u003c/h2\u003e\u003cp\u003e下面演示一下如何用Pandas操作SQLite：\u003c/p\u003e\n\u003ch3 id=\"1-将数据载入SQLite，并创建索引\"\u003e\u003ca href=\"#1-将数据载入SQLite，并创建索引\" class=\"headerlink\" title=\"1. 将数据载入SQLite，并创建索引\"\u003e\u003c/a\u003e1. 将数据载入SQLite，并创建索引\u003c/h3\u003e\u003cp\u003eSQLite数据库能够保存多张数据表，首先将voters.csv文件的数据载入SQLite，并保存为voters.sqlite文件，在这个文件中，我们创建一个名为voters的表。\u003c/p\u003e\n\u003cp\u003e接下来，在SQLite中创建街道的索引。\u003c/p\u003e\n\u003cp\u003e只需如下操作：\u003c/p\u003e\n\u003cfigure class=\"highlight plain\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e8\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e9\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e10\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e11\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e12\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e13\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003eimport sqlite3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e# Create a new database file:\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003edb = sqlite3.connect(\u0026#34;voters.sqlite\u0026#34;)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e# Load the CSV in chunks:\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003efor c in pd.read_csv(\u0026#34;voters.csv\u0026#34;, chunksize=1000):\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    # Append all rows to a new database table, which\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    # we name \u0026#39;voters\u0026#39;:\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    c.to_sql(\u0026#34;voters\u0026#34;, db, if_exists=\u0026#34;append\u0026#34;)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e# Add an index on the \u0026#39;street\u0026#39; column:\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003edb.execute(\u0026#34;CREATE INDEX street ON voters(street)\u0026#34;) \u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003edb.close()\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e虽然我们只创建单个索引，但我们还可以在其他列或多个列上创建其他索引，从而允许我们使用这些列快速搜索数据库。\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"https://public-tuchuang.oss-cn-hangzhou.aliyuncs.com/%E7%89%B9%E5%BE%81%E5%B7%A5%E7%A8%8B2_20200114135935.png\" alt=\"\"/\u003e\u003c/p\u003e\n\u003ch3 id=\"2-重写查询函数\"\u003e\u003ca href=\"#2-重写查询函数\" class=\"headerlink\" title=\"2. 重写查询函数\"\u003e\u003c/a\u003e2. 重写查询函数\u003c/h3\u003e\u003cp\u003e现在，所有数据都已经载入SQLite，我们可以按照街道进行检索了。\u003c/p\u003e\n\u003cfigure class=\"highlight plain\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003edef get_voters_for_street(street_name):\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    conn = sqlite3.connect(\u0026#34;voters.sqlite\u0026#34;)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    q = \u0026#34;SELECT * FROM voters WHERE street = ?\u0026#34;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    values = (street_name,)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    return pd.read_sql_query(q, conn, values)\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e执行上述函数，SQLite只加载与查询匹配的行，并其通过Pandas将它们保存为DataFrame对象。\u003c/p\u003e\n\u003ch2 id=\"50多倍的加速\"\u003e\u003ca href=\"#50多倍的加速\" class=\"headerlink\" title=\"50多倍的加速\"\u003e\u003c/a\u003e50多倍的加速\u003c/h2\u003e\u003cp\u003e那个CSV文件供给70,000行记录，原来花费了574ms，现在只用了10ms。\u003c/p\u003e\n\u003cp\u003e提速50多倍，这是因为，只需要加载我们关心的行，而不是CSV文件中的每一行。\u003c/p\u003e\n\u003cp\u003e原文链接：\u003ca href=\"https://pythonspeed.com/articles/indexing-pandas-sqlite/\" target=\"_blank\" rel=\"noopener\"\u003ehttps://pythonspeed.com/articles/indexing-pandas-sqlite/\u003c/a\u003e\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e搜索技术问答的公众号：老齐教室\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cblockquote\u003e\n\u003cp\u003e在公众号中回复：\u003cstrong\u003e老齐\u003c/strong\u003e，可查看所有文章、书籍、课程。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp style=\"text-align:right\"\u003e\u003cstrong style=\"max-width: 100%;color: rgb(255, 255, 255);background-color: rgb(234, 6, 13);box-sizing: border-box !important;overflow-wrap: break-word !important;\"\u003e觉得好看，就点赞转发\u003c/strong\u003e\u003c/p\u003e\u003c/section\u003e\n    \u003c!-- Tags START --\u003e\n    \n    \u003c!-- Tags END --\u003e\n    \u003c!-- NAV START --\u003e\n    \n  \u003cdiv class=\"nav-container\"\u003e\n    \u003c!-- reverse left and right to put prev and next in a more logic postition --\u003e\n    \n      \u003ca class=\"nav-left\" href=\"/2020/03/30/ml-knn/\"\u003e\n        \u003cspan class=\"nav-arrow\"\u003e← \u003c/span\u003e\n        \n          写给小白：K近邻算法入门\n        \n      \u003c/a\u003e\n    \n    \n      \u003ca class=\"nav-right\" href=\"/2020/04/01/ml-pandas-read-html/\"\u003e\n        \n          用Pandas从HTML网页中读取数据\n        \n        \u003cspan class=\"nav-arrow\"\u003e →\u003c/span\u003e\n      \u003c/a\u003e\n    \n  \u003c/div\u003e\n\n    \u003c!-- NAV END --\u003e\n    \u003c!-- 打赏 START --\u003e\n    \n      \u003cdiv class=\"money-like\"\u003e\n        \u003cdiv class=\"reward-btn\"\u003e\n          赏\n          \u003cspan class=\"money-code\"\u003e\n            \u003cspan class=\"alipay-code\"\u003e\n              \u003cdiv class=\"code-image\"\u003e\u003c/div\u003e\n              \u003cb\u003e使用支付宝打赏\u003c/b\u003e\n            \u003c/span\u003e\n            \u003cspan class=\"wechat-code\"\u003e\n              \u003cdiv class=\"code-image\"\u003e\u003c/div\u003e\n              \u003cb\u003e使用微信打赏\u003c/b\u003e\n            \u003c/span\u003e\n          \u003c/span\u003e\n        \u003c/div\u003e\n        \u003cp class=\"notice\"\u003e若你觉得我的文章对你有帮助，欢迎点击上方按钮对我打赏\u003c/p\u003e\n      \u003c/div\u003e\n    \n    \u003c!-- 打赏 END --\u003e\n    \u003c!-- 二维码 START --\u003e\n    \u003c!--% if (theme.qrcode) { %--\u003e\n      \u003cdiv class=\"qrcode\"\u003e\n        \u003c!--canvas id=\"share-qrcode\"\u003e\u003c/!--canvas--\u003e\n        \u003cimg src=\"https://public-tuchuang.oss-cn-hangzhou.aliyuncs.com/WechatIMG6_20200109154827.jpeg\" width=\"400\"/\u003e\n        \u003cp class=\"notice\"\u003e关注微信公众号，读文章、听课程，提升技能\u003c/p\u003e\n      \u003c/div\u003e\n    \u003c!--% } %--\u003e\n    \u003c!-- 二维码 END --\u003e\n    \n      \u003c!-- No Comment --\u003e\n    \n  \u003c/article\u003e",
  "Date": "2020-03-31T00:00:00Z",
  "Author": "老齐教室"
}