{
  "Source": "qiwsir.github.io",
  "Title": "Pandas和Numpy的视图和拷贝",
  "Link": "https://qiwsir.github.io/2020/06/29/copy-and-view-in-numpy/",
  "Content": "\u003carticle class=\"post-article\"\u003e\n    \u003ch2\u003ePandas和Numpy的视图和拷贝\u003c/h2\u003e\n    \u003cp class=\"post-date\"\u003e2020-06-29\u003c/p\u003e\n    \u003csection class=\"markdown-content\"\u003e\u003cp\u003e编译：老齐\u003c/p\u003e\n\u003cp\u003e与本文相关的图书推荐：\u003cstrong\u003e《跟老齐学Python：数据分析》\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"https://public-tuchuang.oss-cn-hangzhou.aliyuncs.com/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90_20200209114241.png\" alt=\"\"/\u003e\u003c/p\u003e\n\u003cp\u003e本书主要介绍Numpy、Pandas和数据可视化的有关知识，并且用实际案例贯穿于全书始终。本书适合于数据科学、机器学习、人工智能等方向的初学者。\u003c/p\u003e\n\u003chr/\u003e\n\u003cp\u003e在Numpy和Pandas中，有两个重要概念，容易混淆，一个是浅拷贝，也称为视图，另外一个是深拷贝，或者就称为拷贝。如果操作不当，Pandas会爆出\u003ccode\u003eSettingWithCopyWarning\u003c/code\u003e的异常。\u003c/p\u003e\n\u003cp\u003e本文我将就视图和拷贝问题，结合异常进行总结。\u003c/p\u003e\n\u003cp\u003e本文的操作，是基于Python3.7及其以上版本，并且Numpy使用的是1.18版本，Pandas的版本号是1.0，其他在此之上的版本一般都能兼容。\u003c/p\u003e\n\u003cp\u003e至于Pandas和Numpy的安装方法，请参阅《跟老齐学Python：数据分析》一书，书中有详细的说明。\u003c/p\u003e\n\u003ch2 id=\"异常的示例\"\u003e\u003ca href=\"#异常的示例\" class=\"headerlink\" title=\"异常的示例\"\u003e\u003c/a\u003e异常的示例\u003c/h2\u003e\u003cp\u003e首先，来看一看刚才说的Pandas中有可能爆出的\u003ccode\u003eSettingWithCopyWarning\u003c/code\u003e异常。按照下述方式创建DataFrame对象：\u003c/p\u003e\n\u003cfigure class=\"highlight plain\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e8\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e9\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e10\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e11\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e12\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e13\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e14\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; data = {\u0026#34;x\u0026#34;: 2**np.arange(5),\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e...         \u0026#34;y\u0026#34;: 3**np.arange(5),\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e...         \u0026#34;z\u0026#34;: np.array([45, 98, 24, 11, 64])}\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; index = [\u0026#34;a\u0026#34;, \u0026#34;b\u0026#34;, \u0026#34;c\u0026#34;, \u0026#34;d\u0026#34;, \u0026#34;e\u0026#34;]\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; df = pd.DataFrame(data=data, index=index)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; df\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    x   y   z\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003ea   1   1  45\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eb   2   3  98\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003ec   4   9  24\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003ed   8  27  11\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003ee  16  81  64\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003eDataFrame对象就好像一个二维表格一样，如下图所示，最上面一行中的x、y、z是列标签（Column labels），左侧的a/b/c/d/e是行标签（Row labels），中间的就是数据了。\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"https://files.realpython.com/media/fig-01.923689cf9afe.png\" target=\"_blank\" rel=\"noopener\"\u003e\u003cimg src=\"https://files.realpython.com/media/fig-01.923689cf9afe.png\" alt=\"mmst-pandas-vc-01\"/\u003e\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003e通过DataFrame对象的索引，可以很容易地实现各种操作，比如筛选出z列中所有小于50的记录，可以这样操作：\u003c/p\u003e\n\u003cfigure class=\"highlight python\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e8\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e9\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e10\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e11\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e12\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e13\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e14\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e\u0026gt;\u0026gt;\u0026gt; \u003c/span\u003emask = df[\u003cspan class=\"string\"\u003e\u0026#34;z\u0026#34;\u003c/span\u003e] \u0026lt; \u003cspan class=\"number\"\u003e50\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e\u0026gt;\u0026gt;\u0026gt; \u003c/span\u003emask\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003ea     \u003cspan class=\"literal\"\u003eTrue\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eb    \u003cspan class=\"literal\"\u003eFalse\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003ec     \u003cspan class=\"literal\"\u003eTrue\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003ed     \u003cspan class=\"literal\"\u003eTrue\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003ee    \u003cspan class=\"literal\"\u003eFalse\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eName: z, dtype: bool\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e\u0026gt;\u0026gt;\u0026gt; \u003c/span\u003edf[mask]\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e   x   y   z\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003ea  \u003cspan class=\"number\"\u003e1\u003c/span\u003e   \u003cspan class=\"number\"\u003e1\u003c/span\u003e  \u003cspan class=\"number\"\u003e45\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003ec  \u003cspan class=\"number\"\u003e4\u003c/span\u003e   \u003cspan class=\"number\"\u003e9\u003c/span\u003e  \u003cspan class=\"number\"\u003e24\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003ed  \u003cspan class=\"number\"\u003e8\u003c/span\u003e  \u003cspan class=\"number\"\u003e27\u003c/span\u003e  \u003cspan class=\"number\"\u003e11\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e\u003ccode\u003emask\u003c/code\u003e 是一个有布尔值构成的Series对象，然后用它作为\u003ccode\u003edf\u003c/code\u003e的索引，就得到了按照筛选条件返回的记录。本来返回的也是一个DataFrame对象，即\u003ccode\u003edf[mast]\u003c/code\u003e，但是，如果你要对这个对象进行操作，比如试图将所有的\u003ccode\u003ez\u003c/code\u003e列的值修改为0，按照一般的理解就应该是\u003ccode\u003edf[mask][\u0026#34;z\u0026#34;]=0\u003c/code\u003e，如果这样做了，就会爆出异常。\u003c/p\u003e\n\u003cfigure class=\"highlight python\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e8\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e9\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e10\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e11\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e12\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e13\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e14\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e\u0026gt;\u0026gt;\u0026gt; \u003c/span\u003edf[mask][\u003cspan class=\"string\"\u003e\u0026#34;z\u0026#34;\u003c/span\u003e] = \u003cspan class=\"number\"\u003e0\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e__main__:\u003cspan class=\"number\"\u003e1\u003c/span\u003e: SettingWithCopyWarning:\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eA value \u003cspan class=\"keyword\"\u003eis\u003c/span\u003e trying to be set on a copy of a slice \u003cspan class=\"keyword\"\u003efrom\u003c/span\u003e a DataFrame.\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eTry using .loc[row_indexer,col_indexer] = value instead\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eSee the caveats \u003cspan class=\"keyword\"\u003ein\u003c/span\u003e the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html\u003cspan class=\"comment\"\u003e#returning-a-view-versus-a-copy\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e\u0026gt;\u0026gt;\u0026gt; \u003c/span\u003edf\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    x   y   z\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003ea   \u003cspan class=\"number\"\u003e1\u003c/span\u003e   \u003cspan class=\"number\"\u003e1\u003c/span\u003e  \u003cspan class=\"number\"\u003e45\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eb   \u003cspan class=\"number\"\u003e2\u003c/span\u003e   \u003cspan class=\"number\"\u003e3\u003c/span\u003e  \u003cspan class=\"number\"\u003e98\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003ec   \u003cspan class=\"number\"\u003e4\u003c/span\u003e   \u003cspan class=\"number\"\u003e9\u003c/span\u003e  \u003cspan class=\"number\"\u003e24\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003ed   \u003cspan class=\"number\"\u003e8\u003c/span\u003e  \u003cspan class=\"number\"\u003e27\u003c/span\u003e  \u003cspan class=\"number\"\u003e11\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003ee  \u003cspan class=\"number\"\u003e16\u003c/span\u003e  \u003cspan class=\"number\"\u003e81\u003c/span\u003e  \u003cspan class=\"number\"\u003e64\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e代码的执行结果显示，操作失败，没有能够将筛选出来的记录中的\u003ccode\u003ez\u003c/code\u003e列数值修改为0。这是为什么？\u003c/p\u003e\n\u003cp\u003e还是用图示的方式展现一下上面的操作——虽然失败了，目的是与后面的操作进行对比：\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"https://files.realpython.com/media/fig-02.494ca4d6f8c3.png\" target=\"_blank\" rel=\"noopener\"\u003e\u003cimg src=\"https://files.realpython.com/media/fig-02.494ca4d6f8c3.png\" alt=\"mmst-pandas-vc-02\"/\u003e\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003e其实，一般情况下，你不用这么做，只需要按照下面的方式做就能够达到目的了：\u003c/p\u003e\n\u003cfigure class=\"highlight plain\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e8\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e9\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e10\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; df = pd.DataFrame(data=data, index=index)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; df.loc[mask, \u0026#34;z\u0026#34;] = 0\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; df\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    x   y   z\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003ea   1   1   0\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eb   2   3  98\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003ec   4   9   0\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003ed   8  27   0\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003ee  16  81  64\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e还有别的方式，也能实现：\u003c/p\u003e\n\u003cfigure class=\"highlight plain\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e8\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e9\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e10\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e11\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e12\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e13\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e14\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e15\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e16\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e17\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e18\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; df = pd.DataFrame(data=data, index=index)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; df[\u0026#34;z\u0026#34;]\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003ea    45\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eb    98\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003ec    24\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003ed    11\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003ee    64\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eName: z, dtype: int64\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; df[\u0026#34;z\u0026#34;][mask] = 0\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; df\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    x   y   z\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003ea   1   1   0\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eb   2   3  98\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003ec   4   9   0\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003ed   8  27   0\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003ee  16  81  64\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e是不是感觉有点奇怪了。还是看看上面的操作流程：\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"https://files.realpython.com/media/fig-03.8a314d168d47.png\" target=\"_blank\" rel=\"noopener\"\u003e\u003cimg src=\"https://files.realpython.com/media/fig-03.8a314d168d47.png\" alt=\"mmst-pandas-vc-03\"/\u003e\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003e这张图和前面的图对比一下，似乎也只是下标的顺序不同罢了。是不是感觉有点复杂？还有呢，继续看：\u003c/p\u003e\n\u003cfigure class=\"highlight plain\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e8\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e9\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e10\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e11\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e12\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e13\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e14\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e15\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; df = pd.DataFrame(data=data, index=index)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; df.loc[mask][\u0026#34;z\u0026#34;] = 0\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e__main__:1: SettingWithCopyWarning:\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eA value is trying to be set on a copy of a slice from a DataFrame.\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eTry using .loc[row_indexer,col_indexer] = value instead\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; df\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    x   y   z\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003ea   1   1  45\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eb   2   3  98\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003ec   4   9  24\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003ed   8  27  11\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003ee  16  81  64\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e前面使用\u003ccode\u003e.loc[]\u003c/code\u003e没有问题，这里就又报异常了。\u003c/p\u003e\n\u003cp\u003e先简单总结一下，为了避免上面的问题，一定要：\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e避免使用链式下表表达式，比如\u003ccode\u003edf[\u0026#34;z\u0026#34;][mask] = 0\u003c/code\u003e，不管是不是会报异常，都要避免，因为把握不好就容易出问题。\u003c/li\u003e\n\u003cli\u003e使用单个的下表，比如\u003ccode\u003edf.loc[mask, \u0026#39;z\u0026#39;] = 0\u003c/code\u003e，这样不仅意义明确，而且简单可行。\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e当然，对于上面问题的理解，就涉及到下面要说的视图（浅拷贝）和拷贝（深拷贝）问题了。\u003c/p\u003e\n\u003ch2 id=\"视图和拷贝\"\u003e\u003ca href=\"#视图和拷贝\" class=\"headerlink\" title=\"视图和拷贝\"\u003e\u003c/a\u003e视图和拷贝\u003c/h2\u003e\u003cp\u003e理解Numpy和Pandas中的视图和拷贝，是非常有必要的。因为我们有时候需要从内存中的数据中拷贝一份，有时候则需要把数据的一部分连同原数据集同时保存。\u003c/p\u003e\n\u003ch3 id=\"Numpy中的视图和拷贝\"\u003e\u003ca href=\"#Numpy中的视图和拷贝\" class=\"headerlink\" title=\"Numpy中的视图和拷贝\"\u003e\u003c/a\u003eNumpy中的视图和拷贝\u003c/h3\u003e\u003cp\u003e创建一个Numpy数组：\u003c/p\u003e\n\u003cfigure class=\"highlight plain\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; arr = np.array([1, 2, 4, 8, 16, 32])\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; arr\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003earray([ 1,  2,  4,  8, 16, 32])\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e用\u003ccode\u003earr\u003c/code\u003e再创建一个数组，但是这里采切片和以列表作为索引两种方法创建，比如：\u003c/p\u003e\n\u003cfigure class=\"highlight plain\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; arr[1:4:2]\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003earray([2, 8])\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; arr[[1, 3]]\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003earray([2, 8]))\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e如果你还不了解数组的索引，也不用担心，可以参考《跟老齐学Python：数据分析》，书里有非常详细的讲解。\u003c/p\u003e\n\u003cp\u003e然而，用上面两种方法所得到的数组，还是有差别的。\u003c/p\u003e\n\u003cfigure class=\"highlight plain\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e8\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; arr[1:4:2].base\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003earray([ 1,  2,  4,  8, 16, 32])\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; arr[1:4:2].flags.owndata\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eFalse\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; arr[[1, 3]].base\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; arr[[1, 3]].flags.owndata\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eTrue\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e上面的操作显示，\u003ccode\u003earr[1:4:2]\u003c/code\u003e实现的是浅拷贝，或者得到的是原数组的视图，而\u003ccode\u003earr[[1, 3]]\u003c/code\u003e则是深拷贝（即常说的拷贝）。这就两种操作的差异。\u003c/p\u003e\n\u003cp\u003eNumpy中的浅拷贝或者视图，意思是它本身并没有数据，看起来像它的哪些数据，其实是原始数组中的数据，或者说，与原始数据共享内存（也称为共享视图）。如果更直观地，用数组的\u003ccode\u003e.view()\u003c/code\u003e可以创建数组的视图：\u003c/p\u003e\n\u003cfigure class=\"highlight plain\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e8\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e9\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; view_of_arr = arr.view()\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; view_of_arr\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003earray([ 1,  2,  4,  8, 16, 32])\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; view_of_arr.base\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003earray([ 1,  2,  4,  8, 16, 32])\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; view_of_arr.base is arr\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eTrue\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e\u003ccode\u003eview_of_arr\u003c/code\u003e引用的数组就是原始数组\u003ccode\u003earr\u003c/code\u003e的一个视图，或者浅拷贝，\u003ccode\u003eview_of_arr\u003c/code\u003e的属性\u003ccode\u003e.base\u003c/code\u003e就是指原始数组\u003ccode\u003earr\u003c/code\u003e，或者说，\u003ccode\u003eview_of_arr\u003c/code\u003e没有自己的数据，它的数据都是\u003ccode\u003earr\u003c/code\u003e的。你可以通过属性\u003ccode\u003e.flags\u003c/code\u003e来验证：\u003c/p\u003e\n\u003cfigure class=\"highlight plain\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; view_of_arr.flags.owndata\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eFalse\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e如你所见，\u003ccode\u003eview_of_arr.flags.owndata\u003c/code\u003e返回了\u003ccode\u003eFalse\u003c/code\u003e，这意味着它没有自己的数据，它使用的是\u003ccode\u003e.base\u003c/code\u003e返回的对象的数据。\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"https://files.realpython.com/media/fig-04.8f5b35e398f4.png\" target=\"_blank\" rel=\"noopener\"\u003e\u003cimg src=\"https://files.realpython.com/media/fig-04.8f5b35e398f4.png\" alt=\"mmst-pandas-vc-04\"/\u003e\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003e上图所说明的就是\u003ccode\u003earr\u003c/code\u003e和\u003ccode\u003eview_of_arr\u003c/code\u003e指向了同样的数据对象。\u003c/p\u003e\n\u003cp\u003eNumpy数组的深拷贝，简称拷贝，就是要单独再创建一个拥有自己数据的数组。相对于原数组，经过深拷贝之后所得到的数组，虽然数据内容来自原数组，但它相对于原数组是独立的。我们可以使用\u003ccode\u003e.copy()\u003c/code\u003e方法来演示这种深拷贝：\u003c/p\u003e\n\u003cfigure class=\"highlight plain\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e8\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e9\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; copy_of_arr = arr.copy()\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; copy_of_arr\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003earray([ 1,  2,  4,  8, 16, 32])\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; copy_of_arr.base is None\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eTrue\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; copy_of_arr.flags.owndata\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eTrue\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e如你所见，\u003ccode\u003ecopy_of_arr\u003c/code\u003e没有\u003ccode\u003e.base\u003c/code\u003e属性，如果判断其该熟悉的的布尔值，跟\u003ccode\u003eNone\u003c/code\u003e一样。而属性\u003ccode\u003e.flags.owndata\u003c/code\u003e的返回值是\u003ccode\u003eTrue\u003c/code\u003e。\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"https://files.realpython.com/media/fig-05.b2935843218e.png\" target=\"_blank\" rel=\"noopener\"\u003e\u003cimg src=\"https://files.realpython.com/media/fig-05.b2935843218e.png\" alt=\"mmst-pandas-vc-05\"/\u003e\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003e图中显示，两个数组各有一套数据。\u003c/p\u003e\n\u003cp\u003e那么，视图和拷贝有什么区别呢？其实，前面的演示你已经看出来了。\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e视图没有自己的单独存储的数据，但是拷贝有\u003c/li\u003e\n\u003cli\u003e如果修改原始数组，会影响视图，但是不影响拷贝\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e数组的属性\u003ccode\u003e.nbytes\u003c/code\u003e能返回该数组的字节数，下面就用它比较\u003ccode\u003earr, view_of_arr, copy_of_arr\u003c/code\u003e三个数组。\u003c/p\u003e\n\u003cfigure class=\"highlight plain\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; arr.nbytes\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e48\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; view_of_arr.nbytes\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e48\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; copy_of_arr.nbytes\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e48\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e目前，它们具有相同的字节：48字节。注意，看起来好像每个数组应该是8字节（64比特），其实不然，是48字节。\u003c/p\u003e\n\u003cp\u003e然而，如果使用\u003ccode\u003esys.getsizeof()\u003c/code\u003e函数，则能够直接得到每个数组所占用的内存空间大小，这就能看出它们的区别了：\u003c/p\u003e\n\u003cfigure class=\"highlight plain\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e8\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; from sys import getsizeof\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; getsizeof(arr)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e144\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; getsizeof(view_of_arr)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e96\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; getsizeof(copy_of_arr)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e144\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e\u003ccode\u003earr\u003c/code\u003e and \u003ccode\u003ecopy_of_arr\u003c/code\u003e hold 144 bytes each. As you’ve seen previously, 48 bytes out of the 144 total are for the data  elements. The remaining 96 bytes are for other attributes. \u003ccode\u003eview_of_arr\u003c/code\u003e holds only those 96 bytes because it doesn’t have its own data elements.\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003earr\u003c/code\u003e和\u003ccode\u003ecopy_of_arr\u003c/code\u003e占用了144字节，注意，其中的48字节用于保存数据元素，而\u003ccode\u003eview_of_arr\u003c/code\u003e只占用了96字节，因为它自己没有数据元素，所以就少了48字节。\u003c/p\u003e\n\u003cp\u003e此外，原数组修改，对视图和拷贝的数组影响各异，请看下面操作：\u003c/p\u003e\n\u003cfigure class=\"highlight plain\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e8\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e9\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; arr[1] = 64\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; arr\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003earray([ 1,  64,   4,   8,  16,  32])\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; view_of_arr\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003earray([ 1,  64,   4,   8,  16,  32])\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; copy_of_arr\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003earray([ 1,  2,  4,  8, 16, 32])\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e视图中的元素修改了，但是拷贝的数组中并未修改。上面代码可以用下图演示：\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"https://files.realpython.com/media/fig-06.568dfcf1521d.png\" target=\"_blank\" rel=\"noopener\"\u003e\u003cimg src=\"https://files.realpython.com/media/fig-06.568dfcf1521d.png\" alt=\"mmst-pandas-vc-06\"/\u003e\u003c/a\u003e\u003c/p\u003e\n\u003ch3 id=\"Pandas中的视图和拷贝\"\u003e\u003ca href=\"#Pandas中的视图和拷贝\" class=\"headerlink\" title=\"Pandas中的视图和拷贝\"\u003e\u003c/a\u003ePandas中的视图和拷贝\u003c/h3\u003e\u003cp\u003ePandas中也有视图和拷贝，用DataFrame对象的\u003ccode\u003e.copy()\u003c/code\u003e方法，可以分别创建视图和拷贝，区别在于参数的配置，如果\u003ccode\u003edeep=False\u003c/code\u003e，则为视图，如果\u003ccode\u003edeep=True\u003c/code\u003e则为拷贝，并且这种设置是默认值。\u003c/p\u003e\n\u003cfigure class=\"highlight plain\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e8\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e9\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e10\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e11\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e12\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e13\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e14\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e15\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e16\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e17\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e18\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e19\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e20\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e21\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e22\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e23\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e24\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e25\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e26\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; df = pd.DataFrame(data=data, index=index)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; df\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    x   y   z\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003ea   1   1  45\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eb   2   3  98\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003ec   4   9  24\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003ed   8  27  11\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003ee  16  81  64\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; view_of_df = df.copy(deep=False)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; view_of_df\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    x   y   z\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003ea   1   1  45\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eb   2   3  98\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003ec   4   9  24\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003ed   8  27  11\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003ee  16  81  64\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; copy_of_df = df.copy()\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; copy_of_df\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    x   y   z\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003ea   1   1  45\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eb   2   3  98\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003ec   4   9  24\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003ed   8  27  11\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003ee  16  81  64\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e视图和拷贝，看起来是一样的，如果把它们分别转化为Numpy的数组，就会发现差别了：\u003c/p\u003e\n\u003cfigure class=\"highlight plain\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; view_of_df.to_numpy().base is df.to_numpy().base\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eTrue\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; copy_of_df.to_numpy().base is df.to_numpy().base\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eFalse\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e\u003ccode\u003e.to_numpy()\u003c/code\u003e返回一个数组，\u003ccode\u003edf\u003c/code\u003e和\u003ccode\u003eview_of_df\u003c/code\u003e的\u003ccode\u003e.base\u003c/code\u003e属性值相同，它们共享相同的数据。例如：\u003c/p\u003e\n\u003cfigure class=\"highlight plain\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e8\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e9\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e10\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e11\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e12\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e13\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e14\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e15\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e16\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e17\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e18\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e19\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e20\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e21\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e22\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e23\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e24\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; df[\u0026#34;z\u0026#34;] = 0\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; df\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    x   y  z\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003ea   1   1  0\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eb   2   3  0\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003ec   4   9  0\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003ed   8  27  0\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003ee  16  81  0\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; view_of_df\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    x   y  z\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003ea   1   1  0\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eb   2   3  0\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003ec   4   9  0\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003ed   8  27  0\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003ee  16  81  0\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; copy_of_df\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    x   y   z\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003ea   1   1  45\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eb   2   3  98\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003ec   4   9  24\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003ed   8  27  11\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003ee  16  81  64\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e将\u003ccode\u003edf\u003c/code\u003e的\u003ccode\u003ez\u003c/code\u003e列数组设置为0，\u003ccode\u003eview_of_df\u003c/code\u003e也跟着变化，但是\u003ccode\u003ecopy_of_df\u003c/code\u003e中的元素没有修改。\u003c/p\u003e\n\u003cp\u003e此外，行标签和列标签也都如此：\u003c/p\u003e\n\u003cfigure class=\"highlight python\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e8\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e9\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e\u0026gt;\u0026gt;\u0026gt; \u003c/span\u003eview_of_df.index \u003cspan class=\"keyword\"\u003eis\u003c/span\u003e df.index\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"literal\"\u003eTrue\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e\u0026gt;\u0026gt;\u0026gt; \u003c/span\u003eview_of_df.columns \u003cspan class=\"keyword\"\u003eis\u003c/span\u003e df.columns\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"literal\"\u003eTrue\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e\u0026gt;\u0026gt;\u0026gt; \u003c/span\u003ecopy_of_df.index \u003cspan class=\"keyword\"\u003eis\u003c/span\u003e df.index\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"literal\"\u003eFalse\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e\u0026gt;\u0026gt;\u0026gt; \u003c/span\u003ecopy_of_df.columns \u003cspan class=\"keyword\"\u003eis\u003c/span\u003e df.columns\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"literal\"\u003eFalse\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003ch2 id=\"索引和切片\"\u003e\u003ca href=\"#索引和切片\" class=\"headerlink\" title=\"索引和切片\"\u003e\u003c/a\u003e索引和切片\u003c/h2\u003e\u003cp\u003eNumpy中的一维数组的切片方法，与Python中的列表、元组的操作一样。但是，对Numpy数组进行切片，得到的是一个视图：\u003c/p\u003e\n\u003cfigure class=\"highlight plain\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e8\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e9\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e10\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e11\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e12\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e13\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e14\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e15\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e16\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e17\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e18\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e19\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e20\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e21\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; arr = np.array([1, 2, 4, 8, 16, 32])\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; a = arr[1:3]\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; a\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003earray([2, 4])\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; a.base\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003earray([ 1,  2,  4,  8, 16, 32])\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; a.base is arr\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eTrue\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; a.flags.owndata\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eFalse\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; b = arr[1:4:2]\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; b\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003earray([2, 8])\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; b.base\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003earray([ 1,  2,  4,  8, 16, 32])\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; b.base is arr\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eTrue\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; b.flags.owndata\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eFalse\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e\u003ccode\u003earr\u003c/code\u003e是原始数组，\u003ccode\u003ea\u003c/code\u003e和\u003ccode\u003eb\u003c/code\u003e是通过切片操作得到的数组，这两个数组与与\u003ccode\u003earr\u003c/code\u003e共享同样的数据，它们没有自己的独立数据，如下图所示：\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"https://files.realpython.com/media/fig-07.e944c8736991.png\" target=\"_blank\" rel=\"noopener\"\u003e\u003cimg src=\"https://files.realpython.com/media/fig-07.e944c8736991.png\" alt=\"mmst-pandas-vc-07\"/\u003e\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003e当你有一个很大的原始数组，但只需要其中的一小部分时，你可以在切片后调用’ .copy() ‘，并用’ del ‘语句删除指向原始数组的变量。通过这种方式，您保留了副本，并从内存中删除了原始数组。\u003c/p\u003e\n\u003cp\u003e注意：如果原始数组很大，但是你只需要其中的一小部分时，可以先用切片得到一个小数组，然后它的\u003ccode\u003e.copy()\u003c/code\u003e，并用\u003ccode\u003edel\u003c/code\u003e删除引用原始数组的变量。通过这种方式，您保留了副本，并从内存中删除了原始数组，可以尽可能节省内存。\u003c/p\u003e\n\u003cp\u003e切片返回的是视图，但是，索引则不同了。下面演示，使用列表作为索引，得到了原始数组的拷贝。\u003c/p\u003e\n\u003cfigure class=\"highlight plain\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; c = arr[[1, 3]]\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; c\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003earray([2, 8])\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; c.base is None\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eTrue\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; c.flags.owndata\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eTrue\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e数组\u003ccode\u003ec\u003c/code\u003e中包含了原始数组中索引是\u003ccode\u003e1\u003c/code\u003e和\u003ccode\u003e3\u003c/code\u003e的两个元素，并且它是原始数组的一个拷贝。\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"https://files.realpython.com/media/fig-08.c2a65031a90d.png\" target=\"_blank\" rel=\"noopener\"\u003e\u003cimg src=\"https://files.realpython.com/media/fig-08.c2a65031a90d.png\" alt=\"mmst-pandas-vc-08\"/\u003e\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003e拷贝之后，\u003ccode\u003ec\u003c/code\u003e和\u003ccode\u003earr\u003c/code\u003e是两个相互独立的数组。下面的例子中，列表中是布尔值，还是以这个列表为下标，获得\u003ccode\u003eTrue\u003c/code\u003e所对应的索引的值。所返回的值，还是原数组的拷贝。\u003c/p\u003e\n\u003cfigure class=\"highlight plain\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e8\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; mask = [False, True, False, True, False, False]\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; d = arr[mask]\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; d\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003earray([2, 8])\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; d.base is None\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eTrue\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; d.flags.owndata\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eTrue\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e以上代码，可以用下图演示：\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"https://files.realpython.com/media/fig-09.75e65f7fc3c6.png\" target=\"_blank\" rel=\"noopener\"\u003e\u003cimg src=\"https://files.realpython.com/media/fig-09.75e65f7fc3c6.png\" alt=\"mmst-pandas-vc-09\"/\u003e\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003e除了可以用列表作为下标，也可以使用Numpy的数组，但是不能用元组。\u003c/p\u003e\n\u003cfigure class=\"highlight plain\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e8\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e9\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e10\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e# `arr` 是原始数组:\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003earr = np.array([1, 2, 4, 8, 16, 32])\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e# 切片获得了`a` 和 `b`视图：\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003ea = arr[1:3]\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eb = arr[1:4:2]\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e# 以列表为下标得到了`c` and `d`拷贝：\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003ec = arr[[1, 3]]\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003ed = arr[[False, True, False, True, False, False]]\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e跟前面对视图和拷贝的说明一样，视图都会受到原始数组变化的影响，拷贝不会：\u003c/p\u003e\n\u003cfigure class=\"highlight plain\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e8\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e9\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e10\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e11\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; arr[1] = 64\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; arr\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003earray([  1, 64,   4,   8,  16,  32])\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; a\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003earray([64,   4])\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; b\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003earray([64,   8])\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; c\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003earray([2, 8])\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; d\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003earray([2, 8])\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e如果用链式操作，比如下面的，注意比较视图和拷贝的不同结果：\u003c/p\u003e\n\u003cfigure class=\"highlight plain\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e8\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e9\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; arr = np.array([1, 2, 4, 8, 16, 32])\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; arr[1:4:2][0] = 64\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; arr\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003earray([ 1, 64,  4,  8, 16, 32])\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; arr = np.array([1, 2, 4, 8, 16, 32])\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; arr[[1, 3]][0] = 64\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; arr\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003earray([ 1,  2,  4,  8, 16, 32])\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003eThis example illustrates the difference between copies and views when using chained indexing in NumPy.\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003earr[1:4:2]\u003c/code\u003e返回了视图，它引用了\u003ccode\u003earr\u003c/code\u003e中的数据元素\u003ccode\u003e2\u003c/code\u003e和\u003ccode\u003e8\u003c/code\u003e，语句\u003ccode\u003earr[1:4:2][0] = 64\u003c/code\u003e的意思是要将索引为1的元素的值设置为64，这个操作对\u003ccode\u003earr\u003c/code\u003e和视图都会产生作用。\u003c/p\u003e\n\u003cp\u003e而\u003ccode\u003earr[[1, 3]]\u003c/code\u003e返回了拷贝，其中也包括\u003ccode\u003e2\u003c/code\u003e和\u003ccode\u003e8\u003c/code\u003e两个元素，但是，它们已经不是\u003ccode\u003earr\u003c/code\u003e中的元素了，而是两个新的。\u003ccode\u003earr[[1, 3]][0] = 64\u003c/code\u003e就不会影响\u003ccode\u003earr\u003c/code\u003e了。\u003c/p\u003e\n\u003cp\u003e以上以一维数组为例，说明了切片和通过索引（下标）返回的不同类型对象，前者是试图，后者是拷贝。那么，如果是多维数组会如何？与一维的情况一样。\u003c/p\u003e\n\u003cfigure class=\"highlight plain\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e8\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e9\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e10\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e11\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e12\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e13\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e14\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e15\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e16\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e17\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e18\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e19\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e20\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e21\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e22\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e23\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e24\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e25\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e26\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e27\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e28\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e29\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e30\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e31\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e32\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e33\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e34\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e35\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e36\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e37\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e38\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e39\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e40\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e41\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e42\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e43\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e44\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e45\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e46\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e47\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e48\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e49\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e50\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e51\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e52\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e53\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; arr = np.array([[  1,   2,    4,    8],\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e...                 [ 16,  32,   64,  128],\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e...                 [256, 512, 1024, 2048]])\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; arr\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003earray([[   1,    2,    4,    8],\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e       [  16,   32,   64,  128],\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e       [ 256,  512, 1024, 2048]])\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; a = arr[:, 1:3]  # Take columns 1 and 2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; a\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003earray([[   2,    4],\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e       [  32,   64],\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e       [ 512, 1024]])\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; a.base\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003earray([[   1,    2,    4,    8],\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e       [  16,   32,   64,  128],\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e       [ 256,  512, 1024, 2048]])\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; a.base is arr\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eTrue\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; b = arr[:, 1:4:2]  # Take columns 1 and 3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; b\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003earray([[   2,    8],\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e       [  32,  128],\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e       [ 512, 2048]])\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; b.base\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003earray([[   1,    2,    4,    8],\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e       [  16,   32,   64,  128],\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e       [ 256,  512, 1024, 2048]])\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; b.base is arr\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eTrue\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; c = arr[:, [1, 3]]  # Take columns 1 and 3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; c\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003earray([[   2,    8],\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e       [  32,  128],\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e       [ 512, 2048]])\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; c.base\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003earray([[   2,   32,  512],\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e       [   8,  128, 2048]])\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; c.base is arr\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eFalse\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; d = arr[:, [False, True, False, True]]  # Take columns 1 and 3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; d\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003earray([[   2,    8],\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e       [  32,  128],\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e       [ 512, 2048]])\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; d.base\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003earray([[   2,   32,  512],\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e       [   8,  128, 2048]])\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; d.base is arr\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eFalse\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003ePandas中的拷贝和视图与Numpy类似。但是，要注意Pandas中的这样一种操作符： \u003ccode\u003e.loc[]\u003c/code\u003e, \u003ccode\u003e.iloc[]\u003c/code\u003e, \u003ccode\u003e.at[]\u003c/code\u003e, and \u003ccode\u003e.iat\u003c/code\u003e\u003c/p\u003e\n\u003cp\u003e还是列举几个示例，从中看看Pandas的拷贝和视图。\u003c/p\u003e\n\u003cfigure class=\"highlight plain\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e8\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e9\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e10\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e11\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e12\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e13\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e14\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e15\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; df = pd.DataFrame(data=data, index=index)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; df[\u0026#34;a\u0026#34;:\u0026#34;c\u0026#34;]\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e   x  y   z\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003ea  1  1  45\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eb  2  3  98\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003ec  4  9  24\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; df[\u0026#34;a\u0026#34;:\u0026#34;c\u0026#34;].to_numpy().base\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003earray([[ 1,  2,  4,  8, 16],\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e       [ 1,  3,  9, 27, 81],\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e       [45, 98, 24, 11, 64]])\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; df[\u0026#34;a\u0026#34;:\u0026#34;c\u0026#34;].to_numpy().base is df.to_numpy().base\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eTrue\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cfigure class=\"highlight plain\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e8\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e9\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e10\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e11\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e12\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e13\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e14\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e15\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e16\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; df = pd.DataFrame(data=data, index=index)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; df[[\u0026#34;x\u0026#34;, \u0026#34;y\u0026#34;]]\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    x   y\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003ea   1   1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eb   2   3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003ec   4   9\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003ed   8  27\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003ee  16  81\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; df[[\u0026#34;x\u0026#34;, \u0026#34;y\u0026#34;]].to_numpy().base\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003earray([[ 1,  2,  4,  8, 16],\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e       [ 1,  3,  9, 27, 81]])\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; df[[\u0026#34;x\u0026#34;, \u0026#34;y\u0026#34;]].to_numpy().base is df.to_numpy().base\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eFalse\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003ch2 id=\"拷贝和视图的应用\"\u003e\u003ca href=\"#拷贝和视图的应用\" class=\"headerlink\" title=\"拷贝和视图的应用\"\u003e\u003c/a\u003e拷贝和视图的应用\u003c/h2\u003e\u003cp\u003e在前面我们已经看到，Pandas有时候会抛出\u003ccode\u003eSettingWithCopyWarning\u003c/code\u003e异常。下面我们就看看如何避免这种现象。\u003c/p\u003e\n\u003cp\u003e还是用前面的例子：\u003c/p\u003e\n\u003cfigure class=\"highlight python\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e8\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e9\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e10\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e11\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e12\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e13\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e14\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e15\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e16\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e17\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e18\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e19\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e20\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e21\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e22\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e23\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e24\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e\u0026gt;\u0026gt;\u0026gt; \u003c/span\u003edf = pd.DataFrame(data=data, index=index)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e\u0026gt;\u0026gt;\u0026gt; \u003c/span\u003emask = df[\u003cspan class=\"string\"\u003e\u0026#34;z\u0026#34;\u003c/span\u003e] \u0026lt; \u003cspan class=\"number\"\u003e50\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e\u0026gt;\u0026gt;\u0026gt; \u003c/span\u003emask\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003ea     \u003cspan class=\"literal\"\u003eTrue\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eb    \u003cspan class=\"literal\"\u003eFalse\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003ec     \u003cspan class=\"literal\"\u003eTrue\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003ed     \u003cspan class=\"literal\"\u003eTrue\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003ee    \u003cspan class=\"literal\"\u003eFalse\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eName: z, dtype: bool\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e\u0026gt;\u0026gt;\u0026gt; \u003c/span\u003edf[mask][\u003cspan class=\"string\"\u003e\u0026#34;z\u0026#34;\u003c/span\u003e] = \u003cspan class=\"number\"\u003e0\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e__main__:\u003cspan class=\"number\"\u003e1\u003c/span\u003e: SettingWithCopyWarning:\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eA value \u003cspan class=\"keyword\"\u003eis\u003c/span\u003e trying to be set on a copy of a slice \u003cspan class=\"keyword\"\u003efrom\u003c/span\u003e a DataFrame.\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eTry using .loc[row_indexer,col_indexer] = value instead\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eSee the caveats \u003cspan class=\"keyword\"\u003ein\u003c/span\u003e the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html\u003cspan class=\"comment\"\u003e#returning-a-view-versus-a-copy\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e\u0026gt;\u0026gt;\u0026gt; \u003c/span\u003edf\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    x   y   z\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003ea   \u003cspan class=\"number\"\u003e1\u003c/span\u003e   \u003cspan class=\"number\"\u003e1\u003c/span\u003e  \u003cspan class=\"number\"\u003e45\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eb   \u003cspan class=\"number\"\u003e2\u003c/span\u003e   \u003cspan class=\"number\"\u003e3\u003c/span\u003e  \u003cspan class=\"number\"\u003e98\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003ec   \u003cspan class=\"number\"\u003e4\u003c/span\u003e   \u003cspan class=\"number\"\u003e9\u003c/span\u003e  \u003cspan class=\"number\"\u003e24\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003ed   \u003cspan class=\"number\"\u003e8\u003c/span\u003e  \u003cspan class=\"number\"\u003e27\u003c/span\u003e  \u003cspan class=\"number\"\u003e11\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003ee  \u003cspan class=\"number\"\u003e16\u003c/span\u003e  \u003cspan class=\"number\"\u003e81\u003c/span\u003e  \u003cspan class=\"number\"\u003e64\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e之所以报异常，是因为\u003ccode\u003edf[mask]\u003c/code\u003e返回的是一个拷贝，更准确地说，赋值操作是针对拷贝对象而言的，对原对象\u003ccode\u003edf\u003c/code\u003e没有影响。从异常信息中，可以看到修改提示。但是，你不要认为这样就行：\u003c/p\u003e\n\u003cfigure class=\"highlight plain\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e8\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e9\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e10\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e11\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e12\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e13\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e14\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; df = pd.DataFrame(data=data, index=index)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; df.loc[mask][\u0026#34;z\u0026#34;] = 0\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e__main__:1: SettingWithCopyWarning:\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eA value is trying to be set on a copy of a slice from a DataFrame.\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eTry using .loc[row_indexer,col_indexer] = value instead\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; df\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    x   y   z\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003ea   1   1  45\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eb   2   3  98\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003ec   4   9  24\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003ed   8  27  11\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003ee  16  81  64\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e因为\u003ccode\u003edf.loc[mask]\u003c/code\u003e返回的还是一个拷贝，跟前面的意思一样。\u003c/p\u003e\n\u003cp\u003e如果这样做，就能成功：\u003c/p\u003e\n\u003cfigure class=\"highlight plain\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e8\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; df[\u0026#34;z\u0026#34;][mask] = 0\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; df\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    x   y   z\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003ea   1   1   0\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eb   2   3  98\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003ec   4   9   0\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003ed   8  27   0\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003ee  16  81  64\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e有的时候Pandas可能不会针对拷贝报错，比如：\u003c/p\u003e\n\u003cfigure class=\"highlight plain\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e8\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e9\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; df = pd.DataFrame(data=data, index=index)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; df.loc[[\u0026#34;a\u0026#34;, \u0026#34;c\u0026#34;, \u0026#34;e\u0026#34;]][\u0026#34;z\u0026#34;] = 0  # 这么写也不能实现修改，但不抛出异常\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; df\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    x   y   z\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003ea   1   1  45\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eb   2   3  98\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003ec   4   9  24\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003ed   8  27  11\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003ee  16  81  64\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e另外，下面的操作是成立的，也会抛出异常：\u003c/p\u003e\n\u003cfigure class=\"highlight plain\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e8\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e9\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e10\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e11\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e12\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e13\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e14\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e15\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e16\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e17\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e18\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e19\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e20\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e21\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e22\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e23\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e24\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e25\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e26\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e27\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e28\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e29\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e30\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; df = pd.DataFrame(data=data, index=index)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; df[:3][\u0026#34;z\u0026#34;] = 0  # 操作成功，但是有异常抛出\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e__main__:1: SettingWithCopyWarning:\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eA value is trying to be set on a copy of a slice from a DataFrame.\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eTry using .loc[row_indexer,col_indexer] = value instead\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; df\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    x   y   z\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003ea   1   1   0\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eb   2   3   0\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003ec   4   9   0\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003ed   8  27  11\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003ee  16  81  64\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; df = pd.DataFrame(data=data, index=index)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; df.loc[\u0026#34;a\u0026#34;:\u0026#34;c\u0026#34;][\u0026#34;z\u0026#34;] = 0  # 操作成功，但是有异常抛出\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e__main__:1: SettingWithCopyWarning:\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eA value is trying to be set on a copy of a slice from a DataFrame.\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eTry using .loc[row_indexer,col_indexer] = value instead\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; df\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    x   y   z\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003ea   1   1   0\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eb   2   3   0\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003ec   4   9   0\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003ed   8  27  11\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003ee  16  81  64\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e通常，对于上述示例中的操作意图，使用\u003ccode\u003e.loc\u003c/code\u003e实现，并且是按照下面的方式:\u003c/p\u003e\n\u003cfigure class=\"highlight plain\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e8\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e9\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; df = pd.DataFrame(data=data, index=index)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; df.loc[mask, \u0026#34;z\u0026#34;] = 0\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; df\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    x   y   z\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003ea   1   1   0\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eb   2   3  98\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003ec   4   9   0\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003ed   8  27   0\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003ee  16  81  64\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e避免用链式索引，这种方法最有效了。\u003c/p\u003e\n\u003ch2 id=\"更改默认提示\"\u003e\u003ca href=\"#更改默认提示\" class=\"headerlink\" title=\"更改默认提示\"\u003e\u003c/a\u003e更改默认提示\u003c/h2\u003e\u003cp\u003e严格来说，\u003ccode\u003eSettingWithCopyWarning\u003c/code\u003e只是提示或者警告，不是错误，你的代码并不会因为它而中断，如果你看着它不爽，可以修改，利用下面的配置方法：\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003cstrong\u003e\u003ccode\u003epd.set_option(\u0026#34;mode.chained_assignment\u0026#34;, \u0026#34;raise\u0026#34;)\u003c/code\u003e\u003c/strong\u003e 抛出 \u003ccode\u003eSettingWithCopyException\u003c/code\u003e.\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003e\u003ccode\u003epd.set_option(\u0026#34;mode.chained_assignment\u0026#34;, \u0026#34;warn\u0026#34;)\u003c/code\u003e\u003c/strong\u003e 抛出 \u003ccode\u003eSettingWithCopyWarning\u003c/code\u003e. 这是默认设置\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003e\u003ccode\u003epd.set_option(\u0026#34;mode.chained_assignment\u0026#34;, None)\u003c/code\u003e\u003c/strong\u003e 包括警告和错误信息。\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e例如，用下面的方式，就可以将\u003ccode\u003eSettingWithCopyWarning\u003c/code\u003e替换为\u003ccode\u003eSettingWithCopyException\u003c/code\u003e。\u003c/p\u003e\n\u003cfigure class=\"highlight plain\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e8\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e9\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e10\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; df = pd.DataFrame(\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e...     data={(\u0026#34;powers\u0026#34;, \u0026#34;x\u0026#34;): 2**np.arange(5),\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e...           (\u0026#34;powers\u0026#34;, \u0026#34;y\u0026#34;): 3**np.arange(5),\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e...           (\u0026#34;random\u0026#34;, \u0026#34;z\u0026#34;): np.array([45, 98, 24, 11, 64], dtype=float)},\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e...     index=[\u0026#34;a\u0026#34;, \u0026#34;b\u0026#34;, \u0026#34;c\u0026#34;, \u0026#34;d\u0026#34;, \u0026#34;e\u0026#34;]\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e... )\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; pd.set_option(\u0026#34;mode.chained_assignment\u0026#34;, \u0026#34;raise\u0026#34;)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; df[\u0026#34;powers\u0026#34;][\u0026#34;x\u0026#34;] = 0\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e另外，你可以使用\u003ccode\u003eget_option()\u003c/code\u003e函数查看当前的警告等级。\u003c/p\u003e\n\u003cfigure class=\"highlight plain\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; pd.get_option(\u0026#34;mode.chained_assignment\u0026#34;)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026#39;raise\u0026#39;\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003ch2 id=\"结论\"\u003e\u003ca href=\"#结论\" class=\"headerlink\" title=\"结论\"\u003e\u003c/a\u003e结论\u003c/h2\u003e\u003cp\u003e本文讨论了Numpy和Pandas中的视图和拷贝，并且了解了\u003ccode\u003eSettingWithCopyWarning\u003c/code\u003e异常的有关问题。\u003c/p\u003e\n\u003cp\u003e参考文献：\u003ca href=\"https://realpython.com/pandas-settingwithcopywarning/\" target=\"_blank\" rel=\"noopener\"\u003ehttps://realpython.com/pandas-settingwithcopywarning/\u003c/a\u003e\u003c/p\u003e\n\u003c/section\u003e\n    \u003c!-- Tags START --\u003e\n    \n    \u003c!-- Tags END --\u003e\n    \u003c!-- NAV START --\u003e\n    \n  \u003cdiv class=\"nav-container\"\u003e\n    \u003c!-- reverse left and right to put prev and next in a more logic postition --\u003e\n    \n      \u003ca class=\"nav-left\" href=\"/2020/06/24/stock-analysis/\"\u003e\n        \u003cspan class=\"nav-arrow\"\u003e← \u003c/span\u003e\n        \n          一个简单的股票数据分析及可视化库\n        \n      \u003c/a\u003e\n    \n    \n      \u003ca class=\"nav-right\" href=\"/2020/07/07/self-learning-path/\"\u003e\n        \n          AI工程师的自学之路\n        \n        \u003cspan class=\"nav-arrow\"\u003e →\u003c/span\u003e\n      \u003c/a\u003e\n    \n  \u003c/div\u003e\n\n    \u003c!-- NAV END --\u003e\n    \u003c!-- 打赏 START --\u003e\n    \n      \u003cdiv class=\"money-like\"\u003e\n        \u003cdiv class=\"reward-btn\"\u003e\n          赏\n          \u003cspan class=\"money-code\"\u003e\n            \u003cspan class=\"alipay-code\"\u003e\n              \u003cdiv class=\"code-image\"\u003e\u003c/div\u003e\n              \u003cb\u003e使用支付宝打赏\u003c/b\u003e\n            \u003c/span\u003e\n            \u003cspan class=\"wechat-code\"\u003e\n              \u003cdiv class=\"code-image\"\u003e\u003c/div\u003e\n              \u003cb\u003e使用微信打赏\u003c/b\u003e\n            \u003c/span\u003e\n          \u003c/span\u003e\n        \u003c/div\u003e\n        \u003cp class=\"notice\"\u003e若你觉得我的文章对你有帮助，欢迎点击上方按钮对我打赏\u003c/p\u003e\n      \u003c/div\u003e\n    \n    \u003c!-- 打赏 END --\u003e\n    \u003c!-- 二维码 START --\u003e\n    \u003c!--% if (theme.qrcode) { %--\u003e\n      \u003cdiv class=\"qrcode\"\u003e\n        \u003c!--canvas id=\"share-qrcode\"\u003e\u003c/!--canvas--\u003e\n        \u003cimg src=\"https://public-tuchuang.oss-cn-hangzhou.aliyuncs.com/WechatIMG6_20200109154827.jpeg\" width=\"400\"/\u003e\n        \u003cp class=\"notice\"\u003e关注微信公众号，读文章、听课程，提升技能\u003c/p\u003e\n      \u003c/div\u003e\n    \u003c!--% } %--\u003e\n    \u003c!-- 二维码 END --\u003e\n    \n      \u003c!-- No Comment --\u003e\n    \n  \u003c/article\u003e",
  "Date": "2020-06-29T00:00:00Z",
  "Author": "老齐教室"
}