{
  "Source": "qiwsir.github.io",
  "Title": "通过内置对象理解 Python（二）",
  "Link": "https://qiwsir.github.io/2021/11/03/python-builtins-second/",
  "Content": "\u003carticle class=\"post-article\"\u003e\n    \u003ch2\u003e通过内置对象理解 Python（二）\u003c/h2\u003e\n    \u003cp class=\"post-date\"\u003e2021-11-03\u003c/p\u003e\n    \u003csection class=\"markdown-content\"\u003e\u003ch2 id=\"所有的内置函数\"\u003e\u003ca href=\"#所有的内置函数\" class=\"headerlink\" title=\"所有的内置函数\"\u003e\u003c/a\u003e所有的内置函数\u003c/h2\u003e\u003cp\u003e用 \u003ccode\u003edir()\u003c/code\u003e 函数可以查看所有内置函数：\u003c/p\u003e\n\u003cfigure class=\"highlight python\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e8\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e9\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e10\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e11\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e12\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e13\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e14\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e15\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e16\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e17\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e18\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e19\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e20\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e21\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e22\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e23\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e24\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e25\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e26\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e27\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e28\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e29\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e30\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e31\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e32\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e\u0026gt;\u0026gt;\u0026gt; \u003c/span\u003eprint(dir(__builtins__))\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e[\u003cspan class=\"string\"\u003e\u0026#39;ArithmeticError\u0026#39;\u003c/span\u003e, \u003cspan class=\"string\"\u003e\u0026#39;AssertionError\u0026#39;\u003c/span\u003e, \u003cspan class=\"string\"\u003e\u0026#39;AttributeError\u0026#39;\u003c/span\u003e, \u003cspan class=\"string\"\u003e\u0026#39;BaseException\u0026#39;\u003c/span\u003e,\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e \u003cspan class=\"string\"\u003e\u0026#39;BlockingIOError\u0026#39;\u003c/span\u003e, \u003cspan class=\"string\"\u003e\u0026#39;BrokenPipeError\u0026#39;\u003c/span\u003e, \u003cspan class=\"string\"\u003e\u0026#39;BufferError\u0026#39;\u003c/span\u003e, \u003cspan class=\"string\"\u003e\u0026#39;BytesWarning\u0026#39;\u003c/span\u003e,\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e \u003cspan class=\"string\"\u003e\u0026#39;ChildProcessError\u0026#39;\u003c/span\u003e, \u003cspan class=\"string\"\u003e\u0026#39;ConnectionAbortedError\u0026#39;\u003c/span\u003e, \u003cspan class=\"string\"\u003e\u0026#39;ConnectionError\u0026#39;\u003c/span\u003e,\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e \u003cspan class=\"string\"\u003e\u0026#39;ConnectionRefusedError\u0026#39;\u003c/span\u003e, \u003cspan class=\"string\"\u003e\u0026#39;ConnectionResetError\u0026#39;\u003c/span\u003e, \u003cspan class=\"string\"\u003e\u0026#39;DeprecationWarning\u0026#39;\u003c/span\u003e,\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e \u003cspan class=\"string\"\u003e\u0026#39;EOFError\u0026#39;\u003c/span\u003e, \u003cspan class=\"string\"\u003e\u0026#39;Ellipsis\u0026#39;\u003c/span\u003e, \u003cspan class=\"string\"\u003e\u0026#39;EnvironmentError\u0026#39;\u003c/span\u003e, \u003cspan class=\"string\"\u003e\u0026#39;Exception\u0026#39;\u003c/span\u003e, \u003cspan class=\"string\"\u003e\u0026#39;False\u0026#39;\u003c/span\u003e,\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e \u003cspan class=\"string\"\u003e\u0026#39;FileExistsError\u0026#39;\u003c/span\u003e, \u003cspan class=\"string\"\u003e\u0026#39;FileNotFoundError\u0026#39;\u003c/span\u003e, \u003cspan class=\"string\"\u003e\u0026#39;FloatingPointError\u0026#39;\u003c/span\u003e,\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e \u003cspan class=\"string\"\u003e\u0026#39;FutureWarning\u0026#39;\u003c/span\u003e, \u003cspan class=\"string\"\u003e\u0026#39;GeneratorExit\u0026#39;\u003c/span\u003e, \u003cspan class=\"string\"\u003e\u0026#39;IOError\u0026#39;\u003c/span\u003e, \u003cspan class=\"string\"\u003e\u0026#39;ImportError\u0026#39;\u003c/span\u003e,\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e \u003cspan class=\"string\"\u003e\u0026#39;ImportWarning\u0026#39;\u003c/span\u003e, \u003cspan class=\"string\"\u003e\u0026#39;IndentationError\u0026#39;\u003c/span\u003e, \u003cspan class=\"string\"\u003e\u0026#39;IndexError\u0026#39;\u003c/span\u003e, \u003cspan class=\"string\"\u003e\u0026#39;InterruptedError\u0026#39;\u003c/span\u003e,\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e \u003cspan class=\"string\"\u003e\u0026#39;IsADirectoryError\u0026#39;\u003c/span\u003e, \u003cspan class=\"string\"\u003e\u0026#39;KeyError\u0026#39;\u003c/span\u003e, \u003cspan class=\"string\"\u003e\u0026#39;KeyboardInterrupt\u0026#39;\u003c/span\u003e, \u003cspan class=\"string\"\u003e\u0026#39;LookupError\u0026#39;\u003c/span\u003e,\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e \u003cspan class=\"string\"\u003e\u0026#39;MemoryError\u0026#39;\u003c/span\u003e, \u003cspan class=\"string\"\u003e\u0026#39;ModuleNotFoundError\u0026#39;\u003c/span\u003e, \u003cspan class=\"string\"\u003e\u0026#39;NameError\u0026#39;\u003c/span\u003e, \u003cspan class=\"string\"\u003e\u0026#39;None\u0026#39;\u003c/span\u003e,\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e \u003cspan class=\"string\"\u003e\u0026#39;NotADirectoryError\u0026#39;\u003c/span\u003e, \u003cspan class=\"string\"\u003e\u0026#39;NotImplemented\u0026#39;\u003c/span\u003e, \u003cspan class=\"string\"\u003e\u0026#39;NotImplementedError\u0026#39;\u003c/span\u003e,\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e \u003cspan class=\"string\"\u003e\u0026#39;OSError\u0026#39;\u003c/span\u003e, \u003cspan class=\"string\"\u003e\u0026#39;OverflowError\u0026#39;\u003c/span\u003e, \u003cspan class=\"string\"\u003e\u0026#39;PendingDeprecationWarning\u0026#39;\u003c/span\u003e,\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e \u003cspan class=\"string\"\u003e\u0026#39;PermissionError\u0026#39;\u003c/span\u003e, \u003cspan class=\"string\"\u003e\u0026#39;ProcessLookupError\u0026#39;\u003c/span\u003e, \u003cspan class=\"string\"\u003e\u0026#39;RecursionError\u0026#39;\u003c/span\u003e,\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e \u003cspan class=\"string\"\u003e\u0026#39;ReferenceError\u0026#39;\u003c/span\u003e, \u003cspan class=\"string\"\u003e\u0026#39;ResourceWarning\u0026#39;\u003c/span\u003e, \u003cspan class=\"string\"\u003e\u0026#39;RuntimeError\u0026#39;\u003c/span\u003e, \u003cspan class=\"string\"\u003e\u0026#39;RuntimeWarning\u0026#39;\u003c/span\u003e,\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e \u003cspan class=\"string\"\u003e\u0026#39;StopAsyncIteration\u0026#39;\u003c/span\u003e, \u003cspan class=\"string\"\u003e\u0026#39;StopIteration\u0026#39;\u003c/span\u003e, \u003cspan class=\"string\"\u003e\u0026#39;SyntaxError\u0026#39;\u003c/span\u003e, \u003cspan class=\"string\"\u003e\u0026#39;SyntaxWarning\u0026#39;\u003c/span\u003e,\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e \u003cspan class=\"string\"\u003e\u0026#39;SystemError\u0026#39;\u003c/span\u003e, \u003cspan class=\"string\"\u003e\u0026#39;SystemExit\u0026#39;\u003c/span\u003e, \u003cspan class=\"string\"\u003e\u0026#39;TabError\u0026#39;\u003c/span\u003e, \u003cspan class=\"string\"\u003e\u0026#39;TimeoutError\u0026#39;\u003c/span\u003e, \u003cspan class=\"string\"\u003e\u0026#39;True\u0026#39;\u003c/span\u003e,\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e \u003cspan class=\"string\"\u003e\u0026#39;TypeError\u0026#39;\u003c/span\u003e, \u003cspan class=\"string\"\u003e\u0026#39;UnboundLocalError\u0026#39;\u003c/span\u003e, \u003cspan class=\"string\"\u003e\u0026#39;UnicodeDecodeError\u0026#39;\u003c/span\u003e,\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e \u003cspan class=\"string\"\u003e\u0026#39;UnicodeEncodeError\u0026#39;\u003c/span\u003e, \u003cspan class=\"string\"\u003e\u0026#39;UnicodeError\u0026#39;\u003c/span\u003e, \u003cspan class=\"string\"\u003e\u0026#39;UnicodeTranslateError\u0026#39;\u003c/span\u003e,\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e \u003cspan class=\"string\"\u003e\u0026#39;UnicodeWarning\u0026#39;\u003c/span\u003e, \u003cspan class=\"string\"\u003e\u0026#39;UserWarning\u0026#39;\u003c/span\u003e, \u003cspan class=\"string\"\u003e\u0026#39;ValueError\u0026#39;\u003c/span\u003e, \u003cspan class=\"string\"\u003e\u0026#39;Warning\u0026#39;\u003c/span\u003e,\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e \u003cspan class=\"string\"\u003e\u0026#39;ZeroDivisionError\u0026#39;\u003c/span\u003e, \u003cspan class=\"string\"\u003e\u0026#39;__build_class__\u0026#39;\u003c/span\u003e, \u003cspan class=\"string\"\u003e\u0026#39;__debug__\u0026#39;\u003c/span\u003e, \u003cspan class=\"string\"\u003e\u0026#39;__doc__\u0026#39;\u003c/span\u003e,\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e \u003cspan class=\"string\"\u003e\u0026#39;__import__\u0026#39;\u003c/span\u003e, \u003cspan class=\"string\"\u003e\u0026#39;__loader__\u0026#39;\u003c/span\u003e, \u003cspan class=\"string\"\u003e\u0026#39;__name__\u0026#39;\u003c/span\u003e, \u003cspan class=\"string\"\u003e\u0026#39;__package__\u0026#39;\u003c/span\u003e, \u003cspan class=\"string\"\u003e\u0026#39;__spec__\u0026#39;\u003c/span\u003e,\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e \u003cspan class=\"string\"\u003e\u0026#39;abs\u0026#39;\u003c/span\u003e, \u003cspan class=\"string\"\u003e\u0026#39;all\u0026#39;\u003c/span\u003e, \u003cspan class=\"string\"\u003e\u0026#39;any\u0026#39;\u003c/span\u003e, \u003cspan class=\"string\"\u003e\u0026#39;ascii\u0026#39;\u003c/span\u003e, \u003cspan class=\"string\"\u003e\u0026#39;bin\u0026#39;\u003c/span\u003e, \u003cspan class=\"string\"\u003e\u0026#39;bool\u0026#39;\u003c/span\u003e, \u003cspan class=\"string\"\u003e\u0026#39;breakpoint\u0026#39;\u003c/span\u003e, \u003cspan class=\"string\"\u003e\u0026#39;bytearray\u0026#39;\u003c/span\u003e,\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e \u003cspan class=\"string\"\u003e\u0026#39;bytes\u0026#39;\u003c/span\u003e, \u003cspan class=\"string\"\u003e\u0026#39;callable\u0026#39;\u003c/span\u003e, \u003cspan class=\"string\"\u003e\u0026#39;chr\u0026#39;\u003c/span\u003e, \u003cspan class=\"string\"\u003e\u0026#39;classmethod\u0026#39;\u003c/span\u003e, \u003cspan class=\"string\"\u003e\u0026#39;compile\u0026#39;\u003c/span\u003e, \u003cspan class=\"string\"\u003e\u0026#39;complex\u0026#39;\u003c/span\u003e,\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e \u003cspan class=\"string\"\u003e\u0026#39;copyright\u0026#39;\u003c/span\u003e, \u003cspan class=\"string\"\u003e\u0026#39;credits\u0026#39;\u003c/span\u003e, \u003cspan class=\"string\"\u003e\u0026#39;delattr\u0026#39;\u003c/span\u003e, \u003cspan class=\"string\"\u003e\u0026#39;dict\u0026#39;\u003c/span\u003e, \u003cspan class=\"string\"\u003e\u0026#39;dir\u0026#39;\u003c/span\u003e, \u003cspan class=\"string\"\u003e\u0026#39;divmod\u0026#39;\u003c/span\u003e, \u003cspan class=\"string\"\u003e\u0026#39;enumerate\u0026#39;\u003c/span\u003e,\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e \u003cspan class=\"string\"\u003e\u0026#39;eval\u0026#39;\u003c/span\u003e, \u003cspan class=\"string\"\u003e\u0026#39;exec\u0026#39;\u003c/span\u003e, \u003cspan class=\"string\"\u003e\u0026#39;exit\u0026#39;\u003c/span\u003e, \u003cspan class=\"string\"\u003e\u0026#39;filter\u0026#39;\u003c/span\u003e, \u003cspan class=\"string\"\u003e\u0026#39;float\u0026#39;\u003c/span\u003e, \u003cspan class=\"string\"\u003e\u0026#39;format\u0026#39;\u003c/span\u003e, \u003cspan class=\"string\"\u003e\u0026#39;frozenset\u0026#39;\u003c/span\u003e,\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e \u003cspan class=\"string\"\u003e\u0026#39;getattr\u0026#39;\u003c/span\u003e, \u003cspan class=\"string\"\u003e\u0026#39;globals\u0026#39;\u003c/span\u003e, \u003cspan class=\"string\"\u003e\u0026#39;hasattr\u0026#39;\u003c/span\u003e, \u003cspan class=\"string\"\u003e\u0026#39;hash\u0026#39;\u003c/span\u003e, \u003cspan class=\"string\"\u003e\u0026#39;help\u0026#39;\u003c/span\u003e, \u003cspan class=\"string\"\u003e\u0026#39;hex\u0026#39;\u003c/span\u003e, \u003cspan class=\"string\"\u003e\u0026#39;id\u0026#39;\u003c/span\u003e, \u003cspan class=\"string\"\u003e\u0026#39;input\u0026#39;\u003c/span\u003e,\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e \u003cspan class=\"string\"\u003e\u0026#39;int\u0026#39;\u003c/span\u003e, \u003cspan class=\"string\"\u003e\u0026#39;isinstance\u0026#39;\u003c/span\u003e, \u003cspan class=\"string\"\u003e\u0026#39;issubclass\u0026#39;\u003c/span\u003e, \u003cspan class=\"string\"\u003e\u0026#39;iter\u0026#39;\u003c/span\u003e, \u003cspan class=\"string\"\u003e\u0026#39;len\u0026#39;\u003c/span\u003e, \u003cspan class=\"string\"\u003e\u0026#39;license\u0026#39;\u003c/span\u003e, \u003cspan class=\"string\"\u003e\u0026#39;list\u0026#39;\u003c/span\u003e,\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e \u003cspan class=\"string\"\u003e\u0026#39;locals\u0026#39;\u003c/span\u003e, \u003cspan class=\"string\"\u003e\u0026#39;map\u0026#39;\u003c/span\u003e, \u003cspan class=\"string\"\u003e\u0026#39;max\u0026#39;\u003c/span\u003e, \u003cspan class=\"string\"\u003e\u0026#39;memoryview\u0026#39;\u003c/span\u003e, \u003cspan class=\"string\"\u003e\u0026#39;min\u0026#39;\u003c/span\u003e, \u003cspan class=\"string\"\u003e\u0026#39;next\u0026#39;\u003c/span\u003e, \u003cspan class=\"string\"\u003e\u0026#39;object\u0026#39;\u003c/span\u003e, \u003cspan class=\"string\"\u003e\u0026#39;oct\u0026#39;\u003c/span\u003e,\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e \u003cspan class=\"string\"\u003e\u0026#39;open\u0026#39;\u003c/span\u003e, \u003cspan class=\"string\"\u003e\u0026#39;ord\u0026#39;\u003c/span\u003e, \u003cspan class=\"string\"\u003e\u0026#39;pow\u0026#39;\u003c/span\u003e, \u003cspan class=\"string\"\u003e\u0026#39;print\u0026#39;\u003c/span\u003e, \u003cspan class=\"string\"\u003e\u0026#39;property\u0026#39;\u003c/span\u003e, \u003cspan class=\"string\"\u003e\u0026#39;quit\u0026#39;\u003c/span\u003e, \u003cspan class=\"string\"\u003e\u0026#39;range\u0026#39;\u003c/span\u003e, \u003cspan class=\"string\"\u003e\u0026#39;repr\u0026#39;\u003c/span\u003e,\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e \u003cspan class=\"string\"\u003e\u0026#39;reversed\u0026#39;\u003c/span\u003e, \u003cspan class=\"string\"\u003e\u0026#39;round\u0026#39;\u003c/span\u003e, \u003cspan class=\"string\"\u003e\u0026#39;set\u0026#39;\u003c/span\u003e, \u003cspan class=\"string\"\u003e\u0026#39;setattr\u0026#39;\u003c/span\u003e, \u003cspan class=\"string\"\u003e\u0026#39;slice\u0026#39;\u003c/span\u003e, \u003cspan class=\"string\"\u003e\u0026#39;sorted\u0026#39;\u003c/span\u003e,\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e \u003cspan class=\"string\"\u003e\u0026#39;staticmethod\u0026#39;\u003c/span\u003e, \u003cspan class=\"string\"\u003e\u0026#39;str\u0026#39;\u003c/span\u003e, \u003cspan class=\"string\"\u003e\u0026#39;sum\u0026#39;\u003c/span\u003e, \u003cspan class=\"string\"\u003e\u0026#39;super\u0026#39;\u003c/span\u003e, \u003cspan class=\"string\"\u003e\u0026#39;tuple\u0026#39;\u003c/span\u003e, \u003cspan class=\"string\"\u003e\u0026#39;type\u0026#39;\u003c/span\u003e, \u003cspan class=\"string\"\u003e\u0026#39;vars\u0026#39;\u003c/span\u003e, \u003cspan class=\"string\"\u003e\u0026#39;zip\u0026#39;\u003c/span\u003e]\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e内容很多，但别担心，我们会把它们分成不同的组，然后逐一解决。  \u003c/p\u003e\n\u003ch2 id=\"异常\"\u003e\u003ca href=\"#异常\" class=\"headerlink\" title=\"异常\"\u003e\u003c/a\u003e异常\u003c/h2\u003e\u003cp\u003ePython 有66个内置的异常类（到目前为止），每个类都用于程序中作为解释和捕获代码中的错误和异常的方法。 \u003c/p\u003e\n\u003cp\u003e为了解释为什么 Python 中有单独的异常类，我们看一个简单的例子:  \u003c/p\u003e\n\u003cfigure class=\"highlight python\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e8\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e9\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e10\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e11\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"function\"\u003e\u003cspan class=\"keyword\"\u003edef\u003c/span\u003e \u003cspan class=\"title\"\u003efetch_from_cache\u003c/span\u003e\u003cspan class=\"params\"\u003e(key)\u003c/span\u003e:\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"string\"\u003e\u0026#34;\u0026#34;\u0026#34;Returns a key\u0026#39;s value from cached items.\u0026#34;\u0026#34;\u0026#34;\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"keyword\"\u003eif\u003c/span\u003e key \u003cspan class=\"keyword\"\u003eis\u003c/span\u003e \u003cspan class=\"literal\"\u003eNone\u003c/span\u003e:\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        \u003cspan class=\"keyword\"\u003eraise\u003c/span\u003e ValueError(\u003cspan class=\"string\"\u003e\u0026#39;key must not be None\u0026#39;\u003c/span\u003e)    \u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        \u003cspan class=\"keyword\"\u003ereturn\u003c/span\u003e cached_items[key]\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"function\"\u003e\u003cspan class=\"keyword\"\u003edef\u003c/span\u003e \u003cspan class=\"title\"\u003eget_value\u003c/span\u003e\u003cspan class=\"params\"\u003e(key)\u003c/span\u003e:\u003c/span\u003e    \u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"keyword\"\u003etry\u003c/span\u003e:        \u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        value = fetch_from_cache(key)    \u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"keyword\"\u003eexcept\u003c/span\u003e KeyError:        \u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        value = fetch_from_api(key)    \u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"keyword\"\u003ereturn\u003c/span\u003e value\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e注意看 \u003ccode\u003eget_value()\u003c/code\u003e 函数，正常情况下，通过 \u003ccode\u003efetch_from_cache()\u003c/code\u003e 函数返回缓存中的值，否则执行 \u003ccode\u003efetch_from_api()\u003c/code\u003e 函数。\u003c/p\u003e\n\u003cp\u003e在这个函数中有三种情况:  \u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003cp\u003e如果 \u003ccode\u003ekey\u003c/code\u003e 不在缓存中，执行 \u003ccode\u003ecached_items[key]\u003c/code\u003e 将引发 \u003ccode\u003eKeyError\u003c/code\u003e 异常。此异常会被 \u003ccode\u003eexcept\u003c/code\u003e 分支捕获，之后执行此分支下的语句。\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e如果 \u003ccode\u003ekey\u003c/code\u003e 存在于缓存中，将返回相应的值。  \u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e还有第三种情况：\u003ccode\u003ekey\u003c/code\u003e 是 \u003ccode\u003eNone\u003c/code\u003e 。在 \u003ccode\u003efetch_from_cache()\u003c/code\u003e 函数中将引发 \u003ccode\u003eValueError\u003c/code\u003e 异常，用以表示此时传给函数的值不合适。因为 \u003ccode\u003etry ... except ...\u003c/code\u003e 只捕获 \u003ccode\u003eKeyError\u003c/code\u003e 异常，\u003ccode\u003eValueError\u003c/code\u003e 异常会直接显示给用户。  \u003c/p\u003e\n\u003cfigure class=\"highlight python\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e\u0026gt;\u0026gt;\u0026gt; \u003c/span\u003ex = \u003cspan class=\"literal\"\u003eNone\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e\u0026gt;\u0026gt;\u0026gt; \u003c/span\u003eget_value(x)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eTraceback (most recent call last):  \u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  File \u003cspan class=\"string\"\u003e\u0026#34;\u0026lt;stdin\u0026gt;\u0026#34;\u003c/span\u003e, line \u003cspan class=\"number\"\u003e1\u003c/span\u003e, \u003cspan class=\"keyword\"\u003ein\u003c/span\u003e \u0026lt;module\u0026gt;  \u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  File \u003cspan class=\"string\"\u003e\u0026#34;\u0026lt;stdin\u0026gt;\u0026#34;\u003c/span\u003e, line \u003cspan class=\"number\"\u003e3\u003c/span\u003e, \u003cspan class=\"keyword\"\u003ein\u003c/span\u003e get_value  \u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  File \u003cspan class=\"string\"\u003e\u0026#34;\u0026lt;stdin\u0026gt;\u0026#34;\u003c/span\u003e, line \u003cspan class=\"number\"\u003e3\u003c/span\u003e, \u003cspan class=\"keyword\"\u003ein\u003c/span\u003e fetch_from_cacheValueError: key must \u003cspan class=\"keyword\"\u003enot\u003c/span\u003e be \u003cspan class=\"literal\"\u003eNone\u003c/span\u003e\u0026gt;\u0026gt;\u0026gt;\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e如果 \u003ccode\u003eValueError\u003c/code\u003e 和 \u003ccode\u003eKeyError\u003c/code\u003e 不是已经定义好的，上面就不能直接使用。\u003c/p\u003e\n\u003cp\u003e在内置作用域中，并非所有以大写字母开始的名称都引用了异常类型对象，还有另一种类型的内置对象的名称首字母是大写的：常量。下面就来研究这些。\u003c/p\u003e\n\u003ch2 id=\"常量\"\u003e\u003ca href=\"#常量\" class=\"headerlink\" title=\"常量\"\u003e\u003c/a\u003e常量\u003c/h2\u003e\u003cp\u003e总共有5个常量：\u003ccode\u003eTrue\u003c/code\u003e 、\u003ccode\u003eFalse\u003c/code\u003e 、\u003ccode\u003eNone\u003c/code\u003e 、\u003ccode\u003eEllipsis\u003c/code\u003e 和 \u003ccode\u003eNotImplemented\u003c/code\u003e 。  \u003c/p\u003e\n\u003cp\u003e\u003ccode\u003eTrue\u003c/code\u003e、\u003ccode\u003eFalse\u003c/code\u003e 和 \u003ccode\u003eNone\u003c/code\u003e 是最明显的常量。 \u003c/p\u003e\n\u003cp\u003e\u003ccode\u003eEllipsis\u003c/code\u003e 是一个有趣的词，它实际上有两种形式：单词 \u003ccode\u003eEllipsis\u003c/code\u003e 和符号 \u003ccode\u003e…\u003c/code\u003e （英文的省略号）。 它的存在主要是为了支持打印注释以及一些其他奇特的切片提供支持。推荐阅读本公众号已经发布的文章\u003ca href=\"https://mp.weixin.qq.com/s/tdXq4f5RBT8GNn7RF4gBmg\" target=\"_blank\" rel=\"noopener\"\u003e《Python 中的省略号》\u003c/a\u003e 。  \u003c/p\u003e\n\u003cp\u003e \u003ccode\u003eNotImplemented\u003c/code\u003e 是一个更有趣的关键词（在我的书中，已经提到过，\u003ccode\u003eTrue\u003c/code\u003e 和 \u003ccode\u003eFalse\u003c/code\u003e 分别是 \u003ccode\u003e1\u003c/code\u003e 和 \u003ccode\u003e0\u003c/code\u003e ——最新即将出版的《Python 完全自学教程》会有更专门的介绍，请参阅：\u003ca href=\"http://www.itdiffer.com/self-learning.html\" target=\"_blank\" rel=\"noopener\"\u003ewww.itdiffer.com/self-learning.html\u003c/a\u003e ）。当你想告诉 Python 解释器某个类没有定义某个操作符时，就是在这个类的操作符定义中使用 \u003ccode\u003eNotImplemented\u003c/code\u003e 。  \u003c/p\u003e\n\u003cp\u003ePython 中的所有对象都可以自定义所有 Python 操作符，比如 \u003ccode\u003e+\u003c/code\u003e 、\u003ccode\u003e-\u003c/code\u003e 、\u003ccode\u003e+=\u003c/code\u003e 等，在我的每本书中都有相应的案例演示定义方法，比如针对 \u003ccode\u003e+\u003c/code\u003e  就要重写特殊方法 \u003ccode\u003e__add__\u003c/code\u003e ，针对 \u003ccode\u003e+=\u003c/code\u003e 重写特殊方法 \u003ccode\u003e__iadd__\u003c/code\u003e 等等。  \u003c/p\u003e\n\u003cp\u003e看一个简单的例子:  \u003c/p\u003e\n\u003cfigure class=\"highlight python\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"class\"\u003e\u003cspan class=\"keyword\"\u003eclass\u003c/span\u003e \u003cspan class=\"title\"\u003eMyNumber\u003c/span\u003e:\u003c/span\u003e    \u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"function\"\u003e\u003cspan class=\"keyword\"\u003edef\u003c/span\u003e \u003cspan class=\"title\"\u003e__add__\u003c/span\u003e\u003cspan class=\"params\"\u003e(self, other)\u003c/span\u003e:\u003c/span\u003e        \u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        \u003cspan class=\"keyword\"\u003ereturn\u003c/span\u003e other + \u003cspan class=\"number\"\u003e28\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e这样就定义了一个对象，当此对象与任何其他数字相加，就相当于其他数字加上 \u003ccode\u003e28\u003c/code\u003e 。\u003c/p\u003e\n\u003cfigure class=\"highlight python\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e\u0026gt;\u0026gt;\u0026gt; \u003c/span\u003enum = MyNumber()\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e\u0026gt;\u0026gt;\u0026gt; \u003c/span\u003enum + \u003cspan class=\"number\"\u003e331\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e\u0026gt;\u0026gt;\u0026gt; \u003c/span\u003enum + \u003cspan class=\"number\"\u003e100128\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e上面的代码示例没有使用 \u003ccode\u003e3 + num\u003c/code\u003e 的形式，因为它行不通:  \u003c/p\u003e\n\u003cfigure class=\"highlight python\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e\u0026gt;\u0026gt;\u0026gt; \u003c/span\u003e\u003cspan class=\"number\"\u003e100\u003c/span\u003e + numTraceback (most recent call last):  \u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eFile \u003cspan class=\"string\"\u003e\u0026#34;\u0026lt;stdin\u0026gt;\u0026#34;\u003c/span\u003e, line \u003cspan class=\"number\"\u003e1\u003c/span\u003e, \u003cspan class=\"keyword\"\u003ein\u003c/span\u003e \u0026lt;module\u0026gt;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eTypeError: unsupported operand type(s) \u003cspan class=\"keyword\"\u003efor\u003c/span\u003e +: \u003cspan class=\"string\"\u003e\u0026#39;int\u0026#39;\u003c/span\u003e \u003cspan class=\"keyword\"\u003eand\u003c/span\u003e \u003cspan class=\"string\"\u003e\u0026#39;MyNumber\u0026#39;\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e但是，通过添加  \u003ccode\u003e__radd__\u003c/code\u003e 操作符，就可以很容易支持 \u003ccode\u003e3 + num\u003c/code\u003e 的形式了，因为该操作符添加了对\u003cstrong\u003e右加\u003c/strong\u003e的支持。\u003c/p\u003e\n\u003cfigure class=\"highlight python\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"class\"\u003e\u003cspan class=\"keyword\"\u003eclass\u003c/span\u003e \u003cspan class=\"title\"\u003eMyNumber\u003c/span\u003e:\u003c/span\u003e    \u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"function\"\u003e\u003cspan class=\"keyword\"\u003edef\u003c/span\u003e \u003cspan class=\"title\"\u003e__add__\u003c/span\u003e\u003cspan class=\"params\"\u003e(self, other)\u003c/span\u003e:\u003c/span\u003e        \u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        \u003cspan class=\"keyword\"\u003ereturn\u003c/span\u003e other + \u003cspan class=\"number\"\u003e28\u003c/span\u003e    \u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"function\"\u003e\u003cspan class=\"keyword\"\u003edef\u003c/span\u003e \u003cspan class=\"title\"\u003e__radd__\u003c/span\u003e\u003cspan class=\"params\"\u003e(self, other)\u003c/span\u003e:\u003c/span\u003e        \u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        \u003cspan class=\"keyword\"\u003ereturn\u003c/span\u003e other + \u003cspan class=\"number\"\u003e28\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e另外，有了 \u003ccode\u003e__radd__\u003c/code\u003e 方法后，这能实现两个 \u003ccode\u003eMyNumber\u003c/code\u003e 类的的实例相加：\u003c/p\u003e\n\u003cfigure class=\"highlight python\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e\u0026gt;\u0026gt;\u0026gt; \u003c/span\u003enum = MyNumber()\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e\u0026gt;\u0026gt;\u0026gt; \u003c/span\u003enum + \u003cspan class=\"number\"\u003e100128\u003c/span\u003e\u0026gt;\u0026gt;\u0026gt; \u003cspan class=\"number\"\u003e3\u003c/span\u003e + num31\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e\u0026gt;\u0026gt;\u0026gt; \u003c/span\u003enum + num56\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e但是假设你只想用这个类支持整数加法，而不支持浮点数加法。此时就要使用 \u003ccode\u003eNotImplemented\u003c/code\u003e ：  \u003c/p\u003e\n\u003cfigure class=\"highlight python\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"class\"\u003e\u003cspan class=\"keyword\"\u003eclass\u003c/span\u003e \u003cspan class=\"title\"\u003eMyNumber\u003c/span\u003e:\u003c/span\u003e    \u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"function\"\u003e\u003cspan class=\"keyword\"\u003edef\u003c/span\u003e \u003cspan class=\"title\"\u003e__add__\u003c/span\u003e\u003cspan class=\"params\"\u003e(self, other)\u003c/span\u003e:\u003c/span\u003e        \u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        \u003cspan class=\"keyword\"\u003eif\u003c/span\u003e isinstance(other, float):            \u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e            \u003cspan class=\"keyword\"\u003ereturn\u003c/span\u003e \u003cspan class=\"built_in\"\u003eNotImplemented\u003c/span\u003e        \u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        \u003cspan class=\"keyword\"\u003ereturn\u003c/span\u003e other + \u003cspan class=\"number\"\u003e42\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e从操作符方法中返回 \u003ccode\u003eNotImplemented\u003c/code\u003e ，就是告诉 Python 解释器当前的操作是不受支持的。然后Python 解释器会将其包装到 \u003ccode\u003eTypeError\u003c/code\u003e 异常中，并带有一个有意义的说明：  \u003c/p\u003e\n\u003cfigure class=\"highlight python\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e\u0026gt;\u0026gt;\u0026gt; \u003c/span\u003en + \u003cspan class=\"number\"\u003e0.12\u003c/span\u003eTraceback (most recent call last):\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  File \u003cspan class=\"string\"\u003e\u0026#34;\u0026lt;stdin\u0026gt;\u0026#34;\u003c/span\u003e, line \u003cspan class=\"number\"\u003e1\u003c/span\u003e, \u003cspan class=\"keyword\"\u003ein\u003c/span\u003e \u0026lt;module\u0026gt;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eTypeError: unsupported operand type(s) \u003cspan class=\"keyword\"\u003efor\u003c/span\u003e +: \u003cspan class=\"string\"\u003e\u0026#39;MyNumber\u0026#39;\u003c/span\u003e \u003cspan class=\"keyword\"\u003eand\u003c/span\u003e \u003cspan class=\"string\"\u003e\u0026#39;float\u0026#39;\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e\u0026gt;\u0026gt;\u0026gt; \u003c/span\u003en + \u003cspan class=\"number\"\u003e1052\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003ePython 的常数还有一个奇怪的事实，它们是直接在 C 语言的代码中实现的，比如\u003ca href=\"https://github.com/python/cpython/blob/7e246a3/Include/object.h#L610\" target=\"_blank\" rel=\"noopener\"\u003e这里\u003c/a\u003e。  \u003c/p\u003e\n\u003ch2 id=\"全局变量\"\u003e\u003ca href=\"#全局变量\" class=\"headerlink\" title=\"全局变量\"\u003e\u003c/a\u003e全局变量\u003c/h2\u003e\u003cp\u003e上面看到的内置对象中，还有另一组看起来很奇怪的名称，如：\u003ccode\u003e__spec__\u003c/code\u003e 、 \u003ccode\u003e__loader__\u003c/code\u003e 、\u003ccode\u003e__debug__\u003c/code\u003e 等。  \u003c/p\u003e\n\u003cp\u003e这些实际上不是 \u003ccode\u003ebuiltins\u003c/code\u003e 模块所特有的。 这些属性存在于 Python 的每个模块的全局作用域中，它们是模块的属性。包含了导入模块的相关信息。\u003c/p\u003e\n\u003ch3 id=\"name\"\u003e\u003ca href=\"#name\" class=\"headerlink\" title=\"__name__\"\u003e\u003c/a\u003e\u003ccode\u003e__name__\u003c/code\u003e\u003c/h3\u003e\u003cp\u003e\u003ccode\u003e__name__\u003c/code\u003e包含了模块的名称。 例如， \u003ccode\u003ebuiltins.__name__\u003c/code\u003e 指的是字符串 \u003ccode\u003ebuiltins\u003c/code\u003e 。运行一个 Python 文件时，文件也是作为一个模块运行的，并且它的模块名是 \u003ccode\u003e__main__\u003c/code\u003e。 这应该解释了在Python文件中使用的 \u003ccode\u003eif __name__ == \u0026#39;__main__\u0026#39;\u003c/code\u003e 是如何起作用的。\u003c/p\u003e\n\u003ch3 id=\"doc\"\u003e\u003ca href=\"#doc\" class=\"headerlink\" title=\"__doc__\"\u003e\u003c/a\u003e\u003ccode\u003e__doc__\u003c/code\u003e\u003c/h3\u003e\u003cp\u003e\u003ccode\u003e__doc__\u003c/code\u003e包含模块的文档字符串。 当执行 \u003ccode\u003ehelp(module_name)\u003c/code\u003e 时，它会显示模块文档内容。  \u003c/p\u003e\n\u003cfigure class=\"highlight python\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e8\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e9\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e\u0026gt;\u0026gt;\u0026gt; \u003c/span\u003e\u003cspan class=\"keyword\"\u003eimport\u003c/span\u003e time\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e\u0026gt;\u0026gt;\u0026gt; \u003c/span\u003eprint(time.__doc__)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eThis module provides various functions to manipulate time values.There are two standard representations of time.  One \u003cspan class=\"keyword\"\u003eis\u003c/span\u003e the number...\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e\u0026gt;\u0026gt;\u0026gt; \u003c/span\u003ehelp(time)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eHelp on built-\u003cspan class=\"keyword\"\u003ein\u003c/span\u003e module time:\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eNAME    \u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003etime - This module provides various functions to manipulate time values.\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eDESCRIPTION    \u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eThere are two standard representations of time.  One \u003cspan class=\"keyword\"\u003eis\u003c/span\u003e the number...\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003ch3 id=\"package\"\u003e\u003ca href=\"#package\" class=\"headerlink\" title=\"__package__\"\u003e\u003c/a\u003e\u003ccode\u003e__package__\u003c/code\u003e\u003c/h3\u003e\u003cp\u003e\u003ccode\u003e__package__\u003c/code\u003e表示该模块所属的包。 对于顶级模块，它与 \u003ccode\u003e__name__\u003c/code\u003e 相同。 对于子模块，它的 \u003ccode\u003e__package__\u003c/code\u003e 值就是包的 \u003ccode\u003e__name__\u003c/code\u003e 值。 例如:  \u003c/p\u003e\n\u003cfigure class=\"highlight python\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e\u0026gt;\u0026gt;\u0026gt; \u003c/span\u003e\u003cspan class=\"keyword\"\u003eimport\u003c/span\u003e urllib.request\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e\u0026gt;\u0026gt;\u0026gt; \u003c/span\u003eurllib.__package__\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"string\"\u003e\u0026#39;urllib\u0026#39;\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e\u0026gt;\u0026gt;\u0026gt; \u003c/span\u003eurllib.request.__name__\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"string\"\u003e\u0026#39;urllib.request\u0026#39;\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e\u0026gt;\u0026gt;\u0026gt; \u003c/span\u003eurllib.request.__package__\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"string\"\u003e\u0026#39;urllib\u0026#39;\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003ch3 id=\"spec\"\u003e\u003ca href=\"#spec\" class=\"headerlink\" title=\"__spec__\"\u003e\u003c/a\u003e\u003ccode\u003e__spec__\u003c/code\u003e\u003c/h3\u003e\u003cp\u003e\u003ccode\u003e__spec__\u003c/code\u003e 属性含有详细的模块信息，即元数据，如模块名称、模块类型，以及它的存储路径等。\u003c/p\u003e\n\u003cfigure class=\"highlight python\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e8\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e9\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e10\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e11\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e12\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e13\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e$ tree mytest\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003emytest\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e└── a\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    └── b.py\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"number\"\u003e1\u003c/span\u003e directory, \u003cspan class=\"number\"\u003e1\u003c/span\u003e file\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e$ python -q\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e\u0026gt;\u0026gt;\u0026gt; \u003c/span\u003e\u003cspan class=\"keyword\"\u003eimport\u003c/span\u003e mytest.a.b\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e\u0026gt;\u0026gt;\u0026gt; \u003c/span\u003emytest.__spec__\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eModuleSpec(name=\u003cspan class=\"string\"\u003e\u0026#39;mytest\u0026#39;\u003c/span\u003e, loader=\u0026lt;_frozen_importlib_external._NamespaceLoader object at \u003cspan class=\"number\"\u003e0x7f28c767e5e0\u003c/span\u003e\u0026gt;, submodule_search_locations=_NamespacePath([\u003cspan class=\"string\"\u003e\u0026#39;/tmp/mytest\u0026#39;\u003c/span\u003e]))\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e\u0026gt;\u0026gt;\u0026gt; \u003c/span\u003emytest.a.b.__spec__\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eModuleSpec(name=\u003cspan class=\"string\"\u003e\u0026#39;mytest.a.b\u0026#39;\u003c/span\u003e, loader=\u0026lt;_frozen_importlib_external.SourceFileLoader object at \u003cspan class=\"number\"\u003e0x7f28c767e430\u003c/span\u003e\u0026gt;, origin=\u003cspan class=\"string\"\u003e\u0026#39;/tmp/mytest/a/b.py\u0026#39;\u003c/span\u003e)\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e可以看出，\u003ccode\u003emytest\u003c/code\u003e 是使用 \u003ccode\u003eNamespaceLoader\u003c/code\u003e 从目录 \u003ccode\u003e/tmp/mytest\u003c/code\u003e 中找到的，而 \u003ccode\u003emytest.a.b\u003c/code\u003e 是使用 \u003ccode\u003eSourceFileLoader\u003c/code\u003e 从源文件 \u003ccode\u003eb.py\u003c/code\u003e 中加载的。\u003c/p\u003e\n\u003ch3 id=\"loader\"\u003e\u003ca href=\"#loader\" class=\"headerlink\" title=\"__loader__\"\u003e\u003c/a\u003e\u003ccode\u003e__loader__\u003c/code\u003e\u003c/h3\u003e\u003cp\u003e在交互模式中看看 \u003ccode\u003e__loader__\u003c/code\u003e 是什么：  \u003c/p\u003e\n\u003cfigure class=\"highlight python\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e\u0026gt;\u0026gt;\u0026gt; \u003c/span\u003e__loader__\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026lt;\u003cspan class=\"class\"\u003e\u003cspan class=\"keyword\"\u003eclass\u003c/span\u003e \u0026#39;\u003cspan class=\"title\"\u003e_frozen_importlib\u003c/span\u003e.\u003cspan class=\"title\"\u003eBuiltinImporter\u003c/span\u003e\u0026#39;\u0026gt;\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e \u003ccode\u003e__loader__\u003c/code\u003e 的作用在于导入模块的时候，被设置为导入对象。这个特定的模块定义在 \u003ccode\u003e_frozen_importlib\u003c/code\u003e 模块中，用于导入内置模块。  \u003c/p\u003e\n\u003cp\u003e更仔细地看一下之前的 \u003ccode\u003emytest.__spec__\u003c/code\u003e 输出结果，会发现模块详情的 \u003ccode\u003eloader\u003c/code\u003e 属性是 \u003ccode\u003eLoader\u003c/code\u003e 类，而这些类是来自稍有差别的 \u003ccode\u003e_frozen_importlib_external\u003c/code\u003e 模块。\u003c/p\u003e\n\u003cp\u003e因此，你可能会问，这些以 \u003ccode\u003e_frozen\u003c/code\u003e 命名模块是什么? 顾名思义——它们是“冻结模块”。  \u003c/p\u003e\n\u003cp\u003e这两个模块的“真正”源代码实际上在 \u003ccode\u003eimportlib.machinery\u003c/code\u003e 模块中。 这些以 \u003ccode\u003e_frozen\u003c/code\u003e 命名的对象是这些加载器源代码的冻结版本。 为了创建冻结模块，Python 代码被编译为代码对象，编组到文件中，然后添加到 Python 可执行文件中。  \u003c/p\u003e\n\u003cp\u003ePython 冻结了这两个模块，因为它们实现了导入系统的核心，因此，当解释器启动时，它们不能像其他 Python 文件一样被导入。 本质上，它们的存在是为了\u003cem\u003e引导导入系统\u003c/em\u003e。  \u003c/p\u003e\n\u003cp\u003e有趣的是，在 Python 中还有另一个定义明确的冻结模块，它是： \u003ccode\u003e__hello__\u003c/code\u003e 。\u003c/p\u003e\n\u003cfigure class=\"highlight python\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e\u0026gt;\u0026gt;\u0026gt; \u003c/span\u003e\u003cspan class=\"keyword\"\u003eimport\u003c/span\u003e __hello__\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eHello world!\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e这是所有语言中最短的 \u003ccode\u003ehello world\u003c/code\u003e 代码吗? 亦或向前辈致敬？  \u003c/p\u003e\n\u003cp\u003e这个 \u003ccode\u003e__hello__\u003c/code\u003e 模块最初被添加到 Python 中，是作为对冻结模块的测试，以查看它们是否正常工作。 从那以后，它一直作为“复活节彩蛋”留在Python语言中。\u003c/p\u003e\n\u003ch3 id=\"import\"\u003e\u003ca href=\"#import\" class=\"headerlink\" title=\"__import__\"\u003e\u003c/a\u003e\u003ccode\u003e__import__\u003c/code\u003e\u003c/h3\u003e\u003cp\u003e\u003ccode\u003e__import__\u003c/code\u003e 是一个内置函数，它定义了 import 语句在 Python 中的工作方式。\u003c/p\u003e\n\u003cfigure class=\"highlight python\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e8\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e\u0026gt;\u0026gt;\u0026gt; \u003c/span\u003e\u003cspan class=\"keyword\"\u003eimport\u003c/span\u003e random\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e\u0026gt;\u0026gt;\u0026gt; \u003c/span\u003erandom\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026lt;module \u003cspan class=\"string\"\u003e\u0026#39;random\u0026#39;\u003c/span\u003e \u003cspan class=\"keyword\"\u003efrom\u003c/span\u003e \u003cspan class=\"string\"\u003e\u0026#39;/usr/lib/python3.9/random.py\u0026#39;\u003c/span\u003e\u0026gt;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e\u0026gt;\u0026gt;\u0026gt; \u003c/span\u003e__import__(\u003cspan class=\"string\"\u003e\u0026#39;random\u0026#39;\u003c/span\u003e)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026lt;module \u003cspan class=\"string\"\u003e\u0026#39;random\u0026#39;\u003c/span\u003e \u003cspan class=\"keyword\"\u003efrom\u003c/span\u003e \u003cspan class=\"string\"\u003e\u0026#39;/usr/lib/python3.9/random.py\u0026#39;\u003c/span\u003e\u0026gt;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e\u0026gt;\u0026gt;\u0026gt; \u003c/span\u003enp = __import__(\u003cspan class=\"string\"\u003e\u0026#39;numpy\u0026#39;\u003c/span\u003e)  \u003cspan class=\"comment\"\u003e# Same as doing \u0026#39;import numpy as np\u0026#39;\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e\u0026gt;\u0026gt;\u0026gt; \u003c/span\u003enp\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026lt;module \u003cspan class=\"string\"\u003e\u0026#39;numpy\u0026#39;\u003c/span\u003e \u003cspan class=\"keyword\"\u003efrom\u003c/span\u003e \u003cspan class=\"string\"\u003e\u0026#39;/home/tushar/.local/lib/python3.9/site-packages/numpy/__init__.py\u0026#39;\u003c/span\u003e\u0026gt;\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e从本质上讲，每个 import 语句都可以转换为 \u003ccode\u003e__import__\u003c/code\u003e 函数调用。 在内部，这差不多就是 Python 对导入语句的处理（但在C语言中更直接）。\u003c/p\u003e\n\u003ch3 id=\"debug\"\u003e\u003ca href=\"#debug\" class=\"headerlink\" title=\"__debug__\"\u003e\u003c/a\u003e\u003ccode\u003e__debug__\u003c/code\u003e\u003c/h3\u003e\u003cp\u003e在 Python 中，这是一个全局常量，几乎总是被设置为 \u003ccode\u003eTrue\u003c/code\u003e 。  \u003c/p\u003e\n\u003cp\u003e其含义是 Python 在调试模式下运行。 默认情况下，Python 总是在调试模式下运行。  \u003c/p\u003e\n\u003cp\u003e此外，Python 还可以运行在“优化模式”下。要在“优化模式”下运行，可以在启动时增加 \u003ccode\u003e-O\u003c/code\u003e 参数。这种模式只是阻止断言语句（至少目前如此）。老实说，没什么实际作用。\u003c/p\u003e\n\u003cfigure class=\"highlight python\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e8\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e9\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e10\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e11\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e12\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e13\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e14\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e$ python\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e\u0026gt;\u0026gt;\u0026gt; \u003c/span\u003e__debug__\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"literal\"\u003eTrue\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e\u0026gt;\u0026gt;\u0026gt; \u003c/span\u003e\u003cspan class=\"keyword\"\u003eassert\u003c/span\u003e \u003cspan class=\"literal\"\u003eFalse\u003c/span\u003e, \u003cspan class=\"string\"\u003e\u0026#39;some error\u0026#39;\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eTraceback (most recent call last):\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  File \u003cspan class=\"string\"\u003e\u0026#34;\u0026lt;stdin\u0026gt;\u0026#34;\u003c/span\u003e, line \u003cspan class=\"number\"\u003e1\u003c/span\u003e, \u003cspan class=\"keyword\"\u003ein\u003c/span\u003e \u0026lt;module\u0026gt;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eAssertionError: some error\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e$ python -O\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e\u0026gt;\u0026gt;\u0026gt; \u003c/span\u003e__debug__\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"literal\"\u003eFalse\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e\u0026gt;\u0026gt;\u0026gt; \u003c/span\u003e\u003cspan class=\"keyword\"\u003eassert\u003c/span\u003e \u003cspan class=\"literal\"\u003eFalse\u003c/span\u003e, \u003cspan class=\"string\"\u003e\u0026#39;some error\u0026#39;\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e\u0026gt;\u0026gt;\u0026gt; \u003c/span\u003e\u003cspan class=\"comment\"\u003e# Didn\u0026#39;t raise any error.\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e此外， \u003ccode\u003e__debug__\u003c/code\u003e 、\u003ccode\u003eTrue\u003c/code\u003e 、\u003ccode\u003eFalse\u003c/code\u003e 和 \u003ccode\u003eNone\u003c/code\u003e 是 Python 中唯一的\u003cstrong\u003e真常量\u003c/strong\u003e，即这4个常量是Python中唯一不能用赋值语句重写为新的其他值的全局变量。  \u003c/p\u003e\n\u003cfigure class=\"highlight python\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e8\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e\u0026gt;\u0026gt;\u0026gt; \u003c/span\u003e\u003cspan class=\"literal\"\u003eTrue\u003c/span\u003e = \u003cspan class=\"number\"\u003e42\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  File \u003cspan class=\"string\"\u003e\u0026#34;\u0026lt;stdin\u0026gt;\u0026#34;\u003c/span\u003e, line \u003cspan class=\"number\"\u003e1\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"literal\"\u003eTrue\u003c/span\u003e = \u003cspan class=\"number\"\u003e42\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    ^\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eSyntaxError: cannot assign to \u003cspan class=\"literal\"\u003eTrue\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e\u0026gt;\u0026gt;\u0026gt; \u003c/span\u003e__debug__ = \u003cspan class=\"literal\"\u003eFalse\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  File \u003cspan class=\"string\"\u003e\u0026#34;\u0026lt;stdin\u0026gt;\u0026#34;\u003c/span\u003e, line \u003cspan class=\"number\"\u003e1\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eSyntaxError: cannot assign to __debug__\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003ch3 id=\"build-class\"\u003e\u003ca href=\"#build-class\" class=\"headerlink\" title=\"__build_class__\"\u003e\u003c/a\u003e\u003ccode\u003e__build_class__\u003c/code\u003e\u003c/h3\u003e\u003cp\u003e这个全局变量是在 Python 3.1 中添加的，有了它以后，就可以在定义类的时候，除了继承，还可以使用用任意位置参数和关键字参数。 这个特性的技术原因比较复杂，而且它涉及到像元类这样的高级主题，此处暂不详解。\u003c/p\u003e\n\u003cp\u003e但要知道的是，有了它，在创建类时就可以这样做:  \u003c/p\u003e\n\u003cfigure class=\"highlight python\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e8\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e9\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e\u0026gt;\u0026gt;\u0026gt; \u003c/span\u003e\u003cspan class=\"class\"\u003e\u003cspan class=\"keyword\"\u003eclass\u003c/span\u003e \u003cspan class=\"title\"\u003eC\u003c/span\u003e:\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e... \u003c/span\u003e    \u003cspan class=\"function\"\u003e\u003cspan class=\"keyword\"\u003edef\u003c/span\u003e \u003cspan class=\"title\"\u003e__init_subclass__\u003c/span\u003e\u003cspan class=\"params\"\u003e(self, **kwargs)\u003c/span\u003e:\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e... \u003c/span\u003e        print(\u003cspan class=\"string\"\u003ef\u0026#39;Subclass got data: \u003cspan class=\"subst\"\u003e{kwargs}\u003c/span\u003e\u0026#39;\u003c/span\u003e)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e...\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e\u0026gt;\u0026gt;\u0026gt; \u003c/span\u003e\u003cspan class=\"class\"\u003e\u003cspan class=\"keyword\"\u003eclass\u003c/span\u003e \u003cspan class=\"title\"\u003eD\u003c/span\u003e\u003cspan class=\"params\"\u003e(C, num=\u003cspan class=\"number\"\u003e42\u003c/span\u003e, data=\u003cspan class=\"string\"\u003e\u0026#39;xyz\u0026#39;\u003c/span\u003e)\u003c/span\u003e:\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e... \u003c/span\u003e    \u003cspan class=\"keyword\"\u003epass\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e...\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eSubclass got data: {\u003cspan class=\"string\"\u003e\u0026#39;num\u0026#39;\u003c/span\u003e: \u003cspan class=\"number\"\u003e42\u003c/span\u003e, \u003cspan class=\"string\"\u003e\u0026#39;data\u0026#39;\u003c/span\u003e: \u003cspan class=\"string\"\u003e\u0026#39;xyz\u0026#39;\u003c/span\u003e}\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt;\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e在 Python 3.1 之前，像上面那样，用于创建类 \u003ccode\u003eD\u003c/code\u003e 的语法只允许传入元类和可供继承的基类。新的语法则允许有可变数量的位置参数和关键字参数。这种变化似乎带来了一点混乱和复杂。\u003c/p\u003e\n\u003cp\u003e但是，在调用常规函数的代码中，我们已经用了它。 因此，有人建议 \u003ccode\u003eClass X(...)\u003c/code\u003e 语法可以用函数调用的方式替代：\u003ccode\u003e__build_class__(\u0026#39;X\u0026#39;, ...)\u003c/code\u003e 。  \u003c/p\u003e\n\u003ch3 id=\"cached\"\u003e\u003ca href=\"#cached\" class=\"headerlink\" title=\"__cached__\"\u003e\u003c/a\u003e\u003ccode\u003e__cached__\u003c/code\u003e\u003c/h3\u003e\u003cp\u003e当导入一个模块时， \u003ccode\u003e__cached__\u003c/code\u003e 属性存储该模块的已编译的 Python 字节码的缓存文件的路径。  \u003c/p\u003e\n\u003cp\u003e你可能对 Python 的“编译”感到奇怪，没错。Python 是编译的。事实上，所有 Python 代码都是编译的，但不是编译为机器代码，而是编译为\u003cstrong\u003e字节码\u003c/strong\u003e。 为了解释这一点，先解释 Python 如何运行代码。\u003c/p\u003e\n\u003cp\u003e以下是 Python 解释器运行代码的步骤:  \u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e获取源文件，并将其解析成语法树。语法树是代码的一种表示形式，它更容易被程序理解。 它查找并报告代码中的任何语法错误，并确保没有歧义。\u003c/li\u003e\n\u003cli\u003e下一步是将语法树编译为\u003cstrong\u003e字节码\u003c/strong\u003e。 字节码是用于\u003cstrong\u003ePython虚拟机的一组微指令\u003c/strong\u003e。 这个“虚拟机”是 Python 解释器的逻辑所在。 它本质上是在本地计算机上\u003cstrong\u003e模拟\u003c/strong\u003e一个非常简单的基于栈的计算机，以便执行 Python 代码。\u003c/li\u003e\n\u003cli\u003e然后，Python 源代码以字节码形式在 Python 虚拟机上运行。 字节码指令是简单的指令，比如，从当前栈中推送和取出数据。当这些指令一个接一个地运行时，将执行整个程序。\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e在导入模块时，将源码“编译为字节码”要花费一定时间，而后，Python 将字节码存储到 \u003ccode\u003e.pyc\u003c/code\u003e 文件中，并将其存储在名为 \u003ccode\u003e__pycache__\u003c/code\u003e 的文件夹中。 然后，所导入的模块的 \u003ccode\u003e__cached__\u003c/code\u003e 属性值为该 \u003ccode\u003e.pyc\u003c/code\u003e 文件。  \u003c/p\u003e\n\u003cp\u003e当以后再次导入同一个模块时，Python 会检查该模块的 \u003ccode\u003e.pyc\u003c/code\u003e 版本是否存在，然后直接导入已经编译过的版本，从而节省大量的时间和计算。  \u003c/p\u003e\n\u003cp\u003e如果还没有理解，可以在 Python 代码中直接运行或导入 \u003ccode\u003e.pyc\u003c/code\u003e 文件，就像其他的 \u003ccode\u003e.pyc\u003c/code\u003e 文件一样：\u003c/p\u003e\n\u003cfigure class=\"highlight python\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e8\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e9\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e\u0026gt;\u0026gt;\u0026gt; \u003c/span\u003e\u003cspan class=\"keyword\"\u003eimport\u003c/span\u003e test\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e\u0026gt;\u0026gt;\u0026gt; \u003c/span\u003etest.__cached__\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"string\"\u003e\u0026#39;/usr/lib/python3.9/test/__pycache__/__init__.cpython-39.pyc\u0026#39;\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e\u0026gt;\u0026gt;\u0026gt; \u003c/span\u003eexit()\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e$ cp \u003cspan class=\"string\"\u003e\u0026#39;/usr/lib/python3.9/test/__pycache__/__init__.cpython-39.pyc\u0026#39;\u003c/span\u003e cached_test.pyc\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e$ python\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"meta\"\u003e\u0026gt;\u0026gt;\u0026gt; \u003c/span\u003e\u003cspan class=\"keyword\"\u003eimport\u003c/span\u003e cached_test  \u003cspan class=\"comment\"\u003e# Runs!\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt;\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003c/section\u003e\n    \u003c!-- Tags START --\u003e\n    \n    \u003c!-- Tags END --\u003e\n    \u003c!-- NAV START --\u003e\n    \n  \u003cdiv class=\"nav-container\"\u003e\n    \u003c!-- reverse left and right to put prev and next in a more logic postition --\u003e\n    \n      \u003ca class=\"nav-left\" href=\"/2021/10/08/geometrical-matrices/\"\u003e\n        \u003cspan class=\"nav-arrow\"\u003e← \u003c/span\u003e\n        \n          从几何角度理解矩阵\n        \n      \u003c/a\u003e\n    \n    \n      \u003ca class=\"nav-right\" href=\"/2021/11/03/python-builtins-first/\"\u003e\n        \n          通过内置对象理解 Python（一）\n        \n        \u003cspan class=\"nav-arrow\"\u003e →\u003c/span\u003e\n      \u003c/a\u003e\n    \n  \u003c/div\u003e\n\n    \u003c!-- NAV END --\u003e\n    \u003c!-- 打赏 START --\u003e\n    \n      \u003cdiv class=\"money-like\"\u003e\n        \u003cdiv class=\"reward-btn\"\u003e\n          赏\n          \u003cspan class=\"money-code\"\u003e\n            \u003cspan class=\"alipay-code\"\u003e\n              \u003cdiv class=\"code-image\"\u003e\u003c/div\u003e\n              \u003cb\u003e使用支付宝打赏\u003c/b\u003e\n            \u003c/span\u003e\n            \u003cspan class=\"wechat-code\"\u003e\n              \u003cdiv class=\"code-image\"\u003e\u003c/div\u003e\n              \u003cb\u003e使用微信打赏\u003c/b\u003e\n            \u003c/span\u003e\n          \u003c/span\u003e\n        \u003c/div\u003e\n        \u003cp class=\"notice\"\u003e若你觉得我的文章对你有帮助，欢迎点击上方按钮对我打赏\u003c/p\u003e\n      \u003c/div\u003e\n    \n    \u003c!-- 打赏 END --\u003e\n    \u003c!-- 二维码 START --\u003e\n    \u003c!--% if (theme.qrcode) { %--\u003e\n      \u003cdiv class=\"qrcode\"\u003e\n        \u003c!--canvas id=\"share-qrcode\"\u003e\u003c/!--canvas--\u003e\n        \u003cimg src=\"https://public-tuchuang.oss-cn-hangzhou.aliyuncs.com/WechatIMG6_20200109154827.jpeg\" width=\"400\"/\u003e\n        \u003cp class=\"notice\"\u003e关注微信公众号，读文章、听课程，提升技能\u003c/p\u003e\n      \u003c/div\u003e\n    \u003c!--% } %--\u003e\n    \u003c!-- 二维码 END --\u003e\n    \n      \u003c!-- No Comment --\u003e\n    \n  \u003c/article\u003e",
  "Date": "2021-11-03T00:00:00Z",
  "Author": "老齐教室"
}