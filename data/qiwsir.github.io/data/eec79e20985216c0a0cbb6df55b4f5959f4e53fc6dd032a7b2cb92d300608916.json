{
  "Source": "qiwsir.github.io",
  "Title": "调试及其重要性",
  "Link": "https://qiwsir.github.io/2021/05/06/what-is-debugging/",
  "Content": "\u003carticle class=\"post-article\"\u003e\n    \u003ch2\u003e调试及其重要性\u003c/h2\u003e\n    \u003cp class=\"post-date\"\u003e2021-05-06\u003c/p\u003e\n    \u003csection class=\"markdown-content\"\u003e\u003cp\u003e软件在发布之前，应该没有错误，这样才能让用户满意。为了达到这个目的，在开发过程中，调试（debugging）是必不可少的——注意，调试不是测试，两者是有区别的。\u003c/p\u003e\n\u003ch2 id=\"什么是调试？\"\u003e\u003ca href=\"#什么是调试？\" class=\"headerlink\" title=\"什么是调试？\"\u003e\u003c/a\u003e什么是调试？\u003c/h2\u003e\u003cp\u003e软件程序在开发过程中要经历大量的测试、更新、故障排除和维护，程序中有错误和缺陷，是正常现象，关键在于如何改正这些错误和缺陷。调试就是对软件进行错误修正的过程。\u003c/p\u003e\n\u003cp\u003e即识别、分析和消除错误。调试过程开始于软件无法正确执行之际，结束于解决问题并成功测试软件之时。 调试过程是一项极其复杂和乏味的任务过程，因为在调试的所有阶段都需要解决错误。\u003c/p\u003e\n\u003ch2 id=\"为什么需要调试？\"\u003e\u003ca href=\"#为什么需要调试？\" class=\"headerlink\" title=\"为什么需要调试？\"\u003e\u003c/a\u003e为什么需要调试？\u003c/h2\u003e\u003cp\u003e一旦开始写\u003cstrong\u003e代码\u003c/strong\u003e，调试过程就开始了。然后，当代码与其他编程单元结合形成软件产品时，调试将在后续的阶段中继续进行。调试有许多好处，例如：\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e它\u003cstrong\u003e立即\u003c/strong\u003e报告\u003cstrong\u003e错误状况。\u003c/strong\u003e这使我们更早地检测到错误，并使软件开发能顺利进行下去。\u003c/li\u003e\n\u003cli\u003e它还提供关于数据结构的\u003cstrong\u003e最大限度的有用信息\u003c/strong\u003e及简单解释。\u003c/li\u003e\n\u003cli\u003e调试帮助开发人员\u003cstrong\u003e减少无用的\u003c/strong\u003e和分散注意力的信息。\u003c/li\u003e\n\u003cli\u003e通过调试，开发人员可以\u003cstrong\u003e避免复杂的一次性测试代码\u003c/strong\u003e，节省软件开发的时间和精力。\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"调试步骤\"\u003e\u003ca href=\"#调试步骤\" class=\"headerlink\" title=\"调试步骤\"\u003e\u003c/a\u003e调试步骤\u003c/h2\u003e\u003cp\u003e调试过程的主要步骤：\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"https://gitee.com/qiwsir/images/raw/master/2021-5-7/1620374722779-debuuging-steps.png\" alt=\"\"/\u003e \u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003e1. 识别错误（Identify the Error）：\u003c/strong\u003e错误识别可能会导致浪费开发时间。由用户报告的错误是很难解释的，有时我们收到的信息也具有误导性。调试是用来识别实际错误的的最佳方式。\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003e2. 定位错误位置（ Find the Error Location）：\u003c/strong\u003e准确地识别错误后，需要遍历代码以找到错误所在的确切位置。在这个阶段，你需要集中精力去找，而不是去理解它。\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003e3. 分析错误（Analyze the Error）：\u003c/strong\u003e在第三步中，你需要从错误位置使用自下而上的方法并分析代码。这有助于理解错误。分析bug有两个主要目标：检查错误周围是否有其他错误，以及避免在修复中输入任何风险代码。\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003e4. 验证分析（Prove the Analysis）：\u003c/strong\u003e一旦完成了对原始bug的分析，你需要找到应用程序上可能出现的更多错误。这一步涉及到在测试框架的帮助下为这些区域编写自动化测试。\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003e5. 覆盖横向损坏（Cover Lateral Damage）：\u003c/strong\u003e在这个阶段，你需要为将要更改的代码创建单元测试。现在，如果运行这些单元测试，它们都应该通过。\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003e6. 修复与验证（Fix \u0026amp; Validate）\u003c/strong\u003e: 最后一个阶段是修复所有错误并运行所有测试脚本，以检查它们是否都通过。\u003c/p\u003e\n\u003ch2 id=\"调试策略\"\u003e\u003ca href=\"#调试策略\" class=\"headerlink\" title=\"调试策略\"\u003e\u003c/a\u003e调试策略\u003c/h2\u003e\u003cul\u003e\n\u003cli\u003e必须要深入理解整个系统，这有助于开发者对调试的程序作出正确判断。\u003c/li\u003e\n\u003cli\u003e对问题进行“回溯分析”，即从错误的位置开始向前跟踪所有代码，以确定故障代码的区域。你需要彻底研究整个区域，以找到错误的原因。\u003c/li\u003e\n\u003cli\u003e“前向分析”即在程序的不同位置打断点或打印语句来前向跟踪代码执行过程。重要的是关注获得错误区域的输出内容。\u003c/li\u003e\n\u003cli\u003e必须已经积累的开发经验来检查类似的问题。这种方法的成功取决于开发者的专业知识。\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"调试工具\"\u003e\u003ca href=\"#调试工具\" class=\"headerlink\" title=\"调试工具\"\u003e\u003c/a\u003e调试工具\u003c/h2\u003e\u003cp\u003e调试工具是用来测试和调试其他程序的计算机程序，比如 gdb 和 dbx 等，也具备基于控制台的命令行界面。一些自动调试工具包括基于代码的跟踪器、探查器、解释器等。\u003c/p\u003e\n\u003cp\u003e以下是一些广泛使用的工具列表：\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003cstrong\u003eRadare2\u003c/strong\u003e\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eWinDbg\u003c/strong\u003e\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eValgrind\u003c/strong\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e此外，IDE 也集成了一些调试工具，帮助开发者捉虫子。\u003c/p\u003e\n\u003ch2 id=\"参考文献\"\u003e\u003ca href=\"#参考文献\" class=\"headerlink\" title=\"参考文献\"\u003e\u003c/a\u003e参考文献\u003c/h2\u003e\u003cp\u003e\u003ca href=\"https://www.edureka.co/blog/what-is-debugging/\" target=\"_blank\" rel=\"noopener\"\u003ehttps://www.edureka.co/blog/what-is-debugging/\u003c/a\u003e\u003c/p\u003e\n\u003c/section\u003e\n    \u003c!-- Tags START --\u003e\n    \n    \u003c!-- Tags END --\u003e\n    \u003c!-- NAV START --\u003e\n    \n  \u003cdiv class=\"nav-container\"\u003e\n    \u003c!-- reverse left and right to put prev and next in a more logic postition --\u003e\n    \n      \u003ca class=\"nav-left\" href=\"/2021/04/29/social-contract/\"\u003e\n        \u003cspan class=\"nav-arrow\"\u003e← \u003c/span\u003e\n        \n          开源的社会契约\n        \n      \u003c/a\u003e\n    \n    \n      \u003ca class=\"nav-right\" href=\"/2021/06/03/recursion/\"\u003e\n        \n          Python 中的递归\n        \n        \u003cspan class=\"nav-arrow\"\u003e →\u003c/span\u003e\n      \u003c/a\u003e\n    \n  \u003c/div\u003e\n\n    \u003c!-- NAV END --\u003e\n    \u003c!-- 打赏 START --\u003e\n    \n      \u003cdiv class=\"money-like\"\u003e\n        \u003cdiv class=\"reward-btn\"\u003e\n          赏\n          \u003cspan class=\"money-code\"\u003e\n            \u003cspan class=\"alipay-code\"\u003e\n              \u003cdiv class=\"code-image\"\u003e\u003c/div\u003e\n              \u003cb\u003e使用支付宝打赏\u003c/b\u003e\n            \u003c/span\u003e\n            \u003cspan class=\"wechat-code\"\u003e\n              \u003cdiv class=\"code-image\"\u003e\u003c/div\u003e\n              \u003cb\u003e使用微信打赏\u003c/b\u003e\n            \u003c/span\u003e\n          \u003c/span\u003e\n        \u003c/div\u003e\n        \u003cp class=\"notice\"\u003e若你觉得我的文章对你有帮助，欢迎点击上方按钮对我打赏\u003c/p\u003e\n      \u003c/div\u003e\n    \n    \u003c!-- 打赏 END --\u003e\n    \u003c!-- 二维码 START --\u003e\n    \u003c!--% if (theme.qrcode) { %--\u003e\n      \u003cdiv class=\"qrcode\"\u003e\n        \u003c!--canvas id=\"share-qrcode\"\u003e\u003c/!--canvas--\u003e\n        \u003cimg src=\"https://public-tuchuang.oss-cn-hangzhou.aliyuncs.com/WechatIMG6_20200109154827.jpeg\" width=\"400\"/\u003e\n        \u003cp class=\"notice\"\u003e关注微信公众号，读文章、听课程，提升技能\u003c/p\u003e\n      \u003c/div\u003e\n    \u003c!--% } %--\u003e\n    \u003c!-- 二维码 END --\u003e\n    \n      \u003c!-- No Comment --\u003e\n    \n  \u003c/article\u003e",
  "Date": "2021-05-06T00:00:00Z",
  "Author": "老齐教室"
}