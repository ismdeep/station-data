{
  "Source": "qiwsir.github.io",
  "Title": "如何使用Python的filter函数",
  "Link": "https://qiwsir.github.io/2020/10/19/python-filter-function/",
  "Content": "\u003carticle class=\"post-article\"\u003e\n    \u003ch2\u003e如何使用Python的filter函数\u003c/h2\u003e\n    \u003cp class=\"post-date\"\u003e2020-10-19\u003c/p\u003e\n    \u003csection class=\"markdown-content\"\u003e\u003ch2 id=\"介绍\"\u003e\u003ca href=\"#介绍\" class=\"headerlink\" title=\"介绍\"\u003e\u003c/a\u003e介绍\u003c/h2\u003e\u003cp\u003ePython内置的\u003ccode\u003efilter()\u003c/code\u003e函数能够从可迭代对象（如字典、列表）中筛选某些元素，并生成一个新的迭代器。可迭代对象是一个可以被“遍历”的Python对象，也就是说，它将按顺序返回各元素，这样我们就可以在\u003ccode\u003efo\u003c/code\u003er循环中使用它。\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003efilter()\u003c/code\u003e函数的基本语法是:\u003c/p\u003e\n\u003cfigure class=\"highlight plain\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003efilter(function, iterable)\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e返回一个可迭代的filter对象，可以使用\u003ccode\u003elist()\u003c/code\u003e函数将其转化为列表，这个列表包含过滤器对象中返回的所有的项。\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003efilter()\u003c/code\u003e函数所提供的过滤方法，通常比用列表解析更有效，特别是当我们处理更大的数据集时。例如，列表解析会生成一个新列表，这会增加该处理的运行时间。当列表解析执行完毕它的表达式后，内存中会有两个列表。但是，\u003ccode\u003efilter()\u003c/code\u003e将生成一个简单的对象，该对象包含对原始列表的引用、提供的函数以及原始列表中位置的索引，这样操作占用的内存更少。\u003c/p\u003e\n\u003cp\u003e下面介绍\u003ccode\u003efilter()\u003c/code\u003e的四种不同用法：\u003c/p\u003e\n\u003ch2 id=\"在filter-中使用特殊函数\"\u003e\u003ca href=\"#在filter-中使用特殊函数\" class=\"headerlink\" title=\"在filter()中使用特殊函数\"\u003e\u003c/a\u003e在\u003ccode\u003efilter()\u003c/code\u003e中使用特殊函数\u003c/h2\u003e\u003cp\u003e\u003ccode\u003efilter()\u003c/code\u003e的第一个参数是一个函数，用它来决定第二个参数所引用的可迭代对象中的每一项的去留。此函数被调用后，当返回\u003ccode\u003eFalse\u003c/code\u003e时，第二个参数中的可迭代对象里面相应的值就会被删除。针对这个函数，可以是一个普通函数，也可以使用\u003ccode\u003elambda\u003c/code\u003e函数，特别是当表达式不那么复杂的时候。\u003c/p\u003e\n\u003cp\u003e下面是\u003ccode\u003efilter()\u003c/code\u003e中使用\u003ccode\u003elambda\u003c/code\u003e函数的方法：\u003c/p\u003e\n\u003cfigure class=\"highlight plain\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003efilter(lambda item: item[] expression, iterable)\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e将下面的列表，用于\u003ccode\u003elambda\u003c/code\u003e函数，根据\u003ccode\u003elambda\u003c/code\u003e函数表达式筛选列表中的元素。\u003c/p\u003e\n\u003cfigure class=\"highlight plain\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003ecreature_names = [\u0026#39;Sammy\u0026#39;, \u0026#39;Ashley\u0026#39;, \u0026#39;Jo\u0026#39;, \u0026#39;Olly\u0026#39;, \u0026#39;Jackie\u0026#39;, \u0026#39;Charlie\u0026#39;]\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e要筛选此列表以元音开头的水族馆生物的名称，\u003ccode\u003elambda\u003c/code\u003e函数如下：\u003c/p\u003e\n\u003cfigure class=\"highlight plain\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003eprint(list(filter(lambda x: x[0].lower() in \u0026#39;aeiou\u0026#39;, creature_names)))\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e在这里，我们将列表中的一个项声明为\u003ccode\u003ex\u003c/code\u003e，并以\u003ccode\u003ex[0]\u003c/code\u003e的方式访问每个字符串的第一个字符，并且要将字母转化为小写，以确保将字母与\u003ccode\u003e\u0026#39;aeiou\u0026#39;\u003c/code\u003e中的字符匹配。\u003c/p\u003e\n\u003cp\u003e最后，要提供可迭代对向\u003ccode\u003ecreature_name\u003c/code\u003e。与上一节一样，用\u003ccode\u003elist()\u003c/code\u003e将返回结果转化为列表表。\u003c/p\u003e\n\u003cp\u003e输出如下：\u003c/p\u003e\n\u003cfigure class=\"highlight plain\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e[\u0026#39;Ashley\u0026#39;, \u0026#39;Olly\u0026#39;]\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e当然，写一个函数，也能够实现类似的结果：\u003c/p\u003e\n\u003cfigure class=\"highlight plain\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e8\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003ecreature_names = [\u0026#39;Sammy\u0026#39;, \u0026#39;Ashley\u0026#39;, \u0026#39;Jo\u0026#39;, \u0026#39;Olly\u0026#39;, \u0026#39;Jackie\u0026#39;, \u0026#39;Charlie\u0026#39;]\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003edef names_vowels(x):\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    return x[0].lower() in \u0026#39;aeiou\u0026#39;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003efiltered_names = filter(names_vowels, creature_names)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eprint(list(filtered_names))\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e在\u003ccode\u003enames_vowels\u003c/code\u003e函数中用一个表达式，完成了对\u003ccode\u003ecreature_names\u003c/code\u003e的过滤。\u003c/p\u003e\n\u003cp\u003e同样，输出如下:\u003c/p\u003e\n\u003cfigure class=\"highlight plain\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e[\u0026#39;Ashley\u0026#39;, \u0026#39;Olly\u0026#39;]\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e总的来说，在\u003ccode\u003efilter()\u003c/code\u003e函数中使用lambda函数得到的结果与使用常规函数得到的结果相同。如果所要过滤数据更复杂了，还可能要使用正则表达式，这可能会提高代码的可读性。\u003c/p\u003e\n\u003ch2 id=\"在filter-中使用None\"\u003e\u003ca href=\"#在filter-中使用None\" class=\"headerlink\" title=\"在filter()中使用None\"\u003e\u003c/a\u003e在\u003ccode\u003efilter()\u003c/code\u003e中使用\u003ccode\u003eNone\u003c/code\u003e\u003c/h2\u003e\u003cp\u003e我们也可以将\u003ccode\u003eNone\u003c/code\u003e作为\u003ccode\u003efilter()\u003c/code\u003e的第一个参数，让迭代器过滤掉Python中布尔值是\u003ccode\u003eFalse\u003c/code\u003e的对象，比如长度为0的对象（如空列表或空字符串）或在数字上等于0的对象。\u003c/p\u003e\n\u003cp\u003e下面的示例中要过滤一个列表，去掉其中布尔值是\u003ccode\u003eFalse\u003c/code\u003e的元素。\u003c/p\u003e\n\u003cfigure class=\"highlight plain\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003eaquarium_tanks = [11, False, 18, 21, \u0026#34;\u0026#34;, 12, 34, 0, [], {}]\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003efiltered_tanks = filter(None, aquarium_tanks)\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e这段代码在\u003ccode\u003efilter()\u003c/code\u003e中使用了None，并将\u003ccode\u003eaquarium_tanks\u003c/code\u003e列表作为可迭代项传入。将\u003ccode\u003eNone\u003c/code\u003e作为第一个参数，可以检查列表中的元素是否为\u003ccode\u003eFalse\u003c/code\u003e。\u003c/p\u003e\n\u003cfigure class=\"highlight plain\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003eprint(list(filtered_tanks))\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e然后再将\u003ccode\u003efiltered_tanks\u003c/code\u003e传给\u003ccode\u003elist()\u003c/code\u003e函数，这样就得到了一个列表。\u003c/p\u003e\n\u003cp\u003e从输出结果中可以看出，我们得到了想要的整数，那些布尔值是\u003ccode\u003eFalse\u003c/code\u003e的项都筛选掉了。\u003c/p\u003e\n\u003cfigure class=\"highlight plain\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e[11, 18, 21, 12, 34]\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e注意：如果不使用\u003ccode\u003elist()\u003c/code\u003e并打印\u003ccode\u003efiltered_tanks\u003c/code\u003e，将得到一个类似于\u003ccode\u003e\u0026lt;filter object at 0x7fafd5903240\u0026gt;\u003c/code\u003e这样的filter对象。filter对象是可迭代的，因此我们可以使用for循环它，也可以使用\u003ccode\u003elist()\u003c/code\u003e将其转换为列表。\u003c/p\u003e\n\u003cp\u003e借助\u003ccode\u003eNone\u003c/code\u003e，用\u003ccode\u003efilter()\u003c/code\u003e快速地从列表中删除被认为\u003ccode\u003eFalse\u003c/code\u003e的项。\u003c/p\u003e\n\u003ch2 id=\"将filter-用于复杂场景\"\u003e\u003ca href=\"#将filter-用于复杂场景\" class=\"headerlink\" title=\"将filter()用于复杂场景\"\u003e\u003c/a\u003e将\u003ccode\u003efilter()\u003c/code\u003e用于复杂场景\u003c/h2\u003e\u003cp\u003e对于复杂的数据结构，\u003ccode\u003efilter()\u003c/code\u003e也可以胜任，例如，有一个由字典组成的列表，我们不仅要遍历列表中的每项（字典）， 还可能要遍历字典中的每个键值对，以便得到所有的数据。\u003c/p\u003e\n\u003cp\u003e举个例子，假设我们有水族馆里每种生物的一个列表以及每种生物的不同细节，用下面的列表显示此数据。\u003c/p\u003e\n\u003cfigure class=\"highlight plain\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e8\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003eaquarium_creatures = [\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  {\u0026#34;name\u0026#34;: \u0026#34;sammy\u0026#34;, \u0026#34;species\u0026#34;: \u0026#34;shark\u0026#34;, \u0026#34;tank number\u0026#34;: \u0026#34;11\u0026#34;, \u0026#34;type\u0026#34;: \u0026#34;fish\u0026#34;},\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  {\u0026#34;name\u0026#34;: \u0026#34;ashley\u0026#34;, \u0026#34;species\u0026#34;: \u0026#34;crab\u0026#34;, \u0026#34;tank number\u0026#34;: \u0026#34;25\u0026#34;, \u0026#34;type\u0026#34;: \u0026#34;shellfish\u0026#34;},\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  {\u0026#34;name\u0026#34;: \u0026#34;jo\u0026#34;, \u0026#34;species\u0026#34;: \u0026#34;guppy\u0026#34;, \u0026#34;tank number\u0026#34;: \u0026#34;18\u0026#34;, \u0026#34;type\u0026#34;: \u0026#34;fish\u0026#34;},\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  {\u0026#34;name\u0026#34;: \u0026#34;jackie\u0026#34;, \u0026#34;species\u0026#34;: \u0026#34;lobster\u0026#34;, \u0026#34;tank number\u0026#34;: \u0026#34;21\u0026#34;, \u0026#34;type\u0026#34;: \u0026#34;shellfish\u0026#34;},\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  {\u0026#34;name\u0026#34;: \u0026#34;charlie\u0026#34;, \u0026#34;species\u0026#34;: \u0026#34;clownfish\u0026#34;, \u0026#34;tank number\u0026#34;: \u0026#34;12\u0026#34;, \u0026#34;type\u0026#34;: \u0026#34;fish\u0026#34;},\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  {\u0026#34;name\u0026#34;: \u0026#34;olly\u0026#34;, \u0026#34;species\u0026#34;: \u0026#34;green turtle\u0026#34;, \u0026#34;tank number\u0026#34;: \u0026#34;34\u0026#34;, \u0026#34;type\u0026#34;: \u0026#34;turtle\u0026#34;}\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e]\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e下面就写一个函数，用这个函数来过滤这些数据。为了让\u003ccode\u003efilter()\u003c/code\u003e访问每个字典和字典中的每个元素，这需要构造一个嵌套函数，如下所示：\u003c/p\u003e\n\u003cfigure class=\"highlight plain\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003edef filter_set(aquarium_creatures, search_string):\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    def iterator_func(x):\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        for v in x.values():\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e            if search_string in v:\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e                return True\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        return False\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    return filter(iterator_func, aquarium_creatures)\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e定义\u003ccode\u003efilter_set()\u003c/code\u003e函数，以\u003ccode\u003eaquarium_creatures\u003c/code\u003e和\u003ccode\u003esearch_string\u003c/code\u003e作为参数。在\u003ccode\u003efilter_set()\u003c/code\u003e中，将内部函数\u003ccode\u003eiterator_func()\u003c/code\u003e作为\u003ccode\u003efilter()\u003c/code\u003e的参数。\u003ccode\u003efilter_set()\u003c/code\u003e函数将返回由\u003ccode\u003efilter()\u003c/code\u003e生成的迭代器。\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003eiterator_func()\u003c/code\u003e以\u003ccode\u003ex\u003c/code\u003e作为参数，它代表列表中的一个项（即单个字典）。\u003c/p\u003e\n\u003cp\u003e接下来，\u003ccode\u003efor\u003c/code\u003e循环访问字典中每个键值对，然后使用条件语句检查\u003ccode\u003esearch_string\u003c/code\u003e是键值对中的值。\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003eiterator_func\u003c/code\u003e函数作为\u003ccode\u003efilter\u003c/code\u003e函数的参数对象，用它对迭代对象进行筛选。例如：用\u003ccode\u003efilter_set()\u003c/code\u003e搜索字符串：\u003c/p\u003e\n\u003cfigure class=\"highlight plain\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003efiltered_records = filter_set(aquarium_creatures, \u0026#34;2\u0026#34;)\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e一旦函数执行完毕，过滤器对象存储在\u003ccode\u003efiltered_records\u003c/code\u003e变量中，我们将其转换为一个列表并打印：\u003c/p\u003e\n\u003cfigure class=\"highlight plain\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003eprint(list(filtered_records))\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e输出内容：\u003c/p\u003e\n\u003cfigure class=\"highlight plain\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e[{\u0026#39;name\u0026#39;: \u0026#39;ashley\u0026#39;, \u0026#39;species\u0026#39;: \u0026#39;crab\u0026#39;, \u0026#39;tank number\u0026#39;: \u0026#39;25\u0026#39;, \u0026#39;type\u0026#39;: \u0026#39;shellfish\u0026#39;}, {\u0026#39;name\u0026#39;: \u0026#39;jackie\u0026#39;, \u0026#39;species\u0026#39;: \u0026#39;lobster\u0026#39;, \u0026#39;tank number\u0026#39;: \u0026#39;21\u0026#39;, \u0026#39;type\u0026#39;: \u0026#39;shellfish\u0026#39;}, {\u0026#39;name\u0026#39;: \u0026#39;charlie\u0026#39;, \u0026#39;species\u0026#39;: \u0026#39;clownfish\u0026#39;, \u0026#39;tank number\u0026#39;: \u0026#39;12\u0026#39;, \u0026#39;type\u0026#39;: \u0026#39;fish\u0026#39;}]\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e刚才的示例中，我们用\u003ccode\u003efilter()\u003c/code\u003e实现了在字典组成的列表中过滤制定字符。\u003c/p\u003e\n\u003ch2 id=\"结论\"\u003e\u003ca href=\"#结论\" class=\"headerlink\" title=\"结论\"\u003e\u003c/a\u003e结论\u003c/h2\u003e\u003cp\u003e本文中列举了\u003ccode\u003efilter()\u003c/code\u003e函数的不同使用方法。如果你打算深入了解，请阅读《Python大学实用教程》（电子工业出版社）一书，这是针对零起点读者，并特别注重工程实践的不可多得的读物。\u003c/p\u003e\n\u003c/section\u003e\n    \u003c!-- Tags START --\u003e\n    \n    \u003c!-- Tags END --\u003e\n    \u003c!-- NAV START --\u003e\n    \n  \u003cdiv class=\"nav-container\"\u003e\n    \u003c!-- reverse left and right to put prev and next in a more logic postition --\u003e\n    \n      \u003ca class=\"nav-left\" href=\"/2020/10/12/python-use-dunder-methods/\"\u003e\n        \u003cspan class=\"nav-arrow\"\u003e← \u003c/span\u003e\n        \n          如何实现四元数的运算\n        \n      \u003c/a\u003e\n    \n    \n      \u003ca class=\"nav-right\" href=\"/2020/10/24/python-type-vs-instance/\"\u003e\n        \n          比较type和isinstance\n        \n        \u003cspan class=\"nav-arrow\"\u003e →\u003c/span\u003e\n      \u003c/a\u003e\n    \n  \u003c/div\u003e\n\n    \u003c!-- NAV END --\u003e\n    \u003c!-- 打赏 START --\u003e\n    \n      \u003cdiv class=\"money-like\"\u003e\n        \u003cdiv class=\"reward-btn\"\u003e\n          赏\n          \u003cspan class=\"money-code\"\u003e\n            \u003cspan class=\"alipay-code\"\u003e\n              \u003cdiv class=\"code-image\"\u003e\u003c/div\u003e\n              \u003cb\u003e使用支付宝打赏\u003c/b\u003e\n            \u003c/span\u003e\n            \u003cspan class=\"wechat-code\"\u003e\n              \u003cdiv class=\"code-image\"\u003e\u003c/div\u003e\n              \u003cb\u003e使用微信打赏\u003c/b\u003e\n            \u003c/span\u003e\n          \u003c/span\u003e\n        \u003c/div\u003e\n        \u003cp class=\"notice\"\u003e若你觉得我的文章对你有帮助，欢迎点击上方按钮对我打赏\u003c/p\u003e\n      \u003c/div\u003e\n    \n    \u003c!-- 打赏 END --\u003e\n    \u003c!-- 二维码 START --\u003e\n    \u003c!--% if (theme.qrcode) { %--\u003e\n      \u003cdiv class=\"qrcode\"\u003e\n        \u003c!--canvas id=\"share-qrcode\"\u003e\u003c/!--canvas--\u003e\n        \u003cimg src=\"https://public-tuchuang.oss-cn-hangzhou.aliyuncs.com/WechatIMG6_20200109154827.jpeg\" width=\"400\"/\u003e\n        \u003cp class=\"notice\"\u003e关注微信公众号，读文章、听课程，提升技能\u003c/p\u003e\n      \u003c/div\u003e\n    \u003c!--% } %--\u003e\n    \u003c!-- 二维码 END --\u003e\n    \n      \u003c!-- No Comment --\u003e\n    \n  \u003c/article\u003e",
  "Date": "2020-10-19T00:00:00Z",
  "Author": "老齐教室"
}