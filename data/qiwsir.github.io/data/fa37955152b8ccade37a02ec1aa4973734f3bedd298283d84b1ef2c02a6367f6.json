{
  "Source": "qiwsir.github.io",
  "Title": "必须升级pip，为什么？！",
  "Link": "https://qiwsir.github.io/2021/02/27/upgrade-pip/",
  "Content": "\u003carticle class=\"post-article\"\u003e\n    \u003ch2\u003e必须升级pip，为什么？！\u003c/h2\u003e\n    \u003cp class=\"post-date\"\u003e2021-02-27\u003c/p\u003e\n    \u003csection class=\"markdown-content\"\u003e\u003cp\u003e在《Python大学实用教程》和《跟老齐学Python：轻松入门》两本书中，都介绍了如何安装第三方库的方法：\u003c/p\u003e\n\u003cfigure class=\"highlight python\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003epip install package-name\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e在用\u003ccode\u003epip\u003c/code\u003e安装第三方库或者模块的时候，如果检测到本地的\u003ccode\u003epip\u003c/code\u003e版本过低，会提示升级。有的人觉得升级比较麻烦，就放弃了。\u003c/p\u003e\n\u003cp\u003e本文就要重点讲一讲，为什么要必须升级\u003ccode\u003epip\u003c/code\u003e。\u003c/p\u003e\n\u003cp\u003e先说结论，如果该升级的时候不升级，结果是：可能会导致安装某些东西的时候失败；或者安装进程很慢，或者给你带来其他麻烦。\u003c/p\u003e\n\u003cp\u003e所以，如果不升级，后果很严重。\u003c/p\u003e\n\u003ch2 id=\"老版本的问题\"\u003e\u003ca href=\"#老版本的问题\" class=\"headerlink\" title=\"老版本的问题\"\u003e\u003c/a\u003e老版本的问题\u003c/h2\u003e\u003cp\u003e下面是在Docker中运行Ubuntu 18.04，这个操作系统是2018年发布的，里面默认安装了Python3.6以及\u003ccode\u003epip\u003c/code\u003e的9.0.1版。下面就在这个配置下进行演示。\u003c/p\u003e\n\u003cfigure class=\"highlight plain\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e[itamarst@blake dev]$ docker run -it ubuntu:18.04\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eroot@1a43d55f0524:/# apt-get update\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e...\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eroot@1a43d55f0524:/# apt-get install --no-install-recommends python3 python3-pip\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e...\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eroot@1a43d55f0524:/# pip3 --version\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003epip 9.0.1 from /usr/lib/python3/dist-packages (python 3.6)\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e环境准备好之后，就安装一个名为\u003ccode\u003ecryptography\u003c/code\u003e的库，这个库是PyPI上下载量非常大的一个库，每月都有上百万的下载。\u003c/p\u003e\n\u003cfigure class=\"highlight plain\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e8\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e9\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e10\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e11\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003eroot@1a43d55f0524:/# pip3 install cryptography\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eCollecting cryptography\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  Downloading https://files.pythonhosted.org/packages/fa/2d/2154d8cb773064570f48ec0b60258a4522490fcb115a6c7c9423482ca993/cryptography-3.4.6.tar.gz (546kB)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    100% |################################| 552kB 1.4MB/s \u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    Complete output from command python setup.py egg_info:\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    Traceback (most recent call last):\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e      File \u0026#34;\u0026lt;string\u0026gt;\u0026#34;, line 1, in \u0026lt;module\u0026gt;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    ModuleNotFoundError: No module named \u0026#39;setuptools\u0026#39;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    ----------------------------------------\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eCommand \u0026#34;python setup.py egg_info\u0026#34; failed with error code 1 in /tmp/pip-build-6jesygn0/cryptography/\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e安装失败。\u003c/p\u003e\n\u003cp\u003e这里的错误说明，\u003ccode\u003epip\u003c/code\u003e要编译\u003ccode\u003ecryptography\u003c/code\u003e，必须它要找到\u003ccode\u003esetuptools\u003c/code\u003e，但结果没找到，于是报错了。\u003c/p\u003e\n\u003cp\u003e类似的问题，也不是仅仅发生在安装上面的库，安装其他库也如此，再如：\u003c/p\u003e\n\u003cfigure class=\"highlight plain\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e8\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e9\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e10\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e11\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003eroot@1a43d55f0524:/# pip3 install pyarrow\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eCollecting pyarrow\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  Downloading https://files.pythonhosted.org/packages/62/d3/a482d8a4039bf931ed6388308f0cc0541d0cab46f0bbff7c897a74f1c576/pyarrow-3.0.0.tar.gz (682kB)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    100% |################################| 686kB 1.1MB/s \u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    Complete output from command python setup.py egg_info:\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    Traceback (most recent call last):\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e      File \u0026#34;\u0026lt;string\u0026gt;\u0026#34;, line 1, in \u0026lt;module\u0026gt;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    ModuleNotFoundError: No module named \u0026#39;setuptools\u0026#39;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    ----------------------------------------\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eCommand \u0026#34;python setup.py egg_info\u0026#34; failed with error code 1 in /tmp/pip-build-heq6zwd7/pyarrow/\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e同样的错误。\u003c/p\u003e\n\u003cp\u003e当然，如果你碰巧这样安装了：\u003c/p\u003e\n\u003cfigure class=\"highlight plain\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003eroot@1a43d55f0524:/# pip3 install filprofiler\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eCollecting filprofiler\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  Downloading https://files.pythonhosted.org/packages/e3/a2/843e7b5f1aba27effb0146c7e564e2592bfc9344a8c8ef0d55245bd47508/filprofiler-0.7.2-cp36-cp36m-manylinux1_x86_64.whl (565kB)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    100% |################################| 573kB 1.8MB/s \u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eInstalling collected packages: filprofiler\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eSuccessfully installed filprofiler-0.7.2\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e在这里安装了\u003ccode\u003efilprofiler 0.7.2\u003c/code\u003e这是一个发布于2020年4月的比较老的\u003ccode\u003efilprofiler\u003c/code\u003e库的版本，目前（发表本文的时候）的最新版是2021年2月25日发布的0.16.0版。\u003c/p\u003e\n\u003cp\u003e这就是说，用老版本的\u003ccode\u003epip\u003c/code\u003e安装老版本的模块或者库，是能够成功的。但是，在不指定版本的时候，模式是安装该模块或库的最新版，则会报错。\u003c/p\u003e\n\u003ch2 id=\"解密\"\u003e\u003ca href=\"#解密\" class=\"headerlink\" title=\"解密\"\u003e\u003c/a\u003e解密\u003c/h2\u003e\u003cp\u003e安装Python的第三方库，往往需要编译由C/C++/Cython/Rust等开发的程序，为了免去从头开始编译的繁琐，开发者常常向PyPI（Python Package Index）上传已经编译好的代码，即“wheels”，俗称“轮子”，就是在上面的安装中所看到的扩展名是\u003ccode\u003ewhl\u003c/code\u003e的文件。 如果\u003ccode\u003epip\u003c/code\u003e找到了适用于你本地Python版本和操作系统的轮子，就会下载这个轮子，而不是下载源码。\u003c/p\u003e\n\u003cp\u003e以Linux为例，为了方便发布Python第三方包的编译结果程序（二进制文件），从而能让Python的“轮子”在Linux操作系统中工作，产生了一个名为\u003cstrong\u003emanylinux\u003c/strong\u003e的项目（\u003ca href=\"https://github.com/pypa/manylinux），目前已有三个不同的版本：manylinux1、manylinux2010、manylinux2014，你可以在下载的“轮子”的文件名中看到正在使用哪个变体。例如上面安装`filprofiler\" target=\"_blank\" rel=\"noopener\"\u003ehttps://github.com/pypa/manylinux），目前已有三个不同的版本：manylinux1、manylinux2010、manylinux2014，你可以在下载的“轮子”的文件名中看到正在使用哪个变体。例如上面安装`filprofiler\u003c/a\u003e 0.7.2\u003ccode\u003e时，所下载的“轮子”文件名是\u003c/code\u003efilprofiler-0.7.2-cp36-cp36m-manylinux1_x86_64.whl\u003ccode\u003e，这里所使用的就是\u003c/code\u003emanylinux1`。\u003c/p\u003e\n\u003cp\u003e对于\u003ccode\u003epip\u003c/code\u003e来说，老版本的\u003ccode\u003epip\u003c/code\u003e不支持\u003ccode\u003emanylinux2010\u003c/code\u003e，当然也不支持\u003ccode\u003emanylinux2014\u003c/code\u003e。上面演示中， Ubuntu 18.04默认的\u003ccode\u003epip\u003c/code\u003e太古老了，因此它只支持\u003ccode\u003emanylinux1\u003c/code\u003e。 这就把前面安装失败的内部原因揭示出来了。\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e如果您查看PyPI上\u003ca href=\"https://pypi.org/project/pyarrow/3.0.0/#files\" target=\"_blank\" rel=\"noopener\"\u003ePyArrow 3.0.0\u003c/a\u003e的文件下载列表，对于适用于Linux系统的文件而言，会发现只有\u003ccode\u003emanylinux2010\u003c/code\u003e和\u003ccode\u003emanlinux2014\u003c/code\u003e的\u003ccode\u003e.whl\u003c/code\u003e文件。那么，如果要用老版本的\u003ccode\u003epip\u003c/code\u003e安装它，就不支持，于是乎转而寻找源代码——安装失败的演示中都显示下载\u003ccode\u003e.gz\u003c/code\u003e文件，即为源代码。在这个列表中，你会发现一个名为\u003ccode\u003epyarrow-3.0.0.tar.gz\u003c/code\u003e的文件。\u003c/li\u003e\n\u003cli\u003e如果检查\u003ccode\u003efilprofiler\u003c/code\u003ePyPI文件\u003ca href=\"https://pypi.org/project/filprofiler/0.14.1/#files\" target=\"_blank\" rel=\"noopener\"\u003e下载列表\u003c/a\u003e，会看到有\u003ccode\u003emanylinux2010\u003c/code\u003e的\u003ccode\u003e.whl\u003c/code\u003e文件，但是没有源程序包，这是因为此第三方包的开发没有上传源代码。如果用老版本的\u003ccode\u003epip\u003c/code\u003e安装，就会从可下载的文件列表中从高版本向低版本注意查找，直到发现有\u003ccode\u003emanylinux1\u003c/code\u003e的\u003ccode\u003e.whl\u003c/code\u003e安装包为止。\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e所以，同样是用老版本的\u003ccode\u003epip\u003c/code\u003e，有的第三方库安装失败，有的成功了。事实上，多数情况下会失败的。\u003c/p\u003e\n\u003ch2 id=\"所以要升级\"\u003e\u003ca href=\"#所以要升级\" class=\"headerlink\" title=\"所以要升级\"\u003e\u003c/a\u003e所以要升级\u003c/h2\u003e\u003cp\u003e为了能够用最新版本的第三方包，并且还不需要下载源码自己编译，最好的方法是及时升级\u003ccode\u003epip\u003c/code\u003e。\u003c/p\u003e\n\u003cp\u003e常规的操作：\u003c/p\u003e\n\u003cfigure class=\"highlight python\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003epip install --upgrade pip\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e就这么简单。一般情况下，都能搞定。\u003c/p\u003e\n\u003cp\u003e如果上面的方法无能为力了，还可以这样做：\u003c/p\u003e\n\u003cfigure class=\"highlight plain\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003ecurl https://bootstrap.pypa.io/get-pip.py -o get-pip.py\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e$ python3 get-pip.py\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e如果你不打算修改当前环境中的\u003ccode\u003epip\u003c/code\u003e版本，还想用最新的，就只能创建虚拟环境了，在虚拟环境中用最新版本，不会影响其他环境中的\u003ccode\u003epip\u003c/code\u003e版本。\u003c/p\u003e\n\u003cfigure class=\"highlight plain\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e8\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e9\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e10\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e11\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e12\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003eroot@1a43d55f0524:/# python3 -m venv myvenv\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eroot@1a43d55f0524:/# . myvenv/bin/activate\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e(myvenv) root@1a43d55f0524:/# pip --version\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003epip 9.0.1 from /myvenv/lib/python3.6/site-packages (python 3.6)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e(myvenv) root@1a43d55f0524:/# pip install --upgrade pip\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eCollecting pip\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  Using cached https://files.pythonhosted.org/packages/fe/ef/60d7ba03b5c442309ef42e7d69959f73aacccd0d86008362a681c4698e83/pip-21.0.1-py3-none-any.whl\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eInstalling collected packages: pip\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  Found existing installation: pip 9.0.1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    Uninstalling pip-9.0.1:\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e      Successfully uninstalled pip-9.0.1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eSuccessfully installed pip-21.0.1\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e这样，在虚拟环境中，就有了最新版本的\u003ccode\u003epip\u003c/code\u003e，再装前面那两个没有成功的库：\u003c/p\u003e\n\u003cfigure class=\"highlight python\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e(myvenv) root@\u003cspan class=\"number\"\u003e1\u003c/span\u003ea43d55f0524:/\u003cspan class=\"comment\"\u003e# pip install cryptography filprofiler\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eCollecting cryptography\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  Downloading cryptography\u003cspan class=\"number\"\u003e-3.4\u003c/span\u003e\u003cspan class=\"number\"\u003e.6\u003c/span\u003e-cp36-abi3-manylinux2014_x86_64.whl (\u003cspan class=\"number\"\u003e3.2\u003c/span\u003e MB)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e     |\u003cspan class=\"comment\"\u003e################################| 3.2 MB 4.5 MB/s \u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e...\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eInstalling collected packages: pycparser, threadpoolctl, cffi, filprofiler, cryptography\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eSuccessfully installed cffi\u003cspan class=\"number\"\u003e-1.14\u003c/span\u003e\u003cspan class=\"number\"\u003e.5\u003c/span\u003e cryptography\u003cspan class=\"number\"\u003e-3.4\u003c/span\u003e\u003cspan class=\"number\"\u003e.6\u003c/span\u003e filprofiler\u003cspan class=\"number\"\u003e-0.14\u003c/span\u003e\u003cspan class=\"number\"\u003e.1\u003c/span\u003e pycparser\u003cspan class=\"number\"\u003e-2.20\u003c/span\u003e threadpoolctl\u003cspan class=\"number\"\u003e-2.1\u003c/span\u003e\u003cspan class=\"number\"\u003e.0\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e顺利完成。\u003c/p\u003e\n\u003ch2 id=\"释疑\"\u003e\u003ca href=\"#释疑\" class=\"headerlink\" title=\"释疑\"\u003e\u003c/a\u003e释疑\u003c/h2\u003e\u003cp\u003e看了前面的解释，虽然明白升级\u003ccode\u003epip\u003c/code\u003e的必要了——其实这也足够应付一般操作了，但可能还有一点点疑惑，为什么Linux系统搞出好几个\u003ccode\u003emanylinux\u003c/code\u003e的版本？一个不更好吗？为了满足好奇心，我们要从Python的扩展库编译说起，当然是以Linux系统为例。\u003c/p\u003e\n\u003cp\u003e在Linux系统中，编译好的Python的库必须基于标准C语言库，特别是GNU Libc（又名：glibc），可以用\u003ccode\u003eldd\u003c/code\u003e指令查看：\u003c/p\u003e\n\u003cfigure class=\"highlight plain\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003eroot@1a43d55f0524:/# cd myenv/lib/python3.6/site-packages\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eroot@1a43d55f0524:/# ldd cryptography/hazmat/bindings/_openssl.abi3.so \u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        linux-vdso.so.1 (0x00007ffdbea7b000)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        libpthread.so.0 =\u0026gt; /lib/x86_64-linux-gnu/libpthread.so.0 (0x00007fba7b1bf000)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        libc.so.6 =\u0026gt; /lib/x86_64-linux-gnu/libc.so.6 (0x00007fba7adce000)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        /lib64/ld-linux-x86-64.so.2 (0x00007fba7b7b0000)\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e上面列出的编译好的Python第三方库的依赖中，\u003ccode\u003e/lib/x86_64-linux-gnu/libc.so.6\u003c/code\u003e就是前面说的\u003ccode\u003eglibc\u003c/code\u003e。\u003c/p\u003e\n\u003cp\u003e如果基于新版的glibc编译代码，就会用到新版的接口，老版本就不能用了，这就意味着你的代码将无法在较早版本的glibc上运行，即无法在较早的Linux发行版上运行。\u003c/p\u003e\n\u003cp\u003e这就出现了版本兼容性问题，为此不同的工具提供了不同的解决方案。比如：Conda在编译的时候将所有旧版本的glibc头文件都包含进去，用这种方式就能兼容各种Linux版本。\u003c/p\u003e\n\u003cp\u003ePyPI中的二进制“轮子”则是以在老版本的Linux上进行编译来解决此问题，这就是\u003ccode\u003emanylinux\u003c/code\u003e项目的起源。比如：\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003emanylinux1对应CentOS 5\u003c/li\u003e\n\u003cli\u003emanylinux2010 对应于 CentOS 6\u003c/li\u003e\n\u003cli\u003emanylinux2014 对应于 CentOS 7\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e这样，在相应版本的\u003ccode\u003eglibc\u003c/code\u003e进行编译，就能与对应版本的Linux匹配了。\u003c/p\u003e\n\u003cp\u003e以上面列出的 CentOS 为例，每个版本都有各自的声明周期，对应于相应版本的操作系统，所以，就需要发布新的\u003ccode\u003epip\u003c/code\u003e。\u003c/p\u003e\n\u003ch2 id=\"结论\"\u003e\u003ca href=\"#结论\" class=\"headerlink\" title=\"结论\"\u003e\u003c/a\u003e结论\u003c/h2\u003e\u003cp\u003e勿需多言了，结论就是：必须升级\u003ccode\u003epip\u003c/code\u003e。\u003c/p\u003e\n\u003cp\u003e否则，安装第三方库就得自己编译，那将浪费很多时间。\u003c/p\u003e\n\u003ch2 id=\"参考文献\"\u003e\u003ca href=\"#参考文献\" class=\"headerlink\" title=\"参考文献\"\u003e\u003c/a\u003e参考文献\u003c/h2\u003e\u003cp\u003e[1]. Python大学实用教程. 齐伟. 北京：电子工业出版社\u003c/p\u003e\n\u003cp\u003e[2]. 跟老齐学Python：轻松入门. 齐伟. 北京：电子工业出版社\u003c/p\u003e\n\u003cp\u003e[3]. \u003ca href=\"https://pythonspeed.com/articles/upgrade-pip/\" target=\"_blank\" rel=\"noopener\"\u003ehttps://pythonspeed.com/articles/upgrade-pip/\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003e[4]. \u003ca href=\"https://www.itdiffer.com\" target=\"_blank\" rel=\"noopener\"\u003ehttps://www.itdiffer.com\u003c/a\u003e，此网站上有关于[1]、[2]的完整资料，包括但不限于勘误、说明、购买和部分视频等。\u003c/p\u003e\n\u003c/section\u003e\n    \u003c!-- Tags START --\u003e\n    \n    \u003c!-- Tags END --\u003e\n    \u003c!-- NAV START --\u003e\n    \n  \u003cdiv class=\"nav-container\"\u003e\n    \u003c!-- reverse left and right to put prev and next in a more logic postition --\u003e\n    \n      \u003ca class=\"nav-left\" href=\"/2021/02/23/golden-age/\"\u003e\n        \u003cspan class=\"nav-arrow\"\u003e← \u003c/span\u003e\n        \n          编程的黄金时代结束了吗？\n        \n      \u003c/a\u003e\n    \n    \n      \u003ca class=\"nav-right\" href=\"/2021/03/02/merge-dataframes/\"\u003e\n        \n          合并Pandas的DataFrame方法汇总\n        \n        \u003cspan class=\"nav-arrow\"\u003e →\u003c/span\u003e\n      \u003c/a\u003e\n    \n  \u003c/div\u003e\n\n    \u003c!-- NAV END --\u003e\n    \u003c!-- 打赏 START --\u003e\n    \n      \u003cdiv class=\"money-like\"\u003e\n        \u003cdiv class=\"reward-btn\"\u003e\n          赏\n          \u003cspan class=\"money-code\"\u003e\n            \u003cspan class=\"alipay-code\"\u003e\n              \u003cdiv class=\"code-image\"\u003e\u003c/div\u003e\n              \u003cb\u003e使用支付宝打赏\u003c/b\u003e\n            \u003c/span\u003e\n            \u003cspan class=\"wechat-code\"\u003e\n              \u003cdiv class=\"code-image\"\u003e\u003c/div\u003e\n              \u003cb\u003e使用微信打赏\u003c/b\u003e\n            \u003c/span\u003e\n          \u003c/span\u003e\n        \u003c/div\u003e\n        \u003cp class=\"notice\"\u003e若你觉得我的文章对你有帮助，欢迎点击上方按钮对我打赏\u003c/p\u003e\n      \u003c/div\u003e\n    \n    \u003c!-- 打赏 END --\u003e\n    \u003c!-- 二维码 START --\u003e\n    \u003c!--% if (theme.qrcode) { %--\u003e\n      \u003cdiv class=\"qrcode\"\u003e\n        \u003c!--canvas id=\"share-qrcode\"\u003e\u003c/!--canvas--\u003e\n        \u003cimg src=\"https://public-tuchuang.oss-cn-hangzhou.aliyuncs.com/WechatIMG6_20200109154827.jpeg\" width=\"400\"/\u003e\n        \u003cp class=\"notice\"\u003e关注微信公众号，读文章、听课程，提升技能\u003c/p\u003e\n      \u003c/div\u003e\n    \u003c!--% } %--\u003e\n    \u003c!-- 二维码 END --\u003e\n    \n      \u003c!-- No Comment --\u003e\n    \n  \u003c/article\u003e",
  "Date": "2021-02-27T00:00:00Z",
  "Author": "老齐教室"
}