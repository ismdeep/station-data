{
  "Source": "qiwsir.github.io",
  "Title": "Python中的正则表达式（二）",
  "Link": "https://qiwsir.github.io/2020/05/09/regular-expression-second/",
  "Content": "\u003carticle class=\"post-article\"\u003e\n    \u003ch2\u003ePython中的正则表达式（二）\u003c/h2\u003e\n    \u003cp class=\"post-date\"\u003e2020-05-09\u003c/p\u003e\n    \u003csection class=\"markdown-content\"\u003e\u003cp\u003e作者：老齐\u003c/p\u003e\n\u003cp\u003e与本文相关的图书推荐：《跟老齐学Python：轻松入门》\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"https://public-tuchuang.oss-cn-hangzhou.aliyuncs.com/%E8%BD%BB%E6%9D%BE%E5%85%A5%E9%97%A8_20200122130623.png\" alt=\"\"/\u003e\u003c/p\u003e\n\u003chr/\u003e\n\u003cp\u003e在上一篇（\u003ca href=\"https://itdiffer.com/2020/05/08/regular-expression-first/\" target=\"_blank\" rel=\"noopener\"\u003e《Python正则表达式（一）》\u003c/a\u003e）中，已经介绍了正则表达式的基本含义，并且对\u003ccode\u003ere\u003c/code\u003e模块中的元字符\u003ccode\u003e[ ]\u003c/code\u003e进行了说明，本文接续上文，介绍有关元字符。\u003c/p\u003e\n\u003ch2 id=\"re模块的元字符\"\u003e\u003ca href=\"#re模块的元字符\" class=\"headerlink\" title=\"re模块的元字符\"\u003e\u003c/a\u003e\u003ccode\u003ere\u003c/code\u003e模块的元字符\u003c/h2\u003e\u003ch3 id=\"点（-）\"\u003e\u003ca href=\"#点（-）\" class=\"headerlink\" title=\"点（.）\"\u003e\u003c/a\u003e点（\u003ccode\u003e.\u003c/code\u003e）\u003c/h3\u003e\u003cp\u003e点\u003ccode\u003e.\u003c/code\u003e（注意必须是英文状态下的）是一个通配符，即表示了任何符号（换行符除外）。\u003c/p\u003e\n\u003cfigure class=\"highlight plain\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; re.search(\u0026#39;foo.bar\u0026#39;, \u0026#39;fooxbar\u0026#39;)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026lt;_sre.SRE_Match object; span=(0, 7), match=\u0026#39;fooxbar\u0026#39;\u0026gt;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; print(re.search(\u0026#39;foo.bar\u0026#39;, \u0026#39;foobar\u0026#39;))\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eNone\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; print(re.search(\u0026#39;foo.bar\u0026#39;, \u0026#39;foo\\nbar\u0026#39;))\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eNone\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e在上面示例中，正则表达式\u003ccode\u003efoo.bar\u003c/code\u003e表示的匹配规则是：先是三个字符\u003ccode\u003efoo\u003c/code\u003e，然后用通配符\u003ccode\u003e.\u003c/code\u003e说明第四个字符可以是除了换行符之外的任何字符，第五个及其后的字符是\u003ccode\u003ebar\u003c/code\u003e。显然，\u003ccode\u003efooxbar\u003c/code\u003e符合这个规则，而\u003ccode\u003efoobar\u003c/code\u003e和\u003ccode\u003efoo\\nbar\u003c/code\u003e不符合，前者\u003ccode\u003efoo\u003c/code\u003e之后是\u003ccode\u003eb\u003c/code\u003e，但\u003ccode\u003eb\u003c/code\u003e之后是\u003ccode\u003ear\u003c/code\u003e而不是\u003ccode\u003ebar\u003c/code\u003e；后者中间是一个换行符\u003ccode\u003e\\n\u003c/code\u003e。\u003c/p\u003e\n\u003ch3 id=\"w和-W\"\u003e\u003ca href=\"#w和-W\" class=\"headerlink\" title=\"\\w和\\W\"\u003e\u003c/a\u003e\u003ccode\u003e\\w\u003c/code\u003e和\u003ccode\u003e\\W\u003c/code\u003e\u003c/h3\u003e\u003cp\u003e\u003ccode\u003e\\w\u003c/code\u003e匹配全部由字母和数字组成的字符串，即大写、小写字母以及0到9的数字，注意，也包括下划线。通常，也可以用\u003ccode\u003e[a-zA-Z0-9]\u003c/code\u003e来替代它。\u003c/p\u003e\n\u003cfigure class=\"highlight plain\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; re.search(\u0026#39;\\w\u0026#39;, \u0026#39;#(.a$@\u0026amp;\u0026#39;)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026lt;_sre.SRE_Match object; span=(3, 4), match=\u0026#39;a\u0026#39;\u0026gt;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; re.search(\u0026#39;[a-zA-Z0-9_]\u0026#39;, \u0026#39;#(.a$@\u0026amp;\u0026#39;)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026lt;_sre.SRE_Match object; span=(3, 4), match=\u0026#39;a\u0026#39;\u0026gt;\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e显然，字符串\u003ccode\u003e\u0026#39;#(.a$@\u0026amp;\u0026#39;\u003c/code\u003e中只有一个字母，上面演示中也都显示，匹配了字母\u003ccode\u003ea\u003c/code\u003e。\u003c/p\u003e\n\u003cp\u003e如果是\u003ccode\u003e\\W\u003c/code\u003e（大写），则意味着与\u003ccode\u003e\\w\u003c/code\u003e相反，不包括字母、数字和下划线。\u003c/p\u003e\n\u003cfigure class=\"highlight plain\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; re.search(\u0026#39;\\W\u0026#39;, \u0026#39;a_1*3Qb\u0026#39;)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026lt;_sre.SRE_Match object; span=(3, 4), match=\u0026#39;*\u0026#39;\u0026gt;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; re.search(\u0026#39;[^a-zA-Z0-9_]\u0026#39;, \u0026#39;a_1*3Qb\u0026#39;)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026lt;_sre.SRE_Match object; span=(3, 4), match=\u0026#39;*\u0026#39;\u0026gt;\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e字符串\u003ccode\u003e\u0026#39;a_1*3Qb\u0026#39;\u003c/code\u003e中的\u003ccode\u003e*\u003c/code\u003e不属于字母、数字、下划线集合，在上述示例中匹配到了。注意，\u003ccode\u003e[^a-zA-Z0-9_]\u003c/code\u003e中以\u003ccode\u003e^\u003c/code\u003e开头，表示对后面字符集合的补集（取反）。\u003c/p\u003e\n\u003ch3 id=\"d和-D\"\u003e\u003ca href=\"#d和-D\" class=\"headerlink\" title=\"\\d和\\D\"\u003e\u003c/a\u003e\u003ccode\u003e\\d\u003c/code\u003e和\u003ccode\u003e\\D\u003c/code\u003e\u003c/h3\u003e\u003cp\u003e\u003ccode\u003e\\d\u003c/code\u003e匹配由数字组成的字符，与\u003ccode\u003e[0-9]\u003c/code\u003e相当。\u003ccode\u003e\\D\u003c/code\u003e同样是\u003ccode\u003e\\d\u003c/code\u003e取反，即\u003ccode\u003e[^0-9]\u003c/code\u003e。\u003c/p\u003e\n\u003cfigure class=\"highlight plain\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; re.search(\u0026#39;\\d\u0026#39;, \u0026#39;abc4def\u0026#39;)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026lt;_sre.SRE_Match object; span=(3, 4), match=\u0026#39;4\u0026#39;\u0026gt;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; re.search(\u0026#39;\\D\u0026#39;, \u0026#39;234Q678\u0026#39;)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026lt;_sre.SRE_Match object; span=(3, 4), match=\u0026#39;Q\u0026#39;\u0026gt;\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003ch3 id=\"s和-S\"\u003e\u003ca href=\"#s和-S\" class=\"headerlink\" title=\"\\s和\\S\"\u003e\u003c/a\u003e\u003ccode\u003e\\s\u003c/code\u003e和\u003ccode\u003e\\S\u003c/code\u003e\u003c/h3\u003e\u003cp\u003e\u003ccode\u003e\\s\u003c/code\u003e匹配任何空白字符，包括空格、制表符、换行符等等。等价于 \u003ccode\u003e[\\f\\n\\r\\t\\v]\u003c/code\u003e。\u003c/p\u003e\n\u003cfigure class=\"highlight plain\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; re.search(\u0026#39;\\s\u0026#39;, \u0026#39;foo\\nbar baz\u0026#39;)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026lt;_sre.SRE_Match object; span=(3, 4), match=\u0026#39;\\n\u0026#39;\u0026gt;\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e与前面一样，\u003ccode\u003e\\S\u003c/code\u003e也是对\u003ccode\u003e\\s\u003c/code\u003e取反，不匹配任何空白字符。\u003c/p\u003e\n\u003cfigure class=\"highlight plain\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; re.search(\u0026#39;\\S\u0026#39;, \u0026#39;  \\n foo  \\n  \u0026#39;)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026lt;_sre.SRE_Match object; span=(4, 5), match=\u0026#39;f\u0026#39;\u0026gt;\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e上面几个元字符，也可以写到一个集合中。\u003c/p\u003e\n\u003cfigure class=\"highlight plain\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; re.search(\u0026#39;[\\d\\w\\s]\u0026#39;, \u0026#39;---3---\u0026#39;)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026lt;_sre.SRE_Match object; span=(3, 4), match=\u0026#39;3\u0026#39;\u0026gt;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; re.search(\u0026#39;[\\d\\w\\s]\u0026#39;, \u0026#39;---a---\u0026#39;)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026lt;_sre.SRE_Match object; span=(3, 4), match=\u0026#39;a\u0026#39;\u0026gt;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; re.search(\u0026#39;[\\d\\w\\s]\u0026#39;, \u0026#39;--- ---\u0026#39;)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026lt;_sre.SRE_Match object; span=(3, 4), match=\u0026#39; \u0026#39;\u0026gt;\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e\u003ccode\u003e[\\d\\w\\s]\u003c/code\u003e的含义就是匹配任何数字、字母和空白字符，\u003ccode\u003e-\u003c/code\u003e则不在匹配之列。\u003c/p\u003e\n\u003ch2 id=\"转义符\"\u003e\u003ca href=\"#转义符\" class=\"headerlink\" title=\"转义符\"\u003e\u003c/a\u003e转义符\u003c/h2\u003e\u003cp\u003e跟Python中的字符串中规定一样，在正则表达式中，也用\u003ccode\u003e\\\u003c/code\u003e表示对后面的字符转移。\u003c/p\u003e\n\u003cfigure class=\"highlight plain\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; re.search(\u0026#39;.\u0026#39;, \u0026#39;foo.bar\u0026#39;)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026lt;_sre.SRE_Match object; span=(0, 1), match=\u0026#39;f\u0026#39;\u0026gt;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; re.search(\u0026#39;\\.\u0026#39;, \u0026#39;foo.bar\u0026#39;)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026lt;_sre.SRE_Match object; span=(3, 4), match=\u0026#39;.\u0026#39;\u0026gt;\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e第一个示例中的\u003ccode\u003e.\u003c/code\u003e，表示的是通配符，即任何字符。因此匹配了后面字符串中的第一个\u003ccode\u003ef\u003c/code\u003e。第二个示例中的\u003ccode\u003e\\.\u003c/code\u003e，因为使用了转移符，它表示要匹配一个英文的句点，不再是通配符了，所以最终匹配了后面字符串中的句点符号。\u003c/p\u003e\n\u003cp\u003e使用\u003ccode\u003e\\\u003c/code\u003e，需要特别小心。\u003c/p\u003e\n\u003cfigure class=\"highlight plain\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; s = r\u0026#39;foo\\bar\u0026#39;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; print(s)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003efoo\\bar\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; s\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026#39;foo\\\\bar\u0026#39;\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e这里创立了原始字符串\u003ccode\u003es\u003c/code\u003e，注意，如果单单看\u003ccode\u003eprint(s)\u003c/code\u003e的结果，容易产生误解。因为这里使用了原始字符串\u003ccode\u003er\u0026#39;foo\\bar\u003c/code\u003e，其中的\u003ccode\u003e\\\u003c/code\u003e就表示了原本的反斜杠符号，而不是转义符。当执行\u003ccode\u003es\u003c/code\u003e时，会看到，Python解析器会将其解析为\u003ccode\u003e\u0026#39;foo\\\\bar\u0026#39;\u003c/code\u003e，也就是这种方式的字符串和前面定义的原始字符串是一样的，或者说前面定义原始字符串，在Python使用它的时候，会被解析为\u003ccode\u003e\u0026#39;foo\\\\bar\u0026#39;\u003c/code\u003e，这就是我们要注意的地方。\u003c/p\u003e\n\u003cp\u003e下面要匹配\u003ccode\u003es\u003c/code\u003e里面的\u003ccode\u003e\\\u003c/code\u003e，按照通常方法，这样来试试：\u003c/p\u003e\n\u003cfigure class=\"highlight plain\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e8\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e9\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e10\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e11\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e12\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e13\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e14\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e15\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e16\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e17\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; re.search(\u0026#39;\\\\\u0026#39;, s)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eTraceback (most recent call last):\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  File \u0026#34;\u0026lt;pyshell#3\u0026gt;\u0026#34;, line 1, in \u0026lt;module\u0026gt;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    re.search(\u0026#39;\\\\\u0026#39;, s)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  File \u0026#34;C:\\Python36\\lib\\re.py\u0026#34;, line 182, in search\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    return _compile(pattern, flags).search(string)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  File \u0026#34;C:\\Python36\\lib\\re.py\u0026#34;, line 301, in _compile\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    p = sre_compile.compile(pattern, flags)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  File \u0026#34;C:\\Python36\\lib\\sre_compile.py\u0026#34;, line 562, in compile\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    p = sre_parse.parse(p, flags)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  File \u0026#34;C:\\Python36\\lib\\sre_parse.py\u0026#34;, line 848, in parse\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    source = Tokenizer(str)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  File \u0026#34;C:\\Python36\\lib\\sre_parse.py\u0026#34;, line 231, in __init__\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    self.__next()\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e  File \u0026#34;C:\\Python36\\lib\\sre_parse.py\u0026#34;, line 245, in __next\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    self.string, len(self.string) - 1) from None\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003esre_constants.error: bad escape (end of pattern) at position 0\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e出问题了，原因就在于Python解析器实际使用的是\u003ccode\u003e\u0026#39;foo\\\\bar\u0026#39;\u003c/code\u003e，那么，这里就有了两个反斜杠，第一个反斜杠表示的是“转移符”，并把这个符号传给了\u003ccode\u003ere.search()\u003c/code\u003e，正则表达式收到了单个反斜杠，但这不是有意义字符，因此会出现混乱，导致了错误。\u003c/p\u003e\n\u003cp\u003e下面演示两种解决方式：\u003c/p\u003e\n\u003cfigure class=\"highlight plain\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; re.search(\u0026#39;\\\\\\\\\u0026#39;, s)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026lt;_sre.SRE_Match object; span=(3, 4), match=\u0026#39;\\\\\u0026#39;\u0026gt;\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e或者：\u003c/p\u003e\n\u003cfigure class=\"highlight plain\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; re.search(r\u0026#39;\\\\\u0026#39;, s)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026lt;_sre.SRE_Match object; span=(3, 4), match=\u0026#39;\\\\\u0026#39;\u0026gt;\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003ch2 id=\"定位字符\"\u003e\u003ca href=\"#定位字符\" class=\"headerlink\" title=\"定位字符\"\u003e\u003c/a\u003e定位字符\u003c/h2\u003e\u003cp\u003e定位字符是零宽度匹配，表示定位的符号不匹配字符串中的任何实际字符，并且不会使用任何搜索字符串。定位字符指示搜索字符串中必须发生匹配的特定位置。\u003c/p\u003e\n\u003ch3 id=\"或-A\"\u003e\u003ca href=\"#或-A\" class=\"headerlink\" title=\"^或\\A\"\u003e\u003c/a\u003e\u003ccode\u003e^\u003c/code\u003e或\u003ccode\u003e\\A\u003c/code\u003e\u003c/h3\u003e\u003cp\u003e\u003ccode\u003e^\u003c/code\u003e或\u003ccode\u003e\\A\u003c/code\u003e表示匹配输入字符串的开始位置。但是，当它们在方括号表达式中使用时，表示不接受该方括号表达式中的字符集合，即补集或相反。如果要匹配\u003ccode\u003e^\u003c/code\u003e字符本身，必须要用\u003ccode\u003e\\^\u003c/code\u003e。\u003c/p\u003e\n\u003cfigure class=\"highlight plain\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; re.search(\u0026#39;^foo\u0026#39;, \u0026#39;foobar\u0026#39;)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026lt;_sre.SRE_Match object; span=(0, 3), match=\u0026#39;foo\u0026#39;\u0026gt;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; print(re.search(\u0026#39;^foo\u0026#39;, \u0026#39;barfoo\u0026#39;))\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eNone\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e正则表达式\u003ccode\u003e^foo\u003c/code\u003e表示要匹配以\u003ccode\u003efoo\u003c/code\u003e开头的字符串，\u003ccode\u003e\u0026#39;foobar\u0026#39;\u003c/code\u003e符合规则，\u003ccode\u003e\u0026#39;barfoo\u0026#39;\u003c/code\u003e不符合规则。\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003e\\A\u003c/code\u003e的作用与\u003ccode\u003e^\u003c/code\u003e一样。\u003c/p\u003e\n\u003cfigure class=\"highlight plain\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; re.search(\u0026#39;\\Afoo\u0026#39;, \u0026#39;foobar\u0026#39;)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026lt;_sre.SRE_Match object; span=(0, 3), match=\u0026#39;foo\u0026#39;\u0026gt;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; print(re.search(\u0026#39;\\Afoo\u0026#39;, \u0026#39;barfoo\u0026#39;))\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eNone\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003ch3 id=\"或-Z\"\u003e\u003ca href=\"#或-Z\" class=\"headerlink\" title=\"$或\\Z\"\u003e\u003c/a\u003e\u003ccode\u003e$\u003c/code\u003e或\u003ccode\u003e\\Z\u003c/code\u003e\u003c/h3\u003e\u003cp\u003e与前述\u003ccode\u003e^\u003c/code\u003e相对应，\u003ccode\u003e$\u003c/code\u003e表示在字符串的结尾部分搜索相应匹配。\u003c/p\u003e\n\u003cfigure class=\"highlight plain\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e8\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e9\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; re.search(\u0026#39;bar$\u0026#39;, \u0026#39;foobar\u0026#39;)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026lt;_sre.SRE_Match object; span=(3, 6), match=\u0026#39;bar\u0026#39;\u0026gt;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; print(re.search(\u0026#39;bar$\u0026#39;, \u0026#39;barfoo\u0026#39;))\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eNone\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; re.search(\u0026#39;bar\\Z\u0026#39;, \u0026#39;foobar\u0026#39;)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026lt;_sre.SRE_Match object; span=(3, 6), match=\u0026#39;bar\u0026#39;\u0026gt;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; print(re.search(\u0026#39;bar\\Z\u0026#39;, \u0026#39;barfoo\u0026#39;))\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eNone\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e上面的示例中，\u003ccode\u003ebar$\u003c/code\u003e表示搜索字符串结尾是\u003ccode\u003ebar\u003c/code\u003e，\u003ccode\u003efoobar\u003c/code\u003e符合此正则表达式的规则，\u003ccode\u003ebarfoo\u003c/code\u003e则不符合。在这里，\u003ccode\u003e\\Z\u003c/code\u003e与\u003ccode\u003e$\u003c/code\u003e的效果一样。\u003c/p\u003e\n\u003cp\u003e但是，如果在下面的示例中，就只能使用\u003ccode\u003e$\u003c/code\u003e。\u003c/p\u003e\n\u003cfigure class=\"highlight plain\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; re.search(\u0026#39;bar$\u0026#39;, \u0026#39;foobar\\n\u0026#39;)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026lt;_sre.SRE_Match object; span=(3, 6), match=\u0026#39;bar\u0026#39;\u0026gt;\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003ch3 id=\"b\"\u003e\u003ca href=\"#b\" class=\"headerlink\" title=\"\\b\"\u003e\u003c/a\u003e\u003ccode\u003e\\b\u003c/code\u003e\u003c/h3\u003e\u003cp\u003e\u003ccode\u003e\\b\u003c/code\u003e匹配一个单词（也包括中文字符）的边界，即单词的分界。\u003c/p\u003e\n\u003cp\u003e例如这样一句话：\u003ccode\u003eLaoqi Classroom\u003c/code\u003e，其中每个字符都有一个位置，包括空白（空格）也如此。如果某个字符后面的字符不是字母、数字和下划线，即不全是\u003ccode\u003e\\w\u003c/code\u003e所匹配的字符，那么\u003ccode\u003e\\b\u003c/code\u003e就会匹配后面的字符的后面（但不是下一个字符）。例如这句话中\u003ccode\u003ei\u003c/code\u003e后面是空格，不在\u003ccode\u003e\\w\u003c/code\u003e范围内，那么\u003ccode\u003e\\b\u003c/code\u003e就会匹配空格后面、\u003ccode\u003eC\u003c/code\u003e前面的位置。\u003c/p\u003e\n\u003cp\u003e例如：\u003c/p\u003e\n\u003cfigure class=\"highlight plain\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; re.search(r\u0026#39;\\bbar\u0026#39;, \u0026#39;foo bar\u0026#39;)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026lt;_sre.SRE_Match object; span=(4, 7), match=\u0026#39;bar\u0026#39;\u0026gt;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; re.search(r\u0026#39;\\bbar\u0026#39;, \u0026#39;foo.bar\u0026#39;)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026lt;_sre.SRE_Match object; span=(4, 7), match=\u0026#39;bar\u0026#39;\u0026gt;\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e字符串\u003ccode\u003efoo bar\u003c/code\u003e中有空格，正则表达式\u003ccode\u003er\u0026#39;\\bbar\u0026#39;\u003c/code\u003e就匹配这个字符后面的位置，并且此位置之后是\u003ccode\u003ebar\u003c/code\u003e。同理\u003ccode\u003efoo.bar\u003c/code\u003e亦然。\u003c/p\u003e\n\u003cp\u003e但是：\u003c/p\u003e\n\u003cfigure class=\"highlight plain\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; print(re.search(r\u0026#39;\\bbar\u0026#39;, \u0026#39;foobar\u0026#39;))\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eNone\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e则不然。因为\u003ccode\u003efoobar\u003c/code\u003e本身没有\u003ccode\u003e\\b\u003c/code\u003e要匹配的位置。\u003c/p\u003e\n\u003cfigure class=\"highlight plain\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e8\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; re.search(r\u0026#39;foo\\b\u0026#39;, \u0026#39;foo bar\u0026#39;)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026lt;_sre.SRE_Match object; span=(0, 3), match=\u0026#39;foo\u0026#39;\u0026gt;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; re.search(r\u0026#39;foo\\b\u0026#39;, \u0026#39;foo.bar\u0026#39;)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026lt;_sre.SRE_Match object; span=(0, 3), match=\u0026#39;foo\u0026#39;\u0026gt;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; print(re.search(r\u0026#39;foo\\b\u0026#39;, \u0026#39;foobar\u0026#39;))\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eNone\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e按照前述解释，上面示例不难理解。读者可以自己尝试梳理一番。\u003c/p\u003e\n\u003cfigure class=\"highlight plain\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; re.search(r\u0026#39;\\bbar\\b\u0026#39;, \u0026#39;foo bar baz\u0026#39;)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026lt;_sre.SRE_Match object; span=(4, 7), match=\u0026#39;bar\u0026#39;\u0026gt;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; re.search(r\u0026#39;\\bbar\\b\u0026#39;, \u0026#39;foo(bar)baz\u0026#39;)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026lt;_sre.SRE_Match object; span=(4, 7), match=\u0026#39;bar\u0026#39;\u0026gt;\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; print(re.search(r\u0026#39;\\bbar\\b\u0026#39;, \u0026#39;foobarbaz\u0026#39;))\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eNone\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e这几个示例中，则出现了两个\u003ccode\u003e\\b\u003c/code\u003e，其含义是要匹配在\u003ccode\u003ebar\u003c/code\u003e两侧都能找到“位置”的字符串。\u003c/p\u003e\n\u003cp\u003e另外，\u003ccode\u003e\\B\u003c/code\u003e则是对\u003ccode\u003e\\b\u003c/code\u003e的取反。\u003c/p\u003e\n\u003cfigure class=\"highlight plain\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e8\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; print(re.search(r\u0026#39;\\Bfoo\\B\u0026#39;, \u0026#39;foo\u0026#39;))\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eNone\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; print(re.search(r\u0026#39;\\Bfoo\\B\u0026#39;, \u0026#39;.foo.\u0026#39;))\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eNone\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026gt;\u0026gt;\u0026gt; re.search(r\u0026#39;\\Bfoo\\B\u0026#39;, \u0026#39;barfoobaz\u0026#39;)\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u0026lt;_sre.SRE_Match object; span=(3, 6), match=\u0026#39;foo\u0026#39;\u0026gt;\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\u003cp\u003e（未完，待续）\u003c/p\u003e\n\u003cp\u003e参考资料：\u003ca href=\"https://realpython.com/regex-python/\" target=\"_blank\" rel=\"noopener\"\u003ehttps://realpython.com/regex-python/\u003c/a\u003e\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e搜索技术问答的公众号：老齐教室\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cblockquote\u003e\n\u003cp\u003e在公众号中回复：\u003cstrong\u003e老齐\u003c/strong\u003e，可查看所有文章、书籍、课程。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003c/section\u003e\n    \u003c!-- Tags START --\u003e\n    \n    \u003c!-- Tags END --\u003e\n    \u003c!-- NAV START --\u003e\n    \n  \u003cdiv class=\"nav-container\"\u003e\n    \u003c!-- reverse left and right to put prev and next in a more logic postition --\u003e\n    \n      \u003ca class=\"nav-left\" href=\"/2020/05/08/regular-expression-first/\"\u003e\n        \u003cspan class=\"nav-arrow\"\u003e← \u003c/span\u003e\n        \n          Python中的正则表达式（一）\n        \n      \u003c/a\u003e\n    \n    \n      \u003ca class=\"nav-right\" href=\"/2020/05/12/regular-expression-third/\"\u003e\n        \n          Python中的正则表达式（三）\n        \n        \u003cspan class=\"nav-arrow\"\u003e →\u003c/span\u003e\n      \u003c/a\u003e\n    \n  \u003c/div\u003e\n\n    \u003c!-- NAV END --\u003e\n    \u003c!-- 打赏 START --\u003e\n    \n      \u003cdiv class=\"money-like\"\u003e\n        \u003cdiv class=\"reward-btn\"\u003e\n          赏\n          \u003cspan class=\"money-code\"\u003e\n            \u003cspan class=\"alipay-code\"\u003e\n              \u003cdiv class=\"code-image\"\u003e\u003c/div\u003e\n              \u003cb\u003e使用支付宝打赏\u003c/b\u003e\n            \u003c/span\u003e\n            \u003cspan class=\"wechat-code\"\u003e\n              \u003cdiv class=\"code-image\"\u003e\u003c/div\u003e\n              \u003cb\u003e使用微信打赏\u003c/b\u003e\n            \u003c/span\u003e\n          \u003c/span\u003e\n        \u003c/div\u003e\n        \u003cp class=\"notice\"\u003e若你觉得我的文章对你有帮助，欢迎点击上方按钮对我打赏\u003c/p\u003e\n      \u003c/div\u003e\n    \n    \u003c!-- 打赏 END --\u003e\n    \u003c!-- 二维码 START --\u003e\n    \u003c!--% if (theme.qrcode) { %--\u003e\n      \u003cdiv class=\"qrcode\"\u003e\n        \u003c!--canvas id=\"share-qrcode\"\u003e\u003c/!--canvas--\u003e\n        \u003cimg src=\"https://public-tuchuang.oss-cn-hangzhou.aliyuncs.com/WechatIMG6_20200109154827.jpeg\" width=\"400\"/\u003e\n        \u003cp class=\"notice\"\u003e关注微信公众号，读文章、听课程，提升技能\u003c/p\u003e\n      \u003c/div\u003e\n    \u003c!--% } %--\u003e\n    \u003c!-- 二维码 END --\u003e\n    \n      \u003c!-- No Comment --\u003e\n    \n  \u003c/article\u003e",
  "Date": "2020-05-09T00:00:00Z",
  "Author": "老齐教室"
}