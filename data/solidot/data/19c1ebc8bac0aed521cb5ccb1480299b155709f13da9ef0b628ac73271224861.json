{
  "Source": "solidot",
  "Title": "“编程很难”——一个遗毒无穷的错误观",
  "Link": "https://www.solidot.org/story?sid=68556",
  "Content": "\u003cdiv class=\"p_mainnew\"\u003e\n\t\t\t\t\t语言是一种强大的工具。\u003ca href=\"https://cacm.acm.org/magazines/2021/8/254304-what-does-saying-that-programming-is-hard-really-say-and-about-whom/fulltext\" target=\"_blank\"\u003e\u003cu\u003e编程语言难学难懂\u003c/u\u003e\u003c/a\u003e在很多教师和研究人员眼中似乎成了一种共识。学术论文经常会强调编程的难度，好像这个结论天经地义、不容辩驳。但批评之声已经出现，人们认为这种立场可能导致教学实践缺乏反思、严重影响学生成绩，并很可能对教育的多样性与公平性产生冲击。事实上，一件事物“很困难”的概念会通过多种日常机制被四处传递扩散，进而在不知不觉当中经由我们的教学习惯、教科书语言、术语、教室中肃穆的氛围、工具乃至编程语言的设计特性等被固化为一种事实。最典型的例子之一当数编程错误信息，这类信息在几乎所有语言中都成了混乱、沮丧与恐怖的化身，而且往往在人们眼中既神秘又难以理解。“编程很难”的观念被我们的课堂、工作场所、学术文献乃至媒体资讯所一再强化，但这种基本立场更多反映的只是种意识形态化的判断，缺乏充足的现实证据。更重要的是，编程很难的说法很可能引发明确的直接影响，通过持续传达的间接信息给学生、教育工作者、社区乃至计算学科本身产生难以预料的后果。而这一切，长期以来并没能得到充分关注。\t\t\t\t\t                \u003c/div\u003e",
  "Date": "2021-08-16T08:36:52Z",
  "Author": "wanwan"
}