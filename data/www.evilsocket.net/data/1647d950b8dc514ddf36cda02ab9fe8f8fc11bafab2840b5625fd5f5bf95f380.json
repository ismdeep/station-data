{
  "Source": "www.evilsocket.net",
  "Title": "How to Install Metasploit on OS X Mavericks and Yosemite, an Updated Guide",
  "Link": "https://www.evilsocket.net/2015/01/16/How-to-install-Metasploit-on-OS-X-Mavericks-and-Yosemite-an-Updated-Guide/",
  "Content": "\u003cdiv class=\"content\" itemprop=\"articleBody\"\u003e\n\u003cp\u003eToday I tried to install the \u003cstrong\u003eMetasploit\u003c/strong\u003e framework both on my Mavericks MacBook Pro and my Yosemite MacBook Air, unfortunately all the guides I’ve found seem to be quite outdated and various hacks are needed to make the actual process really work.\u003cbr/\u003eSo I decided to write an updated guide on my blog, just in case someone else will need it ^_^\u003c/p\u003e\n\u003cspan id=\"more\"\u003e\u003c/span\u003e\n\u003ch2 id=\"Requirements\"\u003e\u003ca href=\"#Requirements\" class=\"headerlink\" title=\"Requirements\"\u003e\u003c/a\u003eRequirements\u003c/h2\u003e\u003cp\u003eFirst thing first, you will need to install some requirements, if you are a developer/hacker you will probably have them already, but you never know.\u003c/p\u003e\n\u003ch5 id=\"XCode-Command-Line-Tools\"\u003e\u003ca href=\"#XCode-Command-Line-Tools\" class=\"headerlink\" title=\"XCode Command Line Tools\"\u003e\u003c/a\u003eXCode Command Line Tools\u003c/h5\u003e\u003cp\u003eIssue the following command on your terminal:\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003excode-select --install\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eAnd choose the \u003cstrong\u003eInstall\u003c/strong\u003e option to install XCode command line tools needed for compilation, etc.\u003c/p\u003e\n\u003ch5 id=\"Java\"\u003e\u003ca href=\"#Java\" class=\"headerlink\" title=\"Java\"\u003e\u003c/a\u003eJava\u003c/h5\u003e\u003cp\u003eMake sure you have the latest \u003cstrong\u003eJava SE JDK\u003c/strong\u003e from Oracle, you can verify it issuing the command:\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003ejava -version\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eOtherwise download it from \u003ca target=\"_blank\" rel=\"noopener\" href=\"http://www.oracle.com/technetwork/java/javase/downloads/index.html\"\u003ehere\u003c/a\u003e and install it.\u003c/p\u003e\n\u003ch5 id=\"Homebrew\"\u003e\u003ca href=\"#Homebrew\" class=\"headerlink\" title=\"Homebrew\"\u003e\u003c/a\u003eHomebrew\u003c/h5\u003e\u003cp\u003eHomebrew is a package manager for OS X, well not really a package manager since it just manages “formulas”, which are basically build scripts for open source projects ( very much like Arch / Slackware Linux build scripts ), you will need it to install other libraries and binaries.\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003eruby -e \u0026#34;$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)\u0026#34;\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eThen update your \u003cstrong\u003ePATH\u003c/strong\u003e environment variable with the homebrew binary folder:\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003eecho PATH=/usr/local/bin:/usr/local/sbin:$PATH \u0026gt;\u0026gt; ~/.bash_profile\nsource ~/.bash_profile\nbrew tap homebrew/versions\u003c/code\u003e\u003c/pre\u003e\n\u003ch5 id=\"Nmap\"\u003e\u003ca href=\"#Nmap\" class=\"headerlink\" title=\"Nmap\"\u003e\u003c/a\u003eNmap\u003c/h5\u003e\u003cp\u003eOnce you have homebrew installed, you can start using it ( \u003cstrong\u003eNOTE:\u003c/strong\u003e Don’t use it with \u003cstrong\u003esudo\u003c/strong\u003e, it’s not required ):\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003ebrew install nmap\u003c/code\u003e\u003c/pre\u003e\n\u003ch5 id=\"LibXML2\"\u003e\u003ca href=\"#LibXML2\" class=\"headerlink\" title=\"LibXML2\"\u003e\u003c/a\u003eLibXML2\u003c/h5\u003e\u003cp\u003eThis is needed by the nokogiri gem:\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003ebrew install libxml2\u003c/code\u003e\u003c/pre\u003e\n\u003ch5 id=\"PostgreSQL\"\u003e\u003ca href=\"#PostgreSQL\" class=\"headerlink\" title=\"PostgreSQL\"\u003e\u003c/a\u003ePostgreSQL\u003c/h5\u003e\u003cpre\u003e\u003ccode\u003ebrew install postgresql --without-ossp-uuid\u003c/code\u003e\u003c/pre\u003e\n\u003ch5 id=\"PostgreSQL-Configuration\"\u003e\u003ca href=\"#PostgreSQL-Configuration\" class=\"headerlink\" title=\"PostgreSQL Configuration\"\u003e\u003c/a\u003ePostgreSQL Configuration\u003c/h5\u003e\u003cp\u003eInitialize the database ( you might already have this file, it’s not a problem ):\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003einitdb /usr/local/var/postgres\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eMake sure it’s started after user login:\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003emkdir -p ~/Library/LaunchAgents\ncp /usr/local/Cellar/postgresql/9.4.0/homebrew.mxcl.postgresql.plist ~/Library/LaunchAgents/\nlaunchctl load -w ~/Library/LaunchAgents/homebrew.mxcl.postgresql.plist\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003e( replace 9.4.0 with the version you have installed )\u003c/p\u003e\n\u003cp\u003eCreate the db for the metasploit framework:\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003ecreateuser msf -P -h localhost\ncreatedb -O msf msf -h localhost\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003e( Take note of the password you used, you will need it later )\u003c/p\u003e\n\u003ch5 id=\"Clone-the-Metasploit-Repo\"\u003e\u003ca href=\"#Clone-the-Metasploit-Repo\" class=\"headerlink\" title=\"Clone the Metasploit Repo\"\u003e\u003c/a\u003eClone the Metasploit Repo\u003c/h5\u003e\u003cp\u003eTime for metasploit itself:\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003ecd /usr/local/share/\ngit clone https://github.com/rapid7/metasploit-framework.git\ncd metasploit-framework\nfor MSF in $(ls msf*); do ln -s /usr/local/share/metasploit-framework/$MSF /usr/local/bin/$MSF;done\nsudo chmod go+w /etc/profile\nsudo echo export MSF_DATABASE_CONFIG=/usr/local/share/metasploit-framework/config/database.yml \u0026gt;\u0026gt; /etc/profile\u003c/code\u003e\u003c/pre\u003e\n\u003ch5 id=\"HACK-Nokogiri-Gem\"\u003e\u003ca href=\"#HACK-Nokogiri-Gem\" class=\"headerlink\" title=\"HACK: Nokogiri Gem\"\u003e\u003c/a\u003eHACK: Nokogiri Gem\u003c/h5\u003e\u003cp\u003eThis one is hackish, but that’s the way I’ve found to make it work:\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003ebundle config build.nokogiri \u0026#34;--use-system-libraries --with-xml2-include=/usr/local/opt/libxml2/include/libxml2\u0026#34;\u003c/code\u003e\u003c/pre\u003e\n\u003ch5 id=\"HACK-PG-Gem\"\u003e\u003ca href=\"#HACK-PG-Gem\" class=\"headerlink\" title=\"HACK: PG Gem\"\u003e\u003c/a\u003eHACK: PG Gem\u003c/h5\u003e\u003cp\u003eAnother hackish one:\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003esudo env ARCHFLAGS=\u0026#34;-arch x86_64\u0026#34; gem install pg\u003c/code\u003e\u003c/pre\u003e\n\u003ch5 id=\"Other-Gems\"\u003e\u003ca href=\"#Other-Gems\" class=\"headerlink\" title=\"Other Gems\"\u003e\u003c/a\u003eOther Gems\u003c/h5\u003e\u003cp\u003eFinally, within the metasploit folder, use bundle to install the remaining gems:\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003ebundle install\u003c/code\u003e\u003c/pre\u003e\n\u003ch5 id=\"HACK-Fix-the-‘robots’-Gem-Permissions\"\u003e\u003ca href=\"#HACK-Fix-the-‘robots’-Gem-Permissions\" class=\"headerlink\" title=\"HACK: Fix the ‘robots’ Gem Permissions\"\u003e\u003c/a\u003eHACK: Fix the ‘robots’ Gem Permissions\u003c/h5\u003e\u003cp\u003eIf you will run msf as a normal user, you will have trouble with the robots gem, unless you fix its permissions:\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003esudo chmod o+r /Library/Ruby/Gems/2.0.0/gems/robots-0.10.1/lib/robots.rb\u003c/code\u003e\u003c/pre\u003e\n\u003ch5 id=\"Create-the-Database-Configuration\"\u003e\u003ca href=\"#Create-the-Database-Configuration\" class=\"headerlink\" title=\"Create the Database Configuration\"\u003e\u003c/a\u003eCreate the Database Configuration\u003c/h5\u003e\u003cpre\u003e\u003ccode\u003evim /usr/local/share/metasploit-framework/config/database.yml\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003ePaste the following text:\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003eproduction:\n adapter: postgresql\n database: msf\n username: msf\n password: PUT_YOUR_POSTGRESQL_PASSWORD_HERE\n host: 127.0.0.1\n port: 5432\n pool: 75\n timeout: 5\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003e( keep the spacing since \u003cstrong\u003eyml\u003c/strong\u003e files are “space sensitive” )\u003c/p\u003e\n\u003cp\u003eAnd update your environment:\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003esource /etc/profile\nsource ~/.bash_profile\u003c/code\u003e\u003c/pre\u003e\n\u003ch2 id=\"Done\"\u003e\u003ca href=\"#Done\" class=\"headerlink\" title=\"Done\"\u003e\u003c/a\u003eDone\u003c/h2\u003e\u003cp\u003eWell, you’re ready to go now, enjoy metasploit on OSX :)\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003emsfconsole\u003c/code\u003e\u003c/pre\u003e\n\u003c/div\u003e",
  "Date": "2015-01-16T17:31:00Z",
  "Author": "Simone Margaritelli"
}